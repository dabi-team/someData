1
2
0
2

r
p
A
9
1

]
I

A
.
s
c
[

1
v
2
9
4
9
0
.
4
0
1
2
:
v
i
X
r
a

Automatic glissade determination through a
mathematical model in electrooculographic
records

Camilo Vel´azquez-Rodr´ıguez1, Rodolfo Garc´ıa-Berm´udez2, Fernando
Rojas-Ruiz3, Roberto Becerra-Garc´ıa4 and Luis Vel´azquez5

1 Universidad de Holgu´ın, Grupo de Procesamiento de Datos Biom´edicos (GPDB),
80100, Holgu´ın, Cuba
cvelazquezr@uho.edu.cu
2 Universidad T´ecnica de Manab´ı, Facultad de Ciencias Inform´aticas, Manta,
Ecuador
rodgarberm@gmail.com
3 Universidad de Granada, Departamento de Arquitectura y Tecnolog´ıa de
Computadores , ETS Ing. Inform´atica y Telecomunicaci´on, Granada, Espa˜na
frojas@ugr.es
4 Universidad de M´alaga, M´alaga, Espa˜na
idertator@gmail.com
5 Centro para la Investigaci´on y Rehabilitaci´on de Ataxias Hereditarias, Holgu´ın,
Cuba
cirahsca2@cristal.hlg.sld.cu

Abstract. The glissadic overshoot is characterized by an unwanted type
of movement known as glissades. The glissades are a short ocular move-
ment that describe the failure of the neural programming of saccades to
move the eyes in order to reach a speciﬁc target. In this paper we develop
a procedure to determine if a speciﬁc saccade have a glissade appended
to the end of it. The use of the third partial sum of the Gauss series
as mathematical model, a comparison between some speciﬁc parameters
and the RMSE error are the steps made to reach this goal. Finally a
machine learning algorithm is trained, returning expected responses of
the presence or not of this kind of ocular movement.

1

Introduction

Several events are present in electrooculographic (EOG) records, classiﬁed as
ocular movements according to diﬀerent criteria. The saccades and ﬁxations are
two of the most studied events due to the clinical meaning of those signals. The
saccades are fast and accurate ballistic eye movements used in repositioning the
fovea to a new location in the visual environment [1] and the ﬁxations are present
when an object of interest is held approximately stable on the ocular retina [2].
There are various tests that can be realized in order to evaluate a certain
condition of a subject, such as saccadic test, smooth pursuit test, horizontal and
vertical calibration, etc. The saccadic tests are those related with the capture

 
 
 
 
 
 
of saccades and ﬁxations as main events. This kind of test is developed in the
presence of a stimulus that the subject had to follow with the eyes.

The EOG records have been studied through several years and by many au-
thors. Some characteristics of this kind of biological record that can be observed
without much eﬀort are the level of noise that comes with the signal, amplitude
and length of the record. Other characteristics are inherent to this signal, so it is
necessary to apply diﬀerent techniques of signal processing to be able of studying
it, for instance, the exact points of several events, the velocity in any point of the
record and the independent components responsible of the generation of events
like the saccades mentioned before.

The exact determination of the events present in EOG records is a complex
task due to factors such as the error in the measure of the signal, the presence
of unwanted noise captured from several sources and the peculiar dynamics of
a very fast kind of movement such as the oculars. However, investigations like
[3,4,5,6] propose procedures for the identiﬁcation of saccades and ﬁxations in
EOG records.

The work developed by Becerra et. al in [7] reinforce the use of machine
learning models that works in a very eﬃcient way in tasks like the determination
of events. The investigations mentioned previously allow the extraction of events
like saccades and ﬁxations from EOG records, even with the presence of noise.
However, in the majority of saccades a phenomenon known as glissadic overshoot
happens, which is disregarded and not considered in the segmentation of the
signal.

The glissadic overshoot is characterized by an unwanted type of movement
known as glissades. The glissades are a short ocular movement that describe the
failure of the neural programming of saccades to move the eyes in order to reach
a speciﬁc target. After the target is passed, comes a rectiﬁcation of the eyes with
the objective to ﬁnally reach the desired goal. The steps mentioned above as
failure and rectiﬁcation are summarized by the glissade [8].

One of the ﬁrst authors that investigated this type of phenomena was Terry
Bahill. In [8] he hypothesized that this kind of ocular movement is generated
by a mismatch between the neural components that generate the saccades, the
pulse and step. Also, in [9] he concludes that from the biological point of view,
this movement appended in the end of saccades is caused by fatigue in the
saccadic eye movement system. The use of computational models allow the study
of overshoot in saccadic eye movements as is exposed in [10]. One of the reasons
that provoke the mismatch between the neural signals could be pulse width
errors as mentioned in [11].

As the glissadic overshoot is appended after the saccade ﬁnalize, sometimes
it is considered as part of the saccade movement, which provoke an extended
signal larger than the standard saccadic movement. This phenomenon also pro-
vokes a shorter ﬁxation caused by the extension of saccade. When a numerical
diﬀerentiation to the EOG record with glissades is applied, the velocity proﬁle
obtained shows a minor movement after the saccade, as shows the Figure 1.

Fig. 1. Numerical diﬀerentiation of a saccade with a glissade appended.

In a previous work [12], we describe a mathematical model that make a very
good approximation of the velocity proﬁle of a saccade. Through the realization
of this work we use a modiﬁed version of the previous mathematical model, with
the main objective of characterizing the glissadic phenomena.

The knowledge of the meaning of the parameters in the used model, will
allow us analyze those related with the glissadic phenomena. The values of these
parameters and the presence or not of glissades will let the construction of a
dataset in order to train a classiﬁcation machine learning algorithm. The model
trained will classify new saccades with the presence or not of glissades and will
give a tool for the researchers to know how to determine a better segmentation
of events.

In section 2 we describe how we did the acquisition of the data, as well the
mathematical model that we use to describe both, the saccade and glissade. The
section 3 is dedicated to the presentation of results and a discussion of it. Finally
the conclusions resume all the work done in this investigation.

2 Materials y Methods

The electrooculographic records were obtained by the medical staﬀ of the Cen-
tre for the Research and Rehabilitation of the Hereditary Ataxias (CIRAH) at
Holgu´ın, Cuba. A two-channel electronystagmograph (Otoscreen, Jaeger-Toennies,

020406080Time (ms)0100200300400500Amplitude (/s2)Saccade Velocity ProfileGlissade MovementHochberg, Germany) was used to record saccadic ocular movements. The stimu-
lus and patient response data were automatically stored in ASCII ﬁles as comma
separated values (CSV) by the Otoscreen electronystagmograph, according to its
user manual speciﬁcations.

Electrooculographic study from several subjects were captured at a sampling
rate of 200 Hz with a bandwith of 0.02 to 70 Hz, for a total of 163 study made.
Each one of the study have at least tests of 10◦, 20◦ and 30◦ of visual stimulation,
therefore containing several records captured to the same subject. Typically,
saccadic record have at least one horizontal channel and one stimulus signal.

After the records were captured, each one of the tests included in every record
was processed. In a ﬁrst step, the signals recorded were ﬁltered in order to remove
the unwanted noise that carry many of these tests. The median ﬁlter has proven
to be very robust in eliminating high frequency signal noise while preserving
sharp edges. A study carried out by Juhola in 1991 demonstrated that this
kind of ﬁlters is appropriate for eye movements signals [13]. For eliminating non
desired noise present in the signals we use a median ﬁlter with a window size
of 15 samples obtaining good results. This is accomplished using the medﬁlt
function of the scientiﬁc Python library SciPy [14].

To obtain the velocity proﬁle of the ﬁltered signals, it was applied one of the
Lanczos diﬀerentiators, speciﬁcally Lanczos 11 or Lanczos of 11 points, due that
this kind of numerical diﬀerentiators use curve ﬁtting instead of interpolation in
their procedure [15]. The following equation shows the mathematical description
of Lanczos 11:

f (cid:48) ≈

f1 − f−1 + 2(f2 − f−2) + 3(f3 − f−3) + 4(f4 − f−4) + 5(f5 − f−5)
110h

(1)

where h is the step of sampling, which in the obtained records has a value of

h = 4.88ms.

The velocity proﬁle obtained as a result of the application of Lanczos 11,
present positive and negative values representing in a physical way the direc-
tion of the saccadic movement. In order to standardize all the velocity proﬁles
obtained, the absolute value function provided natively by Python and also
included in the numerical library of this programming language named NumPy,
was applied to the diﬀerentiated signal [16]. One of the velocity proﬁles obtained
is shown in the Figure 2.

As can be seen in the Figure 2, there are several velocity proﬁles in a signal,
so it is necessary to split the signals according to the diﬀerent events that occur
in it, in order to get every proﬁle extracted and ready to be modeled. With the
goal of separating the velocity proﬁles we use a ﬁndpeaks MATLAB similar
function in the Python library. The mentioned function is called peakutils and
is founded in the web repository of Python located in http://pypi.python.org.

The Figure 3 shows the peaks, marked as red exes, detected through the
use of the peakutils library mentioned before. To ﬁnd the start points we use
an iterative algorithm that start in the maximum peaks detected and in every
iteration go backward, after reaching a deﬁned threshold, we ﬁnd the minimum

Fig. 2. Velocity proﬁle as result of Lanczos 11 and the abs function application.

Fig. 3. Peaks of the velocity proﬁles detected by the use of peakutils module.

010002000300040005000600070008000Time (ms)0100200300400500Amplitude (/s2)10002000300040005000600070008000Time (ms)0100200300400500Amplitude (/s2)in the population of points near to the stopping criteria. The results of this
procedure are shown in the Figure 4.

Fig. 4. Start points detected using the backward procedure.

Detected the start points for every velocity proﬁle in the diﬀerentiated signal,
we can split the latest from start point to the next start point and obtain a part
of the signal similar to the one showed in the Figure 1. The last velocity proﬁle
is chosen until the end of the signal.

A velocity proﬁle extracted from the diﬀerentiated electrooculographic test,
could be modeled for various equations that describe this kind of shape. In
a previous work [12] we compare several mathematical models in the task of
describing the velocity proﬁle. The best model in that work was the second
partial sum of the Gauss series or gauss2 for short, due to have one of the lower
errors in modeling the data, only surpassed by the third partial sum of the Gauss
series or gauss3.

We choose in [12] gauss2 over gauss3 because of the presence of 3 less param-
eters to be optimized and similar ﬁtting results. However, in this new scenario,
we need to use gauss3 because not only the velocity proﬁle will be ﬁtted, but
also the glissade signal appended in the end of the latest. The third partial sum
of the Gauss series is described as follows:

240026002800300032003400360038004000Time (ms)0100200300400500Amplitude (/s2)gauss3(x) =

(cid:104)

−(cid:0) x−bi
ci

(cid:1)2(cid:105)

3
(cid:88)

i=1

aie

(2)

where ai the amplitude, bi is the location of the centroid and ci is related
to the width of every gaussian peak that is optimized in order to get a good
approximation of the model. The most signiﬁcant parameters for the purpose of
this work are b1, b2 and b3. These parameters give the location of centers of each
gaussian peak, it is very important to analyze the behavior of this parameters
because they can reﬂect the presence or not of glissades in a velocity proﬁle.

The signiﬁcance of the parameters involved in the mathematical modeling will
present diﬀerent values according to ﬁtting made. However, if the error in the
ﬁtting is large, the meaning of bi as the parameters taken in consideration, loose
validity. The standard error of regression, also known as Root Mean Squared
Error (RMSE) is one of the statistical metrics more used in modeling procedures.
The Equation 3 gives an insight of this metric:

(cid:118)
(cid:117)
(cid:117)
(cid:117)
(cid:116)

n
(cid:88)

i=1

(yi − ˆyi)2

n

RM SE =

(3)

where n is the amount of points in the data, yi represent the ith point of the
data and ˆyi is the ith value estimated by the model in evaluation. Values closer
to 0 in this metric mean that the ﬁt is more useful for prediction.

3 Results

The 163 study captured, contain 904 electrooculographic records that were used
to extract the velocity proﬁles that conform the available data in this work. After
the application of the mentioned procedure in the before section, we extracted
25853 velocity proﬁles from the EOG records. These data were partitioned, tak-
ing 13101 velocity proﬁles to realize the mathematical curve ﬁtting by the use
of gauss3, representing the 50.7% of the available data.

As shows the Equation 2, the parameters bi locate the center of each one of
the gaussian peaks. We hypothesize that if the error of the curve ﬁtting is low
and the saccade present glissade at the end of it, the gauss3 curve will ﬁt this
rectiﬁcation phenomena, as shows the Figure 5.

The error in the curve ﬁtting that shows the Figure 5 was 21.8, meaning
that it was not an excellent modeling, but good enough to partially describe
the glissadic curve as shows the mentioned ﬁgure. This visual perception comes
more clearly analyzing the chosen parameters bi with values 48.9, 24.8 and 52.8.
The parameters values manifest a separation between one of the values and the
other two that are very close to each other.

Making this analysis, a procedure can be formulated for determining the
presence or not of glissadic phenomena, due to the values of the selected param-
eters. This procedure is as follow: analyze the values of the bi and calculate the

Fig. 5. Velocity proﬁle with glissade, ﬁtted using gauss3 as model.

absolute values of their diﬀerences then, inspect if the three diﬀerences are lower
than a deﬁned threshold in order to return an unmismatch response, any other
case contain the presence of glissades accordingly to the gauss3 mathematical
model.

With the data collected by diﬀerent responses we are able to form a training
dataset for a classiﬁcation algorithm. This dataset will contain the RMSE error
result of the ﬁtted procedure, each one of the parameters bi and the response of
the presence or not of glissades as the class of this formed dataset.

We use machine learning tools to solve the classiﬁcation task to determine
if a saccade have the presence of glissades or not. Because we are using Python
technologies, we selected Scikit-Learn as machine learning library, speciﬁcally
we evaluate four diﬀerent models: Support Vector Machines [17], CART decision
trees [18], K-Nearest Neighbors [19], and an ensemble method known as Random
Forest [20].

Each classiﬁcation algorithm was trained using a technique known as cross
validation, we use the folding equals to 10, meaning that the dataset is sliced
in 10 equals parts, one for training and the rest for evaluation, exchanging the
trained part in every evaluation. As a ﬁnal score of the algorithm we ﬁnd the
mean of trained values in each fold, also we ﬁnd the standard deviation in order
to know the total spectrum of the models score. With the goal of observe the
behavior of each model, we apply the detailed previous procedure 50 times as
can be seen in the Figure 6.

It is important to mention that we use the classiﬁcation algorithms with their
default values, except from the K-Nearest Neighbors, being modiﬁed the number
of neighbors in each iteration. Also, it can be seen in the Figure 6 a better general
performance by the ensemble method known as Random Forest, the increment

1000100200300400Time (ms)0100200300400500Amplitude (◦/s2)Velocity profileGauss3 fittedFig. 6. Classiﬁcation algorithms training responses.

of neighbors in the K-Nearest Neighbors does not increase the performance of
this method, on the other hand, make it worse. The best performance of KNN
is when the number of neighbors is 4. The CART decision tree, has a good
performance also, but not so good like the Random Forest procedure. In the
case of the Support Vector Machine algorithm remains invariable in the value of
94.5 of exactitude, due to the invariability of its parameters.

We choose the Random Forest classiﬁcation trained model due to the presence
of the highest scores in the training task, like shows the Figure 6 some values
surpass the 0.96 score, and also the majority of the scores are higher than the
0.95 value. The model trained can be used to evaluate new velocity proﬁles that
were excluded from the training procedure.

The 49.3% of the available velocity proﬁles was not considered in the training
step in order to realize testing and evaluation of the machine learning model
chosen by the authors. This velocity proﬁles are not classiﬁed with the presence
or not of glissades, so in order to evaluate the trained model it is necessary to
select a portion of the data randomly and manually, classify if it has glissades or
not. After obtaining the response of the model, it can be evaluated against the
manual classiﬁcation.

From the total of velocity proﬁles remaining, 100 records were chosen ran-
domly, following this random process a normal distribution. A visual inspection
was made in order to assign a class to the velocity proﬁles chosen. The objec-
tive is to know the presence or not of glissades, so a binary class can be formed
assigning the value of 1 to the ﬁrst statement and 0 to the other.

A curve ﬁtting procedure was applied to the 100 records selected in order to
obtain the RMSE metric and the bi parameters mentioned before. These four
collected values will serve as input to the trained Random Forest model. The

01020304050Iterations0.910.920.930.940.950.960.97ScoreSVC ScoresDecisionTree ScoresRandomForest ScoresKNeighbors Scoresresponse of the model was in correspondence with the expected values stated
in the manual procedure. Many of the responses were correct, even in some of
them, the trained model returned an answer better than the human prediction.

4 Conclusions

This contribution exposes the deﬁnition of a natural phenomenon known as
glissadic overshoot. This kind of phenomenon is present in most of the saccadic
ocular movements, speciﬁcally at the end of it, and it is supposed that fatigue
is one of the main reasons for the presence of this particular movement.

Also, a computational procedure to automatically determine the glissades in
a velocity proﬁle signal is proposed. The computational algorithm involves the
mathematical modeling by the use of the third partial sum of the Gauss series,
due to the great similarity that this model has with the data analyzed.

The third partial sum of the Gauss series or gauss3 possesses several pa-
rameters that describe diﬀerent parts of the optimized curve. Analyzing the bi
parameters of gauss3, we can deﬁne the presence or not of the glissadic phenom-
ena, due to the meaning of this speciﬁc parameters that are the centers of the
gaussian curves. Also, the RMSE error of each optimization made was measured,
in order to know the validity of the values.

An algorithm was developed, that given certain threshold and the values
of the bi, can determine the presence or not of glissades. Obtained the RMSE
error, the mentioned parameters and the class of the data, we built a dataset in
order to train a machine learning classiﬁcation algorithm. For this purpose four
machine learning paradigms are compared: Support Vector Machines, K-Nearest
Neighbors, Random Forest and Classiﬁcation and Regression Trees, resulting the
Random Forest procedure with the better performance.

The trained model can automatically predict with great performance if a
determined saccade has appended glissades or not. Many of the responses were
in correspondence with the expected values and in others cases improve the
human prediction made about certain decisions.

Acknowledgements: This work has been partially supported by the project

TIN2015-67020-P of the Spanish Ministry of Economy and Competitiveness

References

1. L. Goﬀart, “Saccadic Eye Movements,” in Encyclopedia of Neuroscience, pp. 437–

444, Oxford: Academic Press, 2009.

2. K. Lukander, Measuring gaze point on handheld mobile devices. PhD thesis,

Helsinki University of Technology, Helsinki, Finland, 2004.

3. P. Inchingolo and M. Spanio, “On the identiﬁcation and analysis of saccadic eye
movements. A quantitative study of the processing procedures,” IEEE Transac-
tions on Biomedical Engineering, vol. 32, no. 9, pp. 683–695, 1985.

4. M. Juhola, V. J¨antti, I. Pyykk¨o, M. Magnusson, L. Schal´en, and M. ˚Akesson,
“Detection of saccadic eye movements using a non-recursive adaptive digital ﬁlter,”
Computer Methods and Programs in Biomedicine, vol. 21, pp. 81–88, Nov. 1985.
5. H. Wyatt, “Detecting saccades with jerk,” Vision Research, vol. 38, no. 14,

pp. 2147–2153, 1998.

6. D. D. Salvucci and J. H. Goldberg, “Identifying ﬁxations and saccades in eye-
tracking protocols,” (Palm Beach Gardens, Florida, United States), pp. 71–78,
ACM, 2000.

7. R. Becerra-Garc´ıa, R. Garc´ıa-Berm´udez, G. Joya-Caparr´os, A. Fern´andez-Higuera,
C. Vel´azquez-Rodr´ıguez, M. Vel´azquez-Mari˜no, F. Cuevas-Beltr´an, F. Garc´ıa-
Lagos, and R. Rodr´ıguez-Labrada, “Non Spontaneous Saccadic Movements Iden-
tiﬁcation in Clinical Electrooculography Using Machine Learning,” in Advances in
Computational Intelligence (I. Rojas, G. Joya, and A. Catala, eds.), no. 9095 in
Lecture Notes in Computer Science, pp. 56–68, Springer International Publishing,
June 2015.

8. A. T. Bahill, M. R. Clark, and L. Stark, “Glissades–eye movements generated by
mismatched components of the saccadic motoneuronal control signal,” Mathemat-
ical Biosciences, vol. 26, no. 3-4, pp. 303–318, 1975.

9. A. Bahill and L. Stark, “Overlapping saccades and glissades are produced by fatigue
in the saccadic eye movement system,” Experimental Neurology, vol. 48, pp. 95–
106, July 1975.

10. A. T. Bahill, M. R. Clark, and L. Stark, “Computer simulation of overshoot in sac-
cadic eye movements,” Computer Programs in Biomedicine, vol. 4, no. 4, pp. 230–
236, 1975.

11. A. Bahill, F. Hsu, and L. Stark, “Glissadic overshoots are due to pulse width

errors,” Archives of Neurology, vol. 35, no. 3, pp. 138–142, 1978.

12. R. Garc´ıa-Berm´udez, C. Vel´azquez-Rodr´ıguez, F. Rojas, M. Rodr´ıguez, R. Becerra-
Garc´ıa, M. Vel´azquez-Mari˜no, J. Arteaga-Vera, and L. Vel´azquez, “Evaluation of
Fitting Functions for the Saccade Velocity Proﬁle in Electrooculographic Records,”
in Advances in Computational Intelligence (I. Rojas, G. Joya, and A. Catala, eds.),
no. 9095 in Lecture Notes in Computer Science, pp. 592–600, Springer International
Publishing, June 2015.

13. M. Juhola, “Median ﬁltering is appropriate to signals of saccadic eye movements,”

Computers in Biology and Medicine, vol. 21, no. 1-2, pp. 43–49, 1991.

14. Jones, E, Oliphant, T, and Peterson, P, “SciPy: Open source scientiﬁc tools for

Python,” 2001.

15. R. A. Becerra Garc´ıa, Plataforma de procesamiento de electrooculogramas. Caso de
estudio: pacientes con Ataxia Espinocerebelosa tipo 2. Master Thesis, Universidad
de Holgu´ın, 2013.

16. Oliphant, T, “Python for scientiﬁc computing,” Computing in Science & Engineer-

ing, vol. 9, no. 3, pp. 10–20, 2007.

17. Cortes, C and Vapnik, V, “Support-vector networks,” Machine Learning, vol. 20,

no. 3, pp. 273–297, 1995.

18. Breiman, L, Friedman, J, Stone, C. J, and Olshen, R.A, “Classiﬁcation and regres-

sion trees,” CRC press, 1984.

19. Silverman, B.W and Jones, M.C, “An Important Contribution to Nonparametric
Discriminant Analysis and Density Estimation,” International Statistical Review,
vol. 57, no. 3, pp. 233–238, 1989.

20. L. Breiman, “Random Forests,” Machine Learning, vol. 45, no. 1, pp. 5–32, 2001.

