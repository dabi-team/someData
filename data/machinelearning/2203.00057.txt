2
2
0
2

b
e
F
8
2

]
h
p
-
p
e
h
[

1
v
7
5
0
0
0
.
3
0
2
2
:
v
i
X
r
a

Diﬀerentiable Matrix Elements with MadJax

Lukas Heinrich
Technical University of Munich

E-mail: lukas.heinrich@cern.ch

Michael Kagan
SLAC National Accelerator Laboratory

E-mail: makagan@slac.stanford.edu

Abstract. MadJax is a tool for generating and evaluating diﬀerentiable matrix elements of
high energy scattering processes. As such, it is a step towards a diﬀerentiable programming
paradigm in high energy physics that facilitates the incorporation of high energy physics domain
knowledge, encoded in simulation software, into gradient based learning and optimization
pipelines. MadJax comprises two components: (a) a plugin to the general purpose matrix element
generator MadGraph that integrates matrix element and phase space sampling code with the
JAX diﬀerentiable programming framework, and (b) a standalone wrapping API for accessing the
matrix element code and its gradients, which are computed with automatic diﬀerentiation. The
MadJax implementation and example applications of simulation based inference and normalizing
ﬂow based matrix element modeling, with capabilities enabled uniquely with diﬀerentiable matrix
elements, are presented.

1. Introduction
Matrix Element (ME) Monte Carlo generators provide a theoretical description of diﬀerential
cross sections for high-energy particle scattering processes encapsulated in software. Theoretical
calculations are encoded in stochactic simulators to allow for Monte Carlo integration and
sampling of scattered particle conﬁgurations. Together with parton-shower simulations of QCD
radiation processes, and models of hadronization, these programs can be used to sample particle
interactions and ﬁnal state particle kinematic conﬁgurations for the experimental analysis of
collider data, such as data from the LHC for future colliders. However, while collider physics data
analysis typically relies on large simulated datasets for statistical inference, simulators do not
retain event-by-event information on the dependence of simulated predictions on input parameters
or variables. Ultimately, this limits the ways in which researchers can use these simulators.

With MadJax, access to the dependence of simulated predictions on inputs is enabled through
gradients. MadJax is a diﬀerentiable programming (DP) [1] approach to the simulation of matrix
elements, which combines the python-based code generation of the MadGraph matrix element
generator [2] with the JAX DP framework [3]. In DP, software is written in, or transformed
into, diﬀerentiable code via the use of automatic diﬀerentiation (AD) [4], an algorithmic way to
eﬃciently evaluate derivatives of computer programs. This approach is ﬂexible and optimizable;
diﬀerentiable HEP software and machine learning (ML) tools can be mixed, for instance to use
ML surrogates of non-diﬀerentiable computations, and can be jointly optimized to improve speed

 
 
 
 
 
 
and prediction accuracy. HEP simulation tools, and the knowledge they encode, can be used as
physics prediction engines directly within ML pipelines for developing physics-informed ML tools.

MadJax enables the evaluation of MEs and their
MadJax also includes
gradients automatically.
a diﬀerentiable implementation of the RAMBO
algorithm [5], which facilitates transforming particle
conﬁgurations
into phase space points on a
hypercube for aiding sampling algorithms. An
example of the e+e− → h → ZZ → 4l
matrix element and MadJax-computed gradients
with respect to the Z boson mass is seen in Fig. 1.
To the best of our knowledge, MadJax is the ﬁrst
diﬀerentiable matrix element generator.

Related work on AD / DP in physics are
discussed below. Sec. 2 presents the implementation,
usage, and performance of MadJax. Sec. 3 presents
applications of MadJax in case studies of simulation-
based inference and ME modeling with ML.

Figure 1: Matrix element M(r|MZ) for the
process e+e− → H → ZZ(∗) → eeµµ and
its gradients evaluated by MadJax at the
phase space point r = [0.2]8

1.1. Related Work
Automatic diﬀerentiation [4, 6], and its use in gradient based optimization, is ubiquitous in ML,
statistics, and applied math. AD uses the chain rule to evaluate derivatives of a function that is
represented as a computer program. AD takes as input program code and produces new code
for evaluating the program and derivatives. AD typically builds a computational graph, or a
directed acyclic graph of mathematical operations applied to an input. Gradients are deﬁned for
each operation of the graph, and the total gradient can be evaluated from input to output, called
forward mode, and from output to input, called reverse mode or backpropagation in ML. AD is
backbone of ML / DP frameworks like TensorFlow [7], JAX [3], and PyTorch [8].

In HEP, AD has been used in histogram ﬁtting in pyHF [9, 10], and Neos [11] builds on pyHF
to enable joint histogram ﬁtting and analysis optimization. For modeling parton distribution
functions (pdf) used by matrix element generators, Ref. [12] implemented the NNPDF software
in TensorFlow to enable to fast evaluation on GPUs. More recently, ﬁtting of neural network
pdf models implemented in TensorFlow has been explored by the NNPDF collaboration [13].
Concurrent with our work, MadFlow [14] has explored using a TensorFlow backend for MadGraph
for GPU acceleration enabled but did not explore AD capabilities.

Outside of HEP, the development of diﬀerentiable physics simulators is an active area of research
in ML and scientiﬁc computing. The growing body of examples includes: Rigid body dynamics
[15, 16, 17, 18, 19, 20] and soft-body [21, 22, 23] simulators have been used in reinforcement
learning, robotics, optimization, and control problems. Diﬀerentiable light transport and Monte
Carlo ray tracing is used in rendering and graphics [24, 25, 26] including neural rendering work
like NeRF [27]. Diﬀerentiable simulation of ﬂuid dynamics, for prediction, control, and optimizing
solutions of PDEs like Navier-Stokes, are an active research area [28, 29, 30], as are diﬀerentiable
molecular dynamics simulations [31, 32] for computational condensed matter physics.

2. Implementation
MadGraph is a tool for the computation of matrix elements and event generation at the parton
level and is widely used at the LHC. As a general purpose tool, MadGraph receives as input a given
physics transition, i.e. the desired input and output particles, and dynamically compiles a list of
hard processes for which matrix elements M(x) need to be computed. It then generates code for
matrix elements in several possible target languages. The most commonly used ones are C++ and

1. Generation:

generate p p > t t~, t > b udsc udscx , t~ > b~ udsc udscx
output madjax generated_ttbar
set auto_update 0

2. Evaluation:

import madjax
mj = madjax.MadJax('generated_ttbar')
E_cm = 14000 #GeV
process = 'Matrix_1_gg_ttx_t_budx_tx_bxdux'
matrix_element = mj.matrix_element(E_cm,process)

parameters = ('mass',6): 173.0 #set top mass
phasespace_coords = [0.1]*14 #14D phasespace

val, grad = matrix_element(parameters,phasespace_coords)
grad[('mass', 6)] #gradient wrt top mass

Figure 2: Example Usage of the MadJax code generation and evaluation API

FORTRAN due to their high evaluation performance. A Python output option is also available, but
its performance as a dynamically interpreted language is much reduced. The Matrix Elements
are themselves calculated based on helicity amplitudes as generated by ALHOA [33].

In MadJax, integration with JAX is performed during MadGraph automated matrix element code
generation. To do so, several challenges had to be addressed, including: (a) control ﬂow, such as
conditional and loop statements, required adaptation to allowable control ﬂow paradigms for the
LAX backend of JAX, (b) some components required adaptation to the functional programming
paradigm of JAX, and (c) some numerical methods required custom derivative implementation, such
as implicit diﬀerentiation for root-ﬁnding. Code vectorization with JAX’s vmap{...} functionality
was use to increase computational speed and eﬃciency. For example, loop statements, such as
loops over helicity states, were vectorized where possible. Multi-event phase space sampling, and
ME and ME gradient evaluation, were enabled with vectorization. MadJax inherits both CPU
and GPU compatibility from JAX. However, many of the computations in MadJax generated code
do not have optimized GPU kernels and GPU evaluation did not result in signiﬁcant speed-up.

2.1. Usage
MadJax oﬀers an easy-to-use API and transparently connects to the plugin mechanism of MadGraph.
It comprises two separate sub-packages: (1) a standard MadGraph plugin to generate matrix element
code in the JAX language and must be run within the MadGraph environment, and (2) a standalone
wrapping API around the generated code which can be used independently from MadGraph. The
ﬁrst stage is achieved by adding the MadJax plugin to the PLUGINS directory of MadGraph and
requesting the MadJax output in the run card via mg5_aMC --mode=madjax_me_gen run.mg5.
This step produces a directory with generated, diﬀerentiable MadJax code, which is then accessible
through the MadJax python API. An example listing is shown in Figure 2.

The ME function allows the user to explicitly pass parameter values through a mapping from
SLHA block identiﬁers to parameter values (here: top quark mass). By default the MadJax returns
gradients with respect to the parameters, but gradients with respect to the phase-space point can
be requested as well. The phasespace point is identiﬁed through a set of hypercube coordinates.

Performance

Evaluation Mode
JAX no-JIT
5.1s / evaluation
JAX JIT
15.9s / 100k evaluations
JAX JIT + vmap
5.6s / 100k evaluations
Standalone C++ 0.8s / 100k evaluations

Output

value and gradient
value and gradient
value and gradient
value only

Table 1: Performance Evaluations for a top quark decay example process

2.2. Performance
While the implementation of MadJax makes heavy use of the Python export option, its performance
is signiﬁcantly better due to the use of built in just-in-time (JIT) compilation features of JAX. In
Table 1 we report performance results for the gluon-initiated ttbar production matrix element
(Matrix_1_gg_ttx_t_budx_tx_bxdux), in which a computation of the ME value and its gradients
via reverse-mode diﬀerentiation stays within an order or magnitude of the standalone C++ code
the MadGraph package produces. Here, the JIT compilation and vectorization (vmap) capabilities
of JAX provide a over 10,000x speedup over the non-compiled JAX code.

Several challenges were observed when using
JAX for AD integration. Most notably,
the
MadGraph generated code can contain control ﬂow
such as branching conditionals and loop statements
which are known to cause ineﬃciencies during
compute graph generation in JAX [34]. This can
be seen in Fig. 3 where JAX generates a massive and
complex compute graph even for the few hundred
lines of code describing the e+e− → t¯t → q ¯qbq ¯q¯b
process. The python code generated by MadGraph is
a near direct translation from the original FORTRAN
code, and is not well adapted for JIT compile time
code optimization in JAX. As a result, even the few
hundred lines of code generated by MadJax for this
process could take 10min or longer to compile.

Figure 3: Compute graph generated by
MadJax for the e+e− → t¯t → 6q process

3. Applications
Two case studies are presented below that show how the use of ME gradients can improve
HEP data analysis techniques. As MEs evaluate the diﬀerential cross section of a given particle
conﬁguration, they can be interpret as un-normalized1 probability density functions ˜p(x). With
MadJax, the gradients ∇x ˜p(x) can be computed, as can gradients of RAMBO transformations.

3.1. Mining Gold with Diﬀerentiable Simulators
An important use-case for automatic gradients of MEs as provided by MadJax is their use in
simulation-based inference [35] (SBI) techniques that require knowledge of score ∇θ log pME(z|θ)
variables, such as the ‘Mining Gold’ technique [36] for likelihood ratio (LR) estimation. Here
r(x, θ0, θ1) = p(x|θ0)/p(x|θ1) is approximated by a deep neural network ˆrφ(x, θ0, θ1) parametrized
by weights φ whose values are optimized through regression. While the true likelihood ratio
r(x, θ0, θ1) is intractable, which precludes the use of standard regression objectives such as mean
squared errors to the true value, it can be shown that regression to the joint likelihood ratio
r(x, z|θ0, θ1) yields a consistent estimator in the large-data limit. Here the joint LR acts as a “noisy
label” which is tractable to compute. This regression on the LR can be dramatically improved

1 The total cross section would be the normalizing constant

float64[4]gathergathersubfloat64[4]gathergathergathergathergathergathergathergathergatherfloat64[4]gathergathergathergathergathergathergathergathergatherint64[256,8]gathergathergathergathergathergathergathergatherfloat64[1,1]convert_element_typefloat64[1]convert_element_typefloat64[14]gathergathergathergathergathergathergathergathergathergathergathergathergathergatherfloat64[]sqrtmulmulmulmulmulfloat64[]divfloat64[]subfloat64[]sqrtaddfloat64[]sqrtinteger_powmulneinteger_powconvert_element_typeconvert_element_typeneinteger_powconvert_element_typeconvert_element_typefloat64[]sqrtmulfloat64[]mulfloat64[]sqrtsqrtsqrtsqrtconvert_element_typedivconvert_element_typeconvert_element_typemulconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typedivfloat64[]subfloat64[]subsqrtfloat64[]sqrtmulmulmulmulmulconvert_element_typeconvert_element_typefloat64[]divinteger_powdivdivmulmulfloat64[]divfloat64[]float64[]mulmulfloat64[]mulmulfloat64[]float64[]convert_element_typefloat64[]convert_element_typefloat64[]convert_element_typefloat64[]convert_element_typefloat64[]convert_element_typemulcomplex64[]mulmulmulmuldivcomplex64[]broadcast_in_dimnegbroadcast_in_dimconvert_element_typemulcomplex128[]negdivfloat64[]convert_element_typeconvert_element_typeconvert_element_typemulnegdivfloat64[]convert_element_typeconvert_element_typeconvert_element_typemuldivfloat64[]convert_element_typeconvert_element_typemulcomplex64[]convert_element_typeconvert_element_typedivconvert_element_typefloat64[]sqrtsqrtmulfloat64[]mulmuldivbroadcast_in_dimdivnegbroadcast_in_dimmulbroadcast_in_dimdivbroadcast_in_dimconvert_element_typedivconvert_element_typedivfloat64[]sqrtmulmulmulmulmulfloat64[]divfloat64[]subfloat64[]sqrtaddfloat64[]sqrtinteger_powmulfloat64[]sqrtmulfloat64[]mulconvert_element_typeconvert_element_typeconvert_element_typemulconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typedivfloat64[]subfloat64[]subsqrtfloat64[]sqrtmulmulmulmulmulconvert_element_typeconvert_element_typefloat64[]divinteger_powdivdivmulmulfloat64[]divfloat64[]float64[]mulmulfloat64[]mulmulfloat64[]float64[]convert_element_typefloat64[]convert_element_typefloat64[]convert_element_typefloat64[]convert_element_typefloat64[]convert_element_typemulcomplex64[]mulmulmulmuldivcomplex64[]negconvert_element_typemulcomplex128[]negdivfloat64[]convert_element_typeconvert_element_typeconvert_element_typemulnegdivfloat64[]convert_element_typeconvert_element_typeconvert_element_typemuldivfloat64[]convert_element_typeconvert_element_typemulcomplex64[]convert_element_typeconvert_element_typedivconvert_element_typemulfloat64[]mulint64[]ltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimcustom_jvp_call_jaxprfloat64[]custom_jvp_call_jaxprcustom_jvp_call_jaxprcustom_jvp_call_jaxprpowpowpowpowpowpowpowpowpowpowpowpowpowpowfloat64[]mulfloat64[]sqrtinteger_powaddaddsubdivinteger_powint64[]ltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectcondltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimfloat64[]mulsqrtinteger_powaddaddsubdivinteger_powint64[]ltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimfloat64[]mulsqrtinteger_powaddaddsubdivinteger_powint64[]ltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimfloat64[]mulsqrtaddaddsubdivfloat64[]integer_powmulfloat64[]integer_powdivfloat64[]mulfloat64[]addaddaddaddaddaddaddaddaddsubaddsubaddsubaddsubaddfloat64[]addaddsubaddsubaddsubaddsubcondinteger_powinteger_powmulinteger_powinteger_powinteger_powmulinteger_powinteger_powinteger_powmulinteger_powinteger_powinteger_powmulinteger_powsubsubmulfloat64[]mulfloat64[]divfloat64[]mulmulmulmulmulmulmulmulmulmulmulmulinteger_powsubfloat64[]submulinteger_powdivfloat64[]divfloat64[]integer_powsubfloat64[]submulinteger_powdivfloat64[]mulmulsubsubinteger_powmulinteger_powdivdivsubsubinteger_powmulinteger_powdivmulmulsubsubinteger_powmulinteger_powdivdivsubsubinteger_powmulinteger_powdivmulmulsubsubinteger_powmulinteger_powdivdivsubsubinteger_powmulinteger_powdivmulmulfloat64[]integer_powmulfloat64[]loginteger_powsubfloat64[]submulinteger_powdivfloat64[]mulfloat64[]convert_element_typeconvert_element_typeconvert_element_typeint64[]ltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]subfloat64[]integer_powmulsubfloat64[]sqrtmulmulint64[]ltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]cosgtinteger_powmulsubfloat64[]sqrtmulxla_callfloat64[]float64[]float64[]mulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimfloat64[]broadcast_in_dimconvert_element_typeconcatenategatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergatherscatterint32[]broadcast_in_dimbroadcast_in_dimdivint64[]int64[]convert_element_typebroadcast_in_dimdot_generaldot_generalmulsubgtgtxla_callfloat64[]sqrtdivfloat64[]submulmulint32[]broadcast_in_dimbroadcast_in_dimmuladdfloat64[]xla_callfloat64[]divfloat64[]float64[]xla_callxla_callxla_callxla_callfloat64[]float64[]xla_callxla_callxla_callxla_callfloat64[]addint64[]int64[]convert_element_typebroadcast_in_dimint32[]broadcast_in_dimbroadcast_in_dimaddint32[]broadcast_in_dimgatherscatterint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimgatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergathergathergathergathergathergathergatherscatterconvert_element_typeint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdpowfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathersubfloat64[]mulsubsubinteger_powmulinteger_powdivconvert_element_typeconvert_element_typeconvert_element_typeint64[]ltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]subfloat64[]integer_powmulsubfloat64[]sqrtmulmulint64[]ltaddselectltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]cosgtinteger_powmulsubfloat64[]sqrtmulxla_callfloat64[]float64[]float64[]mulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimfloat64[]broadcast_in_dimconvert_element_typeconcatenategatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergatherscatterint32[]broadcast_in_dimbroadcast_in_dimdivint64[]int64[]convert_element_typebroadcast_in_dimdot_generaldot_generalmulsubgtgtfloat64[]sqrtdivfloat64[]submulmulint32[]broadcast_in_dimbroadcast_in_dimmuladdfloat64[]float64[]divfloat64[]float64[]float64[]addint64[]int64[]convert_element_typebroadcast_in_dimint32[]broadcast_in_dimbroadcast_in_dimaddint32[]broadcast_in_dimgatherscatterint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimgatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergathergathergathergathergathergathergathergatherscatterconvert_element_typeint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdpowfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathersubmulsubsubinteger_powmulinteger_powdivconvert_element_typeconvert_element_typeconvert_element_typeint64[]ltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]subfloat64[]integer_powmulsubfloat64[]sqrtmulmulint64[]ltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]cosgtinteger_powmulsubfloat64[]sqrtmulxla_callfloat64[]float64[]float64[]mulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimfloat64[]broadcast_in_dimconvert_element_typeconcatenategatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergatherscatterint32[]broadcast_in_dimbroadcast_in_dimdivint64[]int64[]convert_element_typebroadcast_in_dimdot_generaldot_generalmulsubgtgtfloat64[]sqrtdivfloat64[]submulmulint32[]broadcast_in_dimbroadcast_in_dimmuladdfloat64[]float64[]divfloat64[]float64[]float64[]addint64[]int64[]convert_element_typebroadcast_in_dimint32[]broadcast_in_dimbroadcast_in_dimaddint32[]broadcast_in_dimgatherscatterint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimgatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergathergathergathergathergathergathergathergatherscatterconvert_element_typeint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdpowfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathersubmulsubsubinteger_powmulinteger_powdivconvert_element_typeconvert_element_typeconvert_element_typeint64[]ltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]subfloat64[]integer_powmulsubfloat64[]sqrtmulmulint64[]ltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]cosgtinteger_powmulsubfloat64[]sqrtmulxla_callfloat64[]float64[]float64[]mulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimfloat64[]broadcast_in_dimconvert_element_typeconcatenategatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergatherscatterint32[]broadcast_in_dimbroadcast_in_dimdivint64[]int64[]convert_element_typebroadcast_in_dimdot_generaldot_generalmulsubgtgtfloat64[]sqrtdivfloat64[]submulmulint32[]broadcast_in_dimbroadcast_in_dimmuladdfloat64[]float64[]divfloat64[]float64[]float64[]addint64[]int64[]convert_element_typebroadcast_in_dimint32[]broadcast_in_dimbroadcast_in_dimaddint32[]broadcast_in_dimgatherscatterint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimgatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergathergathergathergathergathergathergatherscatterconvert_element_typeint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdpowfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathersubmulsubsubfloat64[]mulfloat64[]divconvert_element_typeconvert_element_typeconvert_element_typeint64[]ltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]subfloat64[]integer_powmulsubfloat64[]sqrtmulmulint64[]ltaddselectint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]cosgtinteger_powmulsubfloat64[]sqrtmulxla_callfloat64[]float64[]float64[]mulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimfloat64[]broadcast_in_dimconvert_element_typeconcatenategatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergatherscatterint32[]broadcast_in_dimbroadcast_in_dimdivint64[]int64[]convert_element_typebroadcast_in_dimdot_generaldot_generalmulsubgtgtfloat64[]sqrtdivfloat64[]submulmulint32[]broadcast_in_dimbroadcast_in_dimmuladdfloat64[]float64[]divfloat64[]float64[]float64[]addint64[]int64[]convert_element_typebroadcast_in_dimint32[]broadcast_in_dimbroadcast_in_dimaddint32[]broadcast_in_dimgatherscatterint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimgatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergathergathergathergathergathergathergathergatherscatterint32[]broadcast_in_dimbroadcast_in_dimdot_generaladdfloat64[]powfloat64[]int64[]int64[]convert_element_typebroadcast_in_dimgathergathergathergathergathergathergathergathergatherint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddaddaddint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddaddaddint64[]convert_element_typeeqint64[]int64[]convert_element_typebroadcast_in_dimaddint64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimconcatenatefloat64[]broadcast_in_dimconvert_element_typereduce_maxsqrtmulfloat64[]eqdivdivconvert_element_typefloat64[]convert_element_typemulfloat64[]mulmulmulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]sqrtconvert_element_typeaddcomplex128[]convert_element_typecondint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegconvert_element_typemulcomplex128[]addconvert_element_typecomplex64[256]stop_gradientstop_gradientselectstop_gradientselectstop_gradientaddcomplex128[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]convert_element_typeeqeqeqeqeqeqeqeqltstop_gradientstop_gradientselectstop_gradientselectstop_gradientint32[]int32[]int32[]broadcast_in_dimint32[]broadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimconcatenateselectint32[]broadcast_in_dimint32[]broadcast_in_dimint32[]int32[]concatenatecomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimint32[]broadcast_in_dimgathergathergathergatherint64[]int64[]convert_element_typebroadcast_in_dimmulmulmulmulreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulmulmulmulreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulmulmulmulreshapereshapemulmulmulmulreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulmulmulmulreshapereshapemulmulmulmulreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeint64[]convert_element_typeeqint64[]int64[]convert_element_typebroadcast_in_dimaddint64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimconcatenatefloat64[]broadcast_in_dimconvert_element_typereduce_maxsqrtmulfloat64[]eqdivdivconvert_element_typefloat64[]convert_element_typemulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]sqrtconvert_element_typeaddcomplex128[]convert_element_typecondint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimconvert_element_typemulcomplex128[]addconvert_element_typecomplex64[256]stop_gradientstop_gradientselectstop_gradientselectstop_gradientaddcomplex128[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]convert_element_typeeqeqeqeqeqeqeqeqltstop_gradientstop_gradientselectstop_gradientselectstop_gradientint32[]int32[]int32[]broadcast_in_dimint32[]broadcast_in_dimconcatenatecomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimselectint32[]broadcast_in_dimint32[]broadcast_in_dimint32[]int32[]complex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimconcatenateint32[]broadcast_in_dimgathergathergathergatherint64[]int64[]convert_element_typebroadcast_in_dimnegnegreshapenegnegreshapeint64[]int64[]convert_element_typebroadcast_in_dimreshapereshapeint64[]int64[]convert_element_typebroadcast_in_dimreshapeint64[]int64[]convert_element_typebroadcast_in_dimreshapeint64[]int64[]convert_element_typebroadcast_in_dimmulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]int64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_diminteger_powaddint64[]int64[]convert_element_typebroadcast_in_diminteger_powaddint64[]int64[]convert_element_typebroadcast_in_diminteger_powsqrtbroadcast_in_dimconcatenatereduce_mineqfloat64[]convert_element_typecomplex64[256,4]gathergatherint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]convert_element_typeeqint64[]int64[]convert_element_typebroadcast_in_dimaddint64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimconcatenatefloat64[]broadcast_in_dimconvert_element_typereduce_maxsqrtmulfloat64[]eqdivdivconvert_element_typefloat64[]convert_element_typemulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]sqrtconvert_element_typeaddcomplex128[]convert_element_typecondint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegconvert_element_typemulcomplex128[]addconvert_element_typecomplex64[256]stop_gradientstop_gradientselectstop_gradientselectstop_gradientaddcomplex128[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]convert_element_typeeqeqeqeqeqeqeqeqltstop_gradientstop_gradientselectstop_gradientselectstop_gradientint32[]int32[]int32[]broadcast_in_dimint32[]broadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimconcatenateselectint32[]broadcast_in_dimint32[]broadcast_in_dimint32[]int32[]concatenatecomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimint32[]broadcast_in_dimgathergatherint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeint64[]convert_element_typeeqint64[]int64[]convert_element_typebroadcast_in_dimaddint64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimconcatenatefloat64[]broadcast_in_dimconvert_element_typereduce_maxsqrtmulfloat64[]eqdivdivconvert_element_typefloat64[]convert_element_typemulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]sqrtconvert_element_typeaddcomplex128[]convert_element_typecondint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimconvert_element_typemulcomplex128[]addconvert_element_typecomplex64[256]stop_gradientstop_gradientselectstop_gradientselectstop_gradientaddcomplex128[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]convert_element_typeeqeqeqeqeqeqeqeqltstop_gradientstop_gradientselectstop_gradientselectstop_gradientint32[]int32[]int32[]broadcast_in_dimint32[]broadcast_in_dimconcatenatecomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimselectint32[]broadcast_in_dimint32[]broadcast_in_dimint32[]int32[]complex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimconcatenateint32[]broadcast_in_dimgathergatherint64[]int64[]convert_element_typebroadcast_in_dimreshapenegnegint64[]int64[]convert_element_typebroadcast_in_dimreshapeint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimfloat64[]xla_calldivfloat64[]float64[]xla_callxla_callxla_callfloat64[]mulmulmulmulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimrealmulfloat32[]addsubinteger_powconvert_element_typerealmulfloat32[]convert_element_typeconvert_element_typeinteger_powconvert_element_typeimagmulfloat32[]convert_element_typeconvert_element_typeinteger_powconvert_element_typeimagmulfloat32[]integer_powconvert_element_typeconvert_element_typebroadcast_in_dimmuladdmulcomplex64[]addbroadcast_in_dimmulmuladdmulcomplex64[]subbroadcast_in_dimmuladdconvert_element_typebroadcast_in_dimmulmulconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typesubsubsubconvert_element_typesubcomplex128[]mulsubdivmulmulmulmulcomplex128[]broadcast_in_dimaddconvert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapemuladdnegaddaddnegmuladdaddsubsubcomplex128[]broadcast_in_dimsubconvert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapemuladdnegnegmuladdaddsubsubaddmulcomplex128[]broadcast_in_dimmulcomplex64[]addmulcomplex64[]convert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapemulmulmulmuladdmulmulmulmulmulsubcomplex128[]broadcast_in_dimconvert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapeaddconvert_element_typereshapemuladdaddmulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimrealmulfloat32[]integer_powconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typerealmulfloat32[]integer_powconvert_element_typeconvert_element_typemulmulimagmulfloat32[]integer_powmulconvert_element_typeconvert_element_typeconvert_element_typeimagmulfloat32[]integer_powconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typesubsubsubconvert_element_typesubcomplex64[]mulmulmulmulcomplex64[]mulcomplex64[]convert_element_typemulreshapeaddcomplex128[]mulreshapemulbroadcast_in_dimmulmulmulmulcomplex64[]mulcomplex64[]convert_element_typeaddcomplex128[]mulreshapeaddmulreshapemulbroadcast_in_dimmulmulmulmulcomplex64[]convert_element_typemulbroadcast_in_dimaddaddcomplex128[]mulbroadcast_in_dimaddfloat32[]convert_element_typecomplex128[]mulbroadcast_in_dimsubmulbroadcast_in_dimmulreshapeaddcomplex128[]mulbroadcast_in_dimaddmulbroadcast_in_dimaddcomplex128[]addcomplex128[]mulbroadcast_in_dimsubcomplex128[]mulbroadcast_in_dimmulreshapemulbroadcast_in_dimmulmulmulmulmulmulcomplex64[]convert_element_typecomplex128[]mulbroadcast_in_dimaddfloat32[]convert_element_typemulbroadcast_in_dimaddmulcomplex128[]mulbroadcast_in_dimaddcomplex128[]mulbroadcast_in_dimmulreshapeaddmulbroadcast_in_dimaddfloat32[]convert_element_typecomplex128[]mulbroadcast_in_dimaddcomplex128[]mulbroadcast_in_dimaddmulbroadcast_in_dimmulreshapemulbroadcast_in_dimmulmulmulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]int64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_diminteger_powaddint64[]int64[]convert_element_typebroadcast_in_diminteger_powaddint64[]int64[]convert_element_typebroadcast_in_diminteger_powsqrtbroadcast_in_dimconcatenatereduce_mineqfloat64[]convert_element_typeint64[]complex64[256,4]gathergatherint64[]int64[]convert_element_typebroadcast_in_dimconvert_element_typeconvert_element_typemulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeaddint64[]convert_element_typeeqint64[]int64[]convert_element_typebroadcast_in_dimaddint64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimconcatenatefloat64[]broadcast_in_dimconvert_element_typereduce_maxsqrtmulfloat64[]eqdivdivconvert_element_typefloat64[]convert_element_typemulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]sqrtconvert_element_typeaddcomplex128[]convert_element_typecondint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegconvert_element_typemulcomplex128[]addconvert_element_typecomplex64[256]stop_gradientstop_gradientselectstop_gradientselectstop_gradientaddcomplex128[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]convert_element_typeeqeqeqeqeqeqeqeqltstop_gradientstop_gradientselectstop_gradientselectstop_gradientint32[]int32[]int32[]broadcast_in_dimint32[]broadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimconcatenateselectint32[]broadcast_in_dimint32[]broadcast_in_dimint32[]int32[]concatenatecomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimint32[]broadcast_in_dimgathergatherint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimreshapereshapemulmulmulmulint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]mulfloat64[]convert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimnegmulfloat64[]convert_element_typemulcomplex128[]addconvert_element_typeint64[]convert_element_typeeqint64[]int64[]convert_element_typebroadcast_in_dimaddint64[]int64[]convert_element_typebroadcast_in_dimbroadcast_in_dimconcatenatefloat64[]broadcast_in_dimconvert_element_typereduce_maxsqrtmulfloat64[]eqdivdivconvert_element_typefloat64[]convert_element_typemulint64[]int64[]convert_element_typebroadcast_in_dimmulfloat64[]sqrtconvert_element_typeaddcomplex128[]convert_element_typecondint64[]int64[]convert_element_typebroadcast_in_dimmulconvert_element_typeint64[]int64[]convert_element_typebroadcast_in_dimconvert_element_typemulcomplex128[]addconvert_element_typecomplex64[256]stop_gradientstop_gradientselectstop_gradientselectstop_gradientaddcomplex128[]convert_element_typebroadcast_in_dimbroadcast_in_dimint64[]convert_element_typeeqeqeqeqeqeqeqeqltstop_gradientstop_gradientselectstop_gradientselectstop_gradientint32[]int32[]int32[]broadcast_in_dimint32[]broadcast_in_dimconcatenatecomplex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimselectint32[]broadcast_in_dimint32[]broadcast_in_dimint32[]int32[]complex64[]broadcast_in_dimbroadcast_in_dimcomplex64[]broadcast_in_dimbroadcast_in_dimconcatenateint32[]broadcast_in_dimgathergatherint64[]int64[]convert_element_typebroadcast_in_dimreshapenegnegint64[]int64[]convert_element_typebroadcast_in_dimreshapeint64[]int64[]convert_element_typebroadcast_in_dimint64[]int64[]convert_element_typebroadcast_in_dimfloat64[]divfloat64[]float64[]mulmulmulmulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimrealmulfloat32[]addsubinteger_powconvert_element_typerealmulfloat32[]convert_element_typeconvert_element_typeinteger_powconvert_element_typeimagmulfloat32[]convert_element_typeconvert_element_typeinteger_powconvert_element_typeimagmulfloat32[]integer_powconvert_element_typeconvert_element_typebroadcast_in_dimmuladdmulcomplex64[]addbroadcast_in_dimmulmuladdmulcomplex64[]subbroadcast_in_dimmuladdconvert_element_typebroadcast_in_dimmulmulconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typesubsubsubconvert_element_typesubcomplex128[]mulsubdivmulmulmulmulcomplex128[]broadcast_in_dimaddconvert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapemuladdaddnegmuladdaddsubsubaddsubcomplex128[]broadcast_in_dimsubconvert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapemuladdmulsubnegaddaddnegmulnegaddcomplex128[]broadcast_in_dimmulcomplex64[]addmulcomplex64[]convert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapemulmulsubmulmulmulmulmuladdmulmulcomplex128[]broadcast_in_dimconvert_element_typeconvert_element_typebroadcast_in_dimmulsubreshapeaddconvert_element_typereshapemuladdmulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimrealmulfloat32[]integer_powconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typerealmulfloat32[]integer_powmulconvert_element_typemulconvert_element_typeimagmulfloat32[]integer_powconvert_element_typeconvert_element_typemulmulimagmulfloat32[]integer_powconvert_element_typeconvert_element_typeconvert_element_typeconvert_element_typesubsubsubconvert_element_typesubcomplex64[]mulmulmulmulcomplex64[]convert_element_typemulbroadcast_in_dimaddfloat32[]convert_element_typecomplex128[]mulbroadcast_in_dimaddcomplex128[]mulbroadcast_in_dimsubmulbroadcast_in_dimmulreshapeaddcomplex128[]mulbroadcast_in_dimaddmulbroadcast_in_dimaddcomplex128[]subcomplex128[]mulbroadcast_in_dimaddaddcomplex128[]mulbroadcast_in_dimmulreshapemulbroadcast_in_dimmulmulmulcomplex64[]convert_element_typecomplex128[]mulbroadcast_in_dimaddfloat32[]convert_element_typemulbroadcast_in_dimaddfloat32[]convert_element_typemulcomplex128[]mulbroadcast_in_dimaddcomplex128[]mulbroadcast_in_dimmulreshapeaddmulbroadcast_in_dimaddaddcomplex128[]mulbroadcast_in_dimaddfloat32[]convert_element_typecomplex128[]mulbroadcast_in_dimaddmulbroadcast_in_dimmulreshapemulbroadcast_in_dimmulmulmulcomplex64[]mulcomplex64[]convert_element_typecomplex64[]convert_element_typemulreshapeaddaddcomplex128[]mulreshapemulbroadcast_in_dimmulmulcomplex64[]mulcomplex64[]convert_element_typecomplex128[]mulreshapeaddmulreshapemulbroadcast_in_dimmulmulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimrealmulfloat32[]integer_powrealmulfloat32[]integer_powimagmulfloat32[]integer_powimagmulfloat32[]integer_powsubsubsubconvert_element_typesubcomplex64[]mulmulmulmulcomplex64[]broadcast_in_dimaddaddaddreshapemuladdsubsubaddcomplex64[]broadcast_in_dimsubaddaddreshapemuladdsubaddnegcomplex64[]broadcast_in_dimaddmulcomplex64[]addaddmulcomplex64[]reshapemulmulmulmulmulcomplex64[]broadcast_in_dimsubaddaddreshapemulconvert_element_typeaddcomplex64[]convert_element_typeaddcomplex64[]convert_element_typeaddconvert_element_typeaddconvert_element_typesubcomplex64[]convert_element_typeaddaddcomplex64[]convert_element_typeaddconvert_element_typemulcomplex64[]convert_element_typebroadcast_in_dimaddconjmulbool[]float64[]float64[]convert_element_typeconvert_element_typeconvert_element_typeconvert_element_typebroadcast_in_dimbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimrealmulfloat32[]addsubinteger_powmulrealmulfloat32[]convert_element_typeconvert_element_typeinteger_powmulimagmulfloat32[]convert_element_typeconvert_element_typeinteger_powmulimagmulfloat32[]integer_powmulconvert_element_typebroadcast_in_dimmuladdmulcomplex64[]addbroadcast_in_dimmulmuladdmulcomplex64[]subbroadcast_in_dimmuladdconvert_element_typebroadcast_in_dimmulmulmulmulmulmulsubsubsubconvert_element_typesubcomplex64[]mulmulmulmulcomplex64[]broadcast_in_dimaddreshapeconvert_element_typebroadcast_in_dimsubmuladdcomplex64[]broadcast_in_dimsubreshapeconvert_element_typebroadcast_in_dimsubmuladdcomplex64[]broadcast_in_dimmulcomplex64[]addmulcomplex64[]reshapeconvert_element_typebroadcast_in_dimsubmuladdcomplex64[]broadcast_in_dimreshapeconvert_element_typebroadcast_in_dimsubaddreshapemuladdfloat64[]float64[]mulmulmulmulbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimbroadcast_in_dimrealmulfloat32[]addsubsubaddinteger_powmulrealmulfloat32[]convert_element_typeconvert_element_typeconvert_element_typeneginteger_powmulimagmulfloat32[]convert_element_typeconvert_element_typeconvert_element_typeconvert_element_typeinteger_powmulimagmulfloat32[]integer_powmulconvert_element_typebroadcast_in_dimmuladdmulcomplex64[]addbroadcast_in_dimmulmuladdmulcomplex64[]subbroadcast_in_dimmuladdconvert_element_typebroadcast_in_dimmulmuladdaddaddaddconvert_element_typebroadcast_in_dimmulsubmulcomplex64[]addbroadcast_in_dimmulmuladdconvert_element_typemulcomplex64[]addbroadcast_in_dimmuladdconvert_element_typebroadcast_in_dimmulmulmulmulmulmulsubsubsubconvert_element_typesubcomplex64[]mulmulmulmulcomplex64[]broadcast_in_dimfloat64[]divfloat64[]convert_element_typeconvert_element_typecomplex64[]mulbroadcast_in_dimaddaddmulcomplex64[]addaddreshapemulcomplex64[]broadcast_in_dimfloat64[]divfloat64[]convert_element_typeconvert_element_typecomplex64[]mulbroadcast_in_dimaddaddmulcomplex64[]addaddreshapemulcomplex64[]broadcast_in_dimfloat64[]divfloat64[]convert_element_typeconvert_element_typecomplex64[]mulbroadcast_in_dimaddmulcomplex64[]submulcomplex64[]submulcomplex64[]addmulcomplex64[]reshapemulcomplex64[]broadcast_in_dimfloat64[]divfloat64[]convert_element_typeconvert_element_typecomplex64[]mulbroadcast_in_dimaddmulcomplex64[]submulcomplex64[]subaddreshapemuladdsubaddsubsubaddaddsubaddsubaddnegmulmulmulmulmulmulmulconvert_element_typeaddcomplex64[]convert_element_typeaddcomplex64[]convert_element_typeaddconvert_element_typemulcomplex64[]convert_element_typebroadcast_in_dimaddconvert_element_typeaddcomplex64[]convert_element_typeaddcomplex64[]convert_element_typeaddconvert_element_typemulconvert_element_typesubcomplex64[]convert_element_typeaddaddcomplex64[]convert_element_typeaddconvert_element_typemulcomplex64[]convert_element_typecomplex128[]addcomplex128[]mulbroadcast_in_dimconjmulbroadcast_in_dimbroadcast_in_dimabsfloat64[]absfloat64[]dot_generaltransposeconjmuldivbroadcast_in_dimbroadcast_in_dimreduce_sumreduce_sumrealdivfloat64[]complex128[]reallogaddconvert_element_typeout_0by not only utilizing the joint LR, but also its gradient t(z, x|θ0, θ1) = ∇θp(z, x|θ)/p(z, x|θ1)|θ0,
where the use of the joint values as labels yields an additional consistent training objective
for the gradient ∇θ0r(x, θ0, θ1). While this technique can work around the intractability of the
marginalized likelihood ratio, it still requires computation of the joint quantities, in particular the
gradients of the joint probabilistic model p(x, z). Without an automatic solution, this approach is
thus limited to cases where gradients are derivable in close-form. MadJax, can extend the method
to arbitrary theory parameters. As a proof-of-concept, Fig. 4 demonstrates a simpliﬁed example
with the Fermi-constant as the parameter of interest, where the power of gradient-based training
data is apparent from the training trajectory.

Figure 4: SBI example using MadJax for learning ML based likelihood ratios as a function of the
theory parameter GF in e+e− → Z → µ+µ− . Left: histogram-based density estimation of the
marginal observable x (polar angle) and below the learned LR validated against the histogram
approach. Middle: the trained marginal LR and its gradient compared to the joint quantities
used as noisy label data shown on a 1D slice and in the 2D space of observables and theory
parameters. Right: Loss trajectories of LR regression with and without MadJax gradient data.

3.2. Normalizing Flow Training using Matrix Element Gradients
Normalizing ﬂows [37] (NF), which enable both explicit likelihood estimation and sampling,
provide a powerful method for modeling complex MEs in order to increase sampling speed and
eﬃciency (see e.g. [38, 39, 40]). It can be challenging, however, to train NFs to suﬃcient accuracy,
and training can require relatively large datasets sampled from the simulator. ME gradients
provide new tools to help reduce the required scale of simulated datasets and improve modeling.

The typical maximum likelihood loss function for NF training has the form:

LN LL = −Ex∼p(x)

(cid:104)

(cid:105)
log q(x; θ)

= DKL

(cid:104)
p||q(·; θ)

(cid:105)

+ const.

(1)

where samples are generated by the ME simulator, x ∼ p(x), and the likelihood under the NF
model, q(x; θ), is evaluated and minimized with respect to its parameters θ. This loss function
has two challenges; (a) one must generate samples from the simulator for training, which may be
computationally costly, and (b) the loss pushes the NF to be mass-distributing, i.e. encouraging
the NF to assign mass broadly so as not to assign zero density to points in which p(x) (cid:54)= 0. With
access to the gradient of the (un-normalized) target density, additional loss terms are available,
such as the reverse KL loss, LRKL, and a force-matching loss, LF M , which have shown promise
in lattice QCD (i.e. [41, 42]) and molecular physics (i.e. [31, 43]). The losses are deﬁned as:

(cid:34)

LRKL = Ex∼q(x;θ)

log

(cid:35)

q(x; θ)
p(x)

= DKL

(cid:104)
q(x; θ)||p(x)

(cid:105)

(cid:34)

(cid:35)

LF M = Ex∼p(x)

||∂x log p(x) − ∂x log q(x; θ)||2
2

(2)

(3)

The reverse KL loss leverages much cheaper samples from the NF and exhibits mode-seeking
behavior; training under this loss pushes the NF to assign zero density where p(x) is zero and
hence makes it concentrate on one of the modes of p(x). The force matching pushes the NF
model during training to better match the shape (as estimated with gradients) of the target
ME distribution. Gradient-based training with both LRKL and LF M requires diﬀerentiation
through the matrix element p(x), and thus requires diﬀerentiable matrix elements as provided by
MadJax. By mixing the forward KL with the reverse KL and/or force-matching losses, additional
information about the ME is provided to the NF during training.

Using MadJax, we train multiple NF models of e+e− → t¯t → q ¯qbq ¯q¯b matrix elements. We use
the loss L = LN LL + ωkLRKL + ωf LF M , with hyperparameters ωk and ωf controlling the impact
of the reverse KL and force matching losses, respectively. The NF models comprise four layers of
smooth normalizing ﬂows [44], which provide smooth mappings over compact intervals and thus
are well adapted to mapping uniform random variables smoothly onto ME distributions deﬁned
on phase space hypercubes. Each smooth NF layer uses four bijections and the parameters of the
transformation are modeled with a MLP of two layers of 100-neurons. 8000 events are used for
training using the Adam [45] optimizer with a learning rate of 5 · 10−5 and batch size of 100, and
2000 events are used for testing. 10 initial warm-up epochs, where all models are trained using
only the LN LL, are used to improve training stability. Fig. 5 shows the evolution (after warm-up
epochs) of the likelihood loss (left) and reverse KL loss (right), comparing models trained with
and without reverse KL and force matching losses. Variations in initial model performance due
to random diﬀerent model initializations are overcome after epoch ∼75 and then models trained
with LRKL are seen to outperform the likelihood-only trained model (ωk = ωf = 0) in both
likelihood and reverse KL. The model trained with both reverse KL and force-matching losses
resulted in the best likelihood of all models. These results indicate the potential to improve ME
modeling using losses enabled uniquely with ME gradients.

Figure 5: Comparison of training evolution of the likelihood loss (left) and reverse KL loss (right)
for models trained with and without reverse KL and force matching losses.

4. Conclusion
We present MadJax, the ﬁrst automatically diﬀerentiable matrix element code based on MadGraph.
The gradient information provided by MadJax enables previously inaccessible approaches to HEP
data analysis, such as highly data-eﬃcient methods for training ML models for high-energy
physics or simulation-based inference. MadJax is a prototype that serves as proof-of-principle of
the utility of such tools for future R&D. The implementation of MadJax using JAX facilitates easy
use with ML pipelines, but JAX is not always well-adapted to the structure of matrix element
code. Future directions will explore the use of alternative AD tools that may be better suited to
matrix element code structures.

0255075100125150175200Epoch5.04.54.03.53.02.52.0Likelihood Lossk=0,    f=0k=0.1, f=0k=0,    f=105k=0.1, f=1050255075100125150175200Epoch7654321Reverse KL Lossk=0,    f=0k=0.1, f=0k=0,    f=105k=0.1, f=105Acknowledgements
We thank Valentin Hirschi for providing the initial python-MadGraph interface code and thank
Matthew Feickert for the software guidance, and thank both for the helpful discussions. We thank
Andreas Krämer and Jonas Koehler for supplying their code for Smooth Normalizing Flows.
MK is supported by the US Department of Energy (DOE) under grant DE-AC02-76SF00515.
LH is supported by the Excellence Cluster ORIGINS, which is funded by the Deutsche
Forschungsgemeinschaft (DFG, German Research Foundation) under Germany’s Excellence
Strategy - EXC-2094-390783311.

References
[1] Wang F, Decker J, Wu X, Essertel G and Rompf T 2018 Advances in Neural Information Processing Systems
vol 31 ed Bengio S, Wallach H, Larochelle H, Grauman K, Cesa-Bianchi N and Garnett R (Curran Associates,
Inc.)

[2] Alwall J, Herquet M, Maltoni F, Mattelaer O and Stelzer T 2011 Journal of High Energy Physics 2011 ISSN

1029-8479 URL http://dx.doi.org/10.1007/JHEP06(2011)128

[3] Bradbury J, Frostig R, Hawkins P, Johnson M J, Leary C, Maclaurin D, Necula G, Paszke A, VanderPlas J,
Wanderman-Milne S and Zhang Q 2018 JAX: composable transformations of Python+NumPy programs
URL http://github.com/google/jax

[4] Bücker H M, Corliss G F, Hovland P D, Naumann U and Norris B (eds) 2005 Automatic Diﬀerentiation:
Applications, Theory, and Implementations Lecture Notes in Computational Science and Engineering (New
York, NY: Springer)

[5] Platzer S 2013 Rambo on diet (Preprint 1308.2922)
[6] Baydin A G, Pearlmutter B A, Radul A A and Siskind J M 2018 Journal of Machine Learning Research 18

1–43 URL http://jmlr.org/papers/v18/17-468.html

[7] Abadi M, Agarwal A, Barham P, Brevdo E, Chen Z, Citro C, Corrado G S, Davis A, Dean J, Devin M,
Ghemawat S, Goodfellow I, Harp A, Irving G, Isard M, Jia Y, Jozefowicz R, Kaiser L, Kudlur M, Levenberg
J, Mané D, Monga R, Moore S, Murray D, Olah C, Schuster M, Shlens J, Steiner B, Sutskever I, Talwar K,
Tucker P, Vanhoucke V, Vasudevan V, Viégas F, Vinyals O, Warden P, Wattenberg M, Wicke M, Yu Y and
Zheng X 2015 TensorFlow: Large-Scale Machine Learning on Heterogeneous Systems software available
from tensorﬂow.org URL https://www.tensorflow.org/

[8] Paszke A, Gross S, Massa F, Lerer A, Bradbury J, Chanan G, Killeen T, Lin Z, Gimelshein N, Antiga L, Desmai-
son A, Kopf A, Yang E, DeVito Z, Raison M, Tejani A, Chilamkurthy S, Steiner B, Fang L, Bai J and Chintala
S 2019 Advances in Neural Information Processing Systems 32 ed Wallach H, Larochelle H, Beygelzimer A,
d’Alché Buc F, Fox E and Garnett R (Curran Associates, Inc.) pp 8024–8035 URL http://papers.neurips.
cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf
[9] Heinrich L, Feickert M and Stark G pyhf: v0.6.3 https://github.com/scikit-hep/pyhf/releases/tag/v0.6.3 URL

https://doi.org/10.5281/zenodo.1169739

[10] Heinrich L, Feickert M, Stark G and Cranmer K 2021 Journal of Open Source Software 6 2823 URL

https://doi.org/10.21105/joss.02823

[11] Heinrich L and Simpson N 2020 pyhf/neos: initial zenodo release [Link] URL https://doi.org/10.5281/

zenodo.3697981

[12] Carrazza S, Cruz-Martinez J M and Rossi M 2021 Computer Physics Communications 264 107995 ISSN

0010-4655 URL http://dx.doi.org/10.1016/j.cpc.2021.107995

[13] Ball R D, Carrazza S, Cruz-Martinez J, Debbio L D, Forte S, Giani T, Iranipour S, Kassabov Z, Latorre J I,
Nocera E R, Pearson R L, Rojo J, Stegeman R, Schwan C, Ubiali M, Voisey C and Wilson M 2021 An
open-source machine learning framework for global analyses of parton distributions (Preprint 2109.02671)
[14] Carrazza S, Cruz-Martinez J, Rossi M and Zaro M 2021 Madﬂow: automating monte carlo simulation on gpu

for particle physics processes (Preprint 2106.10279)

[15] Todorov E, Erez T and Tassa Y 2012 2012 IEEE/RSJ International Conference on Intelligent Robots and

Systems (IEEE) pp 5026–5033

[16] Lee J, Grey M X, Ha S, Kunz T, Jain S, Ye Y, Srinivasa S S, Stilman M and Liu C K 2018 Journal of Open

Source Software 3 500

[17] Coumans E 2015 ACM SIGGRAPH 2015 Courses SIGGRAPH ’15 (New York, NY, USA: Association for
Computing Machinery) ISBN 9781450336345 URL https://doi.org/10.1145/2776880.2792704
[18] de Avila Belbute-Peres F, Smith K, Allen K, Tenenbaum J and Kolter J Z 2018 Advances in Neural Information
Processing Systems vol 31 ed Bengio S, Wallach H, Larochelle H, Grauman K, Cesa-Bianchi N and Garnett
R (Curran Associates, Inc.)

[19] Qiao Y L, Liang J, Koltun V and Lin M C 2020 ICML pp 7847–7856 URL http://proceedings.mlr.press/

v119/qiao20a.html

[20] Hu Y, Anderson L, Li T M, Sun Q, Carr N, Ragan-Kelley J and Durand F 2020 ICLR
[21] Hu Y, Liu J, Spielberg A, Tenenbaum J B, Freeman W T, Wu J, Rus D and Matusik W 2019 Proceedings of

IEEE International Conference on Robotics and Automation (ICRA)

[22] Huang Z, Hu Y, Du T, Zhou S, Su H, Tenenbaum J B and Gan C 2021 International Conference on Learning

Representations URL https://openreview.net/forum?id=xCcdBRQEDW

[23] Liang J, Lin M and Koltun V 2019 Advances in Neural Information Processing Systems vol 32 ed Wallach
H, Larochelle H, Beygelzimer A, d’Alché Buc F, Fox E and Garnett R (Curran Associates, Inc.) URL
https://proceedings.neurips.cc/paper/2019/file/28f0b864598a1291557bed248a998d4e-Paper.pdf

[24] Li T M, Aittala M, Durand F and Lehtinen J 2018 ACM Trans. Graph. (Proc. SIGGRAPH Asia) 37

222:1–222:11

[25] Bangaru S, Li T M and Durand F 2020 ACM Trans. Graph. 39 245:1–245:18
[26] Zeltner T, Speierer S, Georgiev I and Jakob W 2021 Transactions on Graphics (Proceedings of SIGGRAPH)

40

[27] Mildenhall B, Srinivasan P P, Tancik M, Barron J T, Ramamoorthi R and Ng R 2020 ECCV
[28] Holl P, Thuerey N and Koltun V 2020 International Conference on Learning Representations URL

https://openreview.net/forum?id=HyeSin4FPB

[29] Ummenhofer B, Prantl L, Thuerey N and Koltun V 2020 International Conference on Learning Representations
[30] Um K, Brand R, Fei Y R, Holl P and Thuerey N 2020 Advances in Neural Information Processing Systems
vol 33 ed Larochelle H, Ranzato M, Hadsell R, Balcan M F and Lin H (Curran Associates, Inc.) pp
6111–6122

[31] Schoenholz S S and Cubuk E D 2020 Advances in Neural Information Processing Systems vol 33 (Curran

Associates, Inc.)

[32] Doerr S, Majewski M, Pérez A, Krämer A, Clementi C, Noe F, Giorgino T and De Fabritiis G 2021 Journal of
Chemical Theory and Computation 17 2355–2363 pMID: 33729795 (Preprint https://doi.org/10.1021/
acs.jctc.0c01343) URL https://doi.org/10.1021/acs.jctc.0c01343

[33] de Aquino P, Link W, Maltoni F, Mattelaer O and Stelzer T 2012 Computer Physics Communications 183 2254–
2263 ISSN 0010-4655 URL https://www.sciencedirect.com/science/article/pii/S0010465512001725
[34] Jax documentation: Common gotchas URL https://jax.readthedocs.io/en/latest/notebooks/Common_

Gotchas_in_JAX.html#control-flow

[35] Cranmer K, Brehmer J and Louppe G 2020 Proceedings of the National Academy of Sciences 117 30055–30062
[36] Brehmer J, Louppe G, Pavez J and Cranmer K 2020 Proceedings of the National Academy of Sciences 117

5242–5249 ISSN 0027-8424

[37] Papamakarios G, Nalisnick E, Rezende D J, Mohamed S and Lakshminarayanan B 2021 Journal of Machine

Learning Research 22 1–64 URL http://jmlr.org/papers/v22/19-1028.html
[38] Gao C, Höche S, Isaacson J, Krause C and Schulz H 2020 Phys. Rev. D 101(7) 076002
[39] Bothmann E, Janßen T, Knobbe M, Schmale T and Schumann S 2020 SciPost Phys. 8(4) 69
[40] Butter A and Plehn T 2020 Generative networks for lhc events (Preprint 2008.08558)
[41] Albergo M S, Kanwar G and Shanahan P E 2019 Phys. Rev. D 100(3) 034515
[42] Sun X, Detmold W, Luo D and Shanahan P E 2022 Finite-volume pionless eﬀective ﬁeld theory for few-nucleon

systems with diﬀerentiable programming (Preprint 2202.03530)

[43] Wang J, Olsson S, Wehmeyer C, Pérez A, Charron N E, de Fabritiis G, Noé F and Clementi C 2019 ACS

Central Science 5 755–767

[44] Köhler J, Krämer A and Noe F 2021 Advances in Neural Information Processing Systems 34 pre-proceedings

(NeurIPS 2021) ed Beygelzimer A, Dauphin Y, Liang P and Vaughan J W

[45] Kingma D P and Ba J 2015 3rd International Conference on Learning Representations, ICLR 2015, San

Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings ed Bengio Y and LeCun Y

