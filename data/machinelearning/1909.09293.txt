9
1
0
2

p
e
S
0
2

]

C
O
.
h
t
a
m

[

1
v
3
9
2
9
0
.
9
0
9
1
:
v
i
X
r
a

A Two-Stage Stochastic Programming Model for
Car-Sharing Problem using Kernel Density Estimation

Xiaoming Lia,c, Chun Wanga, Xiao Huangb

a¡Department of Information and System Engineering, Concordia University, Montreal,
QC, Canada¿
b¡John Molson School of Business, Concordia University, Montreal, QC, Canada¿
c¡School of Computer, Shenyang Aerospace University, Shenyang, Liaoning, China¿

Abstract

Car-sharing problem is a popular research ﬁeld in sharing economy. In this
paper, we investigate the car-sharing re-balancing problem under uncertain de-
mands. An innovative framework that integrates a non-parametric approach
- kernel density estimation (KDE) and a two-stage stochastic programming
(SP) model is proposed. Speciﬁcally, the probability distributions are derived
from New York taxi trip data sets by KDE, which are used as the input un-
certain parameters for SP. Additionally, the car-sharing problem is formulated
as a two-stage SP model which aims to maximize the overall proﬁt. Mean-
while, a Monte Carlo method called sample average approximation (SAA) and
Benders decomposition algorithm are introduced to solve the large-scale opti-
mization model. Finally, the experimental validations show that the proposed
framework outperforms the existing works in terms of outcomes.

Keywords: Two-Stage Stochastic Programming, Kernel Density Estimation,
Car-Sharing

1. Introduction

Car-Sharing which was coined in the middle of 20th century[1] is increasing

sharply in many cities now. This trend becomes much more popular since

people may beneﬁt a lot from the the sharing system, such as saving parking

lots, reducing the traﬃc congestion and air pollution[2]. To use the car-sharing

service, normally, a customer can reserve the vehicle by phone or Internet.

Once approved, the reserved vehicle is assigned to the customer who picks it up

Preprint submitted to Transportation Research Part C

September 23, 2019

 
 
 
 
 
 
at an appointed time and leaves it at a speciﬁc car-sharing location, which may

be the same as the pick-up point (one-way car-sharing systems) or anywhere

in a speciﬁed zone (free-ﬂoating car-sharing systems) [3, 4]. Typically, car-

sharing systems are ﬁnanced by public and /or private entities and managed

by service provides, who are involved in strategic, tactical, and operational

decision-making. Strategic decisions can be include determining the number,

location, and capacity of stations for car rental and return, whereas tactical

decisions can include allocation decisions. Daily, operational decisions include

determining how to periodically re-distribute cars to station.

Nowadays, With the rapid development of transportation in cities, a huge

amount of data is generated every day. Thanks to the emerging technologies

such as wireless sensor network (WSN), cloud computing and Big Data, which

make it possible to collect, store and analyze the data in an eﬀective and

eﬃcient way. However, increasing data brings new challenges to traditional

car-sharing optimization issues.

In order to solve the problem, several optimization approaches are under

investigation including complicating determinate modeling and optimization

under uncertainty.

For deterministic model, Gambella et al. [5] propose an MIP model along

with two heuristic algorithms to optimize electric vehicle relocation problem,

Huang et al.[6] investigate one-way station-based relocation considering non-

linear demand, an mixed integer non-linear model is proposed, Xu et al.[7]

study the electric vehicle ﬂeet size and trip pricing (EVFS&TP) problem for

one-way car-sharing services by taking into account the necessary practical

requirements of vehicle relocation and personnel assignment. A mixed-integer

nonlinear and nonconvex programming model is developed. Li et al. [8] focus

on the Share-a-Ride Problem (SARP) aiming at maximizing the proﬁt of serv-

ing a set of passengers and parcels using a set of homogeneous vehicles. An

adaptive large neighborhood search heuristic algorithm is devised. Zhao et al.

2

[9] devise an integrated framework to minimize the total cost, including the EV

and staﬀ investment, EV re-balancing and staﬀ relocation costs. The model is

reformulated and solved by Lagrangian relaxation approach. Boyacı et al. [10]

explore one-way vehicle-sharing systems that is taking vehicle relocation and

electric vehicle charging requirements into consideration. A multi-objective

optimization model is developed and solved by branch-and-bound.

For stochastic programming model, Brandst¨atter et al.[11] solve strategic

optimization problems of car-sharing systems that utilize electric cars by a two-

stage stochastic programming model. Also, the heuristic algorithm is used to

tackle large-scale instances. Biondi et al. [12] explore to optimize car-sharing

system with uncertain demands from the perspective of queue theory. Fan et

al. [13] consider the stochastic dynamic vehicle allocation problem (SDVAP),

a multi-stage stochastic programming model is formulated to maximize proﬁts

and to manage ﬂeets of vehicles in both time and space. Later, they develop

a stochastic programming model to optimize strategic allocation of vehicles

for one-way car-sharing systems under demand uncertainty [14]. Cavagnini et

al. [15] propose a bike-sharing system which composes one depot and multiple

capacitated stations.

Although the aforementioned work handle with car-sharing problem from

diﬀerent perspectives, among these works, most of the works consider modeling

car-sharing problem in the deterministic way without involving any uncertain

parameters such as demand, supply, travelling time. Only a few of them use

optimization under certainty techniques to solve car-sharing problem, none of

them utilize the accurate probability information from historical data. Mean-

while, most mathematical models that are formulated based on SP are assumed

that the probability distribution is known with a speciﬁc type. However, in

the real historical data, the probability distribution information may contain

many even inﬁnite parameters which cannot be described by simple known

distribution such as Gaussian distribution. We will further discuss this topic

3

in the numerical experiment section.

There are several ways to hedge against uncertainty using optimization

techniques. In stochastic programming(SP)[16], uncertainty is modeled through

discrete or continuous probability functions, in other words, SP models heavily

rely on probability information from historical data. In fuzzy programming

(FP)[17], uncertainty parameters are considered as fuzzy numbers and con-

straints are treated as fuzzy sets. In robust optimization(RO)[18], uncertainty

is described in a particular set called uncertain set. In distibtuionally robust

optimization(DRO)[19], uncertainty is formulated by an ambiguity set which

includes a family of probability distributions. In our scope, we are primarily

interested in extracting exact probability distribution information from histor-

ical data. To this end, we come to consider using two-stage SP to solve the

car-sharing problem.

In order to overcome the issue aforementioned, we consider to utilize related

machine learning approach to make the SP model more practical. Recently,

integrating machine learning (ML) with optimization techniques becomes the

trend in operational research (OR) community[20], [21]. A few researchers

attempted to leverage the advantages of ML make optimization more realistic,

especially, when it is applied in big data and data-driven optimization[22],[23].

In our work, we will follow the trend to solve car-sharing problem. Speciﬁcally,

we proposed a framework that involves two major components. In ML part,

we utilize the non-parametric approach - kernel density estimation to extract

more accurate probability distribution from historical data, while in OR part,

stochastic programming models are constructed based on those parameters.

To our best knowledge, the proposed framework is the ﬁrst one to solve car-

sharing problem under demand uncertainty. The contribution of this work can

be summarized as follows.

(i) We consider using the non-parametric approach kernel density estimation

to extract the arbitrary probability distribution of user demands from

4

historical data on New York taxi trip data set.

(ii) A two-stage stochastic programming model using the aforementioned

probability distribution information is proposed to formulate car-sharing

problem.

(iii) Integrating sample average approximation method with Benders decom-

position algorithm to solve the two-stage stochastic programming model.

The rest of the paper is organized as follows. The problem description

is discussed in section 2. Section 3 investigates some related literature, the

methodology is explored in section 4.

In section 5, both deterministic and

two-stage stochastic models are designed. While section 6 describes the frame-

work which involves sample average approximation (SAA) method and Ben-

ders decomposition algorithm. Data prepossession and numerical experiment

are presented in section 7. Finally, we conclude our work and propose future

work in section 8.

2. Problem Description

In this article, we address the car-sharing problem with the demands under

uncertainty using a two-stage stochastic programming model. The objective is

to make the maximize overall proﬁt, which involves total revenue, holding costs

at each location and moving costs between locations. Generally, we study a

car-sharing system managed by a service provider wherein the decision-making

is centralized. The problem can be stated as follows: the decision making can

be divided into two stages. During the ﬁrst stage, at the beginning of the day

(e.g. at 0 AM), the number of vehicles at each location must be determined.

During the second stage, after the real demand revealed (e.g. no new orders for

today accepted), the truck carriers must decide how many vehicles to relocate

between locations.

5

In this work, the most critical concern for car-sharing problem is the way

of modeling uncertainty. For convenience, only customer demands considered

as uncertainty parameters. Normally, in SP paradigm uncertain parameters

are modeled as random variables with speciﬁc probability distributions which

are extracted from historical data. Unlike the existing works which assume

the uncertainty parameters conform a known probability distribution such

as Gaussian, Poisson, log-normal distributions, in our work, the uncertainty

parameters follow any types of distributions or non-parametric distributions.

In the two-stage SP model, all the decision variable are divided into two

groups: the ﬁrst stage decision variables (or here-and-now) which should be

determined before the real demands revealed, and the second stage decision

variables (or wait-and-see) which are determined after the real demands re-

alized. Based on the problem statement, a group of assumption are made as

follows.

1. Allocation resource is limited, cannot satisfy all the demands,

2. Holding costs incur depends on the number of vehicles and locations,

3. Moving cost depends on the speciﬁc route,

4. The car-sharing service must ﬁnish within one day.

3. Model Formulation

In this section, we will discuss car-sharing model formulations include de-

terministic model and two-stage SP counterpart. It is worth noting that prob-

ability distributions are required for SP model. Unlike most existing works

which assume that the probability distribution of uncertain parameters are

known, the probability distribution information in our work is obtained from

non-parametric learning approach - kernel density estimation. For clarity, the

notations are listed in below.

6

Indices/Sets
i, j ∈ R regional origins and/or destinations
s ∈ S The set of scenarios

Parameters

hi = holding cost at location i.

ti,j = moving cost from location i to location j.
davg = the average demand of location j.

Decision Variables

xi = ﬁrst-stage decision variable which denotes the number of vehicles at lo-

cation i.

Random Variables (for stochastic programming model)

di = random demands which denotes the number of cars that will be picked

up by customers at location i.
e
ps = the probability of scenario s.
ys
i,j = the second-stage decision variable which denotes the number of vehicles
moving from location i to location j under scenario s.

3.1. Deterministic Model

In the deterministic model, we consider to allocate the limited vehicles to

diﬀerent locations in order to maximize the overall proﬁt. For convenience, we

consider using the average demands. The deterministic model for car-sharing

problem can be formulated as follows.

min

xi +

yi,j, davg

i

∗ ri −

!

j∈R
X

i∈R  
X

hi ∗ xi +

ti,j ∗ yi,j

j∈R
X

max

"

i∈R
X

s.t.

xi 6 C,

i∈R
X

7

(1)

!#

(2)

 
yi,j ≤ xi ∀i ∈ R,

j∈R
X

x ∈ Z|R|
+ ,

y ∈ Z|R|×|R|

+

.

(3)

(4)

(5)

The objective function (1) is to maximize the overall proﬁt which equals

the diﬀerence of total revenue and total holding cost. The constraint in equa-

tion (2) ensures that the number of total vehicles are not exceeded the ca-

pacity which can be easily estimated from historical data. The constraints in

equation (3) guarantee that each location must satisfy the customer demand.

Constraints (4) and (5) are the types of decision variables.

Although deterministic model is capable of tackling the optimization model

in a simple way, the average demands for model may lead to optimal solution

with high risk even infeasible. Additionally, it is worth noting that the ob-

jective function (1) is a piece-wise linear function, therefore, it is required to

reformulated to a linear function before solving.

3.2. Two-Stage Stochastic Programming Model

The two-stage stochastic programming model of car-sharing problem can

be formulated as follows.

max

Ps

s∈S
X

s.t.

"

i∈R
X

min

xi +

i,j, ds
ys
i

!

∗ ri −

j∈R
X

i∈R  
X

hi ∗ xi +

ti,j ∗ ys
i,j

j∈R
X

xi 6 C,

i∈R
X

8

!#
(6)

(7)

 
i,j ≤ xi ∀i ∈ R, ∀s ∈ S ,
ys

j∈R
X

x ∈ Z|R|
+ ,

y ∈ Z|R|×|R|×|S |

+

.

(8)

(9)

(10)

Similar as one-stage SP model, the objective function in equation (6) is to

maximize the overall proﬁt, which is denotes by the diﬀerence of revenue and

overall cost (the summation of holding cost and moving/transferring cost).

Constraint (7) denotes the number of vehicle cannot exceed the capacity of

car ﬁrm. Constraint (8) implies that the sum number of cars that moving from

location i to each location should not exceed the number of car at location i.

Constraints (9) and (10) describe the type of decision variables.

4. Approach

4.1. Model Reformulation

Unlike the deterministic model which can be solved by oﬀ-the-shelf com-

mercial solvers eﬀectively. Normally, the two-stage SP model required refor-

mulation since the continuous probability distribution contains inﬁnite scenar-

ios. In this paper, we utilize the sample average approximation (SAA)[24] -

a Monte Carlo method to reformulate the two-stage SP model. There are a

variety of variant SAA approaches[25, 26, 27, 28] with diﬀerent names.

In

order to reduce the computation, we consider a simpliﬁed edition. The the

procedure of SAA can be summarized as follows.

Notice that the reformulation model in SAA, the objective function be-

comes

9

Algorithm 1 Sampling Average Approximation

Input: probability distribution P, number of sample M, size N,

two-stage SP model z∗ = minx∈X cT x + EP[Q(x, ξ(ω))]

Output: the optimal value

1: k ← 0
2: while k 6 M do
k ← k + 1
3:
a sample ω1, ω2, ..., ωn of N scenario is generated according to P;
4:
reformulate the model as zN = minx∈X cT x + 1
5:
N
solve the model and get optimal value zk
6:

N
n=1 Q (x, ξ (ωn));
N and optimal solution ˆxk;

P

7: end while
8: The optimal value is zN = 1
M

M
m=1 zm
N

P

max N−1

min

xi +

i,j, ds
ys
i

∗ ri −

hi ∗ xi +

ti,j ∗ ys
i,j

"

i∈R
X

!#
(11)
where N is the number of scenarios. Additionally, the objective function

i∈R  
X

j∈R
X

j∈R
X

!

is still a non-linear objective function. We introduce the auxiliary variable to

transform the non-linear objective function to a linear type. Then the two-

stage SP model becomes

max N−1

"

i∈R
X

s∈S
X

ri ∗ f s

i −

i∈R  
X

hi ∗ xi +

ti,j ∗ ys
i,j

j∈R
X

(12)

!#

s.t.

f s
i ≤ xi +

i,j ∀i ∈ R, ∀s ∈ S ,
ys

j∈R
X

i ≤ ds
f s

i ∀i ∈ R, ∀s ∈ S ,

xi 6 Capacity,

i∈R
X

10

(13)

(14)

(15)

 
i,j ≤ xi ∀i ∈ R, ∀s ∈ S ,
ys

j∈R
X

x ∈ Z|R|
+ ,

y ∈ Z|R|×|R|

+

.

(16)

(17)

(18)

4.2. Model Decomposition

After the ﬁnal reformulation, the two-stage SP model becomes a very large-

scale deterministic model, for example, if we consider 50 locations and 1000

scenarios, the number of second-stage decision variable will be 50*50*1000 =

2,500,000. To solve large-scale model eﬀectively, decomposition algorithm is

required. In this section, we introduce Benders decomposition[29] to solve the

problem. For convenience, in the following, we neglect the constant N. Then

we divide the reformulated model into master problem (MP)

max

ri ∗ f s

i −

hi ∗ xi + θ

(19)

i∈R
X

s∈S
X

i∈R
X

and subproblem (SP) in the dual form

min

i∈R
X

s∈S
X

s.t.

( ¯f s

i − ¯xi − ds

i ) ∗ ui −

¯xj ∗ vj

(20)

j∈R
X

ui − vj ≤ ti,j

∀i, j ∈ R

(21)

ui and vj are the dual variables of SP, while ¯f s

i and ¯xi are the ﬁxed val-
ues that are determined by MP. During each iteration in MP, the values are

adjusted and assigned to SP. Finally, the algorithm can be summarized as

follows.

11

Algorithm 2 Benders Decomposition for Two-Stage SP Car-Sharing Model

Input: MP, SP, ξ
Output: the optimal solution

given the ﬁxed value ¯f and ¯x solve the SP model
if SP is unbounded then

1: UB ← +∞, LB ← −∞;
2: while UB − LB ≥ ξ do
3:
4:
5:
6:
7:
8:
9:

else

else if SP is optimal then

the original model is infeasible

get ray(u∗, v∗) and add cut u∗ ∗ (f − x − d) - v∗ ∗ x ≤ 0 to MP

get point(u∗, v∗) and add cut u∗ ∗ (f − x − d) - v∗ ∗ x ≤ θ to MP

end if
solve the MP model
update LB ← value of MP

10:
11:
12:
13: end while
14: return either LB or UB as the optimal value

5. Numerical Experiment

Experiment Setup. All the algorithms (KDE, SAA and BD) are imple-

mented using Python 3.7, the mathematical models are solved by Gurobi 8.1

under the platform Intel i7, 16GB RAM, Windows 10.

Experiment Design. We devise a group of experiments. After the data

preprocessing and distribution estimation by KDE, ﬁrstly, we validate the

running times and expected proﬁts based on diﬀerent numbers of scenarios,

additionally, we compare the outcomes deterministic model with two-stage

SP model. Secondly, we compare the results yielded from non-parametric

approach KDE with several parametric distributions like Gaussian distribution

in terms of expected proﬁt. The above experiments are based on training sets,

ﬁnally, we compare the expected values obtained from training sets with testing

sets. Speciﬁcally, we ﬁx the ﬁrst-stage decision variables by the outcomes that

yields from training sets, then compute the overall expected values that the

demands are from testing sets.

12

5.1. Data Pre-possessing

The data sets are from New York taxi trip1, we collected three years (July

2016 - June 2019) green taxi trip records as the data source which is archived

by month. Then we split the three years data sets into training set (from July

2016 to December 2018) and testing set (from January 2019 to June 2019),

each data set involves thousands of naive one-trip records with a complex

structure. Take the data set 2018-01 for example, it contains 793,529 records

and 19 attributes.

It is worth noting that the deterministic parameters in

our SP model like ri (revenue) and tij (transferring cost) can be estimated

from the data set easily. For convenience, in the following experiments, the

revenue per car is set to $100, the transferring cost is set to $5 by rough

estimation, the number of available vehicles is set to 15,000, and the holding
cost is assumed to follow the Gaussian distribution with parameters N (20, 9).

Additionally, in this data set the whole New York city is divided into 259

diﬀerent locations, we picked 20 locations with highest demands, which are

aggregated by days (i.e. 914 days for training set and 181 days for testing

set). Meanwhile, the pickup location and drop oﬀ location names are mapped

as location ID stored in PULocationID and DOLocationID in the data set

respectively. The New York city location division information details can be

found via https://data.world/nyc-taxi-limo/taxi-zone-lookup.

5.2. Probability Distribution and Sampling Results

After using KDE, the demands probability distributions of each location is

illustrated in the following ﬁgure, in which the bar plots denote the primitive

demand while the curves are the approximate distributions for the locations

derived by KDE.

1https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page

13

0.00200

0.00175

0.00150

0.00125

0.00100

0.00075

0.00050

0.00025

0.00000

0.004

0.003

0.002

0.001

0.000

0.0010

0.0008

0.0006

0.0004

0.0002

0.0000

500

1000

1500
2

2000

2500

−500

0

500

1000

1500
3

2000

2500

3000

y
t
i
l
i

b
a
b
o
r
p

0.0040

0.0035

0.0030

0.0025

0.0020

0.0015

0.0010

0.0005

0.0000

0

200

400

600

800

22

1000

1200

1400

0

200

400

600
21

800

1000

1200

Figure 1: Demand Distributions with Unimodal Type on Training Sets

Among the top 20 demands locations, there are mainly two types of dis-

tribution, one is unimodal type, which can be seen from Figure 1. The other

type which represents the most locations is bimodal type. This can be seen

from the following ﬁgure.

In the ﬁrst type, a speciﬁc functional form for the density model such as

Gaussian distribution can be assumed, in other words, parametric methods can

be applied on these scenarios. While in the second type, the particular form

of parametric functions are unable to provide the appropriate representation

of the real density.

In such cases, we must consider using non-parametric

approaches such as KDE.

14

0.0016

0.0014

0.0012

0.0010

0.0008

0.0006

0.0004

0.0002

0.0000

0.0020

0.0015

0.0010

0.0005

0.0000

0.0014

0.0012

0.0010

0.0008

0.0006

0.0004

0.0002

0.0000

0

500

1000

1500

2000

−250

0

250

500

750

1000

1250

1500

27

31

0.0025

0.0020

y
t
i
l
i

b
a
b
o
r
p

0.0015

0.0010

0.0005

0.0000

0

500

1000

16

1500

2000

−250

0

250

500

750

1000

1250

1500

37

Figure 2: Demand Distributions with Bimodal Type on Training Sets

Most of the parametric methods may work well in the unimodal distribu-

tions, but cannot achieve the same goal for bimodal distributions. That is why

KDE approach is introduced in this work.

5.3. Stochastic Model vs. Deterministic Model Results

In this experiment, We generate 5 groups of scenarios for SP model based

on the probability distributions that are derived from KDE. The numbers of

scenarios are 20, 50, 100, 200 and 500, each group runs 10 times. Additionally,

we consider deterministic model using the average demands that are calcu-

lated from training set (average demand of 919 days) and testing set (average

demand of 181 days). The average objective value and time elapse can be seen

in the table below.

Based on the experimental results, we come to conclude that the two-stage

SP model is able to yield more outcomes than the deterministic model. While

by average demands, the overall proﬁt on the training set is more that the one

on the testing set. Meanwhile, as we discussed in the beginning of this section,

15

Number of Scenario
20
50
100
200
500
deterministic (average on training set)
deterministic (average on testing set)

Objective Value Time Elapse (s)

$1,477,845
$1,487,606
$1,475,688
$1,484,367
$1,469,642
$1,325,723
$1,017,054

2.73
6.87
10.89
21.73
53.12
0.24
0.24

Table 1: Average Objective Value and Time Elapse under Diﬀerent Number of Scenarios

Number of Scenario Outcome(Laplace) Outcome(Gaussian)
$1,467,117
$1,422,868
$1,417,811
$1,406,112
$1,406,103

$1,425,569
$1,402,279
$1,417,403
$1,412,343
$1,398,546

20
50
100
200
500

Table 2: Average Objective Value under Diﬀerent Probability Distributions

as the number of scenario increases, the time elapses grows by approximate

linear increment.

5.4. Validations on Parametric Distributions

Besides the non-parametric approach, we also use several popular para-

metric distributions (such as Gaussian, lognormal, Laplace and Exponential

distributions) in terms of average expected value. Among these distributions,

we found that the SP model based on the exponential and lognormal distri-

butions are infeasible. The reason is the high average demand in a speciﬁc

location will yield the sampling that with extreme high demand which lead

the SP model infeasible.

As can be seen from the table, the overall proﬁt yielded from Laplace

distribution is slightly better than the one yielded from Gaussian distribution.

However both of the parametric approaches are inferior to the one from KDE

in terms of the overall proﬁt.

16

5.5. Solutions Comparisons on Testing Sets

In the two-stage SP model, solutions involves two parts, ﬁrst-stage de-

cision variables which denotes the numbers of cars that are placed at each

location before demands realize. Second-stage decision variables which denote

the number of cars that are moving between locations. In this experiment, we

use the values of ﬁrst-stage decision variables that are derived from two-stage

SP model that are constructed based on training model, to validate the over-

all proﬁt of two-stage SP model that are constructed based on testing sets (6

months, 181 days).

Outcomes from January to March

Jan.
Feb.
Mar.

1500000

1400000

1300000

1200000

t
i
f
o
r
p

1100000

1000000

900000

0

5

10

15

day

20

25

30

Figure 3: Overall Proﬁt on Testing Sets 2019-01 to 2019-03

As can be seen from the results, using the values ﬁrst-stage decision vari-

ables, the outcomes gap on training sets and testing sets is from 0.35% to

46.57%, the average gap is 22.1%. Meanwhile, compared to Table 1, we come

to conclude that most proﬁts that yielded from SP model on the testing sets

are higher that the proﬁt that yielded from deterministic model on the testing

sets.

17

Outcomes from April to June

Apr.
May
Jun.

1300000

1200000

1100000

t
i
f
o
r
p

1000000

900000

800000

0

5

10

15

day

20

25

30

Figure 4: Overall Proﬁt on Testing Sets 2019-04 to 2019-06

6. Conclusions and Future Work

In this paper, we propose a framework that involves kernel density esti-

mation to predict the location demands, and a two-stage stochastic program-

ming model to solve the car-sharing problem under demand uncertainty. In

more real world, the demand distribution would be time variant and evolves

gradually (or the parameters of distribution vary at least), which renders the

data-driven system outdated and leads to deteriorates the resulting solution

quality[30]. In order to describe this evolution in a more precise way, we will

investigate Bayesian learning which focus on posterior probability distribution

that is based on prior probability distribution and the likelihood of current

data. Namely, we will explore the dynamic data-driven stochastic program-

ming model for car-sharing problem.

Additionally, in our work, the proposed framework treats the location de-

mands by days. For some real-time applications, however, the daily demand

should be considered as time-series data, which would be handled by time-

18

series prediction machine learning algorithm. We will explore this topic in our

future works.

Meanwhile, in this paper, for convenience, some other factors we do not

consider. For example, we do not consider the capacity of locations, and the

route condition of balancing which may lead diﬀerent transportation costs.

Later on, we will extend the two-stage SP model to a more practical one.

References

[1] S. Shaheen, D. Sperling, C. Wagner, Carsharing in europe and north

american: past, present, and future (1998).

[2] M. Bruglieri, F. Pezzella, O. Pisacane, A two-phase optimization method

for a multiobjective vehicle relocation problem in electric carsharing sys-

tems, Journal of Combinatorial Optimization 36 (2018) 162–193.

[3] R. Vosooghi, J. Puchinger, M. Jankovic, G. Sirin, A critical analysis

of travel demand estimation for new one-way carsharing systems,

in:

2017 IEEE 20th International Conference on Intelligent Transportation

Systems (ITSC), IEEE, pp. 199–205.

[4] S. Illgen, M. H¨ock, Literature review of the vehicle relocation problem in

one-way car sharing networks, Transportation Research Part B: Method-

ological (2018).

[5] C. Gambella, E. Malaguti, F. Masini, D. Vigo, Optimizing relocation

operations in electric car-sharing, Omega 81 (2018) 234–245.

[6] K. Huang, G. H. de Almeida Correia, K. An, Solving the station-based

one-way carsharing network planning problem with relocations and non-

linear demand, Transportation Research Part C: Emerging Technologies

90 (2018) 1–17.

19

[7] M. Xu, Q. Meng, Z. Liu, Electric vehicle ﬂeet size and trip pricing for

one-way carsharing services considering vehicle relocation and personnel

assignment, Transportation Research Part B: Methodological 111 (2018)

60–82.

[8] B. Li, D. Krushinsky, T. Van Woensel, H. A. Reijers, An adaptive large

neighborhood search heuristic for the share-a-ride problem, Computers

& Operations Research 66 (2016) 170–180.

[9] M. Zhao, X. Li, J. Yin, J. Cui, L. Yang, S. An, An integrated framework

for electric vehicle rebalancing and staﬀ relocation in one-way carshar-

ing systems: Model formulation and lagrangian relaxation-based solution

approach, Transportation Research Part B: Methodological 117 (2018)

542–572.

[10] B. Boyacı, K. G. Zografos, N. Geroliminis, An optimization framework

for the development of eﬃcient one-way car-sharing systems, European

Journal of Operational Research 240 (2015) 718–733.

[11] G. Brandst¨atter, M. Kahr, M. Leitner, Determining optimal locations for

charging stations of electric car-sharing systems under stochastic demand,

Transportation Research Part B: Methodological 104 (2017) 17–35.

[12] E. Biondi, C. Boldrini, R. Bruno, Optimal deployment of stations for

a car sharing system with stochastic demands: A queueing theoretical

perspective,

in: 2016 IEEE 19th International Conference on Intelligent

Transportation Systems (ITSC), IEEE, pp. 1089–1095.

[13] W. Fan, R. Machemehl, A multi-stage monte carlo sampling based

stochastic programming model for the dynamic vehicle allocation prob-

lem, Technical Report, 2004.

20

[14] W. D. Fan, Optimizing strategic allocation of vehicles for one-way car-

sharing systems under demand uncertainty,

in: Journal of the Trans-

portation Research Forum, volume 53.

[15] R. Cavagnini, L. Bertazzi, F. Maggioni, M. Hewitt, A two-stage stochas-

tic optimization model for the bike sharing allocation and rebalancing

problem, 2018.

[16] J. R. Birge, F. Louveaux, Introduction to stochastic programming,

Springer Science & Business Media, 2011.

[17] H.-J. Zimmermann, Fuzzy programming and linear programming with

several objective functions, Fuzzy sets and systems 1 (1978) 45–55.

[18] A. Ben-Tal, L. El Ghaoui, A. Nemirovski, Robust optimization, vol-

ume 28, Princeton University Press, 2009.

[19] E. Delage, Y. Ye, Distributionally robust optimization under moment un-

certainty with application to data-driven problems, Operations research

58 (2010) 595–612.

[20] Y. Bengio, A. Lodi, A. Prouvost, Machine learning for combinato-

rial optimization: a methodological tour d’horizon,

arXiv preprint

arXiv:1811.06128 (2018).

[21] E. Larsen, S. Lachapelle, Y. Bengio, E. Frejinger, S. Lacoste-Julien,

A. Lodi, Predicting solution summaries to integer linear programs

under imperfect information with machine learning,

arXiv preprint

arXiv:1807.11876 (2018).

[22] C. Ning, F. You, Data-driven stochastic robust optimization: General

computational framework and algorithm leveraging machine learning for

optimization under uncertainty in the big data era, Computers & Chem-

ical Engineering 111 (2018) 115–133.

21

[23] C. Shang, F. You, Distributionally robust optimization for planning and

scheduling under uncertainty, Computers & Chemical Engineering 110

(2018) 53–68.

[24] T. Santoso, S. Ahmed, M. Goetschalckx, A. Shapiro, A stochastic pro-

gramming approach for supply chain network design under uncertainty,

European Journal of Operational Research 167 (2005) 96–115.

[25] C. J. Geyer, E. A. Thompson, Constrained monte carlo maximum likeli-

hood for dependent data, Journal of the Royal Statistical Society: Series

B (Methodological) 54 (1992) 657–683.

[26] W.-K. Mak, D. P. Morton, R. K. Wood, Monte carlo bounding techniques

for determining solution quality in stochastic programs, Operations re-

search letters 24 (1999) 47–56.

[27] E. L. Plambeck, B.-R. Fu, S. M. Robinson, R. Suri, Sample-path opti-

mization of convex stochastic performance functions, Mathematical Pro-

gramming 75 (1996) 137–176.

[28] A. Shapiro, T. Homem-de Mello, A simulation-based approach to two-

stage stochastic programming with recourse, Mathematical Programming

81 (1998) 301–325.

[29] J. F. Benders, Partitioning procedures for solving mixed-variables pro-

gramming problems, Computational Management Science 2 (2005) 3–19.

[30] C. Ning, F. You, Optimization under uncertainty in the era of big data and

deep learning: When machine learning meets mathematical programming,

Computers & Chemical Engineering (2019).

22

