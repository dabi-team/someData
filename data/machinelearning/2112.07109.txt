Hybrid Quantum Benders’ Decomposition For
Mixed-integer Linear Programming

Zhongqi Zhao1,2, Lei Fan2, and Zhu Han1
Dept. of Electrical and Computer Engineering1 and Dept. of Engineering Technology2
University of Houston, TX, USA

1
2
0
2

c
e
D
5
1

]

C
O
.
h
t
a
m

[

2
v
9
0
1
7
0
.
2
1
1
2
:
v
i
X
r
a

Abstract—The Benders’ decomposition algorithm is a tech-
nique in mathematical programming for complex mixed-integer
linear programming (MILP) problems with a particular block
structure. The strategy of Benders’ decomposition can be de-
scribed as a strategy of divide and conquer. The Benders’
decomposition algorithm has been employed in a variety of
applications such as communication, networking, and machine
learning. However, the master problem in Benders’ decompo-
sition is still NP-hard, which motivates us to employ quantum
computing. In the paper, we propose a hybrid quantum Benders’
decomposition algorithm. We transfer the Benders’ decomposi-
tion’s master problem into the quadratic unconstrained binary
optimization (QUBO) model and solve it by the state-of-the-art
quantum annealer. Then, we analyze the computational results
and discuss the feasibility of the proposed algorithm. Due to our
reformulation in the master problem in Benders’ decomposition,
our hybrid algorithm, which takes advantage of both classical
and quantum computers, can guarantee the solution quality for
solving MILP problems.

Index Terms—Benders’ Decomposition, Mixed-integer Linear
Programming, Optimization, Quantum Computing, Communica-
tion, Networking

I. INTRODUCTION

In recent years, mixed-integer linear programming (MILP)
is widely employed in many ﬁelds includes but is not limited to
planning and scheduling [1], transportation and telecommuni-
cations [2], energy and resource management [3] [4], network
design [5], and vehicle routing [6]. However, because MILP
is an NP-hard problem [7] [8], it is desirable to have powerful
solutions to solve large-scale MILP problems.

Benders’ decomposition algorithm [9] provides an efﬁcient
way to solve the MILP problem. In recent years, the Benders’
decomposition method has become a popular algorithm. It
exploits the structure of the MILP problem and successfully
reduces the computation workload. Benders’ decomposition
divides a MILP problem into a master problem and a sub-
problem. The subproblem is a linear programming model that
has strong duality. During the iterative solving process, the
optimality cuts and feasibility cuts obtained from the solution
of the subproblem will be added to the master problem. The
iterative process will stop when the gap between the upper
bound provided by the master problem and the lower bound
provided by the subproblem is sufﬁciently small. However, the
master problem in Benders’ decomposition is still NP-hard,
which motivates us to employ quantum computing.

Due to the characteristics of parallel computing, the quan-
tum computer can simultaneously calculate the ﬁnal result with

every possible model input. Therefore, quantum computers are
often considered to have surpassed the computational speed of
traditional computers. The quantum advantage has been proved
by quantum algorithms,
including Deutch-Jozsa Algorithm
[10], Grover’s Algorithm [11], Shor’s Algorithm [12]. In
recent years, leading quantum computer companies such as D-
Wave, IBM, Google, IonQ, Honeywell have made signiﬁcant
progress in hardware design. Normally, their quantum comput-
ers are in one of the two groups (i.e., analog quantum model,
universal quantum gate model). D-Wave currently provides the
quantum computer with the largest number of qubits on the
market.

By deploying the Ising model,

the D-Wave’s quantum
annealer computer can solve the problem formulated by the
quadratic unconstrained binary optimization (QUBO) model.
It depicts the energy state with coupling qubits interaction and
externally applied ﬁelds [13].

The power of quantum computers and challenges in MILP
problems inspire us to design a hybrid quantum Benders’
decomposition algorithm by jointly using quantum computing
and classical computing techniques. However, there are several
obstacles when we try to use Benders’ composition to combine
quantum and traditional computing. The ﬁrst difﬁculty is how
to convert the problem into an integer linear programming
(ILP) problem recognized by the quantum computer. The
Second difﬁculty is how to convert the NP-hard ILP problem
into a QUBO model as an input to a quantum computer. In
addition, the third difﬁculty is how to reformat the output of
quantum computers from the binary solution to the decimal
numeral system.

To overcome the above challenges, this paper reformulates
the master problem as an ILP model in Benders’ decomposi-
tion under the MILP problem. We transfer the master problem,
which is an ILP model, into a QUBO form. Although the
master problem in the Benders’ decomposition is still NP-
hard, we overcome this issue by proposing a hybrid Benders’
decomposition algorithm with the D-Wave hybrid quantum
computer for the MILP problem. Finally, we study a simple
case to evaluate the performance of the D-Wave hybrid solver
in solving the MILP problem. The contributions of this paper
are summarized as follows.

• We propose a hybrid quantum Benders’ decomposition
algorithm to ﬁnd the solution for the MILP problem.
Our hybrid quantum Benders’ decomposition algorithm

 
 
 
 
 
 
converges and returns the correct ﬁnal result as the
classical algorithm does.

• We propose an ILP model for the master problem in
Benders’ decomposition for the MILP problem. We re-
formulate the ILP model as a QUBO model recognized
by the quantum annealing machine.

• We employ the quantum computer provided by D-Wave
to solve the MILP problem by their Leap™ quantum
cloud service. Our experiments show the possibility of
using quantum computing to solve the MILP.

The rest of this paper is organized as follows. Section II
introduces the basics about the MILP problem and the Ben-
ders’ decomposition. Section III illustrates our hybrid quantum
Benders’ Decomposition algorithm. Section IV validates our
algorithm by showing the corresponding simulation. Finally,
Section V concludes the whole paper.

Fig. 1. The structure of hybrid Benders’ decomposition algorithm for MILP
using both quantum and traditional computing

II. MILP AND BENDERS’ DECOMPOSITION BASICS

A. Mixed-integer Linear Programming

approximation. Hence, the original MILP problem in (1) can
be written equivalently to a master problem as follows.

MILP has been widely adopted optimization problems that
include but are not limited to communication and networks. In
the ﬁeld of communication, for instance, it has been employed
to the resource allocation in wavelength division multiple
access (WDMA) [14], multi-access edge computing (MEC)
[15], ofﬂoading for fog computing [16], etc. Furthermore,
it plays an essential role in the ﬁeld of network research,
such as minimizing the network delay [17], scheduling virtual
network re-conﬁgurations [18], and improving the supply
chain network [19]. Besides civilian applications, it is no doubt
that MILP has been adopted for military purposes such as
assisting military pilot training [20]. These demonstrate that
MILP is a powerful tool for either classical problems or future
popular topics such as communication networks and resource
allocation. Consider a MILP model as follows:
c(cid:124)x + h(cid:124)y

max
x,y
s.t. Ax + Gy ≤ b,

(1)

x ∈ X, x ∈ {0, 1}n , y ∈ Rp
+.

Here x is a vector with binary variables and A is its corre-
sponding coefﬁcient matrix in constraints. y is a vector with
non-negative continuous variables and G is its corresponding
coefﬁcient matrix in constraints. c(cid:124) is the coefﬁcient vector of
variable x in the objective function and h(cid:124) is the coefﬁcient
vector of variable y in the objective function.

B. Benders’ Decomposition for MILP

We ﬁrst provide a brief introduction of the Benders’ Decom-
position. In the MILP problem (1), for each possible choice
of ¯x ∈ X, we ﬁnd the best choice for y by solving a linear
program. So we regard y as a function of x. Then we replace
the contribution of y to the objective with a scalar variable
representing the value of the best choice for a given ¯x. We
start with a crude approximation to the contribution of y and
then generate a sequence of dual solutions to tighten up the

Master Problem: max
x,t

c(cid:124)x + t

s.t.

(cid:124)
uk ≥ t
(b − Ax)
(cid:124)
rj ≥ 0
(b − Ax)
x ∈ X, x ∈ {0, 1}n , t ∈ R.

for k ∈ ˆK,
for j ∈ ˆJ,

(2)

We denote K and J as the extreme points uk and extreme
rays rk of the dual polyhedron Q = (cid:8)u ∈ Rm
+ | G(cid:124)u ≥ h(cid:9)
generated by the linear programming’s duality, which is called
the subproblem. The subproblem is as follows.

Subproblem: zLP (x) = min

(b − Ax)

(cid:124)

u

u

s.t. G(cid:124)u ≥ h,
u ∈ Rm
+ .

(3)

In the subproblem, if the inner product between (b − Ax) and
any dual ray rj(cid:48)
is negative then zLP (x) = −∞. Equivalently,
in this situation, the dual problem of Problem (3) is infeasible.
Then, x does not allow a feasible solution to the original
mixed-integer problem (1). Thus, we have a new feasibility
cut, i.e.,

(b − Ax)(cid:124)rj(cid:48)

≥ 0,

j(cid:48) ∈ J.

If x satisﬁes (4), then we yield an extreme point uk(cid:48)
value of zLP (x) is given by

zLP (x) = min
k(cid:48)∈K

(b − Ax)

(cid:124)

uk(cid:48)

.

(4)

and the

(5)

Thus, problem (1) is written equivalently as problem (2) by
denoting zLP (x) as a continuous real number variable t.
Equation (5) posts a new optimality cut in master problem.
In addition to the extreme points and extreme rays, we use ˆK
and ˆJ to denote the current known extreme points and extreme
rays of Q, respectively, where ˆK ⊆ K and ˆJ ⊆ J.

TABLE I
TABLE OF COMMON CONSTRAINT-PENALTY PAIRS

al is the coefﬁcient for the corresponding slack variable. b is
a constant. P is a user-deﬁned penalty coefﬁcient.

Constraint

Equivalent Penalty

B. Variable Representation

x1 + x2 = 1

P (x1 + x2 − 1)2

x1 + x2 ≥ 1

P (1 − x1 − x2 + x1x2)2

x1 + x2 ≤ 1

P (x1x2)

x1 + x2 + x3 ≤ 1

P (x1x2 + x1x3 + x2x3)

III. HYBRID QUANTUM BENDERS’ DECOMPOSITION

Quantum computer is a powerful tool to solve NP-hard
integer problems. Accordingly, we introduce the quantum
computer to solve the master problem in (2) since it has
a special formulation that can convert to an ILP problem.
The subproblem is a linear programming model which can
be solved well on the classical computer. As Fig. 1 shows,
we design a hybrid algorithm in which the master problem
is solved by the quantum computing techniques and the sub-
problem is solved by the classical computing techniques. The
two different computers are communicating with each other.
The subproblem returns new optimality and feasibility cuts to
tighten the bounds of the master problem. The integer solution
returned from the master problem gives the subproblem a
direction to ﬁnd new optimality and feasibility cuts.

A. Quantum Formulation

Quantum annealers are able to solve the optimization
problem in a QUBO formulation. To leverage state-of-art
quantum annealers provided by D-Wave, the ILP problem has
to be converted to the corresponding QUBO formulation. The
deﬁnition of QUBO are (6) and (7). Let f :{0, 1}n → R be a
quadratic polynomial over binary variables x of length n and
qij is corresponding cost coefﬁcient of xixj. We get equation
(6)

fQ (x) =

n−1
(cid:88)

n−1
(cid:88)

i=0

j=0

qijxixj = x(cid:124)Qx.

(6)

The QUBO problem consists of ﬁnding a binary vector
x∗ that is minimal with respect to f among all other binary
vectors, namely,

x∗ = arg minx f (x) .

(7)

Here x is a vector of binary variables where the length of
n, and Q is either an upper-diagonal matrix or a symmetric
matrix. Since (6) is an unconstrained optimization model,
we need to reformulate our constrained ILP as unconstrained
QUBO by using penalties. Next, we get the optimal solution
by ﬁnding the best penalty coefﬁcients of the constraints.
The principles of transforming classical constraints to their
equivalent penalties are displayed in the TABLE I. Here x1,
x2 and x3 are binary variables. si is a binary slack variable.

Now consider problem (2), the initial binary decision vari-
ables make up the vector x ∈ X with length of n. ¯t ∈ R.
In order to reformulate the master problem into the QUBO
formulation, we needs to represent the continuous variable
using binary bits. We use a binary vector w with length of M
bits to replace continuous variable ¯t. In general, ¯t requires the
binary numeral system assigning M bits to replace continuous
variable ¯t. Then we can recover the ¯t by

¯m+
(cid:88)

¯t =

2iw(i+m) −

i=−m
= ¯t (w) .

¯m−
(cid:88)

j=0

2jwj+1+m+ ¯m+

(8)

In (8), ¯m+ is the number of bits that assigned to represent
positive integer part, m is the number of bits assigned to
represent the positive decimal part, and ¯m− is the number
of bits that represent the negative integer part.

C. QUBO Setup

Let’s reconsider problem (2) and replace ¯t in (8). The new
problem is only depend on binary decision variables x and w.
Then, the new master problem is

max
x,w

s.t.

¯m+
(cid:88)

c(cid:124)x +

2iw(i+m) −

¯m−
(cid:88)

2jwj+1+m+ ¯m+

j=0
for k ∈ ˆK,

for j ∈ ˆJ,

i=−m
(cid:124)

(b − Ax)

uk ≥ ¯t (w) ,
rj ≥ 0,

(cid:124)
(b − Ax)
x ∈ X, x ∈ {0, 1}n ,
w ∈ W, w ∈ {0, 1}M .

(9)

Then we create a new binary decision variable collection
x(cid:48) = {w, x} to set up our QUBO matrix, where the length of
the binary vector x(cid:48) is n + M . According to the rule of setting
up QUBO, we will transfer our objective and constraints one
by one to be a symmetric matrix.

1) Objective Function: Because the quantum computer
only accepts a quadratic polynomial over binary variables.
Following the principle of the QUBO formulation, we convert
the objective function to be a QUBO matrix as follows.

¯m+
(cid:88)

c(cid:124)x +

2iw(i+m) −

¯m−
(cid:88)

j=0

2jwj+1+m+ ¯m+

i=−m
¯m+
(cid:88)

⇒Qobj =

i=−m

w(i+m)2iw(i+m) + x(cid:124)diag (c) x

(10)

−

¯m−
(cid:88)

j=0

wj+1+m+ ¯m+2jwj+1+m+ ¯m+.

2) Optimality Cuts: Similarly, following the principle of
constraint-penalty pairs in TABLE I, we not only introduce
the penalty but also convert the optimality cuts constraint to
be a QUBO matrix as follow.

¯t (w) + (cid:0)uk(cid:1)(cid:124)

Ax ≤ b(cid:124)uk, for k ∈ ˆK.


¯t (w) + (cid:0)uk(cid:1)(cid:124)

¯lK
(cid:88)

Ax +

⇒Pk


2

2lsK

kl − b(cid:124)uk



,

where ¯lK =

(cid:24)
log2

(cid:18)

b(cid:124)uk − min
w,x

l=0
(cid:16)

¯t (w) + (cid:0)uk(cid:1)(cid:124)

(cid:17)(cid:19)(cid:25)

Ax

.

3) Feasibility Cuts: Similarly, following the principle of
constraint-penalty pairs in TABLE I, we convert the feasibility
cuts constraint to be a QUBO matrix with penalties as follows:

(cid:0)rj(cid:1)(cid:124)


Ax ≤ b(cid:124)rj,

for j ∈ ˆJ.

⇒Pj

(cid:0)rj(cid:1)(cid:124)



Ax +

¯lJ
(cid:88)


2

2lsJ

kl − b(cid:124)rj



,

where ¯lJ =

(cid:16)

(cid:108)
log2

l=0
b(cid:124)rj − min
x

(cid:16)(cid:0)rj(cid:1)(cid:124)

Ax

(cid:17)(cid:17)(cid:109)

.

D. Proposed Algorithm

We deploy the D-Wave solver in our proposed heuristic
algorithm to solve the model. In addition, we need to carefully
tune the penalties for a decent QUBO model. An extremely
large penalty may cause quantum annealer malfunctioning
since it will explode the coefﬁcients. Similarly, a soft penalty
may make quantum annealer ignore the corresponding con-
straints. As long as the penalty is well-tuned, the quantum
solver will give the right answer with a relatively high proba-
bility. Therefore, we summarize our proposed hybrid quantum
Benders’ decomposition algorithm as Algorithm 1.

Algorithm 1 Hybrid Quantum Benders’ Decomposition Al-
gorithm
Require: Initial sets ˆK of extreme points and ˆJ of extreme

rays of Q
¯t ← +∞
t ← −∞
while | ¯t − t |≥ (cid:15) do

P ← Appropriate penalties numbers or arrays
Q ← Reformulate both objective and constraints in (2)
and construct the QUBO formulation by using correspond-
ing rules

x(cid:48) ← Solve problem (6) by quantum computer.
¯t ← Extract w and replace the ¯t with ¯t (w) (8)
zLP (x) ← Solve the problem (3)
t ← zLP (x)
if zLP (x) = −∞ then

An extreme ray j of Q has been found.
ˆJ = ˆJ ∪ {j}

else if zLP (x) < ¯t and ¯t (cid:54)= +∞ then

An extreme point k of Q has been found.
ˆK = ˆK ∪ {k}

end if
end while
return ¯t, x

A =

































0
0
0
0
0
0
0
0
−1 −1
0
−1
−1
0
0 −1
0 −1

, G =


1
1


0


0


0


1


0


0

0
6(cid:3) ,





, b =

1
0
1
0
0
0
0
1
0















0
0
0
1
1
0
1
1
0
0
0
0
1
0
0
0
0
1
c(cid:124) = (cid:2)−15 −10(cid:3) .















1
1
1
1
−1
0
0
0
0

















,

IV. NUMERICAL VALIDATION

B. Result

h(cid:124) = (cid:2)8

9

5

We validate the proposed algorithm by running on a hybrid
D-Wave quantum processing unit (QPU). Because the input of
interest to practice is too large to ﬁt onto current-model QPUs
and be solved directly by quantum annealing. We choose to
use the hybrid model instead of the pure QPU. The reason for
using the hybrid model is that the hybrid solver overcomes
a lot of input size barriers and allows the QPU to accept a
large input. More details can be found in [21]. We accessed
the D-Wave system by Leap™ quantum cloud service.

A. Example Setup

In our simulation, we consider a simple problem to test
our proposed quantum algorithm, where x ∈ X, x ∈ {0, 1}2,
y ∈ Y , y ≥ 0

Fig. 2 shows how our proposed hybrid quantum Benders’
decomposition algorithm adds optimality and feasibility cuts
to get the solution and corresponding ¯t. In the example, the
algorithm takes 4 rounds to let t converge. Four cuts are
added iteratively in the space and tighten the feasible region.
The algorithm can ﬁnd the optimal solution in each round.
Therefore, Fig. 2 demonstrates that our algorithm is reliable
and efﬁcient. In Fig. 3, the hidden dashed line denotes that the
lower bound in the corresponding round is negative inﬁnity.
As we can see in the graph, the upper bound and lower
bound converge. Our algorithm only takes two rounds to ﬁnd
the non-negative inﬁnity lower bound. This result proves that
our proposed algorithm is mathematically consistent with the
classic Benders’ decomposition algorithm. In other words,
as long as the classic Benders’ decomposition algorithm can
solve it, our algorithm can at least achieve the same.

Fig. 3. Convergence of ¯t and t

[8] C. H. Papadimitriou and M. Yannakakis, “The complexity of facets (and
some facets of complexity),” in Proceedings of the fourteenth annual
ACM symposium on Theory of computing, ser. STOC ’82. New York,
NY: ACM, May 1982, pp. 255–260.

[9] A. M. Geoffrion, “Generalized benders decomposition,” Journal of
Optimization Theory and Applications, vol. 10, no. 4, pp. 237–260, Oct.
1972.

[10] D. Deutsch and R. Jozsa, “Rapid solution of problems by quantum
computation,” Proceedings of the Royal Society of London. Series A:
Mathematical and Physical Sciences, vol. 439, no. 1907, pp. 553–558,
Dec. 1992.

[11] L. K. Grover, “A fast quantum mechanical algorithm for database
search,” in Proceedings of the Twenty-Eighth Annual ACM Symposium
on Theory of Computing, ser. STOC ’96. New York, NY: ACM, Jul.
1996, p. 212–219.

[12] P. W. Shor, “Polynomial-time algorithms for prime factorization and dis-
crete logarithms on a quantum computer,” SIAM Journal on Computing,
vol. 26, no. 5, pp. 1484–1509, Oct. 1997.

[13] E. Ising, “Beitrag zur Theorie des Ferromagnetismus,” Zeitschrift f¨ur

Physik, vol. 31, no. 1, pp. 253–258, Feb. 1925.

[14] A. S. Elgamal, O. Z. Alsulami, A. A. Qidan, T. E. H. El-
Gorashi, and J. M. H. Elmirghani, “Q-learning algorithm for resource
allocation in WDMA-based optical wireless communication networks,”
arXiv:2105.10729 [cs, eess], May 2021, arXiv: 2105.10729. [Online].
Available: http://arxiv.org/abs/2105.10729

[15] Y. Yu, X. Bu, K. Yang, H. Yang, X. Gao, and Z. Han, “UAV-Aided
Low Latency Multi-Access Edge Computing,” IEEE Transactions on
Vehicular Technology, vol. 70, no. 5, pp. 4955–4967, May 2021.
[16] Z. Wu, B. Li, Z. Fei, Z. Zheng, B. Li, and Z. Han, “Energy-Efﬁcient Ro-
bust Computation Ofﬂoading for Fog-IoT Systems,” IEEE Transactions
on Vehicular Technology, vol. 69, no. 4, pp. 4417–4425, Apr. 2020.
[17] W. Xuan, Z. Zhao, L. Fan, and Z. Han, “Minimizing Delay in Network
Function Visualization with Quantum Computing,” arXiv:2106.10707
[cs, eess, math], Jun. 2021, arXiv: 2106.10707. [Online]. Available:
http://arxiv.org/abs/2106.10707

[18] X. Pan, S. Zhao, H. Yang, S. Tang, and Z. Zhu, “Scheduling Virtual
Network Reconﬁgurations in Parallel in Hybrid Optical/Electrical Dat-
acenter Networks,” Journal of Lightwave Technology, vol. 39, no. 17,
pp. 5371–5382, Sep. 2021.

[19] P. Santander, F. A. Cruz Sanchez, H. Boudaoud, and M. Camargo,
“Closed loop supply chain network for local and distributed plastic recy-
cling for 3D printing: a MILP-based optimization approach,” Resources,
Conservation and Recycling, vol. 154, p. 104531, Mar. 2020.

[20] V. Mak-Hau, B. Hill, D. Kirszenblat, B. Moran, V. Nguyen, and
A. Novak, “A simultaneous sequencing and allocation problem for
military pilot training: Integer programming approaches,” Computers &
Industrial Engineering, vol. 154, p. 107161, Apr. 2021.

[21] “D-Wave

Hybrid

Solver

[On-
An
https://www.dwavesys.com/resources/white-paper/

Overview.”

Service:

line]. Available:
d-wave-hybrid-solver-service-an-overview/

Fig. 2. Benders’ Decomposition Process

V. CONCLUSION

In this paper, we not only reformulate the master problem
of Benders’ decomposition for the MILP problem as an ILP
model but also successfully convert it to a QUBO model. our
hybrid quantum Benders’ decomposition algorithm converges
and returns the correct ﬁnal result as the classical algorithm
does. In addition to that, our algorithm also guarantees the
solution quality for solving the MILP problem. In our simula-
tion, we solved an NP-hard MILP problem by using the hybrid
quantum computer provided by D-Wave. Therefore, we can
conclude that the quantum computer can potentially replace
the classical computer in solving the NP-hard master problem
of Benders’ decomposition algorithm in MILP problems.

REFERENCES

[1] S. P. Canto, “Application of Benders’ decomposition to power plant
preventive maintenance scheduling,” European Journal of Operational
Research, vol. 184, no. 2, pp. 759–777, Jan. 2008.

[2] A. M. Costa, “A survey on benders decomposition applied to ﬁxed-
charge network design problems,” Computers & Operations Research,
vol. 32, no. 6, pp. 1429–1450, Jun. 2005.

[3] X. Cai, D. C. McKinney, L. S. Lasdon, and D. W. Watkins, “Solving
large nonconvex water resources management models using generalized
benders decomposition,” Operations Research, vol. 49, no. 2, pp. 235–
245, Apr. 2001.

[4] J. L. Zhang and K. Ponnambalam, “Hydro energy management optimiza-
tion in a deregulated electricity market,” Optimization and Engineering,
vol. 7, no. 1, pp. 47–61, Mar. 2006.

[5] B. Fortz and M. Poss, “An improved Benders decomposition applied
to a multi-layer network design problem,” Operations Research Letters,
vol. 37, no. 5, pp. 359–364, Sep. 2009.

[6] A. I. Corr´ea, A. Langevin, and L.-M. Rousseau, “Scheduling and
routing of automated guided vehicles: A hybrid approach,” Computers
& Operations Research, vol. 34, no. 6, pp. 1688–1707, Jun. 2007.
[7] A. Bulut and T. K. Ralphs, “On the complexity of inverse mixed
integer linear optimization,” arXiv:2104.09002 [cs, math], Apr. 2021,
arXiv: 2104.09002. [Online]. Available: http://arxiv.org/abs/2104.09002

