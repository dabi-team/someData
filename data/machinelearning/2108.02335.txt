1
2
0
2

g
u
A
3
2

]

C
O
.
h
t
a
m

[

2
v
5
3
3
2
0
.
8
0
1
2
:
v
i
X
r
a

Advances in Trajectory Optimization for Space Vehicle
Control

Danylo Malyutaa,∗, Yue Yua, Purnanand Elangoa, Beh¸cet A¸cıkme¸sea

aWilliam E. Boeing Department of Aeronautics and Astronautics, University of
Washington, Seattle, WA 98195, USA

Abstract

Space mission design places a premium on cost and operational eﬃciency. The
search for new science and life beyond Earth calls for spacecraft that can deliver
scientiﬁc payloads to geologically rich yet hazardous landing sites. At the same
time, the last four decades of optimization research have put a suite of powerful
optimization tools at the ﬁngertips of the controls engineer. As we enter the
new decade, optimization theory, algorithms, and software tooling have reached
a critical mass to start seeing serious application in space vehicle guidance and
control systems. This survey paper provides a detailed overview of recent ad-
vances, successes, and promising directions for optimization-based space vehicle
control. The considered applications include planetary landing, rendezvous and
proximity operations, small body landing, constrained attitude reorientation,
endo-atmospheric ﬂight including ascent and reentry, and orbit transfer and
injection. The primary focus is on the last ten years of progress, which have
seen a veritable rise in the number of applications using three core technologies:
lossless convexiﬁcation, sequential convex programming, and model predictive
control. The reader will come away with a well-rounded understanding of the
state-of-the-art in each space vehicle control application, and will be well posi-
tioned to tackle important current open problems using convex optimization as
a core technology.

Keywords: Optimal control, Convex optimization, Model predictive control,
Trajectory optimization, Rocket ascent, Atmospheric reentry, Rocket landing,
Spacecraft rendezvous, Small body landing, Attitude reorientation, Orbit
transfer, Interplanetary trajectory

∗Corresponding author
Email addresses: danylo@uw.edu (Danylo Malyuta), yueyu@uw.edu (Yue Yu),

pelango@uw.edu (Purnanand Elango), behcet@uw.edu (Beh¸cet A¸cıkme¸se)

Preprint submitted to Annual Reviews in Control

August 25, 2021

 
 
 
 
 
 
Contents

1 Introduction

2 Background on Optimization Methods

2.1 Optimal Control Theory . . . . . . . . . . . . . . . . . . . . . . .
2.1.1
Indirect Methods . . . . . . . . . . . . . . . . . . . . . . .
2.1.2 Direct Methods . . . . . . . . . . . . . . . . . . . . . . . .
2.2 Discretization . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2.1 Example Dynamical System . . . . . . . . . . . . . . . . .
2.2.2 Zeroth-order Hold . . . . . . . . . . . . . . . . . . . . . .
2.2.3 Runge-Kutta Discretization . . . . . . . . . . . . . . . . .
2.2.4 Pseudospectral Discretization . . . . . . . . . . . . . . . .
2.3 Convex Optimization . . . . . . . . . . . . . . . . . . . . . . . . .
2.4 Sequential Convex Programming . . . . . . . . . . . . . . . . . .
2.4.1 Related Algorithms . . . . . . . . . . . . . . . . . . . . . .
2.5 Mixed-integer Programming . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .

2.5.1
2.5.2 Homotopy Methods

2.6 Model Predictive Control

State-triggered Constraints

3 Applications

3.1 Powered Descent Guidance for Rocket Landing . . . . . . . . . .
3.2 Rendezvous and Proximity Operations . . . . . . . . . . . . . . .
3.3 Small Body Landing . . . . . . . . . . . . . . . . . . . . . . . . .
3.4 Constrained Reorientation . . . . . . . . . . . . . . . . . . . . . .
3.5 Endo-atmospheric Flight . . . . . . . . . . . . . . . . . . . . . . .
3.5.1 Ascent Flight . . . . . . . . . . . . . . . . . . . . . . . . .
3.5.2 Atmospheric Entry . . . . . . . . . . . . . . . . . . . . . .
3.6 Orbit Transfer and Injection . . . . . . . . . . . . . . . . . . . . .

4 Outlook

4.1 Optimization Software . . . . . . . . . . . . . . . . . . . . . . . .
4.2 Future Directions . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2.1 Guaranteed Performance
. . . . . . . . . . . . . . . . . .
4.2.2 Machine Learning . . . . . . . . . . . . . . . . . . . . . .

2

7
7
7
9
10
11
12
14
16
19
21
23
24
25
27
29

30
30
38
42
44
46
46
50
55

57
57
57
57
59

1. Introduction

Improvements in computing hardware and maturing software libraries have
made optimization technology become practical for space vehicle control. The
term computational guidance and control (CGC) was recently coined to refer
to control techniques that are iterative in nature and that rely on the onboard
computation of control actions (Lu, 2017; Tsiotras and Mesbahi, 2017).

2

This paper surveys optimization-based methods, which are a subset of CGC
for space vehicles. We consider applications for launchers, planetary landers,
satellites, and spacecraft. The common theme across all applications is the use
of an optimization problem to achieve a control objective. Generally speaking,
the goal is to solve:

J(x) s.t.

min
x
x ∈ C,

(1a)

(1b)

where J : Rn → R is a cost function, C ⊆ Rn is a feasible set, and x is an n-
dimensional vector of decision variables. Optimization is a relevant area of study
for modern space vehicle control for two reasons: eﬀectiveness of formulation,
and the (emerging) existence of eﬃcient solution methods.

To answer why an optimization formulation is eﬀective, consider the physical
and operational constraints on the tasks that recent and future space vehicles
aim to perform. Future launchers and planetary landers will require advanced
entry, descent, and landing (EDL) algorithms to drive down cost via reusability,
or to access scientiﬁcally interesting sites (Blackmore, 2016). Instead of landing
in open terrain, future landers will navigate challenging environments such as
volcanic vents and jagged blades of ice (San Mart´ın and Lee, 2013; Robertson,
2017; Europa Study Team, 2012). Meanwhile, human exploration missions will
likely be preceded by cargo delivery, requiring landings to occur in close prox-
imity (Dwyer-Cianciolo et al., 2019). Motivated by the presence of water ice,
upcoming missions to the Moon will target its south pole (NASA Science, 2019),
where extreme light-dark lighting conditions call for an automated sensor-based
landing (Robinson, 2018). Even for robotic missions, new onboard technology
such as vision-based terrain relative navigation requires the satisfaction of chal-
lenging constraints that couple motion and sensing. Regardless of whether one
achieves the lowest cost (1a) or not, optimization is indeed one of the most com-
pelling frameworks for ﬁnding feasible solutions in the presence of challenging
constraints (Tsiotras and Mesbahi, 2017).

In orbit, foreseeable space missions will necessitate robotic docking for sam-
ple return, debris capture, and human load alleviation (Woﬃnden and Geller,
2007). Early forms of the capability have been shown on the Japanese ETS-
VII, European ATV, Russian Soyuz, US XSS-11, and US DART demonstrators.
Most recently, the human-rated SpaceX Crew Dragon performed autonomous
docking with the ISS, and the Orion Spacecraft is set to also feature this abil-
ity (Stephens et al., 2013; D'Souza et al., 2007). Further development in au-
tonomous spacecraft rendezvous calls for smaller and cheaper sensors as well
as a reduction in the degree of cooperation by the target spacecraft. This will
require more ﬂexibility in the chaser’s autonomy, which is practically achievable
using onboard optimization.

The above mission objectives suggest that future space vehicle autonomy will
have to adeptly operate within a multitude of operational constraints. However,
optimality usually stipulates operation near the boundary of the set of feasible
solutions. In other words, the vehicle must activate its constraints (i.e., touch

3

Figure 1: Taxonomy of optimization problems. Going from inside to outside, each class
becomes more diﬃcult to solve. Roughly speaking, SOCP is currently the most general class
that can be solved reliably enough to be deployed on a space system in short order.

the constraint set boundary) at important or prolonged periods of its motion.
By virtue of the feasible set C in (1b), optimization is one of the few suitable
methods (and is perhaps the most natural one) to directly impose system con-
straints (Mayne et al., 2000).

The beneﬁt of an appropriate formulation, however, is limited if no algo-
rithm exists to solve Problem 1 eﬃciently, which means quickly and utilizing few
computational resources. Convex optimization has been a popular approach for
formulating problems since it enables eﬃcient solution methods. Figure 1 illus-
trates a taxonomy of optimization problem classes or families, of which convex
optimization is a part. The inner-most class in Figure 1 is the linear program
(LP). Next comes the quadratic program (QP), followed by the second-order
cone program (SOCP). Troves of detail on each class may be found in many
excellent optimization textbooks (Rockafellar, 1970; Nocedal and Wright, 1999;
Boyd and Vandenberghe, 2004). Roughly speaking, SOCP is the most general
class of problems that state-of-the-art algorithms can solve with high reliabil-
ity and rigorous performance guarantees (Dueri et al., 2014, 2017; Domahidi
et al., 2013). Beyond SOCP, the semideﬁnite program (SDP) class enables op-
timization over the space of positive semideﬁnite matrices, which leads to many
important robust control design algorithms (Skogestad and Postlethwaite, 2005;
Boyd et al., 1994). SDP is the most general class of convex optimization for
which oﬀ-the-shelf solvers are available, and many advances have been made in
recent years towards more scalable and robust SDP solvers (Majumdar et al.,
2020).

Although convex optimization can solve a large number of practical engi-
neering problems, future space system requirements often surpass the ﬂexibility
of “vanilla” convex optimization. Solving nonconvex optimization problems will
be required for many foreseeable space vehicles (Carson III et al., 2019). Thus,
extending beyond SDP, we introduce three nonconvex problem classes.

First, one can abandon the convexity requirement, but retain function con-
tinuity, leading to the nonlinear program (NLP) class. Here the objective and
constraint functions are continuous, albeit nonconvex. Alternatively, one could
retain convexity but abandon continuity. This leads to the mixed-integer convex
program (MICP) class, where binary variables are introduced to emulate dis-

4

crete switches, such as those of valves, relays, or pulsing space thrusters (Dueri
et al., 2017; Achterberg, 2007; Achterberg and Wunderling, 2013). Note that
the MICP and NLP classes overlap, since some constraints admit both forms of
expression. For example, the mixed-integer constraint:

x ∈ {0} ∪ {x ∈ R : x ≥ 1},

can be equivalently formulated as a nonlinear continuous constraint:

x(x − 1) ≥ 0, x ≥ 0.

(2)

(3)

In the most general case, nonlinearity and discontinuity are combined to
form the mixed-integer nonlinear program (MINLP) class. Since integer vari-
ables are nowhere continuous and the corresponding solution methods are of a
quite diﬀerent breed to continuous nonlinear programming, we reserve MINLP
as the largest and toughest problem class. Algorithms for NLP, MICP, and
MINLP typically suﬀer either from exponential complexity, a lack of conver-
gence guarantees, or both (Malyuta and A¸cıkme¸se, 2020a). Nevertheless, the
optimization community has had many successes in ﬁnding practical solution
methods even for these most challenging problems (Achterberg and Wunderling,
2013; Szmuk et al., 2019b).

This paper stands in good company of numerous surveys on aerospace op-
timization. (Betts, 1998) presents an eloquent, albeit somewhat dated, treatise
on trajectory optimization methods. (Tr´elat, 2012) provides a comprehensive
survey of modern optimal control theory and indirect methods for aerospace
problems, covering geometric optimal control, homotopy methods, and favor-
able properies of orbital mechanics that can be leveraged for trajectory optimiza-
tion. (Tsiotras and Mesbahi, 2017) corroborate the importance of optimization
in forthcoming space missions. (Liu et al., 2017) survey the various appearances
of lossless convexiﬁcation and sequential convex programming in aerospace guid-
ance methods. (Eren et al., 2017) cover extensively the topic of model predictive
control for aerospace applications, where Problem 1 is solved recursively to com-
pute control actions. (Mao et al., 2018a) survey three particular topics: lossless
convexiﬁcation, sequential convex programming, and solver customization for
real-time computation. (Shirazi et al., 2018) provide a thorough discussion on
the general philosophy and speciﬁc methods and solutions for in-space trajectory
optimization. Recently, (Song et al., 2020) surveyed optimization methods in
rocket powered descent guidance with a focus on feasibility, dynamic accuracy,
and real-time performance.

This paper contributes the most recent broad survey of convex optimization-
based space vehicle control methods. We consider rockets for payload launch,
rocket-powered planetary and small body landers, satellites, interplanetary space-
craft, and atmospheric entry vehicles. However, we do not cover some related
topics like guidance of purely atmospheric vehicles (e.g., missiles and hypersonic
aircraft), and control of satellite swarms, due to suﬃciently unique distinctions.
For a start in these areas, we refer the reader to (Palumbo et al., 2010; Murillo
and Lu, 2010; Zarchan, 2019; Tewari, 2011) for hypersonic vehicle control, and

5

(Rahmani et al., 2019; Morgan et al., 2012; Scharf et al., 2003; Tillerson et al.,
2002) for swarm control.

From the algorithmic perspective, our focus is on convex optimization-based
methods for solving the full spectrum of optimization classes in Figure 1. The
motivation for focusing on convex methods comes from the great leaps in the
reliability of convex solvers and the availability of ﬂight heritage, which gives
convex optimization a technology infusion advantage for future onboard and
ground-based algorithms (Dueri et al., 2017; Blackmore, 2016). We nevertheless
make side references to other important, but not convex optimization-based,
algorithms throughout the text. Lastly, this paper discusses algorithms at a
high level, and chooses to cover a large number of applications and methods
in favor of providing deep technical detail for each algorithm. The goal, in the
end, is to expose the reader to dominant recent and future directions in convex
optimization-based space vehicle control research.

The paper is organized as follows. Section 2 covers general theory of impor-
tant optimization methods used throughout spaceﬂight applications. Section 3
then surveys each space vehicle control application individually. Section 3.1
surveys powered descent guidance for planetary rocket landing. Section 3.2 dis-
cusses spacecraft rendezvous and proximity operations, followed by a discussion
in Section 3.3 of its close cousin, small body landing. Constrained attitude reori-
entation is covered in Section 3.4. Section 3.5 surveys endo-atmospheric ﬂight,
including ascent and entry. Last but not least, orbit insertion and transfer are
surveyed in Section 3.6. We conclude the paper with a perspective on what lies
ahead for computational guidance and control. As such, Section 4 highlights
some recent applications of machine learning to select problems. This ﬁnal sec-
tion also tabulates some of the optimization software tooling now available for
getting started in optimization methods for spaceﬂight applications.

Notation. Binary numbers belong to the set I (cid:44) {0, 1}. Vectors are written
in bold, such as x ∈ Rn versus y ∈ R. The identity matrix is generally written
as I, and sometimes as In ∈ Rn×n in order to be explicit about size. The zero
scalar, vector, or matrix is always written as 0, with its size derived from context.
The vector of ones is written as 1, with size again derived from context. Starred
quantities denote optimal values, for example x∗ is the optimal value of x. We
use (a; b; c) to concatenate elements into a column vector, like in MATLAB.
The symbol ⊗ denotes the Kronecker matrix product or quaternion multipli-
cation, depending on context. The positive-part function [x]+
(cid:44) max{0, x}
saturates negative elements of x to zero. Given a function f (x(t), y(t), t), we
simplify the argument list via the shorthand f [t]. Throughout the paper, we
interchangeably use the terms “optimization” and “programming”, courtesy
of linear optimization historically being used for planning military operations
(Wright, 2011). When we talk about “nonlinear programming”, we mean more
precisely “nonconvex programming”. Convexity is now known to be the true
separator of eﬃcient algorithms, however this discovery came after linear pro-
gramming already established itself as the dominant class that can be eﬃciently
solved via the Simplex method (Rockafellar, 1993). Finally, “guidance” means
“trajectory generation”, while “navigation” means “state estimation”.

6

2. Background on Optimization Methods

This section provides a broad overview of key algorithms for space vehicle
trajectory optimization. The main focus is on methods that exploit convexity,
since convex optimization is where state-of-the-art solvers provide the strongest
convergence guarantees at the smallest computational cost (Nocedal and Wright,
1999; Boyd and Vandenberghe, 2004).

Our algorithm overview proceeds as follows. First, Section 2.1 introduces the
general continuous-time optimal control problem. Then, Section 2.2 describes
how the problem is discretized to yield a ﬁnite-dimensional problem that can
be solved on a computer. Following this introduction, Sections 2.3-2.6 overview
important algorithms for space vehicle trajectory optimization.

2.1. Optimal Control Theory

Optimal control theory is the bedrock of every trajectory optimization prob-
lem (Pontryagin et al., 1986; Berkovitz, 1974). The goal is to ﬁnd an optimal
input trajectory for the following optimal control problem (OCP):

(cid:90) tf

L(x(τ ), u(τ ), τ )dτ s.t.

0

Lf (x(tf ), tf ) +

min
tf ,u
˙x(t) = f (x(t), u(t), t), ∀t ∈ [0, tf ],
g(x(t), u(t), t) ≤ 0, ∀t ∈ [0, tf ],
b(x(0), x(tf ), tf ) = 0.

(4a)

(4b)

(4c)

(4d)

In Problem 4, x : [0, tf ] → Rnx is the state trajectory and u : [0, tf ] → Rnu is
the input trajectory, while tf ∈ R is the ﬁnal time (i.e., the trajectory duration).
The state evolves according to the dynamics f : Rnx × Rnu × R → Rnx , and
satisﬁes at all times a set of constraints deﬁned by g : Rnx × Rnu × R → Rnc . At
the temporal boundaries, the state satisﬁes conditions provided by a boundary
constraint b : Rnx × Rnx × R → Rnb . The quality of an input trajectory is
measured by a cost function consisting of a running cost L : Rnx × Rnu × R → R
and a terminal cost Lf : Rnx × R → R.

Two aspects diﬀerentiate Problem 4 from a typical parameter optimization
problem. First, the constraints encode a physical process governed by ordinary
diﬀerential equations (ODEs) (4b). Second, due to the continuity of time, the
input trajectory has an inﬁnite number of design parameters. This makes Prob-
lem 4 a semi-inﬁnite optimization problem that cannot be directly implemented
on a computer.
In the following subsections, we provide a brief overview of
two approaches for solving this problem, called the direct and indirect meth-
ods. Roughly speaking, direct methods discretize Problem 4 and solve it as a
parameter optimization problem, while indirect methods attempt to satisfy the
necessary conditions of optimality.

2.1.1. Indirect Methods

The maximum principle, developed since the 1960s, extends the classical
calculus of variations and provides a set of necessary conditions of optimality

7

for Problem 4 (Pontryagin et al., 1986; Hartl et al., 1995). The maximum
principle has found numerous aerospace applications (Longuski et al., 2014).

The indirect family of optimization methods solves the necessary conditions
of optimality, which involves a two-point boundary value problem (TPBVP)
corresponding to the state and costate dynamics and their boundary condi-
tions. Traditionally, this is solved by a single- or multiple-shooting method.
One limitation of these methods is the requirement to specify in advance the
time intervals over which constraint (4c) is active (Betts, 1998). Other issues
that hinder onboard implementation include poor convergence stemming from
a sensitivity to the initial guess, and long computation time.

Despite these challenges, the indirect approach is often the only practical
solution method when aspects like numerical sensitivity and trajectory dura-
tion rule out direct methods. Low-thrust trajectory optimization, discussed
in Section 3.6, is a frequent candidate for the indirect approach since the low
thrust-to-weight ratios and long trajectory durations (from weeks to years) cre-
ate extreme numerical challenges when formulated as a parameter optimization
problem.

Most indirect methods in aerospace literature solve only the necessary con-
ditions of optimality for Problem 4. However, nonlinear optimization problems
can have stationary points that are not local minima, such as saddle points and
local maxima. This has prompted interest in using second-order conditions of
optimality to ensure that the solution is indeed a local minimum (Cesari, 1983).
At the turn of the century, researchers showed how second-order information
can be incorporated in orbit transfer applications (Jo and Prussing, 2000). In
the last decade, further work used second-order optimality conditions for orbit
transfer and constrained attitude reorientation problems (Caillau et al., 2012b;
Picot, 2012).

A promising modern indirect method family relies on homotopy in order
to solve the TPBVP (Pan et al., 2016, 2019; Pan and Pan, 2020; Taheri and
Junkins, 2019; Tr´elat, 2012; Rasotto et al., 2015; Lizia et al., 2014). Homotopy
aims to address the aforementioned challenges of slow convergence, initial guess
quality, and active constraint speciﬁcation. The core idea is to describe the
problem as a family of problems parametrized by a homotopy parameter κ ∈
[0, 1], such that the original problem is recovered for κ = 1, and the problem for
κ = 0 is trivially solved. For example, consider solving a non-trivial root-ﬁnding
problem:

F (y) = 0,
(5)
where y ∈ Rn and F : Rn → Rn is a smooth mapping. A (linear) homotopy
method will have us deﬁne the following homotopy function:

Γ(y, κ) (cid:44) κF (y) + (1 − κ)G(y) = 0,

(6)

where G : Rn → Rn is a smooth function that has a known or easily computable
root y0 ∈ Rn. Popular choices are G(y) = F (y) − F (y0), called Newton homo-
topy, and G(y) = y − y0, called ﬁxed-point homotopy. In nonlinear homotopy,

8

the function Γ(y, κ) is a nonlinear function of κ, but otherwise similar relation-
ships continue to hold.

The locus of points (y, κ) where (6) holds is called a zero curve of the root-
ﬁnding problem. Success of the homotopy approach relies on the zero curve
being continuous in κ on the interval κ ∈ [0, 1], albeit possibly discontinuous in
y. Unfortunately, the existence of such a curve is not guaranteed except for a
few restricted problems (Watson, 2002; Pan et al., 2018). In general, the loci
of points satisfying (6) may include bifurcations, escapes to inﬁnity, and limit
points. Furthermore, the solution at κ = 1 may not be unique.

Nevertheless, homotopy methods have been developed to successfully tra-
verse the κ ∈ [0, 1] interval when a zero curve does exist. The essence of the ho-
motopy approach is to judiciously update an intermediate solution (yk, κk) so as
to follow a κ-continuous zero curve from y0 to yK, where Γ(yK, 1) = F (yK) = 0
and K is the ﬁnal iteration counter. At each iteration, some methods use a
Newton-based root ﬁnding approach (Pan et al., 2016), while others rely solely
on numerical integration (Caillau et al., 2012a). For further details on the ho-
motopy approach, we refer the reader to (Pan et al., 2016).

2.1.2. Direct Methods

Direct methods oﬀer a compelling alternative where one discretizes Prob-
lem 4 and solves it as a parameter optimization problem via numerical opti-
mization. The resulting solution in the convex case is usually very close to the
optimal continuous-time one. As discussed in the next section, the solution
can satisfy (4b) exactly if an exact discretization method is used (Szmuk et al.,
2018). The optimization step is most often performed by a primal-dual interior
point method (IPM), for which a considerable software ecosystem now exists
thanks to 40 years of active development (Nocedal and Wright, 1999; Forsgren
et al., 2002; Wright, 2005). Some of this software is listed in Section 4.1.

Thanks to this expansive software ecosystem, and the large research com-
munity actively working on numerical optimization algorithms, direct methods
may be considered as the most popular approach today. Their ability to “eﬀort-
lessly” handle constraints like (4c) makes them particularly attractive (Betts,
1998). In the remainder of this paper, our main focus is on direct methods that
use convex optimization.

Nevertheless, as mentioned in the previous section, indirect methods are
still relevant for problems that exhibit peculiarities such as extreme numerical
sensitivity. It must further be emphasized that some of the best modern algo-
rithms have resulted from the combined use of an indirect and a direct approach.
Typically an indirect method, and in particular the necessary conditions of op-
timality, can be used to discover the solution structure, which informs more
eﬃcient customized algorithm design for a direct solution method. We will dis-
cuss how this “fusion” approach was taken for powered descent guidance and
atmospheric entry applications in Section 2.3 and Section 3.5.2 respectively.
Last but not least, the maximum principle can sometimes be used to ﬁnd the
analytic globally optimal solution for problems where no direct method can do
so (e.g., nonlinear problems). In this case, an indirect method can provide a

9

(a) ZOH (16).

(b) RK4 (22).

(c) Global CGL (28).

(d) Adaptive CGL (30).

Figure 2: Matrix sparsity patterns for the linear dynamics equation F X = GU for the mass-
spring-damper system in Section 2.2.1, using each of the discretization methods discussed
in Section 2.2. A salient feature of the ZOH and RK4 methods is their relative sparsity
compared to pseudospectral methods. The adaptive collocation in (d) increases sparsity by
subdividing time into multiple intervals within which separate collocations are applied, and
which are coupled only through continuity at their interface (in this ﬁgure, at x2). The non-
zero element colors merely serve to visually separate the elements by their value (larger values
correspond to warmer colors).

reference solution against which one can benchmark a direct method’s perfor-
mance (Reynolds et al., 2020b; Sundstr¨om and Guzzella, 2009). In summary,
indirect and direct methods play complementary roles: the former is a good
ground-truth and analysis tool, while the latter is preferred for real-time on-
board implementation.

2.2. Discretization

To be solvable on a computer, the semi-inﬁnite Problem 4 must generally
be reduced to a ﬁnite-dimensional problem. This is done by the process of
discretization, where the goal is to convert the diﬀerential constraint (4b) into
a ﬁnite-dimensional algebraic constraint. This is especially important for the
family of direct methods discussed in Section 2.1.2, which rely on discretization
to solve Problem 4 as a parameter optimization problem.

Generally, discretization is achieved by partitioning time into a grid of N
nodes and ﬁxing a basis for the state signal, the control signal, or both (Malyuta

10

III−A−A−ABBBx1x2x3x40.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.00-0.93-0.180.72-0.781.000.000.001.000.000.000.000.000.000.000.000.000.000.000.000.00-0.93-0.180.72-0.781.000.000.001.000.000.000.000.000.000.000.000.000.000.000.000.00-0.93-0.180.72-0.781.000.000.001.00Fu1u2u30.000.000.000.000.000.000.020.180.000.000.000.000.000.000.020.180.000.000.000.000.000.000.020.18GIII−A−A−AB+B+B+B−B−B−x1x2x3x40.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.00-0.93-0.180.72-0.781.000.000.001.000.000.000.000.000.000.000.000.000.000.000.000.00-0.93-0.180.72-0.781.000.000.001.000.000.000.000.000.000.000.000.000.000.000.000.00-0.93-0.180.72-0.781.000.000.001.00Fu1u2u3u40.000.000.000.000.000.000.000.000.010.090.010.090.000.000.000.000.000.000.010.090.010.090.000.000.000.000.000.000.010.090.010.09G0.2D11I−˜A0.2D12I0.2D13I0.2D14I0.2D21I0.2D22I−˜A0.2D23I0.2D24I0.2D31I0.2D32I0.2D33I−˜A0.2D34I0.2D41I0.2D42I0.2D43I0.2D44I−˜A˜B˜B˜B˜Bx1x2x3x4-0.63-1.004.000.170.800.000.000.80-0.27-0.000.00-0.270.100.000.000.10-0.20-0.000.00-0.200.07-1.004.000.870.200.000.000.20-0.07-0.000.00-0.070.070.000.000.07-0.20-0.000.00-0.20-0.07-1.004.000.730.200.000.000.20-0.10-0.000.00-0.100.270.000.000.27-0.80-0.000.00-0.800.63-1.004.001.43Fu1u2u3u40.001.000.000.000.000.000.000.000.000.000.001.000.000.000.000.000.000.000.000.000.001.000.000.000.000.000.000.000.000.000.001.00G2D111I−˜A2D112I2D121I2D122I−˜A0.22D211I−˜A0.22D212I0.22D221I0.22D222I−˜A˜B˜B˜B˜Bx1x2x3-1.00-1.004.00-0.201.000.000.001.000.000.000.000.00-1.00-0.000.00-1.001.00-1.004.001.800.000.000.000.000.000.000.000.00-0.11-1.004.000.690.110.000.000.110.000.000.000.00-0.11-0.000.00-0.110.11-1.004.000.91Fu1u2u3u40.001.000.000.000.000.000.000.000.000.000.001.000.000.000.000.000.000.000.000.000.001.000.000.000.000.000.000.000.000.000.001.00Get al., 2019). The following subsections discuss three popular approaches: an
exact discretization based on zeroth-order hold (Section 2.2.2), an approximate
discretization based on the classic Runge-Kutta method (Section 2.2.3), and a
pseudospectral discretization that is either global or adaptive (Section 2.2.4).
We frame the discussion in terms of three salient features: 1) sparsity of the
discrete representation of the dynamics (4b), 2) the mechanics of obtaining a
continuous-time trajectory from the discrete representation, and 3) the con-
nection, if any, between the discrete solution and the optimal costates of the
original Problem 4 derived via the maximum principle. Our goal is to give the
reader enough insight into discretization to appreciate the algorithmic choices
for spaceﬂight applications in Section 3. For a more thorough discussion, we
defer to the specialized papers (Betts, 1998, 2010; Kelly, 2017; Conway, 2011;
Ross and Karpenko, 2012; Rao, 2010; Agamawi and Rao, 2020; Malyuta et al.,
2019; Phogat et al., 2018b).

2.2.1. Example Dynamical System

To ground our coverage of discretization in a concrete application, let us

restrict (4b) to a linear time-invariant (LTI) system of the form:

˙x(t) = ˜Ax(t) + ˜Bu(t).

(7)

Discretization for (7) is easily generalized to handle linearized dynamics of
a nonlinear system (like (4b)) about a reference state-input trajectory (¯x, ¯u) :
R → Rnx × Rnu . To do so, replace ˜A and ˜B with:

¯f [t],
˜A(t) = ∇x
¯f [t],
˜B(t) = ∇u
¯f [t] = f (¯x(t), ¯u(t), t),

(8a)

(8b)

(8c)

and add a residual term r(t) = ¯f [t] − ˜A(t)¯x(t) − ˜B(t)¯u(t) to the right-hand
side of (7). Note that in this case, (7) generally becomes a linear time-varying
(LTV) system. While the zeroth-order hold method as presented in Section 2.2.2
requires linear dynamics, the Runge-Kutta and pseudospectral methods in their
full generality can in fact handle the unmodiﬁed nonlinear dynamics (4b).

As a particular example of (7), we will consider a simple mass-spring-damper

system with nx = 2 states and nu = 1 input:

¨r(t) + 2ζωn ˙r(t) + ω2

nr(t) = m−1f (t),

(9)

where r is the position, m is the mass, ζ is the damping ratio, ωn is the natural
frequency, and f is the force (input). We set m = 1 kg, ζ = 0.2, and ωn =
2 rad s−1. Furthermore, consider a staircase input signal where f (t) = 1 for
t ∈ [0, tstep) and f (t) = 0 for t ≥ tstep. We shall use tstep = 1 s. The initial
condition is r(0) = ˙r(0) = 0. The simulation source code for this example is
publically available1.

1Visit https://github.com/dmalyuta/arc_2020_code.

11

The dynamics (9) can be written in the form (7) by using the state x =

(r; ˙r) ∈ R2, the input u = f ∈ R, and the Jacobians:
(cid:20) 0
m−1

(cid:20) 0
−ω2

, ˜B =

˜A =

n −2ζωn

(cid:21)

1

(cid:21)

.

(10)

2.2.2. Zeroth-order Hold

Zeroth-order hold (ZOH) is a discretization method that assumes the input
to be a staircase signal on the temporal grid. ZOH is called an exact discretiza-
tion method because, if the input satisﬁes this staircase property, then the
discrete-time system state will exactly match the continuous-time system state
at the temporal grid nodes. In practice, ZOH is a highly relevant discretiza-
tion type because oﬀ-the-shelf actuators in most engineering domains, including
spaceﬂight, output staircase commands (Scharf et al., 2017).

Optimization routines that use ZOH typically consider a uniform temporal
grid, although the method generally allows for arbitrarily distributed grid nodes:

tk =

k − 1
N − 1

tf , k = 1, . . . , N.

(11)

The input trajectory is then reduced to a ﬁnite number of inputs uk ∈ Rnu ,

k = 1, . . . , N − 1, that deﬁne the aforementioned staircase signal:

u(t) = uk, ∀t ∈ [tk, tk+1), k = 1, . . . , N − 1.

(12)

It then becomes possible to ﬁnd the explicit update equation for the state
across any [tk, tk+1] time interval, using standard linear systems theory (Antsak-
lis and Michel, 2006):

xk+1 = Axk + Buk,

A = Φ(∆tk, 0), B = A

(cid:90) ∆tk

0

Φ(τ, 0)−1dτ ˜B,

(13a)

(13b)

where ∆tk = tk+1 − tk, xk ≡ x(tk) and Φ(·, tk) : R → Rnx×nx is the state
transition matrix. Since we assumed the system to be LTI, we have Φ(t, tk) =
e ˜A(t−tk) where e is the matrix exponential.
If the system is LTV, the state
transition matrix can be computed by integrating the following ODE:

˙Φ(t, tk) = ˜A(t)Φ(t, tk), Φ(tk, tk) = I.

(14)

As it was said before, ZOH is an exact discretization method if the input
behaves according to (12). The reason behind this becomes clear by inspecting
(13), which exactly propagates the state from one time step to the next. This
is diﬀerent from forward Euler discretization, where the update is:

xk+1 = xk + ∆tk( ˜Axk + ˜Buk),

(15)

For a general non-staircase input signal, however, there is a subtle connection
between ZOH and forward Euler discretization. The former does a zeroth-order

12

hold on the input signal, and integrates the state exactly, while the latter does
a zeroth-order hold on the output signal (i.e., the time derivative of the system
state). Thus, unlike in forward Euler discretization, state propagation for ZOH
discretization cannot diverge for a stable system.

The incremental update equation (13a) can be written in “stacked form” to
expose how the discrete dynamics are in fact a system of linear equations. To
begin, note that writing (13a) for k = 1, . . . , N − 1 is mathematically equivalent
to:

(cid:34)

X =

0
Inx 0
IN −1 ⊗ A 0

(cid:35)

(cid:34)

X +

(cid:35)

0
IN −1 ⊗ B

U (cid:44) AX + BU ,

(16)

where X = (x1; x2; . . . ; xN ) ∈ RN nx is the stacked state, U = (u1; u2; . . . ; uN −1) ∈
R(N −1)nu is the stacked input, and ⊗ denotes the Kronecker product. Zeros in
(16) denote blocks of commensurate dimensions. Clearly, we can then write the
discrete dynamics as:

F X = GU where F (cid:44) I − A, G (cid:44) B.

(17)

The sparsity pattern for (17) using the mass-spring-damper system (9) with
N = 4 and tf = 0.6 s is shown in Figure 2a. Both F and G consist largely of
zeros, which has important consequences for customizing optimization routines
that exploit this sparsity to speed up computation (Malyuta et al., 2019; Dueri
et al., 2017).

An initial value problem (IVP) using a ﬁxed x1 can be solved either by

recursively applying (13a), or by solving (17):

X2: = F †
2:

(cid:0)F1x1 + GU (cid:1),

(18)

where F1 represents the ﬁrst nx columns of F , F2: represents the remaining
columns, and X2: = (x2; . . . ; xN ). We use the left pseudoinverse of F2:, and note
that the solution is unique since F2: has a trivial nullspace. Figure 3 shows an
example of applying (13a) to the mass-spring-damper system (9) using tf = 10 s
and N = 51. Because the input step at tstep = 1 s falls exactly at a time node,
the discretization is exact.

To connect ZOH discretization back to Problem 4, it is now possible to write

the problem as a ﬁnite-dimensional nonlinear parameter optimization:

min
tf ,U

Lf (xN , tf ) +

tf
N − 1

N −1
(cid:88)

k=1

L(xk, uk, tk) s.t.

F X = GU ,
g(xk, uk, tk) ≤ 0, ∀k = 1, . . . , N − 1,
b(x1, xN , tN ) = 0.

(19a)

(19b)

(19c)

(19d)

A few remarks are in order about Problem 19. First, the constraint (19b)
exactly satisﬁes the original dynamics (4b) under the ZOH assumption. Second,

13

Figure 3: Simulation of a mass-spring-damper system using four discretization types, whose
matrix sparsity patterns are shown in Figure 2.
In each case, the simulation ﬁnal time is
tf = 10 s and a temporal grid of N = 51 is used. The pseudospectral simulations are drawn
as continuous curves by using (24) to recover a continuous-time trajectory from a ﬁnite set of
states at the temporal grid nodes.

the optimal solution is only approximately optimal for Problem 4 due to an
inexact running cost integration in (19a) and a ﬁnite (N − 1)-dimensional basis
with which the ZOH input is constructed. Third, the path constraints (4c) are
satisﬁed pointwise in time via (19c), in other words there is a possibility of
inter-sample constraint violation, which can nevertheless sometimes be avoided
(A¸cıkme¸se et al., 2008). Finally, in many important special cases Problem 19
is convex, and a multitude of algorithms exploit this fact, as shall be seen
throughout this paper.

2.2.3. Runge-Kutta Discretization

The classic Runge-Kutta (RK4) discretization method can be viewed as an
advanced version of the forward Euler method (15). Unlike ZOH, which ex-
plicitly assumes a staircase input signal, RK4 is a general numerical integration
method that can be applied to any state and control signals. As such, it is
an inexact discretization method like forward Euler, albeit a much more ac-
curate one. In particular, if we use the uniform temporal grid (11), then the
accumulated RK4 integration error shrinks as O(N −4), whereas forward Euler
integration error shrinks at the much slower rate O(N −1) (Betts, 2010; Butcher,
2016).

Directly from the deﬁnition of the RK4 method, we can write the following

14

0246810−0.35−0.1700.170.35trPosition[m]0246810−0.04−0.0200.020.04tdiscretized−exactIntegrationerror[m]tsteptstepExactZOHRK4GlobalCGLAdaptiveCGLstate update equation:

xk+1 = xk + ∆tk(k1 + 2k2 + 2k3 + k4)/6,

k1 = ˜Axk + ˜Buk,
k2 = ˜A(xk + 0.5∆tkk1) + ˜Buk+1/2,
k3 = ˜A(xk + 0.5∆tkk2) + ˜Buk+1/2,
k4 = ˜A(xk + ∆tkk3) + ˜Buk+1,

(20a)

(20b)

(20c)

(20d)

(20e)

where uk+1/2 = 0.5(uk + uk+1). By reshuﬄing terms in (20), we can write the
state update in a similar form to (13a):

xk+1 = Axk + B−uk + B+uk+1,

(21)

where {A, B−, B+} are constructed from {I, ˜A, ˜B} according to (20). Taking
inspiration from (16), (21) can be written in stacked form:

(cid:34)

X =

0
0
Inx
IN −1 ⊗ A 0

(cid:35)

(cid:34)

X +

0
(cid:0)IN −1 ⊗ [B− B+](cid:1)E

(cid:35)

U ,

(22)

where the matrix E combines columns in order to share the input values uk for
2 ≤ k ≤ N − 1 (i.e., the internal time grid nodes):
(cid:20)Inu
Inu

Inu , IN −2 ⊗

E = blkdiag

, Inu

(23)

(cid:111)
.

(cid:110)

(cid:21)

Unlike ZOH, RK4 actually uses the input value at the N th time node, hence
there is one extra degree-of-freedom (DoF) leading to a slightly larger stacked
input, U = (u1; u2; . . . ; uN ) ∈ RN nu . By deﬁning A and B according to (22),
the discrete dynamics take the same form as (17).
In this case, the sparsity
pattern for the same mass-spring-damper example, using N = 4 and tf = 0.6 s,
is shown in Figure 2b. Like ZOH, RK4 yields a sparse representation of the
dynamics.

Like ZOH, an IVP using the discretized dynamics can be solved either by
recursively applying (21), or via a pseudoinverse like (18). An example is shown
in Figure 3. Clearly, RK4 is an inexact discretization method. In this case, the
interpolated input uk+1/2 in (20c)-(20d) is erroneous just after the input step at
tstep = 1 s. Increasing the grid resolution will quickly decrease the integration
error, at the expense of a larger linear system (17).

When discretized with RK4, Problem 4 looks much like Problem 19, except
uN is an extra decision variable and the user may also choose RK4 to integrate
the running cost in (4a). However, a subtle but very important diﬀerence is
that the solution to the discretized problem generally no longer exactly satisﬁes
the original continuous-time dynamics. Thus, although RK4 may be computa-
tionally slightly cheaper than ZOH (especially for LTV dynamics, since it does
not require computing integrals like (13b)), it is used less often than ZOH or
pseudospectral methods discussed next.

15

2.2.4. Pseudospectral Discretization

A key property of ZOH discretization from Section 2.2.2 is that it does not
parametrize the state signal. As a result, numerical integration is required to
recover the continuous-time state trajectory from the solution of Problem 19. In
trajectory optimization literature, this is known as explicit simulation or time
marching (Rao, 2010). An alternative to this approach is to approximate the
state trajectory upfront by a function that is generated from a ﬁnite-dimensional
basis of polynomials:

x(t) =

N
(cid:88)

i=1

xiφi

(cid:0)τ (t)(cid:1), t ∈ [0, tf ], φi(τ ) (cid:44)

N
(cid:89)

j=1
j(cid:54)=i

τ − τj
τi − τj

,

(24)

f t − 1 and φi : [−1, 1] → R are known as Lagrange interpolating
where τ = 2t−1
polynomials of degree N −1. Note that the polynomials are deﬁned on a normal-
ized time interval. Since the temporal mapping is bijective, we can equivalently
talk about either t or τ .

Given a temporal grid, the Lagrange interpolating polynomials satisfy an
isolation property: φi(τi) = 1 and φi(τj) = 0 for all j (cid:54)= i. Hence, the basis co-
eﬃcients xi correspond exactly to trajectory values at the temporal grid nodes.
Moreover, the trajectory at all other times is known automatically thanks to
In eﬀect, solving
(24). This is known as implicit simulation or collocation.
for the N trajectory values at the temporal grid nodes is enough to recover the
complete (approximate) continuous-time trajectory. Because (24) approximates
the state trajectory over the entire [0, tf ] interval, this technique is known as a
global collocation.

Collocation conditions are used in order to make the polynomial obtained

from (24) behave according to the system dynamics (7):

˙x(tj) = 2t−1
f

N
(cid:88)

i=1

xiφ(cid:48)
i

(cid:0)τ (tj)(cid:1) = ˜Ax(tj) + ˜Bu(tj), ∀j ∈ C,

(25)

where the prime operator denotes diﬀerentiation with respect to τ (i.e., dφi/dτ )
and C ⊆ {1, . . . , N } is the set of collocation points (Malyuta et al., 2019). Note
that we have already seen a disguised form of (25) earlier for the RK4 method.
In particular, the well-known (20b)-(20e) are essentially collocation conditions.
According to the Stone-Weierstrass theorem (Boyd, 1989), (24) approxi-
mates a smooth signal with arbitrary accuracy as N is increased. To avoid the
so-called Runge’s divergence phenomenon, time is discretized according to one
of several special non-uniform distributions, known as orthogonal collocations
(de Boor and Swartz, 1973). In this scheme, the grid nodes τk are chosen to
be the roots of a polynomial that is a member of a family of orthogonal poly-
nomials. For example, Chebyshev-Gauss-Lobatto (CGL) orthogonal collocation
places the scaled temporal grid nodes at the roots of (1 − τ )2c(cid:48)
N −1(τ ) = 0,
where cN (τ ) = cos(N arccos(τ )) is a Chebyshev polynomial of degree N . This

16

particular collocation admits an explicit solution:

τk = − cos

(cid:18) k − 1
N − 1

(cid:19)

π

, k = 1, . . . , N.

(26)

A pseudospectral method is a discretization scheme that approximates the
state trajectory using (24), and selects a particular orthogonal collocation for
the collocation points (Rao, 2010; Ross and Karpenko, 2012; Kelly, 2017). In
fact, the choice of collocation points is so crucial that ﬂavors of pseudospectral
methods are named after them (e.g., the CGL pseudospectral method). Given
this choice, if the dynamics and control are smooth, the approximation (24)
will converge spectrally (i.e., at an exponential rate in N ) to the exact state
trajectory (Rao, 2010).

Associated with any C is a diﬀerentiation matrix D ∈ R|C|×N such that
Dji = φ(cid:48)
i(τj). Some collocations (e.g., CGL) admit an explicit diﬀerentiation
matrix, while for others the matrix can be eﬃciently computed to within ma-
chine rounding error via barycentric Lagrange interpolation (Berrut and Tre-
fethen, 2004). Having D available allows us to write the collocation conditions
(25) in stacked form:

(2t−1

f D ⊗ Inx )X = (I|C| ⊗ ˜A)X + (I|C| ⊗ ˜B)U ,

(27)

where the stacked state and input have the same dimensions as in RK4. We
may thus write the discrete dynamics in the form of (19b) by deﬁning:

f D ⊗ Inx − I|C| ⊗ ˜A,

F = 2t−1
G = I|C| ⊗ ˜B.

(28a)

(28b)

The sparsity pattern for the mass-spring-damper example, using N = 4 and
tf = 10 s, is shown in Figure 2c. This time, due to F the dynamics constraint is
not sparse. This has historically been a source of computational diﬃculty and a
performance bottleneck for pseudospectral discretization-based optimal control
(Malyuta et al., 2019; Sagliano, 2019).

Unlike for ZOH and RK4, where an IVP can be solved by recursively ap-
plying an update equation, pseudospectral methods require solving (27) si-
multaneously, which yields the state values at the temporal grid nodes all at
once.
In general, the solution is once again obtained via the pseudoinverse
(18). However, some pseudospectral methods such as Legendre-Gauss (LG)
and Legendre-Gauss-Radau (LGR) produce a square and invertible F2: (fur-
thermore, F −1
2: F1 = 1 ⊗ Inx ). This can be used to write (19b) in an “integral
form” that has certain computation advantages (Fran¸colin et al., 2014):

X2: = −(1 ⊗ Inx )x1 + F −1

2: GU .

(29)

Returning to our example of the mass-spring-damper system, Figure 3 shows
a simulation using CGL collocation. Like RK4, pseudospectral discretization is
an inexact method, and only approaches exactness as N grows large. In this

17

case, the method struggles in particular due to the discontinuous nature of the
input signal, which steps from one to zero at tstep = 1 s. The control trajectory
is not smooth due to this discontinuity, hence the aforementioned spectral con-
vergence guarantee does not apply. Indeed, it takes disproportionately more grid
nodes to deal with this discontinuity, than if we were to subdivide the simulation
into two segments t ∈ [0, tstep) and t ∈ [tstep, tf ], where the pre-discontinuity
input applies over the ﬁrst interval and the post-discontinuity input applies over
the second interval (Darby et al., 2010).

This idea is at the core of so-called adaptive, or local, collocation methods
(Darby et al., 2010; Sagliano, 2019; Koeppen et al., 2019; Zhao and Shang,
2018). These methods use schemes such as hp-adaptation (h and p stand for
segment width and polynomial degree, respectively) in order to search for points
like tstep, and to subdivide the [0, tf ] interval into multiple segments according
to an error criterion. We defer to the above papers for the description of these
adaptation schemes. For our purposes, suppose that a partition of [0, tf ] into
S segments is available. The (cid:96)th segment has a basis of N(cid:96) polynomials, a set
of collocation points C(cid:96), and is of duration ts,(cid:96) such that (cid:80)S
(cid:96)=1 ts,(cid:96) = tf . Each
segment has its own version of (28):

s,(cid:96) D(cid:96) ⊗ Inx − I|C(cid:96)| ⊗ ˜A,

F(cid:96) = 2t−1
G(cid:96) = I|C(cid:96)| ⊗ ˜B,

(30a)

(30b)

where the newly deﬁned F(cid:96) is not to be confused with the earlier F1 and F2:
matrices. The new matrices in (30) are now combined to write a monolithic
dynamics constraint (19b). Doing so is straightforward for the input, which can
be discontinuous across segment interfaces:

G = blkdiag{G1, . . . , GS}.

(31)

The state trajectory, however, must remain continuous across segment in-
terfaces. To this end, the same coeﬃcient xi is used in (24) for both the ﬁnal
node of segment (cid:96), and the start node of segment (cid:96) + 1. Understanding this, we
can write:

F = blkdiag{F1, . . . , FS}E,

(32)

where E combines the columns of F in a similar way to (23). The net result is
that the ﬁnal nx columns of F(cid:96) sit above the ﬁrst nx columns of F(cid:96)+1.

An example of the sparsity pattern for an adaptive collocation scheme is
shown in Figure 2d using N1 = N2 = 2, ts,1 = tstep = 1 s, and tf = 10 s. One
can observe that a second beneﬁt of adaptive collocation is that it results in a
more sparse representation of the dynamics. This helps to improve optimization
algorithm performance (Darby et al., 2010; Sagliano, 2019).

Solving an IVP with adaptive collocation works in the same way as for
global collocation. An example is shown in Figure 3, where two segments are
used with the split occuring exactly at tstep. In this manner, two instances of
(24) are used to approximate the state trajectory, which is smooth in the interior

18

of both temporal segments. As such, the approximation is extremely accurate
and, for practical purposes, may be considered exact in this case.

A ﬁnal, and sometimes very important, aspect of pseudospectral discretiza-
tion is that certain collocation schemes yield direct correspondence to the max-
imum principle costates of the original optimal control problem (Problem 4).
This is known as the covector mapping theorem (Gong et al., 2007). One exam-
ple is the integral form (29) for LG and LGR collocation (Fran¸colin et al., 2014).
Roughly speaking, the Lagrange multipliers of the corresponding parameter op-
timization Problem 19 can be mapped to the costates of Problem 4. Note that
this requires approximating the running cost integral in (4a) using quadrature
weights {wk}N

k=1 deﬁned by the collocation scheme:

(cid:90) tf

0

L(x(τ ), u(τ ), τ )dτ ≈

N
(cid:88)

k=1

wkL(xk, uk, tk).

(33)

This unique aspect of pseudospectral methods is why some of the optimal
control problem solvers in Table 1 at the end of this article, such as DIDO,
GPOPS-II, and SPARTAN, are listed as both direct and indirect solvers. In
fact, they all solve a discretized version of Problem 4. Nevertheless, they are
able to recover the maximum principle costate trajectories from the optimal
solution (Ross and Karpenko, 2012; Patterson and Rao, 2014; Sagliano, 2019).

2.3. Convex Optimization

We now come to the question of how to actually solve a ﬁnite-dimensional
optimization problem such as Problem 19. As mentioned in the introduction,
this can be done relatively reliably using well established tools if the problem
is convex. Convexity has pervaded optimization algorithm design due to the
following property. If a function is convex, global statements can be made from
local function evaluations. The ramiﬁcations of this property cannot be un-
derstated, ranging from the guarantee of ﬁnding a global optimum (Rockafellar,
1970) to precise statements on the maximum iteration count (Peng et al., 2002).
For the purposes of this review, it is suﬃcient to keep in mind that a set C ⊆ Rn
is convex if it contains the line segment connecting any two of its points:

x, y ∈ C ⇔ [x, y]θ ∈ C ∀θ ∈ [0, 1],
(34)
where [x, y]θ (cid:44) θx + (1 − θ)y. Similarly, a function f : Rn → R is convex if its
domain is convex and it lies below the line segment connecting any two of its
points:

x, y ∈ dom(f ) ⇔ f ([x, y]θ) ≤ [f (x), f (y)]θ ∀θ ∈ [0, 1].

(35)

Countless resources cover the theory of convex optimization, among which
are the notable books by (Boyd and Vandenberghe, 2004; Rockafellar, 1970;
Nocedal and Wright, 1999). After applying a discretization technique akin to
those in Section 2.2, a trajectory design convex optimization problem takes the
following form (which is just another way of writing Problem 19):

J ∗(tf ) = min
U

J(X, U , tf ) s.t.

(36a)

19

Figure 4: Illustration of the convex relaxation technique used throughout much of lossless
convexiﬁcation literature for powered descent guidance. Using the maximum principle, lossless
convexiﬁcation proves that the optimal solution (T ∗(t); σ∗(t)) lies on the green boundary of
the set ¯U .

xk+1 = Akxk + Bkuk + dk, ∀k = 1, . . . , N − 1,
g(xk, uk, tk) ≤ 0, ∀k = 1, . . . , N − 1,
b(x1, xN ) = 0.

(36b)

(36c)

(36d)

In Problem 36, J : RN nx × R(N −1)nu × R → R is a convex cost function,
g : Rnx ×Rnu ×R → Rnc deﬁnes a convex set of constraints, and b : Rnx ×Rnx →
Rnb is an aﬃne function deﬁning the trajectory boundary conditions. If tf is
a decision variable, a sequence of Problem 36 instances can be solved using a
line search that computes mintf J ∗(tf ) (Blackmore et al., 2010). The sequence
{Ak, Bk, dk}N −1
k=1 of matrices of commensurate dimensions represents the linear
time-varying discretized dynamics (4b).
In numerous aerospace applications,
including rocket landing and spacecraft rendezvous, the dynamics are at least
approximately of this form (A¸cıkme¸se and Ploen, 2007; de Ruiter et al., 2013).
The path constraints (36c) are where nonconvexity appears most often for
a space vehicle trajectory optimization problems. Sometimes the nonconvex-
ity can be removed by a clever reformulation of the problem, a process called
convexiﬁcation. If the reformulation is exact, in other words the solution set is
neither reduced nor expanded, the convexiﬁcation is lossless. One example of
lossless convexiﬁcation that has pervaded rocket landing literature is a thrust
lower-bound constraint. Let T (t) ∈ R3 be a thrust vector, then combustion
stability and engine performance dictate the following constraint:

ρmin ≤ (cid:107)T (t)(cid:107)2 ≤ ρmax, ∀t ∈ [0, tf ].

(37)

The lower-bound is nonconvex, but it was shown that it admits the following

lossless convexiﬁcation (A¸cıkme¸se and Ploen, 2007):

ρmin ≤ σ(t) ≤ ρmax, (cid:107)T (t)(cid:107)2 ≤ σ(t), ∀t ∈ [0, tf ].

(38)

The convexiﬁcation “lifts” the input space into an extra dimension, as illus-
trated in Figure 4. Clearly the lifted feasible set ¯U is convex, and its projection

20

onto the original coordinates contains the feasible set deﬁned by (37). The back-
bone of lossless convexiﬁcation is a proof via the maximum principle that the
optimal solution lies on the boundary of ¯U, as highlighted in Figure 4. Thus,
it can be shown that the solution using (38) is optimal for the original problem
which uses (37).

Another example of lossless convexiﬁcation comes from the constrained re-
orientation problem. Let q(t) ∈ R4 with (cid:107)q(t)(cid:107)2 = 1 be a unit quaternion vector
describing the attitude of a spacecraft. During the reorientation maneuver, it
is critical that sensitive instruments on the spacecraft are not exposed to bright
celestial objects. This dictates the following path constraint:

q(t)TM q(t) ≤ 0, ∀t ∈ [0, tf ],

(39)

where M ∈ R4×4 is a symmetric matrix that is not positive semideﬁnite, making
the constraint nonconvex. However, when considered together with the implicit
constraint (cid:107)q(t)(cid:107)2 = 1, (39) can be losslessly replaced with the following convex
constraint (Kim and Mesbahi, 2004):

q(t)T(M + µI)q(t) ≤ µ, ∀t ∈ [0, tf ],

(40)

where µ is chosen such that the matrix M + µI is positive semideﬁnite. Instead
of the maximum principle, the proof of this lossless convexiﬁcation hinges on
the geometry of the unit quaternion.

2.4. Sequential Convex Programming

Sequential convex programming (SCP) is an umbrella name for a family of
nonconvex local optimization methods. It is one of many available tools along-
side nonlinear programming, dynamic programming, and genetic algorithms
(Floudas and Pardalos, 2009). If lossless convexiﬁcation is a surgical knife to
remove acute nonconvexity, SCP is a catch-all sledgehammer for nonconvex tra-
jectory design. Clearly many aerospace problems are nonconvex, and SCP has
proven to be a competitive solution method for many of them (Szmuk et al.,
2018; Liu and Lu, 2014; Bonalli et al., 2017). This section provides an intuition
about how SCP algorithms work as well as their advantages and limitations.
The interested reader can ﬁnd further information in (Malyuta et al., 2021)
which provides a comprehensive tutorial on SCP.

At the core, every SCP algorithm is based on the following idea: iteratively
solve a convex approximation of Problem 4, and update the approximation as
new solutions are obtained. Figure 5 provides an illustration and highlights
how SCP can be thought of as a predictor-corrector algorithm. In the forward
predictor path, the current solution is evaluated for its quality. If the quality
check fails, the reverse corrector path improves the quality by solving a subprob-
lem that is a better convex approximation. Examples of SCP algorithms include
cases where the subproblem is linear (Palacios-Gomez et al., 1982), second-order
conic (Mao et al., 2018b), and semideﬁnite (Fares et al., 2002).

Consider Problem 36 for a simple concrete example of the SCP philosophy.
Assume that g is the only nonconvex element and that tf is ﬁxed. At the

21

Figure 5: Block diagram illustration of a typical SCP algorithm. The forward path can be
seen as a “predictor” step, while the reverse path that calls the convex optimization solver
can be seen as a “corrector” step. Although the test criterion can be guaranteed to trigger
for certain SCP ﬂavors, the solution may not be feasible for the original problem.

location 1 in Figure 5, the SCP method provides an iterate in the form of a
current trajectory guess {¯xk, ¯uk}N −1
k=1 . In its most basic form, SCP linearizes
and relaxes the g function:

¯g +

∂¯g
∂x

∆xk +

∂¯g
∂u

∆uk ≤ αk, ∀k = 1, . . . , N − 1,

(41)

where αk ∈ Rnc is a virtual buﬀer zone and we deﬁne ¯g (cid:44) g(¯xk, ¯uk, tk), ∆xk (cid:44)
xk − ¯xk, and ∆uk (cid:44) uk − ¯uk. The subproblem solved at location 2 in Figure 5
is then given by:

N −1
(cid:88)

N −1
(cid:88)

k=1

J(X, U , tf ) + wvc1T

min
u1,...,uN −1
α1,...,αN −1
η1,...,ηN −1
xk+1 = Akxk + Bkuk + dk, ∀k = 1, . . . , N − 1,

[αk]+ + wtr

k=1

∆uk ≤ αk, ∀k = 1, . . . , N − 1,

¯g +

∂¯g
∂x

∆xk +

∂¯g
∂u
(cid:107)∆uk(cid:107) ≤ ηk, ∀k = 1, . . . , N − 1,
b(x1, xN ) = 0.

ηk s.t.

(42a)

(42b)

(42c)

(42d)

(42e)

Problem 42 introduces several new elements. The variables ηk regulate the
size of trust regions around the previous solution, and the weights wtr, wvc ∈ R
are set to large positive values that encourage convergence and zero constraint
violation. The best choice of p-norm (cid:107)·(cid:107) in (42d) depends on the problem
structure. The stopping criterion used in 3 of Figure 5 may be, for example:

max
k∈{1,...,N −1}

ηk ≤ (cid:15) and

max
k∈{1,...,N −1}

(cid:13)
(cid:13)[αk]+(cid:13)

(cid:13)∞ ≤ (cid:15),

(43)

where (cid:15) is a user-chosen convergence tolerance constant that can be interpreted
as a small “numerical error”.

SCP denotes a family of solution methods and, as such, countless variations
of Problem 42 exist. Early versions of SCP for trajectory generation focused

22

InitializeAlgorithmbeginTrustregionupdateNon-convexconstraintlinearization1DynamicslinearizationanddiscretizationTestFail3PassAlgorithmstopConvexiﬁcationConvexsolvercall2on motion kinematics alone (Schulman et al., 2014) or included dynamics but
with few convergence guarantees (Augugliaro et al., 2012). Today, a family
of methods is emerging with stronger convergence guarantees, including SCvx
(Mao et al., 2018b), GuSTO (Bonalli et al., 2019, 2021), and penalized trust re-
gion (PTR) (Reynolds et al., 2020b). Problem 42 exempliﬁes the PTR method,
where the trust region sizes ηk are themselves optimization variables that are
kept small using a penalty in the cost (42a). PTR is often the fastest method,
but its theoretical convergence properties are relatively unexplored. In compar-
ison, SCvx and GuSTO provide a guarantee that the algorithm converges to
a locally optimal solution, albeit with potentially non-zero ηk and αk. When
these variables are zero, however, the solution is locally optimal for the original
optimal control problem.

The main algorithmic diﬀerences across SCP methods lie in how the convex
approximations are formulated, what methods are used to update the interme-
diate solutions and to measure progress towards optimality, and how all of this
lends itself to theoretical analysis. For example, SCvx uses a discrete-time con-
vergence proof while GuSTO uses the continuous-time maximum principle. The
main diﬀerence with the PTR method is that both SCvx and GuSTO update
ηk outside of the optimization problem.
Interestingly, the PTR method has
been observed to yield much faster convergence in practice, and a theoretical
explanation recently appeared (Reynolds and Mesbahi, 2020a).

2.4.1. Related Algorithms

In the general context of optimization, SCP belongs to the class of so-called
trust region methods (Nocedal and Wright, 1999; Conn et al., 2000). However,
SCP is not to be confused with another popular trust region method, sequen-
tial quadratic programming (SQP). First of all, SCP solves its subproblems to
full optimality. While this increases the number of iterations in the reverse
path of Figure 5, it vastly reduces the number of forward passes. Owing to
the growing maturity of IPM solvers and the advent of solver customization
(Domahidi et al., 2013; Dueri et al., 2014), iterations in the reverse path are
relatively “cheap”, making the trade-oﬀ a good one. Second, SCP requires only
ﬁrst-order problem information, since nonconvexities are handled by a simple
linearization such as in (41). On the other hand, SQP is a second-order method
that requires the factorization of a Hessian. This raises concerns about matrix
positive semideﬁniteness and may require computationally expensive techniques
such as the BFGS update (Gill and Wong, 2011).

Diﬀerential dynamic programming (DDP) is another family of algorithms
that, like SCP, is built around the idea of linearization (Mayne, 1966; Jacobson,
1968). More precisely, DDP solves a discrete-time optimal control problem with
an additive cost function like the one in (19a). Although DDP falls outside the
scope of this survey paper, we will mention that it has major successful ap-
plications in space vehicle trajectory optimization and provides an interesting
variation of the linearize-and-solve framework of Figure 5. DDP is particularly
popular for low-thrust orbit transfer trajectory optimization. For example, the
NASA Mystic software used DDP for low-thrust trajectory optimization of the

23

Dawn Discovery mission to the Vesta and Ceres protoplanets of the asteroid belt
(Whiﬀen and Sims, 2001; Whiﬀen, 2006). Other appearances of DDP include
include multi-revolution and multi-target orbit transfer (Lantoine and Russell,
2012a,b), Earth to Moon transfer with an exclusion zone (Pellegrini and Rus-
sell, 2020a,b), and low-thrust ﬂyby trajectory planning to near-Earth objects
(Colombo et al., 2009).

A disadvantage of the original DDP algorithm is that it is an unconstrained
optimization method. This means that while SCP naturally handles state and
input constraints like (36c), implementing such constraints is still an active re-
search area for DDP. Most attempts to incorporate constraints make use of
penalty, barrier, augmented Lagrangian, and active set methods (Tassa et al.,
2014; Xie et al., 2017). Most recently, extensions of DDP were proposed to han-
dle general nonconvex state and input constraints using a primal-dual interior
point method (Pavlov et al., 2020; Aoyama et al., 2020).

Another disadvantage of DDP is that it is a second-order method. Like SQP,
this makes DDP more computationally expensive than SCP which only requires
ﬁrst-order information. Nevertheless, there is numerical evidence that DDP is
faster than SQP (Lantoine and Russell, 2012b). Furthermore, related algorithms
have been developed that only use ﬁrst-order information, such as the iterative
linear quadratic regulator (iLQR). The ALTRO software is a popular modern
trajectory optimization toolbox based on the iLQR and augmented Lagrangian
methods (Howell et al., 2019).

2.5. Mixed-integer Programming

Mixed-integer programming (MIP) solves problems where some decision
variables are binary. Consider a concrete example in the context of Problem 4.
Without loss of generality, suppose that the control input is partitioned into
continuous and binary variables:

u(t) =

(cid:21)
(cid:20)v(t)
ζ(t)

∈ Rnu, v(t) ∈ Rnu−nζ , ζ(t) ∈ Inζ .

(44)

Binary variables naturally encode discrete events such as the opening of
valves and relays, the pulsing of space thrusters, and mission phase transitions
(Bemporad and Morari, 1999; Sun et al., 2019). Furthermore, binary variables
can help to approximate nonlinear gravity, aerodynamic drag, and other salient
features of a space vehicle trajectory optimization problem (Blackmore et al.,
2012; Marcucci and Tedrake, 2019).

To formally discuss how MIP might be relevant for a spacecraft trajectory
optimization problem like Problem 4, consider the space vehicle to be an au-
tonomously switched hybrid system (Saranathan and Grant, 2018). In particu-
lar, suppose that the vehicle dynamics (4b) and its constraints (4c) are contin-
uous except for the following extra “if-then” condition:

q(z) < 0 ⇒ c(z) = 0,

(45)

24

where z ∈ Rnz is some mixture of inputs, states, and time. In this formulation,
the constraint function c : Rnz → Rnc is activated if the trigger function q :
Rnz → Rnζ maps to the negative orthant Rnζ
<0. The conditional statement (45)
can be formulated as the following set of mixed-integer constraints:

−ζiM ≤ qi(z) ≤ (1 − ζi)M,

i = 1, . . . , nζ,

−(cid:0)1 − σ(ζ)(cid:1)M 1 ≤ c(z) ≤ (cid:0)1 − σ(ζ)(cid:1)M 1,
nζ
(cid:89)

σ(ζ) =

ζi,

(46a)

(46b)

(46c)

i=1

where M ∈ R is a suﬃciently large positive number. The function σ : Inζ → I is
called the activation function, and it imposes the if-then logic of (45) through
(46a)-(46b). When the binary variable ζi equals one, the ith trigger is activated.
Thus, when σ(ζ) = 1, the left-hand side of (45) holds. In fact, q(z) = 0 is also
possible, but this case is irrelevant since an optimal solution will not activate
the constraint function unnecessarily.

Mixed-integer programming can be used to solve Problem 4 in the presence
of the constraints (46). Traditional MIP solvers are based on the branch-and-
bound method (Nemhauser and Wolsey, 1999; Cook et al., 1998). At their core is
a divide-and-conquer logic that often, though not always, speeds up the solution
process by eliminating large numbers of possible ζ combinations. Modern MIP
solvers also improve runtime through methods like pre-solving (which reduces
nζ), cutting planes (which introduce new constraints to tighten the feasible
space), heuristics, parallelism, branching variable selection, symmetry detection,
and so on (Achterberg, 2007; Achterberg and Wunderling, 2013). In the worst
case, however, MIP runtime remains exponential in nζ. This is a large hindrance
to onboard implementation, since space vehicle hardware is often not able to
support the large MIP computational demand (Malyuta et al., 2020; Malyuta
and A¸cıkme¸se, 2020b,a).

As usual in optimization, one can trade the global optimality of MIP for
solution speed by accepting local optimality or by approximating the precise
statement (45) with a more eﬃcient formulation. In the following subsections,
we will introduce two popular approaches that have recently emerged in both
direct and indirect solution methods for solving MIP problems without intro-
ducing integer variables.

2.5.1. State-triggered Constraints

State-triggered constraints (STCs) take the direct solution approach, and are
under active study using the SCP framework from Section 2.4 (Szmuk et al.,
2018; Malyuta et al., 2020). Roughly speaking, STCs embed the discrete if-
then logic from (45) into a continuous direct formulation with minimal penalty
to the solution time (Reynolds et al., 2019a). In its most basic form, an STC
models (45) for the scalar case nζ = 1 and nc = 1. While there are several
useful theoretical connections between STCs and the linear complementarity
problem (LCP) (Cottle et al., 2009), STCs encode a much larger feasible space

25

Figure 6: A Venn diagram of the sets of solution variables z ∈ Rnz that satisfy the trigger
condition Q, constraint condition C, and all other constraints Z. STCs ensure that feasible
solutions satisfy z /∈ Q ∩ Cc (illustrated by the red set). The feasible set with an STC is
shaded green, and the feasible set with the bidirectional constraint (47) is shaded in yellow.
The sets with bold outlines are padded to help visual separation only.

than LCP constraints (Szmuk et al., 2018). Namely, STCs only encode forward
implications, and they are not bidirectional statements of the following form:

q(z) < 0 ⇔ c(z) = 0.

(47)

Figure 6 illustrates the distinction between (45) and (47). The green set
denotes the feasible set with the STC, while the yellow set denotes the feasible
set of the more restrictive constraint (47). Clearly, the feasible space is larger
when using the STC, and this can translate into a more optimal solution.

Continuing our discussion for the scalar case, it can be shown that (45) is

equivalent to either one of the following two continuous constraints:

q(z) + σ ≥ 0, σ ≥ 0, σ · c(z) = 0, or
− min(0, q(z)) · c(z) = 0,

(48a)

(48b)

where σ ∈ R is a slack variable that plays the role of the activation function
from (46c). Although both constraints in (48) are nonconvex, they are readily
ingested by the SCP linearization process described in Section 2.4.

A notable feature of STCs is that they readily extend to the multivariable
case of (45), and have been shown to handle both AND and OR combinations
of triggers and constraints (Szmuk et al., 2019a,b):

nζ
(cid:94)

i=1
nζ
(cid:95)

i=1
nζ
(cid:94)

i=1
nζ
(cid:95)

i=1

qi(z) < 0 ⇒

qi(z) < 0 ⇒

qi(z) < 0 ⇒

qi(z) < 0 ⇒

nc(cid:94)

i=1

nc(cid:94)

i=1

nc(cid:95)

i=1

nc(cid:95)

i=1

ci(z) = 0,

ci(z) = 0,

ci(z) = 0,

ci(z) = 0.

26

(49a)

(49b)

(49c)

(49d)

In the general context of optimization, STCs do for trajectory optimization
what the S-procedure from linear matrix inequalities (LMIs) does for stability
analysis and controller synthesis (Boyd et al., 1994), and what sum-of-squares
(SOS) programming does to impose polynomial non-negativity over basic semi-
algebraic sets (Majumdar and Tedrake, 2017). That is, STCs embed an other-
wise diﬃcult logic constraint into a tractable continuous formulation. In partic-
ular, note that the scalar version of (45) can be written as:

c(z) = 0 ∀z s.t. q(z) < 0.

(50)

On the other hand, the S-procedure and SOS programming consider the

following constraints, respectively:

f0(z) ≥ 0 ∀z s.t. fi(z) ≥ 0, i = 1, . . . , p,
p(z) ≥ 0 ∀z s.t. peq(z) = 0, pineq(z) ≥ 0,

(51a)

(51b)

where fi, i = 0, . . . , p, are quadratic functions, while p, peq, and pineq are poly-
nomials. Comparing (50) with (51) makes the connection to STCs clear.

2.5.2. Homotopy Methods

Homotopy methods, also known as numerical continuation schemes, were
previously introduced in Section 2.1.1 in the context of solving standard optimal
control problems. It turns out that homotopy can also be used to encode (45) in
a continuous framework, and has been successfully embedded into recent indirect
trajectory optimization algorithms.
In this section, we brieﬂy introduce the
relaxed autonomously switched hybrid system (RASHS) and composite smooth
control (CSC) methods (Saranathan and Grant, 2018; Taheri et al., 2020a; Arya
et al., 2020).

To begin, let σ denote the activation function from (46c). Using the third
equation from (48a), we note that (45) is exactly equivalent to the following
constraint:

σ(ζ)c(z) = 0.

(52)

At the core of the RASHS and CSC methods is an approximation of the

binary function σ by a continuous sigmoid function ˜σ : Rnζ → [0, 1]:

RASHS: ˜σ(q) =

nζ
(cid:89)

(cid:0)1 + eκqi(cid:1)−1

,

CSC: ˜σ(q) =

i=1
nζ
(cid:89)

i=1

1
2

(cid:0)1 − tanh(κqi)(cid:1),

(53a)

(53b)

where the latter equation uses the theory of hyperbolic tangent smoothing
(Taheri and Junkins, 2018). The homotopy parameter κ ∈ [0, ∞) regulates
the accuracy of the approximation, with increasing accuracy as κ grows, such
that limκ→∞ ˜σ(q) = σ(ζ). Figure 7 illustrates how both sigmoid functions
evolve as κ increases. The core idea of RASHS and CSC is to begin with a

27

(a) The RASHS sigmoid (53a).

(b) The CSC sigmoid (53b).

Figure 7: Comparison of the RASHS and CSC sigmoids, as deﬁned in (53). A sweep is shown
from homotopy parameter κ = 1 (lighter colors) to κ = 100 (darker colors). The blue dashed
curve shows the alternative sigmoid for κ = 1 (i.e., CSC for (a) and RASHS for (b)). As κ
increases, the sigmoid quickly converges to an accurate approximation of the binary activation
function in (46c). While the nature of both sigmoids is similar, for a given κ the CSC sigmoid
is more localized around the y-axis, and hence is a closer approximation of a step signal.

small κ where the optimal control problem is continuous and “easy” to solve,
and to judiciously increase κ to such a large value that the solution becomes
indistinguishable from its MIP counterpart.

It is worth noting the speciﬁc instances of (45) considered by RASHS and
CSC. The former method was developed to compute time- or state-triggered
multiphase trajectories, where vehicle dynamics change across phases (e.g., stage
separation during rocket ascent) (Saranathan and Grant, 2018). Such a system
is also known as a diﬀerential automaton (Tavernini, 1987). In this case, we can
have m constraints of the form (45), where the kth constraint is:

qk(t) < 0 ⇒ ˙x(t) − f k(x(t), u(t), t) = 0,

(54)

and qk : R → Rnk
ζ indicates the time interval where the kth dynamics apply.
Assuming that the time intervals do not overlap, we can sum the smoothed
versions of (54) to obtain a single continuous system dynamics constraint:

˙x(t) =

(cid:20) m
(cid:88)

k=1

˜σ(cid:0)qk(t)(cid:1)

(cid:21)−1 m
(cid:88)

˜σ(cid:0)qk(t)(cid:1)f k[t].

k=1

(55)

Note that the new dynamics (55) are a convex combination of the individ-
ual dynamics over the m time intervals. As κ is increased, the approximation
becomes more accurate, and the correct f k functions begin to dominate their
respective intervals. Moreover, using (55) instead of (54) has the algorithmic
advantage of replacing a multi-point BVP with a TPBVP.

The CSC method, on the other hand, considers systems with ﬁxed dynamics
but multiple control inputs or constraints (Taheri et al., 2020a). In both cases,
the overall control input can be expressed as a function of m “building block”
inputs uk, such that:

qk(x(t), u(t), t) < 0 ⇒ u(t) = uk(t),

(56)

where qk : Rnx × Rnu × R → Rnk
ζ are mutually exclusive indicators of when
the kth building block input applies. Like for RASHS, the following equation

28

q˜σ(q)01q˜σ(q)01Figure 8: A typical control architecture consists of nested layers of feedforward (FF) and
feedback (FB) elements. The execution frequency increases going from the outermost to the
innermost layers. In particular, elements in the FB path (highlighted in red) have stricter
execution time requirements than FF elements.

provides a smooth approximation of the control, from which CSC derives its
name:

u(t) =

(cid:20) m
(cid:88)

˜σ(cid:0)qk[t](cid:1)

(cid:21)−1 m
(cid:88)

˜σ(cid:0)qk[t](cid:1)uk(t).

(57)

k=1

k=1

Clearly, RASHS, CSC, and STCs are all approaching the same problem of
eﬃciently handling (45) from subtly diﬀerent angles. It is worth noting that for
the moment, both RASHS and CSC can only handle the AND combination (49a)
of trigger and constraint functions. Most recently, (Malyuta and A¸cıkme¸se,
2021) showed that a similar homotopy framework can handle OR combinations
of trigger functions. This opens up an interesting research avenue to develop a
unifying homotopy method that handles all the logical combinations in (49).

2.6. Model Predictive Control

The preceding sections focused on solving one instance of Problem 4. We
now place ourselves in the context of a control system whose architecture is
illustrated in Figure 8. Two important algorithm categories that are part of
a control system are so-called feedforward and feedback (Lurie and Enright,
2000), and optimization-based methods can potentially be applied to both. In
the feedback path, the current state estimate of the system is used to continually
update the control signal, which means that Problem 4 must be re-solved many
times. This is the core idea of model predictive control (MPC).

In its most basic form, an MPC formulation of Problem 36 can be expressed

as follows:

u∗

1 = argmin
u1,...,uN −1

xT

N Qf xN +

N −1
(cid:88)

xT

kQxk + uT

kRuk s.t.

k=1
xk+1 = Akxk + Bkuk + dk, ∀k = 1, . . . , N − 1,
g(xk, uk, tk) ≤ 0, ∀k = 1, . . . , N − 1,
x1 = ˆx, b(xN ) = 0.

(58a)

(58b)

(58c)

(58d)

Figure 9 illustrates how Problem 58 can be used to control a dynamical
system. Note that Problem 58 is a parametric optimization problem because it

29

Optimizationinfusionu(t)−+++FFFBSystem(Innerloops)Reference+−+−depends on the current state estimate ˆx ∈ Rnx . The ﬁrst optimal control input
u∗
1 for Problem 58 becomes u(t) in Figure 8. The weight matrices Q (cid:23) 0 and
R (cid:31) 0 in the running cost and the terminal weight matrix Qf (cid:23) 0 are chosen
to get a desired response. Together with the terminal constraint (58d), these
choices must ensure stability and recursive feasibility in closed-loop operation
(i.e., the problem must be feasible the next time that it is solved).

The main advantage of MPC is that it is arguably the most natural method-
ology for handling system constraints in a feedback controller (Mayne et al.,
2000). However, because MPC operates in a feedback loop, stability and per-
formance are both critical and strongly dependent on uncertainty robustness
and execution frequency (Lurie and Enright, 2000; Skogestad and Postleth-
waite, 2005). Troves of information have been compiled on the subject, which
remains an active research area. Numerous surveys on MPC cover general and
future methods (Mayne, 2014), robustness (Garc´ıa et al., 1989; Bemporad and
Morari, 2007; Mayne, 2015), computational requirements (Alessio and Bempo-
rad, 2009), and industrial applications (Eren et al., 2017; Mao et al., 2018a; Di
Cairano and Kolmanovsky, 2018; Qin and Badgwell, 2003). For space vehicle
applications in particular, where onboard computation is limited, we single out
so-called explicit MPC (Bemporad et al., 2002; Rawlings et al., 2017; Borrelli
et al., 2017). The concept is to pre-compute a lookup table for the solution of
Problem 58. This turns out to be possible to do exactly when the MPC problem
is a QP, and approximately in more general cases up to MICP (Malyuta and
A¸cıkme¸se, 2020a). When onboard storage and problem dimensionality permit,
explicit MPC yields a much faster and computationally cheaper algorithm in
which onboard optimization is replaced by a static lookup table.

3. Applications

This section describes the application of optimization methods from the pre-
vious section to state-of-the-art space vehicle control problems. The following
subsections cover the following key areas of spaceﬂight. Section 3.1 discusses
rocket powered descent for planetary landing. Section 3.2 covers spacecraft ren-
dezvous and Section 3.3 covers a closely related problem of small body landing.
Section 3.4 talks about attitude reorientation. Endo-atmospheric ascent and
entry are surveyed in Section 3.5. Last but not least, orbit transfer is discussed
in Section 3.6.

3.1. Powered Descent Guidance for Rocket Landing

Powered descent guidance (PDG) is the terminal phase of EDL spanning
the last few kilometers of altitude. The goal is for a lander to achieve a soft
and precise touchdown on a planet’s surface by using its rocket engine(s). PDG
technology is fundamental for reducing cost and enabling access to hazardous
yet scientiﬁcally rich sites (Starek et al., 2015; Carson III et al., 2019; Steinfeldt
et al., 2010; Braun and Manning, 2006; Jones, 2018; Robertson, 2017; Europa
Study Team, 2012; NASA Science, 2019; Robinson, 2018). The modern consen-
sus is that iteration-based algorithms within the CGC paradigm, rather than

30

Figure 9: Block diagram illustration of an MPC controller. At each time step tk, MPC
computes the optimal control input u∗
1 by using a mathematical model of the system and
solving Problem 58, which is a receding horizon optimal control problem. Note the three
states drawn in the diagram: the actual state ˜x, the estimated state ˆx, and the internally
propagated MPC state x. Each state may be slightly diﬀerent due to estimation error, model
uncertainty, and disturbances.

closed-form solutions, are required for future landers (Lu, 2017; Carson III et al.,
2019). The survey of applications in this section demonstrates that optimiza-
tion oﬀers a compelling iteration-based solution method due to the availability
of real-time algorithms that can enforce relevant PDG constraints.

To place state-of-the-art PDG into context, let us brieﬂy mention some key
heritage methods. Initial closed-form algorithms are known as explicit guidance,
which is characterized by directly considering the targeting condition each time
the guidance command is generated (Lu, 2020). Early algorithms solved a ver-
sion of the following OCP:

a(t)Ta(t)dt s.t.

(cid:90) tf

0

min
tf ,a
¨r(t) = g + a(t),
r(0) = r0,

˙r(0) = ˙r0, r(tf ) = rf ,

(59a)

(59b)

(59c)

˙r(tf ) = ˙rf .

Here, r(t) ∈ R3 denotes position, a(t) ∈ R3 is the acceleration control input,
g ∈ R3 is the gravitational acceleration vector and tf is the ﬂight duration. Posi-
tion and velocity boundary values are ﬁxed. The optimal solution to Problem 59
is known as the E-Guidance (EG) law (Cherry, 1964; D'Souza, 1997):

a(t) = 6t−2

go ZEM (t) − 2t−1

go ZEV (t),

where tgo (cid:44) tf − t is the time-to-go and:

ZEM (t) (cid:44) rf − (cid:0)r(t) + tgo ˙r(t) + 0.5t2

gog(cid:1) ,

31

(60)

(61a)

SystemMPCDisturbanceReference(e.g.0)Stateestimateˆxattimet1Controlinputu∗1overt∈[t1,t2)˜x(t),ˆx(t),x(t)tt1t2t3t4timenowZEV (t) (cid:44) ˙rf − ( ˙r(t) + tgog) ,

(61b)

are the zero-eﬀort-miss and zero-eﬀort-velocity terms (Furfaro et al., 2011; Song
et al., 2020). Nominally, (60) results in an aﬃne acceleration proﬁle. If instead
one allows the acceleration proﬁle to be quadratic, an additional DoF appears,
which is ﬁxed by setting the terminal acceleration a(tf ) = af . This results
in the Apollo guidance (APG) law, which ﬂew on the historic Lunar missions
(Klumpp, 1974):

a(t) = 12t−2

go ZEM (t) − 6t−1

go ZEV (t) + af .

(62)

The concept of an acceleration proﬁle behind EG and APG has since been ex-
tended and generalized, resulting in a polynomial guidance family of algorithms.
(Zhang et al., 2017) augment the cost (59a) with a surface collision-avoidance
term.
(Guo et al., 2013) formulate a QP to solve for an intermediate way-
point that augments collision-avoidance capabilites as well as enforces actuator
saturation for thrust- and power-limited engines. (Lu, 2019) develops a general
theory for polynomial guidance laws that contains EG and APG as special cases.
For one of the best modern explanations of polynomial guidance methods, the
reader should consult (Lu, 2020). Unfortunately, closed-form polynomial guid-
ance is unable to handle many operational constraints (Lu, 2018) and is not fuel
optimal since the cost (59a) rather penalized energy.

To overcome these limitations, research has long sought to characterize and
eventually solve the more general fuel-optimal PDG problem. The ﬁrst mile-
stone towards fuel-optimal PDG was a closed-form single-DoF vertical descent
solution (Meditch, 1964), illustrated in Figure 12a. Evidence suggests that
Apollo landings came close to this optimum (Klumpp, 1974; Mindell, 2008).
The maximum principle (Pontryagin et al., 1986) played a key role back then,
and continues to do so in the present day.

Seeking to generalize the single-DoF result, Lawden formulated the necessary
conditions of optimality for 3-DoF PDG (Lawden, 1963; Marec, 1979). However,
solving the necessary conditions requires shooting methods, which are typically
too computationally expensive and sensitive to the initial guess to allow eﬃ-
cient onboard implementation (Betts, 1998). More recently, (Topcu et al., 2005,
2007) extended the results from (Lawden, 1963) to the case of angular velocity
control, and compared the solution quality of fuel-optimal 3-DoF PDG to the
necessary conditions of optimality. However, the aim of the work was not real-
time onboard implementation, so nonlinear programming (SQP) was used via
the GESOP solver.

After decades of research into problem characterization, a watershed moment
for problem solution came in the mid 2000s with the papers (A¸cıkme¸se and
Ploen, 2005, 2007). The authors solved the following 3-DoF PDG problem,
illustrated in Figure 10, via the process of lossless convexiﬁcation described in
Section 2.3:

(cid:90) tf

0

min
tf ,T

(cid:107)T (t)(cid:107)2 dt s.t.

32

(63a)

Figure 10: Illustration of the basic powered descent guidance solved by Problem 63 via lossless
convexiﬁcation. The goal is to safely bring the rocket lander to standstill on the landing pad
while satisfying the thrust magnitude constraints and maintaining a minimum glideslope.

¨r(t) = g + T (t)m(t)−1,
˙m(t) = −α (cid:107)T (t)(cid:107)2 ,
ρmin ≤ (cid:107)T (t)(cid:107)2 ≤ ρmax,
r(t)Tˆez ≥ (cid:107)r(t)(cid:107)2 cos(γgs),
m(0) = m0, r(0) = r0,

˙r(0) = ˙r0, r(tf ) = 0,

(63b)

(63c)

(63d)

(63e)

(63f)

˙r(tf ) = 0.

Unlike the classical Problem 59, Problem 63 readily handles several im-
portant operational constraints, including thrust bounds (63d) and glide slope
(63e). Through numerical simulations for a prototype Mars lander, (A¸cıkme¸se
and Ploen, 2007) conﬁrmed that the optimal thrust has a max-min-max proﬁle
as shown in Figure 11. This proﬁle was proven to be optimal for 3-DoF PDG
in (Lawden, 1963; Topcu et al., 2007).

Over the course of the next decade, the method was expanded to handle
fairly general nonconvex input sets (A¸cıkme¸se and Blackmore, 2011), minimum-
error landing and thrust pointing constraints (Blackmore et al., 2010; Carson
III et al., 2011a; A¸cıkme¸se et al., 2013c), classes of aﬃne and quadratic state
constraints (Harris and A¸cıkme¸se, 2013b,a, 2014, 2013c), classes of nonlinear
(mixed-integer) dynamics (Blackmore et al., 2012), certain binary input con-
straints (Malyuta and A¸cıkme¸se, 2020b; Harris, 2021), and conservative conic
obstacles (Bai et al., 2019).

The maturity of a method can be gauged by the availability of a precise state-
ment of its limits, similar to the role played by the Bode integral in frequency-
domain control (Skogestad and Postlethwaite, 2005; Lurie and Enright, 2000).
Such a characterization appeared for lossless convexiﬁcation in the form of con-
strained reachable or controllable sets (Eren et al., 2015b; Dueri et al., 2016;
Dueri, 2018) or “access” conditions (Song et al., 2020). These sets, obtained
numerically and with arbitrarily high precision, deﬁne the boundary conditions
for which versions of Problem 63 are feasible.

The practicality of lossless convexiﬁcation-based PDG methods was demon-

33

Figure 11: Optimal thrust proﬁles for several powered descent guidance formulations. (a)
Corresponds to the classical single-DoF result by (Meditch, 1964); (b) corresponds to 3-DoF
translation-only landing from (Lawden, 1963; A¸cıkme¸se and Ploen, 2007); (c) corresponds to
planar landing with rotation from (Reynolds and Mesbahi, 2020b). The thrust proﬁle for
general 6-DoF PDG with translation and rotation is an open problem. In particular, there is
no theory to guarantee that it should be bang–bang, thus (d) shows a proﬁle with no clear
structure.

strated through a series of ﬂight tests conducted by the NASA Jet Propulsion
Laboratory, Masten Space Systems, and university partners. In a 3-year 7-ﬂight
test campaign, the Masten Xombie sounding rocket demonstrated that robust
onboard real-time optimization is feasible on spaceﬂight processors (A¸cıkme¸se
et al., 2013a; Scharf et al., 2014, 2017; JPL and Masten Space Systems, 2012a,b).
A number of publications accompanied this ﬂight test campaign, including a
comparison of lossless convexiﬁcation to polynomial guidance (Ploen et al.,
2006), onboard computation time reduction via time-of-ﬂight interpolation (Scharf
et al., 2015), and complete oﬀ-line lookup table generation (A¸cıkme¸se et al.,
2008). The resulting algorithm, G-FOLD (A¸cıkme¸se et al., 2013b, 2012), solves
a tailored version of Problem 63 using a custom C-language SOCP solver called
Bsocp (Dueri et al., 2014). G-FOLD is able to compute rocket landing trajec-
tories in 100 ms on a 1.4 GHz Intel Pentium M processor. Further evidence of
real-time performance was presented by (Dueri et al., 2017), where Bsocp ran
on a radiation-hardened BAE RAD750 PowerPC.

Despite the signiﬁcant ﬂight envelope expansion aﬀorded by lossless con-
vexiﬁcation (Ploen et al., 2006; Wolf et al., 2012; Carson III et al., 2011b), an
inherent limitation of 3-DoF PDG is that the computed trajectory cannot incor-
porate attitude constraints other than those on the thrust vector, which serves
as an attitude proxy. An extensive simulation campaign is required to validate
the 3-DoF trajectory to be executable by a fundamentally 6-DoF lander system
(Carson III et al., 2019; Kamath et al., 2020). Thus, recent PDG research has
sought 6-DoF formulations that are able to incorporate attitude dynamics and
constraints.

The SCP family of methods, discussed in Section 2.4, has emerged as an
eﬀective approach to transition from a fully convex 3-DoF problem to a 6-DoF

34

problem with some nonconvexity. Some of the popular SCP algorithms include
SCvx (Mao et al., 2018b), penalized trust region (Reynolds et al., 2020b), and
GuSTO (Bonalli et al., 2019, 2021). Some other algorithms based around similar
ideas have also emerged, such as ALTRO which is based on iterative LQR
(Howell et al., 2019).

A vast number of ﬂavours of SCP exist, however, since it is a nonlinear opti-
mization technique that works best when tailored to exploit problem structure.
In certain cases, lossless convexiﬁcation is embedded to remove some nonlinear-
ity. (Liu, 2019) convexiﬁes an angle-of-attack (AoA) constraint relating to an
aerodynamic control capability, (Simpl´ıcio et al., 2019) solve a version of Prob-
lem 63 in a ﬁrst step and passes the solution to a second step involving SCP,
while (Li et al., 2020; Wang et al., 2019a; Szmuk et al., 2016) use the classical
convexiﬁcation result for the thrust magnitude constraint (38).

Since the mid 2010s, SCP technology enabled the expression of quadratic
aerodynamic drag and thrust slew-rate constraints (Szmuk et al., 2016), attitude
dynamics (Szmuk et al., 2017), variable time-of-ﬂight (Szmuk and A¸cıkme¸se,
2018), and an ellipsoidal drag model that allows aerodynamic lift generation
along with variable ignition time (Szmuk et al., 2018). Several papers on SCP
“best practices” have also appeared, including thrust input modeling (Szmuk
et al., 2017), the eﬀect of discretization on performance (Malyuta et al., 2019),
and using dual quaternions to alleviate nonconvexity in the constraints by oﬀ-
loading it into the dynamics (Reynolds et al., 2019b). Practical details on
real-time implementation are also available (Reynolds et al., 2020b), where the
SCP solution is compared to the globally optimal trajectory for a planar landing
problem (Reynolds and Mesbahi, 2020b). Most recently, a comprehensive tuto-
rial paper with open-source code was published, and describes the algorithmic
and practical aspects of SCP methods and of lossless convexiﬁcation (Malyuta
et al., 2021).

Figure 12 summarizes the dominant directions of PDG development since
2005. Starting from the classical vertical-descent result by (Meditch, 1964),
Figure 12a, the early breakthrough for practical onboard PDG solution was
achieved in 2007 by (A¸cıkme¸se and Ploen, 2007), Figure 12b. Since then, 3-DoF
PDG methods have been extended and ﬂight tested, Figure 12c. In particular,
more complicated eﬀects such as aerodynamic drag force were added by these
extensions, which are listed in the preceding paragraph. Perhaps the biggest
modern shift in PDG technology development has been to consider attitude
dynamics, which is motivated by the inability to impose non-trivial attitude
constraints in a 3-DoF formulation (Carson III et al., 2019). This has led to
a family of so-called 6-DoF PDG algorithms, Figure 12d, that often rely on
SCP methods. To compare how close SCP comes to the global optimum, recent
work found optimal solutions for “planar” PDG (Reynolds and Mesbahi, 2020b),
Figure 12e. This work restricts the landing trajectory to a 2D plane, but does
include attitude dynamics. Therefore it represents both a generalization of
Figure 12b and a restriction of Figure 12d, and provides new insight into the
6-DoF PDG optimal solution structure. Today, PDG research evolves along the
following broad directions: guaranteeing real-time performance, convergence,

35

Figure 12: Progression of PDG problem complexity. The red, green, and blue arrows denote
thrust, torque, and aerodynamic force respectively. The red region denotes the feasible thrust
set.

and solution quality, handling binary constraints, and incorporating uncertainty
as shown in Figure 12f.

One exciting development for SCP in recent years has been the advent of
state-triggered constraints, introduced in Section 2.5.1. This allows real-time
capable embedding of if-then logic into the guidance problem. To demonstrate
the capability, (Szmuk et al., 2018) imposed a velocity-triggered AoA constraint,
(Reynolds et al., 2019b) imposed a distance-triggered line-of-sight constraint,
(Szmuk et al., 2019b) imposed a collision-avoidance constraint, and (Reynolds
et al., 2019a) imposed a slant-range-triggered line-of-sight constraint. In par-
ticular, the latter two works develop a theory of compound STCs that apply
Boolean logic to combine multiple trigger and constraint functions, as shown in
(49). The impact of STCs on the ability to compute solutions in real-time is
discussed in (Szmuk et al., 2018; Reynolds et al., 2019a).

Simultaneously with the development of SCP for PDG, the pseudospectral
discretization community has produced a rich body of work investigating the
solution quality beneﬁts of that method. Building on foundational early work
(Rao, 2010; Fahroo and Ross, 2002; Garg et al., 2010; Kelly, 2017), it was demon-
strated for a variant of Problem 63 that pseudospectral methods yield greater
solution accuracy with fewer temporal nodes (Sagliano, 2018b). However, as
discussed in Section 2.2.4, pseudospectral methods traditionally yield slower
solution times because they generate non-sparse matrices for the discretized
equations of motion (Malyuta et al., 2019). By using an hp-adaptive scheme

36

inspired by the ﬁnite element method (Darby et al., 2010), it was shown that
this can be somewhat circumvented (Sagliano, 2018a, 2019). Furthermore, it
was shown that pseudospectral discretization within an SCP framework yields
solutions up to 20 times faster than using sequential quadratic programming
(Wang and Cui, 2018).

As deterministic PDG algorithms mature, research is becoming increasingly
interested in making the trajectory planning problem robust to various sources
of uncertainty. One approach is to design a feedback controller to correct for
deviations from the nominal trajectory, such that the overall control input is
given by:

u(t) = ¯u(t) + K(t)(x(t) − ¯x(t)),

(64)

where ¯x(t) and ¯u(t) are the nominal state and control respectively, and K(t) ∈
Rnu×nx is a feedback gain matrix. In (Ganet-Schoeller and Brunel, 2019; Scharf
et al., 2017), the feedback controller is designed separately from the nominal
trajectory. However, incorporating feedback law synthesis into the nominal tra-
jectory generation problem can achieve more optimal solutions (Garcia-Sanz,
2019). This “simultaneous” feedback-feedforward design was done via multi-
disciplinary optimization in (Jiang et al., 2018), desensitized optimal control in
(Shen et al., 2010; Seywald and Seywald, 2019), chance-constrained optimiza-
tion in (Ono et al., 2015), and covariance steering in (Ridderhof and Tsiotras,
2018, 2019). Other work in this domain includes open-loop robust trajectory
design via Chebyshev interval inclusion (Cheng et al., 2019c), and a posteri-
ori statistical analysis through linear covariance propagation (Woﬃnden et al.,
2019) and Monte Carlo simulation (Scharf et al., 2017).

PDG methods based on lossless convexiﬁcation and SCP are in most cases
In this setup, the targeting condition (e.g., soft
implicit guidance methods.
touchdown on the landing pad) is met by tracking a reference trajectory that
yields the correct terminal state. Functionally, PDG methods are most often
situated in the FF block of Figure 8, and they generate a complete trajectory
upfront that is tracked by a feedback controller. From a systems engineering
perspective, this has a clear advantage of allowing heritage control methods to
perform the intricate and critical control of the actual vehicle. However, it was
mentioned at the start of this section and in Section 2.6 that continually re-
solving for the PDG trajectory can oﬀer additional robustness. In contrast to
traditional polynomial guidance, some modern approaches aim to leverage this
robustness and also satisfy system constraints via model predictive control.

(Cui et al., 2012) show how to leverage MPC for landing with an uncertain
state and variable gravitational ﬁeld, while (Wang et al., 2019a) show how to
ensure recursive feasibility and a bounded guidance error by executing a nom-
inal and relaxed optimization problem in parallel.
In both methods, the full
trajectory optimization problem is solved from the current state to the ﬁnal
landing location, thus the MPC horizon “shrinks” throughout the PDG maneu-
ver. A more traditional approach is taken by (Lee and Mesbahi, 2017), where the
prediction horizon extends for a ﬁnite duration beyond the current state. The
authors also show that diﬃcult constraints on sensor line-of-sight and spacecraft

37

Figure 13: Illustration of a basic rendezvous scenario. Roughly speaking, the goal is for a
chaser spacecraft to use the thrust T from its reaction control system to dock with a target
while avoiding debris and respecting constraints such as staying within the approach cone.

attitude are convex using a dual quaternion representation. Numerical perfor-
mance of MPC for PDG on an embedded ARM platform was documented in
(Pascucci et al., 2015).

3.2. Rendezvous and Proximity Operations

Let us now switch contexts from the ﬁnal stages of planetary landing to the
realm of orbital spaceﬂight. A key task for a spacecraft in orbit is to perform
rendezvous and proximity operations (RPO). The goal is to bring an actively
controlled chaser vehicle and a passively controlled target vehicle to a prescribed
relative conﬁguration, in order to achieve mission objectives such as inspection
or docking. A detailed overview of RPO history and technology development
can be found in (Fehse, 2003; Goodman, 2006; Woﬃnden and Geller, 2007; Luo
et al., 2014). This section focuses on the challenges and developments in RPO
using convex optimization-based solution methods.

Throughout this section we consider the following RPO trajectory optimiza-

tion problem, illustrated in Figure 13:

(cid:90) tf

0

(cid:107)T (t)(cid:107)2 dt s.t.

2 r(t) + m(t)−1T (t),

min
tf ,T
¨r(t) = −µ (cid:107)r(t)(cid:107)−3
˙m(t) = −α (cid:107)T (t)(cid:107)2 ,
(cid:107)T (t)(cid:107)2 ≤ ρ,
r(t) /∈ B(t),
(cid:107)r(t) − ˆr(t)(cid:107)2 cos γ ≤ (r(t) − ˆr(t))Tn(t),
m(0) = m0, r(0) = r0,
r(tf ) = ˆr(tf ),

˙r(tf ) = ˆr(tf ),

˙r(0) = ˙r0,

(65a)

(65b)

(65c)

(65d)

(65e)

(65f)

(65g)

(65h)

where r(t), ˆr(t) ∈ R3 denote the positions of the chaser and target spacecraft in
the inertial frame. The basic objective in (65a) is to minimize fuel consumption
(Park et al., 2013). Other choices include sparsiﬁcation of the control sequence
(Hartley et al., 2013), trading oﬀ ﬂight duration with fuel consumption (Hu
et al., 2018), encouraging smoothness of the control sequence (Li and Zhu,

38

2018a), and reducing the sensitivity to sensing and control uncertainties (Jin
et al., 2020). We note that Problem 65 only characterizes the last phase of RPO.
The reader is referred to (Hartley et al., 2012; Sun et al., 2019) for examples of
multi-phase RPO trajectory optimization.

Since the quantity of interest in RPO is the relative motion between the
chaser and the target, it is commonplace to express the dynamics (65b) in a
diﬀerent reference frame. Examples include the local-vertical local-horizontal
(LVLH) frame centered at the target, or a line-of-sight polar reference frame
(Li and Zhu, 2017). Based on this choice, diﬀerent models of relative dynamics
have been studied, and are surveyed in (Sullivan et al., 2017). For near-circular
orbits, linear time-invariant Hill-Clohessy-Wiltshire (HCW) equations are the
most popular model (Clohessy and Wiltshire, 1960). For elliptical orbits, the lin-
ear time-varying Yamanaka-Ankerson (YA) state transition matrix is the usual
choice (Yamanaka and Ankersen, 2002). Perhaps a cleaner approach is to avoid
relative dynamics by working in the inertial frame, as done in (65b). (Lu and
Liu, 2013; Liu and Lu, 2014) showed that fast and reliable trajectory optimiza-
tion is still possible in this case, by applying the same lossless convexiﬁcation
as in Problem 63 to the constraints (65c) and (65d) and successively linearizing
the dynamics (65b). (Benedikter et al., 2019b) further proposed a ﬁltering tech-
nique for updating the linearization reference point to improve the algorithm
robustness. The advantage of this approach is its compatibility with general
Keplerian orbits and perturbations like J2 harmonic and aerodynamic drag.

One key challenge in RPO is to avoid collision with external debris or part
of the target vehicle itself, which is described by constraint (65e). One approach
to enforcing (65e) is to pre-compute a so-called virtual net of trajectories that
allows to avoid obstacles in real-time via a simple graph search (Frey et al.,
2017; Weiss et al., 2015b). The pre-computation procedure, however, may be
prohibitively computationally demanding. In comparison, solving Problem 65
directly can avoid virtual net construction altogether if an eﬃcient solution
method is available. To this end, the keep-out zone B(t) is usually chosen to be
a polytope, an ellipsoid, or the union of a mix of both if multiple keep-out zones
are considered (Hu et al., 2018). As shall be seen below, polytope approximation
methods yield better optimality, while ellipsoidal methods yield better compu-
tational eﬃciency. The distinction goes back to Sections 2.4 and 2.5, because
polytope methods often rely on MIP programming while ellipsoidal methods
tend to use SCP.

For the case where B(t) is a polytope, (Schouwenaars et al., 2001; Richards
et al., 2002) ﬁrst proposed to write (65e) as a set of mixed-integer constraints de-
ﬁned by the polytope facets. The resulting trajectory optimization can be solved
using MIP methods discussed in Section 2.5. (Richards and How, 2003a,b, 2006)
apply this approach in the context of MPC with a variable horizon trajectory.
For the case where B(t) is an ellipsoid, (65e) is typically enforced by checking

for collision using a conservative time-varying halfspace inclusion constraint:

where H(t) is a halfspace. Three methods belonging to this family have been

r(t) ∈ H(t) ⇒ r(t) /∈ B(t),

(66)

39

used. The ﬁrst is a rotating hyperplane method, proposed by (Park et al., 2011;
Di Cairano et al., 2012). Here, (65e) is replaced by a pre-determined sequence
of halfspaces that are tangent to the ellipsoid and rotate around it at a ﬁxed
rate. This approach was ﬁrst applied to a 2D mission, and later extended to 3D
(Weiss et al., 2012, 2015a). A variation was introduced in (Park et al., 2016) and
further studied in (Zagaris et al., 2018), where the rotating sequence is replaced
by just two halfspaces tangent to the obstacle and passing through the chaser
and target positions. This method requires to pre-specifying which of the two
halfspaces the chaser belongs to at each time instant.

Fixing the halfspace sequence enables the ﬁrst two approaches to retain
convexity. However, a third and most natural approach is to impose (66) directly
by linearizing the ellipsoidal obstacle. This approach is taken in (Liu and Lu,
2014), and has also been applied to multiple moving obstacles (Jewison et al.,
2015; Wang et al., 2018). Because convexity is not maintained, SCP solution
methods are used as discussed in Section 2.4. (Zagaris et al., 2018) provide a
detailed comparison of the three methods.

Another challenge in RPO is the thrust constraint (65d). This constraint
allows the thrust magnitude to take any value in the continuous interval [0, ρ].
In reality, however, control is often realized by a reaction control system (RCS)
that produces short-duration pulses of constant thrust. Therefore, in many
applications it makes more sense to consider an impulse constraint of the form:

∆v(t) ∈ {0} ∪ [∆vmin, ∆vmax],
where ∆v(t) ∈ R approximates the instantaneous change in the chaser’s velocity
following a ﬁring from the RCS jets. Realistic RCS thrusters have a minimum
impulse-bit (MIB) performance metric that governs the magnitude of the small-
est possible velocity change ∆vmin > 0. Because (67) is a nonconvex disjoint
constraint of the form (2), it has been historically challenging to handle. Indeed,
(Larsson et al., 2006) suggest that MIP is necessary in general, but in certain
cases the LP relaxation ∆v(t) ∈ [0, ∆vmax] of (67) suﬃces. This happens, for
example, when the velocity measurement noise exceeds the MIB value.

(67)

More recently, it was shown that the impulsive rendezvous problem can be
solved via polynomial optimization (Arzelier et al., 2011, 2013). Using results
on non-negative polynomials, (Deaconu et al., 2015) showed that impulsive ren-
dezvous with linear path constraints can be solved as an SDP. This formulation
was further embedded in a glideslope guidance framework for RPO (Ariba et al.,
2018) and in an MPC approach (Gilz et al., 2019). Distinct from polynomial
optimization, (Malyuta and A¸cıkme¸se, 2020b) proved that in some special cases
the constraint (67) can be losslessly convexiﬁed using techniques similar to those
in Section 2.3. For problems where lossless convexiﬁcation is not possible, (Ma-
lyuta and A¸cıkme¸se, 2021) showed that SCP with a numerical continuation
scheme is an eﬀective solution method. Yet another approach was presented in
(Wan et al., 2019), where an alternating minimization algorithm was proposed
for the case ∆vmin = ∆vmax, in other words when the control is bang–bang.

The impulsive rendezvous model (67) considers an instantaneous ﬁring du-
ration. The model’s accuracy can be improved by explicitly considering the

40

ﬁnite ﬁring duration, leading to a representation of the actual pulse-width mod-
ulated (PWM) thrust signal. PWM rendezvous was ﬁrst studied in (Vazquez
et al., 2011, 2014), where an optimization similar to Problem 65 was ﬁrst solved,
then the optimal continuous-valued thrust signal was discretized using a PWM
ﬁlter and iteratively improved using linearized dynamics. This approach was
later embedded in MPC (Vazquez et al., 2015, 2017). A subtly diﬀerent ap-
proach is presented in (Li et al., 2016; Li and Zhu, 2018b), called pulse-width
pulse-frequency modulation (PWPF). Instead of iteratively reﬁning the thrust
signal, PWPF passes the continuous-valued thrust signal to a Schmitt trigger
that converts it into a PWM signal. It was shown that this can save fuel and
that stability is maintained. However, a potential implementation disadvantage
is that the duration of each period in the resulting PWM signal varies contin-
uously, which conﬂicts with typical hardware where this period is an integer
multiple of a ﬁxed duration. An SCP approach was recently used to account for
this via state-triggered constraints from Section 2.5.1 (Malyuta et al., 2020).

Although RPO literature tends to focus on the relative chaser-target posi-
tion using a 3-DoF model, relative attitude control also plays an important role,
especially if the target is tumbling (Li et al., 2017; Dong et al., 2020). Thanks
to advances in the speed and reliability of optimization solvers as mentioned in
Section 2.1, there has been an increasing interest to optimize 6-DoF RPO tra-
jectories with explicit consideration of position-attitude coupling through con-
straints such as plume impingement and sensor pointing (Ventura et al., 2017;
Zhou et al., 2019). The resulting 6-DoF RPO trajectory optimization, however,
is much more challenging to solve due to the presence of attitude kinematics
and dynamics. Nevertheless, a special case with ﬁeld of view and glideslope
constraints was presented in (Lee and Mesbahi, 2014), where 6-DoF RPO was
solved as a convex quadratically constrained QP by using a dual quaternion
representation of the dynamics, eﬀectively establishing a convexiﬁcation.

For more general RPO problems, nonlinear programming software has been
used frequently. For example, (Ventura et al., 2017) used SNOPT (Gill et al.,
2005) after parameterizing the desired trajectory using polynomials. A B-spline
parameterization was used in (Sanchez et al., 2020), and the resulting nonlinear
optimization was solved by the IPOPT software (W¨achter and Biegler, 2005).
MATLAB-based packages were also used in (Malladi et al., 2019; Volpe and
Circi, 2019). Recently, SCP techniques discussed in Section 2.4 were applied
to 6-DoF RPO trajectory optimization.
(Zhou et al., 2019) considered both
collision avoidance and sensor pointing constraints. (Malyuta et al., 2020) fur-
ther considered integer constraints on the PWM pulse width in order to respect
the RCS MIB value, and constraints on plume impingement, by using state-
triggered constraints. The algorithm was improved in (Malyuta and A¸cıkme¸se,
2021) by making the solution method faster and more robust. The approach
uses homotopy ideas from Section 2.5.2 to blend the PTR sequential convex pro-
gramming method with numerical continuation into a single iterative solution
process.

The operation of two spacecraft in close proximity naturally makes RPO
a safety-critical phase of any mission. Thus, trajectory optimization that is

41

Figure 14: Illustration of a basic small body landing scenario. The basic concept is to use the
thrust T to bring the lander spacecraft to a soft touchdown in the presence of rotational and
gravitational nonlinearities, and operational constraints on glideslope, plume impingement,
and collision avoidance.

robust to modeling errors, disturbances, and measurement noise has been an
active research topic. MPC has been a popular approach in this context, as
it allows eﬃciently re-solving Problem 65 with online updated parameters us-
ing hardware with limited resources (Hartley and Maciejowski, 2014; Goodyear
et al., 2015; Park et al., 2013). (Hartley, 2015) provides a tutorial and a detailed
discussion. Among the many diﬀerent approaches that have been developed to
explicitly address robustness, we may count feedback corrections (Baldwin et al.,
2013), the extended command governor (Petersen et al., 2014), worst-case anal-
ysis (Louembet et al., 2015; Xu et al., 2018), stochastic trajectory optimization
(Jewison and Miller, 2018), chance constrained MPC (Gavilan et al., 2012; Zhu
et al., 2018), sampling-based MPC (Mammarella et al., 2020), tube-based MPC
(Mammarella et al., 2018; Dong et al., 2020), and reactive collision avoidance
(Scharf et al., 2006). In addition to various uncertainties, anomalous system be-
havior such as guidance system shutdowns, thruster failures, and loss of sensing,
also poses unique challenges in RPO. In order to ensure safety in the presence
of these anomalies, (Luo et al., 2007c,b, 2008) used a safety performance index
to discourage collision with the target, and (Breger and How, 2008) considered
both passive and active collision avoidance constraints in online trajectory op-
timization. (Zhang et al., 2015a) considered passive safety constraints together
with ﬁeld of view and impulse constraints. Aside from optimization-based meth-
ods, artiﬁcial potential functions (Dong et al., 2017; Li et al., 2018; Liu and Li,
2019) and sampling-based methods (Starek et al., 2017) have also been applied
to achieve safety in RPO.

3.3. Small Body Landing

A maneuver similar to RPO is that of small body landing, where the tar-
get spacecraft is replaced by a small celestial object such as an asteroid or a
comet. Trajectory optimization for small body landing has gathered increasing
levels of attention, spurred by recent high-proﬁle asteroid exploration missions
including Hayabusa (Kawaguchi et al., 2008), Hayabusa2 (Crane, 2019), and

42

OSIRIS-REx (Berry et al., 2013; Lauretta et al., 2017). Unlike planetary rocket
landing from Section 3.1, small body landing dynamics are highly nonlinear due
to the irregular shape, density, and rotation of the small body (Werner and
Scheeres, 1997; Scheeres et al., 1998). Landing must furthermore ensure a small
touchdown velocity, possible plume impingement requirements, and collision
avoidance. These aspects pose unique challenges for trajectory optimization.
This section reviews recent developments in convex optimization-based small
body landing algorithms. Alternative trajectory optimization methods have
also been studied for this problem and which we do not cover, such as indirect
methods (Yang and Baoyin, 2015; Chen et al., 2019).

The prototypical small body landing OCP is illustrated in Figure 14 and can

be summarized as follows:

(cid:90) tf

0

(cid:107)T (t)(cid:107)2 dt s.t.

min
tf ,T
¨r(t) = −2ω × ˙r(t) − ω × (ω × r(t)) + m(t)−1T (t) + g(r(t)),
˙m(t) = −α (cid:107)T (t)(cid:107)2 ,
ρmin ≤ (cid:107)T (t)(cid:107)2 ≤ ρmax,
(cid:107)r(t) − rf (cid:107)2 cos α ≤ (r(t) − rf )Tn,
m(0) = m0, r(0) = r0,

˙r(0) = ˙r0, r(tf ) = rf ,

˙r(tf ) = 0.

(68a)

(68b)

(68c)

(68d)

(68e)

(68f)

Note the similarity between Problems 63, 65, and 68. Compared to Prob-
lem 63, small body landing is expressed in the rotating frame of the target.
Thus, the main diﬀerence is in the dynamics (68b) that contain a general non-
linear gravity term g(r(t)) and inertial forces from the non-negligible angular
velocity ω of the small body. The glideslope constraint (68e) is also shared with
the approach cone in RPO (65f).

Early work by (Carson III and A¸cıkme¸se, 2006; Carson III et al., 2008)
ignored the mass dynamics (68c), while (68b) was linearized to solve for ac-
celeration rather than a thrust proﬁle. The resulting tube MPC algorithm
includes a pre-determined feedback controller optimized using SDP and track-
ing a feedforward trajectory from an SOCP in a robust and recursively feasible
manner. Some time later, (Pinson and Lu, 2015) solved for a ﬁxed-duration
trajectory by applying lossless convexiﬁcation to (68d) and successive lineariza-
tion to (68b), resulting in an SCP solution method consisting of a sequence
of SOCP subproblems. (Pinson and Lu, 2018) further combine this solution
procedure with Brent’s line search method to solve for the minimum-fuel ﬂight
duration, which is similar to the use of golden-section search in the PDG context
(Blackmore et al., 2010). (Cui et al., 2017) combined convexiﬁcation with clas-
sic Runge-Kutta discretization to improve the solution accuracy. (Yang et al.,
2017) showed how to solve the minimum-time landing problem as a sequence
of convex optimization problems. As a byproduct, they showed that for time-
optimal and short-duration minimum-landing-error versions of Problem 68, the
thrust stays at its maximum value, in which case the lower bound in (68d) can
be removed and (68c) simpliﬁed.

43

Figure 15: Illustration of a basic constrained reorientation scenario. The core challenge is to
execute an attitude change maneuver while ensuring that the star vector v remains outside
of the sensor keep-out cone.

Constraint (68e) is the most basic type of collision avoidance constraint.
The heuristic reasoning behind (68e) is that if the lander stays approximately
above a minimum glideslope, then it will avoid nearby geologic hazards. An al-
ternative two-phase trajectory optimization was introduced in (Dunham et al.,
2016; Liao-McPherson et al., 2016) by splitting the landing maneuver into a cir-
cumnavigation and a landing phase. During circumnavigation, the spacecraft is
far away from the landing site and (68e) is replaced by collision avoidance con-
straint with the small body. In the same manner as Section 3.2, the small body
is wrapped in an ellipsoid and a rotating hyperplane constraint is used (Dunham
et al., 2016; Liao-McPherson et al., 2016; Sanchez et al., 2018). (Reynolds and
Mesbahi, 2017) introduced an optimal separating hyperplane constraint that
also generates auxiliary setpoints for MPC tracking that converge to the land-
ing site. Once in close proximity to the landing site, the spacecraft enters the
landing phase where constraint (68e) is enforced to facilitate pinpoint landing.
Most small body landing work is 3-DoF in the sense that it considers point
mass translational dynamics. However, recently (Zhang et al., 2020) studied
a two-phase variable landing duration 6-DoF problem. The motivation was to
impose a ﬁeld of view constraint for a landing camera. The resulting nonconvex
optimization trajectory problem was solved using SCP as covered in Section 2.4.
Parameters of the small body, such as ω and g, are often subject to in-
evitable uncertainty, requiring judicious trajectory design. As a result, many
aforementioned works use MPC to cope with the uncertainty in small body
landing (Reynolds and Mesbahi, 2017; Sanchez et al., 2018). Application exam-
ples include tube MPC (Carson III and A¸cıkme¸se, 2006; Carson III et al., 2008)
and input observers to compensate for gravity modeling errors (Dunham et al.,
2016; Liao-McPherson et al., 2016). (Hu et al., 2016) also proposed to jointly
minimize fuel and trajectory dispersion described by closed-loop linear covari-
ance. For a detailed discussion on achieving robustness in small body landing,
we refer interested readers to the recent survey (Simpl´ıcio et al., 2018).

3.4. Constrained Reorientation

Scientiﬁc observation satellites commonly need to execute large angle reori-
entation maneuvers while ensuring that their sensitive instruments, such as cryo-
genically cooled infrared telescopes, are not exposed to direct sunlight or heat.

44

Famous examples include the Cassini spacecraft, the Hubble Space Telescope,
and the upcoming James Webb Space Telescope (Singh et al., 1997; Long, 2004;
Downes and Rose, 2001). This section discusses the challenges of constrained
reorientation as a trajectory optimization problem, and focuses on how convex
optimization methods have been leveraged to address these challenges.

A basic constrained reorientation OCP is illustrated in Figure 15 and can

be formulated as follows:
(cid:90) tf

min
tf ,u

0

(cid:107)u(t)(cid:107)2 dt s.t.

˙q(t) =

1
2

q(t) ⊗ ω(t),

J ˙ω(t) = u(t) − ω(t) × (Jω(t)),
q(t)TMiq(t) ≤ 0, i = 1, . . . , n,
(cid:107)ω(t)(cid:107)∞ ≤ ωmax, (cid:107)u(t)(cid:107)∞ ≤ umax,
q(0) = q0, ω(0) = ω0, q(tf ) = qf , ω(tf ) = ωf .

(69a)

(69b)

(69c)

(69d)

(69e)

(69f)

The set of constraints (69d) encodes conical keep-out zones for n stars, sim-
ilarly to the illustration in Figure 15 for one star. The parameters Mi ∈ R4×4
are symmetric matrices that are not positive semideﬁnite, as introduced in Sec-
tion 2.3. The main challenge of solving Problem 69 stems from the fact that
(69d) and the attitude dynamics (69b)-(69c) are nonconvex. (Kim and Mesbahi,
2004) were the ﬁrst to prove that (69d) can be losslessly replaced by convex
quadratic constraints, provided (cid:107)q(t)(cid:107)2 = 1. Based on this observation, (Kim
and Mesbahi, 2004) proposed to greedily optimize one discretization point at a
time instead of the entire trajectory jointly. The method was further extended
to the case of integral and dynamic pointing constraints in (Kim et al., 2010).
Although the method of (Kim and Mesbahi, 2004) is computationally eﬃ-
cient, it is inherently conservative and may fail to ﬁnd a feasible solution to
Problem 69 by greedily optimizing one discretization point at a time. As a
result, several attempts have been made to improve its performance. For exam-
ple, (Tam and Lightsey, 2016) propose to replace constraint (69d) with penalty
terms in the objective function in order to ensure that a feasible trajectory can
be found. Binary logical variables were also introduced in (69d) to account for
redundant sensors. (Hutao et al., 2011) showed how the convexiﬁcation of con-
straints (69d) should be adjusted when optimizing an entire trajectory, rather
than a single time step as originally done in (Kim and Mesbahi, 2004). Put into
an MPC framework, the resulting trajectory optimization yields less conserva-
tive performance. Alternatively, (Eren et al., 2015a) proposed to ﬁrst optimize
a quaternion sequence without kinematic and dynamic constraints, and then
to compute the corresponding angular velocity and torque using the resulting
quaternions. A hyperplane approximation of the unit sphere is used during
quaternion optimization to ensure dynamic feasibility, and is imposed via MIP.
Recently, (McDonald et al., 2020) proposed an SCP method with a line search
step that helps convergence, which provides a potential real-time solution to
Problem 69.

45

Figure 16: Illustration of a basic ascent scenario. The goal is to ﬁnd an optimal angle-of-attack
θ trajectory to transfer the launch vehicle’s payload from the planet’s surface to orbit, while
minimizing fuel and satisfying structural integrity constraints.

Aside from the quaternion representation in Problem 69, which is the most
popular choice, a direction cosine matrix representation of attitude was also
used by (Walsh and Forbes, 2018) to solve an equivalent problem. The result-
ing trajectory optimization can be approximated as an SDP using successive
linearization and relaxing (69d).

Due to its challenging nature, Problem 69 has inspired many optimization
solutions other than those based on convex optimization. Pseudospectral meth-
ods and NLP optimization software have all been used to solve Problem 69
directly (Xiaojun et al., 2010; Lee and Mesbahi, 2013). An indirect shooting
method was used in (Lee et al., 2017; Phogat et al., 2018a), and a diﬀerential
evolution method was used in (Wu et al., 2017; Wu and Han, 2019). Compared
with convex optimization based methods, these methods typically require more
computational resources to achieve real-time implementation.

3.5. Endo-atmospheric Flight

Launching from or returning to a planet with an atmosphere are integral
parts of many space missions. These problems concern launch vehicles, missiles,
and entry vehicles such as capsules, reusable launchers, and hypersonic gliders.
Signiﬁcant portions of launch and entry occur at high velocities and in the pres-
ence of an atmosphere, making aerodynamics play a large role. Aerodynamics
and thermal heating are indeed the core diﬀerentiating factors between endo-
atmospheric ﬂight and PDG from Section 3.1. For the latter problem, small
velocities and thinness of the atmosphere make aerodynamic eﬀects negligible
in many cases (Eren et al., 2015b). This section summarizes recent contribu-
tions to endo-atmospheric trajectory planning using convex optimization-based
methods. In particular, Section 3.5.1 discusses ascent and Section 3.5.2 discusses
entry.

3.5.1. Ascent Flight

The optimal ascent problem seeks to transfer a launch vehicle’s payload from
a planet’s surface to orbit while minimizing a quantity such as fuel. Naturally,
optimal control theory from Section 2.1 has found frequent applications in ascent

46

guidance, and we refer the reader to (Hanson et al., 1994) for a survey. Heritage
algorithms date back to the iterative guidance mode (IGM) of Saturn rockets
(Chandler and Smith, 1967; Horn et al., 1969; Adkins, 1970; Haeussermann,
1970) and the powered explicit guidance (PEG) of the Space Shuttle (McHenry
et al., 1979). A simple yet relevant optimal control problem describing an orbital
launch scenario is known as the Goddard rocket problem (Betts, 2010; Bryson
Jr. and Ho, 1975). A version with variable gravity and no atmospheric drag is
stated as follows:

−m(tf ) s.t.

min
tf ,T
¨r(t) = −µ (cid:107)r(t)(cid:107)−3
˙m(t) = −α (cid:107)T (t)(cid:107)2 ,
m(0) = m0, r(0) = r0,

2 r(t) + m(t)−1T (t),

˙r(0) = ˙r0, ψ(r(tf ), ˙r(tf )) = 0.

(70a)

(70b)

(70c)

(70d)

Problem 70 models a three-dimensional point mass moving in a gravity ﬁeld
under the inﬂuence of thrust. As such, it also applies to orbit transfer problems
which we discuss later in Section 3.6. The vector r(t) ∈ R3 is the position
vector, T (t) ∈ R3 is the thrust vector, and m(t) ∈ R is the vehicle mass. The
vector function ψ : R6 → Rk imposes k ≤ 6 terminal conditions. In ascent and
orbit transfer applications, ψ usually acts to constrain k orbital elements while
leaving the other 6 − k orbital elements free.

A key issue when solving Problem 70 using an indirect method is to resolve
the transversality conditions of the resulting TPBVP (Pontryagin et al., 1986;
Berkovitz, 1974):

p(tf ) = (cid:2)∇xψ(cid:0)x(tf )(cid:1)(cid:3)T
where x(t) (cid:44) (r(t); ˙r(t)), p(·) ∈ R6 are the costates relating to the position and
velocity, and νp ∈ Rk is a Lagrange multiplier vector. Unfortunately, νp has
no physical or exploitable numerical interpretation, and the magnitudes of its
elements can vary wildly (Pan et al., 2013). This causes a lot of diﬃculty for
the solution process in terms of numerics, robustness, and initial guess selection.
Traditionally, the problem is overcome by converting (71) into a set of 6 − k so-
called reduced transversality conditions, which are equivalent (Lu et al., 2003):

(71)

νp,

(cid:2)∇xψ(cid:0)x(tf )(cid:1)(cid:3)yi = 0,
yT
i p(tf ) = 0,

i = 1, . . . , 6 − k,

i = 1, . . . , 6 − k.

(72a)

(72b)

The linearly independent vectors yi ∈ R6 are known as the reduced transver-
sality vectors, and are a function of x(tf ). If they are known analytically, then
(72b) can replace (71), which eliminates νp from the problem and simpliﬁes the
solution process considerably. However, solving for yi symbolically is a diﬃcult
task, and the resulting expressions can be complicated (Brown and Johnson,
1967). An alternative approach was introduced in (Pan et al., 2013) where the
authors provide an easy to use “menu” of the 6 − k constraints in (72b) that are

47

needed. This is achieved by considering Problem 70 speciﬁcally and exploiting
the structure oﬀered by the classical orbital elements. It is only assumed that
the terminal constraint function ψ ﬁxes exactly k of the 6 orbital elements, and
leaves the other orbital elements free.

The Goddard rocket problem in Problem 70 assumes no atmosphere. When
there is an atmosphere, a popular classical method is the gravity turn maneuver,
which maintains a low angle-of-attack so as to minimize lateral aerodynamic
loads. However, the general ascent problem with an atmosphere is complicated
due to strong coupling of aerodynamic and thrust forces (Pan and Lu, 2010).
Thus, ascent is typically performed via open-loop implicit guidance, in the sense
that feedback control is used to track a pre-computed ascent trajectory stored
onboard as a lookup table. However, this approach cannot robustly handle oﬀ-
nominal conditions, aborts, and contingencies, which motivates research into
closed-loop ascent techniques (Brown and Johnson, 1967; Lu, 2017).

A notable strategy in this context is to include aerodynamics in an onboard
ascent solution via a homotopy method starting from an optimal vacuum as-
cent initial guess (Calise et al., 1998; Gath and Calise, 2001; Calise and Brandt,
2004). Another approach was developed in (Lu et al., 2003, 2005; Lu and Pan,
2010; Pan and Lu, 2010) using indirect trajectory optimization. Here, a ﬁnite-
diﬀerence scheme is proposed to solve for the necessary conditions of optimality
for ascent with an atmosphere. In particular, ﬁxed-point formulations were con-
sidered (Lu et al., 2005), primer vector theory was invoked to determine trajec-
tory optimality (Lu and Pan, 2010), and a generalization to arbitrary numbers
of burn and coast arcs was developed (Pan and Lu, 2010). Finally, indirect
methods relying on control smoothing via trigonometrization have been devel-
oped to address problems with bang–bang input and singular arcs (Mall et al.,
2020). The Epsilon-Trig method (Mall and Grant, 2017), which is an exam-
ple of such an approach, was applied to the Goddard maximum altitude ascent
problem to obtain its bang–singular–bang optimal solution. See Section 2.1.1
for a brief description of these approaches.

Modern improvements in convex optimization have made direct optimization
methods attractive for ascent guidance. To this end, consider the following
illustrative ascent problem for a two-stage launch vehicle, as shown in Figure 16:

−m(tf ) s.t.

min
tf ,θ
¨r(t) = −µ (cid:107)r(t)(cid:107)−3
˙m(t) = −α (cid:107)T [t](cid:107)2 ,
θ1 ≤ θ(t) ≤ θ2,
ρ[t] (cid:107) ˙r(t)(cid:107)2
ρ[t] (cid:107) ˙r(t)(cid:107)2
m(0) = m0, r(0) = r0,
m(t+
1 ) − m1.

2 ≤ qmax,
2 |θ(t)| ≤ Nmax,

1 ) = m(t−

2 r(t) + m(t)−1(T [t] + L[t] + D[t]),

˙r(0) = ˙r0, ψ(r(tf ), ˙r(tf )) = 0,

48

(73a)

(73b)

(73c)

(73d)

(73e)

(73f)

(73g)

(73h)

Problem 73 is planar and formulated in an Earth-centered inertial (ECI)
frame. Control is performed using the angle-of-attack θ, which determines the
direction of an otherwise pre-determined thrust proﬁle (Zhang et al., 2019; Li
et al., 2020; Liu and Lu, 2014). The major aerodynamic forces are those of lift
L and drag D, each of which may be complex expressions of state and control.
Note that in (73b) we used the shorthand T [t], L[t], and D[t] from Section 1
to abstract away the possible state and control arguments. The atmospheric
density is denoted by ρ, which varies during ascent as a nonlinear function of
the position r. An example is given later in (75c). Important constraints on the
dynamic pressure (73e) and bending moment (73f) are used to ensure the vehi-
cle’s structural integrity (Lu and Pan, 2010). The target orbit is prescribed by
the vector function ψ in (73g), which is the same as in (70d) and speciﬁes some
or all of the target orbital elements. (Benedikter et al., 2020) chose boundary
conditions based on the radius and inclination of a circular target orbit. A ﬁnal
nuance is that, if the rocket is assumed to be a two-stage vehicle, a stage sepa-
ration event must be scheduled at a pre-determined time t1 via (73h). At the
separation instant, the mass variable experiences a discontinuous decrease that
amounts to the dry weight of the ﬁrst stage (Benedikter et al., 2019a, 2020).
A related constraint for stage separation requires θ(t1) = 0 in order to reduce
lateral load (Zhengxiang et al., 2018). Furthermore, the splashdown location of
a burnt-out separated stage can also be constrained (Benedikter et al., 2020).

Due to the presence of strong nonlinearities, convex optimization-based so-
lution algorithms for Problem 73 typically use SCP from Section 2.4. However,
several manipulations have been helpful to make the problem less nonlinear.
Conversion of the system dynamics (73b) to control-aﬃne form, at times by
choosing an independent variable other than time, followed by the use of loss-
less convexiﬁcation within an SCP framework has been a common approach.
(Zhang et al., 2019) obtained a control-aﬃne form by assuming the AoA to be
small and deﬁning u1 = θ, u2 = θ2 as the new control variables. This choice
makes drag a linear function of the control, while the constraint u2
1 = u2 is
relaxed to u2
1 ≤ u2 via lossless convexiﬁcation. Similarly, (Benedikter et al.,
2019a, 2020) chose thrust direction as input and losslessly convexiﬁed the unit
norm constraint on the thrust direction to a convex inequality. (Cheng et al.,
2017) considered a 3D problem with AoA and bank angle as control inputs, and
applied lossless convexiﬁcation to a constraint of the form u2
3 = 1.
Furthermore, their choice of altitude as the independent variable simpliﬁed the
convexiﬁcation of constraints involving density, since it renders the density a
state-independent quantity. In particular, during collocation over a known grid
within an altitude interval, the density value is known at each node. This fails
to be the case when collocation is performed over time. The choice of altitude
as independent variable was also explored in (Liu et al., 2016b).

1 + u2

2 + u2

The two-agent launch problem is an interesting and relevant modern-day
extension of Problem 73 (Ross and D'Souza, 2004).
In this case, the launch
vehicle ﬁrst stage is not just an idle dropped mass, but is a controlled vehicle
that must be brought back to Earth. This is the case for the SpaceX Falcon 9
rocket, whose ﬁrst stage is recovered by propulsive landing after a series of post-

49

Figure 17: Illustration of a basic atmospheric entry scenario. The goal is to ﬁnd an optimal
bank angle σ trajectory to dissipate energy while meeting structural integrity and targeting
requirements.

separation maneuvers (Blackmore, 2016). It was shown in (Ross and D'Souza,
2005) how hybrid optimal control can be used to solve the problem via mixed-
integer programming. More generally, hybrid optimal control has also found
applications in low-thrust orbit transfer using solar sails (Stevens and Ross,
2005; Stevens et al., 2004).

3.5.2. Atmospheric Entry

Atmospheric entry, also known as reentry, is fundamentally a process of
controlled energy dissipation while meeting targeting and structural integrity
constraints (Lu, 2014). Computer-controlled entry guidance dates back to the
Gemini and Apollo projects, and (D’Souza and Sarigul-Klijn, 2014) provide a
comprehensive survey of existing methods. Good documentation is available for
Mars Science Laboratory’s entry guidance, which is based on Apollo heritage
(Way et al., 2007; Mendeck and Craig, 2011; Steltzner et al., 2014).

A large body of work is available on predictor-corrector methods for entry
guidance (Xue and Lu, 2010; Johnson et al., 2020, 2018, 2017; Lu, 2014) and
for aerocapture (Lu et al., 2015). These methods are based on root-ﬁnding
algorithms, or variations thereof, and some versions are grounded in solving the
necessary conditions of optimality (Lu, 2018). We refer the reader to (Lu, 2008)
for further details. In addition to reentry trajectory generation, mission analysis
tools for generating landing footprints have also been developed (Lu and Xue,
2010; Eren et al., 2015b).

Guidance schemes based on univariate root-ﬁnding, which are near-optimal
for reentry (Lu, 2014) and optimal for aerocapture (Lu et al., 2015), have also
been developed. Reentry applications exploit the quasi-equilibrium glide condi-
tion (QEGC), while aerocapture leverages the bang–bang nature of the control
solution obtained via the maximum principle. By using the knowledge of where
the input switches, univariate root-ﬁnding can approximate the optimal solution

50

in each phase to high accuracy. Such an approach, though based on an indirect
method, avoids directly solving the TPBVP. Recall that lossless convexiﬁcation,
discussed in Section 2.3, is another approach where clever reformulation of the
optimal control problem and application of the maximum principle yields an
eﬃcient solution strategy. This ties back to the last paragraph of Section 2.1.2,
which states that the fusion of indirect and direct solution methods often yields
more eﬃcient solution algorithms than using any one method in isolation. Be-
cause root-ﬁnding algorithms do not involve an explicit call to an optimizer,
we do not survey them here. Instead, this section focuses on contributions by
convex optimization-based methods to the problem of entry trajectory compu-
tation.

Another methodology that simpliﬁes the typical strategy in indirect meth-
ods is the RASHS approach (Saranathan and Grant, 2018). As discussed in
Section 2.5.2, RASHS converts a multi-phase optimal control problem into a
single-phase problem by using sigmoid functions of state-based conditions to
instigate smooth transitions between phases. As a consequence, the multi-point
BVP from Pontryagin’s maximum principle is reduced to a TPBVP. The com-
plete entry, descent, and landing (EDL) problem is one example that can be
solved eﬀectively via this technique.

Consider a basic entry guidance problem illustrated in Figure 17, which is

formulated as follows:

2 r(t) + m−1(cid:0)L[t] + D[t](cid:1),

˙Q[t] s.t.

min
u

max
t∈[0,tf ]
¨r(t) = −µ (cid:107)r(t)(cid:107)−3
|u(t)| ≤ 1,
ρ[t] (cid:107) ˙r(t)(cid:107)2
(cid:107)L[t] + D[t](cid:107)2 ≤ nmax,
r(0) = r0,

2 ≤ qmax,

˙r(0) = ˙r0.

(74a)

(74b)

(74c)

(74d)

(74e)

(74f)

Problem 74 is planar and formulated in an ECI frame like Problem 73.
Aerodynamic forces are governed by the lift, drag, and atmospheric density,
which are expressed as follows:

L[t] = Rπ/2cLρ[t] (cid:107) ˙r(t)(cid:107)2 ˙r(t)u(t),
D[t] = RπcDρ[t] (cid:107) ˙r(t)(cid:107)2 ˙r(t),
ρ[t] = ρ0 exp (−((cid:107)r(t)(cid:107)2 − r0)/h0) .

(75a)

(75b)

(75c)

The lift and drag coeﬃcients are given by cL and cD while ρ0, h0, and r0 de-
note the reference density, reference altitude, and planet radius. Rθ corresponds
to a counter-clockwise rotation by θ radians. The control input u(t) = cos(σ(t))
is the cosine of the bank angle, and serves to modulate the projection of the
lift vector onto the plane of descent, known also as the pitch plane. Entry is
an extremely stressful maneuver for much of the spacecraft’s hardware, there-
fore structural integrity constraints are placed on dynamic pressure (74d) and

51

aerodynamic load (74e). The objective is to minimize the peak heating rate,
given by the Detra–Kemp–Riddell stagnation point heating correlation (Detra
et al., 1957; Garrett and Pitts, 1970), which is appropriate for an insulative
reusable thermal protection system (TPS) such as on the Space Shuttle and
SpaceX Starship::

˙Q[t] ∝ (cid:112)ρ[t] (cid:107) ˙r(t)(cid:107)3.15

2

.

(76)

Problem 74 is a simple example that gives a taste for the reentry problem.
We now survey variants of this problem that have been explored in the litera-
ture. First of all, many other objectives have been proposed in place of (74a).
These include a minimum heat load (Wang and Grant, 2017; Han et al., 2019),
minimum peak normal load (Wang, 2019a,b), minimum time-of-ﬂight (Wang
et al., 2019b; Han et al., 2019), minimum terminal velocity (Wang and Grant,
2017), maximum terminal velocity (Wang and Grant, 2019), minimum phugoid
oscillation (Liu and Shen, 2015), and minimum cross-range error (Fahroo et al.,
2003a,b). In the problem of aerocapture, where a spacecraft uses the planet’s
atmosphere for insertion into a parking orbit, minimum velocity error (Zhang
et al., 2015b) and minimum impulse, time-of-ﬂight, or heat load (Han et al.,
2019) were studied. Minimizing the total heat load, which is equivalent to the
average heating rate, is particularly relevant for ablative TPS that work by car-
rying heat away from the surface through mass loss. This has been the method
of choice for Apollo, SpaceX Crew Dragon, and almost all interplanetary entry
systems, because it can sustain very high transient peak heating rates (Hicks,
2009).

Problem 74 is expressed in the pitch plane and without regard for planetary
rotation. To account for rotation and aspects like cross-range tracking, other
formulations have been explored. This includes a pitch plane formulation with
rotation (Chawla et al., 2010), a 3D formulation without rotation (Zhao and
Song, 2017), and a 3D formulation with rotation (Wang and Grant, 2017; Wang
et al., 2019a; Wang, 2019a; Wang and Grant, 2018a; Wang et al., 2019b; Liu
and Shen, 2015; Liu et al., 2016a, 2015; Han et al., 2019).

The two main path constraints present in Problem 74 are on the dynamic
pressure (74d) and aerodynamic load (74e). The heating rate is also indirectly
constrained since (74a) must achieve a lower value than the maximum heating
rate ˙Qmax, otherwise the computed trajectory melts the spacecraft. Since these
three constraints are critical for structural integrity, they permeate much of
reentry optimization literature (Wang and Grant, 2017, 2019; Wang et al., 2019a;
Wang and Grant, 2018a; Wang, 2019a; Zhao and Song, 2017; Wang et al., 2019b;
Liu et al., 2015, 2016a; Han et al., 2019; Liu and Shen, 2015; Sagliano and Mooij,
2018). Some researchers have also included no-ﬂy zone (NFZ) constraints, as
illustrated in Figure 17 (Zhao and Song, 2017; Liu et al., 2016a). A bank angle
reversal constraint has also been considered in (Zhao and Song, 2017; Han et al.,
2019; Liu et al., 2015, 2016a; Liu and Shen, 2015). This is a nonconvex constraint
of the form:

0 < σmin ≤ |σ(t)| ≤ σmax.

(77)

A common approach to handle (77) is to deﬁne u1(t) (cid:44) cos(σ(t)) and u2(t) (cid:44)

52

sin(σ(t)), and to impose:

cos(σmax) ≤ u1(t) ≤ cos(σmin), u1(t)2 + u2(t)2 = 1,

(78)

where the nonconvex equality constraint is subsequently losslessly convexiﬁed
to u1(t)2 + u2(t)2 ≤ 1 (Liu and Shen, 2015; Liu et al., 2016a, 2015).

The bank angle with a prescribed AoA proﬁle is a popular control input
choice for reentry, dating back to Apollo (Rea and Putnam, 2007). Some works
have considered bank angle rate as the input, which improves control smooth-
ness (Wang and Grant, 2017, 2019; Wang, 2019a; Wang et al., 2019a; Wang
and Grant, 2018a; Wang et al., 2019b). However, banking is not the only possi-
ble control mechanism for reentry, and several other choices have been explored.
(Chawla et al., 2010) use the AoA as input and omit bank and heading. (Fahroo
et al., 2003a) use AoA, bank angle, and altitude, assuming the aforementioned
QEGC with a small ﬂight-path angle between the velocity vector and the lo-
cal horizontal.
(Zhao and Song, 2017) use bank angle and a normalized lift
coeﬃcient as inputs.

High frequency oscillation in the control signal, known as jitter, is a common
issue in entry trajectory optimization. Several works explicitly address this
issue (Szmuk et al., 2017; Wang and Grant, 2017; Liu et al., 2016a, 2015).
Jitter is believed to be caused by the nonlinear coupling of state and control
constraints (Wang and Grant, 2017), and it appears to be reduced by a control-
aﬃne reformulation of the dynamics (Liu et al., 2016a). Other strategies to
remove jitter have been to apply the reparametrization (78) or to ﬁlter the
control signal. The latter approach includes the aforementioned use of bank
angle rate as the control, or using a ﬁrst-order low-pass ﬁlter (Liu et al., 2015).
Aside from ﬁxing jitter, eﬀorts have been devoted to simplifying the SCP-
based solution methods, and to improving their convergence properties. Refor-
mulating the dynamics using energy as the independent variable, in a similar
way to how altitude was used for optimal ascent, is one tactic that achieves
the former (Lu, 2014; Liu et al., 2015; Liu and Shen, 2015; Liu et al., 2016a).
Such a parametrization eliminates the diﬀerential equation for airspeed, and in-
stead yields an algebraic approximation for airspeed in terms of energy. (Fahroo
et al., 2003a,b) applied a related elimination process by considering energy as
state variable. Apart from this, it is worth noting the heuristics proposed for im-
proving the convergence of the SCP-based approaches. (Liu et al., 2015; Wang
and Grant, 2019; Wang, 2019b) used backtracking line search at each SCP iter-
ation to reduce constraint violation. It was found that with the line search, the
number of iterations required for convergence reduced by half (Liu et al., 2015).
(Zhang et al., 2015b) constrained the SCP iterates to form a Cauchy sequence.
(Wang et al., 2019b) proposed a dynamic trust region update scheme that is
tailored for hypersonic reentry. In particular, the trust region update accounts
for the linearization error due to each state instead of the typical approach of
considering the average linearization error.

Aside from using SCP to optimize the entire entry trajectory, another pop-
ular approach for entry guidance is via MPC from Section 2.6. Some impor-
tant recent MPC-based developments are the dynamic control allocation scheme

53

Figure 18: Illustration of a basic orbit transfer scenario. The goal is to use thrust T to transfer
the spacecraft state from an initial orbit to a target orbit under the inﬂuence of gravity, while
minimizing a quantity such as fuel or time.

(Luo et al., 2007a) and the application of model predictive static programming
(MPSP). The approach by (Luo et al., 2007a) centers around posing an SQP
problem as a linear complimentarity problem, while the principle behind MPSP
is to combine MPC and approximate dynamic programming though a paramet-
ric optimization formulation (Halbe et al., 2014, 2010; Chawla et al., 2010). (van
Soest et al., 2006; Recasens et al., 2005) corroborate the eﬀectiveness of MPC-
based approaches by comparing the performance of constrained MPC with that
of PID control applied to feedback-linearized reentry ﬂight.

Last but not least, we conclude by discussing pseudosectral discretization
from Section 2.2.4 as a popular methodology in a variety of reentry problem
formulations. The method is appealing for its ability to yield accurate solutions
with a relatively sparse temporal collocation grid, and recent results on the esti-
mation of costates with spectral accuracy provide a strong theoretical grounding
(Fran¸colin et al., 2014; Gong et al., 2010). (Rea, 2003; Fahroo et al., 2003a,b)
applied direct Legendre collocation to generate an entry vehicle footprint by
solving a nonconvex NLP. (Sagliano and Mooij, 2018) used Legendre-Lobatto
collocation and lossless convexiﬁcation to generate an optimal proﬁle for the
heritage drag-energy guidance scheme. In addition to these approaches, which
rely solely on the direct method, a combination of direct and indirect methods
was discussed in (Josselyn and Ross, 2003) for verifying optimality of reentry
trajectories using the DIDO solver (see Table 1). In (Tian and Zong, 2011), a
feedback guidance law through an indirect Legendre pseudospectral method was
developed to track a reference generated using a direct pseudospectral method.
Finally, akin to explicit MPC, (Sagliano et al., 2017) developed a pre-computed
interpolation-based multivariate pseudospectral technique that is coupled with a
subspace selection algorithm to generate nearly optimal trajectories in real-time
for entry scenarios in the presence of wide dispersions at the entry interface.

54

xyCentralbodyInitialorbitFinalorbitSpacecraftT˙r∝−rkrk−323.6. Orbit Transfer and Injection

A usual task in a space mission is to attain a certain orbit, or to change
orbits. The goal of the so-called orbit transfer and injection (OTI) problem is
to transport a low-thrust space vehicle from an initial to a target orbit while
minimizing a quantity such as time or fuel. Unsurprisingly, the problem is
as old as spaceﬂight itself, with the earliest bibliographic entry dating to the
late 1950s (Faulders, 1958). Traditionally, the problem has been solved us-
ing optimal control theory from Section 2.1, and for this we can cite the books
(Longuski et al., 2014; Lawden, 1963; Bryson Jr. and Ho, 1975; Kirk, 1970; Con-
way, 2014). Numerous solution methods have been studied, including methods
based on primer vector theory (Russell, 2007; Petropoulos and Russell, 2008;
Restrepo and Russell, 2017), direct methods based on solving an NLP (Betts,
2000; Arrieta-Camacho and Biegler, 2005; Ross et al., 2007; Starek and Kol-
manovsky, 2012; Graham and Rao, 2015, 2016), and indirect methods (Alfano
and Thorne, 1994; Fernandes, 1995; Kechichian, 1995; Haberkorn et al., 2004;
Gong et al., 2008; Gil-Fernandez and Gomez-Tierno, 2010; Zimmer et al., 2010;
Pan et al., 2012; Pontani and Conway, 2013; Cerf, 2016; Taheri et al., 2016,
2017; Rasotto et al., 2015; Lizia et al., 2014). Some recent advances for indirect
methods include homotopy methods (Pan et al., 2019; Pan and Pan, 2020; Cerf
et al., 2011), optimal switching surfaces (Taheri and Junkins, 2019), the RASHS
and CSC approaches from Section 2.5.2 (Saranathan and Grant, 2018; Taheri
et al., 2020a,b), and simultaneous optimization (also known as co-optimization)
of the trajectory and the spacecraft design parameters (Arya et al., 2020).

In a similar way to the previous sections, improvements in convex opti-
mization technology have prompted an increased interest in applying the di-
rect family of methods to OTI. For example, (Betts and Erb, 2003) solved a
minimum-fuel Earth to Moon transfer using a solar electric propulsion system,
which is a complex problem with a transfer duration of over 200 days. The prob-
lem is highly nonconvex, and the optimization algorithm is based on SQP. This
section discusses some of the recent developments for solving OTI using convex
optimization-based methods, and their extensions to optimal exo-atmospheric
launch vehicle ascent.

A basic optimal OTI problem is illustrated in Figure 18 and can be formu-

lated as follows:

(cid:90) tf

0

(cid:107)T (t)(cid:107)2 dt s.t.

min
tf ,T
¨r(t) = −µ (cid:107)r(t)(cid:107)−3
˙m(t) = −α (cid:107)T (t)(cid:107)2 ,
(cid:107)T (t)(cid:107)2 ≤ ρ,
m(0) = m0, r(0) = r0,
ψ(r(tf ), ˙r(tf )) = 0.

2 r(t) + m(t)−1T (t),

˙r(0) = ˙r0,

(79a)

(79b)

(79c)

(79d)

(79e)

(79f)

Just like in Problem 70, the vector function ψ in (79f) describes the ﬁnal
orbit insertion constraints, usually in the form of orbital elements. Note that

55

(79b)-(79d) are identical to Problem 65. Naturally, we may hope that previously
developed lossless convexiﬁcation and SCP techniques from (Lu and Liu, 2013)
apply for OTI. The main novelty is the nonlinear insertion constraint (79f). (Liu
and Lu, 2014) showed that (79f) can be linearized with a second-order correction
term, and Problem 79 can be solved via SCP as a sequence of SOCPs. The
method is eﬃcient and reliable, even for extremely sensitive cases like McCue’s
orbit transfer problem (McCue, 1967). Using similar convexiﬁcation techniques,
a 3D minimum-fuel OTI problem was considered in (Wang and Grant, 2018b).
Similarly, a 2D minimum-time OTI problem was studied in (Wang and Grant,
2018c), where the dynamics were parametrized by transfer angle (i.e., orbit
true anomaly) instead of time as the independent variable. Both works consider
circular orbits, where (79f) can be linearized using spherical or polar coordinates.
(Tang et al., 2018) solved a minimum-fuel orbit transfer problem by combining
SCP with lossless convexiﬁcation and pseudospectral discretization. (Song and
Gong, 2019) studied a minimum-time interplanetary solar sail mission, where
the thrust is replaced by solar radiation force, and optimized the trajectory via
SCP as a sequence of SOCP problems.

The above paragraph mentions works that deal mainly with orbit transfer.
A companion problem is that of orbit injection, where the vehicle is taken from
a non-orbiting state to a target orbit. This occurs, for instance, in the last stage
of rocket ascent. (Liu and Lu, 2014) showed that Problem 79 can also model the
optimal exo-atmospheric ascent ﬂight of a medium-lift launch vehicle. In this
case, the initial condition (79e) typically denotes burnout of the launch vehicle’s
previous stage. In (Liu and Lu, 2014), constraint (79f) denotes the radius and
velocity at the perigee of the target circular orbit. (Li et al., 2019) considered
a similar optimal ascent problem where the thrust magnitude is constant, and
constraint (79f) describes the orbital elements of a general elliptical orbit. Using
pseudospectral discretization and SCP, this optimal ascent problem is solved as
a sequence of SOCPs. (Li et al., 2020) further considered optimal ascent ﬂight
in the case of a power system fault. In this case, depending on the severity of
the fault, (79f) describes progressively relaxed insertion constraints. constraints.
Once the spacecraft is in orbit, an adjacent task is to avoid debris crossing its
path. (Armellin, 2021) develops a real-time collision avoidance algorithm based
on lossless convexiﬁcation and SCP, and provides a detailed statistical analysis
corroborating the method’s eﬀectiveness.

Mission planning often sits one layer above the OTI problem. For exam-
ple, a mission plan may consist of a series of planetary ﬂyby and gravity assist
maneuvers. A mission, then, can be viewed as a sequence of OTI solutions
that minimizes an overall objective such as fuel usage or travel time. A mod-
ern approach to mission planning is through hybrid optimal control, and some
methods were already mentioned at the end of Section 3.5.1 (Ross and D'Souza,
2005; Stevens and Ross, 2005; Stevens et al., 2004). Evolutionary optimiza-
tion using genetic algorithms oﬀers an alternative solution for mission planning
(Conway, 2014). This approach was used to plan several complex missions: a
Galileo-type mission from Earth to Jupiter, a Cassini-type mission from Earth
to Saturn, and an OSIRIS-REx type mission from Earth to the asteroid Bennu

56

(Englander et al., 2012). The Saturn mission is almost identical to that used by
the actual NASA/ESA Cassini mission, but is obtained fully automatically at a
fraction of the time and cost. The algorithm, known as the evolutionary mission
trajectory generator (EMTG), has been made available by NASA Goddard as
an open-source software package (Englander, 2020).

4. Outlook

This paper surveyed promising convex optimization-based techniques for
next generation space vehicle control systems. We touched on planetary rocket
landing, small body landing, spacecraft rendezvous, attitude reorientation, or-
bit transfer, and endo-atmospheric ﬂight including ascent and reentry. The
discussion topics were chosen with a particular sensitivity towards computa-
tional eﬃciency and guaranteed functionality, which are questions of utmost
importance for spaceﬂight control. We conclude by listing in Section 4.1 some
of the most popular optimization software now available to the controls engi-
neer, and outlining in Section 4.2 future research directions to which the reader
may wish to contribute.

4.1. Optimization Software

Success in any computational engineering discipline owes in large part to
the availability of good software. Table 1 lists modern optimization software
packages that facilitate the implementation of algorithms discussed in Section 3.
This list is by no means complete, and should be understood to merely indicate
some of the popular optimization software packages that are quite mature and
already available today.

4.2. Future Directions

We conclude this survey paper by listing some interesting and important

future directions for optimization-based space vehicle control.

4.2.1. Guaranteed Performance

When proposing a new control algorithm for a real system, it is sobering to
remember that the vehicle’s survival, along with that of its occupants, literally
hangs in the balance (Stein, 2003). The modern controls engineer has immense
responsibility both to mission success and to upholding the foundation of trust
created by the high reliability of traditional control methods.
If we cannot
guarantee an equal or greater level of reliability, then new optimization-based
control methods will quite certainly be relegated to a ground support role (Ploen
et al., 2006).

Consequently, a direction of great importance for optimization-based space
vehicle control is to rigorously certify that optimization-based algorithms con-
verge to solutions that yield safe and robust operation in the real world. Ac-
tive research is being done in the area, but general results are limited and
many promising optimization-based methods lack proper guarantees. Today,

57

Table 1: Summary of popular optimization software packages. The columns Direct and Indi-
rect specify which solution method the software uses, as discussed in Section 2.1. The column
Real-time denotes if the software is destined for real-time onboard use. Open-source identiﬁes
free-to-download packages with viewable source code. Pseudospectral identiﬁes software that
is compatible with pseudospectral discretization. Class describes the most general class of
problems that the software can solve. Back-end lists which low-level optimizers are used, and
Language lists the implementation and front-end interface languages of the package. Certain
classiﬁcations that do not apply to the “generic parsers” software category are indicated by
an empty cell background.

researchers are looking at real-time performance (Reynolds et al., 2020b; Ma-
lyuta et al., 2020), optimality (Reynolds and Mesbahi, 2020b), and convergence
rates (Mao et al., 2018b; Bonalli et al., 2019). Perhaps the most important yet
diﬃcult guarantee is that the algorithm terminates in ﬁnite time, which is imper-
ative for control. In the convex setting, algorithms with guaranteed convergence
are available and have been ﬂight-tested (Dueri et al., 2017; Scharf et al., 2017),
so one direction to explore is how to convexify more general types of nonlinearity
(Malyuta and A¸cıkme¸se, 2020b; Liu and Lu, 2014; Lee and Mesbahi, 2014). For

58

NameReferenceDirectIndirectReal-timeOpen-sourcePseudo-spectralClassBack-endLanguageGenericparsersJuMP(Dunningetal.,2017)MINLPHJuliaCVX(GrantandBoyd,2008)MICP∥§YALMIP(Löfberg,2004)MINLP\MATLABAMPL(Foureretal.,1990)MINLP∇+OptimalcontrolproblemparsersSCPToolbox(Malyutaetal.,2021)NLP∥JuliaCasADi(Anderssonetal.,2019)NLP†NSPARTAN(Sagliano,2019)NLP∗MATLABMISER(Jenningsetal.,2015)NLP‡MATLABGPOPS-II(PattersonandRao,2014)NLP∗MATLABDIDO(RossandKarpenko,2012)NLP◦MATLABHamPath(Caillauetal.,2012)NLP++⊕ACADO(Houskaetal.,2010)NLP¶∗∗PSOPT(Becerra,2010)NLP∗C++EZopt(Shenetal.,2010)NLPSNOPT■GESOP(Topcuetal.,2007)NLP(cid:228)∆GenericsolversCOSMO(Garstkaetal.,2019)SDP?JuliaFORCES(Zanellietal.,2017)NLPIPMCCVXGEN(MattingleyandBoyd,2011)QPIPMCSpaceﬂight-speciﬁcsolversG-FOLD(Scharfetal.,2017)SOCPBsocpCHECOS,Gurobi,MOSEK,CPLEX,SDPT3,SeDuMi,IPOPT,SNOPT,COSMO,andmore.∥ECOS,Gurobi,MOSEK,CPLEX,SDPT3,SeDuMi,andmore.Variesbyimplementationlanguage.§MATLAB(CVX),Python(CVXPY),Julia(Convex.jl),andR(CVXR).\Allfrom∥aswellasIPOPT,KNITRO,SNOPT,andmore.∇CBC,CPLEX,FortMP,Gurobi,MINOS,IPOPT,SNOPT,KNITRO,andmore.+AnalgebraicmodellinglanguageinﬂuencedbyCandAWK.†IPOPT,qpOASES,OOQP,CPLEX,Gurobi,andothers.NWritteninC++withPython,C++,MATLAB/Octaveinterfacesavailable.∗IPOPT,SNOPT.‡Sequentialquadraticprograming(SQP)solverNLPQL,FFSQP,orNLPQLP.◦Fast,spectralHamiltonianprogramming(RossandGong,2008).++ODEnumericalintegrationandashootingmethod.⊕WritteninFortran90withPythonandMATLAB/Octaveinterfacesavailable.¶InternalSQP-typemethodsaswellasinterfacetoexternalsolverqpOASES.∗∗WritteninC++withaMATLABinterfaceavailable.■WritteninFortran90withaMATLABinterfaceavailable.(cid:228)SLLSQP,SNOPT,andothers.∆Fortran77,Ada95,C,andMATLAB.?Conicoperatorsplittingmethod(basedonADMM).more diﬃcult nonlinearities that are not convexiﬁable, an emerging subject of
funnel libraries is being investigated (Majumdar and Tedrake, 2017; Reynolds
et al., 2020a; Reynolds, 2020; A¸cıkme¸se et al., 2008). The idea, akin to explicit
MPC, is to pre-compute a lookup table of trajectories and invariant controllers
in order to replace onboard optimization with a search algorithm followed by,
in some cases, numerical integration. This can result in a substantially simpler
onboard implementation at the expense of a higher storage memory footprint.

4.2.2. Machine Learning

Impressive advances in machine learning, and particularly in reinforcement
learning (RL), could not side-step space vehicle control without due considera-
tion (Tsiotras and Mesbahi, 2017). The main advantage of RL is that it is able
to optimize over a stochastic data stream rather than assuming a particular de-
scription of a dynamic model (Bu¸soniu et al., 2018; Arulkumaran et al., 2017).
As an optimization tool for nonlinear stochastic systems, it is not surprising
that the RL method is attractive for aerospace control.

Although RL for space vehicle control is less than a decade old, a certain
amount of literature is now available that addresses almost all of the applica-
tions presented in Section 3. The reader is referred to (Izzo et al., 2019) for
a dedicated survey.
In powered descent guidance, (Cheng et al., 2019a) use
deep RL (DRL) for lunar landing, (Furfaro et al., 2020) improve ZEM/ZEV
guidance via DRL, and (Gaudet and Linares, 2019) use recursive RL for Mars
landing. For spacecraft rendezvous, (Scorsoglio et al., 2019) use actor-critic RL
(ACRL) in near-rectilinear orbits, (Gaudet et al., 2018) consider cluttered envi-
ronments, and (Doerr et al., 2020; Linares and Raquepas, 2018) use inverse RL
to learn the target’s behavior. In reentry guidance, (Shi and Wang, 2020) aim
for real-time computation by training a deep neural network (DNN) to learn the
functional relationship between state-action pairs obtained from a high-ﬁdelity
optimizer. Alternatively, (Cheng et al., 2020a) use a DNN to provide a numeri-
cal predictor-corrector guidance algorithm with a range prediction based on the
current vehicle state. This method improves runtime performance by replacing
traditional propagation-based trajectory prediction with a neural network. A
diﬀerent line of work is presented in(Jin et al., 2016), where the attitude of a
reentry vehicle with model uncertainty and external disturbances is controlled
by a robust adaptive fuzzy PID-type sliding mode controller designed using a
radial basis function neural network. For small body landing, (Gaudet et al.,
2020b,a, 2019) use RL meta-learning for greater adaptability, and (Cheng et al.,
2020c) train several DNNs to approximate a nonlinear gravity ﬁeld as well as
the optimal solution obtained using an indirect method. Another interesting
approach was proposed in (Cheng et al., 2020b), where DNNs are used to sup-
ply good costate initial guesses, while an accurate trajectory is obtained by
a downstream shooting method and a homotopy process.
In orbit insertion
and transfer applications, (Cheng et al., 2019b) develop a multiscale DNN ar-
chitecture to approximate the optimal solution for a solar sail mission, (Holt
et al., 2021) use ACRL for low-thrust trajectory optimization under changing
dynamics, (LaFarge et al., 2020) use RL for libration point transfer in lunar

59

applications, and (Miller and Linares, 2019; Miller et al., 2019) use proximal
policy optimization.

A promising modern direction for spacecraft trajectory RL is to learn a
small number of “behind the scenes” parameters (called solution hyperparam-
eters) that govern the optimal solution, instead of directly learning the high-
dimensional optimal state-input map. Most importantly, the relationship be-
tween these parameters and the control policy is much more predictable, and
hence can be learned more easily and with less training data. This survey paper
makes it clear that most if not all spaceﬂight trajectory generation problems
can be formulated as a variant of the optimal control Problem 4. Hence, the
solution hyperparameters are often the maximum principle costates, or combi-
nations thereof, that completely deﬁne the optimal control policy. Among these,
we ﬁnd aforementioned concepts of a primer vector (A¸cıkme¸se and Ploen, 2007;
Lu and Pan, 2010; Lawden, 1963), and switching functions for bang–bang con-
trol (Taheri et al., 2020a). This RL approach was shown to be eﬀective for
3-DoF PDG in (You et al., 2020a,b), where the authors learned 10 hyperpa-
rameters instead of the map from a 7D state to a 3D input. Most importantly,
only ≈ 103 training trajectories were required. In comparison, the state-input
map learning approach of (S´anchez-S´anchez and Izzo, 2018) also achieved good
results, but required ≈ 107 training samples. A slightly diﬀerent approach was
taken for 3-DoF small body landing in (Cheng et al., 2020b), where homotopy
and coordinate transforms were used to learn a 5D costate vector instead of the
map from a 7D state to a 3D input. The DNN’s output was then used to pro-
vide accurate initial guesses and to improve the convergence of a downstream
shooting method. To summarize, the fact that learning hyperparameters works
better than learning the optimal state-input mapping is just an observation of
the fact that application domain knowledge can go a long way towards improv-
ing learning performance (Tabuada and Fraile, 2020). In the case of spacecraft
trajectory optimization, this knowledge often comes from applying Pontryagin’s
maximum principle.

As discussed in Section 4.2.1, performance guarantees for an RL-based con-
troller will have to be provided before serious onboard consideration. This may
be harder to achieve for RL, since controllers are typically based on neural
networks whose out-of-sample performance is still very diﬃcult to character-
ize. Nevertheless, RL and other machine learning approaches are appealing for
adaptive control systems. Future research will likely see the aerospace control
community search for the right opportunities where RL can be embedded to
improve traditional control systems.

Acknowledgments

This work is funded in part by the National Science Foundation (Grants
CMMI-1613235 and ECCS-1931744) and the Oﬃce of Naval Research (Grant
N00014-20-1-2288). The authors would like to extend their gratitude to Yuanqi
Mao for his helpful inputs on sequential convex programming algorithms, and

60

to Taylor P. Reynolds for his invaluable review of an early draft and for his
knowledge of space vehicle control at large.

References

Achterberg, T., 2007. Constrained Integer Programming. Ph.D. thesis. Tech-

nische Universit¨at Berlin. Berlin.

Achterberg, T., Wunderling, R., 2013. Mixed integer programming: Analyz-
ing 12 years of progress, in: Facets of Combinatorial Optimization. Springer
Berlin Heidelberg, pp. 449–481. doi:10.1007/978-3-642-38189-8 18.

A¸cıkme¸se, B., Aung, M., Casoliva, J., Mohan, S., Johnson, A., Scharf, D., M.,
D., S., Wolf, A., Regehr, M., 2013a. Flight testing of trajectories computed
by g-fold: Fuel optimal large divert guidance algorithm for planetary land-
ing, in: 23rd AAS/AIAA Space Flight Mechanics Meeting, Kauai, HI, 2013,
AAS/AIAA.

A¸cıkme¸se, B., Blackmore, J.C.L., Scharf, D.P., 2013b. Method and apparatus

for powered descent guidance. US Patent 8,489,260 B2.

A¸cıkme¸se, B., Blackmore, L., 2011. Lossless convexiﬁcation of a class of optimal
control problems with non-convex control constraints. Automatica 47, 341–
347. doi:10.1016/j.automatica.2010.10.037.

A¸cıkme¸se, B., Carson III, J.M., Blackmore, L., 2013c. Lossless convexiﬁcation of
nonconvex control bound and pointing constraints of the soft landing optimal
control problem. IEEE Transactions on Control Systems Technology 21, 2104–
2113. doi:10.1109/tcst.2012.2237346.

A¸cıkme¸se, B., Casoliva, J., Carson III, J.M., Blackmore, L., 2012. G-FOLD:
A Real-Time Implementable Fuel Optimal Large Divert Guidance Algorithm
for Planetary Pinpoint Landing, in: Concepts and Approaches for Mars Ex-
ploration, p. 4193.

A¸cıkme¸se, B., Ploen, S., 2005. A powered descent guidance algorithm for
Mars pinpoint landing, in: AIAA Guidance, Navigation, and Control Con-
ference and Exhibit, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2005-6288.

A¸cıkme¸se, B., Ploen, S.R., 2007. Convex programming approach to powered de-
scent guidance for Mars landing. Journal of Guidance, Control, and Dynamics
30, 1353–1366. doi:10.2514/1.27553.

A¸cıkme¸se, B., Scharf, D., Blackmore, L., Wolf, A., 2008. Enhancements on
the convex programming based powered descent guidance algorithm for Mars
landing, in: AIAA/AAS Astrodynamics Specialist Conference and Exhibit,
American Institute of Aeronautics and Astronautics. doi:10.2514/6.2008-
6426.

61

Adkins, C.N., 1970. Optimization of multistage rockets including drag. Journal

of Spacecraft and Rockets 7, 751–755. doi:10.2514/3.30032.

Agamawi, Y.M., Rao, A.V., 2020. Comparison of derivative estimation meth-
ods in optimal control using direct collocation. AIAA Journal 58, 341–354.
doi:10.2514/1.j058514.

Alessio, A., Bemporad, A., 2009. A survey on explicit model predictive control,
in: Nonlinear Model Predictive Control. Springer Berlin Heidelberg, pp. 345–
369. doi:10.1007/978-3-642-01094-1 29.

Alfano, S., Thorne, J.D., 1994. Circle-to-circle constant-thrust orbit raising.

Journal of the Astronautical Sciences 42, 35–45.

Andersson, J.A.E., Gillis, J., Horn, G., Rawlings, J.B., Diehl, M., 2019. CasADi
– A software framework for nonlinear optimization and optimal control. Math-
ematical Programming Computation 11, 1–36. doi:10.1007/s12532-018-0139-
4.

Antsaklis, P.J., Michel, A.N., 2006.

Linear Systems. Birkhauser Basel.

doi:10.1007/0-8176-4435-0.

Aoyama, Y., Boutselis, G., Patel, A., Theodorou, E.A., 2020. Constrained

diﬀerential dynamic programming revisited. arXiv:2005.00985.

Ariba, Y., Arzelier, D., Urbina-Iglesias, L.S., 2018. Minimum-fuel ﬁxed-time
impulsive elliptic glide-slope guidance algorithms using semideﬁnite pro-
gramming. Journal of Guidance, Control, and Dynamics 41, 1873–1887.
doi:10.2514/1.g003395.

Armellin, R., 2021.

Collision avoidance maneuver optimization with a
multiple-impulse convex formulation. Acta Astronautica 186, 347–362.
doi:10.1016/j.actaastro.2021.05.046.

Arrieta-Camacho, J.J., Biegler, L.T., 2005. Real time optimal guidance
of
low-thrust spacecraft: An application of nonlinear model predictive
control. Annals of the New York Academy of Sciences 1065, 174–188.
doi:10.1196/annals.1370.001.

Arulkumaran, K., Deisenroth, M.P., Brundage, M., Bharath, A.A., 2017. Deep
reinforcement learning: A brief survey. IEEE Signal Processing Magazine 34,
26–38. doi:10.1109/msp.2017.2743240.

Arya, V., Taheri, E., Junkins, J.L., 2020. A composite framework for co-
optimization of spacecraft trajectory and propulsion system. Acta Astro-
nautica 178, 773–782. doi:10.1016/j.actaastro.2020.10.007.

Arzelier, D., Kara-Zaitri, M., Louembet, C., Delibasi, A., 2011. Using poly-
nomial optimization to solve the fuel-optimal linear impulsive rendezvous
problem.
Journal of Guidance, Control, and Dynamics 34, 1567–1576.
doi:10.2514/1.52227.

62

Arzelier, D., Louembet, C., Rondepierre, A., Kara-Zaitri, M., 2013. A new
mixed iterative algorithm to solve the fuel-optimal linear impulsive rendezvous
problem. Journal of Optimization Theory and Applications 159, 210–230.
doi:10.1007/s10957-013-0282-z.

Augugliaro, F., Schoellig, A.P., D'Andrea, R., 2012. Generation of collision-
free trajectories for a quadrocopter ﬂeet: A sequential convex programming
approach, in: 2012 IEEE/RSJ International Conference on Intelligent Robots
and Systems, IEEE. doi:10.1109/iros.2012.6385823.

Bai, C., Guo, J., Zheng, H., 2019. Optimal guidance for planetary landing in
hazardous terrains. IEEE Transactions on Aerospace and Electronic Systems
, 1–1doi:10.1109/taes.2019.2955785.

Baldwin, M., Erwin, R.S., Kolmanovsky, I., 2013. Robust controller for con-
strained relative motion maneuvering with disturbance rejection, in: AIAA
Guidance, Navigation, and Control (GNC) Conference, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2013-4721.

Becerra, V.M., 2010. Solving complex optimal control problems at no cost
with PSOPT, in: 2010 IEEE International Symposium on Computer-Aided
Control System Design, IEEE. doi:10.1109/cacsd.2010.5612676.

Bemporad, A., Morari, M., 1999. Control of systems integrating logic, dynamics,
and constraints. Automatica 35, 407–427. doi:10.1016/s0005-1098(98)00178-
2.

Bemporad, A., Morari, M., 2007. Robust model predictive control: A survey,
in: Robustness in identiﬁcation and control. Springer London, pp. 207–226.
doi:10.1007/bfb0109870.

Bemporad, A., Morari, M., Dua, V., Pistikopoulos, E.N., 2002. The explicit
linear quadratic regulator for constrained systems. Automatica 38, 3–20.
doi:10.1016/s0005-1098(01)00174-1.

Benedikter, B., Zavoli, A., Colasurdo, G., 2019a. A convex approach to rocket
ascent trajectory optimization, in: Proceedings of the 8th European Confer-
ence for Aeronautics and Space Sciences. doi:10.13009/EUCASS2019-430.

Benedikter, B., Zavoli, A., Colasurdo, G., 2019b. A convex optimiza-
tion approach for ﬁnite-thrust time-constrained cooperative rendezvous.
arXiv:1909.09443.

Benedikter, B., Zavoli, A., Colasurdo, G., Pizzurro, S., Cavallini, E., 2020.
Convex optimization of launch vehicle ascent trajectory with heat-ﬂux and
splash-down constraints. arXiv:2008.13239.

Berkovitz, L.D., 1974. Optimal Control Theory.

Springer New York.

doi:10.1007/978-1-4757-6097-2.

63

Berrut, J.P., Trefethen, L.N., 2004. Barycentric lagrange interpolation. SIAM

Review 46, 501–517. doi:10.1137/s0036144502417715.

Berry, K., Sutter, B., May, A., Williams, K., Barbee, B.W., Beckman, M.,
Williams, B., 2013. OSIRIS-REx touch-and-go (TAG) mission design and
analysis. Advances in the Astronautical Sciences , 667–678.

Betts, J.T., 1998. Survey of numerical methods for trajectory optimization.
Journal of Guidance, Control, and Dynamics 21, 193–207. doi:10.2514/2.4231.

Betts, J.T., 2000. Very low-thrust trajectory optimization using a direct SQP
method. Journal of Computational and Applied Mathematics 120, 27–40.
doi:10.1016/s0377-0427(00)00301-0.

Betts, J.T., 2010. Practical Methods for Optimal Control and Estimation Using
Nonlinear Programming. Society for Industrial and Applied Mathematics.
doi:10.1137/1.9780898718577.

Betts, J.T., Erb, S.O., 2003.

low thrust trajectories to the
SIAM Journal on Applied Dynamical Systems 2, 144–170.

Optimal

Moon.
doi:10.1137/s1111111102409080.

Blackmore, L., 2016. Autonomous precision landing of space rockets. The Bridge

4, 15–20.

Blackmore, L., A¸cıkme¸se, B., Carson III, J.M., 2012. Lossless convexiﬁcation of
control constraints for a class of nonlinear optimal control problems. Systems
& Control Letters 61, 863–870. doi:10.1016/j.sysconle.2012.04.010.

Blackmore, L., A¸cikme¸se, B., Scharf, D.P., 2010. Minimum-landing-error
powered-descent guidance for Mars landing using convex optimization. Jour-
nal of Guidance, Control, and Dynamics 33, 1161–1171. doi:10.2514/1.47202.

Bonalli, R., Cauligi, A., Bylard, A., Pavone, M., 2019. GuSTO: Guaranteed
sequential trajectory optimization via sequential convex programming, in:
2019 International Conference on Robotics and Automation (ICRA), IEEE.
doi:10.1109/icra.2019.8794205.

Bonalli, R., H´eriss´e, B., Tr´elat, E., 2017.

initialization
of a continuation-based indirect method for optimal control of endo-
atmospheric launch vehicle systems.
IFAC-PapersOnLine 50, 482–487.
doi:10.1016/j.ifacol.2017.08.095.

Analytical

Bonalli, R., Lew, T., Pavone, M., 2021. Analysis of theoretical and nu-
merical properties of sequential convex programming for continuous-time
IEEE Transactions on Automatic Control (in review) ,
optimal control.
https://arxiv.org/abs/2009.05038.

de Boor, C., Swartz, B., 1973. Collocation at gaussian points. SIAM Journal

on Numerical Analysis 10, 582–606. doi:10.1137/0710052.

64

Borrelli, F., Bemporad, A., Morari, M., 2017. Predictive Control for Linear and
Hybrid Systems. Cambridge University Press. doi:10.1017/9781139061759.

Boyd, J.P., 1989. Chebyshev and Fourier Spectral Methods. 2 ed., Springer-

Verlag.

Boyd, S., Ghaoui, L.E., Feron, E., Balakrishnan, V., 1994. Linear Matrix In-
equalities in System and Control Theory. Society for Industrial and Applied
Mathematics. doi:10.1137/1.9781611970777.

Boyd, S., Vandenberghe, L., 2004. Convex Optimization. Cambridge University

Press, Cambridge, UK.

Braun, R., Manning, R.,
and landing challenges,
doi:10.1109/aero.2006.1655790.

in:

2006.

2006 IEEE Aerospace Conference,

exploration entry, descent
IEEE.

Mars

Breger, L., How, J.P., 2008. Safe trajectories for autonomous rendezvous of
spacecraft. Journal of Guidance, Control, and Dynamics 31, 1478–1489.
doi:10.2514/1.29590.

Brown, K., Johnson, G., 1967. Real-time optimal guidance. IEEE Transactions

on Automatic Control 12, 501–506. doi:10.1109/tac.1967.1098718.

Bryson Jr., A.E., Ho, Y.C., 1975. Applied Optimal Control. Hemisphere Pub-

lishing Corporation, Washington, D.C.

Bu¸soniu, L., de Bruin, T., Toli´c, D., Kober, J., Palunko, I., 2018. Reinforcement
learning for control: Performance, stability, and deep approximators. Annual
Reviews in Control 46, 8–28. doi:10.1016/j.arcontrol.2018.09.005.

Butcher, J.C., 2016. Numerical Methods for Ordinary Diﬀerential Equations.

John Wiley & Sons, Ltd. doi:10.1002/9781119121534.

Caillau, J.B., Cots, O., Gergaud, J., 2012a. Diﬀerential continuation for regular
optimal control problems. Optimization Methods and Software 27, 177–196.
doi:10.1080/10556788.2011.593625.

Caillau, J.B., Daoud, B., Gergaud, J., 2012b. Minimum fuel control of the planar
circular restricted three-body problem. Celestial Mechanics and Dynamical
Astronomy 114, 137–150. doi:10.1007/s10569-012-9443-x.

Calise, A.J., Brandt, N., 2004. Generation of launch vehicle abort trajecto-
ries using a hybrid optimization method. Journal of Guidance, Control, and
Dynamics 27, 929–929. doi:10.2514/1.7989.

Calise, A.J., Melamed, N., Lee, S., 1998. Design and evaluation of a three-
dimensional optimal ascent guidance algorithm. Journal of Guidance, Control,
and Dynamics 21, 867–875. doi:10.2514/2.4350.

65

Carson III, J., A¸cıkme¸se, B., 2006. A model-predictive control technique with
guaranteed resolvability and required thruster silent times for small-body
proximity operations, in: AIAA Guidance, Navigation, and Control Con-
ference and Exhibit, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2006-6780.

Carson III, J., A¸cıkme¸se, B., Murray, R., MacMynowski, D., 2008. Robust model
predictive control with a safety mode: Applied to small-body proximity oper-
ations, in: AIAA Guidance, Navigation and Control Conference and Exhibit,
American Institute of Aeronautics and Astronautics. doi:10.2514/6.2008-
7243.

Carson III, J.M., A¸cıkme¸se, B., Blackmore, L., 2011a. Lossless convexiﬁcation of
powered-descent guidance with non-convex thrust bound and pointing con-
straints, in: Proceedings of the 2011 American Control Conference, IEEE.
doi:10.1109/acc.2011.5990959.

Carson III, J.M., A¸cıkme¸se, B., Blackmore, L., Wolf, A.A., 2011b.
for pin-
IEEE.

Capabilities of convex powered-descent guidance algorithms
point and precision landing,
doi:10.1109/aero.2011.5747244.

2011 Aerospace Conference,

in:

Carson III, J.M., Munk, M.M., Sostaric, R.R., Estes, J.N., Amzajerdian, F.,
Blair, J.B., Rutishauser, D.K., Restrepo, C.I., Dwyer-Cianciolo, A.M., Chen,
G., Tse, T., 2019. The SPLICE project: Continuing NASA development of
GN&c technologies for safe and precise landing, in: AIAA Scitech 2019 Forum,
American Institute of Aeronautics and Astronautics. doi:10.2514/6.2019-
0660.

Cerf, M., 2016. Low-thrust transfer between circular orbits using natural
precession. Journal of Guidance, Control, and Dynamics 39, 2232–2239.
doi:10.2514/1.g001331.

Cerf, M., Haberkorn, T., Tr´elat, E., 2011. Continuation from a ﬂat to a round
earth model in the coplanar orbit transfer problem. Optimal Control Appli-
cations and Methods 33, 654–675. doi:10.1002/oca.1016.

Cesari, L., 1983. Optimization – Theory and Applications. Springer-Verlag New

York.

Chandler, D.C., Smith, I.E., 1967. Development of the iterative guidance mode
with its application to various vehicles and missions. Journal of Spacecraft
and Rockets 4, 898–903. doi:10.2514/3.28985.

Chawla, C., Sarmah, P., Padhi, R., 2010. Suboptimal reentry guidance of a
reusable launch vehicle using pitch plane maneuver. Aerospace Science and
Technology 14, 377–386. doi:10.1016/j.ast.2010.04.001.

66

Chen, G., Cai, P., Wang, Y., Zhang, L., Liang, J., 2019. Trajectory optimization
for asteroid landing considering gravitational orbit-attitude coupling. IEEE
Access 7, 126464–126478. doi:10.1109/access.2019.2938821.

Cheng, L., Jiang, F., Wang, Z., Li, J., 2020a. Multi-constrained real-time entry
guidance using deep neural networks. IEEE Transactions on Aerospace and
Electronic Systems doi:10.1109/taes.2020.3015321.

Cheng, L., Wang, Z., Jiang, F., 2019a. Real-time control for fuel-optimal Moon
landing based on an interactive deep reinforcement learning algorithm. As-
trodynamics 3, 375–386. doi:10.1007/s42064-018-0052-2.

Cheng, L., Wang, Z., Jiang, F., Li, J.,

Fast generation
of optimal asteroid landing trajectories using deep neural networks.
IEEE Transactions on Aerospace and Electronic Systems 56, 2642–2655.
doi:10.1109/taes.2019.2952700.

2020b.

Cheng, L., Wang, Z., Jiang, F., Zhou, C., 2019b.

Real-time optimal
control for spacecraft orbit transfer via multiscale deep neural networks.
IEEE Transactions on Aerospace and Electronic Systems 55, 2436–2450.
doi:10.1109/taes.2018.2889571.

Cheng, L., Wang, Z., Song, Y., Jiang, F., 2020c. Real-time optimal control for
irregular asteroid landings using deep neural networks. Acta Astronautica
170, 66–79. doi:10.1016/j.actaastro.2019.11.039.

Cheng, L., Wen, H., Jin, D., 2019c. Uncertain parameters analysis of powered-
descent guidance based on chebyshev interval method. Acta Astronautica
162, 581–588. doi:10.1016/j.actaastro.2019.05.040.

Cheng, X., Li, H., Zhang, R., 2017. Eﬃcient ascent trajectory optimization using
convex models based on the newton-kantorovich/pseudospectral approach.
Aerospace Science and Technology 66, 140–151. doi:10.1016/j.ast.2017.02.023.

Cherry, G., 1964. A general, explicit, optimizing guidance law for rocket-
propelled spaceﬂight, in: Astrodynamics Guidance and Control Conference,
American Institute of Aeronautics and Astronautics. doi:10.2514/6.1964-638.

Clohessy, W.H., Wiltshire, R.S., 1960.

Terminal guidance system for
Journal of the Aerospace Sciences 27, 653–658.

satellite rendezvous.
doi:10.2514/8.8704.

Colombo, C., Vasile, M., Radice, G., 2009. Optimal low-thrust trajectories to as-
teroids through an algorithm based on diﬀerential dynamic programming. Ce-
lestial Mechanics and Dynamical Astronomy 105, 75–112. doi:10.1007/s10569-
009-9224-3.

Conn, A.R., Gould, N.I.M., Toint, P.L., 2000. Trust Region Methods. Society

for Industrial and Applied Mathematics. doi:10.1137/1.9780898719857.

67

Conway, B.A., 2011. A survey of methods available for the numerical optimiza-
tion of continuous dynamic systems. Journal of Optimization Theory and
Applications 152, 271–306. doi:10.1007/s10957-011-9918-z.

Conway, B.A., 2014. Spacecraft Trajectory Optimization. Cambridge University

Press, Cambridge, UK.

Cook, W.J., Cunningham, W.H., Pulleyblank, W.R., Schrijver, A., 1998. Com-

binatorial Optimization. Wiley, Hoboken, NJ.

Cottle, R.W., Pang, J.S., Stone, R.E., 2009.

The Linear Comple-
Society for Industrial and Applied Mathematics.

mentarity Problem.
doi:10.1137/1.9780898719000.

Crane, L., 2019. The ﬁnal frontier. New Scientist 241, 20–22. doi:10.1016/s0262-

4079(19)30327-6.

Cui, P., Liu, Y., Yu, Z., Zhu, S., Shao, W., 2017. Intelligent landing strategy
for the small bodies: from passive bounce to active trajectory control. Acta
Astronautica 137, 232–242. doi:10.1016/j.actaastro.2017.04.033.

Cui, P.Y., Gao, A., Cui, H.T., 2012. Receding horizon-based dual control strat-
egy for pinpoint planetary landing. Transactions of the Japan Society for
Aeronautical and Space Sciences 55, 222–228. doi:10.2322/tjsass.55.222.

Darby, C.L., Hager, W.W., Rao, A.V., 2010. An hp-adaptive pseudospectral
method for solving optimal control problems. Optimal Control Applications
and Methods 32, 476–502. doi:10.1002/oca.957.

de Ruiter, A.H.J., Damaren, C.J., Forbes, J.R., 2013. Spacecraft Dynamics and

Control: An Introduction. Wiley.

Deaconu, G., Louembet, C., Th´eron, A., 2015. Designing continuously con-
strained spacecraft relative trajectories for proximity operations. Journal of
Guidance, Control, and Dynamics 38, 1208–1217. doi:10.2514/1.g000283.

Detra, R.W., Kemp, N.H., Riddell, F.R., 1957. Addendum to “heat transfer to
satellite vehicles re-entering the atmosphere”. Jet Propulsion 27, 1256–1257.
doi:10.2514/8.12520.

Di Cairano, S., Kolmanovsky, I.V., 2018. Real-time optimization and model
predictive control for aerospace and automotive applications, in: 2018 Annual
American Control Conference (ACC), IEEE. doi:10.23919/acc.2018.8431585.

Di Cairano, S., Park, H., Kolmanovsky, I., 2012. Model predictive control
approach for guidance of spacecraft rendezvous and proximity maneuver-
ing. International Journal of Robust and Nonlinear Control 22, 1398–1427.
doi:10.1002/rnc.2827.

68

Doerr, B.G., Linares, R., Furfaro, R., 2020. Space objects maneuvering predic-
tion via maximum causal entropy inverse reinforcement learning, in: AIAA
Scitech 2020 Forum, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2020-0235.

Domahidi, A., Chu, E., Boyd, S., 2013. ECOS: An SOCP solver for embedded
systems, in: 2013 European Control Conference (ECC), IEEE. pp. 3071–3076.
doi:10.23919/ecc.2013.6669541.

Dong, H., Hu, Q., Akella, M.R., 2017. Safety control for spacecraft autonomous
rendezvous and docking under motion constraints. Journal of Guidance, Con-
trol, and Dynamics 40, 1680–1692. doi:10.2514/1.g002322.

Dong, K., Luo, J., Dang, Z., Wei, L., 2020. Tube-based robust output
feedback model predictive control for autonomous rendezvous and dock-
ing with a tumbling target. Advances in Space Research 65, 1158–1181.
doi:10.1016/j.asr.2019.11.014.

Downes, R., Rose, S., 2001. Hubble Space Telescope Primer for Cycle 11.

Technical Report. Goddard Space Flight Center. Greenbelt, MD.

D'Souza, C., 1997. An optimal guidance law for planetary landing, in: Guidance,
Navigation, and Control Conference, American Institute of Aeronautics and
Astronautics. doi:10.2514/6.1997-3709.

D'Souza, C., Hannak, C., Spehar, P., Clark, F., Jackson, M., 2007. Orion ren-
dezvous, proximity operations and docking design and analysis, in: AIAA
Guidance, Navigation and Control Conference and Exhibit, American Insti-
tute of Aeronautics and Astronautics. doi:10.2514/6.2007-6683.

D’Souza,

S.N.,

Sarigul-Klijn, N.,

try guidance algorithms.
doi:10.1016/j.paerosci.2014.01.002.

2014.

Survey of planetary en-
Progress in Aerospace Sciences 68, 64–74.

Dueri, D., A¸cıkme¸se, B., Scharf, D.P., Harris, M.W., 2017. Customized real-
time interior-point methods for onboard powered-descent guidance. Journal
of Guidance, Control, and Dynamics 40, 197–212. doi:10.2514/1.g001480.

Dueri, D., Rakovi´c, S.V., A¸cıkme¸se, B., 2016. Consistently improving approx-
imations for constrained controllability and reachability, in: 2016 European
Control Conference (ECC), IEEE. doi:10.1109/ecc.2016.7810523.

Dueri, D., Zhang, J., A¸cıkme¸se, B., 2014. Automated custom code generation
for embedded, real-time second order cone programming. IFAC Proceedings
Volumes 47, 1605–1612. doi:10.3182/20140824-6-za-1003.02736.

Dueri, D.A., 2018. Real-time Optimization in Aerospace Systems. Ph.D. thesis.

University of Washington. Seattle.

69

Dunham, W., Petersen, C., Kolmanovsky, I., 2016. Constrained control for soft
landing on an asteroid with gravity model uncertainty, in: 2016 American
Control Conference (ACC), IEEE. doi:10.1109/acc.2016.7526585.

Dunning,

I., Huchette, J., Lubin, M., 2017.

guage for mathematical optimization.
doi:10.1137/15M1020575.

JuMP: A modeling lan-
SIAM Review 59, 295–320.

Dwyer-Cianciolo, A.M., Karlgaard, C.D., Woﬃnden, D., Lugo, R.A., Tynis, J.,
Sostaric, R.R., Striepe, S., Powell, R., Carson III, J.M., 2019. Deﬁning navi-
gation requirements for future missions, in: AIAA Scitech 2019 Forum, Amer-
ican Institute of Aeronautics and Astronautics. doi:10.2514/6.2019-0661.

Englander, J.A., 2020. Evolutionary mission trajectory generator (EMTG).

https://github.com/JacobEnglander/EMTG.

Englander, J.A., Conway, B.A., Williams, T., 2012. Automated mission plan-
ning via evolutionary algorithms. Journal of Guidance, Control, and Dynam-
ics 35, 1878–1887. doi:10.2514/1.54101.

Eren, U., A¸cıkme¸se, B., Scharf, D.P., 2015a. A mixed integer convex program-
ming approach to constrained attitude guidance, in: 2015 European Control
Conference (ECC), IEEE. doi:10.1109/ecc.2015.7330690.

Eren, U., Dueri, D., A¸cıkme¸se, B., 2015b. Constrained reachability and control-
lability sets for planetary precision landing via convex optimization. Journal
of Guidance, Control, and Dynamics 38, 2067–2083. doi:10.2514/1.g000882.

Eren, U., Prach, A., Ko¸cer, B.B., Rakovi´c, S.V., Kayacan, E., A¸cıkme¸se, B.,
2017. Model predictive control in aerospace systems: Current state and op-
portunities. Journal of Guidance, Control, and Dynamics 40, 1541–1566.
doi:10.2514/1.g002507.

Europa Study Team, 2012. Europa Study 2012 Report: Europa Lander Mission.
Technical Report Task Order NMO711062 Outer Planets Flagship Mission.
Jet Propulsion Laboratory.

Fahroo, F., Doman, D., Ngo, A., 2003a. Footprint generation for reusable launch
vehicles using a direct pseudospectral method, in: Proceedings of the 2003
American Control Conference, IEEE. doi:10.1109/acc.2003.1243394.

Fahroo, F., Doman, D., Ngo, A., 2003b. Modeling issues in footprint generation
for reusable vehicles, in: 2003 IEEE Aerospace Conference Proceedings (Cat.
No.03TH8652), IEEE. doi:10.1109/aero.2003.1235205.

Fahroo, F., Ross, I.M., 2002. Direct trajectory optimization by a chebyshev
pseudospectral method. Journal of Guidance, Control, and Dynamics 25,
160–166. doi:10.2514/2.4862.

70

Fares, B., Noll, D., Apkarian, P., 2002. Robust control via sequential semidef-
inite programming. SIAM Journal on Control and Optimization 40, 1791–
1820. doi:10.1137/s0363012900373483.

Faulders, C.R., 1958. Low-thrust rocket steering program for minimum time
transfer between planetary orbits, in: SAE Technical Paper Series, SAE In-
ternational. doi:10.4271/580376.

Fehse, W., 2003. Automated Rendezvous and Docking of Spacecraft. Cambridge

University Press. doi:10.1017/cbo9780511543388.

Fernandes, S.D.S., 1995. Optimum low-thrust limited power transfers between
neighbouring elliptic non-equatorial orbits in a non-central gravity ﬁeld. Acta
Astronautica 35, 763–770. doi:10.1016/0094-5765(95)00002-h.

Floudas, C.A., Pardalos, P.M., 2009. Encyclopedia of Optimization. 2 ed.,

Springer.

Forsgren, A., Gill, P.E., Wright, M.H., 2002.

Interior methods for nonlinear

optimization. SIAM Review 44, 525–597. doi:10.1137/s0036144502414942.

Fourer, R., Gay, D.M., Kernighan, B.W., 1990.

A modeling lan-
guage for mathematical programming. Management Science 36, 519–554.
doi:10.1287/mnsc.36.5.519.

Fran¸colin, C.C., Benson, D.A., Hager, W.W., Rao, A.V., 2014. Costate ap-
proximation in optimal control using integral gaussian quadrature orthogonal
collocation methods. Optimal Control Applications and Methods 36, 381–397.
doi:10.1002/oca.2112.

Frey, G.R., Petersen, C.D., Leve, F.A., Kolmanovsky, I.V., Girard, A.R., 2017.
Constrained spacecraft relative motion planning exploiting periodic natural
motion trajectories and invariance. Journal of Guidance, Control, and Dy-
namics 40, 3100–3115. doi:10.2514/1.g002914.

Furfaro, R., Scorsoglio, A., Linares, R., Massari, M., 2020.

Adap-
tive generalized ZEM-ZEV feedback guidance for planetary landing via a
deep reinforcement learning approach. Acta Astronautica 171, 156–171.
doi:10.1016/j.actaastro.2020.02.051.

Furfaro, R., Selnick, S., Cupples, M.L., Cribb, M.W., 2011. Non-linear sliding
guidance algorithms for precision lunar landing, in: 21st AAS/AIAA Space
Flight Mechanics Meeting, pp. 945–964. AAS Paper 09-334.

Ganet-Schoeller, M., Brunel, A., 2019. Optimal guidance for 1st stage launcher
recovery. IFAC-PapersOnLine 52, 532–537. doi:10.1016/j.ifacol.2019.11.298.

Garc´ıa, C.E., Prett, D.M., Morari, M., 1989. Model predictive control: The-
ory and practice—a survey. Automatica 25, 335–348. doi:10.1016/0005-
1098(89)90002-2.

71

Garcia-Sanz, M., 2019. Control co-design: An engineering game changer. Ad-
vanced Control for Applications: Engineering and Industrial Systems 1, e18.
doi:10.1002/adc2.18.

Garg, D., Patterson, M., Hager, W.W., Rao, A.V., Benson, D.A., Hunting-
ton, G.T., 2010. A uniﬁed framework for the numerical solution of optimal
control problems using pseudospectral methods. Automatica 46, 1843–1851.
doi:10.1016/j.automatica.2010.06.048.

Garrett, L.B., Pitts, J.I., 1970. A general transient heat-transfer computer
program for thermally thick walls. Technical Report NASA-TM-X-2058, L-
6850. NASA Langley Research Center Hampton, VA.

Garstka, M., Cannon, M., Goulart, P.,

COSMO: A conic
Euro-
large
operator
in:
pean Control Conference. URL: https://arxiv.org/abs/1901.10887,
doi:10.23919/ECC.2019.8796161, arXiv:1901.10887.

splitting method for

convex problems,

2019.

Gath, P.F., Calise, A.J., 2001. Optimization of launch vehicle ascent trajectories
with path constraints and coast arcs. Journal of Guidance, Control, and
Dynamics 24, 296–304. doi:10.2514/2.4712.

Gaudet, B., Linares, R., 2019. Adaptive guidance with reinforcement meta-

learning. arXiv:1901.04473.

Gaudet, B., Linares, R., Furfaro, R., 2018. Spacecraft rendezvous guidance
in cluttered environments via artiﬁcial potential functions and reinforcement
learning, in: AAS/AIAA Astrodynamics Specialist Conference.

Gaudet, B., Linares, R., Furfaro, R., 2019. Seeker based adaptive guidance via
reinforcement meta-learning applied to asteroid close proximity operations.
arXiv:1907.06098.

Gaudet, B., Linares, R., Furfaro, R., 2020a.

Six degree-of-freedom
body-ﬁxed hovering over unmapped asteroids via LIDAR altimetry
and reinforcement meta-learning.
90–99.
doi:10.1016/j.actaastro.2020.03.026.

Acta Astronautica 172,

Gaudet, B., Linares, R., Furfaro, R.,

Terminal adaptive
guidance via reinforcement meta-learning: Applications to autonomous
asteroid close-proximity operations.
1–13.
doi:10.1016/j.actaastro.2020.02.036.

Acta Astronautica 171,

2020b.

Gavilan, F., Vazquez, R., Camacho, E.F., 2012. Chance-constrained model pre-
dictive control for spacecraft rendezvous with disturbance estimation. Control
Engineering Practice 20, 111–122. doi:10.1016/j.conengprac.2011.09.006.

Gil-Fernandez, J., Gomez-Tierno, M.A., 2010. Practical method for optimiza-
tion of low-thrust transfers. Journal of Guidance, Control, and Dynamics 33,
1927–1931. doi:10.2514/1.50739.

72

Gill, P.E., Murray, W., Saunders, M.A., 2005.

SNOPT: An SQP algo-
rithm for large-scale constrained optimization. SIAM Review 47, 99–131.
doi:10.1137/s0036144504446096.

Gill, P.E., Wong, E., 2011. Sequential quadratic programming methods, in:
Mixed Integer Nonlinear Programming. Springer New York, pp. 147–224.
doi:10.1007/978-1-4614-1927-3 6.

Gilz, P.R.A., Joldes, M., Louembet, C., Camps, F., 2019. Stable model pre-
dictive strategy for rendezvous hovering phases allowing for control sat-
uration.
Journal of Guidance, Control, and Dynamics 42, 1658–1675.
doi:10.2514/1.g003558.

Gong, Q., Fahroo, F., Ross, I.M., 2008. Spectral algorithm for pseudospectral
methods in optimal control. Journal of Guidance, Control, and Dynamics 31,
460–471. URL: https://doi.org/10.2514/1.32908, doi:10.2514/1.32908.

Gong, Q., Ross, I.M., Fahroo, F., 2010. Costate computation by a chebyshev
pseudospectral method. Journal of Guidance, Control, and Dynamics 33,
623–628. doi:10.2514/1.45154.

Gong, Q., Ross, I.M., Kang, W., Fahroo, F., 2007. Connections between the
covector mapping theorem and convergence of pseudospectral methods for
optimal control. Computational Optimization and Applications 41, 307–335.
doi:10.1007/s10589-007-9102-4.

Goodman, J.L., 2006. History of space shuttle rendezvous and proximity oper-
ations. Journal of Spacecraft and Rockets 43, 944–959. doi:10.2514/1.19653.

Goodyear, A., Petersen, C., Pierre, J., Zagaris, C., Baldwin, M., Kolmanovsky,
I., 2015. Hardware implementation of model predictive control for relative
motion maneuvering, in: 2015 American Control Conference (ACC), IEEE.
doi:10.1109/acc.2015.7171077.

Graham, K.F., Rao, A.V., 2015. Minimum-time trajectory optimization of mul-
tiple revolution low-thrust earth-orbit transfers. Journal of Spacecraft and
Rockets 52, 711–727. doi:10.2514/1.a33187.

Graham, K.F., Rao, A.V., 2016. Minimum-time trajectory optimization of low-
thrust earth-orbit transfers with eclipsing. Journal of Spacecraft and Rockets
53, 289–303. doi:10.2514/1.a33416.

Grant, M., Boyd, S., 2008. Graph implementations for nonsmooth convex pro-
grams, in: Blondel, V., Boyd, S., Kimura, H. (Eds.), Recent Advances in
Learning and Control. Springer-Verlag Limited. Lecture Notes in Control and
Information Sciences, pp. 95–110. doi:10.1007/978-1-84800-155-8 7.

Guo, Y., Hawkins, M., Wie, B., 2013. Waypoint-optimized zero-eﬀort-miss/zero-
eﬀort-velocity feedback guidance for Mars landing. Journal of Guidance, Con-
trol, and Dynamics 36, 799–809. doi:10.2514/1.58098.

73

Haberkorn, T., Martinon, P., Gergaud, J., 2004. Low thrust minimum-fuel
orbital transfer: A homotopic approach. Journal of Guidance, Control, and
Dynamics 27, 1046–1060. doi:10.2514/1.4022.

Haeussermann, W., 1970. Description and performance of the Saturn launch ve-
hicle's navigation, guidance, and control system. IFAC Proceedings Volumes
3, 275–312. doi:10.1016/s1474-6670(17)68785-8.

Halbe, O., Mathavaraj, S., Padhi, R., 2010. Energy based suboptimal reentry
guidance of a reusable launch vehicle using model predictive static program-
ming, in: AIAA Guidance, Navigation, and Control Conference, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2010-8311.

Halbe, O., Raja, R.G., Padhi, R., 2014. Robust reentry guidance of a reusable
launch vehicle using model predictive static programming. Journal of Guid-
ance, Control, and Dynamics 37, 134–148. doi:10.2514/1.61615.

Han, H., Qiao, D., Chen, H., Li, X., 2019. Rapid planning for aerocapture
trajectory via convex optimization. Aerospace Science and Technology 84,
763–775. doi:10.1016/j.ast.2018.11.009.

Hanson, J., Shrader, M., Cruzen, C., 1994. Ascent guidance comparisons, in:
Guidance, Navigation, and Control Conference, American Institute of Aero-
nautics and Astronautics. doi:10.2514/6.1994-3568.

Harris, M.W., 2021. Optimal control on disconnected sets using extreme point
relaxations and normality approximations. IEEE Transactions on Automatic
Control , 1–8doi:10.1109/tac.2021.3059682.

Harris, M.W., A¸cıkme¸se, B., 2013a. Lossless convexiﬁcation for a class of optimal
control problems with linear state constraints, in: 52nd IEEE Conference on
Decision and Control, IEEE. doi:10.1109/cdc.2013.6761017.

Harris, M.W., A¸cıkme¸se, B., 2013b. Lossless convexiﬁcation for a class of op-
timal control problems with quadratic state constraints, in: 2013 American
Control Conference, IEEE. doi:10.1109/acc.2013.6580359.

Harris, M.W., A¸cıkme¸se, B., 2013c. Maximum divert for planetary landing using
convex optimization. Journal of Optimization Theory and Applications 162,
975–995. doi:10.1007/s10957-013-0501-7.

Harris, M.W., A¸cıkme¸se, B., 2014. Lossless convexiﬁcation of non-convex op-
timal control problems for state constrained linear systems. Automatica 50,
2304–2311. doi:10.1016/j.automatica.2014.06.008.

Hartl, R.F., Sethi, S.P., Vickson, R.G., 1995. A survey of the maximum prin-
ciples for optimal control problems with state constraints. SIAM Review 37,
181–218. doi:10.1137/1037043.

74

Hartley, E.N., 2015. A tutorial on model predictive control

for space-
in: 2015 European Control Conference (ECC), IEEE.

craft rendezvous,
doi:10.1109/ecc.2015.7330727.

Hartley, E.N., Gallieri, M., Maciejowski, J.M., 2013. Terminal spacecraft ren-
International

dezvous and capture with LASSO model predictive control.
Journal of Control 86, 2104–2113. doi:10.1080/00207179.2013.789608.

Hartley, E.N., Maciejowski, J.M., 2014. Field programmable gate array based
predictive control system for spacecraft rendezvous in elliptical orbits. Opti-
mal Control Applications and Methods 36, 585–607. doi:10.1002/oca.2117.

Hartley, E.N., Trodden, P.A., Richards, A.G., Maciejowski,

J.M.,
system design and implementation
Control Engineering Practice 20, 695–713.

Model predictive control

2012.
for spacecraft rendezvous.
doi:10.1016/j.conengprac.2012.03.009.

Hicks, K.D., 2009. Introduction to Astrodynamic Reentry. Technical Report
AFIT/EN/TR-09-03. Air Force Institute of Technology Wright-Patterson Air
Force Base, OH.

Holt, H., Armellin, R., Baresi, N., Hashida, Y., Turconi, A., Scorsoglio, A., Fur-
faro, R., 2021. Optimal q-laws via reinforcement learning with guaranteed sta-
bility. Acta Astronautica 187, 511–528. doi:10.1016/j.actaastro.2021.07.010.

Horn, H.J., Chandler, D.C., Buckelew, V.L., 1969.

Iterative guidance ap-
plied to generalized missions. Journal of Spacecraft and Rockets 6, 4–8.
doi:10.2514/3.29523.

Houska, B., Ferreau, H.J., Diehl, M., 2010. ACADO toolkit-an open-source
framework for automatic control and dynamic optimization. Optimal Control
Applications and Methods 32, 298–312. doi:10.1002/oca.939.

Howell, T.A., Jackson, B.E., Manchester, Z., 2019.

ALTRO: A fast
solver for constrained trajectory optimization,
2019 IEEE/RSJ In-
ternational Conference on Intelligent Robots and Systems (IROS), IEEE.
doi:10.1109/iros40897.2019.8967788.

in:

Hu, H., Zhu, S., Cui, P., 2016. Desensitized optimal trajectory for landing on
small bodies with reduced landing error. Aerospace Science and Technology
48, 178–185. doi:10.1016/j.ast.2015.11.006.

Hu, Q., Xie, J., Liu, X., 2018. Trajectory optimization for accompanying satel-
lite obstacle avoidance. Aerospace Science and Technology 82-83, 220–233.
doi:10.1016/j.ast.2018.08.033.

Hutao, C., Xiaojun, C., Rui, X., Pingyuan, C., 2011. RHC-based attitude
control of spacecraft under geometric constraints. Aircraft Engineering and
Aerospace Technology 83, 296–305. doi:10.1108/00022661111159906.

75

Izzo, D., M¨artens, M., Pan, B., 2019. A survey on artiﬁcial intelligence trends
in spacecraft guidance dynamics and control. Astrodynamics 3, 287–299.
doi:10.1007/s42064-018-0053-6.

Jacobson, D.H., 1968. New second-order and ﬁrst-order algorithms for de-
termining optimal control: A diﬀerential dynamic programming approach.
Journal of Optimization Theory and Applications 2, 411–440. URL: https:
//doi.org/10.1007/bf00925746, doi:10.1007/bf00925746.

Jennings, L., Yu, C., Li, B., Rehbock, V., Loxton, R., Teo, K.L., Yang, F., 2015.
VISUAL MISER: An eﬃcient user-friendly visual program for solving optimal
control problems. Journal of Industrial and Management Optimization 12,
781–810. doi:10.3934/jimo.2016.12.781.

Jewison, C., Erwin, R.S., Saenz-Otero, A., 2015. Model predictive control with
ellipsoid obstacle constraints for spacecraft rendezvous. IFAC-PapersOnLine
48, 257–262. doi:10.1016/j.ifacol.2015.08.093.

Jewison, C., Miller, D.W., 2018. Probabilistic trajectory optimization under un-
certain path constraints for close proximity operations. Journal of Guidance,
Control, and Dynamics 41, 1843–1858. doi:10.2514/1.g003152.

Jiang, X., Li, S., Tao, T., 2018. Computational guidance for planetary powered
descent using collaborative optimization. Aerospace Science and Technology
76, 37–48. doi:10.1016/j.ast.2018.02.009.

Jin, K., Geller, D.K., Luo, J., 2020. Robust trajectory design for rendezvous
and proximity operations with uncertainties. Journal of Guidance, Control,
and Dynamics 43, 741–753. doi:10.2514/1.g004121.

Jin, Z., Chen, J., Sheng, Y., Liu, X., 2016. Neural network based adap-
tive fuzzy PID-type sliding mode attitude control for a reentry vehicle.
International Journal of Control, Automation and Systems 15, 404–415.
doi:10.1007/s12555-015-0181-1.

Jo, J.W., Prussing, J.E., 2000. Procedure for applying second-order conditions
in optimal control problems. Journal of Guidance, Control, and Dynamics
23, 241–250. doi:10.2514/2.4546.

Johnson, B.J., Braden, E.M., Sostaric, R.R., Cerimele, C.J., Lu, P., 2018. Entry,
descent, and landing performance for a mid-lift-to-drag ratio vehicle at Mars,
in: 2018 American Astronautical Society Guidance and Control Conference,
Breckenridge, CO.

Johnson, B.J., Rocca-Bejar, D., Lu, P., Nikaido, B., Hays, Z.B., D'Souza,
S., Sostaric, R.R., 2020. Pterodactyl: Development and performance of
guidance algorithms for a mechanically deployed entry vehicle, in: AIAA
Scitech 2020 Forum, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2020-1011.

76

Johnson, W.R., Lu, P., Stachowiak, S., 2017. Automated re-entry system using
FNPEG, in: AIAA Guidance, Navigation, and Control Conference, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2017-1899.

Jones, J.W., 2018. The Recent Large Reduction in Space Launch Cost, in: 48th
International Conference on Environmental Systems, Albuquerque, NM.

Josselyn, S., Ross, I.M., 2003. Rapid veriﬁcation method for the trajectory
optimization of reentry vehicles. Journal of Guidance, Control, and Dynamics
26, 505–508. doi:10.2514/2.5074.

JPL, Masten Space Systems, 2012a. 500 meter divert Xombie test ﬂight for
G-FOLD, Guidance for Fuel Optimal Large Divert, validation. http://www.
youtube.com/watch?v=1GRwimo1AwY.

JPL, Masten Space Systems, 2012b. 750 meter divert Xombie test ﬂight for
G-FOLD, Guidance for Fuel Optimal Large Divert, validation. http://www.
youtube.com/watch?v=jl6pw2oossU.

Kamath, A.G., Assadian, F.F., Robinson, S.K., 2020. Multivariable ro-
bust control for the powered-descent of a multibody lunar landing system,
in: AIAA/AAS Astrodynamics Specialist Conference, American Institute of
Aeronautics and Astronautics.

Kawaguchi, J., Fujiwara, A., Uesugi, T., 2008. Hayabusa—its technology and
science accomplishment summary and Hayabusa-2. Acta Astronautica 62,
639–647. doi:10.1016/j.actaastro.2008.01.028.

Kechichian, J.A., 1995. Optimal low-thrust transfer using variable bounded
thrust. Acta Astronautica 36, 357–365. doi:10.1016/0094-5765(95)00112-3.

Kelly, M., 2017. An introduction to trajectory optimization: How to do your
own direct collocation. SIAM Review 59, 849–904. doi:10.1137/16m1062569.

Kim, Y., Mesbahi, M., 2004. Quadratically constrained attitude control via
semideﬁnite programming. IEEE Transactions on Automatic Control 49, 731–
735. doi:10.1109/tac.2004.825959.

Kim, Y., Mesbahi, M., Singh, G., Hadaegh, F.Y., 2010.

convex parameterization of constrained spacecraft reorientation.
Transactions on Aerospace and Electronic Systems 46,
doi:10.1109/taes.2010.5545176.

On the
IEEE
1097–1109.

Kirk, D.E., 1970. Optimal Control Theory: An Introduction. Prentice-Hall,

Englewood Cliﬀs, NJ.

Klumpp, A.R., 1974. Apollo lunar descent guidance. Automatica 10, 133–146.

doi:10.1016/0005-1098(74)90019-3.

77

Koeppen, N., Ross, I.M., Wilcox, L.C., Proulx, R.J., 2019. Fast mesh reﬁne-
ment in pseudospectral optimal control. Journal of Guidance, Control, and
Dynamics 42, 711–722. doi:10.2514/1.g003904.

LaFarge, N.B., Miller, D., Howell, K.C., Linares, R., 2020. Guidance for closed-
loop transfers using reinforcement learning with application to libration point
orbits, in: AIAA Scitech 2020 Forum, American Institute of Aeronautics and
Astronautics. doi:10.2514/6.2020-0458.

Lantoine, G., Russell, R.P., 2012a. A hybrid diﬀerential dynamic programming
algorithm for constrained optimal control problems. part 1: Theory. Journal
of Optimization Theory and Applications 154, 382–417. doi:10.1007/s10957-
012-0039-0.

Lantoine, G., Russell, R.P., 2012b. A hybrid diﬀerential dynamic program-
ming algorithm for constrained optimal control problems. part 2: Appli-
cation.
Journal of Optimization Theory and Applications 154, 418–442.
doi:10.1007/s10957-012-0038-1.

Larsson, R., Berge, S., Bodin, P., J¨onsson, U.T., 2006. Fuel eﬃcient relative
orbit control strategies for formation ﬂying and rendezvous within PRISMA,
in: 29th annual AAS guidance and control conference, pp. 25–40.

Lauretta, D.S., Balram-Knutson, S.S., Beshore, E., Boynton, W.V., d’Aubigny,
C.D., DellaGiustina, D.N., Enos, H.L., Golish, D.R., Hergenrother, C.W.,
Howell, E.S., et al., 2017. OSIRIS-REx: Sample return from asteroid (101955)
bennu. Space Science Reviews 212, 925–984. doi:10.1007/s11214-017-0405-1.

Lawden, D., 1963. Optimal Trajectories for Space Navigation. Butterworths,

London.

Lee, D.Y., Gupta, R., Kalabi´c, U.V., Di Cairano, S., Bloch, A.M., Cutler, J.W.,
Kolmanovsky, I.V., 2017. Geometric mechanics based nonlinear model pre-
dictive spacecraft attitude control with reaction wheels. Journal of Guidance,
Control, and Dynamics 40, 309–319. doi:10.2514/1.g001923.

Lee, U., Mesbahi, M., 2013. Quaternion-based optimal spacecraft reorientation
under complex attitude constrained zones, in: AAS/AIAA Astrodynamics
Specialist Conference. AAS/AIAA.

Lee, U., Mesbahi, M., 2014. Dual quaternion based spacecraft rendezvous with
rotational and translational ﬁeld of view constraints, in: AIAA/AAS As-
trodynamics Specialist Conference, American Institute of Aeronautics and
Astronautics. doi:10.2514/6.2014-4362.

Lee, U., Mesbahi, M., 2017. Constrained autonomous precision landing via dual
quaternions and model predictive control. Journal of Guidance, Control, and
Dynamics 40, 292–308. doi:10.2514/1.g001879.

78

Li, P., Zhu, Z.H., 2017. Line-of-sight nonlinear model predictive control for
autonomous rendezvous in elliptical orbit. Aerospace Science and Technology
69, 236–243. doi:10.1016/j.ast.2017.06.030.

Li, P., Zhu, Z.H.,

2018a.

rendezvous
doi:10.1016/j.actaastro.2018.03.025.

in elliptical orbit.

Model predictive control

for
Acta Astronautica 146,

spacecraft
339–348.

Li, P., Zhu, Z.H., 2018b. Pulse-width pulse-frequency modulated nonlinear
model predictive control for spacecraft rendezvous, in: 2018 Space Flight
Mechanics Meeting, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2018-2218.

Li, P., Zhu, Z.H., Meguid, S., 2016. State dependent model predictive control
for orbital rendezvous using pulse-width pulse-frequency modulated thrusters.
Advances in Space Research 58, 64–73. doi:10.1016/j.asr.2016.04.022.

Li, Q., Yuan, J., Zhang, B., Gao, C., 2017. Model predictive control for au-
tonomous rendezvous and docking with a tumbling target. Aerospace Science
and Technology 69, 700–711. doi:10.1016/j.ast.2017.07.022.

Li, Q., Zhang, B., Yuan, J., Wang, H., 2018. Potential function based
robust safety control for spacecraft rendezvous and proximity operations
Advances in Space Research 62, 2586–2598.
under path constraint.
doi:10.1016/j.asr.2018.08.003.

Li, Y., Guan, Y., Wei, C., Hu, R., 2019. Optimal control of ascent trajectory
IEEE Access 7, 186491–186498.

for launch vehicles: A convex approach.
doi:10.1109/access.2019.2960864.

Li, Y., Pang, B., Wei, C., Cui, N., Liu, Y., 2020. Online trajectory optimization
for power system fault of launch vehicles via convex programming. Aerospace
Science and Technology 98, 105682. doi:10.1016/j.ast.2020.105682.

Liao-McPherson, D., Dunham, W.D., Kolmanovsky, I., 2016. Model predictive
control strategies for constrained soft landing on an asteroid, in: AIAA/AAS
Astrodynamics Specialist Conference, American Institute of Aeronautics and
Astronautics. doi:10.2514/6.2016-5507.

Linares, R., Raquepas, J.B., 2018. Physically-constrained inverse optimal con-
trol for satellite maneuver detection, in: 2018 AAS/AIAA Astrodynamics
Specialist Conference.

Liu, J., Li, H., 2019. Artiﬁcial potential

function safety and obstacle
avoidance guidance for autonomous rendezvous and docking with non-
cooperative target. Mathematical Problems in Engineering 2019, 1–17.
doi:10.1155/2019/3451864.

Liu, X., 2019. Fuel-optimal rocket landing with aerodynamic controls. Journal

of Guidance, Control, and Dynamics 42, 65–77. doi:10.2514/1.g003537.

79

Liu, X., Lu, P., 2014. Solving nonconvex optimal control problems by con-
vex optimization. Journal of Guidance, Control, and Dynamics 37, 750–765.
doi:10.2514/1.62110.

Liu, X., Lu, P., Pan, B., 2017. Survey of convex optimization for aerospace

applications. Astrodynamics 1, 23–40. doi:10.1007/s42064-017-0003-8.

Liu, X., Shen, Z., 2015. Rapid smooth entry trajectory planning for high lift/-
drag hypersonic glide vehicles. Journal of Optimization Theory and Applica-
tions 168, 917–943. doi:10.1007/s10957-015-0831-8.

Liu, X., Shen, Z., Lu, P., 2015. Solving the maximum-crossrange problem
via successive second-order cone programming with a line search. Aerospace
Science and Technology 47, 10–20. doi:10.1016/j.ast.2015.09.008.

Liu, X., Shen, Z., Lu, P., 2016a. Entry trajectory optimization by second-order
cone programming. Journal of Guidance, Control, and Dynamics 39, 227–241.
doi:10.2514/1.g001210.

Liu, X., Shen, Z., Lu, P., 2016b. Exact convex relaxation for optimal ﬂight
of aerodynamically controlled missiles. IEEE Transactions on Aerospace and
Electronic Systems 52, 1881–1892. doi:10.1109/taes.2016.150741.

Lizia, P.D., Armellin, R., Morselli, A., Bernelli-Zazzera, F., 2014. High order
optimal feedback control of space trajectories with bounded control. Acta
Astronautica 94, 383–394. doi:10.1016/j.actaastro.2013.02.011.

L¨ofberg, J., 2004. YALMIP : A toolbox for modeling and optimization in MAT-
LAB, in: 2004 IEEE International Conference on Robotics and Automation,
IEEE. doi:10.1109/cacsd.2004.1393890.

Long, K., 2004. James Webb Space Telescope Project Mission Operations Con-
cept Document. Technical Report JWST-OPS-002018. Goddard Space Flight
Center. Greenbelt, MD.

Longuski, J.M., Guzm´an, J.J., Prussing, J.E., 2014. Optimal Control with
Aerospace Applications. Springer New York. doi:10.1007/978-1-4614-8945-0.

Louembet, C., Arzelier, D., Deaconu, G., 2015. Robust rendezvous planning un-
der maneuver execution errors. Journal of Guidance, Control, and Dynamics
38, 76–93. doi:10.2514/1.g000391.

Lu, P., 2008. Predictor-corrector entry guidance for low-lifting vehicles. Journal
of Guidance, Control, and Dynamics 31, 1067–1075. doi:10.2514/1.32055.

Lu, P., 2014. Entry guidance: A uniﬁed method. Journal of Guidance, Control,

and Dynamics 37, 713–728. doi:10.2514/1.62605.

Lu, P., 2017.

Introducing computational guidance and control. Journal of

Guidance, Control, and Dynamics 40, 193–193. doi:10.2514/1.g002745.

80

Lu, P., 2018. Propellant-optimal powered descent guidance. Journal of Guid-

ance, Control, and Dynamics 41, 813–826. doi:10.2514/1.g003243.

Lu, P., 2019. Augmented Apollo powered descent guidance. Journal of Guid-

ance, Control, and Dynamics 42, 447–457. doi:10.2514/1.g004048.

Lu, P., 2020. Theory of fractional-polynomial powered descent guidance. Journal
of Guidance, Control, and Dynamics 43, 398–409. doi:10.2514/1.g004556.

Lu, P., Cerimele, C.J., Tigges, M.A., Matz, D.A., 2015. Optimal aerocap-
ture guidance. Journal of Guidance, Control, and Dynamics 38, 553–565.
doi:10.2514/1.g000713.

Lu, P., Liu, X., 2013. Autonomous trajectory planning for rendezvous and
proximity operations by conic optimization. Journal of Guidance, Control,
and Dynamics 36, 375–389. doi:10.2514/1.58436.

Lu, P., Pan, B., 2010. Highly constrained optimal launch ascent guidance. Jour-
nal of Guidance, Control, and Dynamics 33, 404–414. doi:10.2514/1.45632.

Lu, P., Sun, H., Tsai, B., 2003. Closed-loop endoatmospheric ascent guidance.
Journal of Guidance, Control, and Dynamics 26, 283–294. doi:10.2514/2.5045.

Lu, P., Xue, S., 2010. Rapid generation of accurate entry landing foot-
Journal of Guidance, Control, and Dynamics 33, 756–767.

prints.
doi:10.2514/1.46833.

Lu, P., Zhang, L., Sun, H., 2005. Ascent guidance for responsive launch: A
ﬁxed-point approach, in: AIAA Guidance, Navigation, and Control Con-
ference and Exhibit, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2005-6453.

Luo, Y., Serrani, A., Yurkovich, S., Oppenheimer, M.W., Doman, D.B., 2007a.
Model-predictive dynamic control allocation scheme for reentry vehicles. Jour-
nal of Guidance, Control, and Dynamics 30, 100–113. doi:10.2514/1.25473.

Luo, Y., Tang, G., Parks, G., 2008. Multi-objective optimization of perturbed
impulsive rendezvous trajectories using physical programming. Journal of
Guidance, Control, and Dynamics 31, 1829–1832. doi:10.2514/1.35409.

Luo, Y., Zhang, J., Tang, G., 2014.

Survey of orbital dynamics and
control of space rendezvous. Chinese Journal of Aeronautics 27, 1–11.
doi:10.1016/j.cja.2013.07.042.

Luo, Y.Z., Lei, Y.J., Tang, G.J., 2007b. Optimal multi-objective nonlinear
impulsive rendezvous. Journal of Guidance, Control, and Dynamics 30, 994–
1002. doi:10.2514/1.27910.

Luo, Y.Z., Tang, G.J., Lei, Y.J., 2007c. Optimal multi-objective linearized
impulsive rendezvous. Journal of Guidance, Control, and Dynamics 30, 383–
389. doi:10.2514/1.21433.

81

Lurie, B.J., Enright, P.J., 2000. Classical Feedback Control with MATLAB.

Marcel Dekker, New York.

Majumdar, A., Hall, G., Ahmadi, A.A., 2020. Recent scalability improvements
for semideﬁnite programming with applications in machine learning, control,
and robotics. Annual Review of Control, Robotics, and Autonomous Systems
3, 331–360. doi:10.1146/annurev-control-091819-074326.

Majumdar, A., Tedrake, R., 2017. Funnel libraries for real-time robust feedback
motion planning. The International Journal of Robotics Research 36, 947–
982. doi:10.1177/0278364917712421.

Mall, K., Grant, M.J., 2017. Epsilon-Trig regularization method for bang-bang
optimal control problems. Journal of Optimization Theory and Applications
174, 500–517. doi:10.1007/s10957-017-1129-9.

Mall, K., Grant, M.J., Taheri, E., 2020. Uniform trigonometrization method
for optimal control problems with control and state constraints. Journal of
Spacecraft and Rockets 57, 995–1007. doi:10.2514/1.a34624.

Malladi, B.P., Di Cairano, S., Weiss, A., 2019. Nonlinear model predictive
control of coupled rotational-translational spacecraft relative motion, in: 2019
American Control Conference (ACC), IEEE. doi:10.23919/acc.2019.8814345.

Malyuta, D., A¸cıkme¸se, B., 2020a. Approximate multiparametric mixed-
IEEE Control Systems Letters 4.

integer
doi:10.1109/lcsys.2019.2922639, arXiv:1902.10994.

convex programming.

Malyuta, D., A¸cıkme¸se, B., 2020b. Lossless convexiﬁcation of optimal control
problems with semi-continuous inputs. IFAC-PapersOnLine 53, 6843–6850.
doi:10.1016/j.ifacol.2020.12.341.

Malyuta, D., A¸cıkme¸se, B., 2021. Fast homotopy for spacecraft rendezvous
trajectory optimization with discrete logic. Journal of Guidance, Control,
and Dynamics (in review) arXiv:2107.07001.

Malyuta, D., Reynolds, T.P., Szmuk, M., A¸cıkme¸se, B., Mesbahi, M., 2020.
Fast trajectory optimization via successive convexiﬁcation for spacecraft ren-
dezvous with integer constraints, in: AIAA Scitech 2020 Forum, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2020-0616.

Malyuta, D., Reynolds, T.P., Szmuk, M., Lew, T., Bonalli, R., Pavone, M.,
IEEE

A¸cıkme¸se, B., 2021. Convex optimization for trajectory generation.
Control Systems Magazine (in review) arXiv:2106.09125.

Malyuta, D., Reynolds, T.P., Szmuk, M., Mesbahi, M., A¸cıkme¸se, B., Carson
III, J.M., 2019. Discretization performance and accuracy analysis for the
rocket powered descent guidance problem, in: AIAA Scitech 2019 Forum, pp.
1–20. doi:10.2514/6.2019-0925.

82

Mammarella, M., Capello, E., Park, H., Guglieri, G., Romano, M., 2018. Tube-
based robust model predictive control for spacecraft proximity operations in
the presence of persistent disturbance. Aerospace Science and Technology 77,
585–594. doi:10.1016/j.ast.2018.04.009.

Mammarella, M., Lorenzen, M., Capello, E., Park, H., Dabbene, F., Guglieri,
G., Romano, M., Allgower, F., 2020. An oﬄine-sampling SMPC framework
with application to autonomous space maneuvers.
IEEE Transactions on
Control Systems Technology 28, 388–402. doi:10.1109/tcst.2018.2879938.

Mao, Y., Dueri, D., Szmuk, M., A¸cıkme¸se, B., 2018a. Convexiﬁcation and
real-time optimization for MPC with aerospace applications, in: Handbook
of Model Predictive Control. Springer International Publishing, pp. 335–358.
doi:10.1007/978-3-319-77489-3 15.

Mao, Y., Szmuk, M., Xu, X., A¸cıkme¸se, B., 2018b. Successive convexiﬁcation: A
superlinearly convergent algorithm for non-convex optimal control problems.
arXiv:1804.06539.

Marcucci, T., Tedrake, R., 2019. Mixed-integer formulations for optimal control
of piecewise-aﬃne systems, in: Proceedings of the 22nd ACM International
Conference on Hybrid Systems Computation and Control - HSCC '19, ACM
Press. pp. 230–239. doi:10.1145/3302504.3311801.

Marec, J.P., 1979. Optimal Space Trajectories. Elsevier Scientiﬁc Publishing

Company, Amsterdam. doi:10.1002/oca.4660040210.

Mattingley, J., Boyd, S., 2011.

CVXGEN: A code generator for em-
bedded convex optimization. Optimization and Engineering 13, 1–27.
doi:10.1007/s11081-011-9176-9.

Mayne, D., 1966. A second-order gradient method for determining optimal tra-
jectories of non-linear discrete-time systems. International Journal of Control
3, 85–95. doi:10.1080/00207176608921369.

Mayne, D., 2015. Robust and stochastic MPC: Are we going in the right direc-

tion? IFAC-PapersOnLine 48, 1–8. doi:10.1016/j.ifacol.2015.11.255.

Mayne, D., Rawlings, J., Rao, C., Scokaert, P., 2000. Constrained model
predictive control: Stability and optimality. Automatica 36, 789–814.
doi:10.1016/s0005-1098(99)00214-9.

Mayne, D.Q., 2014. Model predictive control: Recent developments and future
promise. Automatica 50, 2967–2986. doi:10.1016/j.automatica.2014.10.128.

McCue, G.A., 1967. Quasilinearization determination of optimum ﬁnite-thrust

orbital transfers. AIAA Journal 5, 755–763. doi:10.2514/3.4058.

83

McDonald, S., Grizzel, T., Wang, Z., 2020. A real-time approach to minimum-
energy reorientation of an asymmetric rigid body spacecraft,
in: AIAA
Scitech 2020 Forum, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2020-1203.

McHenry, R., Long, A., Cockrell, B., Thibodeau III, J., Brand, T., 1979. Space
shuttle ascent guidance, navigation, and control. Journal of the Astronautical
Sciences 27, 1–38.

Meditch, J., 1964. On the problem of optimal thrust programming for a lu-
IEEE Transactions on Automatic Control 9, 477–484.

nar soft landing.
doi:10.1109/tac.1964.1105758.

Mendeck, G., Craig, L., 2011. Entry guidance for the 2011 Mars Science Labora-
tory mission, in: AIAA Atmospheric Flight Mechanics Conference, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2011-6639.

Miller, D., Englander, J.A., Linares, R., 2019. Interplanetary low-thrust design
using proximal policy optimization, in: AAS/AIAA Astrodynamics Specialist
Conference, American Astronautical Society.

Miller, D., Linares, R., 2019. Low-thrust optimal control via reinforcement

learning, in: 29th AAS/AIAA Space Flight Mechanics Meeting.

Mindell, D.A., 2008. Digital Apollo. MIT Press.

Morgan, D., Chung, S.J., Blackmore, L., A¸cıkme¸se, B., Bayard, D., Hadaegh,
F.Y., 2012. Swarm-keeping strategies for spacecraft under J2 and atmospheric
drag perturbations. Journal of Guidance, Control, and Dynamics 35, 1492–
1506. doi:10.2514/1.55705.

Murillo, O., Lu, P., 2010. Fast ascent trajectory optimization for hypersonic air-
breathing vehicles, in: AIAA Guidance, Navigation, and Control Conference,
American Institute of Aeronautics and Astronautics. doi:10.2514/6.2010-
8173.

NASA Science,
Sites.

ing
moons-south-pole-in-nasas-landing-sites/. Accessed: 11/26/2019.

in NASA’s Land-
Moon’s
https://solarsystem.nasa.gov/news/907/

South Pole

2019.

Nemhauser, G.L., Wolsey, L.A., 1999. Integer and Combinatorial Optimization.

Wiley, Hoboken, NJ.

Nocedal, J., Wright, S., 1999. Numerical Optimization. Springer.

Ono, M., Pavone, M., Kuwata, Y., Balaram, J., 2015. Chance-constrained dy-
namic programming with application to risk-aware robotic space exploration.
Autonomous Robots 39, 555–571. doi:10.1007/s10514-015-9467-7.

84

Palacios-Gomez, F., Lasdon, L., Engquist, M., 1982. Nonlinear optimiza-
tion by successive linear programming. Management Science 28, 1106–1120.
doi:10.1287/mnsc.28.10.1106.

Palumbo, N.F., Blauwkamp, R.A., Lloyd, J.M., 2010. Modern homing missile
guidance theory and techniques. Johns Hopkins APL Technical Digest 29,
42–59.

Pan, B., Chen, Z., Lu, P., Gao, B., 2013. Reduced transversality conditions in
optimal space trajectories. Journal of Guidance, Control, and Dynamics 36,
1289–1300. doi:10.2514/1.60181.

Pan, B., Lu, P., 2010.

Improvements to optimal launch ascent guidance, in:
AIAA Guidance, Navigation, and Control Conference, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2010-8174.

Pan, B., Lu, P., Chen, Z., 2012. Coast arcs in optimal multiburn or-
bital transfers. Journal of Guidance, Control, and Dynamics 35, 451–461.
doi:10.2514/1.54655.

Pan, B., Lu, P., Pan, X., Ma, Y., 2016. Double-homotopy method for solving
optimal control problems. Journal of Guidance, Control, and Dynamics 39,
1706–1720. doi:10.2514/1.g001553.

Pan, B., Pan, X., Lu, P., 2019. Finding best solution in low-thrust trajectory
optimization by two-phase homotopy. Journal of Spacecraft and Rockets 56,
283–291. doi:10.2514/1.a34144.

Pan, B., Pan, X., Zhang, S., 2018. A new probability-one homotopy method
for solving minimum-time low-thrust orbital transfer problems. Astrophysics
and Space Science 363. doi:10.1007/s10509-018-3420-0.

Pan, X., Pan, B., 2020. Practical homotopy methods for ﬁnding the best
minimum-fuel transfer in the circular restricted three-body problem. IEEE
Access 8, 47845–47862. doi:10.1109/access.2020.2978246.

Park, H., Di Cairano, S., Kolmanovsky, I., 2011. Model predictive control for
spacecraft rendezvous and docking with a rotating/tumbling platform and for
debris avoidance, in: Proceedings of the 2011 American Control Conference,
IEEE. doi:10.1109/acc.2011.5991151.

Park, H., Kolmanovsky, I., Sun, J., 2013. Model predictive control of spacecraft
relative motion maneuvers using the IPA-SQP approach, in: ASME 2013
Dynamic Systems and Control Conference, American Society of Mechanical
Engineers. doi:10.1115/dscc2013-3854.

Park, H., Zagaris, C., Llop, J.V., Zappulla, R., Kolmanovsky, I., Romano, M.,
2016. Analysis and experimentation of model predictive control for space-
craft rendezvous and proximity operations with multiple obstacle avoidance,
in: AIAA/AAS Astrodynamics Specialist Conference, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2016-5273.

85

Pascucci, C.A., Bennani, S., Bemporad, A., 2015. Model predictive control for
powered descent guidance and control, in: 2015 European Control Conference
(ECC), IEEE. doi:10.1109/ecc.2015.7330732.

Patterson, M.A., Rao, A.V., 2014. GPOPS-II: A MATLAB software for solving
multiple-phase optimal control problems using hp-adaptive gaussian quadra-
ture collocation methods and sparse nonlinear programming. ACM Transac-
tions on Mathematical Software 41, 1–37. doi:10.1145/2558904.

Pavlov, A., Shames, I., Manzie, C., 2020. Interior point diﬀerential dynamic

programming. arXiv:2004.12710.

Pellegrini, E., Russell, R.P., 2020a. A multiple-shooting diﬀerential dynamic
programming algorithm. part 1: Theory. Acta Astronautica 170, 686–700.
doi:10.1016/j.actaastro.2019.12.037.

Pellegrini, E., Russell, R.P., 2020b. A multiple-shooting diﬀerential dynamic
programming algorithm. part 2: Applications. Acta Astronautica 173, 460–
472. doi:10.1016/j.actaastro.2019.12.038.

Peng, J., Roos, C., Terlaky, T., 2002. Primal-dual interior-point methods for
second-order conic optimization based on self-regular proximities. SIAM Jour-
nal on Optimization 13, 179–203. doi:10.1137/s1052623401383236.

Petersen, C., Jaunzemis, A., Baldwin, M., Holzinger, M., Kolmanovsky, I., 2014.
Model predictive control and extended command governor for improving ro-
bustness of relative motion guidance and control, in: Proc. AAS/AIAA space
ﬂight mechanics meeting, American Institute of Aeronautics and Astronautics
(AIAA).

Petropoulos, A., Russell, R., 2008. Low-thrust transfers using primer vector
theory and a second-order penalty method, in: AIAA/AAS Astrodynamics
Specialist Conference and Exhibit, American Institute of Aeronautics and
Astronautics. doi:10.2514/6.2008-6955.

Phogat, K.S., Chatterjee, D., Banavar, R., 2018a. Discrete-time optimal atti-
tude control of a spacecraft with momentum and control constraints. Journal
of Guidance, Control, and Dynamics 41, 199–211. doi:10.2514/1.g002861.

Phogat, K.S., Chatterjee, D., Banavar, R.N., 2018b. A discrete-time Pon-
tryagin maximum principle on matrix lie groups. Automatica 97, 376–391.
doi:10.1016/j.automatica.2018.08.026.

Picot, G., 2012. Shooting and numerical continuation methods for comput-
ing time-minimal and energy-minimal trajectories in the Earth-Moon system
using low propulsion. Discrete & Continuous Dynamical Systems - B 17,
245–269. doi:10.3934/dcdsb.2012.17.245.

86

Pinson, R., Lu, P., 2015. Rapid generation of optimal asteroid powered de-
scent trajectories via convex optimization, in: Proceedings of the AAS/AIAA
Astrodynamics Specialist Conference AAS 15-616.

Pinson, R.M., Lu, P., 2018. Trajectory design employing convex optimization
for landing on irregularly shaped asteroids. Journal of Guidance, Control,
and Dynamics 41, 1243–1256. doi:10.2514/1.g003045.

Ploen, S., A¸cıkme¸se, B., Wolf, A., 2006. A comparison of powered descent
guidance laws for Mars pinpoint landing, in: AIAA/AAS Astrodynamics
Specialist Conference and Exhibit, American Institute of Aeronautics and
Astronautics. doi:10.2514/6.2006-6676.

Pontani, M., Conway, B., 2013. Optimal low-thrust orbital maneuvers via in-
direct swarming method. Journal of Optimization Theory and Applications
162, 272–292. doi:10.1007/s10957-013-0471-9.

Pontryagin, L.S., Boltyanskii, V.G., Gamkrelidze, R.V., Mishchenko, E.F., 1986.
The Mathematical Theory of Optimal Processes. Gordon and Breach Science
Publishers, Montreux. doi:10.1201/9780203749319.

Qin, S., Badgwell, T.A., 2003. A survey of industrial model predictive control
technology. Control Engineering Practice 11, 733–764. doi:10.1016/s0967-
0661(02)00186-7.

Rahmani, A., Bandyopadhyay, S., Rossi, F., de la Croix, J.P., Hook, J.V., Wolf,
M., 2019. Space vehicle swarm exploration missions: A study of key en-
abling technologies and gaps, in: 70th International Astronautical Congress,
International Astronautical Federation.

Rao, A.V., 2010. A survey of numerical methods for optimal control. Advances

in the Astronautical Sciences 135, 497–528.

Rasotto, M., Armellin, R., Lizia, P.D., 2015. Multi-step optimization strategy
for fuel-optimal orbital transfer of low-thrust spacecraft. Engineering Opti-
mization 48, 519–542. doi:10.1080/0305215x.2015.1025773.

Rawlings, J.B., Mayne, D.Q., Diehl, M.M., 2017. Model Predictive Control:
Theory, Computation and Design. 2 ed., Nob Hill Publishing, Madison, WI.

Rea, J., 2003. Launch vehicle trajectory optimization using a legendre pseu-
in: AIAA Guidance, Navigation, and Control Con-
dospectral method,
ference and Exhibit, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2003-5640.

Rea, J., Putnam, Z., 2007. A comparison of two Orion skip entry guidance algo-
rithms, in: AIAA Guidance, Navigation and Control Conference and Exhibit,
American Institute of Aeronautics and Astronautics. doi:10.2514/6.2007-
6424.

87

Recasens, J., Chu, Q., Mulder, J., 2005. Robust model predictive control of a
feedback linearized system for a lifting-body re-entry vehicle, in: AIAA Guid-
ance, Navigation, and Control Conference and Exhibit, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2005-6147.

Restrepo, R.L., Russell, R.P., 2017. Shadow trajectory model for fast low-
thrust indirect optimization. Journal of Spacecraft and Rockets 54, 44–54.
doi:10.2514/1.a33611.

Reynolds, T.P., 2020. Computational Guidance and Control for Aerospace Sys-

tems. Ph.D. thesis. University of Washington. Seattle.

Reynolds, T.P., Malyuta, D., Mesbahi, M., A¸cıkme¸se, B., 2020a. Temporally-
interpolated funnel synthesis for nonlinear systems, in: 2nd RSS Workshop
on Robust Autonomy, RSS. URL: https://openreview.net/forum?id=
cMoxvmU22Zg.

Reynolds, T.P., Malyuta, D., Mesbahi, M., A¸cıkme¸se, B., Carson III, J.M.,
2020b. A real-time algorithm for non-convex powered descent guidance, in:
AIAA Scitech 2020 Forum, American Institute of Aeronautics and Astronau-
tics. doi:10.2514/6.2020-0844.

Reynolds, T.P., Mesbahi, M., 2017. Small body precision landing via con-
in: AIAA SPACE and Astronautics Fo-
vex model predictive control,
rum and Exposition, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2017-5179.

Reynolds, T.P., Mesbahi, M., 2020a. Crawling phenomena in sequential con-
vexiﬁcation for solving nonconvex problems, in: 2020 American Control Con-
ference (ACC), IEEE.

Reynolds, T.P., Mesbahi, M., 2020b. Optimal planar powered descent with
independent thrust and torque. Journal of Guidance, Control, and Dynamics
43, 1225–1231. doi:10.2514/1.g004701.

Reynolds, T.P., Szmuk, M., Malyuta, D., Mesbahi, M., A¸cıkme¸se, B., Car-
son III, J.M., 2019a. Dual quaternion based powered descent guidance with
state-triggered constraints. arXiv:1904.09248. accepted in AIAA Journal of
Guidance, Control, and Dynamics.

Reynolds, T.P., Szmuk, M., Malyuta, D., Mesbahi, M., A¸cıkme¸se, B., Carson
III, J.M., 2019b. A state-triggered line of sight constraint for 6-DoF powered
descent guidance problems, in: AIAA Scitech 2019 Forum, American Institute
of Aeronautics and Astronautics. doi:10.2514/6.2019-0924.

Richards, A., How, J., 2003a. Model predictive control of vehicle maneuvers with
guaranteed completion time and robust feasibility, in: Proceedings of the 2003
American Control Conference, IEEE. doi:10.1109/acc.2003.1240467.

88

Richards, A., How, J., 2003b. Performance evaluation of rendezvous using
model predictive control, in: AIAA Guidance, Navigation, and Control Con-
ference and Exhibit, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2003-5507.

Richards, A., How, J.P., 2006. Robust variable horizon model predictive con-
trol for vehicle maneuvering. International Journal of Robust and Nonlinear
Control 16, 333–351. doi:10.1002/rnc.1059.

Richards, A., Schouwenaars, T., How, J.P., Feron, E., 2002.

Spacecraft
trajectory planning with avoidance constraints using mixed-integer linear
programming. Journal of Guidance, Control, and Dynamics 25, 755–764.
doi:10.2514/2.4943.

Ridderhof, J., Tsiotras, P., 2018. Uncertainty quantication and control dur-
ing Mars powered descent and landing using covariance steering, in: 2018
AIAA Guidance, Navigation, and Control Conference, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2018-0611.

Ridderhof, J., Tsiotras, P., 2019. Minimum-fuel powered descent in the presence
of random disturbances, in: AIAA Scitech 2019 Forum, American Institute
of Aeronautics and Astronautics. doi:10.2514/6.2019-0646.

Robertson, E.A., 2017. Synopsis of precision landing and hazard avoidance
(PL&HA) capabilities for space exploration, in: AIAA Guidance, Navigation,
and Control Conference, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2017-1897.

Robinson, M., 2018. Lunar Reconnaissance Orbiter Camera (LROC). http:

//lroc.sese.asu.edu/posts/993. Accessed: 11/26/2019.

Rockafellar, R.T., 1970. Convex Analysis. Princeton University Press, Prince-

ton, NJ. doi:10.2307/j.ctvcm4g0s.

Rockafellar, R.T., 1993. Lagrange multipliers and optimality. SIAM Review 35,

183–238. doi:10.1137/1035044.

Ross, I., D'Souza, C., 2004. Rapid trajectory optimization of multi-agent
hybrid systems,
in: AIAA Guidance, Navigation, and Control Confer-
ence and Exhibit, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2004-5422.

Ross, I.M., D'Souza, C.N., 2005. Hybrid optimal control framework for mis-
sion planning. Journal of Guidance, Control, and Dynamics 28, 686–697.
doi:10.2514/1.8285.

Ross, I.M., Gong, Q., 2008. Guess-free trajectory optimization, in: AIAA/AAS
Astrodynamics Specialist Conference and Exhibit, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2008-6273.

89

Ross, I.M., Gong, Q., Sekhavat, P., 2007. Low-thrust, high-accuracy trajec-
tory optimization. Journal of Guidance, Control, and Dynamics 30, 921–933.
doi:10.2514/1.23181.

Ross, I.M., Karpenko, M., 2012. A review of pseudospectral optimal con-
trol: From theory to ﬂight. Annual Reviews in Control 36, 182–197.
doi:10.1016/j.arcontrol.2012.09.002.

Russell, R.P., 2007.

low-thrust
trade studies. Journal of Guidance, Control, and Dynamics 30, 460–472.
doi:10.2514/1.22984.

Primer vector theory applied to global

Sagliano, M., 2018a. Generalized hp pseudospectral convex programming for
powered descent and landing, in: 2018 AIAA Guidance, Navigation, and
Control Conference, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2018-1870.

Sagliano, M., 2018b. Pseudospectral convex optimization for powered descent
and landing. Journal of Guidance, Control, and Dynamics 41, 320–334.
doi:10.2514/1.g002818.

Sagliano, M., 2019. Generalized hp pseudospectral-convex programming for
powered descent and landing. Journal of Guidance, Control, and Dynamics
42, 1562–1570. doi:10.2514/1.g003731.

Sagliano, M., Mooij, E., 2018. Optimal drag-energy entry guidance via pseu-
dospectral convex optimization, in: 2018 AIAA Guidance, Navigation, and
Control Conference, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2018-1315.

Sagliano, M., Mooij, E., Theil, S., 2017. Onboard trajectory generation for
entry vehicles via adaptive multivariate pseudospectral interpolation. Journal
of Guidance, Control, and Dynamics 40, 466–476. doi:10.2514/1.g001817.

San Mart´ın, A., Lee, Steven W. Wong, E., 2013. The development of the MSL
guidance, navigation, and control system for entry, descent, and landing, in:
23rd Space Flight Mechanics Meeting.

Sanchez, J.C., Gavilan, F., Vazquez, R., 2018. A predictive guidance algo-
rithm for autonomous asteroid soft landing. IFAC-PapersOnLine 51, 6–11.
doi:10.1016/j.ifacol.2018.07.080.

Sanchez, J.C., Gavilan, F., Vazquez, R., Louembet, C., 2020. A ﬂatness-based
predictive controller for six-degrees of freedom spacecraft rendezvous. Acta
Astronautica 167, 391–403. doi:10.1016/j.actaastro.2019.11.026.

S´anchez-S´anchez, C., Izzo, D., 2018. Real-time optimal control via deep neural
networks: Study on landing problems. Journal of Guidance, Control, and
Dynamics 41, 1122–1135. doi:10.2514/1.g002357.

90

Saranathan, H., Grant, M.J., 2018. Relaxed autonomously switched hybrid
system approach to indirect multiphase aerospace trajectory optimization.
Journal of Spacecraft and Rockets 55, 611–621. doi:10.2514/1.a34012.

Scharf, D., Hadaegh, F., Ploen, S., 2003. A survey of spacecraft formation
ﬂying guidance and control (part 1): Guidance, in: Proceedings of the 2003
American Control Conference, 2003., IEEE. doi:10.1109/acc.2003.1239845.

Scharf, D.P., A¸cıkme¸se, A.B., Ploen, S.R., Hadaegh, F.Y., 2006. A di-
rect solution for fuel-optimal reactive collision avoidance of collaborat-
ing spacecraft,
2006 American Control Conference (ACC), IEEE.
doi:10.1109/ACC.2006.1657548.

in:

Scharf, D.P., A¸cıkme¸se, B., Dueri, D., Benito, J., Casoliva, J., 2017.

Im-
plementation and experimental demonstration of onboard powered-descent
guidance.
Journal of Guidance, Control, and Dynamics 40, 213–229.
doi:10.2514/1.g000399.

Scharf, D.P., Ploen, S.R., A¸cıkme¸se, B.A., 2015. Interpolation-enhanced pow-
ered descent guidance for onboard nominal, oﬀ-nominal, and multi-x sce-
narios, in: AIAA Guidance, Navigation, and Control Conference, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2015-0850.

Scharf, D.P., Regehr, M.W., Vaughan, G.M., Benito, J., Ansari, H., Aung,
M., Johnson, A., Casoliva, J., Mohan, S., Dueri, D., A¸cıkme¸se, B., Mas-
ten, D., Nietfeld, S., 2014. ADAPT demonstrations of onboard large-divert
guidance with a VTVL rocket, in: 2014 IEEE Aerospace Conference, IEEE.
doi:10.1109/aero.2014.6836462.

Scheeres, D., Ostro, S., Hudson, R., DeJong, E., Suzuki, S., 1998. Dy-
Icarus 132, 53–79.

namics of orbits close to asteroid 4179 Toutatis.
doi:10.1006/icar.1997.5870.

Schouwenaars, T., Richards, A., Feron, E., How, J., 2001. Plume avoidance
maneuver planning using mixed integer linear programming, in: AIAA Guid-
ance, Navigation, and Control Conference and Exhibit, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2001-4091.

Schulman, J., Duan, Y., Ho, J., Lee, A., Awwal, I., Bradlow, H., Pan, J.,
Patil, S., Goldberg, K., Abbeel, P., 2014. Motion planning with sequential
convex optimization and convex collision checking. The International Journal
of Robotics Research 33, 1251–1270. doi:10.1177/0278364914528132.

Scorsoglio, A., Furfaro, R., Linares, R., Massari, M., 2019. Actor-critic rein-
forcement learning approach to relative motion guidance in near-rectilinear
orbit. AAS/AIAA Space Flight Mechanics Meeting .

Seywald, K., Seywald, H., 2019. Desensitized optimal control,

in: AIAA
Scitech 2019 Forum, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2019-0651.

91

Shen, H., Seywald, H., Powell, R.W., 2010. Desensitizing the minimum-fuel
powered descent for Mars pinpoint landing. Journal of Guidance, Control,
and Dynamics 33, 108–115. doi:10.2514/1.44649.

Shi, Y., Wang, Z., 2020. A deep learning-based approach to real-time trajectory
optimization for hypersonic vehicles, in: AIAA Scitech 2020 Forum, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2020-0023.

Shirazi, A., Ceberio, J., Lozano, J.A., 2018. Spacecraft trajectory optimiza-
tion: A review of models, objectives, approaches and solutions. Progress in
Aerospace Sciences 102, 76–98. doi:10.1016/j.paerosci.2018.07.007.

Simpl´ıcio, P., Marcos, A., Bennani, S., 2019. Guidance of reusable launchers:
Improving descent and landing performance. Journal of Guidance, Control,
and Dynamics 42, 2206–2219. doi:10.2514/1.g004155.

Simpl´ıcio, P., Marcos, A., Joﬀre, E., Zamaro, M., Silva, N., 2018. Review
of guidance techniques for landing on small bodies. Progress in Aerospace
Sciences 103, 69–83. doi:10.1016/j.paerosci.2018.10.005.

Singh, G., Macala, G., Wong, E., Rasmussen, R., Singh, G., Macala, G., Wong,
E., Rasmussen, R., 1997. A constraint monitor algorithm for the Cassini
spacecraft, in: Guidance, Navigation, and Control Conference, American In-
stitute of Aeronautics and Astronautics. doi:10.2514/6.1997-3526.

Skogestad, S., Postlethwaite, I., 2005. Multivariable Feedback Control: Analysis

and Design. 2 ed., Wiley.

van Soest, W.R., Chu, Q.P., Mulder, J.A., 2006. Combined feedback lineariza-
tion and constrained model predictive control for entry ﬂight. Journal of
Guidance, Control, and Dynamics 29, 427–434. doi:10.2514/1.14511.

Song, Y., Gong, S., 2019. Solar-sail deep space trajectory optimization us-
ing successive convex programming. Astrophysics and Space Science 364.
doi:10.1007/s10509-019-3597-x.

Song, Z., Wang, C., Theil, S., Seelbinder, D., Sagliano, M., Liu, X., Shao,
Z., 2020.
Survey of autonomous guidance methods for powered plane-
tary landing. Frontiers of Information Technology & Electronic Engineering
doi:10.1631/ﬁtee.1900458.

Starek, J.A., A¸cıkme¸se, B., Nesnas, I.A., Pavone, M., 2015. Spacecraft auton-
omy challenges for next-generation space missions, in: Advances in Control
System Technology for Aerospace Applications. Springer Berlin Heidelberg,
pp. 1–48. doi:10.1007/978-3-662-47694-9 1.

Starek, J.A., Kolmanovsky, I.V., 2012. Nonlinear model predictive control strat-
egy for low thrust spacecraft missions. Optimal Control Applications and
Methods 35, 1–20. doi:10.1002/oca.2049.

92

Starek, J.A., Schmerling, E., Maher, G.D., Barbee, B.W., Pavone, M., 2017.
Fast, safe, propellant-eﬃcient spacecraft motion planning under Clohessy-
Wiltshire-Hill dynamics. Journal of Guidance, Control, and Dynamics 40,
418–438. doi:10.2514/1.g001913.

Stein, G., 2003. Respect the unstable.

IEEE Control Systems 23, 12–25.

doi:10.1109/mcs.2003.1213600.

Steinfeldt, B.A., Grant, M.J., Matz, D.A., Braun, R.D., Barton, G.H.,
2010. Guidance, navigation, and control system performance trades for
Mars pinpoint landing.
Journal of Spacecraft and Rockets 47, 188–198.
doi:10.2514/1.45779.

Steltzner, A.D., San Mart´ın, A.M., Rivellini, T.P., Chen, A., Kipp, D.,
2014. Mars Science Laboratory entry, descent, and landing system de-
velopment challenges.
Journal of Spacecraft and Rockets 51, 994–1003.
doi:10.2514/1.a32866.

Stephens, J.P., Vos, G.A., Bilimoria, K.D., Mueller, E.R., Brazzel, J., Spehar,
P., 2013. Orion handling qualities during international space station proxim-
ity operations and docking. Journal of Spacecraft and Rockets 50, 449–457.
doi:10.2514/1.a32253.

Stevens, R., Ross, I.M., 2005. Preliminary design of Earth-Mars cyclers using
solar sails. Journal of Spacecraft and Rockets 42, 132–137. URL: https:
//doi.org/10.2514/1.2947, doi:10.2514/1.2947.

Stevens, R., Ross, I.M., Matousek, S.E., 2004. Earth-Mars return trajectories
using solar sails, in: 55th International Astronautical Congress, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.iac-04-a.2.08.

Sullivan, J., Grimberg, S., D’Amico, S., 2017. Comprehensive survey and assess-
ment of spacecraft relative motion dynamics models. Journal of Guidance,
Control, and Dynamics 40, 1837–1859. doi:10.2514/1.g002309.

Sun, C., Dai, R., Lu, P., 2019. Multi-phase spacecraft mission optimiza-
tion by quadratically constrained quadratic programming, in: AIAA Scitech
2019 Forum, American Institute of Aeronautics and Astronautics. pp. 1–15.
doi:10.2514/6.2019-1667.

Sundstr¨om, O., Guzzella, L., 2009. A generic dynamic programming Matlab
function, in: 2009 IEEE International Conference on Control Applications,
IEEE. doi:10.1109/cca.2009.5281131.

Szmuk, M., A¸cıkme¸se, B., 2018. Successive convexiﬁcation for 6-DoF Mars
rocket powered landing with free-ﬁnal-time, in: 2018 AIAA Guidance, Nav-
igation, and Control Conference, American Institute of Aeronautics and As-
tronautics. doi:10.2514/6.2018-0617.

93

Szmuk, M., A¸cıkme¸se, B., Berning, A.W., 2016. Successive convexiﬁcation for
fuel-optimal powered landing with aerodynamic drag and non-convex con-
straints, in: AIAA Guidance, Navigation, and Control Conference, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2016-0378.

Szmuk, M., Eren, U., A¸cıkme¸se, B., 2017. Successive convexiﬁcation for Mars
6-DoF powered descent landing guidance, in: AIAA Guidance, Navigation,
and Control Conference, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2017-1500.

Szmuk, M., Malyuta, D., Reynolds, T.P., Mceowen, M.S., A¸cıkme¸se, B.,
2019a. Real-time quad-rotor path planning using convex optimization
and compound state-triggered constraints,
2019 IEEE/RSJ Inter-
national Conference on Intelligent Robots and Systems (IROS), IEEE.
doi:10.1109/iros40897.2019.8967706.

in:

Szmuk, M., Reynolds, T.P., A¸cıkme¸se, B., 2018. Successive convexiﬁcation for
real-time 6-DoF powered descent guidance with state-triggered constraints.
arXiv:1811.10803. accepted in AIAA Journal of Guidance, Control, and
Dynamics.

Szmuk, M., Reynolds, T.P., A¸cıkme¸se, B., Mesbahi, M., Carson III, J.M., 2019b.
Successive convexiﬁcation for 6-DoF powered descent guidance with com-
pound state-triggered constraints, in: AIAA Scitech 2019 Forum, American
Institute of Aeronautics and Astronautics. doi:10.2514/6.2019-0926.

Tabuada, P., Fraile, L., 2020. Data-driven stabilization of SISO feedback lin-
earizable systems, in: 59th IEEE Conference on Decision and Control, IEEE.
arXiv:2003.14240.

Taheri, E., Junkins, J.L., 2018. Generic smoothing for optimal bang-oﬀ-bang
spacecraft maneuvers. Journal of Guidance, Control, and Dynamics 41, 2470–
2475. doi:10.2514/1.g003604.

Taheri, E., Junkins, J.L., 2019. How many impulses redux. The Journal of the

Astronautical Sciences 67, 257–334. doi:10.1007/s40295-019-00203-1.

Taheri, E., Junkins, J.L., Kolmanovsky,

A
novel approach for optimal trajectory design with multiple operation
modes of propulsion system, part 1. Acta Astronautica 172, 151–165.
doi:10.1016/j.actaastro.2020.02.042.

I., Girard, A., 2020a.

Taheri, E., Junkins, J.L., Kolmanovsky,

A
novel approach for optimal trajectory design with multiple operation
modes of propulsion system, part 2. Acta Astronautica 172, 166–179.
doi:10.1016/j.actaastro.2020.02.047.

I., Girard, A., 2020b.

Taheri, E., Kolmanovsky, I., Atkins, E., 2016. Enhanced smoothing technique
for indirect optimization of minimum-fuel low-thrust trajectories. Journal of
Guidance, Control, and Dynamics 39, 2500–2511. doi:10.2514/1.g000379.

94

Taheri, E., Li, N.I., Kolmanovsky, I., 2017. Co-state initialization for the
minimum-time low-thrust trajectory optimization. Advances in Space Re-
search 59, 2360–2373. doi:10.1016/j.asr.2017.02.010.

Tam, M., Lightsey, E.G., 2016. Constrained spacecraft reorientation us-
ing mixed integer convex programming. Acta Astronautica 127, 31–40.
doi:10.1016/j.actaastro.2016.04.003.

Tang, G., Jiang, F., Li, J., 2018.

low-thrust trajectory
optimization using indirect method and successive convex programming.
IEEE Transactions on Aerospace and Electronic Systems 54, 2053–2066.
doi:10.1109/taes.2018.2803558.

Fuel-optimal

Tassa, Y., Mansard, N., Todorov, E., 2014. Control-limited diﬀerential dynamic
programming, in: 2014 IEEE International Conference on Robotics and Au-
tomation (ICRA), IEEE. doi:10.1109/icra.2014.6907001.

Tavernini, L., 1987. Diﬀerential automata and their discrete simulators. Nonlin-
ear Analysis: Theory, Methods & Applications 11, 665–683. doi:10.1016/0362-
546x(87)90034-4.

Tewari, A., 2011. Automatic Control of Atmospheric and Space Flight Vehicles.

Birkh¨auser Boston. doi:10.1007/978-0-8176-4864-0.

Tian, B., Zong, Q., 2011. Optimal guidance for reentry vehicles based on in-
direct legendre pseudospectral method. Acta Astronautica 68, 1176–1184.
doi:10.1016/j.actaastro.2010.10.010.

Tillerson, M.,

Inalhan, G., How, J.P., 2002.

Co-ordination and con-
trol of distributed spacecraft systems using convex optimization tech-
niques. International Journal of Robust and Nonlinear Control 12, 207–242.
doi:10.1002/rnc.683.

Topcu, U., Casoliva, J., Mease, K., 2005. Fuel eﬃcient powered descent guid-
ance for Mars landing, in: AIAA Guidance, Navigation, and Control Con-
ference and Exhibit, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2005-6286.

Topcu, U., Casoliva, J., Mease, K.D., 2007. Minimum-fuel powered descent
for Mars pinpoint landing. Journal of Spacecraft and Rockets 44, 324–331.
doi:10.2514/1.25023.

Tr´elat, E., 2012. Optimal control and applications to aerospace: Some results
and challenges. Journal of Optimization Theory and Applications 154, 713–
758. doi:10.1007/s10957-012-0050-5.

Tsiotras, P., Mesbahi, M., 2017. Toward an algorithmic control theory. Journal
of Guidance, Control, and Dynamics 40, 194–196. doi:10.2514/1.g002754.

95

Vazquez, R., Gavilan, F., Camacho, E., 2017. Pulse-width predictive control for
LTV systems with application to spacecraft rendezvous. Control Engineering
Practice 60, 199–210. doi:10.1016/j.conengprac.2016.06.017.

Vazquez, R., Gavilan, F., Camacho, E.F., 2011. Trajectory planning for space-
craft rendezvous with on/oﬀ thrusters. IFAC Proceedings Volumes 44, 8473–
8478. doi:10.3182/20110828-6-it-1002.02445.

Vazquez, R., Gavilan, F., Camacho, E.F., 2014. Trajectory planning for space-
craft rendezvous in elliptical orbits with on/oﬀ thrusters. IFAC Proceedings
Volumes 47, 9703–9708. doi:10.3182/20140824-6-za-1003.02197.

Vazquez, R., Gavilan, F., Camacho, E.F., 2015. Model predictive control
IFAC-

for spacecraft rendezvous in elliptical orbits with on/oﬀ thrusters.
PapersOnLine 48, 251–256. doi:10.1016/j.ifacol.2015.08.092.

Ventura, J., Ciarci`a, M., Romano, M., Walter, U., 2017. Fast and near-optimal
guidance for docking to uncontrolled spacecraft. Journal of Guidance, Control,
and Dynamics 40, 3138–3154. doi:10.2514/1.g001843.

Volpe, R., Circi, C., 2019. Optical-aided, autonomous and optimal space ren-
dezvous with a non-cooperative target. Acta Astronautica 157, 528–540.
doi:10.1016/j.actaastro.2019.01.020.

W¨achter, A., Biegler, L.T., 2005. On the implementation of an interior-point
ﬁlter line-search algorithm for large-scale nonlinear programming. Mathemat-
ical Programming 106, 25–57. doi:10.1007/s10107-004-0559-y.

Walsh, A., Forbes, J.R., 2018. Constrained attitude control on SO(3) via
semideﬁnite programming. Journal of Guidance, Control, and Dynamics 41,
2483–2488. doi:10.2514/1.g003259.

Wan, C., Dai, R., Lu, P., 2019. Alternating minimization algorithm for polyno-
mial optimal control problems. Journal of Guidance, Control, and Dynamics
42, 723–736. doi:10.2514/1.g003766.

Wang, J., Cui, N., 2018. A pseudospectral-convex optimization algorithm
for rocket landing guidance,
in: 2018 AIAA Guidance, Navigation, and
Control Conference, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2018-1871.

Wang, J., Cui, N., Wei, C., 2019a. Optimal rocket landing guidance using convex
optimization and model predictive control. Journal of Guidance, Control, and
Dynamics 42, 1078–1092. doi:10.2514/1.g003518.

Wang, J., Cui, N., Wei, C., 2019b. Rapid trajectory optimization for hypersonic
entry using a pseudospectral-convex algorithm. Proceedings of the Institution
of Mechanical Engineers, Part G: Journal of Aerospace Engineering 233, 5227–
5238. doi:10.1177/0954410019840839.

96

Wang, X., Wang, Z., Zhang, Y., 2018. Model predictive control to autonomously
approach a failed spacecraft. International Journal of Aerospace Engineering
2018, 1–18. doi:10.1155/2018/7428535.

Wang, Z., 2019a. Maximum-normal-load entry trajectory optimization for hy-
personic glide vehicles, in: AIAA Scitech 2019 Forum, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2019-0262.

Wang, Z., 2019b. Optimal trajectories and normal load analysis of hypersonic
glide vehicles via convex optimization. Aerospace Science and Technology 87,
357–368. doi:10.1016/j.ast.2019.03.002.

Wang, Z., Grant, M.J., 2017. Constrained trajectory optimization for planetary
entry via sequential convex programming. Journal of Guidance, Control, and
Dynamics 40, 2603–2615. doi:10.2514/1.g002150.

Wang, Z., Grant, M.J., 2018a. Autonomous entry guidance for hypersonic vehi-
cles by convex optimization. Journal of Spacecraft and Rockets 55, 993–1006.
doi:10.2514/1.a34102.

Wang, Z., Grant, M.J., 2018b. Minimum-fuel low-thrust transfers for spacecraft:
A convex approach. IEEE Transactions on Aerospace and Electronic Systems
54, 2274–2290. doi:10.1109/taes.2018.2812558.

Wang, Z., Grant, M.J., 2018c. Optimization of minimum-time low-thrust trans-
fers using convex programming. Journal of Spacecraft and Rockets 55, 586–
598. doi:10.2514/1.a33995.

Wang, Z., Grant, M.J., 2019.

Improved sequential convex programming al-
gorithms for entry trajectory optimization, in: AIAA Scitech 2019 Forum,
American Institute of Aeronautics and Astronautics. doi:10.2514/6.2019-
0667.

Watson, L.T., 2002.

Probability-one homotopies in computational sci-
ence. Journal of Computational and Applied Mathematics 140, 785–807.
doi:10.1016/s0377-0427(01)00473-3.

Way, D.W., Powell, R.W., Chen, A., Steltzner, A.D., San Mart´ın, A.M.,
Burkhart, P.D., Mendeck, G.F., 2007. Mars Science Laboratory: Entry, de-
scent, and landing system performance, in: 2007 IEEE Aerospace Conference,
IEEE. doi:10.1109/aero.2007.352821.

Weiss, A., Baldwin, M., Erwin, R.S., Kolmanovsky, I., 2015a. Model predictive
control for spacecraft rendezvous and docking: Strategies for handling con-
straints and case studies. IEEE Transactions on Control Systems Technology
23, 1638–1647. doi:10.1109/tcst.2014.2379639.

Weiss, A., Kolmanovsky, I., Baldwin, M., Erwin, R.S., 2012. Model predictive
control of three dimensional spacecraft relative motion, in: 2012 American
Control Conference (ACC), IEEE. doi:10.1109/acc.2012.6314862.

97

Weiss, A., Petersen, C., Baldwin, M., Erwin, R.S., Kolmanovsky, I., 2015b.
Safe positively invariant sets for spacecraft obstacle avoidance. Journal of
Guidance, Control, and Dynamics 38, 720–732. doi:10.2514/1.g000115.

Werner, R., Scheeres, D., 1997. Exterior gravitation of a polyhedron derived
and compared with harmonic and mascon gravitation representations of as-
teroid 4769 Castalia. Celestial Mechanics and Dynamical Astronomy 65.
doi:10.1007/bf00053511.

Whiﬀen, G., 2006. Mystic: Implementation of the static dynamic optimal con-
trol algorithm for high-ﬁdelity, low-thrust trajectory design, in: AIAA/AAS
Astrodynamics Specialist Conference and Exhibit, American Institute of
Aeronautics and Astronautics. doi:10.2514/6.2006-6741.

Whiﬀen, G.J., Sims, J.A., 2001. Application of a novel optimal control al-
gorithm to low-thrust trajectory optimization, in: 2001 AAS/AIAA Space
Flight Mechanics Meeting, pp. 2–6.

Woﬃnden, D., Robinson, S., Williams, J., Putnam, Z.R., 2019. Linear co-
variance analysis techniques to generate navigation and sensor requirements
for the safe and precise landing integrated capabilities evolution (SPLICE)
project, in: AIAA Scitech 2019 Forum, American Institute of Aeronautics
and Astronautics. doi:10.2514/6.2019-0662.

Woﬃnden, D.C., Geller, D.K., 2007. Navigating the road to autonomous
Journal of Spacecraft and Rockets 44, 898–909.

orbital rendezvous.
doi:10.2514/1.30734.

Wolf, A.A., Casoliva, J., Manrique, J.B., A¸cıkme¸se, B., Ploen, S., 2012. Improv-
ing the landing precision of an MSL-class vehicle, in: 2012 IEEE Aerospace
Conference, IEEE. doi:10.1109/aero.2012.6187005.

Wright, M.H., 2005. The interior-point revolution in optimization: History,
recent developments, and lasting consequences. Bull. Amer. Math. Soc. (N.S)
42, 39–56.

Wright, M.H., 2011. Fast Times in Linear Programming: Early Success, Rev-
olutions, and Mysteries. URL: https://sites.math.washington.edu/mac/
talks/20111021wright.pdf. accessed: 20/03/2020.

Wu, C., Han, X., 2019. Energy-optimal spacecraft attitude maneuver path-
planning under complex constraints. Acta Astronautica 157, 415–424.
doi:10.1016/j.actaastro.2018.12.028.

Wu, C., Xu, R., Zhu, S., Cui, P., 2017. Time-optimal spacecraft attitude ma-
neuver path planning under boundary and pointing constraints. Acta Astro-
nautica 137, 128–137. doi:10.1016/j.actaastro.2017.04.004.

98

Xiaojun, C., Hutao, C., Pingyuan, C., Rui, X., 2010. Large angular autonomous
attitude maneuver of deep spacecraft using pseudospectral method, in: 2010
3rd International Symposium on Systems and Control in Aeronautics and
Astronautics, IEEE. doi:10.1109/isscaa.2010.5632498.

Xie, Z., Liu, C.K., Hauser, K., 2017. Diﬀerential dynamic programming with
nonlinear constraints, in: 2017 IEEE International Conference on Robotics
and Automation (ICRA), IEEE. doi:10.1109/icra.2017.7989086.

Xu, Z., Chen, X., Huang, Y., Bai, Y., Chen, Q., 2018.

Collision
prediction and avoidance for satellite ultra-close relative motion with
zonotope-based reachable sets. Proceedings of the Institution of Mechan-
ical Engineers, Part G: Journal of Aerospace Engineering 233, 3920–3937.
doi:10.1177/0954410018810255.

Xue, S., Lu, P., 2010. Constrained predictor-corrector entry guidance. Journal
of Guidance, Control, and Dynamics 33, 1273–1281. doi:10.2514/1.49557.

Yamanaka, K., Ankersen, F., 2002. New state transition matrix for relative
motion on an arbitrary elliptical orbit. Journal of Guidance, Control, and
Dynamics 25, 60–66. doi:10.2514/2.4875.

Yang, H., Bai, X., Baoyin, H., 2017. Rapid generation of time-optimal tra-
jectories for asteroid landing via convex optimization. Journal of Guidance,
Control, and Dynamics 40, 628–641. doi:10.2514/1.g002170.

Yang, H., Baoyin, H., 2015. Fuel-optimal control for soft landing on an irregular
asteroid. IEEE Transactions on Aerospace and Electronic Systems 51, 1688–
1697. doi:10.1109/taes.2015.140295.

You, S., Wan, C., Dai, R., Lu, P., Rea, J.R., 2020a. Learning-based optimal
control for planetary entry, powered descent and landing guidance, in: AIAA
Scitech 2020 Forum, American Institute of Aeronautics and Astronautics.
doi:10.2514/6.2020-0849.

You, S., Wan, C., Dai, R., Rea, J.R., 2020b. Real-time optimal control via deep
neural networks: Study on landing problems. Journal of Guidance, Control,
and Dynamics Accepted.

Zagaris, C., Park, H., Virgili-Llop, J., Zappulla, R., Romano, M., Kolmanovsky,
I., 2018. Model predictive control of spacecraft relative motion with convexi-
ﬁed keep-out-zone constraints. Journal of Guidance, Control, and Dynamics
41, 2054–2062. doi:10.2514/1.g003549.

Zanelli, A., Domahidi, A., Jerez, J., Morari, M., 2017. FORCES NLP:
An eﬃcient implementation of interior-point methods for multistage non-
linear nonconvex programs.
International Journal of Control 93, 13–29.
doi:10.1080/00207179.2017.1316017.

99

Zarchan, P. (Ed.), 2019. Tactical and Strategic Missile Guidance, Seventh
Edition - SET. American Institute of Aeronautics and Astronautics, Inc.
doi:10.2514/4.105845.

Zhang, J., Zhao, S., Zhang, Y., Li, Y., 2015a. Optimal planning approaches
with multiple impulses for rendezvous based on hybrid genetic algorithm and
control method. Advances in Mechanical Engineering 7, 168781401557378.
doi:10.1177/1687814015573783.

Zhang, K., Yang, S., Xiong, F., 2019. Rapid ascent trajectory optimization for
guided rockets via sequential convex programming. Proceedings of the In-
stitution of Mechanical Engineers, Part G: Journal of Aerospace Engineering
233, 4800–4809. doi:10.1177/0954410019830268.

Zhang, S.J., A¸cıkme¸se, B., Swei, S.S.M., Prabhu, D., 2015b. Convex program-
ming approach to real-time trajectory optimization for mars aerocapture, in:
2015 IEEE Aerospace Conference, IEEE. doi:10.1109/aero.2015.7119111.

Zhang, Y., Guo, Y., Ma, G., Zeng, T., 2017. Collision avoidance ZEM/ZEV
optimal feedback guidance for powered descent phase of landing on Mars.
Advances in Space Research 59, 1514–1525. doi:10.1016/j.asr.2016.12.040.

Zhang, Y., Huang, J., Cui, H., 2020. Trajectory optimization for asteroid land-
ing with two-phase free ﬁnal time. Advances in Space Research 65, 1210–1224.
doi:10.1016/j.asr.2019.11.031.

Zhao, D.J., Song, Z.Y., 2017. Reentry trajectory optimization with waypoint
and no-ﬂy zone constraints using multiphase convex programming. Acta As-
tronautica 137, 60–69. doi:10.1016/j.actaastro.2017.04.013.

Zhao, J., Shang, T., 2018. Dynamic optimization using local collocation
methods and improved multiresolution technique. Applied Sciences 8, 1680.
doi:10.3390/app8091680.

Zhengxiang, S., Tao, C., Songyan, W., Ming, Y., 2018. Convex method for
ascent trajectory optimization using iterative narrowing trust region, in: 2018
IEEE CSAA Guidance, Navigation and Control Conference (CGNCC), IEEE.
doi:10.1109/gncc42960.2018.9019086.

Zhou, D., Zhang, Y., Li, S., 2019. Receding horizon guidance and control
using sequential convex programming for spacecraft 6-DOF close proximity.
Aerospace Science and Technology 87, 459–477. doi:10.1016/j.ast.2019.02.041.

Zhu, S., Sun, R., Wang, J., Wang, J., Shao, X., 2018. Robust model predictive
control for multi-step short range spacecraft rendezvous. Advances in Space
Research 62, 111–126. doi:10.1016/j.asr.2018.03.037.

Zimmer, S., Ocampo, C., Bishop, R., 2010. Reducing orbit covariance for con-
IEEE Transactions on Aerospace and

tinuous thrust spacecraft transfers.
Electronic Systems 46, 771–791. doi:10.1109/taes.2010.5461656.

100

