9
1
0
2

t
c
O
2
2

]
S
D
.
s
c
[

1
v
2
4
1
1
1
.
0
1
9
1
:
v
i
X
r
a

Tractable Minor-free Generalization of Planar Zero-field Ising Models

Tractable Minor-free Generalization of Planar Zero-ﬁeld
Ising Models

Valerii Likhosherstov
Department of Engineering
University of Cambridge
Cambridge, UK

Yury Maximov
Theoretical Division and Center for Nonlinear Studies
Los Alamos National Laboratory
Los Alamos, NM, USA
Michael Chertkov
Graduate Program in Applied Mathematics
University of Arizona
Tucson, AZ, USA

Editor:

vl304@cam.ac.uk

yury@lanl.gov

chertkov@math.arizona.edu

Abstract

We present a new family of zero-ﬁeld Ising models over N binary variables/spins obtained
by consecutive “gluing” of planar and O(1)-sized components and subsets of at most three
vertices into a tree. The polynomial time algorithm of the dynamic programming type for
solving exact inference (computing partition function) and exact sampling (generating i.i.d.
samples) consists in a sequential application of an eﬃcient (for planar) or brute-force (for
O(1)-sized) inference and sampling to the components as a black box. To illustrate utility
of the new family of tractable graphical models, we ﬁrst build a polynomial algorithm
for inference and sampling of zero-ﬁeld Ising models over K33-minor-free topologies and
over K5-minor-free topologies—both are extensions of the planar zero-ﬁeld Ising models—
which are neither genus- no treewidth-bounded. Second, we demonstrate empirically an
improvement in the approximation quality of the NP-hard problem of inference over the
square-grid Ising model in a node-dependent non-zero “magnetic” ﬁeld.

Keywords: Graphical model, Ising model, partition function, statistical inference.

1. Introduction

Let G = (V (G), E(G)) be an undirected graph with a set of vertices V (G) and a set
of normal edges E(G) ⊆ (cid:0)V (G)
(cid:1) (no loops or multiple edges). We discuss Ising models
which associate the following probability to each random N (cid:44) |V (G)|-dimensional binary
variable/spin conﬁguration X ∈ {±1}N :

2

P(X) (cid:44) W(X)

Z

,

1

(1)

 
 
 
 
 
 
Likhosherstov, Maximov and Chertkov

where

W(X) (cid:44) exp

(cid:18) (cid:88)

µvxv +

(cid:88)

(cid:19)

Jexvxw

and Z (cid:44) (cid:88)

W(X).

(2)

v∈V (G)

e={v,w}∈E(G)

X∈{±1}N

Here, µ = (µv, v ∈ V (G)) is a vector of (magnetic) ﬁelds, J = (Je, e ∈ E(G)) is a vector
of the (pairwise) spin interactions, and the normalization constant Z, which is deﬁned as a
sum over 2N spin conﬁgurations, is referred to as the partition function. Given the model
speciﬁcation I = (cid:104)G, µ, J(cid:105), we address the tasks of ﬁnding the exact value of Z (inference)
and drawing exact samples with the probability (1).

Related work.

It has been known since the seminal contributions of Fisher (1966)
and Kasteleyn (1963) that computation of the partition function in the zero-ﬁeld (µ = 0)
Ising model over a planar graph and sampling from the respective probability distribution
are both tractable, that is, these are tasks of complexity polynomial in N . As shown by
Barahona (1982), even when G is planar or when µ = 0 (zero ﬁeld ), the positive results are
hard to generalize—both addition of the non-zero (magnetic) ﬁeld and the extension beyond
planar graphs make the computation of the partition function NP-hard. These results are
also consistent with the statement from Jerrum and Sinclair (1993) that computation of
the partition function of the zero-ﬁeld Ising model is a #P-complete problem, even in the
ferromagnetic case when all components of J are positive. Therefore, describing (cid:104)G, µ, J(cid:105)
families for which computations of the partition function and sampling are tractable remains
an open question.

The simplest tractable (i.e., inference and sampling are polynomial in N ) example is
one when G is a tree, and the corresponding inference algorithm, known as dynamic pro-
gramming and/or belief propagation, has a long history in physics (Bethe, 1935; Peierls,
1936), optimal control (Bellman, 1952), information theory (Gallager, 1963), and artiﬁcial
intelligence (Pearl, 1982). Extension to the case when G is a tree of (t + 1)-sized cliques
“glued” together, or more formally when G is of a treewidth t, is known as the junction tree
algorithm (Verner Jensen et al., 1990), which has complexity of counting and sampling that
grow exponentially with t.

Another insight originates from the foundational statistical physics literature of the last
century related to the zero-ﬁeld version of (1), i.e. when µ = 0, over planar G. Onsager
(1944) found a closed-form solution of (1) in the case of a homogeneous Ising model over
an inﬁnite two-dimensional square grid. Kac and Ward (1952) reduced the inference of (1)
over a ﬁnite square lattice to computing a determinant. Kasteleyn (1963) generalized this
result to an arbitrary (ﬁnite) planar graph. Kasteleyn’s approach consists of expanding each
vertex of G into a gadget and reducing the Ising model inference to the problem of counting
perfect matchings over the expanded graph. Kasteleyn’s construction was simpliﬁed by
3
Fisher (1966). The tightest running time estimate for Kasteleyn’s method gives O(N
2 ).
Kasteleyn conjectured, which was later proven by Gallucio and Loebl (1999), that the
approach extends to the case of the zero-ﬁeld Ising model over graphs embedded in a
surface of genus g with a multiplicative O(4g) penalty.

A parallel way of reducing the planar zero-ﬁeld Ising model to a perfect matching count-
ing problem consists of constructing the so-called expanded dual graph (Bieche et al., 1980;
Barahona, 1982; Schraudolph and Kamenetsky, 2009). This approach is advantageous be-
cause using the expanded dual graph allows a one-to-one correspondence between spin

2

Tractable Minor-free Generalization of Planar Zero-field Ising Models

conﬁgurations and perfect matchings. An extra advantage of this approach is that the re-
duction allows us to develop an exact eﬃcient sampling. Based on linear algebra and planar
separator theory (Lipton and Tarjan, 1979), Wilson (1997) introduced an algorithm that
3
allows to sample perfect matchings over planar graphs in O(N
2 ) time. The algorithms were
implemented by Thomas and Middleton (2009, 2013) for the Ising model sampling, however,
the implementation was limited to only the special case of a square lattice. Thomas and
Middleton (2009) also suggested a simple extension of the Wilson’s algorithm to the case
of bounded genus graphs, again with the 4g factor in complexity. Notice that imposing the
zero ﬁeld condition is critical, as otherwise, the Ising model over a planar graph is NP-hard
(Barahona, 1982). On the other hand, even in the case of zero magnetic ﬁeld the Ising
models over general graphs are diﬃcult (Barahona, 1982).

Wagner’s theorem (Diestel, 2006, chap. 4.4) states that G is planar if and only if it
does not have K33 and K5 as minors (Figure 2(b)). Both families of K33-free and K5-free
graphs generalize and extend the family of planar graphs, since K33 (K5) is nonplanar but
K5-free (K33-free). Both families are genus-unbounded, since a disconnected set of g K33
(K5) graphs has a genus of g (Battle et al., 1962) and is K5-free (K33-free). Moreover, both
families are treewidth-unbounded, since planar square grid of size t × t has a treewidth of
t (Bodlaender, 1998). Therefore, the question of interest becomes generalizing tractable
inference and sampling in the zero-ﬁeld Ising model over a K33-free or K5-free graph.

To extend tractability of the special cases as an approximation to a more general class
of inference problems it is natural to consider a family of tractable spanning subgraphs and
then exploit the fact that the log-partition function log Z(µ, J) is convex and hence can be
upper-bounded by a linear combination of tractable partition functions. Tree-reweighted
(TRW) approximation (Wainwright et al., 2005) was the ﬁrst example in the literature
where such upper-bounding was constructed with the trees used as a basic element. The
upper-bound TRW approach (Wainwright et al., 2005) was extended by Globerson and
Jaakkola (2007), where utilizing a planar spanning subgraph (and not a tree) as the basic
(tractable) element was suggested.

Contribution. In this manuscript, we, ﬁrst of all, compile results that were scattered
3
over the literature on (at least) O(N
2 )-eﬃcient exact sampling and exact inference in the
zero-ﬁeld Ising model over planar graphs. To the best of our knowledge, we are the ﬁrst to
present a complete and mathematically accurate description of the tight asymptotic bounds.
Then, we describe a new family of zero-ﬁeld Ising models on graphs that are more
general than planar. Given a tree decomposition of such graphs into planar and “small”
(O(1)-sized) components “glued” together along sets of at most three vertices, inference and
sampling over the new family of models is of polynomial time. We further show that all the
K33-free or K5-free graphs are included in this family and, moreover, their aforementioned
3
tree decomposition can be constructed with O(N ) eﬀorts. This allows us to prove an O(N
2 )
upper bound on run time complexity for exact inference and exact sampling of the K5-free
or K33-free zero-ﬁeld Ising models.

Finally, we show how the newly introduced tractable family of the zero-ﬁeld Ising models
allows extension of the approach of Globerson and Jaakkola (2007) resulting in an upper-
bound for log-partition function over general Ising models, non-planar and including non-
zero magnetic ﬁeld. Instead of using planar spanning subgraphs as in the work of Globerson
and Jaakkola (2007), we use more general (non-planar) basic tractable elements. Using

3

Likhosherstov, Maximov and Chertkov

the methodology of Globerson and Jaakkola (2007), we illustrate the approach through
experiments with a nonzero-ﬁeld Ising model on a square grid for which exact inference is
known to be NP-hard (Barahona, 1982).

Relation to other algorithms. The result presented in this manuscript is similar
to the approach used to count perfect matchings in K5-free graphs (Curticapean, 2014;
Straub et al., 2014). However, we do not use a transition to perfect matching counting as
it is typically done in studies of zero-ﬁeld Ising models over planar graphs (Fisher, 1966;
Kasteleyn, 1963; Thomas and Middleton, 2009). Presumably, a direct transition to perfect
matching counting can be done via a construction of an expanded graph in the fashion
of Fisher (1966); Kasteleyn (1963). However, this results in a size increase and, what’s
more important, there is no direct correspondence between spin conﬁgurations and perfect
matchings, therefore exact sampling is not supported.

Structure. Section 2 states the problems of exact inference and exact sampling for pla-
nar zero-ﬁeld Ising models. In Section 3 we introduce the concept of c-nice decomposition of
graphs, and then formulate and prove tractability of the zero-ﬁeld Ising models over graphs
which are c-nice decomposible. Section 4 is devoted to application of the algorithm intro-
duced in the preceding Section to examples of the zero-ﬁeld Ising model over the K33-free
(but possibly K − 5 containing) and K5-free (but possibly K3,3 containing) graphs. Section
5 presents an empirical application of the newly introduced family of tractable models to an
upper-bounding log-partition function of a broader family of intractable graphical models
(planar nonzero-ﬁeld Ising models). Section 6 is reserved for conclusions.

Throughout the text, we use common graph-theoretic notations and deﬁnitions (Diestel,

2006) and also restate the most important concepts brieﬂy.

2. Planar Topology

In this Section, we consider the special I = (cid:104)G, 0, J(cid:105) case of the zero-ﬁeld Ising model over a
planar graph and introduce transition from I to the perfect matching model over a diﬀerent
(derived from G) planar graph. One-to-one correspondence between a spin conﬁguration
over the Ising model and corresponding perfect matching conﬁguration over the derived
graph translates the exact inference and exact sampling over I to the corresponding exact
inference and exact sampling in the derived perfect matching model.

2.1 Expanded Dual Graph

The graph is planar when it can be drawn on (embedded into) a plane without edge inter-
sections. We assume that the planar embedding of G is given (and if not, it can be found
in O(N ) time according to Boyer and Myrvold (2004)). In this Section we follow in our
constructions of Schraudolph and Kamenetsky (2009).

Let us, ﬁrst, triangulate G by triangulating one after another each face of the original
graph and then setting Je = 0 for all the newly added edges e ∈ E(G). Complexity of
the triangulation is O(N ), see Schraudolph and Kamenetsky (2009) for an example. (For
convenience, we will then use the same notation for the derived, triangulated graph as for
the original graph.)

Second, construct a new graph, GF , where each vertex f of V (GF ) is a face of G, and
there is an edge e = {f1, f2} in E(GF ) if and only if f1 and f2 share an edge in G. By

4

Tractable Minor-free Generalization of Planar Zero-field Ising Models

(a)

(b)

Figure 1: (a) A fragment of G’s embedding after triangulation (black), expanded dual graph
G∗ (red). (b) Possible X conﬁgurations and corresponding M (X) (wavy lines)
on a single face of G. Rotation symmetric and reverse sign conﬁgurations are
omitted.

construction, GF is planar, and it is embedded in the same plane as G, so that each new
edge e = {f1, f2} ∈ E(GF ) intersects the respective old edge. Call GF a dual graph of G.
Since G is triangulated, each f ∈ V (GF ) has degree 3 in GF .

Third, obtain a planar graph G∗ and its embedding from GF by substituting each
f ∈ V (GF ) by a K3 triangle so that each vertex of the triangle is incident to one edge,
going outside the triangle (see Figure 1(a) for illustration). Call G∗ the expanded dual
graph of G.

I . The set E(G∗) \ E∗

Newly introduced triangles of G∗, substituting GF ’s vertices, are called Fisher cities
(Fisher, 1966). We refer to edges outside triangles as intercity edges and denote their set
C. Notice that e∗ ∈ E∗
as E∗
I
intersects exactly one e ∈ E(G) and vice versa, which deﬁnes a bijection between E∗
I and
E(G); denote it by g : E∗
I | = |E(G)| ≤ 3N − 6, where N is the
size (cardinality) of G.

I of Fisher city edges is denoted as E∗

I → E(G). Observe that |E∗

A set E(cid:48) ⊆ E(G) is called a perfect matching (PM) of G, if edges of E(cid:48) are disjoint and
their union equals V . Let PM(G) denote the set of all Perfect Matchings (PM) of G. Notice
that E∗
I | = O(N ). Since G∗ is planar, one also
ﬁnds that |E(G∗)| = O(N ). Constructing G∗ requires O(N ) steps.

I is a PM of G∗, and thus |V (G∗)| = 2|E∗

2.2 Perfect Matching (PM) Model

For every spin conﬁguration X ∈ {±1}N , let I(X) be a set {e ∈ E∗
I | g(e) = {v, w}, xv =
xw}. Each Fisher city is incident to an odd number of edges in I(X). Thus, I(X) can
be uniquely completed to a PM by edges from E∗
C. Denote the resulting PM by M (X) ∈
PM(G∗) (see Figure 1(b) for an illustration). Let C+ = {+1} × {±1}N −1.

Lemma 1 M is a bijection between C+ and PM(G∗).

5

+++++-Likhosherstov, Maximov and Chertkov

Deﬁne weights on G∗ according to

∀e∗ ∈ E(G∗) : ce∗ (cid:44)

(cid:40)

exp(2Jg(e∗)),
1,

e∗ ∈ E∗
I
e∗ ∈ E∗
C

Lemma 2 For E(cid:48) ∈ PM(G∗) holds

P(M (X) = E(cid:48)) =

1
Z∗

(cid:89)

ce∗,

e∗∈E(cid:48)

where

Z∗ (cid:44) (cid:88)

(cid:89)

ce∗ =

E(cid:48)∈PM(G∗)

e∗∈E(cid:48)

1
2

Z exp





(cid:88)



Je



e∈E(G)

is the partition function of the PM distribution (PM model) deﬁned by (4).

(3)

(4)

(5)

See proofs of the Lemma 1 and Lemma 2 in Appendix A. Second transition of (5)
reduces the problem of computing Z to computing Z∗. Furthermore, only two equiprobable
spin conﬁgurations X (cid:48) and −X (cid:48) (one of which is in C+) correspond to E(cid:48), and they can be
recovered from E(cid:48) in O(N ) steps, thus resulting in the statement that one samples from I
if sampling from (4) is known.

The PM model can be deﬁned for an arbitrary graph ˆG, ˆN = |V ( ˆG)| with positive
e∈ ˆM ce. Our

weights ce, e ∈ E(cid:48), as a probability distribution over ˆM ∈ PM( ˆG): P( ˆM ) ∝ (cid:81)
subsequent derivations are based on the following

Theorem 3 Given the PM model deﬁned on planar graph ˆG of size ˆN with positive edge
3
weights {ce}, one can ﬁnd its partition function and sample from it in O( ˆN
2 ) time (steps).

Algorithms, constructively proving the theorem, are directly inferred from Wilson (1997);
Thomas and Middleton (2009), with minor changes/generalizations. We describe the algo-
rithms in Appendix B.

Corollary 4 Exact inference and exact sampling of the PM model over G∗ (and, hence,
zero-ﬁeld Ising model I over the planar graph G) take O(N

3
2 ) time.

3. c-nice Decomposition of the Topology

We commence by introducing the concept of c-nice decomposition of a graph and stating
the main result on the tractability of the new family of Ising models in Subsection 3.1.
Then we proceed building a helpful “conditioning” machinery in Subsection 3.2 and subse-
quently describing algorithms for the the eﬃcient exact inference (Subsection 3.3) and exact
sampling (Subsection 3.4), therefore proving the aforementioned statement constructively.

6

Tractable Minor-free Generalization of Planar Zero-field Ising Models

3.1 Decomposition tree and the key result (of the manuscript)

We mainly follow Curticapean (2014); Reed and Li (2008) in the deﬁnition of the decompo-
sition tree and its properties suﬃcient for our goals. (Let us also remind that we consider
here graphs containing no self-loops or multiple edges.)

Graph G(cid:48) is a subgraph of G whenever V (G(cid:48)) ⊆ V (G) and E(G(cid:48)) ⊆ E(G). For two
subgraphs G(cid:48) and G(cid:48)(cid:48) of G, let G(cid:48) ∪ G(cid:48)(cid:48) = (V (G(cid:48)) ∪ V (G(cid:48)(cid:48)), E(G(cid:48)) ∪ E(G(cid:48)(cid:48))) (graph union).
Consider a tree decomposition T = (cid:104)T, G(cid:105) of a graph G into a set of subgraphs G (cid:44) {Gt}
of G, where t are nodes of a tree T , that is, t ∈ V (T ). One of the nodes of the tree, r ∈ V (T ),
is selected as the root. For each node t ∈ V (T ), its parent is the ﬁrst node on the unique
path from t to r. G≤t denotes the graph union of Gt(cid:48) for all the nodes t(cid:48) in V (T ) that are
t or its descendants. G(cid:2)t denotes the graph union of Gt(cid:48) for all the nodes t(cid:48) in V (T ) that
are neither t nor descendants of t. For two neighboring nodes of the tree, t, p ∈ V (T ) and
{t, p} ∈ E(T ), the set of overlapping vertices of Gt and Gp, K (cid:44) V (Gt) ∩ V (Gp), is called
an attachment set of t or p. If p is a parent of t, then K is a navel of t. We assume that
the navel of the root is empty.

T is a c-nice decomposition of G if the following requirements are satisﬁed:

1. ∀t ∈ V (T ) with a navel K, it holds that K = V (G≤t) ∩ V (G(cid:2)t).

2. Every attachment set K is of size 0, 1, 2, or 3.

3. ∀t ∈ V (T ), either |V (Gt)| ≤ c or Gt is planar.

4. If t ∈ V (T ) is such that |V (Gt)| > c, addition of all edges of type e = {v, w}, where
v, w belong to the same attachment set of t (if e is not yet in E(Gt)) does not destroy
planarity of Gt.

Stating it informally, the c-nice decomposition of G is a tree decomposition of G into
planar and “small” (of size at most c) subgraphs Gt, “glued” via subsets of at most three
vertices of G. Figure 2(a) shows an example of a c-nice decomposition with c = 8. There
are various similar ways to deﬁne a graph decomposition in literature, and the one pre-
sented above is customized (to our purposes) to include only properties signiﬁcant for our
consecutive analysis.

The remainder of this Section is devoted to a constructive proof of the following key

statement of the manuscript.

Theorem 5 Let I = (cid:104)G, 0, J(cid:105) be any zero-ﬁeld Ising model where there exists a c-nice
decomposition T of G, where c is an absolute constant. Then, there is an algorithm
which, given I, T as an input: (1) ﬁnds Z and (2) samples a conﬁguration from I in
time O( (cid:80)

3
2 ).

|V (Gt)|

t∈V (T )

3.2 Inference and sampling conditioned on 1, 2, or 3 vertices/spins

Before presenting the algorithm that proves Theorem 5 constructively, let us introduce the
auxiliary machinery of “conditioning”, which describes the partition function of a zero-ﬁeld
Ising model over a planar graph conditioned on 1, 2, or 3 spins. Consider a zero-ﬁeld Ising

7

Likhosherstov, Maximov and Chertkov

Figure 2: a) An exemplary graph G and its 8-nice decomposition T , where t ∈ {1, · · · , 7}
labels nodes of the decomposition tree T and node 4 is chosen as the root (r = 4).
Identical vertices of G in its subgraphs Gt are shown connected by dashed lines.
Navels of size 1, 2, and 3 are highlighted. Component G5 is nonplanar, and
G4 becomes nonplanar when all attachment edges are added (according to the
fourth item of the deﬁnition of the c-nice decomposition). G≤3 and G(cid:2)3 are shown
with dotted lines. Note that the decomposition is non-unique for the graph. For
instance, edges that belong to the attachment set can go to either of the two
subgraphs containing this set or even repeat in both. b) Minors K5 and K33 are
forbidden in the planar graphs. M¨obius ladder and its subgraphs are the only
nonplanar graphs allowed in the 8-nice decomposition of a K5-free graph. c) The
left panel is an example of conditioning on three vertices/spins in the center of
a graph. The right panel shows a modiﬁed graph where the three vertices (from
the left panel) are reduced to one vertex, then leading to a modiﬁcation of the
pairwise interactions within the associated zero-ﬁeld Ising model over the reduced
graph. d) Example of a graph that contains K5 as a minor: by contracting the
highlighted groups of vertices and deleting the remaining vertices, one arrives at
the K5 graph.

model I = (cid:104)G, 0, J(cid:105) deﬁned over a planar graph G. We intend to use the algorithm for
eﬃcient inference and sampling of I as a black box in our subsequent derivations.

Let us now introduce the notion of conditioning. Consider a spin conﬁguration X ∈
{±1}N , a subset V (cid:48) = {v(1), . . . , v(ω)} ⊆ V (G), and deﬁne a condition S = {xv(1) =
s(1), . . . , xv(ω) = s(ω)} on V (cid:48), where s(1), . . . , s(ω) = ±1 are ﬁxed values. Conditional versions
of the probability distribution (1–2) and the conditional partition function become

, 1(X|S) (cid:44)

(cid:26) 1, xv(1) = s(1), . . . , xv(ω) = s(ω)

0,

otherwise

P(X|S) (cid:44) W(X) × 1(X|S)

Z|S
where Z|S (cid:44) (cid:88)

X∈{±1}N

W(X) × 1(X|S).

8

, (6)

(7)

++–+Tractable Minor-free Generalization of Planar Zero-field Ising Models

Notice that when ω = 0, S = {} and (6–7) is reduced to (1–2). The subset of V (G)
is connected whenever the subgraph, induced by this subset is connected. Inference and
sampling of I can be extended as follows (a formal proof can be found in the Appendix A).

Lemma 6 Given I = (cid:104)G, 0, J(cid:105) where G is planar and a condition S on a connected subset
V (cid:48) ⊆ V (G), |V (cid:48)| ≤ 3, computing the conditional partition function Z|S and sampling from
P(X|S) are tasks of O(N

3
2 ) complexity.

Intuitively, the conditioning algorithm proving the Lemma takes the subset of connected
vertices and “collapses” them into a single vertex. The graph remains planar and the task is
reduced to conditioning on one vertex, which is an elementary operation given the algorithm
from section 2. (See Figure 2(c) for an illustration.)

3.3 Inference algorithm

This subsection constructively proves the inference part of Theorem 5. For each t ∈ V (T ),
let I≤t (cid:44) (cid:104)G≤t, 0, {Je | e ∈ E(G≤t) ⊆ E(G)}(cid:105) denote a zero-ﬁeld Ising submodel induced
by G≤t. Denote the partition function and subvector of X related to I≤t as Z≤t and
X≤t (cid:44) {xv|v ∈ V (G≤t)}, respectively.

Further, let K be t’s navel and let S = {∀v ∈ K : xv = s(v)} denote some condition on
K. Recall that |K| ≤ 3. For each t, the algorithm computes conditional partition functions
Z≤t
|S for all choices of condition spin values {s(v) = ±1}. Each t is processed only when its
children have already been processed, so the algorithm starts at the leaf and ends at the
root. If r ∈ G(T ) is a root, its navel is empty and G≤r = G, hence Z = Z≤r
|{} is computed
after r’s processing.

Suppose all children of t, c1, ..., cm ∈ V (T ) with navels K1, ..., Km ⊆ V (Gt) have already
been processed, and now t itself is considered. Denote a spin conﬁguration on Gt as Yt (cid:44)
{yv = ±1 | v ∈ V (Gt)}. I≤c1, ..., I≤cm are I≤t’s submodels induced by G≤c1, ..., G≤cm, which
can only intersect at their navels in Gt. Based on this, one states the following dynamic
programming relation:

Z≤t

|S =

(cid:88)

1(Yt|S) exp





(cid:88)

Yt∈{±1}|V (Gt)|

e={v,w}∈E(Gt)



Jeyvyw

 ·

m
(cid:89)

i=1

Z≤ci
|Si[Yt].

(8)

Here, Si[Yt] denotes a condition {∀v ∈ Ki : xv = yv} on Ki. The goal is to eﬃciently
perform summation in (8). Let I (0), I (1), I (2), I (3) be a partition of {1, ..., m} by navel sizes.
Figure 3(a,b) illustrates inference in t.

1. Navels of size 0, 1. Notice that if i ∈ I (0), then Z≤ci

|{} = Z≤ci is constant, which was

computed before. The same is true for i ∈ I (1) and Z≤ci

|S(i)[Yt]

= 1

2 Z≤ci.

2. Navels of size 2. Let i ∈ I (2) denote Ki = {ui, qi} and simplify notation Z≤ci
y1,y2

xui =y1,xqi =y2 for convenience. Notice that Z≤ci
Z≤ci
zero-ﬁeld nature of I≤ci, one ﬁnds Z≤ci
one arrives at log Z≤ci
Bi (cid:44) log Z≤ci

|−1,−1 and Z≤ci
|Si[Yt] = Ai + Biyuiyqi, where Ai (cid:44) log Z≤ci

|+1,+1 = Z≤ci

|+1,+1 − log Z≤ci

|+1,−1.

(cid:44)
|Si[Yt] is strictly positive, and due to the
|−1,+1. Then,
|+1,−1 and

|+1,−1 = Z≤ci
|+1,+1 + log Z≤ci

9

Likhosherstov, Maximov and Chertkov

Figure 3: a) Example of inference at node t with children c1, c2, c3, c4. Navels K1 =
{u1, q1, h1}, K2 = {u2, q2, h2}, K3 = {u2, q2}, K4 = {u4}, and K = {u, q, h}
are highlighted. Fragments of I≤ci are shown with dotted lines. Here, I (0) =
∅, I (1) = {4}, I (2) = {3}, and I (3) = {1, 2}, indicating that one child is glued over
one node, one child is glued over two nodes, and two children are glued over three
nodes. b) “Aggregated” Ising model It and its pairwise interactions are shown.
Both c) and d) illustrate sampling over It. One sample spins in It conditioned
on S(t) and then repeats the procedure at the child nodes.

3. Navels of size 3. Let i ∈ I (3), and as above, denote Ki = {ui, qi, hi} and Z≤ci

(cid:44)

y1,y2,y3

Z≤ci
xui =y1,xqi =y2,xhi =y3.
Due to the zero-ﬁeld nature of I≤ci, it holds that Z≤ci
|−1,y2,y3
there are such Ai, Bi, Ci, Di that log Z≤ci
= Ai + Biy1y2 + Ciy1y3 + Diy2y3 for
|y1,y2,y3
all y1, y2, y3 = ±1, which is guaranteed since the following system of equations has a
solution:

. Observe that

= Z≤ci

|+1,y2,y3









log Z≤ci
log Z≤ci
log Z≤ci
log Z≤ci

|+1,+1,+1

|+1,+1,−1

|+1,−1,+1

|+1,−1,−1



=













+1 +1 +1 +1
+1 +1 −1 −1
+1 −1 +1 −1
+1 −1 −1 +1







×







.







Ai
Bi
Ci
Di

Considering three cases, one rewrites Eq. (8) as

Z≤t

|S = M ·

(cid:88)

Yt

1(Yt|S) exp

(cid:18) (cid:88)

(Ciyuiyhi + Diyqiyhi)

e={v,w}∈E(Gt)
(cid:19)
,

(cid:88)

+

i∈I (3)

Jeyvyw +

(cid:88)

Biyuiyqi

i∈I (2)∪I (3)

i∈I (0)∪I (1) Z≤ci(cid:1) · exp((cid:80)

where M (cid:44) 2−|I (1)| · (cid:0)(cid:81)
i∈I (2)∪I (3) Ai). The sum in Eq. (10) is simply
a conditional partition function of a zero-ﬁeld Ising model It deﬁned over a graph Gt with
pairwise interactions of I adjusted by the addition of Bi, Ci, and Di summands at the
appropriate navel edges (if a corresponding edge is not present in Gt, it has to be added). If
|V (Gt)| ≤ c, then (10) is computed a maximum of four times (depending on navel size) by
brute force (O(1) time). Otherwise, if K is a disconnected set in Gt, we add zero-interaction

10

(9)

(10)

+–++–++––+––++–++–Tractable Minor-free Generalization of Planar Zero-field Ising Models

edges inside it to make it connected. Possible addition of edges inside K, K1, . . . , Km doesn’t
destroy planarity according to the fourth item in the deﬁnition of the c-nice decomposition
above. Finally, we compute (10) using Lemma 6 in time O(|V (Gt)|

3
2 ).

The inference part of Theorem 5 follows directly from the procedure just described.

3.4 Sampling algorithm

Next, we address the sampling part of Theorem 5. We extend the algorithm from section
3.3 so that it supports eﬃcient sampling from I. Assume that the inference pass through
T (from leaves to root) has been done so that It for all t ∈ V (T ) are computed. Denote
Xt (cid:44) {xv | v ∈ V (Gt)}. The sampling algorithm runs backwards, ﬁrst drawing spin values
Xr at the root r of T from the marginal distribution P(Xr), and then processing each
node t of T after its parent p is processed. Processing consists of drawing spins Xt from
P(Xt | Xp) = P(Xt | X (t) (cid:44) {xv | v ∈ K}), where K is a navel of t. This marginal-conditional
scheme generates the correct sample X of spins over G.

Let P≤t(X≤t) deﬁne a spin distribution of I≤t. Because the Ising model is an example
of Markov Random Field, it holds that P≤t(X≤t | X (t)) = P(X≤t | X (t)). We further derive

P(Xt | X (t)) = P≤t(Xt | X (t)) =

1
Z≤t

=

1
Z≤t · exp

(cid:18) (cid:88)

Jexvxw

e={v,w}∈E(Gt)

i=1

X≤t\Xt
m
(cid:89)

(cid:19)

·

Z≤ci

|Si[Xt]

(cid:88)

exp

(cid:18) (cid:88)

(cid:19)

Jexvxw

e={v,w}∈E(G≤t)

(cid:18) (cid:88)

∝ exp

Jexvxw +

(cid:88)

Bixuixqi +

e={v,w}∈E(Gt)

i∈I (2)∪I (3)

(cid:88)

i∈I (3)

(Cixuixhi + Dixqixhi)

(cid:19)
.

(11)

In other words, sampling from P(Xt | X (t)) is reduced to sampling from It conditional
on spins X (t) in the navel K. It is done via brute force if |V (Gt)| ≤ c; otherwise, Lemma
3
2 ), since |K| ≤ 3. Sampling eﬀorts cost as much as
6 allows one to draw Xt in O(|V (Gt)|
inference, which concludes the proof of Theorem 5. Figure 3(c,d) illustrates sampling in t.

4. Minor-free Extension of Planar Zero-ﬁeld Ising Models

Contraction is an operation of removing two adjacent vertices v and u (and all edges incident
to them) from the graph and adding a new vertex w adjacent to all neighbors of v and u.
For two graphs G and H, H is G’s minor, if it is isomorphic to a graph obtained from G’s
subgraph by a series of contractions (Figure 2(d)). G is H-free, if H is not G’s minor.

According to Wagner’s theorem (Diestel, 2006, chap. 4.4), a set of planar graphs coin-
cides with an intersection of K33-free graphs and K5-free graphs. Some nonplanar graphs
are K33-free (K5-free), for example, K5 (K33). K33-free (K5-free) graphs are neither genus-
bounded (a disconnected set of g K5 (K33) graphs is K33-free (K5-free) and has a genus of
g (Battle et al., 1962)). K33-free (K5-free) graphs are treewidth-unbounded as well (planar
square grid of size t×t is K33-free and K5-free and has a treewidth of t (Bodlaender, 1998)).
In the remainder of the section we show that a c-nice decomposition of K33-free graphs and
K5-free graphs can be computed in polynomial time and, hence, inference and sampling of
zero-ﬁeld Ising models on these graph families can be performed eﬃciently.

11

Likhosherstov, Maximov and Chertkov

4.1 Zero-ﬁeld Ising Models over K33-free Graphs

Even though K33-free graphs are Pfaﬃan-orientable (with the Pfaﬃan orientation com-
putable in polynomial time, see Vazirani (1989)), the expanded dual graph—introduced
to map the zero-ﬁeld Ising model to the respective PM problem—is not necessarily K33-
free. Therefore, the latter is generally not Pfaﬃan-orientable. Hence, the reduction to a
well-studied perfect matching counting problem is not straightforward.

Theorem 7 Let G be K33-free graph of size N with no loops or multiple edges. Then the
5-nice decomposition T of G exists and can be computed in time O(N ).

Proof (Sketch) An equivalent decomposition is constructed by Hopcroft and Tarjan (1973);
Gutwenger and Mutzel (2001); Vo (1983) in time O(N ). We put a formal proof into Ap-
pendix C.

Remark 8 The O(N ) construction time of T guarantees that (cid:80)
All nonplanar components in T are isomorphic to K5 or its subgraph.

t∈V (T ) |V (Gt)| = O(N ).

Therefore, if G is K33-free, it satisﬁes all the conditions needed for eﬃcient inference

and sampling, described in section 3.

Theorem 9 For any I = (cid:104)G, 0, J(cid:105) where G is K33-free, inference or sampling of I takes
O(N

3
2 ) steps.

Proof Finding 5-nice T for G is the O(N ) operation. Provided with T , inference and
sampling take at most



O



(cid:88)

t∈V (T )











3
2

|V (Gt)|

3
2

 = O




(cid:88)



t∈V (T )

|V (Gt)|




 = O(N

3
2 )

(12)

where we apply convexity of f (z) = z

3
2 and the Remark after Theorem 7.

4.2 K33-free Zero-ﬁeld Ising Models: Implementation and Tests

In addition to theoretical justiﬁcation, which is fully presented in this manuscript, we per-
form emprical simulations to validate correctness of inference and sampling algorithm for
K33-free zero-ﬁeld Ising models.

To test the correctness of inference, we generate random K33-free models of a given size
and then compare the value of PF computed in a brute force way (tractable for suﬃciently
small graphs) and by our algorithm. See the graph generation algorithm in Appendix E. We
simulate samples of sizes from {10, ..., 15} (1000 samples per size) and verify that respective
expressions coincide.

When testing sampling implementation, we take for granted that the produced samples
do not correlate given that the sampling procedure accepts the Ising model as input and

12

Tractable Minor-free Generalization of Planar Zero-field Ising Models

(a)

(b)

Figure 4: (a) KL-divergence of the model probability distribution compared with the em-
pirical probability distribution. N, m are the model’s size and the number of
samples, respectively. (b) Execution time of inference (red dots) and sampling
(blue dots) depending on N , shown on a logarithmic scale. Black line corresponds
to O(N

3
2 ).

uses independent random number generator inside. The construction does not have any
memory, therefore, it generates statistically independent samples. To test that the em-
pirical distribution is approaching a theoretical one (in the limit of the inﬁnite number of
samples), we draw diﬀerent numbers m of samples from a model of size N . Then we ﬁnd
Kullback-Leibler divergence between the probability distribution of the model (here we use
our inference algorithm to compute the normalization, Z) and the empirical probability,
obtained from samples. Fig. 4(a) shows that KL-divergence converges to zero as the sample
size increases. Zero KL-divergence corresponds to equal distributions.

Finally, we simulate inference and sampling for random models of diﬀerent size N and

observe that the computational time (eﬀorts) scales as O(N

4.3 Zero-ﬁeld Ising Models over K5-free Graphs

3

2 ) (Figure 4(b)).1

It can be shown that result similar to the one described above for the K33-free graphs also
holds for the K5-free graphs as well.

Theorem 10 Let G be a K5-free graph of size N with no loops or multiple edges. Then,
the 8-nice decomposition T of G exists and can be computed in time O(N ).

Proof (Sketch) An equivalent decomposition is constructed by Reed and Li (2008) in time
O(N ). See Appendix D for formal proof.

Remark 11 The O(N ) construction time of T guarantees that (cid:80)
t∈V (T ) |V (Gt)| = O(N ).
All nonplanar components in T are isomorphic to the M¨obius ladder (Figure 2(b)) or its
subgraph.

1. Implementation of the algorithms is available at https://github.com/ValeryTyumen/planar ising.

13

246810log2m051015202530KL-divergenceN=10N=25N=40345678910log2N1086420246log2(sec.)C  * N  1.5inferencesamplingLikhosherstov, Maximov and Chertkov

The graph in Figure 2(a) is actually K5-free. Theorems 5 and 10 allow us to conclude:

Theorem 12 Given I = (cid:104)G, 0, J(cid:105) with K5-free G of size N , ﬁnding Z and sampling from
I take O(N

3
2 ) total time.

Proof Analogous to the proof of Theorem 9.

5. Approximate Inference of Square-grid Ising Model

In this section, we consider I = (cid:104)G, µ, J(cid:105) such that G is a square-grid graph of size H × H.
Finding Z(G, µ, J) for arbitrary µ, J is an NP-hard problem (Barahona, 1982) in such a
setting. Construct G(cid:48) by adding an apex vertex connected to all G’s vertices by edge (Figure
5(a)). Now it can easily be seen that Z(G, µ, J) = 1
2 Z(G(cid:48), 0, J (cid:48) = (Jµ ∪ J)), where Jµ = µ
are interactions assigned for apex edges.

Let {G(r)} be a family of spanning graphs (V (G(r)) = V (G(cid:48)), E(G(r)) ⊆ E(G(cid:48))) and
J (r) be interaction values on G(r). Also, denote ˆJ (r) = J (r) ∪ {0, e ∈ E(G(cid:48)) \ E(G(r))}.
Assuming that log Z(G(r), 0, J (r)) are tractable, the convexity of log Z(G(cid:48), 0, J (cid:48)) allows one
to write the following upper bound:

log Z(G(cid:48), 0, J (cid:48)) ≤

min

ρ(r)≥0,(cid:80)

{J (r)},(cid:80)

r ρ(r)=1
r ρ(r) ˆJ (r)=J (cid:48)

ρ(r) log Z(G(r), 0, J (r)).

(13)

(cid:88)

r

After graph set {G(r)} has been ﬁxed, one can numerically optimize the right-hand side
of (13), as shown in Globerson and Jaakkola (2007) for planar G(r). The extension of the
basic planar case is straightforward and is detailed in the Appendix F. The Appendix also
contains description of marginal probabilities approximation suggested in Globerson and
Jaakkola (2007); Wainwright et al. (2005).

The choice for a planar spanning graph (PSG) family {G(r)} of Globerson and Jaakkola
(2007) is illustrated in Figure 5(b). A tractable decomposition-based extension of the planar
case presented in this manuscript suggests a more advanced construction—decomposition-
based spanning graphs (DSG) (Figure 5(c)). We compare performance of both PSG and
DSG approaches as well as the performance of tree-reweighted approximation (TRW) (Wain-
wright et al., 2005) in the following setting of Varying Interaction: µ ∼ U(−0.5, 0.5),
J ∼ U(−α, α), where α ∈ {1, 1.2, 1.4, . . . , 3}. We opt optimize for grid size H = 15 (225
vertices, 420 edges) and compare upper bounds and marginal probability approximations
(superscript alg) with exact values obtained using a junction tree algorithm (Verner Jensen
et al., 1990) (superscript true). We compute three types of error:

1. normalized log-partition error

1

H 2 (log Zalg − log Ztrue),

2. error in pairwise marginals

and

1
|E(G)|

(cid:80)

e={v,w}∈E(G) |Palg(xvxw = 1) − Ptrue(xvxw = 1)|,

3. error in singleton central marginal |Palg(xv = 1) − Ptrue(xv = 1)| where v is a vertex

of G with coordinates (8, 8).

14

Tractable Minor-free Generalization of Planar Zero-field Ising Models

We average results over 100 trials (see Fig. 6).23 We use the same quasi-Newton algo-
rithm (Bertsekas, 1999) and parameters when optimizing (13) for PSG and DSG, but for
most settings, DSG outperforms PSG and TRW. Cases with smaller TRW error can be
explained by the fact that TRW implicitly optimizes (13) over the family of all spanning
trees which can be exponentially big in size, while for PSG and DSG we only use O(H)
spanning graphs.

Because PSG and DSG approaches come close to each other, we additionally test for
each value of α on each plot, whether the diﬀerence errP SG − errDSG is bigger than zero.
We apply a one-sided Wilcoxon’s test (Wilcoxon, 1945) together with the Bonferroni cor-
rection because we test 33 times (Jean Dunn, 1961). In most settings, the improvement is
statistically signiﬁcant (Figure 6).

6. Conclusion

3
In this manuscript, we, ﬁrst of all, describe an algorithm for O(N
2 ) inference and sampling
of planar zero-ﬁeld Ising models on N spins. Then we introduce a new family of zero-ﬁeld
Ising models composed of planar components and graphs of O(1) size. For these models, we
describe a polynomial algorithm for exact inference and sampling provided that the decom-
3
position tree is also in the input. A theoretical application is O(N
2 ) inference and sampling
algorithm for K33-free or K5-free zero-ﬁeld Ising models— both families are supersets of the
family of planar zero-ﬁeld models, and they are both neither treewidth- nor genus-bounded.
We show that our scheme oﬀers an improvement of the approximate inference scheme for ar-
bitrary topologies. The suggested improvement is based on the planar spanning graph ideas
from Globerson and Jaakkola (2007) but we use tractable spanning decomposition-based
graphs instead of planar graphs. (That is we keep the algorithm of Globerson and Jaakkola
(2007), but substitute planar graphs with a family of spanning decomposition-based graphs
that are tractable.) This improvement of Globerson and Jaakkola (2007) results in a tighter
upper bound on the true partition function and a more precise approximation of marginal
probabilities.

2. Hardware used: 24-core Intel R(cid:13) Xeon R(cid:13) Gold 6136 CPU @ 3.00 GHz
3. Implementation of the algorithms is available at https://github.com/ValeryTyumen/planar_ising

15

Likhosherstov, Maximov and Chertkov

Figure 5: Construction of graphs used for approximate inference on a rectangular lattice.
For better visualization, vertices connected to an apex are colored white. a) G(cid:48)
graph. b) One of planar G(r) graphs used in Globerson and Jaakkola (2007). Such
“separator” pattern is repeated for each column and row, resulting in 2(H − 1)
graphs in {G(r)}. In addition, Globerson and Jaakkola (2007) adds an independent
variables graph where only apex edges are drawn. c) A modiﬁed “separator”
pattern we propose. Again, the pattern is repeated horizontally and vertically
resulting in 2(H − 2) graphs + independent variables graph. This pattern covers
more magnetic ﬁelds and connects separated parts. Dashed edges indicate the
structure of 10-nice decomposition used for inference. (Nonplanar node of size 10
is illustrated on the right.)

Figure 6: Comparison of tree-reweighted approximation (TRW), planar spanning graph
(PSG), and decomposition-based spanning graph (DSG) approaches. The ﬁrst
plot is for normalized log-partition error, the second is for error in pairwise
marginals, and the third is for error in singleton central marginal. Standard
errors over 100 trials are shown as error bars. An asterisk “*” indicates the sta-
tistically signiﬁcant improvement of DSG over PSG, with a p-value smaller than
0.01 according to the Wilcoxon test with the Bonferroni correction (Wilcoxon,
1945).

16

1.01.52.02.53.0Interaction Strength0.000.050.100.150.200.250.30Z Bound Errorp < 0.01PSGDSGTRW1.01.52.02.53.0Interaction Strength0.000.020.040.060.080.100.120.140.16Pairwise Marginals Error1.01.52.02.53.0Interaction Strength0.00.10.20.30.4Singleton Marginal ErrorTractable Minor-free Generalization of Planar Zero-field Ising Models

Appendix A. Lemma Proofs

A.1 Lemma 1

Proof Let E(cid:48) ∈ PM(G∗). Call e ∈ E saturated, if it intersects an edge from E(cid:48) ∩ E∗
I . Each
Fisher city is incident to an odd number of edges in E(cid:48) ∩ E∗
I . Thus, each face of G has an
even number of unsaturated edges. This property is preserved, when two faces/cycles are
merged into one by evaluating respective symmetric diﬀerence. Therefore, one gets that
any cycle in G has an even number of unsaturated edges.

For each i deﬁne xi := −1ri, where ri is the number of unsaturated edges on the path
connecting v1 and vi. The deﬁnition is consistent due to aforementioned cycle property.
Now for each e = {v, w} ∈ E(G), xv = xw if and only if e is saturated. To conclude, we
constructed X such that E(cid:48) = M (X). Such X is unique, because parity of unsaturated
edges on a path between v1 and vi uniquely determines relationship between x1 and xi, and
x1 is always +1.

A.2 Lemma 2

Proof Let X (cid:48) = (x(cid:48)
chain of transitions:

1, ..., x(cid:48)

N ) ∈ C+, M (X (cid:48)) = E(cid:48). The statement is justiﬁed by the following

P(M (S) = E(cid:48)) = P(S = X (cid:48)) + P(S = −X (cid:48))



exp





exp



(cid:88)



Jex(cid:48)

vx(cid:48)
w



e={v,w}∈E(G)



Je



(cid:88)

e∈E(G)

(cid:88)

2Jg(e∗) −

e∗∈E(cid:48)∩E∗
I



exp

−

(cid:88)

e∈E(G)



exp

−

(cid:88)



Je





Je



(cid:89)

ce∗

e∗∈E(cid:48)∩E∗
I

(cid:89)

ce∗

e∈E(G)

e∗∈E(cid:48)

2
Z

2
Z

2
Z

2
Z

=

=

=

=

=

1
Z∗

(cid:89)

ce∗

e∗∈E(cid:48)

(14)

A.3 Lemma 6

Proof We consider cases depending on ω and consequently reduce each case to a simpler
one. For convenience in cases where applies we denote u (cid:44) v(1), h (cid:44) v(2), q (cid:44) v(3):

1. Conditioning on ω = 0 spins. Trivial given the algorithm described in section 2.

17

Likhosherstov, Maximov and Chertkov

2. Conditioning on ω = 1 spin. Since conﬁgurations X and −X have the same

probability in I, one deduces that Z | xu=s(1) = 1
One also deduces that sampling X from P(X | xu = s(1)) is reduced to 1) drawing
X = {xv = ±1} from P(X) and then 2) returning X = (s(1)xu) · X as a result.

2 Z.

3. Conditioning on ω = 2 spins. There is an edge e0 = {u, h} ∈ E(G). The following

expansion holds:

Z | xu=s(1),xh=s(2) =

(cid:88)

exp(cid:0) (cid:88)

Jexvxw

(cid:1)

X, xu=s(1), xh=s(2)
= exp(Je0s(1)s(2)) ·

e={v,w}∈E(G)

(cid:88)

X, xu=s(1), xh=s(2)

= exp(Je0s(1)s(2)) ·

(cid:88)

X, xu=s(1), xh=s(2)

(cid:88)

+

(Jes(1))xv · 1 +

(cid:88)

exp(cid:0) (cid:88)

Jexvxw

(cid:1)

e={v,w}∈E(G)
e(cid:54)=e0
exp(cid:0) (cid:88)

Jexvxw

e={v,w}∈E(G)
e∩e0=∅
(Jes(2))xv · 1(cid:1)

(15)

e={u,v}∈E(G)
v(cid:54)=h

e={h,v}∈E(G)
v(cid:54)=u

Obtain graph G(cid:48) from G by contracting u, h into z. G(cid:48) is still planar and has N − 1
vertices. Preserve pairwise interactions of edges which were not deleted after contrac-
tion. For each edge e = {u, v}, v (cid:54)= h set J{z,v} = Jes(1), for each edge e = {h, v},
v (cid:54)= u set J{z,v} = Jes(2). Collapse double edges in G(cid:48) which were possibly created by
transforming into single edges. A pairwise interaction of the result edge is set to the
sum of collapsed interactions.
Deﬁne a zero-ﬁeld Ising model I (cid:48) on the resulted graph G(cid:48) with its pairwise inter-
actions, inducing a distribution P(cid:48)(X (cid:48) = {x(cid:48)
v = ±1|v ∈ V (G(cid:48))}). Let Z(cid:48) denote I (cid:48)’s
partition function. A closer look at (15) reveals that

Z | xu=s(1),xh=s(2) = exp(Je0s(1)s(2)) · Z(cid:48)

| x(cid:48)

z=1

(16)

y=1 is a partition function conditioned on a single spin and can be found
| z(cid:48)

where Z(cid:48)
eﬃciently as shown above.
Since the equality of sums (16) holds summand-wise, for a given X (cid:48)(cid:48) = {x(cid:48)(cid:48)
v = ±1 | v ∈
V (G) \ {u, h}} the probabilities P(X (cid:48)(cid:48) ∪ {xu = s(1), xh = s(2)} | xu = s(1), xh = s(2))
and P(cid:48)(X (cid:48)(cid:48) ∪ {x(cid:48)
z = 1) are the same. Hence, sampling from P(X | xu =
s(1), xh = s(2)) is reduced to conditional sampling from planar zero-ﬁeld Ising model
P(cid:48)(X (cid:48) | x(cid:48)

z = 1} | x(cid:48)

z = 1) of size N − 1.

4. Conditioning on w = 3 spins. Without loss of generality assume that u, h are
connected by an edge e0 in G. A derivation similar to (15) and (16) reveals that
(preserving the notation of Case 2)

Z | xu=s(1),xh=s(2),xq=s(3) = exp(Je0s(1)s(2)) · Z(cid:48)

| x(cid:48)

z=1,x(cid:48)

q=s(3)

(17)

18

Tractable Minor-free Generalization of Planar Zero-field Ising Models

which reduces inference conditional on 3 vertices to a simpler case of 2 vertices. Again,
sampling from P(X | xu = s(1), xt = s(2), xq = s(3)) is reduced to a more basic sampling
from P(cid:48)(X (cid:48) | x(cid:48)

z = 1, x(cid:48)

q = s(3)).

In principle, Lemma 6 can be extended to arbitrarily large ω leaving a certain freedom for
the Ising model conditioning framework. However, in this manuscript we focus on a given
special case which is enough for our goals.

Appendix B. Theorem 3 Proof

B.1 Counting PMs of Planar ˆG in O( ˆN

3
2 ) time

This section addresses inference part of Theorem 3.

B.1.1 Pfaffian Orientation

Consider an orientation on ˆG. ˆG’s cycle of even length (built on an even number of vertices)
is said to be odd-oriented, if, when all edges along the cycle are traversed in any direction,
an odd number of edges are directed along the traversal. For X ⊆ V ( ˆG) let ˆG(X) denote a
graph (X, {e ∈ E( ˆG)|e ⊆ X}). An orientation of ˆG is called Pfaﬃan, if all cycles C, such
that PM( ˆG(V ( ˆG) − C)) (cid:54)= ∅, are odd-oriented.

We will need ˆG to contain a Pfaﬃan orientation, moreover the construction is easy.

Theorem 13 Pfaﬃan orientation of ˆG can be constructed in O( ˆN ).

Proof This theorem is proven constructively, see e.g. Wilson (1997); Vazirani (1989), or
Schraudolph and Kamenetsky (2009), where the latter construction is based on speciﬁcs of
the expanded dual graph.

Construct a skew-symmetric sparse matrix K ∈ R ˆN × ˆN (→ denotes orientation of edges):

Kij =




ce
−ce

0

if {vi, vj} ∈ E( ˆG), vi → vj
if {vi, vj} ∈ E( ˆG), vj → vi
if {vi, vj} /∈ E( ˆG)

(18)

The next result allows to compute PF ˆZ of PM model on ˆG in a polynomial time.

Theorem 14 det K > 0, ˆZ =

√

det K.

Proof See, e.g., Wilson (1997) or Kasteleyn (1963).

B.1.2 Computing det K

LU-decomposition of a matrix A = LU , found via Gaussian elimination, where L is a lower-
triangular matrix with unit diagonals and U is an upper-triangular matrix, would be a

19

Likhosherstov, Maximov and Chertkov

standard way of computing det A, which is then equal to a product of the diagonal elements
of U . However, this standard way of constructing the LU decomposition applies only if
all A’s leading principal submatrices are nonsingular (See e.g. Horn and Johnson (2012),
section 3.5, for detailed discussions). And already the 1 × 1 leading principal submatrix of
K is zero/singular.

Luckily, this diﬃculty can be resolved through the following construction. Take ˆG’s
arbitrary perfect matching E(cid:48) ∈ PM( ˆG). In the case of a general planar graph E(cid:48) can be
3
found via e.g. Blum’s algorithm (Blum, 1990) in O(
2 ) time, while for
graph G∗ appearing in this paper E(cid:48) can be found in O(N ) from a spin conﬁguration using
M mapping (e.g. E(cid:48) = E∗
I = M ({+1, ..., +1}) ∈ PM(G∗)). Modify ordering of vertices,
V ( ˆG) = {v1, v2, ..., v ˆN }, so that E(cid:48) = {{v1, v2}, ..., {v ˆN −1, v ˆN }}. Build K according to the
deﬁnition (18). Obtain K from K by swapping column 1 with column 2, 3 with 4 and so
on. This results in det K = | det K|, where the new K is properly conditioned.

(cid:112) ˆN |E( ˆG)|) = O( ˆN

Lemma 15 K’s leading principal submatrices are nonsingular.

Proof The proof, presented in Wilson (1997) for the case of unit weights ce, generalizes to
arbitrary positive ce.

Notice, that in the general case (of a matrix represented in terms of a general graph)
complexity of the LU-decomposition is cubic in the size of the matrix. Fortunately, nested
dissection technique, discussed in the following subsection, allows to reduce complexity of
computing ˆZ to O( ˆN

3
2 ).

B.1.3 Nested Dissection

The partition P1, P2, P3 of set V ( ˆG) is a separation of ˆG, if for any v ∈ P1, w ∈ P2 it holds
that {v, w} /∈ E( ˆG). We refer to P1, P2 as the parts, and to P3 as the separator.

Lipton and Tarjan (LT) (Lipton and Tarjan, 1979) found an O( ˆN ) algorithm, which
(cid:112) ˆN . The LT
ﬁnds a separation P1, P2, P3 such that max(|P1|, |P2|) ≤ 2
3
algorithm can be used to construct the so called nested dissection ordering of V ( ˆG). The
ordering is built recursively, by ﬁrst placing vertices of P1, then P2 and P3, and ﬁnally
permuting indices of P1 and P2 recursively according to the ordering of ˆG(P1) and ˆG(P2)
(See Lipton et al. (1979) for accurate description of details, deﬁnitions and analysis of the
nested dissection ordering). As shown by Lipton et al. (1979) the complexity of ﬁnding the
nested dissection ordering is O( ˆN log ˆN ).

ˆN and |P3| ≤ 2

Let A be a ˆN × ˆN matrix with a sparsity pattern of ˆG. That is, Aij can be nonzero

only if i = j or {vi, vj} ∈ ˆE.
Theorem 16 (Lipton et al., 1979) If ˆV is ordered according to the nested dissection and
A’s leading principal submatrices are nonsingular, computing the LU-decomposition of A
becomes a problem of the O(N

3
2 ) complexity.

3
2

Notice, however, that we cannot directly apply the Theorem to K, because the sparsity
pattern of K is asymmetric and does not correspond, in general, to any graph.

Let G∗∗ be a planar graph, obtained from ˆG, by contracting each edge in E(cid:48), |V (G∗∗)| =
ˆN . Find and ﬁx a nested dissection ordering over V (G∗∗) (it takes O( ˆN log ˆN )

|E(cid:48)| = 1
2

20

Tractable Minor-free Generalization of Planar Zero-field Ising Models

steps) and let the {v1, v2}, . . . , {v ˆN −1, v ˆN } enumeration of E(cid:48) correspond to this ordering.
Split K into 2 × 2 cells and consider the sparsity pattern of the nonzero cells. One observes
that the resulting sparsity pattern coincides with the sparsity patterns of K and G∗∗. Since
LU-decomposition can be stated in the 2 × 2 block elimination form, its complexity is
reduced down to O( ˆN

3
2 ).

This concludes construction of an eﬃcient inference (counting) algorithm for planar PM

model.

B.2 Sampling PMs of Planar ˆG in O( ˆN

3
2 ) time (Wilson’s Algorithm)

This section addresses sampling part of Theorem 3. In this section we assume that degrees
of ˆG’s vertices are upper-bounded by 3. This is true for G∗ - the only type of PM model
appearing in the paper. Any other constant substituting 3 wouldn’t aﬀect the analysis of
complexity. Moreover, Wilson (1997) shows that any PM model on a planar graph can be
reduced to bounded-degree planar model without aﬀecting O( ˆN

3
2 ) complexity.

B.2.1 Structure of the Algorithm
Denote a sampled PM as M , P(M ) = ˆZ−1 (cid:81)
e∈M ce. Wilson’s algorithm ﬁrst applies LT
algorithm of Lipton and Tarjan (1979) to ﬁnd a separation P1, P2, P3 of ˆG (max(|P1|, |P2|) ≤
(cid:112) ˆN ). Then it iterates over v ∈ P3 and for each v it draws an edge of M ,
ˆN , |P3| ≤ 2
2
3
saturating v. Then it appears that, given this intermediate result, drawing remaining edges
of M may be split into two independent drawings over ˆG(P1) and ˆG(P2), respectively, and
then the process is repeated recursively.

3
2

It takes O( ˆN

3

2 ) steps to sample edges attached to P3 at the ﬁrst step of the recursion,

therefore the overall complexity of the Wilson’s algorithm is also O( ˆN

3
2 ).

Subsection B.2.2 introduces probabilities required to draw the aforementioned PM sam-
ples. Subsections B.2.3 and B.2.4 describe how to sample edges attached to the separator,
while Subsection B.3 focuses on describing the recursion.

B.2.2 Drawing Perfect Matchings

For some Q ∈ E( ˆG) consider the probability of getting Q as a subset of M :

P(Q ⊆ M ) =

=

1
ˆZ

1
ˆZ

(cid:88)

(cid:18) (cid:89)

(cid:19)

ce

M (cid:48)∈PM( ˆG)
Q⊆M (cid:48)

(cid:18)(cid:89)

(cid:19)

ce

·

e∈M (cid:48)

(cid:88)

(cid:18) (cid:89)

(cid:19)

ce

(19)

e∈Q

M (cid:48)∈PM( ˆG)

e∈M (cid:48)\Q

Let ˆVQ = ∪e∈Qe and ˆG\Q = ˆG(V ( ˆG) \ ˆVQ). Then the set {M (cid:48) \ Q | M (cid:48) ∈ PM( ˆG)}

coincides with PM( ˆG\Q). This yields the following expression

P(Q ⊆ M ) =

ˆZ\Q
ˆZ

(cid:18)(cid:89)

(cid:19)

ce

e∈Q

21

(20)

Likhosherstov, Maximov and Chertkov

where

ˆZ\Q =

(cid:88)

(cid:18) (cid:89)

(cid:19)

ce

M (cid:48)(cid:48)∈PM( ˆG\Q)

e∈M (cid:48)(cid:48)

(21)

is a PF of the PM model on ˆG\Q induced by the edge weights ce.

For a square matrix A let Ar1,...,rl
and columns c1, ..., cl from A. Let [A]r1,...,rl
columns c1, ..., cl of A and placing them in this order.

c1,...,cl denote the matrix obtained by deleting rows r1, ..., rl
c1,...,cl be obtained by leaving only rows r1, ..., rl and

Now let ˆVQ = {vi1, ..., vir }, i1 < ... < ir. A simple check demonstrates that deleting
vertex from a graph preserves the Pfaﬃan orientation. By induction this holds for any
number of vertices deleted. From that it follows that Ki1,...,ir
is a Kasteleyn matrix for ˆG\Q
i1,...,ir
and then

ˆZ\Q = pf Ki1,...,ir
i1,...,ir

=

det Ki1,...,ir
i1,...,ir

(cid:113)

resulting in

P(Q ⊆ M ) =

(cid:115)

det Ki1,...,ir
i1,...,ir
det K

·

(cid:18)(cid:89)

(cid:19)

ce

e∈Q

(22)

(23)

Linear algebra transformations, described by Wilson (1997), suggest that if A is non-

singular, then

det Ar1,...,rl
c1,...,cl
det A

= ± det[A−1]c1,...,cl
r1,...,rl

This observation allows us to express probability (19) as

P(Q ⊆ M ) =

(cid:113)

| det[K−1]i1,...,ir
i1,...,ir

(cid:18)(cid:89)

(cid:19)

ce

| ·

e∈Q

(24)

(25)

Now we are in the position to describe the ﬁrst step of the Wilson’s recursion.

B.2.3 Step 1: Computing Lower-Right Submatrix of K
Find a separation P1, P2, P3 of ˆG. The goal is to sample an edge from every v ∈ P3.

−1

Let W be a set of vertices from P3 and their neighbors, then |W | ≤ 3|P3| because each
vertex in ˆG is of degree at most 3. Let W ∗∗ ⊆ V (G∗∗) be a set of the contracted edges (recall
G∗∗ deﬁnition from Subsection B.1.3), containing at least one vertex from W , |W ∗∗| ≤ |W |.
Then W ∗∗ is a separator of G∗∗ such that

|W ∗∗| ≤ |W | ≤ 3|P3| ≤ 3 · 2

3
2

(cid:112) ˆN ≤ 3 · 22(cid:112)|V (G∗∗)|

(26)

where one uses that, |V (G∗∗)| = ˆN
2 . Find a nested dissection ordering (Subsection B.1.3)
of V (G∗∗) with W ∗∗ as a top-level separator. This is a correct nested dissection due to
Eq. (26).

Utilizing this ordering, construct K. Compute L and U - LU-decomposition of K (O( ˆN

3
2 )
(cid:112) ˆN and let I be a shorthand notation for ( ˆN − γ + 1, ..., ˆN ).
]I
I, which is a lower-right K

’s submatrix of size γ × γ.

−1

5
2
−1

time). Let γ = 2|W ∗∗| ≤ 3 · 2
Using L and U , ﬁnd D = [K

22

Tractable Minor-free Generalization of Planar Zero-field Ising Models

It is straightforward to observe that the i-th column of D, di, satisﬁes

[L]I

I ×

(cid:18)

[U ]I

I × di

(cid:19)

= ei,

(27)

where ei is a zero vector with unity at the i-th position. Therefore constructing D is reduced
3
to solving 2γ triangular systems, each of size γ × γ, resulting in O(γ3) = O( ˆN
2 ) required
steps.

B.2.4 Step 2: Sampling Edges in the Separator

Now, progressing iteratively, one ﬁnds v ∈ P3 which is not yet paired and draw an edge
emanating from it. Suppose that the edges, e1 = {vj1, vj2}, ..., ek = {vj2k−1, vj2k }, are
already sampled. We assume that by this point we have also computed LU-decomposition
Ak = [K−1]j1,...,j2k
= LkUk and we will update it to Ak+1 when the new edge is drawn.
j1,...,j2k
Then

P(e1, ..., ek ∈ M ) = (cid:112)| det Ak|

k
(cid:89)

cej

(28)

Next we choose j2k+1 so that vj2k+1 is not saturated yet. We iterate over vj2k+1’s neigh-
bors considered as candidates for becoming vj2k+2. Let vj to become the next candidate,
denote ek+1 = {vj2k+1, vj}. For n ∈ N let α(n) = n + 1 if n is odd and α(n) = n − 1 if n is
even. Then the identity

j=1

follows from the deﬁnition of K. One deduces from Eq. (29)

K−1 = [K

−1

]α(1),α(2),...,α( ˆN )
1,2,..., ˆN

,

Ak+1 = [K−1]j1,...,j2k+1,j

j1,...,j2k+1,j = [K

−1

]α(j1),...,α(j2k+1),α(j)
j1,...,j2k+1,j

(29)

(30)

Constructing W ∗∗ one has j1, ..., j2k+1, j, α(j1), ..., α(j2k+1), α(j) > ˆN − t. It means that

Ak+1 is a submatrix of D with permuted rows and columns, hence Ak+1 is known.

We further observe that

Ak+1 =

(cid:21)

(cid:20)Ak y
d
r

(cid:20)Lk 0
R 1

(cid:21) (cid:20)Uk Y
z
0

(cid:21)

=

= Lk+1Uk+1

(31)

Therefore to update Lk+1 and Uk+1, one just solves the triangular system of equations
RUk = r and LkY = y, where R(cid:62), r(cid:62), Y, y are of size 2k × 2 (this is done in O(k2) steps),
and then compute z = d − RY which is of the size 2 × 2, then set, u = det z.

The probability to pair vj2k+1 and vj is

P(ek+1 ∈ M | e1, ..., ek ∈ M ) =

=

=

23

P(e1, ..., ek+1 ∈ M )
P(e1, ..., ek ∈ M )
(cid:112)| det Ak+1| (cid:81)k+1
j=1 cej
(cid:112)| det Ak| (cid:81)k
j=1 cej
cek+1

(cid:112)|u|| det Ak|
(cid:112)| det Ak|

Likhosherstov, Maximov and Chertkov

= cek+1

(cid:112)|u|

(32)

Therefore maintaining Uk+1 allows us to compute the required probability and draw
a new edge from vj2k+1. By construction of ˆG, vj2k+1 has only 3 neighbors, therefore the
complexity of this step is O((cid:80)|P3|

2 ) because |P3| ≤ 2

(cid:112) ˆN .

k=1 k2) = O( ˆN

3
2

3

B.3 Step 3: Recursion

Let Msep = {e1, e2, ...} be a set of edges drawn on the previous step, and ˆVsep be a set of
vertices saturated by Msep, P3 ⊆ ˆVsep. Given Msep, the task of sampling M ∈ PM( ˆG) such
that Msep ⊆ M is reduced to sampling perfect matchings M1 and M2 over ˆG(P1 \ ˆVsep) and
ˆG(P2 \ ˆVsep), respectively. Then M = M1 ∪ M2 ∪ Msep becomes the result of the perfect
matching drawn from (4).

Even though only the ﬁrst step of the Wilson’s recursion was discussed so far, any further
step in the recursion is done in exactly the same way with the only exception that vertex
degrees may become less than 3, while in ˆG they are exactly 3. Obviously, this does not
change the iterative procedure and it also does not aﬀect the complexity analysis.

Appendix C. Theorem 7 Proof

Prior to the proof we introduce a series of deﬁnitions and results. We follow Hopcroft
and Tarjan (1973); Gutwenger and Mutzel (2001), see also Mader (2008) to deﬁne the tree
of triconnected components. The deﬁnitions apply for a biconnected graph G (see the
deﬁnition of biconnected graph and biconnected component e.g. in Appendix D.)

Let v, w ∈ V (G). Divide E(G) into equivalence classes E1, ..., Ek so that e1, e2 are in
the same class if they lie on a common simple path that has v, w as endpoints. E1, ..., Ek
are referred to as separation classes. If k ≥ 2, then {v, w} is a separation pair of G, unless
(a) k = 2 and one of the classes is a single edge or (b) k = 3 and each class is a single edge.
Graph G is called triconnected if it has no separation pairs.

Let {v, w} be a separation pair in G with equivalence classes E1, ..., Ek. Let E(cid:48) = ∪l

i=1El,
i=l+1El be such that |E(cid:48)| ≥ 2, |E(cid:48)(cid:48)| ≥ 2. Then, graphs G1 = (∪e∈E(cid:48)e, E(cid:48)∪{eV }), G2 =
E(cid:48)(cid:48) = ∪k
(∪e∈E(cid:48)(cid:48)e, E(cid:48)(cid:48) ∪ {eV }) are called split graphs of G with respect to {v, w}, and eV is a virtual
edge, which is a new edge between v and w, identifying the split operation. Due to the
addition of eV , G1 and G2 are not normal in general.

Split G into G1 and G2. Continue splitting G1, G2, and so on, recursively, until no
further split operation is possible. The resulting graphs are split components of G. They
can either be K3 (triangles), triple bonds, or triconnected normal graphs.

Let eV be a virtual edge. There are exactly two split components containing eV :
G1 = (V1, E1) and G2 = (V2, E2). Replacing G1 and G2 with G(cid:48) = (V1 ∪V2, (E1 ∪E2)\{eV })
is called merging G1 and G2. Do all possible mergings of the cycle graphs (starting from
triangles), and then do all possible mergings of multiple bonds starting from triple bonds.
Components of the resulting set are referred to as the triconnected components of G. We
emphasize again that some graphs (i.e., cycles and bonds) in the set of triconnected com-
ponents are not necessarily triconnected.

24

Tractable Minor-free Generalization of Planar Zero-field Ising Models

Figure 7: (I) An example biconnected graph G.

(II) A separation pair {a, b} of G and
separation classes E1, E2, E3 associated with {a, b}. (III) Result of split operation
with E(cid:48) = E1 ∪ E2, E(cid:48)(cid:48) = E3. Dashed lines indicate virtual edges and dotted lines
connect equivalent virtual edges in split graphs.
(IV) Split components of G
(non-unique). (V) Triconnected components of G. (VI) Triconnected component
tree T of G; spacial alignment of V is preserved. “G,” “B,” and “C” are examples
of the “triconnected graph,” “multiple bond,” and “cycle,” respectively.

Lemma 17 (Hopcroft and Tarjan, 1973) Triconnected components are unique for G. Total
number of edges within the triconnected components is at most 3|E| − 6.

Consider a graph T (cid:48), where vertices (further referred to as nodes for disambiguation)
are triconnected components, and there is an edge between a and b in T (cid:48), when a and b
share a (copied) virtual edge.

Lemma 18 (Hopcroft and Tarjan, 1973) T (cid:48) is a tree.

We will also use the following celebrated result:

Lemma 19 (Hall, 1943) Biconnected graph G is K33-free if and only if its nonplanar tri-
connected components are exactly K5.

The graph on Figure 7 is actually K33-free according to the Lemma. Now we are in the

position to give a proof of the Theorem 7.
Proof Since G is K33-free and has no loops or multiple edges, it holds that |E(G)| = O(N )
(Thomason, 2001).
In time O(N ) we can ﬁnd a forest of G’s biconnected components
(Tarjan, 1971). If we ﬁnd the 5-nice decomposition of each biconnected component, we can
trivially combine them into a single 5-nice decomposition in time O(N ) using navels of size
0 and 1. Hence, we can assume that G is biconnected.

Build a tree of triconnected components for G in time O(N ) (Hopcroft and Tarjan,
1973; Gutwenger and Mutzel, 2001; Vo, 1983). Now delete virtual edges, which results in a
5-nice decomposition of G, given the Lemma 19.

25

Likhosherstov, Maximov and Chertkov

Appendix D. Proof for Theorem 10

Prior to the proof, we introduce a series of deﬁnitions used by Reed and Li (2008). It is
assumed that a graph G = (V, E) (no loops and multiple edges) is given.

For any X ⊆ V (G) let G−X denote a graph (V (G)\X, {e = {v, w} ∈ E(G) | v, w /∈ X}).
X ⊆ V (G) is a (i, j)-cut whenever |X| = i and G − X has at least j connected components.
The graph is biconnected whenever it has no (1, 2)-cut. A biconnected component of the
graph is a maximal biconnected subgraph. Clearly, a pair of biconnected components can
intersect in at most one vertex and a graph of components’ intersections is a tree when G
is connected (a tree of biconnected components). The graph is 3-connected whenever it has
no (2, 2)-cut.

A 2-block tree of a biconnected graph G, written (cid:104)T (cid:48), G(cid:48)(cid:105), is a tree T (cid:48) with a set G(cid:48) =
t}t∈V (T (cid:48)) with the following properties:

{G(cid:48)

– G(cid:48)

t is a graph (possibly with multiple edges) for each t ∈ V (T (cid:48)).

– If G is 3-connected then T (cid:48) has a single node r which is colored 1 and G(cid:48)

r = G.

– If G is not 3-connected then there exists a color 2 node t ∈ V (T (cid:48)) such that

1. G(cid:48)

t is a graph with two vertices u and v and no edges for some (2, 2)-cut {u, v}

in G.
2. Let T (cid:48)

1, . . . , T (cid:48)

k be the connected components (subtrees) of T (cid:48) − t. Then G −
{u, v} has k connected components U1, . . . , Uk and there is a labelling of these
components such that T (cid:48)
is a 2-block tree of G(cid:48)
i = (V (Ui) ∪ {u, v}, E(Ui) ∪
i
{{u, v}}).

3. For each i, there exists exactly one color 1 node ti ∈ V (T (cid:48)

i ) such that {u, v} ⊆

V (G(cid:48)

ti).

4. For each i, {t, ti} ∈ E(T ).

A (3, 3)-block tree of a 3-connected graph G, written (cid:104)T (cid:48)(cid:48), G(cid:48)(cid:48)(cid:105), is a tree T (cid:48)(cid:48) with a set

G(cid:48)(cid:48) = {G(cid:48)(cid:48)

t }t∈V (T (cid:48)(cid:48)) with the following properties:

– G(cid:48)(cid:48)

t is a graph (possibly with multiple edges) for each t ∈ V (T (cid:48)(cid:48)).

– If G has no (3, 3)-cut then T has a single node r which is colored 1 and Gr = G.

– If G has a (3, 3)-cut then there exists a color 2 node t ∈ V (T (cid:48)(cid:48)) such that

1. G(cid:48)(cid:48)

t is a graph with vertices u, v and w and no edges for some (3, 3)-cut {u, v, w}

in G.
2. Let T (cid:48)(cid:48)

1 , . . . , T (cid:48)(cid:48)

k be the connected components (subtrees) of T (cid:48)(cid:48) − t. Then G −
{u, v, w} has k connected components U1, . . . , Uk and there is a labelling of these
components such that Ti is a (3, 3)-block tree of G(cid:48)(cid:48)
i = (V (Ui) ∪ {u, v, w}, E(Ui) ∪
{{u, v}, {v, w}, {u, w}}).

3. For each i, there exists exactly one color 1 node ti ∈ V (T (cid:48)(cid:48)

i ), such that {u, v, w} ⊆

V (G(cid:48)(cid:48)

ti).

26

Tractable Minor-free Generalization of Planar Zero-field Ising Models

4. For each i, {t, ti} ∈ E(T (cid:48)(cid:48)).

Proof Since G is K5-free and has no loops or multiple edges, it holds that |E(G)| = O(N )
In time O(N ) we can ﬁnd a forest of G’s biconnected components
(Thomason, 2001).
(Tarjan, 1971). If we ﬁnd an 8-nice decomposition for each biconnected component, join
them into a single 8-nice decomposition by using attachment sets of size 1 for decompositions
inside G’s connected component and attachment sets of size 0 for decompositions in diﬀerent
connected components. Hence, further we assume that G is biconnected.

The O(N ) algorithm of Reed and Li (2008) ﬁnds a 2-block tree (cid:104)T (cid:48), G(cid:48)(cid:105) for G and then
for each color 1 node G(cid:48)
t ∈ G(cid:48) it ﬁnds (3, 3)-block tree (cid:104)T (cid:48)(cid:48), G(cid:48)(cid:48)(cid:105) where all components are
either planar or M¨obius ladders. To get an 8-nice decomposition from each (3, 3)-block
tree, 1) for each color 2 node contract an edge between it and one of its neighbours in T (cid:48)(cid:48)
and 2) remove all edges which were only created during (cid:104)T (cid:48)(cid:48), G(cid:48)(cid:48)(cid:105) construction (2nd item of
(3, 3)-block tree deﬁnition).

t is color 1 node and G(cid:48)

s ∈ G(cid:48) where G(cid:48)
t) and {u, v} ∈ E(G(cid:48)

Now we have to draw additional edges in the forest F of obtained 8-nice decompositions
so that to get a single 8-nice decomposition T of G. Notice that for each pair of adjacent
s = ({u, v}, ∅) is a color 2 node, u, v
nodes G(cid:48)
t, G(cid:48)
are in V (G(cid:48)
r of 8-nice
decomposition of G(cid:48)
t where both u and v are present. For each pair of s and t draw an edge
between s and r in F . Then 1) for each color 2 node in F (such as s) contract an edge
between it and one of its neighbors (such as r) and 2) remove all edges which were created
during (cid:104)T (cid:48), G(cid:48)(cid:105) construction (2nd item of 2-block tree deﬁnition). This results is a correct
c-nice decomposition for biconnected G.

t). Hence, there is at least one component G(cid:48)(cid:48)

Appendix E. Random Graph Generation

As our derivations cover the most general case of planar and K33-free graphs, we want to
test them on graphs which are as general as possible. Based on Lemma 19 (notice, that
it provides necessary and suﬃcient conditions for a graph to be K33-free) we implement
a randomized construction of K33-free graphs, which is assumed to cover most general
K33-free topologies.

Namely, one generates a set of K5’s and random planar graphs, attaching them by edges

to a tree-like structure. Our generation process consists of the following two steps.

1. Planar graph generation. This step accepts N ≥ 3 as an input and generates a
normal biconnected planar graph of size N along with its embedding on a plane. The
details of the construction are as follows.

First, a random embedded tree is drawn iteratively. We start with a single vertex,
on each iteration choose a random vertex of an already “grown” tree, and add a new
vertex connected only to the chosen vertex. Items I-V in Fig. 8 illustrate this step.

Then we triangulate this tree by adding edges until the graph becomes biconnected
and all faces are triangles, as in the Subsection 2.1 (VI in Figure 8). Next, to get a
normal graph, we remove multiple edges possibly produced by triangulation (VII in
Fig. 8). At this point the generation process is complete.

27

Likhosherstov, Maximov and Chertkov

Figure 8: Steps of planar graph generation. I-V refers to random tree construction on a
plane, VI is a triangulation of a tree, VII is a result after multiple edges removal.

2. K33-free graph generation. Here we take N ≥ 5 as the input and generate a
normal biconnected K33-free graph G in a form of its partially merged decomposition
T . Namely, we generate a tree T of graphs where each node is either a normal
biconnected planar graph or K5, and every two adjacent graphs share a virtual edge.
The construction is greedy and is essentially a tree generation process from Step 1.
We start with K5 root and then iteratively create and attach new nodes. Let N (cid:48) < N
be a size of the already generated graph, N (cid:48) = 5 at ﬁrst. Notice, that when a node of
size n is generated, it contributes n − 2 new vertices to G.
An elementary step of iteration here is as follows. If N − N (cid:48) ≥ 3, a coin is ﬂipped and
the type of new node is chosen - K5 or planar. If N − N (cid:48) < 3, K5 cannot be added,
so a planar type is chosen. If a planar node is added, its size is drawn uniformly in
the range between 3 and N − N (cid:48) + 2 and then the graph itself is drawn as described
in Step 1. Then we attach a new node to a randomly chosen free edge of a randomly
chosen node of T (cid:48). We repeat this process until G is of the desired size N . Fig. 9
illustrates the algorithm.

To obtain an Ising model from G, we sample pairwise interactions for each edge of G

independently from N (0, 0.12).

Notice that the tractable Ising model generation procedure is designed in this section
solely for the convenience of testing and it is not claimed to be sampling models of any
particular practical interest (e.g. in statistical physics or computer science).

Appendix F. Upper Bound Minimization and Marginal Computation in

Approximation Scheme

Denote:

h(J (cid:48)) (cid:44)

min

ρ(r)≥0,(cid:80)

r ρ(r)=1

g(J (cid:48), ρ),

g(J (cid:48), ρ) (cid:44)

{J (r)},(cid:80)

min
r ρ(r) ˆJ (r)=J (cid:48)

(cid:88)

r

ρ(r) log Z(G(r), 0, J (r))

where h(J (cid:48)) is a tight upper bound for log Z(G(cid:48), 0, J (cid:48)).

Given a ﬁxed ρ, we compute g(J (cid:48), ρ) using L-BFGS-B optimization (Zhu et al., 1997) by
back-propagating through Z(G(r), 0, J (r)) and projecting gradients on the constraint linear
manifold. On the upper level we also apply L-BFGS-B algorithm to compute h(J (cid:48)), which
is possible since (Wainwright et al., 2005; Globerson and Jaakkola, 2007)

∂
∂ρ(r)

g(J (cid:48), ρ) = log Z(G(r), 0, J (r)

min) − (M (r))(cid:62)J (r)

min, M (r) (cid:44) ∂
∂J (r)
min

log Z(G(r), 0, J (r)

min)

28

Tractable Minor-free Generalization of Planar Zero-field Ising Models

Figure 9: Generation of K33-free graph G and its partially merged decomposition T (cid:48). Start-
ing with K5 (I), new components are generated and attached to random free edges
(II-V). VI is a result graph G obtained by merging all components in T (cid:48).

min} is argmin inside g(J (cid:48), ρ)’s deﬁnition and M (r) = {M (r)

where {J (r)
a vector of pairwise marginal expectations. We reparameterize ρ(r) into
w(r) > 0.

e

| e ∈ E(G(r))} is
r(cid:48) w(r(cid:48)) where

w(r)

(cid:80)

For e = {v, w} ∈ E(G) we approximate pairwise marginal probabilities as Wainwright

et al. (2005); Globerson and Jaakkola (2007)

Palg(xvxw = 1) =

1
2

(cid:88)

· [

r

ρ(r)M (r)

e

] +

1
2

Let eA be an edge between central vertex v and apex in G(cid:48). We approximate singleton
marginal probability at vertex v as

Palg(xv = 1) =

1
2

(cid:88)

· [

r

ρ(r)M (r)
eA

] +

1
2

References

F Barahona. On the computational complexity of Ising spin glass models. Journal of Physics

A: Mathematical and General, 15(10):3241, 1982.

Joseph Battle, Frank Harary, and Yukihiro Kodama. Additivity of the genus of a graph.

Bull. Amer. Math. Soc., 68(6):565–568, 11 1962.

Richard Bellman. On the theory of dynamic programming. Proceedings of the National

Academy of Sciences, 38(8):716–719, 1952.

D.P. Bertsekas. Nonlinear Programming. Athena Scientiﬁc, 1999.

H.A. Bethe. Statistical theory of superlattices. Proceedings of Royal Society of London A,

150:552, 1935.

29

Likhosherstov, Maximov and Chertkov

L Bieche, J P Uhry, R Maynard, and R Rammal. On the ground states of the frustration
model of a spin glass by a matching method of graph theory. Journal of Physics A:
Mathematical and General, 13(8):2553, 1980.

Norbert Blum. A new approach to maximum matching in general graphs. In Michael S.
Paterson, editor, Automata, Languages and Programming, pages 586–597, Berlin, Heidel-
berg, 1990. Springer Berlin Heidelberg.

Hans L. Bodlaender. A partial k-arboretum of graphs with bounded treewidth. Theoretical

Computer Science, 209(1):1 – 45, 1998.

John M Boyer and Wendy J Myrvold. On the cutting edge: Simpliﬁed O(n) planarity by

edge addition. J. Graph Algorithms Appl., 8(2):241–273, 2004.

Radu Curticapean. Counting perfect matchings in graphs that exclude a single-crossing

minor. arXiv preprint arXiv:1406.4056, 2014.

R. Diestel. Graph Theory. Electronic library of mathematics. Springer, 2006.

Michael E. Fisher. On the dimer solution of planar Ising models. Journal of Mathematical

Physics, 7(10):1776–1781, 1966.

R.G. Gallager. Low density parity check codes. MIT Press, Cambridge, MA, 1963.

Anna Gallucio and Martin Loebl. On the theory of pfaﬃan orientations. I: Perfect matchings
and permanents. The Electronic Journal of Combinatorics, 6(1):Research paper R6, 18
p.–Research paper R6, 18 p., 1999.

Amir Globerson and Tommi S Jaakkola. Approximate inference using planar graph decom-
position. In Advances in Neural Information Processing Systems, pages 473–480, 2007.

Carsten Gutwenger and Petra Mutzel. A linear time implementation of SPQR-trees. In Joe
Marks, editor, Graph Drawing, pages 77–90, Berlin, Heidelberg, 2001. Springer Berlin
Heidelberg.

Dick Wick Hall. A note on primitive skew curves. Bull. Amer. Math. Soc., 49(12):935–936,

12 1943.

J. Hopcroft and R. Tarjan. Dividing a graph into triconnected components. SIAM Journal

on Computing, 2(3):135–158, 1973.

Roger A. Horn and Charles R. Johnson. Matrix Analysis. Cambridge University Press, 2

edition, 2012.

Olive Jean Dunn. Multiple comparisons among means. Journal of The American Statistical

Association - J AMER STATIST ASSN, 56:52–64, 03 1961.

M. Jerrum and A. Sinclair. Polynomial-time approximation algorithms for the Ising model.

SIAM Journal on Computing, 22(5):1087–1116, 1993.

30

Tractable Minor-free Generalization of Planar Zero-field Ising Models

M. Kac and J. C. Ward. A combinatorial solution of the two-dimensional Ising model. Phys.

Rev., 88:1332–1337, Dec 1952.

Pieter W Kasteleyn. Dimer statistics and phase transitions. Journal of Mathematical

Physics, 4(2):287–293, 1963.

Richard J Lipton and Robert Endre Tarjan. A separator theorem for planar graphs. SIAM

Journal on Applied Mathematics, 36(2):177–189, 1979.

Richard J. Lipton, Donald J. Rose, and Robert Endre Tarjan. Generalized nested dissection.

SIAM Journal on Numerical Analysis, 16(2):346–358, 1979.

Martin Mader. Planar graph drawing. Master’s thesis, University of Konstanz, Konstanz,

2008.

Lars Onsager. Crystal statistics. I: A two-dimensional model with an order-disorder tran-

sition. Phys. Rev., 65:117–149, Feb 1944.

Judea Pearl. Reverend bayes on inference engines: A distributed hierarchical approach. In
Proceedings of the Second AAAI Conference on Artiﬁcial Intelligence, AAAI’82, pages
133–136. AAAI Press, 1982.

H.A. Peierls.

Ising’s model of ferromagnetism. Proceedings of Cambridge Philosophical

Society, 32:477–481, 1936.

Bruce Reed and Zhentao Li. Optimization and recognition for K5-minor free graphs in linear
time. In Eduardo Sany Laber, Claudson Bornstein, Loana Tito Nogueira, and Luerbio
Faria, editors, LATIN 2008: Theoretical Informatics, pages 206–215, Berlin, Heidelberg,
2008. Springer Berlin Heidelberg.

Nicol N. Schraudolph and Dmitry Kamenetsky. Eﬃcient exact inference in planar Ising
models. In D. Koller, D. Schuurmans, Y. Bengio, and L. Bottou, editors, Advances in
Neural Information Processing Systems 21, pages 1417–1424. Curran Associates, Inc.,
2009.

S. Straub, T. Thierauf, and F. Wagner. Counting the number of perfect matchings in K5-
free graphs. In 2014 IEEE 29th Conference on Computational Complexity (CCC), pages
66–77, June 2014.

R. Tarjan. Depth-ﬁrst search and linear graph algorithms. In 12th Annual Symposium on

Switching and Automata Theory (SWAT 1971), pages 114–121, Oct 1971.

Creighton K. Thomas and A. Alan Middleton. Exact algorithm for sampling the two-

dimensional Ising spin glass. Phys. Rev. E, 80:046708, Oct 2009.

Creighton K Thomas and A Alan Middleton. Numerically exact correlations and sampling

in the two-dimensional Ising spin glass. Physical Review E, 87(4):043303, 2013.

Andrew Thomason. The extremal function for complete minors. J. Comb. Theory Ser. B,

81(2):318–338, March 2001.

31

Likhosherstov, Maximov and Chertkov

Vijay V. Vazirani. NC algorithms for computing the number of perfect matchings in K3,3-
free graphs and related problems. Information and Computation, 80(2):152 – 164, 1989.

Finn Verner Jensen, Kristian Olesen, and Stig Andersen. An algebra of Bayesian belief

universes for knowledge based systems. Networks, 20:637 – 659, 08 1990.

Kiem-Phong Vo. Finding triconnected components of graphs. Linear and Multilinear Alge-

bra, 13(2):143–165, 1983.

Martin J Wainwright, Tommi S Jaakkola, and Alan S Willsky. A new class of upper bounds
on the log partition function. IEEE Transactions on Information Theory, 51(7):2313–
2335, 2005.

Frank Wilcoxon. Individual comparisons by ranking methods. Biometrics bulletin, 1(6):

80–83, 1945.

David Bruce Wilson. Determinant algorithms for random planar structures. In Proceedings
of the Eighth Annual ACM-SIAM Symposium on Discrete Algorithms, SODA ’97, pages
258–267, Philadelphia, PA, USA, 1997. Society for Industrial and Applied Mathematics.

Ciyou Zhu, Richard H. Byrd, Peihuang Lu, and Jorge Nocedal. Algorithm 778: L-BFGS-B:
Fortran subroutines for large-scale bound-constrained optimization. ACM Trans. Math.
Softw., 23(4):550–560, December 1997.

32

