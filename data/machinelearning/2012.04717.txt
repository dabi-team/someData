Promoting Semantics in Multi-objective Genetic
Programming based on Decomposition

Edgar Galv´an∗
Naturally Inspired Computation Research Group
Department of Computer Science, Hamilton Institute
Maynooth University, Ireland
edgar.galvan@mu.ie

Fergal Stapleton
Naturally Inspired Computation Research Group
Department of Computer Science, Hamilton Institute
Maynooth University, Ireland
fergal.stapleton.2020@mumail.ie

0
2
0
2

c
e
D
8

]
E
N
.
s
c
[

1
v
7
1
7
4
0
.
2
1
0
2
:
v
i
X
r
a

Abstract—The study of semantics in Genetic Program (GP)
deals with the behaviour of a program given a set of inputs
and has been widely reported in helping to promote diversity
in GP for a range of complex problems ultimately improv-
ing evolutionary search. The vast majority of these studies
have focused their attention in single-objective GP, with just a
few exceptions where Pareto-based dominance algorithms such
as NSGA-II and SPEA2 have been used as frameworks to
test whether highly popular semantics-based methods, such as
Semantic Similarity-based Crossover (SSC), helps or hinders
evolutionary search. Surprisingly it has been reported that the
beneﬁts exhibited by SSC in SOGP are not seen in Pareto-based
dominance Multi-objective GP. In this work, we are interested in
studying if the same carries out in Multi-objective Evolutionary
Algorithms based on Decomposition (MOEA/D). By using the
MNIST dataset, a well-known dataset used in the machine
learning community, we show how SSC in MOEA/D promotes
semantic diversity yielding better results compared to when this
is not present in canonical MOEA/D.

Index Terms—Semantics, Genetic Programming, Multi-

objective optimisation.

I. INTRODUCTION

Semantics in Genetic Program (GP) [29] can be understood
as the behaviour of a program given a (partial) set of inputs
and has been well documented in improving performance of
GP [19], [34], [45], [47]. There have been a wide variety of dif-
ferent methods which have incorporated semantics into single-
objective GP (SOGP) but thus far research into implementing
semantics into Multi-objective GP (MOGP) has limited and
centred around only two algorithms [11], [12], [19], [25]:
the Non-dominated Sorting Genetic Algorithm (NSGA-II) [26]
and the Strength Pareto Evolutionary Algorithm (SPEA2) [26],
[50]. Both methods utilize the concept of Pareto-dominance
in the ﬁtness criteria for retaining individuals into subsequent
generations. A candidate solution is said to be Pareto dominant
if its ﬁtness is better or equal for all objectives and is strictly
preferred by at least one in the search space.

Semantic similarity-based crossover (SSC) was originally
proposed by Uy et al. [45] in the context of single-optimization

∗Main and senior author.

GP. This method uses a computationally (potentially expen-
sive) procedure by applying crossover between two parents
multiple times using semantic diversity as a criteria in the
crossover process and has proved to be highly beneﬁcial in
multiple independent research studies where SSC has been
used in SOGP [1], [14], [44], [45]. However, it has been
reported in [11], [19], [25] that SSC does not have the same
positive impact when using the concept of Pareto-dominance,
as demonstrated by the authors using NSGA-II and SPEA2 in
their empirical studies.

The goal of this paper is to demonstrate whether SSC has
a positive impact or not in MOGP by using decomposition
instead of Pareto-dominance, where it has demonstrated before
that SSC does not help evolutionary search when using the
latter. To the best of our knowledge this is the ﬁrst study where
the highly popular form of SSC used in SOGP is studied in
the context of Multi-objective Evolutionary Algorithm (GP in
this case) based on decomposition.

The outline of the paper is a follows; Section II deals with
related work covering semantics in GP, MOGP in general
as well as discussing work relating to MOEA/D, Section III
deals with method proposed in this study. The experimental
setup is discussed in Section IV and Section V discusses our
results and analysis thereof and is followed by our concluding
remarks as well as a brief discussion on future work in
Section VI.

II. RELATED WORK

GP is a form of Evolutionary Algorithm (EA) that uses
genetic operations that are analogous to behavioural biology
and evolve programs towards ﬁnding a solution to a problem.
The range of problem domains for GP are wide and this
form of EA has been found to be beneﬁcial for problems
with multiple local optima and for problems with a vary-
ing degree of complexity [9], making EAs ideal for highly
complex problems including the automatic conﬁguration of
deep neural networks’ architectures and their training (an in-
depth recent literature review in this emerging research area
can be found in [8]). However despite the well documented
effectiveness of canonical GP, there are well-known limitations
of these methods, through the study of properties of encod-
ings [17], [18], and research is on going into ﬁnding and

 
 
 
 
 
 
developing approaches to improve their overall performance
including promoting neutrality in deceptive and challenging
landscapes [16], [20], [38], [39], dynamic ﬁtness cases [23],
[24], reuse of code [21], variants of GP [13], use of surrogate
models [27], [28] to mention a few examples. Successful
examples of these improvements can be found in applicable
areas including energy-based problems [15], [22].

An area of research which has proven popular in advancing
the ﬁeld of GP has been semantics. There have been a number
of deﬁnitions for semantics in the past but broadly speaking
semantics can be deﬁned as the behavioural output of a
program when executed using a set of inputs.

A. Semantics in Genetic Programming

Scientiﬁc studies of semantics in GP have increased dra-
matically over the last years given that it has been consistently
reported to be beneﬁcial in GP search, ranging from the study
of geometric operators [34], including the analysis of indirect
semantics [19], [45] up to the use of semantics in real-world
problems [47]. We discuss next the most relevant works to the
research discussed in this paper.

Even though researchers have proposed a variety of mech-
anisms to use the semantics of GP programs to guide a
search, it is commonly accepted that semantics refers to the
output of a GP program once it is executed on a data set
(also known as ﬁtness cases in the specialized GP literature).
The work conducted by McPhee et al. [33] paved the way
for the proliferation of indirect semantics works. In their
research, the authors studied the semantics of subtrees and
the semantics of context (the remainder of a tree after the
removal of a subtree). In their studies, the authors pointed out
how a high proportion of individuals created by the widely
used 90-10 crossover operator (i.e., 90%-10% internal-external
node selection policy) are semantically equivalent. That is, the
crossover operator does not have any useful impact on the
semantic GP space, which in consequence leads to a lack of
performance increase as evolution continues.

With the goal to overcome the lack of semantic diversity re-
ported by McPhee et al. [33], Beadle and Johnson [2] proposed
a Semantically Driven Crossover (SDC) operator that pro-
motes semantic diversity over generations. More speciﬁcally,
they used reduced ordered binary decision diagrams (ROBDD)
on Boolean problems (i.e., Multiplexer and the even-5-parity
problem) to check for semantic similarity between parents
and offspring. The authors showed a signiﬁcant gain in terms
of ﬁtness improvement when promoting semantic diversity
using the SDC operator. They also showed that by using
ROBDD on these particular problems, the SDC operator was
able to considerably reduce bloat (dramatic increase of tree
sizes as evolution proceeds with a proportional improvement
in ﬁtness). Later, Beadle and Johnson [3] also explored a sim-
ilar technique for the mutation operator, called Semantically
Driven Mutation (SDM). The authors inspected the use of
semantics when applied to subtree mutation; i.e., this operator
replaces the tree at any node with a randomly generated
is checked for semantic
subtree. The resulting individual

equivalence through reducing it to a canonical form which can
be easily compared to parent trees that were similarly reduced.
SDM increases bloat more than SDC, and when both operators
are used, bloat is greatly increased. More recently, Fracasso
and Von Zuben demonstrated new SDM operators that reduced
bloat without suffering from performance loss.

These works, however, used discrete ﬁtness-valued cases,
impeding their ﬁndings to be generalized in continuous search
spaces. Uy et al. [35] addressed this limitation and multiple
works followed their approach thanks to its simplicity. Uy et al.
proposed four different forms of applying semantic crossover
operators on real-valued problems (e.g., symbolic regression
problems). To this end, the authors measured the semantic
equivalence of two expressions by measuring them against a
random set of points sampled from the domain. If the resulting
outputs of these two expressions were close to each other,
subject to a threshold value called semantic sensitivity, these
expressions were regarded as semantically equivalent. In their
experimental design, the authors proposed four scenarios. In
their ﬁrst two scenarios, Uy et al. focused their attention on the
semantics of subtrees. More speciﬁcally, for Scenario I, they
tried to encourage semantic diversity by repeating crossover
for a number of trials if two subtrees were semantically
equivalent. Scenario II explored the opposite idea of Scenario
I. For the last two scenarios, the authors focused their attention
on the entire trees. That is, for Scenario III Uy et al. checked if
offspring and parents were semantically equivalent. If so, the
parents were transmitted into the following generation and the
offspring were discarded. The authors explored the opposite
of this idea in Scenario IV (children semantically different
from their parents). They showed, for a number of symbolic
regression problems, that Scenario I produced better results
compared to the other three scenarios.

The major drawback with the Uy et al. [35] approach is
that it can be computational expensive, since it relies on a
trial mechanism that attempts to ﬁnd semantically different
individuals via the execution of the crossover operator multiple
times. To overcome this limitation, Galv´an et al. [14] proposed
a cost-effective mechanism based on the tournament selection
operator to promote semantic diversity. More speciﬁcally, the
tournament selection of the ﬁrst parent is done as usual. That
is, the ﬁttest individual is chosen from a pool of individuals
randomly picked from the population. The second parent
is chosen from a pool of individuals that are semantically
different from the ﬁrst parent and it is also the ﬁttest individual.
If there is no individual semantically different from the ﬁrst
parent, then the tournament selection of the second parent is
performed as usual. The proposed approach resulted in similar,
and in some cases better, results compared to those reported
by Uy et al. [35], [45] without the need of a trial and error
(expensive) mechanism.

More recently, Forstenlechner et al. [10] investigated the use
of semantics in a different domain from those discussed before
(Symbolic Regression and Boolean problems). The authors
showed how it is possible to compute the semantics of GP
individuals for program synthesis. This operates on a range of

different data types as opposed to those working on a single
type of data. They computed the semantics of a GP individual
by tracing it, which shows the behaviour of a program. To
promote semantic diversity the authors used two approaches
to determine semantic similarity, named (1) ‘partial change’,
used in the ﬁrst instance, and (2) ‘any change’, used if the
ﬁrst instance fails to be satisﬁed, to try to avoid using standard
crossover. ‘Partial change’ is when at least one entry has to be
different and when at least one entry has to be identical, for a
pair of semantic results stored in vectors. On the other hand,
‘any change’ does not have the constraint shown in ‘partial
change’. In their results, the authors reported that a semantic-
based GP system achieved better results in four out of eight
problems used in their work.

B. Multi-objective Genetic Programming Based on Pareto-
dominance

In a multi-objective optimization (MO) problem, one opti-
mizes with respect to multiple goals or objective functions.
Thus, the task of the algorithm is to ﬁnd acceptable solu-
tions by considering all the criteria simultaneously. This can
be achieved in various ways, where keeping the objectives
separate is the most common. This form keeps the objectives
separate and uses the notion of Pareto dominance. In this way,
Evolutionary MO (EMO) [5]–[7] offers an elegant solution to
the problem of optimizing two or more conﬂicting objectives.
The aim of EMO is to simultaneously evolve a set of the best
trade-off solutions along the objectives in a single run. EMO
is one of the most active research areas in EAs thanks to its
wide applicability as well as the impressive results achieved
by these techniques [5]–[7]. Multi-objective optimisation is
widely used outside EAs e.g., [42], [43].

MOGP has been used, for instance, to classify highly unbal-
anced binary data [4], [19]. To do so, the authors treated each
objective (class) ‘separately’ using EMO approaches [26],
[50]. Bhowan et al. [4] and Galv´an et al. [11], [19], [25]
showed, independently, how MOGP was able to achieve high
accuracy in classifying binary data in conﬂicting learning
objectives (i.e., normally a high accuracy of one class results
in lower accuracy on the other).

C. Multi-objective Evolutionary Algorithms based on Decom-
position

Decomposition methods ‘decompose’ a multi-objective
problem into a set of sub-problems. These sub-problems are
optimized simultaneously using a ﬁnite set of neighbouring
sub-problems and in doing so reduce the relevant computa-
tional complexity when compared to dominance-based meth-
ods such as NSGA-II [26] and SPEA2 [50]. It has also
been demonstrated that for some complex Pareto sets, Multi-
objective Evolutionary Algorithms based on Decomposition
(MOEA/D) outperformed NSGA-II [32].

The most popular approaches to decomposition in MOEA/D
have been the Weighted Sum, Tchebycheff and Penalty-
based Boundary Intersection (PBI) approaches [48]. There
have been also a number of variants to these methods that

have produced better approximations for more complex Pareto
fronts. Examples include MOEA/D Adaptive Weight Adjust-
ment (AWA) [40] which uses adaptive weights to produce
more uniform solutions and improve diversity and inverted
PBI [41] which is an extension of PBI and which also has
performance beneﬁts for more complex Pareto sets. More
recently, Zheng et al. [49] used a new decomposition approach
that insured the distribution of weight vectors were more
effective in promoting diversity and ensuring convergence of
solutions in objective space. They found that properties of the
Weighted Sum and Tchebycheff approaches, both had beneﬁts
and shortcomings and so developed a method that combined
both these approaches into one.

III. METHOD

Before presenting the methods used in this study, we lay

the foundations of semantics.

A. Semantics

Pawlak et al. [37] gave a formal deﬁnition for program
semantics. Let p ∈ P be a program from a given programming
language P . The program p will produce a speciﬁc output
p(in) where input in ∈ I. The set of inputs I can be
understood as being mapped to the set of outputs O which
can be deﬁned as p : I → O.

Def 1. Semantic mapping function is a function s : P → S
mapping any program p from P to its semantic s(p), where
we can show the semantic equivalence of two programs. Eq 1
expresses this formally,

s(p1) = s(p2) ⇐⇒ ∀ in ∈ I : p1(in) = p2(in)

(1)

This deﬁnition presents three important and intuitive properties
for semantics:

1) Every program has only one semantic attributed to it.
2) Two or more programs may have the same semantics.
3) Programs which produce different outputs have different

semantics.

In Def. 1, we have not given a formal representation of
semantics. In the following, semantics will be represented
as a vector of output values which are executed by the
program under consideration using an input set of data. For
this representation of semantics we need to deﬁne semantics
under the assumption of a ﬁnite set of ﬁtness cases, where
a ﬁtness case is a pair comprised of a program input and its
respective program output I × O. This allows us to deﬁne the
semantics of a program as follows.

Def 2. The semantics s(p) of a program p is the vector
of values from the output set O obtained by computing p on
all inputs from the input set I. This is formally expressed in
Eq. 2,

s(p) = [p(in1), p(in2), ..., p(inl)]

(2)

where l = |I| is the size of the input set.

B. Multi-objective Evolutionary Algorithm with Decomposi-
tion

Step 2.4) Update the neighbouring solutions for the ith case
such

Multi-objective Evolutionary Algorithm based on Decompo-
sition (MOEA/D) differs with Pareto-dominance based meth-
ods in that it decomposes the multi-objective problem into a
subset of scalar optimisation problems [48]. It is important
to note that with MOEA/D we still wish to approximate
the Pareto-optimal front, but
instead of using dominance
to determine the ﬁtness of our solutions we use a scalar
value aggregated from multiple objectives method [32]. In the
original seminal paper by Zhang et al. [48], they proposed
three scalarization methods: Weighted sum, Tchebycheff and
Penalty-based Boundary Intersection (PBI). As the weighted
sum method was reported to poorly approximate concave
fronts in their entirety and as the PBI method incorporates
its own diversity preserving measure, our research focused
primarily on the Tchebycheff approach, formally deﬁned in
Eq. 3,

min(g(x|λ)) = max
1≤j≤m

{λ˙|fj(x) − zj}

(3)

where λ is a weight vector that is assigned to each sub problem
and represents a search direction in objective space, and Zj
is the ideal point and represents the ideal solution for a given
problem.

To compute this, the following steps are considered,

Step 1: Initialization

Step 1.1) Initialize external population EP = ∅.

Step 1.2) Calculate the Euclidean distance between any
two weight vectors and ﬁnd the T closest weight vectors to
each respective weight vector. For each i = {1, 2, · · · , N },
set B(i) = {i1, i2, · · · , iT } where B(i) can be understood
as a neighbourhood reference table of indices and where
λi1 , λi2 , ..., λiT are the T closest weight vectors to λi.

Step 1.3) Randomly create the initial population x1, x2...xN
and set the ﬁtness value F V i = F (xi).

Step 2: Update For i = {1, 2, · · · , N }; do the following steps

Step 2.1) Select two indices k and l randomly from the
neighbourhood reference table B(i) and generate new
offspring y from parents xk and xl by applying genetic
operations.

2.2) An

Step
and
improvement heuristic on y to produce y′, otherwise let
y = y′.

problem-speciﬁc

optional

repair

Step 2.3) Update z such that for each j = {1, 2, · · · , m} if zj
< fj(y′), then set zj = fj(y′). In the case where objective is
to minimize F(x) then this inequality is reversed.

C. Semantic Similarity-based Crossover MOGP

To incorporate semantics in a MOGP paradigm, we ﬁrst
use the Semantic Similarity-based Crossover (SSC) originally
proposed by Uy et al. [45] which, to the best of our knowledge,
has been exclusively and successfully used in single-objective
GP. Although some attempts have been made in [11], where
the authors have indicated that
the beneﬁts of promoting
diversity via SSC in Pareto-based dominance algorithms, such
as NSGA-II and SPEA2, are limited, if any.

To use SSC in single-objective GP, a semantic distance must
be computed ﬁrst. Using Def. 2, this distance is obtained by
computing the average of the absolute difference of values for
every in ∈ I between parent and offspring. If the distance
value lies within a range, deﬁned by one or two threshold
values, then crossover is used to generate offspring. Because
this condition may be hard to satisfy, the authors tried to
encourage semantic diversity by repeatedly applying crossover
up to 20 times. If after this, the condition is not satisﬁed, then
crossover is executed as usual.

In this work, we decide to use a single threshold value to
compute the semantic distance due to its simplicity as well as
it has been proved that one threshold is enough to successfully
promote semantic diversity [11], [19], [36]. We can compute
the semantic distance between parent p and offspring v using
the distance formally deﬁned in Eq. (4),

d(pj, v) =

l

X
i=1

1 if |p(ini) − v(ini)| > UBSS

(4)

SSC made a notable impact in GP, showing, for the ﬁrst
time, how semantic diversity can be promoted in continuous
search spaces, with several subsequent papers following along
this line [1], [11], [14], [30], [46]. SSC is incorporated with
the MOEA/D method as discussed previously.

IV. EXPERIMENTAL SETUP

MNIST [31] is a highly popular data set of hand written
digits where the goal is to classify each of the 10 digits, from 0
to 9, correctly. In the following experiments we have taken part
of the MNIST where we took a subset of the data with 6000
entries for each digit. Each digit is considered in isolation,
where the digit under consideration was classiﬁed as 1 and all
other digits were classiﬁed as 0. As a result, the data itself is
imbalanced with a ratio of 1 to 9. When splitting the training
and test set, this imbalance ratio was maintained for each set.
Feature extraction was performed by splitting each image into
a series of boxes and returning the mean and standard deviation
for each box.

The MNIST data set was split 50/50 with half of the entries
being attributed to the training set and the other half for the
test set. All the results reported in this work are based on
the latter. The same class imbalance ratio is kept between the
training and test set. The function set is the list of arithmetic

TABLE I
SUMMARY OF PARAMETERS

Parameter
Population Size
Generations
Type of Crossover
Crossover Rate
Type of Mutation
Mutation Rate
Selection
Initialisation Method
Initialisation Depths:

Initial Depth
Final Depth
Maximum Length
Maximum Final Depth
Independent Runs
Semantic Thresholds
Neighbourhood size

Value
500
50
90% internal nodes, 10% leaves
0.60
Subtree
0.40
Tournament (size = 7)
Ramped half-and-half

1 (Root = 0)
5
800
8
30
UBSS = 0.5
20

operators used by the GP and are assigned at the non-terminal
nodes, these were selected as ℜ = {+, −, ∗, %, IF }, where
% denotes the protected division operator. The terminal set
is deﬁned as the set of problem features from the MNIST
data set. These are the 18 features representing the mean and
standard deviation of each image cell.

A common metric used in determining ﬁtness for binary
classiﬁcation problems, as the ones modelled in this work, is to
T P +T N
use classiﬁcation accuracy; where ACC =
T P +T N +F P +F N .
However, with imbalanced data sets, using this accuracy
measure will tend to bias towards the majority class as shown
in [4]. As such it is better to treat the minority and majority
as two separate objectives where the goal is to maximize the
number of correctly classiﬁed cases. This can be done using
the true positive rate T P R =
T P +T N and true negative
T N
T N R =
T N +F P [4]. Table I gives an overview of the
parameters used in our work. These values are the result of pre-
liminary experiments not reported in this work. In particular,
the value for the semantic threshold yields promising results.
This is in agreement with other studies indicating that this
value successfully promotes semantics helping evolutionary
search [11], [25], [45].

T P

V. RESULTS

Table II reports both the average hypervolume over 30
independent runs. We also computed the accumulated Pareto-
optimal (PO) front with respect to 30 runs: the set of non-
dominated solutions after merging all 30 Pareto-approximated
fronts. These results were gathered for a canonical MOEAD/D
framework and by combining MOEA/D with the SSC method
as outlined by Uy et al. [45]. Both methods used the Tcheby-
cheff approach and only consider the majority and minority
as objectives. To obtain a statistically sound conclusion, the
Wilcoxon rank-sum test was run with a signiﬁcance level of
α= 0.05 on the average hypervolume results. These statistically
signiﬁcant differences are highlighted in boldface. By using
SSC with MOEA/D-TCH we ﬁnd that the hypervolume results
are signiﬁcantly better for every digit.

Furthermore a payoff table was created to compare the
results canonical forms of NSGA-II, SPEA2, MOEA/D-TCH

TABLE II
AVERAGE (± STD DEVIATION) HYPERVOLUME OF EVOLVED
PARETO-APPROXIMATED FRONTS AND PO FRONTS FOR MOEA/D-TCH
AND MOEA/D-TCH SSC OVER 30 INDEPENDENT RUNS FOR MNIST
DATA SET.

Dataset

Mnist 0
Mnist 1
Mnist 2
Mnist 3
Mnist 4
Mnist 5
Mnist 6
Mnist 7
Mnist 8
Mnist 9

MOEA/D-TCH
Hypervolume

MOEA/D-TCH SSC
Hypervolume

Average
0.908 ± 0.009
0.945 ± 0.011
0.911 ± 0.012
0.869 ± 0.020
0.867 ± 0.021
0.822 ± 0.018
0.914 ± 0.012
0.920 ± 0.012
0.786 ± 0.021
0.783 ± 0.018

PO Front
0.918
0.949
0.911
0.860
0.863
0.799
0.903
0.921
0.795
0.783

Average
0.925 ± 0.008+
0.961 ± 0.005+
0.925 ± 0.010+
0.890 ± 0.014+
0.893 ± 0.012+
0.850 ± 0.013+
0.929 ± 0.009+
0.931 ± 0.008+
0.806 ± 0.022+
0.818 ± 0.018+

PO Front
0.928
0.957
0.928
0.894
0.886
0.845
0.928
0.925
0.803
0.813

TABLE III
PAYOFF TABLES FOR CANONICAL NSGA-II, SPEA2, MOEA/D-TCH
AND THE SEMANTIC-BASED METHOD MOEA/D-TCH SSC FOR EACH OF
THE 10 DIGITS

A

B

C

D

A
-
0
0
2

B
0
-
1
2

C
8
8
-
10

D
3
5
0
-

NSGA-II
A:
B:
SPEA2
C: MOEA/D-TCH
D: MOEA/D-TCH SSC

and MOEA/D-TCH SSC (for reference the hypervolume re-
sults have been included in Table IV). The payoff table can
be read as follows; the strategies of the column index are
compared against the strategies of the row index and for each
digit that is signiﬁcantly better for the column strategy counts
as one ‘win’ towards the count. For example, MOEA/D-
TCH SSC produced 10 ‘wins’ over its canonical from but
results were comparatively mixed when compared against
the canonical forms of NSGA-II and SPEA2. In this regard,
SPEA2 performed better for 5 digits versus MOEA/D-TCH
SSC which performed better for 2 and a somewhat more even
spread of wins for NSGA-II, which performed better for 3
digits versus MOEA/D-TCH SSC which performed better for
2. Both these methods produced signiﬁcantly better results
over the canonical form of MOEA/D garnering 8 ‘wins’ each
in this respect. In general we can say that MOEA/D performs
worse on the MNIST data set when compared against NSGA-
II and SPEA2 but that when SSC is included the performance
is somewhat more comparable.

Figure 1 shows the accumulated PO with respect to 30 runs
for MOEA/D-TCH and MOEA/D-TCH SSC methods for the
10 digits. The SSC method is shown in green and we can
see the hypervolume covers a greater area in objective space
for the majority and minority classes when compared with the
canonical method of MOEA/D-TCH for all 10 digits, although
for digits 1 and 8 this distinction is harder to make out.

MNIST 0

MNIST 1

MNIST 2

1.0

0.8

0.6

0.4

0.2

y
t
i
r
o
a
M

j

1.0

0.8

0.6

0.4

0.2

y
t
i
r
o
a
M

j

1.0

0.8

0.6

0.4

0.2

y
t
i
r
o
a
M

j

MOEA/D-TCH
MOEA/D-TCH SSC

MOEA/D-TCH
MOEA/D-TCH SSC

MOEA/D-TCH
MOEA/D-TCH SSC

0.0

0.0

0.2

0.4

0.6

0.8

1.0

0.0

0.0

0.2

0.4

0.6

0.8

1.0

0.0

0.0

0.2

0.4

0.6

0.8

1.0

Minority

MNIST 3

Minority

MNIST 4

Minority

MNIST 5

1.0

0.8

0.6

0.4

0.2

y
t
i
r
o
a
M

j

1.0

0.8

0.6

0.4

0.2

y
t
i
r
o
a
M

j

1.0

0.8

0.6

0.4

0.2

y
t
i
r
o
a
M

j

MOEA/D-TCH
MOEA/D-TCH SSC

MOEA/D-TCH
MOEA/D-TCH SSC

MOEA/D-TCH
MOEA/D-TCH SSC

0.0

0.0

0.2

0.4

0.6

0.8

1.0

Minority

0.0

0.0

0.2

0.4

0.6

0.8

1.0

Minority

0.0

0.0

0.2

0.4

0.6

0.8

1.0

Minority

MNIST 6

MNIST 7

1.0

0.8

y
t
i
r
o
a
M

j

0.6

0.4

0.2

1.0

0.8

y
t
i
r
o
a
M

j

0.6

0.4

0.2

MOEA/D-TCH
MOEA/D-TCH SSC

MOEA/D-TCH
MOEA/D-TCH SSC

0.0

0.0

0.2

0.4

0.6

0.8

1.0

0.0

0.0

0.2

0.4

0.6

0.8

1.0

Minority

MNIST 8

Minority

MNIST 9

1.0

0.8

y
t
i
r
o
a
M

j

0.6

0.4

0.2

1.0

0.8

y
t
i
r
o
a
M

j

0.6

0.4

0.2

MOEA/D-TCH
MOEA/D-TCH SSC

MOEA/D-TCH
MOEA/D-TCH SSC

0.0

0.0

0.2

0.4

0.6

0.8

1.0

Minority

0.0

0.0

0.2

0.4

0.6

0.8

1.0

Minority

Fig. 1. Pareto fronts for each of the MNIST digits using MOEA/D-TCH and MOEA/D-TCH SSC.

TABLE IV
AVERAGE (± STD DEVIATION) HYPERVOLUME OF EVOLVED
PARETO-APPROXIMATED FRONTS AND PO FRONTS FOR CANONICAL
NSGA-II AND SPEA2 OVER 30 INDEPENDENT RUNS FOR MNIST DATA
SET.

Dataset

Mnist 0
Mnist 1
Mnist 2
Mnist 3
Mnist 4
Mnist 5
Mnist 6
Mnist 7
Mnist 8
Mnist 9

NSGA-II
Hypervolume

SPEA2
Hypervolume

Average
0.927 ± 0.012
0.963 ± 0.010
0.932 ± 0.012
0.897 ± 0.041
0.907 ± 0.039
0.855 ± 0.037
0.931 ± 0.016
0.939 ± 0.007
0.770 ± 0.094
0.758 ± 0.097

PO Front
0.922
0.963
0.945
0.917
0.929
0.872
0.947
0.947
0.819
0.831

Average
0.926 ± 0.017
0.965 ± 0.008
0.932 ± 0.014
0.907 ± 0.017
0.914 ± 0.022
0.849 ± 0.022
0.929 ± 0.019
0.937 ± 0.008
0.770 ± 0.084
0.747 ± 0.085

PO Front
0.940
0.970
0.937
0.913
0.925
0.877
0.944
0.946
0.756
0.712

VI. CONCLUSIONS

To the authors knowledge, this paper presents the ﬁrst
method to promote semantics into an Multi-objective Genetic
Programming paradigm using a decomposition method. While
incorporating SSC into SOGP resulted in signiﬁcantly better
results for Uy et al. [45]. Previous works by Galv´an et al. [11]
showed that this did not follow through in a EMO paradigm
when compared with canonical forms of NSGA-II and SPEA2.
Both these methods use dominance-based ﬁtness criteria to
determine selection, where each objective is considered sepa-
rately. However decomposition uses an aggregated scalariza-
tion for ﬁtness, which is more akin to SOGP selection. As
such this may explain why incorporating SSC in a MOEA/D
framework produces better performance over its canonical
form, whereas with the non-decomposition MOGP methods
the performance is not signiﬁcantly better. This demonstrates
an important advantage to using decompositional approaches
in MOGP with regards to semantics.

It was also found that for the purely canonical forms,
MOEA/D performed signiﬁcantly worse than NSGA-II. Future
work comparing semantics would beneﬁt by using data sets
where MOEA/D is known to perform signiﬁcantly better than
NSGA-II for the MNIST data set. Furthermore only one
decomposition approach has been tested for this paper: the
Tchebycheff approach. As SSC is performed independently of
the decomposition approach used, this method can be tested on
a variety of different variants of MOEA/D, in particular PBI
and inverted PBI methods have also been reported to perform
better than the Tchebycheff approach depending structure of
the Pareto front under consideration and as such would be a
good starting point for further analysis.

VII. ACKNOWLEDGMENTS

This publication has emanated from research conducted with
the ﬁnancial support of Science Foundation Ireland under
Grant number 18/CRT/6049. The authors wish to acknowledge
the DJEI/DES/SFI/HEA Irish Centre for High-End Computing
(ICHEC) for the provision of computational facilities and
support.

REFERENCES

[1] P. T. Anh, Q. U. Nguyen, X. H. Nguyen, and M. O’Neill. Examining the
diversity property of semantic similarity based crossover. In K. Krawiec,
A. Moraglio, T. Hu, A. S. Etaner-Uyar, and B. Hu, editors, Genetic
Programming - 16th European Conference, EuroGP 2013, Vienna,
Austria, April 3-5, 2013. Proceedings, volume 7831 of Lecture Notes
in Computer Science, pages 265–276. Springer, 2013.

[2] L. Beadle and C. Johnson. Semantically driven crossover in genetic
programming. In Evolutionary Computation, 2008. CEC 2008. (IEEE
World Congress on Computational Intelligence)., pages 111 –116, june
2008.

[3] L. Beadle and C. Johnson. Semantically driven mutation in genetic
In Evolutionary Computation, 2009. CEC ’09. IEEE

programming.
Congress on, pages 1336 –1342, may 2009.

[4] U. Bhowan, M. Johnston, M. Zhang, and X. Yao. Evolving diverse
ensembles using genetic programming for classiﬁcation with unbalanced
data. IEEE Transactions on Evolutionary Computation, 17(3):368–386,
June 2013.

[5] C. A. C. Coello. Evolutionary multi-objective optimization: a historical
view of the ﬁeld. IEEE Computational Intelligence Magazine, 1(1):28–
36, Feb 2006.

[6] C. A. Coello Coello. A comprehensive survey of evolutionary-based
multiobjective optimization techniques. Knowledge and Information
Systems, 1(3):269–308, 1999.

[7] K. Deb. Multi-Objective Optimization Using Evolutionary Algorithms.

John Wiley & Sons, Inc., New York, NY, USA, 2001.

[8] Edgar Galv´an and Peter Mooney. Neuroevolution in Deep Neural
Networks: Current Trends and Future Challenges. arXiv preprint arXiv:
2006.05415, 2020.

[9] A. E. Eiben and J. Smith.

From evolutionary computation to the

evolution of things. Nature, 521:476–482, 05 2015.

[10] S. Forstenlechner, D. Fagan, M. Nicolau, and M. O’Neill. Towards
effective semantic operators for program synthesis in genetic program-
In Proceedings of the Genetic and Evolutionary Computation
ming.
Conference, GECCO ’18, pages 1119–1126, New York, NY, USA, 2018.
ACM.

[11] E. Galv´an and M. Schoenauer. Promoting semantic diversity in multi-
objective genetic programming.
In A. Auger and T. St¨utzle, editors,
Proceedings of the Genetic and Evolutionary Computation Conference,
GECCO 2019, Prague, Czech Republic, July 13-17, 2019, pages 1021–
1029. ACM, 2019.

[12] E. Galv´an and F. Stapleton. Semantic-based distance approaches in

multi-objective genetic programming. CoRR, abs/2009.12401, 2020.

[13] E. Galvan-Lopez. Efﬁcient graph-based genetic programming represen-
tation with multiple outputs. International Journal of Automation and
Computing, 5(1):81–89, Jan 2008.

[14] E. Galv´an-L´opez, B. Cody-Kenny, L. Trujillo, and A. Kattan. Using
semantics in the selection mechanism in genetic programming: A simple
In 2013 IEEE Congress on
method for promoting semantic diversity.
Evolutionary Computation, pages 2972–2979, June 2013.

[15] E. Galv´an-L´opez, T. Curran, J. McDermott, and P. Carroll. Design of an
autonomous intelligent demand-side management system using stochas-
tic optimisation evolutionary algorithms. Neurocomputing, 170:270–285,
2015.

[16] E. Galv´an-L´opez, S. Dignum, and R. Poli. The effects of constant
neutrality on performance and problem hardness in GP. In M. O’Neill,
L. Vanneschi, S. M. Gustafson, A. Esparcia-Alc´azar,
I. D. Falco,
A. D. Cioppa, and E. Tarantino, editors, Genetic Programming, 11th
European Conference, EuroGP 2008, Naples, Italy, March 26-28, 2008.
Proceedings, volume 4971 of Lecture Notes in Computer Science, pages
312–324. Springer, 2008.

[17] E. Galv´an-L´opez, J. McDermott, M. O’Neill, and A. Brabazon. Deﬁning
In Proceed-
locality in genetic programming to predict performance.
ings of the IEEE Congress on Evolutionary Computation, CEC 2010,
Barcelona, Spain, 18-23 July 2010, pages 1–8, 2010.

[18] E. Galv´an-L´opez, J. McDermott, M. O’Neill, and A. Brabazon. Deﬁning
locality as a problem difﬁculty measure in genetic programming. Genetic
Programming and Evolvable Machines, 12(4):365–401, 2011.

[19] E. Galv´an-L´opez, E. Mezura-Montes, O. Ait ElHara, and M. Schoenauer.
In
On the use of semantics in multi-objective genetic programming.
J. Handl et al., editors, Parallel Problem Solving from Nature – PPSN
XIV: 14th International Conference, Edinburgh, UK, September 17-21,
2016, Proceedings, pages 353–363. Springer, 2016.

[36] Q. U. Nguyen, T. A. Pham, X. H. Nguyen, and J. McDermott. Sub-
tree semantic geometric crossover for genetic programming. Genetic
Programming and Evolvable Machines, 17(1):25–53, 2016.

[37] T. P. Pawlak, B. Wieloch, and K. Krawiec. Semantic backpropagation for
designing search operators in genetic programming. IEEE Transactions
on Evolutionary Computation, 19(3):326–340, June 2015.

[38] R. Poli and E. Galv´an-L´opez. On the effects of bit-wise neutrality
on ﬁtness distance correlation, phenotypic mutation rates and problem
hardness.
In C. R. Stephens, M. Toussaint, D. Whitley, and P. F.
Stadler, editors, Foundations of Genetic Algorithms, pages 138–164,
Berlin, Heidelberg, 2007. Springer Berlin Heidelberg.

[39] R. Poli and E. Galv´an-L´opez. The effects of constant and bit-wise neu-
trality on problem hardness, ﬁtness distance correlation and phenotypic
mutation rates. IEEE Trans. Evolutionary Computation, 16(2):279–300,
2012.

[40] Y. Qi, X. Ma, F. Liu, L. Jiao, J. Sun, and J. Wu. Moea/d with adaptive

weight adjustment. Evolutionary Computation, 22(2):231–264, 2014.

[41] H. Sato. Inverted pbi in moea/d and its impact on the search performance
the
on multi and many-objective optimization.
2014 Annual Conference on Genetic and Evolutionary Computation,
GECCO ’14, page 645–652, New York, NY, USA, 2014. Association
for Computing Machinery.

In Proceedings of

[42] A. Taylor, I. Dusparic, E. Galv´an-L´opez, S. Clarke, and V. Cahill.
Transfer learning in multi-agent systems through parallel transfer.
In
Workshop on Theoretically Grounded Transfer Learning at the 30th
International Conf. on Machine Learning, volume 28 of Omnipress,
page 28, 2013.

[43] A. Taylor, I. Dusparic, E. G. L´opez, S. Clarke, and V. Cahill. Acceler-
ating learning in multi-objective systems through transfer learning. In
2014 International Joint Conference on Neural Networks, IJCNN 2014,
Beijing, China, July 6-11, 2014, pages 2298–2305. IEEE, 2014.
[44] N. Q. Uy, N. X. Hoai, M. O’Neill, B. McKay, and E. Galv´an-L´opez.
An analysis of semantic aware crossover.
In Z. Cai, Z. Li, Z. Kang,
and Y. Liu, editors, Computational Intelligence and Intelligent Systems,
pages 56–65, Berlin, Heidelberg, 2009. Springer Berlin Heidelberg.
[45] N. Q. Uy, N. X. Hoai, M. O’Neill, R. I. McKay, and E. Galv´an-L´opez.
Semantically-based crossover in genetic programming: application to
real-valued symbolic regression. Genetic Programming and Evolvable
Machines, 12(2):91–119, 2011.

[46] N. Q. Uy, E. Murphy, M. O’Neill, and N. X. Hoai.

Semantic-
In 2011 Third
based subtree crossover applied to dynamic problems.
International Conference on Knowledge and Systems Engineering, pages
78–84, Oct 2011.

[47] L. Vanneschi, M. Castelli, L. Manzoni, and S. Silva. A New Implemen-
tation of Geometric Semantic GP and Its Application to Problems in
Pharmacokinetics, pages 205–216. Springer Berlin Heidelberg, Berlin,
Heidelberg, 2013.

[48] Q. Zhang and H. Li. Moea/d: A multiobjective evolutionary algorithm
based on decomposition. IEEE Transactions on Evolutionary Computa-
tion, 11(6):712–731, 2007.

[49] W. Zheng, Y. Tan, L. Meng, and H. Zhang. An improved moea/d
design for many-objective optimization problems. Applied Intelligence,
48:3839–3861, 2018.

[50] E. Zitzler, M. Laumanns, and L. Thiele. Spea2: Improving the strength

pareto evolutionary algorithm. Technical report, 2001.

[20] E. Galv´an-L´opez and R. Poli. Some steps towards understanding how
neutrality affects evolutionary search. In T. P. Runarsson, H. Beyer, E. K.
Burke, J. J. Merelo Guerv’os, L. D. Whitley, and X. Yao, editors, Parallel
Problem Solving from Nature - PPSN IX, 9th International Conference,
Reykjavik, Iceland, September 9-13, 2006, Procedings, volume 4193,
pages 778–787. Springer, 2006.

[21] E. Galv´an-L´opez, R. Poli, and C. A. C. Coello. Reusing code in genetic
programming.
In M. Keijzer, U. O’Reilly, S. M. Lucas, E. Costa,
and T. Soule, editors, Genetic Programming, 7th European Conference,
EuroGP2004, Coimbra, Portugal, April 5-7, 2004, Proceedings, volume
3003 of Lecture Notes in Computer Science, pages 359–368. Springer,
2004.

[22] E. Galv´an-L´opez, M. Schoenauer, and C. Patsakis. Design of an
autonomous intelligent demand-side management system by using elec-
tric vehicles as mobile energy storage units by means of evolutionary
algorithms.
In A. C. Rosa, J. J. Merelo Guerv’os, A. Dourado, J. M.
Cadenas, K. Madani, A. E. Ruano, and J. Filipe, editors, Proceedings
of the 7th International Joint Conference on Computational Intelligence
(IJCCI 2015) - Volume 1: ECTA, Lisbon, Portugal, November 12-14,
2015, pages 106–115. SciTePress, 2015.

[23] E. Galv´an-L´opez, L. V´azquez-Mendoza, M. Schoenauer, and L. Trujillo.
Dynamic GP ﬁtness cases in static and dynamic optimisation problems.
In P. A. N. Bosman, editor, Genetic and Evolutionary Computation
Conference, Berlin, Germany, July 15-19, 2017, Companion Material
Proceedings, pages 227–228. ACM, 2017.

[24] E. Galv´an-L´opez, L. V´azquez-Mendoza, M. Schoenauer, and L. Trujillo.
On the use of dynamic GP ﬁtness cases in static and dynamic optimi-
sation problems. In E. Lutton, P. Legrand, P. Parrend, N. Monmarch´e,
and M. Schoenauer, editors, Artiﬁcial Evolution - 13th International
Conference, ´Evolution Artiﬁcielle, EA 2017, Paris, France, October 25-
27, 2017, Revised Selected Papers, volume 10764 of Lecture Notes in
Computer Science, pages 72–87. Springer, 2017.

[25] E. Galv´an-L´opez, L. V´azquez-Mendoza, and L. Trujillo.

Stochas-
tic semantic-based multi-objective genetic programming optimisation
for classiﬁcation of imbalanced data.
In O. Pichardo-Lagunas and
S. Miranda-Jim´enez, editors, Advances in Soft Computing, chapter 22,
pages 261–272. Springer, 2016.

[26] S. A. K. Deb, A. Pratap and T. Meyarivan. A fast and elitist multiob-
jective genetic algorithm: Nsga-ii. IEEE Transactions on Evolutionary
Computation, 6:182–197, 2002.

[27] A. Kattan and E. Galvan-Lopez. Evolving radial basis function networks
In 2012

via gp for estimating ﬁtness values using surrogate models.
IEEE Congress on Evolutionary Computation, pages 1–7, June 2012.

[28] A. Kattan, Y. Ong, and E. G. L´opez. Multi-agent multi-issue negotiations
with incomplete information: A genetic algorithm based on discrete
In Proceedings of the IEEE Congress on Evolu-
surrogate approach.
tionary Computation, CEC 2013, Cancun, Mexico, June 20-23, 2013,
pages 2556–2563, 2013.

[29] J. Koza. Genetic programming as a means for programming computers

by natural selection. Statistics and Computing, 4, 06 1994.

[30] K. Krawiec and T. Pawlak. Locally geometric semantic crossover:
a study on the roles of semantics and homology in recombination
operators. Genetic Programming and Evolvable Machines, 14:31–63,
2013.

[31] Y. Lecun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-based learning
applied to document recognition. Proceedings of the IEEE, 86(11):2278–
2324, 1998.

[32] H. Li and Q. Zhang. Multiobjective optimization problems with
IEEE Transactions on

complicated pareto sets, moea/d and nsga-ii.
Evolutionary Computation, 13(2):284–302, 2009.

[33] N. F. McPhee, B. Ohs, and T. Hutchison. Semantic building blocks in
genetic programming. In Proceedings of the 11th European conference
on Genetic programming, EuroGP’08, pages 134–145, Berlin, Heidel-
berg, 2008. Springer-Verlag.

[34] A. Moraglio, K. Krawiec, and C. G. Johnson. Geometric semantic
genetic programming. In C. A. C. Coello, V. Cutello, K. Deb, S. Forrest,
G. Nicosia, and M. Pavone, editors, PPSN (1), volume 7491 of LNCS,
pages 21–31. Springer, 2012.

[35] Q. U. Nguyen, X. H. Nguyen, and M. O’Neill.

Semantic aware
crossover for genetic programming: The case for real-valued function
regression. In Proceedings of the 12th European Conference on Genetic
Programming, EuroGP ’09, pages 292–302, Berlin, Heidelberg, 2009.
Springer-Verlag.

