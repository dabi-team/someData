MINA: Convex Mixed-Integer Programming for Non-Rigid Shape Alignment

Florian Bernard

Zeeshan Khan Suri

Christian Theobalt

MPI Informatics

Saarland Informatics Campus

0
2
0
2

b
e
F
8
2

]

V
C
.
s
c
[

1
v
3
2
6
2
1
.
2
0
0
2
:
v
i
X
r
a

Figure 1. Left: MINA matches the straight cylinder X non-rigidly to the curved cylinder Y (their orientations are arbitrary, but we visualise
them with same orientation). It ﬁnds the globally optimal correspondences P ∈ P between a sparse set of points (coloured dots), as well
as the non-rigid deformation τ of X so that τ (X ) aligns with Y. MINA is highly ﬂexible, e.g. it can match a mesh to a point cloud
(middle left), match shapes with different topologies (middle right, where the hands in X are not touching, while the hands in Y are, see
the geodesic paths between both hands shown as red lines), or deal with partial overlaps (right). (Best viewed on screen when zoomed in)

Abstract

We present a convex mixed-integer programming formu-
lation for non-rigid shape matching. To this end, we pro-
pose a novel shape deformation model based on an efﬁcient
low-dimensional discrete model, so that ﬁnding a globally
optimal solution is tractable in (most) practical cases. Our
approach combines several favourable properties: it is in-
dependent of the initialisation, it is much more efﬁcient to
solve to global optimality compared to analogous quadratic
assignment problem formulations, and it is highly ﬂexible
in terms of the variants of matching problems it can handle.
Experimentally we demonstrate that our approach outper-
forms existing methods for sparse shape matching, that it
can be used for initialising dense shape matching methods,
and we showcase its ﬂexibility on several examples.

1. Introduction

Finding correspondences in geometric data is a long-
standing problem in vision, graphics, and beyond. The ap-
plications range from the creation of statistical shape mod-
els, 3D reconstruction, object tracking, or recognition, to
more recent settings such as the alignment of geometric
data to enable the training of deep learning models. In this
work we consider the problem of ﬁnding correspondences
between two given shapes, known as shape matching.

We assume that one shape is a geometrically transformed
version of the other shape. With that, matching shape X to
shape Y can be phrased as ﬁnding a transformation τ (which

belongs to a particular class Ω of transformations) such that
the transformed shape τ (X ) best aligns with Y. Formally,
this can be written as the optimisation problem

min
τ ∈Ω

d(τ (X ), Y) ,

(1)

where d(·, ·) is a suitable metric that quantiﬁes the discrep-
ancy between both shapes. The particular shape match-
ing setting depends on the choice of the metric d(·, ·) and
the class of transformations Ω. For example, rigid shape
matching refers to Ω = SE(d), where SE(d) is the spe-
cial Euclidean group in dimension d. In this work we study
the non-rigid shape matching problem, where Ω comprises
non-rigid deformations (to be deﬁned in Sec. 3).

Although many previous works have addressed non-rigid
shape matching, there are several open challenges: (i) due to
the non-convex nature of Problem (1) for virtually all rele-
vant choices of d(·, ·) and Ω, existing methods cannot guar-
antee to ﬁnd global optima. Hence, these methods heavily
depend on the initial choice of τ . (ii) Oftentimes, non-rigid
shape matching methods require that both shapes have the
same representation (e.g. meshes). (iii) Existing approaches
have a limited ﬂexibility in terms of the matching formula-
tion that can be handled, e.g. they can only handle bijec-
tive matchings, or they cannot guarantee injectivity, they do
not allow for additional constraints (e.g. bounding the max-
imum distortion of a matching), or they cannot deal with
shapes that have different topologies.
(iv) Moreover, ex-
isting formulations that purely aim for preserving pairwise
distances when ﬁnding a matching (see quadratic assign-
ment problem in Sec. 2) are not guaranteed to maintain the

inputour matchingmesh to point clouddifferent topologypartial overlaps 
 
 
 
 
 
orientation of the surface.

Our contribution. Our main idea is to formulate non-
rigid shape matching in terms of a convex mixed-integer
programming (MIP) problem, while addressing (i)-(iv). We
summarise our main contributions as follows:

• We propose a low-dimensional discrete model for non-
rigid shape matching that is highly ﬂexible as it allows
to tackle a wide range of matching formulations.

• Although solving MIP problems to global optimality
has worst-case time complexity that is exponential in
the number of integer variables, our proposed formula-
tion only requires a small number of integer variables
that is independent of the shape resolution.

• Our formulation does not require an initialisation and
it is oftentimes possible to (certiﬁably) ﬁnd a globally
optimal solution in practice.

2. Related Work & Background

Due to the vast amount of literature related to shape
matching and correspondence problems, it is beyond the
scope of this paper to provide an exhaustive background of
related work. A broad overview of the topic is for exam-
ple presented in [47]. In the following we summarise works
that we consider most relevant.

Rigid shape matching. Finding a rotation and translation
that aligns two shapes is known as rigid shape matching.
The Procrustes problem [42] considers the setting when the
correspondences between points on both shapes are known,
which admits an efﬁcient closed-form solution. However,
rigid shape matching becomes signiﬁcantly harder if the
correspondences are unknown. Most commonly, this is ad-
dressed via local optimisation. A popular approach is the It-
erative Closest Point (ICP) algorithm [7], which also comes
in various variants, such as a probabilistic formulation [30].
These methods have in common that they do not guaran-
tee to ﬁnd a globally optimal solution and therefore their
outcome is highly dependent on a good initialisation. Con-
trary to these local methods, for the rigid shape matching
problem there are also global approaches, e.g. based on a
semideﬁnite programming relaxation [26], or on branch and
bound algorithms [31, 52].

A downside of these shape matching approaches is that
they have the strong assumption that both shapes can be
aligned based on a rigid-body transformation. However,
in practice this assumption is oftentimes violated, so that
non-rigid shape matching approaches are more appropriate,
which we will discuss next.

Functional maps. A popular paradigm for isometric
shape matching are functional maps (FM) [32, 18, 34],

Figure 2. Runtime comparison between our formulation, a QAP
and a reduced QAP (cf. search space reduction in the Supp. Mat.)
when solved with MOSEK [2].

which deﬁne a framework for transferring a function from
a source to a target shape. Although FM were shown to
be a powerful tool for isometric shape matching, they also
they are sensitive to noise and
have some shortcomings:
suffer from symmetries, point-to-point maps obtained from
FM are neither guaranteed to be smooth nor injective, and
they are not suitable for severe non-isometries. Rigid shape
matching methods applied to spectral embeddings (obtained
via FM) can also be used for isometric matching, such as
done in PM-SDP [26]. However, in this case the mentioned
shortcomings also apply.

Quadratic assignment problem. Another popular ap-
proach for non-rigid shape matching are formulations based
on the quadratic assignment problem (QAP) (or graph
matching) [25], which aim for a non-rigid deformation with
small distortion. In a discrete setting this can be phrased as
matching vertices between two shapes in such a way that
pairwise geodesic distances (or similar quantities) are (ap-
proximately) preserved by the vertex-to-vertex correspon-
dences. The QAP is known to be NP-hard [35], so that
most solution approaches are based on heuristic approaches
without formal guarantees, such as e.g. [22]. There are
also more principled methods based on convex relaxations,
including lifting-free [53, 13, 6] and lifting-based relax-
ations [40, 46, 20]. However, they do not guarantee to
ﬁnd a globally optimal solution of the original non-convex
problem as they rely on some kind of rounding proce-
dure to obtain a binary solution. Globally optimal QAP
solvers are based on combinatorial search, e.g. via branch
and bound [4], and these methods scale exponentially in the
number of variables. Similarly as in the QAP, our method
also takes the spatial context of matchings into account, but
we demonstrate that in practice our proposed formulation is
signiﬁcantly faster to solve, cf. Fig. 2. We believe that this
is because our formulation has a special structure (based on
our sparse deformation model) that can more efﬁciently be
leveraged by combinatorial solvers.

Global non-rigid matching.
It was shown that certain
matching problems can be solved globally optimal by ﬁnd-
ing shortest paths in a graph, or based on dynamic program-
ming. These include matching 2D shapes (contours) to a

10152025problem size00.51time [h]max time budgetReduced QAPQAPOurs2D image [11, 14, 41], or matching a 2D contour to a 3D
shape [21]. As for example pointed out in [5], non-rigidly
matching two objects in 3D is a signiﬁcantly more difﬁcult
problem as it does not allow such a formulation. In [51] the
elastic matching of two 3D meshes is addressed based on
a linear programming formulation. However, the formula-
tion is sensitive to the mesh triangulation, requires a large
number of binary variables, and due to the non-tightness of
relaxation it relies on sophisticated rounding techniques af-
ter which global optimality cannot be guaranteed anymore.
In [10] the authors propose a convex formulation for non-
rigid registration that is solved via message passing. This
approach requires an extrinsic term in order to disambiguate
intrinsic symmetries, which in practice means that an initial
alignment between both shapes is indispensable, thereby
mitigating the advantages of a convex formulation.

Local non-rigid matching.
In a similar spirit, local re-
ﬁnement techniques also rely on a good matching initialisa-
tion. Such methods include [49, 48] and [27], where a given
initial matching is gradually reﬁned. While [49] relies on a
QAP formulation, in [27] a spectral method based on FM is
used for a hierarchical upsampling. In Sec. 4.3 we show that
our method can be used as initialisation for such methods.
In [44] the authors propose a non-rigid deformation
model based on per-triangle afﬁne transformations. Within
this framework they also pose a correspondence problem,
which, however, requires a good initial alignment between
both shapes in order to make the optimisation problem well-
posed. Moreover, since the problem is non-convex, in gen-
eral one only ﬁnds local optima. In our work we leverage a
similar deformation model, but (i) we phrase the problem in
a well-posed way without requiring an initial shape align-
ment, and (ii) we perform a global optimisation.

Learning-based matching. Shape matching has also
been tackled with machine learning techniques, e.g. with
random forests [38], supervised deep functional maps [23],
deep functional maps trained in self- or unsupervised set-
tings [17, 39], or using PointNet [33] for learning point
cloud correspondences [16]. Undeniably, machine learn-
ing has the potential to address many open challenges in
shape matching, e.g. for learning appropriate shape rep-
resentations.
In the past it was demonstrated that com-
binatorial shape matching beneﬁts from learned deep fea-
tures [5], and reversely, that embedding combinatorial opti-
misation solvers into neural networks (“differentiable pro-
gramming”) opens up new possibilities for tackling a range
of interesting matching problems [28]. We believe that
in the future our method may also be amenable to utilise
such synergies, and therefore consider it to be orthogonal to
learning-based methods.

Convex mixed-integer programming. Mixed-integer
programming refers to optimisation problems that involve
both continuous and discrete variables. Their advantage is
that they are extremely ﬂexible and allow to model a wide
range of complex problems. For example, they can be used
to discretise difﬁcult non-convex problems, such as formu-
lations that impose rotation matrix constraints, or for phras-
ing matching problems with binary variables. However, the
downside is that MIP problems have a search space that has
exponential size in the number of discrete variables, so that
in general it is very hard to solve large problems to global
optimality. Convex mixed-integer programming refers to a
subclass of MIP problems that are convex for ﬁxed inte-
ger variables. A major advantage is that for this class of
problems there exist efﬁcient branch and bound solvers that
globally optimise such problems. Albeit the fact that these
solvers have a worst-case runtime that is exponential in the
number of integer variables, in this work we demonstrate
that solving non-rigid shape matching using a convex MIP
reformulation is tractable in (most) practical scenarios.

3. Non-Rigid Shape Matching

First, we summarise our notation. For an integer i ∈ N
we deﬁne [i] := {1, . . . , n}. For a matrix X ∈ Rp×q and
the index set I ⊆ [p] we use XI ∈ R|I|×q to denote the
|I| rows of X selected by I. 1n and In denote the n-
dimensional vector of all ones and the n-dimensional iden-
tity matrix, (cid:107)·(cid:107) denotes the Frobenius norm, and matrix and
vector inequalities are understood element-wise.

Let X and Y be triangular surface meshes that are dis-
cretisations of Riemannian 2-manifolds embedded in 3D
space. Note that later in Sec. 4.4 we will also address the
case when Y is a point cloud. Our aim is to ﬁnd a non-
rigid deformation τ that transforms shape X to τ (X ), so
that it aligns well with shape Y, cf. Problem (1). For no-
tational convenience we use X ∈ RnX ×3 and Y ∈ RnY ×3
to refer to the matrices containing the nX and nY 3D ver-
tex positions of shapes X and Y, respectively. Moreover,
let F X ∈ [nX ]fX ×3 be a matrix that encodes the triangular
faces of X , where fX is the number of triangles.

3.1. Non-Rigid Deformation Model

We model the non-rigid deformation of X by applying an
afﬁne transformation to each triangle. In conjunction with
suitable mesh consistency constraints, the individual per-
triangle afﬁne deformations globally constitute a non-rigid
deformation. Although related deformation models have
been introduced before [43, 44, 5, 45], they have not been
used for a global optimisation of non-rigid shape matching.

Afﬁne per-triangle transformations. For the i-th vertex
Xi we deﬁne the non-rigid deformation τp in terms of its

Figure 3. Illustration of the deformation τ , where each triangle un-
dergoes an afﬁne transformation. The consistency constraint im-
poses that the transformed Xi is the same, no matter whether it is
transformed by τp or τq for p ∈ Ni and q ∈ Ni.

adjacent triangle p as

τp(Xi) := (Xi − cp)Qp + cp + tp ,

(2)

where cp ∈ R1×3 is the centroid of the p-th triangle in the
undeformed shape X , Qp ∈ R3×3 is a linear transforma-
tion, and tp ∈ R1×3 is a translation. As such, we ﬁrst cen-
tre a given vertex, apply a linear transformation, undo the
centring, and eventually translate it to its global position.

Mesh consistency constraints.
sistent mesh deformation, we impose the constraints

In order to ensure a con-

τp(Xi) = τq(Xi) ∀ i ∈ [nX ], p ∈ Ni, q ∈ Ni ,

(3)

where Ni ⊂ [fX ] is the set of all triangles in X that are adja-
cent to vertex i, cf. Fig. 3. The purpose of the constraints (3)
is to enforce that a given vertex Xi is transformed to the
same place, no matter which transformation of its adjacent
triangles is applied, and thereby ensuring that the triangle
topology is preserved by the deformation.

3.2. Mixed-Integer Non-Rigid Shape Alignment

Low-dimensional correspondence model. Our non-
rigid deformation τ is indirectly deﬁned by a low-
dimensional discrete model. To this end, subsets of the
shape vertices are used as control points, which are repre-
sented by the matrices XI ∈ Ru×3 and YJ ∈ Rv×3. Here,
u := |I| and v := |J | denote the total number of control
points for each shape, and I ⊆ [nX ] and J ⊆ [nY ] denote
the index sets that select the control points from the original
shapes. A similar approach has been pursued in [45] for the
interactive manipulation of shapes, where, however it is as-
sumed that for each control point of XI the corresponding
control point of YJ is already known. In contrast, we are
interested in the much more difﬁcult shape matching prob-
lem, where the correspondence between control points is
unknown, and, moreover, there may not even exist an exact
counterpart in YJ for each point in XI.

Convex polyhedral surface approximation. We propose
to address the issue that there may not exist exact counter-
parts between control points as follows: rather than match-
ing control points of XI directly to control points of YJ ,

X

Y

Figure 4. Illustration of control points of X (left) that are matched
to convex polyhedra of Y (right). Colours indicate correspon-
dences between control points and convex polyhedra.

we match the points of XI to convex polyhedra that locally
approximate the surface of Y, see Fig. 4. To this end, we
associate a convex polyhedron with each control point of
YJ , which we represent using the matrix Zj ∈ Rdj ×3 for
j ∈ [v]. Here, each row of Zj contains one of the dj ∈ N
vertices (corner points) of the j-th polyhedron on Y. As
such, any point that lies inside the convex polyhedron can be
speciﬁed as a convex combination of rows of Zj, i.e. θT Zj,
where the dj-dimensional vector θ satisﬁes the convex com-
bination constraints θ ≥ 0dj and θT 1dj = 1. We note that
this point-to-polyhedron matching is a strict generalisation
of point-to-point matching, since the latter is achieved for
dj=1. Using this formulation allows to ﬁnd a matching be-
tween XI and YJ even when there exists only an approxi-
mate counterpart between the control points on both shapes.
For details how we obtain the polyhedra see the Supp. Mat.

Correspondence term. We tackle the non-rigid shape
matching problem by establishing correspondences be-
tween the control points XI and the convex polyhedra of
Y, while at the same time ensuring that the resulting non-
rigid deformation τ is “regular”. For now, let us assume that
u ≤ v and that each control point of XI is matched to one
of the convex polyhedra of Y. Moreover, we also allow that
more than one control point of XI can be matched to the
same convex polyhedron of Y. We model these matching
constraints using the matrix P ∈ Puv, where we deﬁne

Puv := {P ∈ {0, 1}u×v : P 1v = 1u} .

(4)

An element Pij=1 means that the i-th control point of XI
is matched to the j-th convex polyhedron of Y. Later, in
Sec. 4.4, we will also present more general formulations
that allow to also match shapes when some control points
on X do not have a counterpart on Y.

Since there are u control points of XI, where each of
them is matched to one of the v convex polyhedra on Y,
for each i∈[u], j∈[v] we introduce a convex combination
weight vector αij∈R1×dj . Here, i is the index of the control
point of XI and j is the index of the convex polyhedron of
Y. By deﬁning d:= (cid:80)v
v ]T ∈ Rd×3,
j=1 dj, Z:=[Z T

1 , . . . , Z T

as well as the matrix of convex combination weights

α := [αij]i∈[u],j∈[v] ∈ Ru×d ,

we model our correspondence term as

fcorr(τ, P ) := λc (cid:107)τ (XI) − αZ(cid:107) .

(5)

(6)

In addition we impose α≥0, α1d=1u, and αij1dj ≤Pij for
i∈[u], j∈[v]. As such, we can effectively enforce the convex
combination and matching constraints using linear equali-
ties. With that, the (u×3)-dimensional matrix αZ contains
points that lie inside the convex polyhedra, where each of its
u rows correspond to the respective row of the transformed
control point matrix τ (XI) ∈ Ru×3.

u α≤1T

Moreover, to avoid that multiple control points are as-
signed to the same vertex of a convex polyhedron, we im-
pose the “soft-injectivity” constraints 1T
d . The soft-
injectivity constraint enforces that the sum of weights in
each column of α is at most one. As such, if a (single) el-
ement in a column is exactly one, only this control point is
assigned to the respective vertex of the convex polyhedron.
If elements in a column of α are strictly smaller than one, all
respective control points are assigned to non-extreme points
of the polyhedron, thereby preventing that multiple control
points are matched to the same vertex of a polyhedron.

We use the notation (α, P ) ∈ Γ to refer to the four con-
straints introduced in this paragraph. In overall, the corre-
spondence term has the purpose to minimise the discrep-
ancy between the control points of the transformed shape
τ (XI) and their corresponding convex polyhedra of Y.

Deformation regularisers. For regularising the deforma-
tion τ we decompose each linear transformation Qp in (2)
into the sum of a rotation matrix R ∈ SO(3) and a (small)
general linear part Tp ∈ R3×3, so that τp in (2) now be-
comes

τp(Xi) := (Xi − cp)(R + Tp) + cp + tp .

(7)

The purpose of using the additive factorisation Qp = R+Tp
(with (cid:107)Tp(cid:107) small) is to ensure that the global shape defor-
mation τ (approximately) preserves the morphology of X .
This has a similar effect as the as-rigid-as-possible (ARAP)
model [43], but requires only a single rotation matrix com-
pared to fX rotation matrices as used in ARAP. In order to
keep the linear part Tp small, we impose the rigidity loss as

where E ⊂ [fX ]2 denotes the set of all neighbouring trian-
gle pairs in X , and ωe is a scalar weight. For e = (p, q) ∈ E,
so that triangles p and q are neighbours, we deﬁne the e-th
smoothness residual as

∆e = τp(cq) − τq(cq) = τp(cq) − (cq + tq) .

(10)

The purpose of the residual ∆e ∈ R1×3 is to quantify the
difference between transforming the triangle centroid cq us-
ing the transformation τq of the same triangle, and using the
transformation τp deﬁned for its neighbour triangle p.

Optimisation problem. Based on the introduced terms
and constraints our mixed-integer non-rigid alignment
(MINA) formulation reads

arg min
P,α,R,{Tp},{tp}

s.t.

fcorr(τ, P ) + frigid(τ ) + fsmth(τ ) (11)

τp(Xi) = τq(Xi) ,
P ∈ Puv ,
(α, P ) ∈ Γ ,

R ∈ SO(3) .

We assume that all weights λ• ≥ 0. The mesh consistency
and the Γ constraints are afﬁne in the variables P, R, α, Tp
and tp, and all objective function terms f• are compositions
of afﬁne transformations with the Frobenius norm, so that
they are convex. However, due to the binary constraints im-
posed upon P , and the non-convex quadratic equality con-
straints R ∈ SO(3), the overall problem is non-convex.

Convex mixed-integer formulation. To transform Prob-
lem (11) into a convex MIP problem, we use a piece-wise
linear approximation of the SO(3) constraint based on bi-
nary variables, see the Supp. Mat. and [12]. To keep the
number of binary variables small, we use an efﬁcient Gray
encoding for the piece-wise linear approximation, cf. [50],
so that the number of binary variables is logarithmic in the
number of discretisation bins b. The main idea here is to
utilise a more efﬁcient representation that requires fewer bi-
nary variables and thus admits a more efﬁcient optimisation.
In particular, this results in 6·(cid:100)log2(b)(cid:101) binary variables, in
contrast to 6·b binary variables for a naive linear encoding.
In Fig. 5 we compare our used logarithmic encoding with
a linear one, where it can be seen that the logarithmic one
requires less computation time, and that the determinant of
the resulting matrix is already very close to 1 for b=4.

frigid(τ ) := λr

(cid:13)
(cid:13) [T1, . . . , TfX ] (cid:13)
(cid:13) .

(8)

4. Experiments

Moreover, for achieving a locally smooth deformation,

we introduce the smoothness loss

fsmth(τ ) := λs

(cid:13) [ω1∆1, . . . , ω|E|∆|E|] (cid:13)
(cid:13)
(cid:13) ,

(9)

In this section we present an experimental evaluation of
our proposed MINA approach. To this end, we compare it to
other sparse correspondence methods, we analyse the gaps
to global optimality, we demonstrate that MINA can be used

where N is the total number of shape matching pairs
(N =71 for TOSCA), ti denotes the total solver time for the
i-th shape matching problem, and σrel
is the relative gap of
i
the i-th problem that is deﬁned as σrel
i =

(see [2]).

|f −f |

max(δ,|f |)

Figure 5. Runtime, relative speed-up w.r.t. linear, and determi-
nants of R for linear and logarithmic encodings of the SO(3) dis-
cretisation.

as initialisation for dense shape matching, and we showcase
its ﬂexibility on several exemplary settings. We provide ad-
ditional implementation details in the Supp. Mat..

4.1. Sparse Shape Matching

In this section we compare our method with other ap-
proaches that perform a sparse matching between a pair
of shapes. In particular, we consider the convex matching
method PM-SDP [26] in a rigid setting, the sparse game-
theoretic approach by Rodola et al. [37], the coherent point
drift (CPD) algorithm [30] (randomly initialised), and the
convex relaxation by Chen & Koltun [10]. As such, we
cover a wide range of shape matching paradigms, including
convex relaxations for rigid (PM-SDP) and non-rigid (Chen
& Koltun) shape matching, a local non-rigid method (CPD),
and a sparse method that considers a quadratic assignment
problem formulation (Rodola et al.). In this set of experi-
ments we use the sparse points from [19] for matching pairs
of shapes from the TOSCA dataset [9]. Hence, we directly
match control points on X to control points on Y when us-
ing our MINA method (i.e. dj=1 for j∈[v]).

In Fig. 6 we show correspondences obtained from our
method for various shape matching pairs.
In Fig. 7 we
show quantitative results, where we summarise the percent-
age of correct matches (relative to the number of given con-
trol points) for each shape class in the TOSCA dataset. It
can be seen that our MINA method generally outperforms
the other sparse matching approaches. The lower scores for
smaller geodesic thresholds arise due to our sparse mod-
elling, since matchings can only be as accurate as the sparse
control points allow for. Since the method by Rodola et
al. [37] does not match all of the given points, the respec-
tive curves do not reach 100%. Moreover, the performance
of PM-SDP indicates that a rigid matching setting is too re-
strictive. Additional results can be found in the Supp. Mat.

4.2. Global Optimality Analysis

Here, we analyse the gaps to global optimality dependent
on the processing time t for the TOSCA shape matching
instances in Sec. 4.1. To this end, we deﬁne

g(t) =

1
N

(cid:88)

i:ti≤t

(1 − σrel

i ) ,

(12)

Here, f and f are the upper and lower bounds of the ob-
jective value of the MIP formulation of Problem (11), re-
spectively, and δ is a small number. In Fig. 8 (left) it can
be seen that after 1h (our time budget for the MIP solver)
the value of g reaches 0.98, i.e. on average the solutions are
close to being globally optimal (a value of 1 means that all
instances are solved to global optimality). After 1h, for 82%
of the cases we certify global optimality, see Fig. 8 (right).

4.3. Dense Shape Matching

Next, we demonstrate that our method can be used to ob-
tain a suitable initialisation for dense correspondence meth-
ods. Since dense non-rigid matching approaches are highly
initialisation-dependent (even the convex approach [10] re-
quires a good initial alignment, cf. Sec. 2), it is crucial that
they are provided with a good initialisation.

For these experiments we use the product manifold ﬁl-
ter (PMF) [49] for obtaining a dense matching from a given
sparse matching. To obtain the initial sparse matching, in
addition to our MINA approach, we consider a random
matching, a rigid alignment obtained via PM-SDP [26], and
the approach by Rodola et al. [37]. Unlike in the previ-
ous section, here we extract the sparse points that we want
to match based on geodesic farthest point sampling (FPS),
which obtains an (approximately) uniform sampling of con-
trol points on the shapes.

In Fig. 9 we show results for the PMF-based densiﬁca-
tion for shapes from the TOSCA dataset [9] (cat, dog, wolf,
human), the SHREC watertight dataset [15] (glasses, teddy,
pigs),
the FAUST dataset [8] (human) and the SCAPE
dataset [1] (human). Using a random initialisation (sec-
ond row) fails in all cases and therefore conﬁrms the de-
pendence of PMF to its initialisation. Although PM-SDP
ﬁnds a global optimum (of a convex relaxation), the rigid
deformation model is too restricted and therefore does not
produce reliable dense correspondences for non-rigid shape
matching (third row). The method by Rodola et al. [37]
works well for several cases (fourth row), but due to its
initialisation-dependence and potential orientation ﬂips it
also leads to several wrong matchings. We ﬁnd that for vari-
ous types of matching problems, including strong non-rigid
deformations (cat in the ﬁrst column), or inter-object match-
ing (wolf-dog in the second column), our MINA method
provides the most reliable initialisation (last row). Al-
though in many cases MINA is able to properly handle self-
symmetries, such symmetries form a particular difﬁculty for
all considered methods and therefore may lead to wrong
matchings (last two columns). Another difﬁculty are drastic

linearlog4816b (# of bins)00.2solver time [h]4816b (# of bins)0.511.52rel. speed-up4816b (# of bins)0.90.951det(R)Figure 6. Correspondences obtained from our method for several shape matching instances from the TOSCA dataset [9]. Correspondences
between X in the top row and Y in the bottom row are indicated by dots with corresponding colours.

the control points can remain unmatched. To this end, we
replace the correspondence term fcorr in (6) with

˜fcorr := λc (cid:107)τ (XI) − αZ + (cid:15)(cid:107) ,
(13)
where (cid:15) ∈ Ru×3 is a sparse error variable with (cid:107)(cid:15)(cid:107)0≤nout.
Here, we use (cid:107)·(cid:107)0 to denote the row-wise (cid:96)0-norm that
counts the total number of non-zero rows. To model the
(cid:96)0-norm as MIP, we introduce the outlier indicator vari-
able δ∈{0, 1}u, where we impose 1T
u δ≤nout. Moreover,
we make use of the fact that both shapes are spatially
bounded, which implies a bounded correspondence error.
With that, we can enforce sparsity of (cid:15) with the linear con-
straint −δiM 1T
3 for a sufﬁciently large (pos-
itive) number M . As such, whenever δi=1, the i-th con-
trol point does not contribute any error towards the term
˜fcorr since (cid:15)i will compensate for the discrepancy between
(τ (XI))i and (αZ)i. In Fig. 10 we compare our original
formulation with the outlier rejection mechanism, which
makes it possible to match pairs of shapes even when the
control points are inconsistent between both shapes.

3 ≤(cid:15)i≤δiM 1T

Shape to point cloud matching. We used MINA for
matching a human body mesh (from [1]) to a real point
cloud that we acquired using a TreedyScan Full Body Scan-
ner. The raw point cloud was cropped using a manually
speciﬁed bounding box, downsampled to about 10k points,
and denoised. The control points where sampled using
geodesic FPS, where we used a nearest neighbour graph for
computing geodesics (and estimating normals) on the point
cloud. For this experiment we enforce that P is an injective
matching, i.e. we impose 1T
v . In Fig. 1 (middle
left) we show the resulting matching, which conﬁrms that
our method works well in this setting.

u P ≤ 1T

Different topologies. We used MINA for matching two
human shapes with different topologies, as shown in Fig. 1
(middle right), where the hands in X are not touching,
whereas the hands in Y are touching, as indicated by the
geodesic paths between both hands shown as red lines.
Here, we used geodesic FPS to sample the control points.

Figure 7. Each plot summarises the percentage of correct match-
ings for different TOSCA shape classes. The horizontal axis shows
the geodesic error threshold, and the vertical axis shows the per-
centage of matches that are smaller than or equal to this error.

Figure 8. Optimality gaps (left) and proportion of instances solved
to global optimality (right) dependent on the solver runtime.

non-rigid deformations (dog in the fourth last column).

4.4. Flexibility of MINA Formulation

Next, we demonstrate the ﬂexibility of our MINA model
by addressing several variants of shape matching formula-
tions in a proof-of-concept manner.

Outlier rejection. So far, we assumed that there exists
a corresponding convex polyhedron on Y for each control
point XI. In order to allow that some control points of XI
are not matched to a convex polyhedron on Y, we propose
to use an outlier rejection mechanism where up to nout of

Rodola et al.CPDPM-SDPChen & KoltunMINA00.51050100cat00.51050100centaur00.51050100david00.51050100dog00.51050100gorilla00.51050100horse00.51050100michael00.51050100victoria00.51050100wolf00.51time [h]00.51gglobal optimality00.51time [h]050100% optimalglobal optimalitye
c
n
e
r
e
f
e
R

m
o
d
n
a
r

P
D
S
-
M
P

.
l
a

t
e

a
l
o
d
o
R

A
N
M

I

Figure 9. Comparison of different sparse matchings (random, PM-SDP [26], Rodola et al. [37], MINA) that are used as initialisation
for PMF [49] to obtain a dense matching. The ﬁrst row shows the reference shape and the other rows show the colour-coded dense
correspondences for the respective methods.

no outlier rejection

with outlier rejection

most one of the matchings Pst or Ppq is allowed.

X

Y

X

Y

Figure 10. Left: without outlier rejection the dog’s upper thigh is
matched to the wolf’s neck (red arrows). Right: our outlier rejec-
tion variant (13) effectively disregards this control point inconsis-
tency (the unmatched point on X is shown in black).

Partial shape matching: We also match a partial shape to
a full shape, which we show in Fig. 1 (right). Here, we used
geodesic FPS to sample the control points and we enforce
that P is an injective matching, as above.

Bounded distortion matching. Our formulation also al-
lows to bound the maximum distortion of a matching.
This can be implemented by imposing linear constraints
Pst+Ppq ≤ 1 for those s, p∈u and t, q∈v where the
geodesic distance between points s, p on X and points t, q
on Y exceed the maximum allowed distortion. With that, at

5. Discussion & Limitations

Although our proposed MINA method has a range of de-
sirable properties, including its high ﬂexibility, its tractabil-
ity (in practice) due to a low-dimensional matching repre-
sentation, or its initialisation independence, there are also
open points that we aim to address in the future. In Sec. 4.4
we demonstrated that MINA enables matching a mesh to
real-world point cloud data. Considering severely cluttered
data, cf. [36], or matching shapes with other data represen-
tations (e.g. polygon soups) are interesting next steps. A
prominent strength of our formulation is that solely using
geometric properties already achieves good results. How-
ever, additionally incorporating feature descriptors, as com-
monly done for shape matching, is straightforward and may
be useful for further boosting the matching performance.

Scalability. Our MINA formulation allows to solve non-
rigid shape matching problems with u, v being of order 102.
Ideally one would be able to address matching problems

with a much denser sampling of control points, so that more
severe non-rigid deformations can be modelled accurately.
Although we gained a signiﬁcant scalability improvement
compared to a QAP formulation, cf. Fig. 2, a further reduc-
tion of the computational time would be beneﬁcial.

Multi matching. The presented MINA formulation is
phrased for matching pairs of shapes. We believe that multi
matching problems would also beneﬁt from related formu-
lations. One potential way for achieving this is to consider
all pairwise matching problems (in a symmetric fashion),
and coupling these using cycle-consistency constraints.

6. Conclusion

We have presented a convex mixed-integer programming
formulation for non-rigid shape matching problems, and
we have demonstrated that ﬁnding the global optimum is
tractable in (most) practical scenarios (see Fig. 8). In over-
all, our formulation comes with a range of beneﬁts: (i) it is
more efﬁcient to solve to global optimality compared to the
frequently used QAP formulation (Fig. 2), (ii) it is initialisa-
tion independent, (iii) it is able to obtain suitable initialisa-
tions for dense shape matching methods (Sec. 4.3), and (iv)
it is highly ﬂexible in the type of non-rigid shape matching
problems it can handle (Sec. 4.4). Although MIP formula-
tions are oftentimes evaded for matching problems in com-
puter vision (due to their high computational complexity),
in this work we have shown that a suitable problem-speciﬁc
modelling indeed allows to solve non-rigid shape matching
problems as MIP.

Acknowledgement: This work was funded by the ERC
Consolidator Grant 4DRepLy.

References

[1] Dragomir Anguelov, Praveen Srinivasan, Daphne Koller, Se-
bastian Thrun, Jim Rodgers, and James Davis. Scape: Shape
completion and animation of people. In SIGGRAPH, 2005.
6, 7

[2] MOSEK ApS. The MOSEK optimization toolbox for MAT-

LAB manual. Version 9.0., 2019. 2, 6, 12

[3] MOSEK ApS. MOSEK Modeling Cookbook. Release 3.2.1,

2020. 11

[4] Mokhtar S Bazaraa and Alwalid N Elshafei. An exact
branch-and-bound procedure for the quadratic-assignment
problem. Naval Research Logistics Quarterly, 26(1):109–
121, 1979. 2

[5] Florian Bernard, Frank R Schmidt, Johan Thunberg, and
Daniel Cremers. A combinatorial solution to non-rigid 3d
shape-to-image matching. In CVPR, 2017. 3

[6] Florian Bernard, Christian Theobalt, and Michael Moeller.
DS*: Tighter Lifting-Free Convex Relaxations for Quadratic
Matching Problems. In CVPR, 2018. 2

[7] Paul J Besl and Neil D McKay. Method for registration of
3-d shapes. In Sensor fusion IV: control paradigms and data
structures, volume 1611, pages 586–606. International Soci-
ety for Optics and Photonics, 1992. 2

[8] Federica Bogo,

Javier Romero, Matthew Loper, and
Michael J. Black. FAUST: Dataset and evaluation for 3D
mesh registration. In CVPR, 2014. 6

[9] Alexander Bronstein, Michael Bronstein, and Ron Kimmel.
Numerical Geometry of Non-Rigid Shapes. Springer Pub-
lishing Company, Incorporated, 1 edition, 2008. 6, 7, 14
[10] Qifeng Chen and Vladlen Koltun. Robust nonrigid registra-

tion by convex optimization. In CVPR, 2015. 3, 6

[11] James Coughlan, Alan Yuille, Camper English, and Dan
Snow. Efﬁcient deformable template detection and localiza-
tion without user initialization. Computer Vision and Image
Understanding, 78(3):303–319, 2000. 3

[12] Hongkai Dai, Gregory Izatt, and Russ Tedrake. Global in-
verse kinematics via mixed-integer convex optimization. The
International Journal of Robotics Research, May 2017. 5, 11
[13] Nadav Dym, Haggai Maron, and Yaron Lipman. DS++ -
A ﬂexible, scalable and provably tight relaxation for match-
ing problems. ACM Transactions on Graphics (TOG), 36(6),
2017. 2

[14] Pedro F Felzenszwalb. Representation and detection of de-

formable shapes. TPAMI, 27(2):208–220, 2005. 3

[15] Daniela Giorgi, Silvia Biasotti, and Laura Paraboschi. Shape
retrieval contest 2007: Watertight models track, 2007. 6
[16] Thibault Groueix, Matthew Fisher, Vladimir G Kim,
Bryan C Russell, and Mathieu Aubry. Unsupervised cycle-
In Computer
consistent deformation for shape matching.
Graphics Forum, volume 38, pages 123–133, 2019. 3
[17] Oshri Halimi, Or Litany, Emanuele Rodola, Alex M Bron-
stein, and Ron Kimmel. Unsupervised learning of dense
shape correspondence. In CVPR, 2019. 3

[18] Ruqi Huang and Maks Ovsjanikov. Adjoint map representa-
tion for shape analysis and matching. In Computer Graphics
Forum, volume 36, pages 151–163, 2017. 2

[19] Vladimir G. Kim, Yaron Lipman, and Thomas Funkhouser.
Blended Intrinsic Maps. ACM Transactions on Graphics
(TOG), 30(4), 2011. 6

[20] Yam Kushinsky, Haggai Maron, Nadav Dym, and Yaron Lip-
man. Sinkhorn algorithm for lifted assignment problems.
SIAM Journal on Imaging Sciences, 12(2):716–735, 2019.
2

[21] Zorah L¨ahner, Emanuele Rodola, Frank R Schmidt,
Michael M Bronstein, and Daniel Cremers. Efﬁcient glob-
ally optimal 2d-to-3d deformable shape matching. In CVPR,
2016. 3

[22] D Khuˆe Lˆe-Huu and Nikos Paragios. Alternating direction

graph matching. In CVPR, 2017. 2

[23] Or Litany, Tal Remez, Emanuele Rodola, Alex Bronstein,
and Michael Bronstein. Deep functional maps: Structured
prediction for dense shape correspondence. In CVPR, 2017.
3

[24] Johan Lofberg. Yalmip: A toolbox for modeling and opti-

mization in matlab. In ICRA, 2004. 11

[41] Thomas Schoenemann and Daniel Cremers. A combinatorial
solution for model-based image segmentation and real-time
tracking. TPAMI, 32(7):1153–1164, 2009. 3

[42] Peter H Sch¨onemann. A generalized solution of the orthog-
onal procrustes problem. Psychometrika, 31(1):1–10, 1966.
2

[43] Olga Sorkine and Marc Alexa. As-rigid-as-possible surface
modeling. In Symposium on Geometry processing, 2007. 3,
5

[44] Robert W Sumner and Jovan Popovi´c. Deformation transfer
for triangle meshes. ACM Transactions on graphics (TOG),
23(3):399–405, 2004. 3

[45] Robert W Sumner, Johannes Schmid, and Mark Pauly. Em-
bedded deformation for shape manipulation. ACM Transac-
tions on Graphics (TOG), 26(3):80, 2007. 3, 4, 12

[46] Paul Swoboda, Carsten Rother, Hassan Abu Alhaija, Dagmar
Kainmller, and Bogdan Savchynskyy. Study of lagrangean
decomposition and dual ascent solvers for graph matching.
In CVPR, 2017. 2

[47] Oliver Van Kaick, Hao Zhang, Ghassan Hamarneh, and
Daniel Cohen-Or. A survey on shape correspondence.
In
Computer Graphics Forum, volume 30, pages 1681–1707.
Wiley Online Library, 2011. 2

[48] Matthias Vestner, Zorah L¨ahner, Amit Boyarski, Or Litany,
Ron Slossberg, Tal Remez, Emanuele Rodola, Alex Bron-
stein, Michael Bronstein, Ron Kimmel, and Daniel Cre-
mers. Efﬁcient deformable shape correspondence via kernel
matching. In 3DV, 2017. 3

[49] Matthias Vestner, Roee Litman, Emanuele Rodol`a, Alex
Bronstein, and Daniel Cremers. Product manifold ﬁlter:
Non-rigid shape correspondence via kernel density estima-
tion in the product space. In CVPR, 2017. 3, 6, 8

[50] Juan Pablo Vielma and George L Nemhauser. Modeling
disjunctive constraints with a logarithmic number of bi-
nary variables and constraints. Mathematical Programming,
128(1-2):49–72, 2011. 5, 11

[51] Thomas Windheuser, Ulrich Schlickewei, Frank R Schmidt,
and Daniel Cremers. Geometrically consistent elastic match-
ing of 3d shapes: A linear programming solution. In ICCV,
2011. 3

[52] Jiaolong Yang, Hongdong Li, and Yunde Jia. Go-icp: Solv-
ing 3d registration efﬁciently and globally optimally.
In
CVPR, 2013. 2

[53] Feng Zhou and Fernando De la Torre. Factorized Graph

Matching. TPAMI, 38(9):1774–1789, 2016. 2

[25] Eliane Maria Loiola, Nair Maria Maia de Abreu, Paulo
Oswaldo Boaventura Netto, Peter Hahn, and Tania Maia
Querido. A survey for the quadratic assignment problem. Eu-
ropean Journal of Operational Research, 176(2):657–690,
2007. 2

[26] Haggai Maron, Nadav Dym, Itay Kezurer, Shahar Kovalsky,
and Yaron Lipman. Point registration via efﬁcient convex
relaxation. ACM Transactions on Graphics (TOG), 35(4):73,
2016. 2, 6, 8, 11, 12

[27] Simone Melzi, Jing Ren, Emanuele Rodol`a, Abhishek
Sharma, Peter Wonka, and Maks Ovsjanikov. Zoomout:
Spectral upsampling for efﬁcient shape correspondence.
ACM Transactions on Graphics (TOG), 38(6), 2019. 3
[28] Gonzalo Mena, David Belanger, Scott Linderman, and
Jasper Snoek. Learning latent permutations with gumbel-
sinkhorn networks. In ICLR, 2018. 3

[29] James Munkres. Algorithms for the Assignment and Trans-
portation Problems. Journal of the Society for Industrial and
Applied Mathematics, 5(1):32–38, Mar. 1957. 11

[30] Andriy Myronenko and Xubo Song. Point set registration:
Coherent point drift. TPAMI, 32(12):2262–2275, 2010. 2, 6
[31] Carl Olsson, Fredrik Kahl, and Magnus Oskarsson. Branch-
and-bound methods for euclidean registration problems.
TPAMI, 31(5):783–794, 2008. 2

[32] Maks Ovsjanikov, Mirela Ben-Chen, Justin Solomon, Adrian
Butscher, and Leonidas Guibas. Functional maps: a ﬂexible
representation of maps between shapes. ACM Transactions
on Graphics (TOG), 31(4):30, 2012. 2

[33] Charles R Qi, Hao Su, Kaichun Mo, and Leonidas J Guibas.
Pointnet: Deep learning on point sets for 3d classiﬁcation
and segmentation. In CVPR, 2017. 3

[34] Jing Ren, Adrien Poulenard, Peter Wonka, and Maks Ovs-
janikov. Continuous and orientation-preserving correspon-
dences via functional maps. In SIGGRAPH Asia, 2018. 2

[35] F Rendl, P Pardalos, and H Wolkowicz. The quadratic as-
In
signment problem: A survey and recent developments.
Proceedings of the DIMACS workshop on quadratic assign-
ment problems, volume 16, pages 1–42, 1994. 2

[36] Emanuele Rodol`a, Andrea Albarelli, Filippo Bergamasco,
and Andrea Torsello. A scale independent selection process
for 3d object recognition in cluttered scenes. IJCV, 102(1-
3):129–145, 2013. 8

[37] Emanuele Rodola, Alex M Bronstein, Andrea Albarelli, Fil-
ippo Bergamasco, and Andrea Torsello. A game-theoretic
approach to deformable shape matching. In CVPR, 2012. 6,
8

[38] Emanuele Rodol`a, Samuel Rota Bulo, Thomas Windheuser,
Matthias Vestner, and Daniel Cremers. Dense non-rigid
shape correspondence using random forests. In CVPR, 2014.
3

[39] Jean-Michel Roufosse, Abhishek Sharma, and Maks Ovs-
janikov. Unsupervised deep learning for structured shape
matching. In ICCV, 2019. 3

[40] Christian Schellewald and Christoph Schn¨orr. Probabilistic
In EMM-

subgraph matching based on convex relaxation.
CVPR, 2005. 2

Supplementary Material

A. Obtaining Convex Polyhedra on Y

(cid:80)

Given the j-th control point of YJ , we obtain its as-
sociated convex polyhedron using a neighhourhood prop-
agation strategy. To this end, we deﬁne a planarity crite-
rion using the maximum of the mean absolute deviation
(MAD) of the surface normals at the points in Zj. For a
given matrix N ∈ Rn×3 and its column mean N ∈ R1×3,
the MAD is deﬁned as mad(N ) := 1
i |Ni − N |. As
n
such, starting with t=0, we consider the vertices of the t-
ring of the j-th vertex as Zj, where we increase t as long
as max(mad(N t
j denotes the matrix of
the normals of the t-ring of the j-th vertex and η speci-
ﬁes a user-deﬁned threshold. Once we have determined the
largest t such that the t-ring neighborhood is sufﬁciently
planar (below the threshold η), we discard all points in the
rows of Zj that are interior vertices of the convex polygon
deﬁned by Zj (as they are redundant). In Fig. 4 (right) we
show so-obtained convex polyhedra.

j )) ≤ η. Here, N t

B. Piece-wise Linear Approximation of SO(3)

Constraints

The constraint R∈ SO(3) can be expressed as the
orthogonality constraint RT R=I3 in combination with
R1×R2=R3. Hence, the constraint R∈ SO(3) comprises
exactly 6 quadratic equality constraints, which form a non-
convex set. In order to deﬁne a piece-wise linear approx-
imation we use specially-ordered set of type 2 (sos2) vari-
ables. An sos2 variable is a non-negative vector where at
most two consecutive element can be non-zero. With that,
such a variable allows to encode a non-convex quadratic
function in terms of a piece-wise linear one, so that in the
end all quadratic constraints become linear, and the sos2
constraints are imposed based on (few) binary variables.

For illustrative purposes, we will now provide a sim-
ple example for a piece-wise linear approximation of a
quadratic function. Let us consider the function h(x) = x2
on the interval [−1, 1]. First, we split the domain into b bins,
so that we evaluate x2 at these b discrete positions, and then
compute all values that fall in-between the sampled points
as linear approximation between its two neighbour sam-
ple points. Let b = 4, and let φ = [−1, −0.5, 0, 0.5, 1]T
be a vector that contains the discretised domain, so that
φ2 = [1, 0.25, 0, 0.25, 1]T deﬁnes the elementwise square
of φ. Moreover, let λ ∈ Rb+1 be a non-negative sos2 vari-
able that sums to one (as mentioned, sos2 means that only
two consecutive elements can be non-zero). Then, we can
approximate

For example, for x = 0.75, we obtain the sos2 variable λ =
[0, 0, 0, 0.5, 0.5]T (since x = 0.75 = λT φ). With that, we
obtain h(0.75) = 0.5625 ≈ 0.625 = λT φ2. The important
property is that (14) allows to approximate the quadratic
function h(·) based on a representation that is linear in the
variables x and λ. In addition to [12] and [50], we refer the
interested reader to [3, Ch. 9.1.11]1, where sos2 constraints
as well as the idea of using a logarithmic Gray encoding are
explained.

C. Search Space Reduction

In addition to using a logarithmic encoding of the SO(3)
discretisation variables, we also impose further constraints
upon the matching matrix P , so that the size of the over-
all search space can be reduced. A similar idea has also
been pursued in [26], where a scalar criterion based on
In con-
the average geodesic distance (ADG) was used.
trast, rather than using a single scalar value for each ver-
tex, we propose to leverage a more powerful approach that
considers more descriptive statistics of geodesic distances,
see Fig. 11. To this end, for each control point we com-
pute nprctile evenly spaced percentiles from 0 to 100% of
the geodesic distance from this control point to all other
points. Let γX ∈ Ru×nprctile and γY ∈ Rv×nprctile denote
the so-obtained percentile matrices, where the columns are
the ordered percentiles from 0 to 100%. As such, the ma-
trices γX and γY can be seen as features of the respective
shapes extracted at the control points. Whenever two con-
trol points i ∈ [u], j ∈ [v] correspond to each other, the fea-
i − γY
tures γX
j (cid:107)
is small. Based on this observation, we use the feature dis-
tances [dij]i,j and sequentially solve nLAP linear assign-
ment problems (LAP) [29] to match features. The idea
of solving a sequence of LAPs is to not only ﬁnd the sin-
gle best matching P1 of features, but rather ﬁnding multi-
ple solutions P1, . . . , PnLAP , so that the nonzero elements in
Pall = (cid:80)nLAP
(cid:96)=0 P(cid:96) deﬁne the allowed matchings in P . Here,
the matrix P(cid:96) is obtained by performing a feature match-
ing using [dij]i,j when forbidding all previous matchings
P1, . . . , P(cid:96)−1. As such, when optimising MINA, we con-
strain all elements of P to be zero for those elements where
Pall is zero. Using this procedure is advantageous over sim-
ple thresholding of [dij]i,j, since on the one hand feasibility
is guaranteed, and on the other hand the number of allowed
matchings is equal for all control points.

j should be similar, so that dij:=(cid:107)γX

i and γY

D. Further Implementation Details

We have implemented MINA in the optimisation mod-
elling toolbox Yalmip [24], which uses the conic mixed-

1also available online at

h(x) ≈ λT φ2

for

x = λT φ .

(14)

https://docs.mosek.com/modeling-cookbook/mio.
html#continuous-piecewise-linear-functions

X

Y (ADG)
Figure 11. Shape X (left) is matched to Y, where a search space
reduction using ADG [26] leads to wrong matchings (middle),
whereas ours produces correct correspondences (right).

Y (ours)

Relation between partial shape matching and outlier re-
In our considered partial shape matching setting
jection.
we match all control points of the partial shape X to the
full shape Y. This is in contrast to our outlier rejection set-
ting, where we allow that some control points of X are not
matched to Y. However, although for partial shape match-
ing we do not use outlier rejection, we mention that princi-
pally it could be used for matching a full shape to a partial
one.

(cid:80)

e∈E de

integer branch and bound solver MOSEK [2] as backend
(with default parameters).
In all experiments we used
λc=4, λr=1 and λs=0.5, where we account for different
problem sizes by multiplying each λ• with 1√
# , where #
denotes the total number of elements that the norm is ap-
plied to. We set the weights ωe for the smoothness term
to ωe= de
, where for e = (p, q) by de we denote the
length of the common edge of triangles p, q. With that, we
achieve that the deformation of two adjacent triangles p, q is
more ﬂexible when their common edge is small. We set the
planarity threshold to η= 1
2 . For keeping the number of vari-
ables small, for each convex polyhedron Zj we only keep
the respective control point as well as four additional points
obtained via farthest point sampling (FPS) using geodesic
distances as metric. Note that this results in convex poly-
hedra that are either a single point (if none of the t-rings
of the j-th control point satisﬁes the planarity criterion), or
Zj is a 5×3 matrix. Since the non-rigid deformation in-
duced by a sparse set of matched control points is relatively
coarse, rather than modelling τ with the original mesh res-
olution we use downsampled meshes with about 300 faces,
similarly as in [45]. We set nLAP=5, nprctile= min(nX , nY ),
M =0.2 and use b=4 bins for the SO(3) discretisation.

Next, we provide additional details on shape to point
cloud matching and the relation between partial shape
matching and outlier rejection.

Shape to point cloud matching. The main difference
when Y is represented as a point cloud rather than a mesh
is that we need to use a different approach for computing
geodesic distances and normals (required for sampling con-
trol points, for the deﬁnition of the convex polyhedra as de-
scribed in Sec. A, and for the search space reduction de-
scribed in Sec. C). In our case we compute geodesic dis-
tances and normals based on a nearest neighbour graph,
where we use the 3 nearest neighbours. After this informa-
tion is obtained, the overall optimisation problem is equiva-
lent to the one when Y is a mesh, since the only information
of Y that is explicitly used in our optimisation problem for-
mulation are the convex polyhedra.

E. Additional TOSCA Results

In Fig. 12 we report runtime statistics over all 71 shape
matching instances from the TOSCA datasets for all con-
sidered methods. On this dataset, the median processing
time of our method is ≈15min, whereas the other methods
require less than one minute.

Figure 12. Runtime statistics for the TOSCA dataset. Note that the
vertical axis is shown in log-scale.

In Fig. 13 we present further results where also the de-

formed shape τ (X ) is shown.

Rodola et al.CPDPM-SDPChen & KoltunMINA10-310-210-1100101runtime [min]Figure 13. Correspondences obtained from our method for several shape matching instances from the TOSCA dataset [9]. Correspondences
are indicated by dots with corresponding colours. In each triplet of rows we show X , Y, and the deformed shape τ (X ) from top to bottom.
Note that the deformation τ is not always able to obtain a good alignment (particularly for severe non-rigid transformations, e.g. the cat or
the gorilla), but the correspondences are still reasonable in many cases.

