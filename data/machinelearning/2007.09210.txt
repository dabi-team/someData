Initializing Successive Linear Programming Solver
for ACOPF using Machine Learning

Sayed Abdullah Sadat, Graduate Student Member, IEEE, Mostafa Sahraei-Ardakani, member, IEEE,
Department of Electrical and Computer Engineering, University of Utah
email: sayed abdullah@ieee.org

0
2
0
2

l
u
J

7
1

]

Y
S
.
s
s
e
e
[

1
v
0
1
2
9
0
.
7
0
0
2
:
v
i
X
r
a

Abstract—A Successive linear programming (SLP) approach is
one of the favorable approaches for solving large scale nonlinear
optimization problems. Solving an alternating current optimal
power ﬂow (ACOPF) problem is no exception, particularly
considering the large real-world transmission networks across the
country. It is, however, essential to improve the computational
performance of the SLP algorithm. One way to achieve this goal
is through the efﬁcient initialization of the algorithm with a near-
optimal solution. This paper examines various machine learning
(ML) algorithms available in the Scikit-Learn library to initialize
an SLP-ACOPF solver, including examining linear and nonlinear
ML algorithms. We evaluate the quality of each of these machine
learning algorithms for predicting variables needed for a power
ﬂow solution. The solution is then used as an initialization for an
SLP-ACOPF algorithm. The approach is tested on a congested
and non-congested 3 bus systems. The results obtained from the
best-performed ML algorithm in this work are compared with
the results of a DCOPF solution for the initialization of an SLP-
ACOPF solver.

Index Terms—Machine Learning, Optimal Power Flow, Scikit-

Learn, Successive Linear Programming, ACOPF.

I. INTRODUCTION

The primary goal of power system operation is to serve
the customers at the minimum cost, taking into consideration
the physical constraints of the system. This can be expressed
as an optimization problem, referred to as the optimal power
ﬂow (OPF). The original ACOPF problem is a nonlinear
and non-convex optimization problem, which is an NP-hard
problem [1]–[3]. The challenges include the difﬁculty to iden-
tify a globally-optimal solution, speciﬁcally its computational
burden for large scale real world networks. The compu-
tational expense becomes manifold when we consider the
North American Electric Reliability Corporation’s (NERC) N-
1 reliability criteria and account for contingencies [4], [5]. As
a result, different linearization techniques are used by system
operators, most commonly the Direct Current Optimal Power
Flow (DCOPF) approach [6]–[8]. Since DCOPF abstracts
from some of the complexities of the original problem, it
does not produce a physically-feasible solution. Thus,
the
operators need to adjust the DCOPF solution, in order to
achieve feasibility [9]. The simpliﬁcations associated with the
use of DCOPF along with out of market adjustments can result
in large inefﬁciencies in the ﬁnal solution. A staff report by
the Federal Energy Regulatory Commission (FERC) estimates

This research was funded by the U.S. Department of Energy’s (DOE)
Advanced Research Projects Agency–Energy (ARPA-E) under grant number
de-ar0001083.

that the status quo may result in up to 10% additional cost,
which can be avoided through efﬁcient ACOPF solvers [2].

Considering the size of the North American power grid, a
small percentage of improvement in its operations can yield
a signiﬁcant monetary savings [10]. That’s why there is a
growing interest among academic scholars to work around
techniques that would solve the ACOPF fast enough for the
real-time operations, and thereby operating the system more
efﬁciently. The challenge remains to be the computational
complexity of ﬁnding a quality solution within the limited
available time.

Many methods have been proposed and tested for solving
ACOPF, including a variety of convex relaxation techniques
[11]–[14]. Another approach that is shown to perform well
is the successive-linear programming (SLP) approximation of
the currentvoltage (IV) ACOPF formulation [15]. This method
takes advantage of the linear representation of network ﬂows
in a rectangular IV formulation, compared to a conventional
quadratic power ﬂow formulation in polar coordinate. The SLP
IV-ACOPF algorithm demonstrates promising scalability and
performance properties [16].

On the other hand, the recent advancements in computa-
tional capabilities have opened the door for many industries
to effectively utilize the large quantities of data available.
Power system operations and planning is no exception to this
trend. The work in [17] provides a review of machine learning
applications in energy machine learning systems. Learning
optimal power ﬂow is one area of the areas that has recently
attracted interests in academia [18].

In our previous work [3], we have shown that the perfor-
mance of an SLP solver, in terms of convergence quality, ob-
jective value, and computational performance, largely depends
on the initialization of the SLP algorithm. Therefore, in this
paper we would like to evaluate how various machine learning
algorithms can perform as an initialization to consequently
enhance the performance of the SLP method for solving an
ACOPF problem. The approach can be considered as a special
case of warm-start where the model utilizes the existing data
for training and based on previous solutions, it predicts an
operation point for the initialization of an SLP algorithm.

This paper is aimed for the industry operation of power sys-
tems that takes advantage of the available data to improve the
computational performance of an SLP algorithm for solving a
large scale ACOPF problem. The contributions of this paper
can be summarized as follows:

 
 
 
 
 
 
1) Evaluation of different machine learning algorithms
available in the Scikit-Learn library for an optimal power
ﬂow problem.

2) Comparing the prediction by the best-performed algo-
rithm with a DCOPF solution for a both congested and
non-congested 3 bus systems.

To obtain a feasible initialization, this paper proposes the
use of machine learning algorithm and power ﬂow to ﬁnd a
feasible and a near-optimal solution for initializing an SLP-
ACOPF solver. Similarly, the results obtained by the DCOPF
for the comparison is also solved by a power ﬂow solver. The
rest of the paper is organized as follows. In Section II, we
present and introduce different popular regression algorithms
available in the Scikit-Learn library. Section III presents the
results of the evaluation of the quality of prediction by
different machine algorithms. It also benchmarks the results
with the solution of DCOPF for the initialization of an SLP
solver. Section IV discuses the results and addresses some of
the challenges associated with the use the proposed method,
and ﬁnally conclusions are drawn in Section V.

Fig. 1: A Single diagram of a 3 bus system with Z12 = 0.008+
j0.024, Z23 = 0.006 + j0.018, and Z13 = 0.002 + j0.060.

II. MACHINE LEARNING (ML)
Machine Learning methods are conceptually very similar
to statistics with some minor differences. However,
these
differences are essential and distinguishes machine learning
from conventional statistics. Machine learning approximates
a function within a hypothesis space as opposed to modeling
a predeﬁned function in a standard statistical method. This
also leads the machine learning methods to value the accuracy
of the prediction rather then the quality of the ﬁt which
is the primary objective in a statistical approach [19], [20].
The idea of employing machine learning in power systems
dates back to the late 20th century [21], [22]. However,
it failed to attract enough interest due to the computation
complexities associated with modeling and data handling
needed for effectively applying machine learning algorithms.
The recent advancements in computational capabilities have
led the academia to reconsider machine learning methods
for solving power system problems, particularly the power
system operations. Since, it is a fairly new topic, many of
the problems remain open-ended, particularly on how machine
learning can help in achieving a real-time optimal solution to
the ACOPF problems. Here we will brieﬂy introduce various
ML algorithms that we are going to evaluate its ﬁtting quality
for an optimal power ﬂow dataset.

Fig. 2: A plot of V1 vs P L
data for the non-congested 3 bus system shown in ﬁg. 1

3 (Red) and QL

3 (Blue) in our training

Fig. 3: A plot of V2 vs P L
data for the non-congested 3 bus system shown in ﬁg. 1

3 (Red) and QL

3 (Blue) in our training

Fig. 4: A plot of V1 vs P L
data for the congested 3 bus system shown in ﬁg. 1

3 (Red) and QL

3 (Blue) in our training

Fig. 5: A plot of V2 vs P L
data for the congested 3 bus system shown in ﬁg. 1

3 (Red) and QL

3 (Blue) in our training

most common choice. Neighbors-based methods are known as
non-generalizing machine learning methods, since they simply
remember all of its training data (possibly transformed into a
fast indexing structure such as a Ball Tree or KD Tree) [23].
Even though this method is very simple compared to other
algorithms, it has shown impressive success in solving large
scale problems. The method is also effective when less data
is available for handling large scale problems [23].

D. Decision Trees Regression (DTR)

Decision Trees (DTs) are also a non-parametric the most
popular supervised learning method used for classiﬁcation and
regression. The algorithm learns simple rules with the help of
data features to predict the value of a target variable. This
creates a model which is called a Decision Tree Model [23].

E. Neural network models (NN)

Neural networks (NN) are biologically-inspired deep learn-
ing architectures where interconnected neurons reproduce the
learning process using the data in a interconnected set of
”parallelly distributed processors” in order to predict real
solutions based on this knowledge [19], [24]–[26].

III. RESULTS

For the simplicity of our analysis, we use a 3 bus system

in our evaluation shown in Fig. 1.

To generate data for our training we have run about 600
optimization solutions, each with a random load of SL
3 ; 300
for non-congested 3 bus system and 300 for congested 3 bus
system. In the congested scenario we have limited the ﬂow of
power in branch1-3 to 160 MVA. The plots shown in Figs. 2,
3, 4, 5, and 6 presents the relationship between features and
targets in our training data.

Fig. 7: A plot showing the quality of ﬁtting for P L
the non-congested 3 bus system by the NNR method.

3 vs V1 in

We ﬁrst evaluated the quality of the ﬁt by different popular
algorithms available in Scikit Library. The comparison is
shown in Table III. To ﬁne-tune the parameters of each esti-
mator we have applied the exhaustive grid search method. The
grid search method exhaustively generates combinations from
a grid of parameter values to ﬁne-tune the hyper-parameters
of an estimator.

By looking at the results presented in Table III we can
observe that the Nearest Neighbors Regression (NNR) method

Fig. 6: A plot of P g
data for the non-congested 3 bus system shown in ﬁg. 1

3 (Red) and QL

3 (Blue) in our training

1 vs P L

A. Linear Regression (LR)

Linear Regression (LR) is one of the fundamental statistics
approach to modeling different relationships and patterns in
data. As the name suggests, in Linear Regression, the label
is seen as a linear combinations of features. In the Scikit-
Learn library the implementation of LR ﬁts a linear model with
coefﬁcients ω = (ω1, ..., ωp) to minimize the residual sum of
squares between the observed targets in the dataset, and the
targets predicted by the linear approximation. Mathematically
it solves a problem of the form [23]:

minimize
ω

||Xω − y||2
2

(1)

B. Support Vector Machines (SVM)

Support vector machines (SVMs) are a set of supervised
learning methods used for classiﬁcation, regression, and out-
liers detection. It is one of the most popular algorithms in
machine learning and it presents one of the most robust
prediction methods based on the theories proposed by Vapnik
and Chervonekis. The advantages of support vector machines
are:

• Effective in high dimensional spaces and memory efﬁ-
cient because it only uses a smaller subset of the total
training data [23].

• It is one of the methods which remains effective when
the number of samples is less than the total number of
features [23].

The disadvantages of support vector machines include:

• If the number of features is much greater than the number
of samples, over-ﬁtting can be become a challange and
needs to be addressed [23].

• Calculating probability estimates in SVMs can become

very computationally expensive [23].

C. Nearest Neighbors Regression (NNR)

This method is also called k-Nearest Neighbors method
which is one of the non-parametric algorithms and was ﬁrst
proposed by Thomas Cover. The main concept in this approach
is to ﬁnd a predeﬁned number of training samples having the
closest distance to the new data point, and predict its target
value. The number of samples can be a user-deﬁned constant
(k-Nearest Neighbors learning). The distance can, in general,
be any metric measure: standard Euclidean distance is the

TABLE I: The table compares the feasible solution of OPF for a 3 bus non-congested system calculated by Ipopt, Power Flow
(PF) calculated by Machine Learning Prediction, and Power Flow calculated by DCOPF solutions.

Sno.

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

P L
3
(MW)

35.91
53.17
74.22
73.99
54.38
61.06
26.32
61.39
18.03
43.34
4.28
35.11
6.64
13.05
32.20

QL
3
(MW)

377.37
598.25
389.68
56.42
174.16
498.01
65.54
347.73
155.18
486.89
423.63
329.01
459.83
14.83
70.30

Optimal
Cost
(USD)
434.75
666.23
447.70
106.96
226.10
560.65
116.01
404.17
206.72
548.89
482.69
384.73
520.44
64.99
120.82

Machine Learning + PF
Slack Change
Cost
(MW)
(USD)
0.001
434.75
0.000
666.23
0.000
447.71
0.001
106.96
0.000
226.10
0.001
560.65
0.000
116.01
0.000
404.17
0.000
206.72
0.001
548.89
0.001
482.69
0.000
384.73
0.001
520.45
0.000
64.99
0.000
120.82

DCOPF + Power Flow
Slack Change
Cost
(MW)
(USD)
2.169
436.65
3.483
670.83
2.311
449.84
0.686
107.15
1.111
226.65
2.904
563.92
0.530
116.15
2.049
405.88
0.947
207.13
2.807
551.96
2.391
484.95
1.899
386.21
2.600
523.09
0.319
65.04
0.564
120.98

TABLE II: The table compares the feasible solution of OPF for a congested 3 bus system calculated by Ipopt, Power Flow
(PF) calculated by Machine Learning Prediction, and Power Flow calculated by DCOPF solutions.

Sno.

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

P L
3
(MW)

63.24
59.35
19.84
29.06
2.78
18.52
64.09
68.06
9.67
52.95
29.29
36.16
22.43
56.33
38.01

QL
3
(MW)

103.33
155.43
566.04
106.64
533.02
163.42
585.99
35.32
200.72
210.28
241.07
54.39
479.85
93.74
382.37

Optimal
Cost
(USD)
154.27
207.07
1025.73
157.52
933.10
215.09
1081.20
85.70
253.06
262.92
294.32
104.80
783.10
144.55
511.56

Machine Learning + Power FLow
Slack Change
Cost
(MW)
(USD)
5.133
149.19
1.440
205.65
8.200
1034.02
5.813
163.28
3.165
929.93
0.692
215.77
0.587
1080.62
3.586
82.14
4.915
248.21
3.032
265.91
2.803
291.57
0.524
105.32
1.302
781.79
2.688
141.88
2.978
514.53

Violation
(MW)
0.000
0.000
0.000
0.000
0.781
0.000
0.140
0.000
0.000
0.000
0.000
0.000
0.326
0.000
0.000

DCOPF + Power Flow
Slack Change
(MW)
15.879
16.750
25.673
15.860
24.930
16.737
26.813
15.224
17.410
17.825
18.553
15.253
24.865
15.768
25.924

Violation
(MW)
0.000
0.000
37.273
0.000
41.499
0.000
30.385
0.000
0.000
0.000
3.985
0.000
41.802
0.000
45.108

Cost
(USD)
185.09
238.93
1027.95
188.36
935.66
246.90
1085.10
115.77
285.54
295.94
328.18
134.90
789.31
175.28
523.36

TABLE III: The table shows the calculated accuracy of
each algorithm in predicting different variables in both non-
congested and congested scenarios for the 3 bus system shown
in Fig.1.

Algorithms

LR
SVM
NNR
DTR
NN

Non-congested
V1
V2
99.9733
99.9976
99.6744
99.9945
99.9884
99.9996
99.9433
99.9985
95.6851
83.3745

V1
99.7475
99.1781
99.9791
99.8793
94.1331

Congested
V2
99.7579
99.6253
99.9861
99.9650
96.5417

P 1
g
68.9835
97.0389
98.6489
93.6066
76.9921

Fig. 8: A plot showing the quality of ﬁtting for P L
the non-congested 3 bus system by the NNR method.

3 vs V2 in

gives the highest accuracy of prediction. NNR being the best
performance estimator, we now evaluate the results of this
algorithm in solving OPF and benchmark it with DCOPF
solutions for a 3 bus system. Table I compares the dispatch
cost calculated by Ipopt, ML (our proposed method) and
using DCOPF solution. To obtain feasibility both ML and

DCOPF solutions have been solved by power ﬂow. Slack
change shows the feasibility of predicted solution compared
with the DCOPF solution. Similarly, Table II, compares the
results for a congested 3 bus system. It has additional columns
which calculates the violations of branch 1-3 thermal limit.

Fig. 9: A plot showing the quality of ﬁtting for QL
the non-congested 3 bus system by the NNR method.

3 vs V1 in

Fig. 13: A plot showing the quality of ﬁtting for P L
in the congested 3 bus system by the NNR method.

3 vs P g

1

Fig. 10: A plot showing the quality of ﬁtting for QL
the non-congested 3 bus system by the NNR method.

3 vs V2 in

Fig. 14: A plot showing the quality of ﬁtting for QL
the congested 3 bus system by the NNR method.

3 vs V1 in

Fig. 11: A plot showing the quality of ﬁtting for P L
the congested 3 bus system by the NNR method.

3 vs V1 in

Fig. 15: A plot showing the quality of ﬁtting for QL
the congested 3 bus system by the NNR method.

3 vs V2 in

Fig. 12: A plot showing the quality of ﬁtting for P L
the congested 3 bus system by the NNR method.

3 vs V2 in

Fig. 16: A plot showing the quality of ﬁtting for QL
in the congested 3 bus system by the NNR method.

3 vs P g

1

Figs. 7, 8, 9, 10, and 11 show how the estimator’s predic-
tions ﬁt the actual data for a non-congested 3 bus system.
Similarly, Figs. 11, 12, 13, 14, 15, and 16 show how the
estimator ﬁts the training data for a congested 3 bus system.

IV. DISCUSSION

As we can see, the Nearest Neighbors method gives promis-
ing results which can be used as initialization for an SLP

solver. The method is simple, fast, and provides the highest
accuracy than other popular algorithms. The results show a
promising approach for the initialization of an SLP solver
for an ACOPF problem. The SLP solver can be signiﬁcantly
impacted by the initialization, and as shown in Tables I and
II, the predicted results are very close to the optimal solution,
therefore, offering a superior method for initializing it. Addi-
tionally, they have a small feasibility gap (i.e., measured by
the changes in the slack) and minimal violation of thermal
limits. The choice of algorithm is important, because different
algorithms are chosen depending on their performance and
the quality of their ﬁt for various applications, which can be
impacted by a few factors such as the availability of training
data, noise in the data, etc. The purpose of showing the score
(accuracy) of each algorithm for the 3 bus system in Table
III is to show the quality of their ﬁt for the OPF solution
of a 3 bus system. Should we decide in the future to choose
a different algorithm because of the availability of the data
for training or any other reason for larger systems, this table,
into the trade-off
in our opinion, may give us an insight
in the performance (quality of the ﬁt) that we are looking
into versus the choice of algorithm. The approach can also
be used in the industry in real-time directly in combination
with some heuristic approaches to make the solution feasible.
As can be seen, the results are far better than the DCOPF
solutions used in the industry. In case sufﬁcient data is not
available, we can use other methods or an SLP-ACOPF with
DCOPF initialization in an ofﬂine mode to generate data
for our proposed method. Once we have sufﬁcient data to
train our estimator, we use it as an initialization for the SLP
method to enhance its performance for the given network.
In our data which is generated by the direct solution of
an optimization model, we expect to have zero to minimal
noise. Leveraging this advantage we can even use Generative
Adversarial Networks (GAN) to generate data from a small
sample solutions as a worst case scenario for addressing the
lack of sufﬁcient data for training.

V. CONCLUSION
We have evaluated the performance of different machine
learning estimators for the solution of an ACOPF problem.
In our evaluation, we have ﬁne-tuned the hyper-parameters
of each algorithm in the Scikit-Learn Library. We found that
the Nearest Neighbors Regression method gives the highest
accuracy of prediction for the 3 bus system. The results show
that the proposed method can provide an initialization far
better than the DCOPF approach for initializing an SLP solver
for solving ACOPF problems. The prediction time of these
estimators are in microseconds which makes it superior to the
DCOPF algorithms used in the industry.

REFERENCES

[1] A. Castillo and R. P. ONeill, “Computational performance of solution
techniques applied to the ACOPF,” Federal Energy Regulatory Commis-
sion, Optimal Power Flow Paper, vol. 5, 2013.

[2] M. B. Cain, R. P. Oneill, and A. Castillo, “History of optimal power
ﬂow and formulations,” Federal Energy Regulatory Commission, pp. 1–
36, 2012.

[3] S. A. Sadat, D. Haralson, and M. Sahraei-Ardakani, “Evaluation of vari-
ous techniques to warm-start a successive linear programming algorithm
for solving the iv acopf,” in 2018 IEEE Power Energy Society General
Meeting (PESGM), 2018, pp. 1–5.

[4] ——, “Security versus Computation Time in IV-ACOPF with SOCP
Initialization,” in 2018 IEEE International Conference on Probabilistic
Methods Applied to Power Systems (PMAPS), 2018, pp. 1–6.

[5] S. A. Sadat and M. Sahraei-Ardakani, “Reducing the risk of cascading
failures via transmission switching,” arXiv preprint arXiv:1810.00651,
2018.

[6] B. Stott, J. Jardim, and O. Alsac¸, “Dc power ﬂow revisited,” IEEE

Transactions on Power Systems, vol. 24, no. 3, pp. 1290–1300, 2009.

[7] S. A. Sadat and L. Fan, “Mixed integer linear programming formu-
lation for chance constrained mathematical programs with equilibrium
constraints,” IEEE PESGM, p. preprint, 2017.

[8] S. A. Sadat, “Optimal bidding strategy for a strategic power producer

using mixed integer programming,” 2017.

[9] Y. M. Al-Abdullah, M. Abdi-Khorsand, and K. W. Hedman, “The role of
out-of-market corrections in day-ahead scheduling,” IEEE Transactions
on Power Systems, vol. 30, no. 4, pp. 1937–1946, 2015.

[10] S. Blumsack, “Electricity demand and supply in the united states,”
Published online at https://www.e-education.psu.edu/eme801/node/490.
[11] J. Lavaei and S. H. Low, “Zero duality gap in optimal power ﬂow
problem,” IEEE Transactions on Power Systems, vol. 27, no. 1, pp.
92–107, 2012.

[12] R. Madani, S. Sojoudi, and J. Lavaei, “Convex relaxation for optimal
power ﬂow problem: Mesh networks,” IEEE Transactions on Power
Systems, vol. 30, no. 1, pp. 199–211, 2015.

[13] S. H. Low, “Convex relaxation of optimal power ﬂow—part i: For-
mulations and equivalence,” IEEE Transactions on Control of Network
Systems, vol. 1, no. 1, pp. 15–27, 2014.

[14] H. Hijazi, C. Coffrin, and P. Van Hentenryck, “Convex quadratic
relaxations for mixed-integer nonlinear programs in power systems,”
Mathematical Programming Computation, vol. 9, no. 3, pp. 321–367,
2017.

[15] R. P. ONeill, A. Castillo, and M. B. Cain, “The IV formula-
tion and linear approximations of the ac optimal power ﬂow prob-
lem,” Published online at http://www. ferc. gov/industries/electric/indus-
act/market-planning/opf-papers/acopf-2-iv-linearization. pdf, 2012.
[16] A. Castillo, P. Lipka, J. P. Watson, S. S. Oren, and R. P. O’Neill, “A
successive linear programming approach to solving the iv-acopf,” IEEE
Transactions on Power Systems, vol. 31, no. 4, pp. 2752–2763, July
2016.

[17] L. Duchesne, E. Karangelos, and L. Wehenkel, “Recent developments
in machine learning for energy systems reliability management,” Pro-
ceedings of the IEEE, pp. 1–21, 2020.

[18] A. Venzke, G. Qu, S. Low, and S. Chatzivasileiadis, “Learning optimal
power ﬂow: Worst-case guarantees for neural networks,” arXiv preprint
arXiv:2006.11029, 2020.

[19] A. Rahman and A. D. Smith, “Predicting fuel consumption for commer-
cial buildings with machine learning algorithms,” Energy and Buildings,
vol. 152, pp. 341–358, 2017.

[20] L. Breiman et al., “Statistical modeling: The two cultures (with com-
ments and a rejoinder by the author),” Statistical science, vol. 16, no. 3,
pp. 199–231, 2001.

[21] B. F. Wollenberg and T. Sakaguchi, “Artiﬁcial intelligence in power
system operations,” Proceedings of the IEEE, vol. 75, no. 12, pp. 1678–
1685, Dec 1987.

[22] Kit Po Wong, “Artiﬁcial intelligence and neural network applications in
power systems,” in 1993 2nd International Conference on Advances in
Power System Control, Operation and Management, APSCOM-93., Dec
1993, pp. 37–46 vol.1.

[23] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion,
O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vander-
plas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot, and E. Duch-
esnay, “Scikit-learn: Machine learning in Python,” Journal of Machine
Learning Research, vol. 12, pp. 2825–2830, 2011.

[24] D. Kriesel, “A brief introduction on neural networks,” 2007.
[25] S. A. Kalogirou, “Artiﬁcial neural networks in renewable energy systems
applications: a review,” Renewable and sustainable energy reviews,
vol. 5, no. 4, pp. 373–401, 2001.

[26] K. Soteris A, “Artiﬁcial neural networks in energy applications in
buildings,” International Journal of Low-Carbon Technologies, vol. 1,
no. 3, pp. 201–216, 2006.

