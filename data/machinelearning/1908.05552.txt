Learning Interactive Behaviors for Musculoskeletal Robots Using
Bayesian Interaction Primitives

Joseph Campbell1, Arne Hitzmann2, Simon Stepputtis1, Shuhei Ikemoto3, Koh Hosoda2, and Heni Ben Amor1

9
1
0
2

g
u
A
5
1

]

O
R
.
s
c
[

1
v
2
5
5
5
0
.
8
0
9
1
:
v
i
X
r
a

Abstract— Musculoskeletal robots that are based on pneu-
matic actuation have a variety of properties, such as compliance
and back-drivability, that render them particularly appealing
for human-robot collaboration. However, programming inter-
active and responsive behaviors for such systems is extremely
challenging due to the nonlinearity and uncertainty inherent
to their control. In this paper, we propose an approach for
learning Bayesian Interaction Primitives for musculoskeletal
robots given a limited set of example demonstrations. We show
that this approach is capable of real-time state estimation and
response generation for interaction with a robot for which no
analytical model exists. Human-robot interaction experiments
on a ’handshake’ task show that the approach generalizes to
new positions, interaction partners, and movement velocities.

I. INTRODUCTION
As robots are employed in an ever-expanding variety
of roles, interactions with humans will inevitably become
common place. To ensure that such interactions are safe
and productive, robots need to be both mechanically and
behaviorally responsive to their human counterparts. Me-
chanical responsiveness and compliance guarantees that no
physical contact or force-exchange is harmful to the hu-
man. Traditional robotic systems are typically composed of
non-compliant, rigid limbs that do not yield when contact
with an opposing body occurs. In contrast to that, various
musculoskeletal robots have been proposed which are based
on McKibben pneumatic actuators [1]. These biologically-
inspired systems mimic the behavior of human muscles and
tendons, and are capable of providing a signiﬁcant amount of
force while remaining inherently safe due to their compliant,
back-drivable nature. Unfortunately, due to the uncertainty
and nonlinearity underlying pneumatic actuation, controlling
such systems can pose major difﬁculties to the control
framework [2], [3]. Often, getting a complex robot to perform
smooth, generalizable actions on its own can be extremely
challenging, let alone react to a human interaction partner.
In this paper, we leverage a methodology for teaching in-
teractive and responsive behaviors to musculoskeletal robots
known as Bayesian Interaction Primitives (BIP) [4]. Based
on learning from demonstration, this framework provides the
basis for working with robots that have no tractable analyt-
ical model. Given a small set of training demonstrations,

1J. Campbell, S. Stepputtis, and H. Ben Amor are with the school of
Computing, Informatics, and Decision Systems Engineering, Arizona State
University {jacampb1, sstepput, hbenamor}@asu.edu

2A. Hitzmann and K. Hosoda

are with the Graduate School
of Engineering Science, Osaka University {arne.hitzmann,
hosoda}@sys.es.osaka-u.ac.jp
is with
Engineering,

the Graduate School
Institute

of Life Science
Technology

Ikemoto
Systems

and
ikemoto@brain.kyutech.ac.jp

Kyushu

3S.

of

Fig. 1. A musculoskeletal robot learning to shake the hand of a human
partner. Bayesian Interaction Primitives are used to determine when and how
to interact.

a spatiotemporal model is extracted which correlates the
movements of the interaction partners. This information is
efﬁciently encoded in a joint probability distribution which,
in turn, can be used to infer when and how to engage in
collaborative actions with a human interaction partner.

However, despite the promise of such a framework,
Bayesian Interaction Primitives have yet to be successfully
demonstrated in a real-time human-robot interaction sce-
nario, and it has yet to be shown whether this framework
is capable of generalizing to new interaction partners. Fur-
thermore, while BIP introduced a new integrated temporal
estimation technique which differed from prior work [5], [6],
there is no detailed analysis of its effectiveness nor operating
characteristics. This work intends to ﬁll that gap with the
following contributions. Speciﬁcally, we:

• introduce a methodology for learning from demonstra-
tion in human-robot interaction scenarios which com-
bines open-loop robot trajectories with reactive human
behavior in order to generate a responsive robot control
policy,

• demonstrate that our approach can effectively generate
legible, temporally- and spatially-adaptive response tra-
jectories for a complex, musculoskeletal robot for which

 
 
 
 
 
 
no analytical model exists,

• empirically analyze the integrated phase estimation of
our approach, including how well it adapts to different
interaction speeds, starting times, and edge cases, as
well as how this impacts uncertainty estimates,

• demonstrate its ability to generalize to new interaction

partners unseen in the training process.

In the next section we will discuss the existing literature, and
the gap that exists in learning algorithms for human-robot
interaction with pneumatic robots that we aim to address.
Section III provides an overview of our approach while
Sec. IV describes our experimental setup and provides an
extensive analysis of the results. Section V outlines our
ﬁndings and the directions for our future work.

II. RELATED WORK

Robots with pneumatic artiﬁcial muscles (PAMs) and
compliant limbs have been shown to be desirable for human-
robot
interaction scenarios [7], [8]. When conﬁgured in
an anthropomorphic musculoskeletal structure, such robots
provide an intriguing platform for human-robot interaction
(HRI) [9] due to their potential
to generate human-like
motions while offering a degree of safety as a result of
their compliance when confronted with an external force
– such as contact with a human. Recent work [10] has
shown the value of utilizing McKibben actuators in the
design of these robots, due to their inherent compliance
and inexpensive material cost. However, while analytical
kinematics models are in theory possible [11], [12], they
are not always practical due to the effects of friction and
the deterioration of mechanical elements, which are difﬁcult
to account for (although some gains have been made in this
area [13]). Subsequently, this work proposes using a method
based on learning from demonstration [14], [15], which is
a well-established methodology for teaching robots complex
motor skills based on observed data.

A particularly prominent technique in this regard is the
Dynamic Movement Primitives [16] framework in which
sensor trajectories are approximated by a nonlinear dynam-
ical system. After training, the parameters of the dynamical
system can be changed so as to generalize the observed skill
to novel scenarios. The extension to human-robot interaction
via Interaction Primitives [5] opened the door to complex
interactions with humans that are capable of generalizing
to a wide variety of scenarios. A probabilistic framing of
Interaction Primitives [6] replaces the approximation with
a probability distribution over a weighted combination of
linear basis functions, further strengthening the generaliza-
tion capabilities despite requiring an additional controller
to ensure safe execution of trajectories. The representation
involving probability distributions allows for training mixture
models [17], thereby enabling the effective learning of mul-
tiple complex actions. However, phase estimation and weight
inference are performed separately, thus failing to leverage
all of the prior information. Recent theoretical work on Inter-
action Primitives has addressed this limitation by proposing
a fully Bayesian derivation of the underlying concepts [4].

Yet these algorithms have largely only been deployed in
traditional robots with electromechanical actuators and rigid
limbs [18], [19]. This work aims to ﬁll that gap by showing
that sufﬁciently robust learning algorithms can safely and
accurately enable human-robot
interaction in the face of
nonlinear dynamics imposed by musculoskeletal systems.

III. BAYESIAN INTERACTION PRIMITIVES

Bayesian Interaction Primitives (BIP) [4] are a novel HRI
framework based on learning from demonstration. Intuitively,
BIP models the actions of two agents – a human and a robot
– as time dependent trajectories for each measured degree
of freedom. Demonstration trajectories are represented as a
weighted superposition of linear basis models. In turn, the
relationship between actions can be captured by computing
the covariance between basis weights. During run-time, an
observed trajectory is generated from one of the agents which
is localized in both time and space. Once localized, the
trajectory for the other agent can be generated based on the
relationship learned from the demonstrations.

A. Interaction Latent Model

sensor observations over

We deﬁne an interaction Y as a time series of D-
time, Y 1:T =
dimensional
[y1, . . . , yT ] ∈ RD×T . Of the D dimensions, Do of them
represent observed DoFs from the human and Dc of them
the controlled DoFs from the robot, such that
represent
D = Dc + Do.

φ(1)wd + (cid:15)y, . . . , Φd

In order to decouple the size of the state space from the
number of observations while maintaining the shape of the
trajectories, we transform the interaction Y into a latent
space via basis function decomposition. Each dimension
d ∈ D of Y is approximated with a weighted linear com-
bination of time-dependent basis functions: [yd
t ] =
[Φd
is
a row vector of Bd basis functions, wd ∈ RBd×1, and (cid:15)y
is i.i.d. Gaussian noise. In this work, we employ Gaussian
basis functions as they are widely used in this type of
application [6]. Given that this forms a linear system of
equations, linear regression is employed to ﬁnd the weights
wd. The weights from each dimension are aggregated to-
gether to form the full latent model of the interaction, w =
[w1(cid:124), . . . , wD(cid:124)] ∈ R1×B where B = (cid:80)D

1 , . . . , yd
φ(t) ∈ R1×Bd

φ(t)wd + (cid:15)y], where Φd

d Bd.

The above basis functions are dependent on a relative
phase value, φ(t), rather than the absolute time t, such that
the range of the phase function is linearly interpolated from
[0, 1] over the domain [0, T ]. The purpose of phase is to
decouple the shape of a trajectory from its speed; when
transformed into phase space, a trajectory performed at both
a slow and fast movement speed will yield the same basis
function decomposition. In subsequent equations, we will
refer to φ(t) as simply φ to reduce notational clutter.

B. Spatiotemporal Filtering

The objective of BIP is to infer the latent model of
an interaction, w, given a prior model w0 and a partial
observation Y 1:t where φ(t) < 1. We assume T is unknown,

and so we must also simultaneously estimate the phase of
the interaction at the same time as the latent model. This
is possible due to correlated errors in the weights of the
latent model stemming from a shared error in the phase
estimate [4]. Intuitively, an error in the temporal estimate
will produce an error in the spatial estimate. We model this
simultaneous inference of space and time by augmenting the
state vector with both the phase and the phase velocity – the
speed of the interaction – such that s = [φ, ˙φ, w] and

p(st|Y 1:t, s0) ∝ p(yt|st)p(st|Y 1:t−1, s0).

(1)

It is important to note that while the weights themselves are
time-invariant with respect to an interaction, our estimate of
the weights is time-varying.

The posterior density in Eq. 1 is computed with a recursive
linear state space ﬁlter [20] which consists of two steps: the
propagation of the state forward in time according to the sys-
tem dynamics p(st|Y 1:t−1, s0), and the update of the state
based on the latest sensor observation likelihood p(yt|st).
We assume this system satisﬁes the Markov property, such
that the state prediction density is deﬁned as:

where Rt is the Gaussian measurement noise associated with
the sensor observation yt.

We compute the prior model s0 = [φ0, ˙φ0, w0] from a set
(cid:124)
N ], such that

of N initial demonstrations, W = [w
w0 is the arithmetic mean of the weights from each DoF:

(cid:124)
1 , . . . , w

w0 =

(cid:34)

1
N

N
(cid:88)

i=1

w1

i , . . . ,

(cid:35)

wD
i

.

1
N

N
(cid:88)

i=1

(9)

Assuming that all interactions start at the beginning, we
set the initial phase φ0 to 0. The initial phase velocity ˙φ0,
however, is determined by the arithmetic mean of the set of
phase velocities from all demonstrations:

˙φ0 =

1
N

N
(cid:88)

i=1

1
Ti

,

(10)

where Ti is the length of the i-th demonstration. Lastly, we
deﬁne the prior density p(s0) = N (µ0, Σ0) as

µ0 = s0,

Σ0 =

(cid:20)Σφ,φ
0

(cid:21)

,

0
ΣW ,W

(11)

where Σφ,φ is the variance in the phases and phase velocities
of the demonstrations, with no initial correlations.

p(st|Y 1:t−1, s0)

(cid:90)

=

p(st|st−1)p(st−1|Y 1:t−1, s0)dst−1.

(2)

C. Musculoskeletal Robots

Furthermore, as in the Kalman ﬁlter, we assume that
the uncertainty associated with our state estimate is nor-
mally distributed, i.e., p(st|Y 1:t, s0) = N (µt|t, Σt|t) and
p(st|Y 1:t−1, s0) = N (µt|t−1, Σt|t−1). The system dynam-
ics are deﬁned such that the state evolves according to a
linear constant velocity model:

0
0


...


1

1 ∆t
1
0


...
...


0
0

. . .
. . .
. . .
. . .

µt−1|t−1,

µt|t−1 =

(3)



(cid:124)

(cid:123)(cid:122)
G

Σt|t−1 = GΣt−1|t−1G(cid:124) +

(cid:125)







(cid:124)

Σφ,φ Σφ, ˙φ
Σ ˙φ,φ Σ ˙φ, ˙φ
...
...
0
0
(cid:123)(cid:122)
Qt

. . .
. . .
. . .
. . .


0
0


,
...


1

(cid:125)

(4)

where Qt is the process noise associated with the state
transition, e.g., discrete white noise. The observation function
h(·) is nonlinear and linearized via Taylor expansion:

H t =

∂h(st)
∂st

=








φw1
∂Φ1
∂φ
...
φ wD
∂ΦD
∂φ

0 Φ1
φ
...
...
0
0








. . .
0
...
. . .
. . . ΦD
φ

.

(5)

This yields the measurement update equations

(cid:124)
t (H tΣt|t−1H

Kt = Σt|t−1H
µt|t = µt|t−1 + Kt(yt − h(µt|t−1)),
Σt|t = (I − KtH t)Σt|t−1,

(cid:124)
t + Rt)−1,

(6)

(7)

(8)

Robots which utilize pneumatic artiﬁcial muscles in a
musculoskeletal conﬁguration are desirable in the context
of human-robot interaction. Due to their air-driven nature,
they are inherently back-drivable and thus well-suited for
physical contact with humans. Furthermore, when arranged
in a musculoskeletal structure which mimics human anatomy
they tend to produce predictable, legible [21] motions. This
is important
in interactions with humans as unexpected
movements may result in injury or unsafe situations.

Despite the suitability of PAMs for human-robot interac-
tion, there are various challenges in working with them. The
ﬁrst relates to the nonlinear dynamics inherent to pneumatic
actuation and compliant behavior. Once external forces are
applied to the muscles, it becomes difﬁcult to accurately
determine from the actuation pressure where in space the
actuated components are. This limitation complicates control
during interaction phases in which the robot experiences
external forces, but it also introduces difﬁculties when train-
ing the robot. In learning from demonstration algorithms, a
common technique to train the robot relies on kinesthetic
guidance, i.e. the robot is physically moved along a desired
trajectory and the internal states of the actuators are recorded.
While it is possible to kinesthetically teach musculoskeletal
robots actuated with PAMs [12], this requires a speciﬁc
design of the robot that is not always feasible. In the case of
the robot used in this work, this approach was not possible
since the state of pneumatic actuators is different when the
robot is subject to external forces, i.e. undergoing kinesthetic
teaching, compared to when it is moving autonomously.

However, with BIP, only the correlations between the
trajectories of the human and the robot need to be captured.
As such, during training, instead of adapting the robot’s

Fig. 2. The motion of the human and robot over time when shaking hands at arbitrary end points with fast movement (top) and slow movement (bottom).
Each sequence begins at the start of the interaction and each image is sampled at the same rate.

Mean
(All)

Var
(All)

Mean
(T)

Var
(T)

Mean
(NT)

Var
(NT)

0.2640

0.0013

0.2479

0.0001

0.2752

0.0019

0.3094

0.0064

0.3148

0.0089

0.3062

0.0049

0.3824

0.0138

0.4049

0.0164

0.3689

0.0117

0.3272

0.0055

0.2950

0.0012

0.3465

0.0070

0.3009

0.0109

0.2450

0.0018

0.3345

0.0134

0.3387

0.0057

0.3430

0.0060

0.3365

0.0056

0.2914

0.0017

0.2642

0.0030

0.3078

0.0002

BIP
(Fast)
BIP
(Normal)
BIP
(Slow)
Static
(1)
Static
(2)
Static
(3)
Static
(4)

TABLE I. The mean Time-to-Completion (as a ratio of trajectory length,
lower is better) and variance for all test participants (All), test participants
who trained the model (T), and test participants who did not train the
model (NT). BIP refers to our approach while static refers to an open-
loop trajectory. Green cells indicate the scenarios with the smallest mean
values while gray cells indicate scenarios that are not signiﬁcantly different,
as calculated with the Mann-Whitney U test with a p-value < 0.05.

IV. EXPERIMENTS AND RESULTS

In order to evaluate the effectiveness of our algorithm
in interaction scenarios with a musculoskeletal robot, we
designed an experiment in which a human performs a joint
physical task with a robot. Speciﬁcally, we chose a hand-
shake scenario and implemented a small set of manually-
crafted trajectories for demonstrations. In this section we
show that not only is BIP capable of reproducing a robust,
legible handshake motion, but that it is capable of success-
fully generalizing to other humans.

A. Experimental Setup

The musculoskeletal robot [10] employed in this work,
shown in Fig. 1, contains 10 kinematic degrees of freedom:
7 in the arm linkage and 3 in the shoulder mechanism.
These 10 degrees of freedom are actuated with 27 PAMs
in an anatomical structure similar to that of humans. Due
to the prevalence of the spherical joints required to create a
complex biomimetic structure, the robot does not contain
conventional
joint angle sensors. Rather, each PAM was
equipped with a tension sensor and a pressure sensor to

Fig. 3. Different test interactions emphasizing BIP’s spatial generalization.
The left image shows a handshake low and closer to the robot, while the
right image shows a handshake high and closer to the human.

trajectory to the human’s, we introduce a teaching method in
which the human adapts to the robot while it is executing an
open-loop policy. More speciﬁcally, we created hand-crafted
trajectories of the robot’s desired action which are executed
independently of the human during training, while the human
produces an appropriate response. In this way, we do not
apply any external forces to the robot and are still able to
accurately capture the relationship between the trajectories
despite being unable to kinesthetically teach the robot.

Another consideration is that of the execution of the
generated response trajectories. The BIP algorithm updates
at a given frequency and at each iteration generates a new
response trajectory from the current point in the interaction
(as estimated by φ) to the end of the interaction; this is trivial
to calculate with the estimated latent state representation.
This is preferable to generating only the next state, since
depending on the size of the state dimension it may not be
possible to calculate the next state in real-time. However, this
can produce discontinuous trajectories where the robot will
need to make a large adjustment in position when a new
response trajectory is generated; this is unsafe in human-
robot interaction. Therefore, an additional alpha-beta ﬁlter is
employed to smooth the transition between the trajectories
generated by BIP.

Fig. 4. The motion of the human and robot over time when the human partner does not move their arm. The robot does not engage in a hand shake.

Fig. 5. Top: the trajectory of the human’s hand along the x-axis, which approximately corresponds to the distance to the robot, during different test
interactions. The trajectory region shaded in red indicates the beginning portion of the interaction in which the participant has yet to move. The green region
indicates the period in which the participant actively moves to shake the robot’s hand. The blue region indicates the period after which the handshake is
completed. Middle: the probability density corresponding to the estimated phase at the end of each aforementioned period (red, green, blue). Bottom: the
probability density corresponding to the estimated phase velocity for each region.

capture the state of the actuators, however, only the pressure
sensors were used in this experiment. The PAMs themselves
are connected to proportional valves which are controlled via
PID controllers operating at 500 Hz with a pressure reference
signal. The values reported in this paper are measured in mPa
as a difference from atmospheric pressure. Human subjects
were tracked with 3 degrees of freedom using skeleton
tracking running on a Kinect v2 camera. The degrees of
freedom correspond to the x-, y-, and z-position of the right
hand, with the camera at an angle such that both the x- and
y-axes indicate the distance and direction (left/right) of the
handshake, while the z-axis indicates the height. Thus, the
total number of degrees of freedom in this experiment was
30 and sampling was performed at a rate of 30 Hz.

During training, the robot executed 12 manually-crafted
trajectories with no feedback, i.e., in an open-loop fashion, as
explained in Sec. III-C. These trajectories were constructed
via linear interpolation from a start pressure value and an
end pressure value for each of the 27 PAMs in the robot;
for some of the PAMs, the start and end values were equal
thus producing no movement for that DOF. The end pressure
values were chosen to produce handshake end points over
the entire range of the robot
in 3-D space. The human
participants who assisted in training were instructed to shake
the hand of the robot once for each executed trajectory over
a time window of 10 seconds. Three participants contributed
training demonstrations with 3 repetitions of each trajectory,
resulting in a total of 108 total
training demonstrations.
During testing, the three participants from training as well as
ﬁve additional participants were asked to shake the hand of
the robot in eight different scenarios. In four of the scenarios,
the robot once again executed a manually-crafted trajectory

as in the training demonstrations, however, this time with
different end points. In the remaining four scenarios, the BIP
algorithm was employed with the robot generating response
trajectories based on the human’s hand movement. The
participants were asked to move their hand to an arbitrary
location and shake the hand of the robot while moving their
hand at a requested speed: fast, normal (as in the same speed
as used in the demonstrations), slow, and a special case of no
movement at all. The speed deﬁnition was purposely vague
and left up to the determination of each participant so as to
adequately test the temporal robustness of the BIP algorithm.
Each test participant executed each scenario 2 times, for
a total of 128 test trajectories. A response trajectory was
generated by BIP at a frequency of 3 Hz (for computational
reasons) using 15 basis degrees for a total state dimension
of 450. This trajectory was executed by the robot at 10 Hz
and consists solely of pressure values for each of the robot’s
degrees of freedom, no inverse kinematics or dynamics were
used at any point as such models were unavailable.

B. Results and Discussion

1) Qualitative Analysis: A sequence of images showing
two different test interactions over time for different par-
ticipants is shown in Fig. 2. Qualitatively, these sequences
simultaneously demonstrate three things: a) the robot learned
to reproduce surprisingly human-like handshake motions
despite the lack of access to any sort of analytical model,
b) BIP is capable of generalizing this motion across both
space and time, and c) the algorithm is able to generalize
across different human participants. The temporal differences
in particular can be clearly seen in Fig. 2; in the fast (top)
sequence, the human and robot have reached each other
by the 5th frame, whereas in the slow (bottom) sequence,

0.00.20.40.60.81.0Phase−0.6−0.4−0.20.0Human (m)Slow0.00.20.40.60.81.0Phase050PDF−0.02−0.010.000.010.02Phase Velocity025005000PDF0.00.20.40.60.81.0Phase−0.6−0.4−0.20.0Normal0.00.20.40.60.81.0Phase050−0.02−0.010.000.010.02Phase Velocity0250050000.00.20.40.60.81.0Phase−0.6−0.4−0.20.0Fast0.00.20.40.60.81.0Phase050−0.02−0.010.000.010.02Phase Velocity0250050000.00.20.40.60.81.0Phase−0.6−0.4−0.20.0None0.00.20.40.60.81.0Phase050−0.02−0.010.000.010.02Phase Velocity025005000moving (blue). The phase and phase velocity predictions at
the end of each period are shown such that the portion of the
trajectory falling inside the corresponding shaded region has
been observed. These plots yield an interesting insight: the
estimated phase for each movement speed is approximately
the same as in the normal speed case. That is, no matter
how quickly the interaction proceeds in real time, the phase
of the interaction is the same immediately before movement
begins and immediately after. Instead, it is the phase velocity
that differs, particularly in the region during which movement
occurs (the green region). The slow speed interaction has the
smallest phase velocity at the end of the movement period
while the fast speed interaction has the greatest velocity. The
practical implication of this is that the amount of absolute
time required to reach each point in the interaction differs due
to different phase velocities, even if the phase value at each
point is the same. Since the state (Eq. 3) evolves according
to a linear velocity model, a slower phase velocity requires
more state updates to reach the same point in phase.

Figure 6 depicts the distribution of estimated phases and
phase velocities for all interactions, and shows that this trend
holds for all cases. While the phase estimates exhibit little
difference between the movement speed cases, the velocity
estimates show a positive relationship between movement
speed and phase velocity. Analytically, this is due to our
choice of initial uncertainty in the phase and phase velocity
in Eq. 11; the uncertainty in phase is set much lower than
that of phase velocity because we are conﬁdent that the
initial phase is 0. Phase and phase velocity have a non-zero
covariance (an uncertainty in velocity affects the uncertainty
in phase), but due to the different magnitudes in the initial
uncertainty the phase velocity experiences more signiﬁcant
updates during inference. The other observation we can make
from Fig. 6 is that the larger phase velocity estimates exhibit
greater variance. This is due to the increased uncertainty
corresponding to the larger estimates, which can also be
seen in the green velocity plots of Fig. 5. As a consequence,
this impacts the uncertainty in the phase estimate for the
blue region, as inference has already taken into account the
velocities (and uncertainties) of the green region. This is why
the uncertainty for the blue region phase estimate increases
with interaction speed in Fig. 5.

Lastly, we note that BIP handles the special case of no
movement speed by reducing the phase velocity to 0, thus
stopping the temporal progression of the interaction. This
is visualized in the last column of Fig. 5. However, this
elimination of the temporal velocity is ﬂexible and can be
recovered from, as can be seen with the introduction of an
artiﬁcial pause at the beginning of the interaction as shown in
the right column of Fig. 6. Although the phase velocity has
been reduced to 0 at the end of the extended ”no movement”
(red) period, it quickly progresses when the human begins
moving and yields phase estimates consistent with what we
expect. This indicates that not only is BIP robust to the
movement speed of the interaction, but it is also robust to
variations in when the interaction begins.

Fig. 6. Left: the distribution of estimated phases (top) and phase velocities
(bottom) after the participant moves to shake the robot’s hand, for all tested
slow, normal, and fast interactions. This corresponds to the green region
shown in Fig. 5. Right: the same type of plot as in Fig. 5 for the same normal
speed interaction with the addition of an artiﬁcial pause at the beginning.

Fig. 7. The predicted pressure trajectory for one of the robot’s PAMs
during normal (top) and fast (middle and bottom) test interactions. In all
cases, the current prediction (blue) is from approximately 50% through the
interaction (the 17th inference step), with the predicted trajectories (red)
from the previous 15 inference steps shown for reference. These trajectories
are given to the robot’s PID controller with the resulting actual pressure
values shown in gray. The predicted and actual values do not directly
coincide due to physical restrictions inherent to the pneumatic system that
the learned model is unaware of. The corresponding human observations
along the x-axis are shown in orange.

this does not occur until the 8th (last) frame. While spatial
differences are visible in these sequences, they can be more
clearly seen in Fig. 3. In the ﬁrst image, the human chooses
an end point for the handshake that is low and near the
robot, while in the second image the same human participant
chooses an end point that is higher and closer to the human.
Furthermore, an image sequence for an extreme edge case
is shown in Fig. 4 in which the human participant does not
move their hand at all, thus, never beginning the interaction.
In response, the robot similarly does not proceed with the
interaction and produces only minute movements.

2) Temporal Analysis: An analysis of the inferred phase
at different points in the interaction for each movement
speed is shown in Fig. 5. The trajectories shown in the top
plots represent the movement of the human’s hand and are
broken up into three periods: the period before the human
has moved (red), the period during which the human is
moving (green), and the period after the human has stopped

0.00.20.40.60.81.0Phase024PDFSlowNormalFast0.0000.0050.0100.0150.0200.0250.030Phase Velocity050100150200PDF0.00.20.40.60.81.0Phase−0.6−0.4−0.20.0Human (m)0.00.20.40.60.81.0Phase050PDF−0.02−0.010.000.010.02Phase Velocity025005000PDF0.00.190.380.57NormalPrevious PredictionCurrent PredictionActualHuman0.00.190.380.57Robot PAM (mPa)Fast0.00.20.40.60.81.0Phase0.00.190.380.57Fast−0.6−0.4−0.20.00.2−0.6−0.4−0.20.00.2Human (m)−0.6−0.4−0.20.00.23) Spatial Analysis: While we have demonstrated that the
BIP framework is robust to temporal variations, our results
also show that is also robust to spatial variations. As Fig. 7
shows, the predicted robot trajectory is dependent both on the
value of the human observations (spatial variation) as well as
the rate of change (temporal variation). The top and middle
ﬁgures demonstrate spatial generalization through the pattern
of increasing pressure values associated with the previous
predictions (red dashed lines); as more human observations
become available, BIP continues to reﬁne the prediction.
However, because these two interactions have similar end
points, the effect of movement speed becomes evident on
the predictions. While both predictions ultimately arrive at
approximately the same pressure value for this particular
interaction
PAM, BIP predicts these values for the fast
much earlier in response to the high rate of change of the
human movement. In contrast, the bottom ﬁgure is associated
with a fast
interaction at a different end point and the
predicted trajectory is signiﬁcantly different than the others,
demonstrating the ability to spatially generalize to different
end points. These ﬁgures also highlight limitations of the BIP
framework: namely, lack of knowledge of control lag and
physical constraints. The control lag can be observed via the
phase shift between the predicted pressure values and when
the actual robot actually reaches those values (gray line).
Similarly, BIP yields inferred pressure values that the system
is incapable of reaching due to physical and/or mechanical
limitations. This is visible in the offset between the current
prediction (blue dashed line) and the actual robot.

As a result of spatial generalization, empirically we hy-
pothesize that the robot and human positions converge to
the same physical location faster when both participants are
active in the interaction (BIP scenarios), as opposed to only
the human (static scenarios). However, for technical reasons,
we lack the position of the robot end-effector in 3D space
and, therefore, measure the length of an interaction by how
long it takes the human and robot degrees of freedom to
converge to steady-state values, which we are referring to
as Time-to-Completion. To this end, the variance of each
DoF was calculated over a sliding window of 2 seconds. If
the variance of all DoFs within the window falls below a
threshold – 0.001 m for the human and 0.001 mPa for the
robot – then the start time of the sliding window is taken
to be the Time-to-Completion. These thresholds are chosen
such that all scenarios yield a completion time.

The results, shown in Table I, support our hypothesis.
The mean Time-to-Completion values for all test participants
are smaller when the BIP algorithm is employed compared
to a static handshake trajectory. The one exception is in
the case of test participants who also trained the model
(the T subset), in which case the BIP interactions were
not statistically different than the second static trajectory.
This is an interesting observation, since it suggests that
participants who had already participated in training the
model were better able to predict where the robot would go
when compared to new participants, despite new handshake
end points. Thus, their interactions resulted in lower Time-

Fig. 8. Left: the position distribution (mean and std dev) for all static and
BIP scenarios for the human’s hand along the x-axis (top), y-axis (middle),
and z-axis (bottom). Right: the corresponding velocity distributions.

to-Completion times than the participants who hadn’t trained
the model (the NT subset). However, despite their familiarity
with the experiment, BIP was still able to produce similar
completion values; in the case of new participants who hadn’t
trained the model, BIP resulted in more efﬁcient interactions
with smaller completion values.

The results in Table I also indicate that

the variance
in Time-to-Completion is smaller for the static trajectories
when compared to the BIP ones, particularly slow speed
interactions. This is expected considering that the test par-
ticipants are free to choose their own handshake end point
when testing with BIP as opposed to the static trajectories
which result in an identical handshake end point for every
participant. This is especially clear when looking at
the
position and velocity distributions of the human as shown
in Fig. 8. Likewise, the human begins moving earlier in BIP
scenarios than static ones, as they are dictating the end points
rather than the robot – visualized in the earlier peak of the
velocity distributions. The shape of the velocity distributions
are also quite illuminating, as the BIP distributions closely
resemble the typical bell-shaped velocity proﬁles of point-
to-point movements observed in humans [22].

The last result highlighting spatial generalization is that
the Pearson correlation coefﬁcients differ between the human
and robot
trajectories for BIP and static handshakes, as
shown in Fig. 9. Unsurprisingly, the only correlations above
a magnitude of 0.5 in the static scenarios are between the
human degrees of freedom and the actuated robot degrees;
the un-actuated degrees exhibit no signiﬁcant correlations.
By contrast, all degrees of freedom which were actuated in
the training process yielded signiﬁcant correlations when BIP
is used, indicating that BIP is effectively exploiting the model
learned from demonstrations. This is also supported by the
histogram that is generated from a non-actuated degree of
freedom (in the static scenarios) in Fig. 10. The histogram for
the static scenarios is approximately Gaussian with a mean
of 0, in other words, Gaussian noise. However, the histogram
for the BIP scenarios is bi-modal with peaks at −1 and 1,

-0.450-0.300-0.150-0.000Human X (m)BIPStatic-0.040-0.025-0.0100.005Human X (m/s)-0.300-0.225-0.150-0.075Human Y (m)-0.0050.0020.0100.017Human Y (m/s)0.00.20.40.60.81.0Phase1.0251.0751.1251.175Human Z (m)0.00.20.40.60.81.0Phase-0.012-0.007-0.0020.003Human Z (m/s)[2] B. Tondu, S. Ippolito, J. Guiochet, and A. Daidie, “A seven-degrees-
of-freedom robot-arm driven by pneumatic artiﬁcial muscles for
humanoid robots,” The International Journal of Robotics Research,
vol. 24, no. 4, pp. 257–274, 2005.

[3] M. Van Damme, B. Vanderborght, B. Verrelst, R. Van Ham, F. Daer-
den, and D. Lefeber, “Proxy-based sliding mode control of a planar
pneumatic manipulator,” The International Journal of Robotics Re-
search, vol. 28, no. 2, pp. 266–284, 2009.

[4] J. Campbell and H. Ben Amor, “Bayesian interaction primitives: A
slam approach to human-robot interaction,” in To Appear: Proceedings
of the 1st Conference on Robot Learning (CoRL), pp. 1–9.

[5] H. B. Amor, G. Neumann, S. Kamthe, O. Kroemer, and J. Peters,
“Interaction primitives for human-robot cooperation tasks,” in Robotics
and Automation (ICRA), 2014 IEEE International Conference on.
IEEE, 2014, pp. 2831–2837.

[6] G. Maeda, M. Ewerton, R. Lioutikov, H. B. Amor, J. Peters, and
G. Neumann, “Learning interaction for collaborative tasks with prob-
abilistic movement primitives,” in Humanoid Robots (Humanoids),
2014 14th IEEE-RAS International Conference on.
IEEE, 2014, pp.
527–534.

[7] T. Noritsugu and T. Tanaka, “Application of rubber artiﬁcial muscle
manipulator as a rehabilitation robot,” IEEE/ASME Transactions On
Mechatronics, vol. 2, no. 4, pp. 259–267, 1997.

[8] N. G. Tsagarakis and D. G. Caldwell, “Development and control
of a soft-actuatedexoskeleton for use in physiotherapy and training,”
Autonomous Robots, vol. 15, no. 1, pp. 21–33, 2003.

[9] A. Thomaz, G. Hoffman, M. Cakmak, et al., “Computational human-
robot interaction,” Foundations and Trends R(cid:13) in Robotics, vol. 4, no.
2-3, pp. 105–223, 2016.

[10] A. Hitzmann, H. Masuda, S. Ikemoto, and K. Hosoda, “Anthropo-
morphic musculoskeletal 10 degrees-of-freedom robot arm driven by
pneumatic artiﬁcial muscles,” Advanced Robotics, vol. 32, no. 15, pp.
865–878, 2018.

[11] C.-P. Chou and B. Hannaford, “Static and dynamic characteristics of
mckibben pneumatic artiﬁcial muscles,” in Proceedings of the 1994
IEEE international conference on robotics and automation.
IEEE,
1994, pp. 281–286.

[12] S. Ikemoto, Y. Nishigori, and K. Hosoda, “Direct teaching method
for musculoskeletal robots driven by pneumatic artiﬁcial muscles,” in
Robotics and Automation (ICRA), 2012 IEEE International Conference
on.

IEEE, 2012, pp. 3185–3191.

[13] A. Hildebrandt, O. Sawodny, R. Neumann, and A. Hartmann, “Cas-
caded control concept of a robot with two degrees of freedom driven
by four artiﬁcial pneumatic muscle actuators,” in Proceedings of the
2005, American Control Conference, 2005.
IEEE, 2005, pp. 680–685.
[14] A. Billard, S. Calinon, R. Dillmann, and S. Schaal, “Robot program-
ming by demonstration,” in Springer handbook of robotics. Springer,
2008, pp. 1371–1394.

[15] B. D. Argall, S. Chernova, M. Veloso, and B. Browning, “A survey
learning from demonstration,” Robotics and autonomous

of robot
systems, vol. 57, no. 5, pp. 469–483, 2009.

[16] S. Schaal, “Dynamic movement primitives-a framework for motor
control in humans and humanoid robotics,” in Adaptive motion of
animals and machines. Springer, 2006, pp. 261–280.

[17] M. Ewerton, G. Neumann, R. Lioutikov, H. B. Amor, J. Peters, and
G. Maeda, “Learning multiple collaborative tasks with a mixture of
interaction primitives,” in Robotics and Automation (ICRA), 2015
IEEE International Conference on.

IEEE, 2015, pp. 1535–1542.

[18] D. Kuli´c, C. Ott, D. Lee, J. Ishikawa, and Y. Nakamura, “Incremental
learning of full body motion primitives and their sequencing through
human motion observation,” The International Journal of Robotics
Research, vol. 31, no. 3, pp. 330–345, 2012.

[19] L. Rozo, S. Calinon, D. G. Caldwell, P. Jimenez, and C. Torras,
“Learning physical collaborative robot behaviors from human demon-
strations,” IEEE Transactions on Robotics, vol. 32, no. 3, pp. 513–527,
2016.

[20] S. Thrun, W. Burgard, and D. Fox, Probabilistic robotics. MIT press,

2005.

[21] A. D. Dragan, K. C. Lee, and S. S. Srinivasa, “Legibility and
predictability of robot motion,” in Proceedings of the 8th ACM/IEEE
international conference on Human-robot interaction.
IEEE Press,
2013, pp. 301–308.

[22] J. R. Flanagan and D. J. Ostry, “Trajectories of human multi-joint
arm movements: Evidence of joint level planning,” in Experimental
Robotics I. Springer, 1990, pp. 594–613.

Fig. 9. Mean Pearson correlation coefﬁcients for static trajectories (left)
and BIP (right). The color of the squares indicates the magnitude of the
correlation. The ﬁrst 27 rows and columns represent the coefﬁcients for
the robot degrees of freedom. The last 3 rows and columns represent the
human. The mean correlations are calculated for all participants in all static
scenarios and all BIP scenarios.

Fig. 10. Histogram for the Pearson correlation coefﬁcient generated from a
sliding window over static trajectories (left) and BIP (right). This correlation
is for an un-actuated PAM and hand position along the y-axis.

demonstrating strong positive and negative correlations.

V. CONCLUSIONS
In this work, we have shown that Bayesian Interaction
Primitives can be successfully utilized in a physical, coopera-
tive human-robot interaction scenario with a musculoskeletal
robot. Despite the challenges inherent to pneumatic artiﬁ-
cial muscles – nonlinear dynamics and lack of kinesthetic
teaching – BIPs were able to learn strong spatiotemporal
relationships between the movement trajectories of the robot
and human test participants. Furthermore,
these relation-
ships were generalizable to new human partners who did
not take part in training the model, as well as signiﬁcant
temporal variations including an edge case in which the
human does not interact at all. At the same time, we have
also identiﬁed limitations of the BIP framework, such as
the disregard for control lag and mechanical constraints,
which pose challenges to real-time, physical interactions.
In future work, we will study more complex interaction
scenarios that involve a sequence of multiple primitives,
introduce sensors of multiple modalities, and attempt to learn
direct spatiotemporal relationships between human muscle
activations and the PAMs of a musculoskeletal robot.

ACKNOWLEDGMENT
We would like to thank Masuda Hiroaki for his assistance.
This work was supported by the National Science Foundation
under Grant Nos. 1714060 and IIS-1749783, JSPS under
KAKENHI Grant Number 18H01410, and the Honda Re-
search Institute. J.C. is a JSPS International Research Fellow.

REFERENCES

[1] G. K. Klute, J. M. Czerniecki, and B. Hannaford, “Mckibben
artiﬁcial muscles: pneumatic actuators with biomechanical
intelli-
gence,” in Advanced Intelligent Mechatronics, 1999. Proceedings.
1999 IEEE/ASME International Conference on.
IEEE, 1999, pp.
221–226.

RobotHRobotHRobotHRobotH−1.0−0.50.00.51.0−1.0−0.50.00.51.0Correlation coefficient100200Frequency−1.0−0.50.00.51.0Correlation coefficient50100150Frequency