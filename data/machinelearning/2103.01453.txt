Efﬁcient Optimal Selection for Composited Advertising Creatives
with Tree Structure

Jin Chen*1, Tiezheng Ge2, Gangwei Jiang*3, Zhiqiang Zhang2, Defu Lian†3, Kai Zheng1
1University of Electronic Science and Technology of China
2Alibaba Group
3University of Science and Technology of China
chenjin@std.uestc.edu.cn, tiezheng.gtz@alibaba-inc.com, gwjiang@mail.ustc.edu.cn,
zhang.zhiqiang@alibaba-inc.com, liandefu@ustc.edu.cn, zhengkai@uestc.edu.cn

1
2
0
2

r
a

M
2

]

R

I
.
s
c
[

1
v
3
5
4
1
0
.
3
0
1
2
:
v
i
X
r
a

Abstract

Ad creatives are one of the prominent mediums for online
e-commerce advertisements. Ad creatives with enjoyable vi-
sual appearance may increase the click-through rate (CTR)
of products. Ad creatives are typically handcrafted by adver-
tisers and then delivered to the advertising platforms for ad-
vertisement. In recent years, advertising platforms are capa-
ble of instantly compositing ad creatives with arbitrarily des-
ignated elements of each ingredient, so advertisers are only
required to provide basic materials. While facilitating the ad-
vertisers, a great number of potential ad creatives can be com-
posited, making it difﬁcult to accurately estimate CTR for
them given limited real-time feedback. To this end, we pro-
pose an Adaptive and Efﬁcient ad creative Selection (AES)
framework based on a tree structure. The tree structure on
compositing ingredients enables dynamic programming for
efﬁcient ad creative selection on the basis of CTR. Due to
limited feedback, the CTR estimator is usually of high vari-
ance. Exploration techniques based on Thompson sampling
are widely used for reducing variances of the CTR estima-
tor, alleviating feedback sparsity. Based on the tree structure,
Thompson sampling is adapted with dynamic programming,
leading to efﬁcient exploration for potential ad creatives with
the largest CTR. We ﬁnally evaluate the proposed algorithm
on the synthetic dataset and the real-world dataset. The results
show that our approach can outperform competing baselines
in terms of convergence rate and overall CTR.

Introduction
With the rapid development of the Internet and mobile com-
munication, the Internet has become the most important plat-
form for advertisements, creating great commercial value for
many high-tech companies via intelligent advertisements.
Ad creatives, as shown in Fig.1, are one of the prominent
mediums for online e-commerce advertisements. Ad cre-
atives with enjoyable visual appearance may lead to a higher
likelihood of click (Mo et al. 2015; Teo et al. 2016), and thus
increase the click-through rate (CTR) of products. Several
works (Azimi et al. 2012; Cheng et al. 2012) have shown

*This work was done when the authors Jin Chen and Gangwei

Jiang were at Alibaba Group for intern.

†Corresponding author

Copyright © 2021, Association for the Advancement of Artiﬁcial
Intelligence (www.aaai.org). All rights reserved.

that multimedia features of ad creatives, such as color his-
togram, color harmony and texts, are signiﬁcantly correlated
with the likelihood of user click. The increase of CTR may
lead to an increase of revenue for e-commerce companies
like Taobao and Amazon, so it is worth investigating how to
improve visual appearance of ad creatives.

Traditionally, ad creatives are handcrafted by advertisers
and then delivered to advertising platforms for advertise-
ment. Due to the small number of ad creatives, their op-
timal selection can be easily achieved by multi-arm bandit
and variants in the advertising platform. However, advisers
have to employ professional designers to design appealing
ad creatives, incurring an additional economic cost. To help
advertisers reduce the extra cost, some companies like Al-
ibaba and Google establish intelligent platforms (Hua 2018;
Kulkarni, Gavlovski, and Zhang 2018) for instantly com-
positing ad creatives with arbitrarily designated elements
of each ingredient. The compositing ingredients usually in-
clude templates, text color, text font and picture size. The
advertisers are only required to provide basic materials, such
as product pictures and copywritings.

However, the optimal selection for composited ad cre-
atives is challenging. The reason lies in the following folds.
First, multiple ingredients are composited combinatorially,
leading to an exponential explosion in the number of ad cre-
atives. For example, given 5 templates, 10 text fonts, 20 text
colors and 20 picture sizes, 20,000 candidate ad creatives
can be composited for a product. Moreover, the ingredients
may change over time, so that ad creative spaces of each
product are also varied. For example, the template often
changes with advertising spaces, seasons and festivals. Sec-
ond, due to the limited advertising budget of advertisers, the
number of impressions for each product is usually small. Ac-
cording to our statistics in an advertisement platform of an
E-commerce company, the number of impressions for each
product within one day is less than 10 on average. When an
impression of each item apportioned to its ad creatives, each
ad creative is rarely impressed. Two questions are raised by
these two challenges. First, given a large number of potential
ad creatives, it is time-consuming to search the ad creative
with the largest CTR. The necessity of online serving mo-
tivates us to develop efﬁcient solutions. Second, given ex-
tremely sparse feedback, the estimated CTR for each ad cre-

 
 
 
 
 
 
the superiority of the proposed algorithm to the competing
baselines in terms of convergence rate and overall CTR.

Related Work
Regular CTR prediction on ad creatives (Chen et al. 2016;
Liu et al. 2020) has attracted a lot of attention for increasing
CTR. However, optimal ads selection with sparse feedback
is seldom studied.

A similar task is combinatorial bandit (Cesa-Bianchi and
Lugosi 2012) focusing on selecting a set of arms at once.
These works aim to select subsets of arms that ﬁt in top-
k problems (Rejwan and Mansour 2020), such as selecting
web pages for displaying (Chen, Wang, and Yuan 2013).
However, we aim to select the best creative instead of subset.
A large number of bandit algorithms depending on struc-
tured arms have been implemented for online advertising
and personalized recommendation (Chapelle and Li 2011; Li
et al. 2010). Existing works propose tree structures for fast
search in the form of hierarchies where the arm is a leaf ver-
tex of the constructed tree (Bubeck and Munos 2010). De-
pendencies among arms are formulated in the form of hier-
archies (Wang et al. 2018) and applied for online recommen-
dation. CoFinUCB (Yue, Hong, and Guestrin 2012) encodes
prior knowledge for quick exploration depending on coarse-
to-ﬁne feature hierarchy. However, the interactions between
candidate elements in our problem can not be embedded as
hierarchy structures.

Optimal Selection of Ad creatives with
Classical Methods
We have mentioned that we only consider ad creatives com-
posited with ingredients rather than designed by designers,
where the ingredient is deﬁned as follows:

Deﬁnition 1 (Ingredient). Ingredients are basic components
used for compositing ad creatives, including template, text
color, text size, background color, picture size and so on.

Each ingredient is actually a collection of elements, where
real-valued ingredients are also discretized for convenience.
For designated ingredients and materials such as product im-
ages and copywritings, the composition of them into ad cre-
atives is achieved by ﬁrst selecting elements in each ingre-
dient and then synthesizing ad creatives with the materials
and chosen elements. Only the ﬁrst problem is the focus of
this paper, and the second one has been studied in computer
vision (Li et al. 2019). Some examples of ad creatives and
composting ingredients are shown in Fig. 1.

Ideally speaking, to achieve the optimal selection of ad
creatives, we should enumerate all possible ad creatives for
each product, and deliver them to the advertising platform to
collect feedback for estimating the click-through rate (CTR).
We then select the ad creative with the maximal CTR for
future advertisements.

Multi-Arm Bandit
One classical method for optimal creative selection is multi-
arm bandit by drawing an analogy between bandits and cre-
atives. Multi-arm bandit methods have been widely used in

Figure 1: Ad creatives

ative is not accurate and of large variance, so that it may be
imprecise to search the best ad creatives.

To this end, motivated by the sequential designing pro-
cess of professional designers, we propose an Adaptive and
Efﬁcient ad creative Selection (AES) framework based on
a tree structure over compositing ingredients. Upon the in-
gredient tree, dynamic programming is enabled for efﬁcient
selection of the best ad creative among all candidate cre-
atives, while the accuracy of the CTR estimator is almost
not affected by the tree structure assumption according to
empirical study. This is extremely important when the CTR
estimator is frequently updated. To reduce the variance of
the CTR estimator incurred by sparse feedback, exploration
techniques (Montague 1999) based on Thompson sampling
in multi-arm bandit are widely used for reducing the vari-
ance of the CTR estimator in online advertising (Graepel
et al. 2010; Chapelle and Li 2011; Agrawal and Goyal 2013).
This is because a balance between exploration and exploita-
tion in multi-arm bandit is stricken to minimize the oppor-
tunity cost of making sub-optimal decisions before knowing
the best arm. Based on the ingredient tree, Thompson sam-
pling is adapted with dynamic programming, leading to ef-
ﬁcient exploration for the best ad creatives. Moreover, the
ingredient tree structure makes it easy to incorporate visual
constraints between elements of two ingredients. An exam-
ple of visual constraints is that the light text color is not suit-
able for the light background color.

The contributions made in this paper are summarized as:

• To the best of our knowledge, this is the ﬁrst attempt
to investigate the optimal selection of composited ads-
creatives in the scenario of E-commerce advertisements,
and identify its unique challenges and research questions.

• We propose an Adaptive and Efﬁcient ad creative
Selection (AES) framework based on the ingredient tree,
such that optimal selection is achieved by dynamic pro-
gramming. We also adapt Thompson sampling with dy-
namic programming for efﬁcient exploration.

• We evaluate the proposed algorithm on the synthetic
dataset and real-world dataset. The empirical results show

IngredientElementBackgroundDarkPicture Size100%Text ColorWhiteText FontNoto SerifIngredientElementBackgroundLightPicture Size90%Text ColorBlackText FontNoto Serifmany similar optimal selection tasks, such as the whole-page
optimization (Tang et al. 2013; Wang et al. 2016). These al-
gorithms proceed in discrete time steps t = 1, 2, ..., T . At
time step t, an ad creative ct is selected for advertisement,
and then a reward Rct ∈ {0, 1} is returned in each impres-
sion. An impression occurs when an ad creative is exposed
to a user, and Rct = 1 indicates the user clicks the adver-
tising creatives. The objective of the multi-arm bandit is to
minimize the cumulative regrets within T steps:

min

T
(cid:88)

t

(Rc∗ − Rct)

where c∗ = arg max E(Rc) denotes the candidate cre-
ative with maximum expected reward. UCB (Auer 2002)
is an effective method for balancing the trade-off between
exploration and exploitation in multi-arm bandit, by mea-
suring the potential with an upper conﬁdence bound of re-
ward. However, since creatives are composited by elements
of ingredients, it is necessary to leverage commonality be-
tween creatives for estimating reward. LinearUCB (Chu
et al. 2011) can be used in this case, which models the ex-
pected reward of each creative as a linear function of context
features xc (the selected elements of the creative):

E(Rc) = x(cid:62)
c θ
where θ is a parameter to estimate. The parameter will be
updated after each impression is received. Similar to UCB,
LinearUCB selects the creative with the maximal value of
c θ + α(cid:112)xT
xT
c A−1xc, where α is the coefﬁcient for explo-
ration and A = (cid:80)

t xT
ct

xct.

Multivariate Bandit
Assume there are N ingredients to be composited, and the
i-th ingredient Ii has Li elements. Then the number of can-
didate creatives is up to L1 × L2 × ... × LN , leading to
an exponential explosion. Therefore, it is inefﬁcient to enu-
merate all potential creatives and apply multi-arm bandit for
optimal selection. A more efﬁcient method is multivariate
bandit (Hill et al. 2017), which models interactions between
elements of two different ingredients explicitly by deﬁning
the expected reward for each creative as follows:
D
(cid:88)

D
(cid:88)

D
(cid:88)

xT
c θ = θ0 +

θ1
i (c) +

θ2
j,k(c)

(1)

i=1

j=1

k=j+1

where θ0 is a common bias, θ1
i (c) is a weight associated
with the element in the i-th ingredient, and θ2
j,k is a weight
for the interaction between the elements of the j-th and k-th
ingredients. Nevertheless, searching the ad creative with the
maximal reward is very time-consuming, so that hill climb-
ing is applied for the approximated optimal creative selec-
tion. Moreover, instead of upper conﬁdence bound used in
multi-arm bandit, Thompson sampling was used for efﬁcient
exploration.

However, several issues in the multivariate bandit remain
to be solved. First, the multivariate bandit considers any pos-
sible interactions between elements so that it can not incor-
porate visual constraints, which is important for creating ap-
pealing ad creatives. Second and more importantly, although

Figure 2: Ingredient Tree and element graph. Vertices in blue
constitute the Ingredient Tree. Vertices in yellow constitute
the element graph. An example feasible ad creative is shown
as the sub graph with the connected bold edges.

hill climbing can reduce the time cost of searching, it is al-
most impossible to ﬁnd out the globally best creatives. And
it is also possible for hill climbing to return creatives which
do not satisfy the visual constraints. These issues motivate
us to design a more powerful algorithm for efﬁcient optimal
selection of ad creative in case of large creative space.

Efﬁcient Optimal Selection of Ad creatives
with Ingredient Tree
In this section, we ﬁrst introduce the ingredient tree and ele-
ment graph, and then investigate how to perform an efﬁcient
optimal selection of composited ad creatives.

Preliminary
For the sake of efﬁcient optimal selection among the large
creative space, we introduce an ingredient tree, which is de-
ﬁned as follows:
Deﬁnition 2 (Ingredient Tree). Let T = (cid:0)V I , EI (cid:1) denote
the Ingredient Tree where V I = {I1, · · · , IN } is the set of
N ingredients and EI represents the relationships between
ingredients.

An example of the ingredient tree is shown in Fig. 2. Ac-
tually, the ingredient tree is also motivated by imitating the
decision making process of designing ad creatives from the
perspective of professional designers, where ingredient is
speciﬁed from top to bottom in the tree for compositing ad
creative.

To enable searching in the ingredient tree, we have to
specify the element graph based on the ingredient tree,
where each ingredient is substituted with its elements, as
also shown in Fig. 2.
Deﬁnition 3 (Element Graph). GE = (cid:0)V E, EE(cid:1) is an ele-
ment graph, where V E = I1 ∪ · · · ∪ IN is the set of elements
of N ingredients and EE is the set of edges, indicating the
matching level between elements of two ingredients.

Thanks to no connection between two elements in an in-
gredient, the element graph has a special property, which can
be used for accelerating ad creative search.
Proposition 1. The subgraph corresponding to any two con-
nected ingredients in the ingredient tree is a bipartite graph.

Ingredient No.1 : Template Ingredient No.2 : BackgroundElement No.1 : DarkElement No.2 : LightIngredient No.3 : Percentage of covering original picturesElement No.1~5 : 80%~100%Ingredient No.4 : Colors of textElement No.1~4 : 4 for Dark BackgroundElement No.5~8 : 4 for Light BackgroundIngredient No.5 : Fonts of textElement No.1~5 : 5 Fonts(a) Good case

(b) Bad case

Figure 3: Candidate creatives for one example item. Best
viewed in color. (a) Light background with the dark color of
texts is a good case. (b) As shown in red box, copywritings
are not easy to follow under the combination of the light
background and the light color of texts.

Actually, the whole element graph is also a bipartite
graph. The number of nodes in the element graph equals to
|V E| = (cid:80)N
i=1 Li. Given the element graph, it is very conve-
nient for us to incorporate visual constraints, such as the bad
case shown in Fig.3. These constraints are incorporated by
removing connections between certain elements of both the
picture ingredient and the text color ingredient, indicating
the 0-level of matching between them.

Overview

Given the ingredient tree and element graph, we propose an
Adaptive and Efﬁcient ad creative Selection (AES) frame-
work. The proposed framework consists of the following
three phases:

1) CTR Estimation: The CTR estimator is built by consid-
ering weights of edges and vertices in the element graph
as parameters, based on which the ad creative with the
largest CTR will be selected in the next phases.

2) Optimal Creative Selection: Dynamic programming is
proposed on the element graph for efﬁciently searching
the best ad creative, aiming to dramatically reduce the
time cost of searching.

3) Efﬁcient Exploration: The classical exploration method
– Thompson sampling is adapted with dynamic program-
ming to improve the efﬁciency of exploration and to ad-
dress feedback sparsity.

CTR Estimation

Based on the element graph, by selecting an element in each
ingredient, we can construct a feasible candidate creative. It
can be more formally deﬁned as follows:

Deﬁnition 4 (Candidate Creative). A feasible candidate
creative c corresponds to a connected subgraph GE
c =
c ) of the element graph GE, being isomorphic to the
(V E
ingredient tree T .

c , EE

The example of a feasible creative corresponds to the
black bold line in Fig. 2. As aforementioned, weights of
edges and vertices in the element graph are considered as
parameters, so similar to contextual bandit, the expected re-
ward of a candidate creative c is formulated into a linear

Algorithm 1: Dynamic Programming for Ads Selection
Input: Ingredient Tree T , Element graph GE, vertex

weights w, edge weights v

Output: Optimal solution

1 Function DynamicSearch(Ii):
2

\\Ii is an ingredient;
Initialize dIi ← 0Li;
for element j ∈ Ii do
dIi [j] = wj;

end
if Ii is the Leaf ingredient then

return dIi ;

end
for Im ∈ {Child[Ii]} do

dIm = DynamicSearch(Im);

end
for element j ∈ Ii do

for Im ∈ {Child[Ii]} do

dIi[j] = dIi[j] + maxt∈Im (vi,t + dIm[t])

end

end
return dIi;

18
19 Run dR = DynamicSearch(R);
20 \\R is the root ingredient of T ;
21 Rerurn maxj∈R dR[j] as the optimal solution;

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

function with respect to vertices and edges of its subgraph:

E(Rc) = b +

(cid:88)

wj +

(cid:88)

wi,j

(2)

j∈V E
c

(i,j)∈EE
c

c and EE

where b is a bias term, wj is a weight of the selected ele-
ment j in the creative c, and wi,j is the weight of the edge
between selected element i and selected element j in the
creative c. V E
c is the set of vertices(elements), and
the set of edges between elements of connected ingredient
in the ad creative c. The number of parameters in the linear
function is |V E| + |EE| in total. Since these parameters are
estimated with the click-through logs of ad creatives, the re-
ward of each creative is also called click-through rate (CTR).
As mentioned, the CTR estimator will be used for optimal
selection of ad creatives.

Optimal Creative Selection
Before delving into the algorithm, we ﬁrst deﬁne the optimal
creative based on candidate creatives as follows:
Deﬁnition 5 (Optimal Creative). The optimal creative is a
feasible candidate with the largest estimated CTR.

Since edge weight indicates the matching/consistent level
between elements of two ingredients, the optimal creative
is considered as globally best conﬁgured with the ingredi-
ents. Searching the optimal creative by enumerating all ad
creatives suffers from computational challenges, since the
number of feasible creatives is still large even with the in-
gredient tree assumption. However, given the element graph
deﬁned over the ingredient tree, it is possible to develop dy-
namic programming for searching the optimal creatives even

Algorithm 2: AES (Adaptive and Efﬁcient ad cre-
ative Selection framework)
Input: Element graph GE, prior variance σ, creative
features x ∈ RK, K = |V E| + |EE|

1 Initialize B ← IK, f ← 0M , ¯w ← 0K;
2 for t = 1,2,...,T do
3

Sample (cid:101)w from N ( ¯w, σ2B−1);
Find creative ct = arg max xT
Recommend and receive feedback Rct;
Update B ← B + xctxT
¯w ← B−1f ;

4

5

6

ct, f ← f + Rctxct,

c (cid:101)w with Alg.1;

7 end

when the CTR estimator is frequently updated, so that search
efﬁciency can be remarkably improved.

As mentioned, in the element graph, wi represents the
weight of vertex i and vi,j denotes the weight of edge be-
tween two connected elements i and j. Assume each ingre-
dient Ii is associated with a vector dIi of size Li. Each en-
try dIi[j] in the vector dIi denotes the maximum value of
the subtree rooted at the element vertex j. Then the optimal
solution equals to maxj dR[j] where R denotes the root in-
gredient in the ingredient tree. The state transition equation
for dynamic programming is followed as:

dIi[j] =

wj,

wj +






(cid:88)

Im∈{C[Ii]}

max
t∈Im

(vj,t + dIm [t]),

if Ii ∈ {L}

else

where C[Ii] denotes the set of child ingredients of Ii. The
element t is an element in the child ingredient Im. L de-
notes the leaf ingredients of the Ingredient Tree. The dy-
namic programming algorithm for optimum searching over
the element graph is shown in Alg. 1. The time complexity
of this algorithm is O(|V E| + |EE|). |V E| is the number
of vertices and |EE| is the number of edges in the element
graph, which are usually signiﬁcantly smaller than the num-
ber of candidate ad creatives.

Exploration Methods
Due to the limited advertising budget for advertisers and
large numbers of candidates, each ad creative only receives a
few impressions so that the CTR estimator is usually of high
variance. Thus, we introduce efﬁcient exploration methods
to search potential good ad creatives for advertisement, with
the aim of reducing the variance of estimated CTR.

Thompson sampling (Thompson 1933) is a popular bandit
algorithm to balance exploitation and exploration. In our set-
ting, this means the ad creative with not the currently highest
expected reward (i.e., CTR) but potential maximal expected
reward will be selected for advertisement. In practice, each
candidate creative has a probability of being optimal based
on previous impressions and Thompson Sampling selects a
creative proportionally to the probability.

According to the CTR estimator we designed, by fol-
lowing Bayesian linear regression the posterior also follows

Gaussian distribution if placing independent Gaussian prior
on model parameters. Therefore, instead of directly sam-
pling ad creative with the click probability, we sample from
the posterior distribution of model parameters in the CTR
estimator (Agrawal and Goyal 2013). After the parameters
are sampled, the ad creative with the highest CTR can be
selected for advertisement. This indicates that dynamic pro-
gramming can be applied in Thompson sampling so that
the exploration of ad creatives can be very efﬁcient. The
Adaptive and Efﬁcient ad creative Selection (AES) frame-
work is shown in Alg.2.

Experiments

In this section, we conduct experiments on both the synthetic
dataset and the real-world dataset1 to evaluate our approach
to answer the following questions: Q1: What is the efﬁ-
ciency and effectiveness of exploration when the tree struc-
ture is introduced? Q2: What is the effect of the tree assump-
tion over ingredients on the accuracy of the CTR estimator?
Q3: How the tree-based structure affects the efﬁciency of
searching the best ad creative?

Baseline algorithms We chose the following typical ban-
dit algorithms for comparisons where parameters are tuned
with best performances.

• Egreedy Recommend a creative at random with proba-
bility (cid:15) and recommend the creative of best combination
with probability 1 − (cid:15). We set (cid:15) = 0.1.

• UCB We recommend the creative with the maximum
value of the upper bound (Auer 2002) and λ is set 0.03.

• Ind-Egreedy Independently perform Egreedy for each of

N ingredient.

• LinearUCB LinearUCB (Chu et al. 2011) assumes the

linear interactions between the contextual features.

• TEgreedy Tree-Based Egreedy. We perform weighted
linear regression depending on the tree-based estimator
in Eq.2 and run Egreedy for exploration.

• MVT MVT (Hill et al. 2017) models possible interactions
between elements. It utilizes hill climbing for optimal se-
lection and thompson sampling for exploration.

Experiments on Synthetic Data

Simulated data Following previous works, such as (Hill
et al. 2017), we produce synthetic data for experiment. The
element graph we followed is shown in Fig.2. There are
ﬁve ingredients to be composited, including template, back-
ground of pictures, picture size, font and color of text, and
200 ad creatives are produced. We generate the expected re-
ward for creatives following Eq.2, where the weights of ver-
tices and edges are sampled from a Gaussian distribution
N (0, 1). Fig.4 shows the distribution of expected reward in
the simulation experiment.

1https://github.com/alimama-creative/AES-Adaptive-and-

Efﬁcient-ad-creative-Selection

Figure 4: Histogram of simulated expected reward (CTR)
for 200 ad creatives

Simulation settings We perform Bernoulli experiments to
simulate the user feedback (click or not) for each impres-
sion, like previous work (Fouch´e, Komiyama, and B¨ohm
2019). When a creative c is recommended, we perform a
Bernoulli trial where the successful probability is the prede-
ﬁned expected reward of c.

The models are trained every 1000 trials within one bacth
to simulate the delayed feedbacks in the real-world system.
To reduce the bias caused by randomness, we run each al-
gorithm for 20 times. Our experiments are conducted in a
Linux system with 256G memory and CPU E5-2682.

We take cumulative reward (overall CTR) and regret (Hill

et al. 2017) as metrics for comparison.

Learning Effectiveness. We perform 2,000 batches, i.e.2
millions impressions, for each algorithm to evaluate the ca-
pability of ﬁnding optimal composited creatives within lim-
ited impressions. Results are shown in Fig.5.

Finding1: Our approach introducing tree structures helps
quickly ﬁnd the best creative compared with context-free
methods. Compared with Egreedy and UCB, our approach
based on the ingredient tree, where connections of different
elements are captured, shows continuously competitive per-
formances, especially at the beginning 500 batches.

Finding2: The tree-based structure beneﬁts ﬁnding better
creatives compared with Ind-Egreedy. Ind-Egreedy quickly
increases the overall CTR but it ﬁnally converges to a lower
point while AES has an increase of about 8.0% relative
to Ind-Egreedy after 200 batches. Ind-Egreedy method is a
simple solution where each candidate ingredient is indepen-
dently selected. Our method depending on the tree-based
structure increases the overall CTR within a short time,
which indicates the interactions between different ingredi-
ents also inﬂuence user engagements.

Finding3: Various exploration methods can be ﬂexiblly
adapted into the tree structure and show good performances.
TEreedy and AES are two adapted methods on the basis
of the ingredient tree. The better performance of AES also
shows that the exploration over the weights is more efﬁcient
than exploration over the whole creative space.

Figure 5: Result on simulated data. Performances within 500
batches are zoomed in (See in the ﬁgure below). Experi-
ments are run for 20 repetitions.

Sensitive Analysis for Search Space. We conduct experi-
ments under different numbers of ad creatives and report the
Regret for comparisons in Fig.6. We maintain the structure
of the element graph while changing the number of elements
for each ingredient. The number of creatives varies from 32
to 1,200. Experiments are run in 500 batches with 30 rounds.
Finding4: Our proposed method has competitive per-
formance with lower regrets even in much larger search
spaces. The regret of Egreedy dramatically increases with
the growing number of candidate creatives which takes more
chances to evaluate the creatives with similar expected re-
wards. Compared with Ind-Egreedy, our proposed method
relying on both the elements and the interactions between
them continuously shows superior performances under all
search spaces. The tree structure increases the exploration
efﬁciency under huge search space where relationships be-
tween elements are useful to ﬁnd the optimal creative.

In conclusion, empirical experiments on synthetic data re-
veal that our proposed method with tree-based structures is
competitive compared with regular bandit methods. The tree
structure for ad creatives both accelerates the convergence
and has the ability to ﬁnd the optimal solution. Under much
larger search spaces, our methods are still competitive with
lower regrets.

Experiments on Real-World Dataset

Data Collection We collect the online record of seven
consecutive days as an ofﬂine dataset, from a relatively
stable advertising space of a famous e-commerce com-
pany. About 850,000 impression logs are obtained, cover-
ing nearly 2,000 products, and are aggregated to the afore-
mentioned 200 creatives. Thus, each creative has a statistical
CTR, which is the probability of Bernoulli trials conducted
for simulating user feedbacks. Every 1000 Bernoulli trials

0.0140.0160.0180.0200.0220.0240.0260.028CTR05101520# of banner creatives025005000750010000125001500017500200000.0220.0240.026Overall CTR010002000300040005000# of iteratoins0.0210.0220.0230.0240.0250.026Overall CTREgreedyUCBInd-EgreedyTEgreedyAESFigure 6: Algorithm performance vs.
sizes of search space. Lower regret is
better. 20 repetitions are run.

Figure 7: Experiments are run on the
real-world dataset for 50 repetitions
compared with Random policy.

Figure 8: Experiments with different
relationships of elements on the real-
world dataset. Best viewed in color.

are collected to update the model and recommend next cre-
ative. Each algorithm is run for 50 rounds with 500 batches.

Effectiveness We evaluate the performances with the
following algorithms: Egreedy, UCB, LinearUCB, Ind-
Egreedy, TEgreedy and AES. Results of relative CTR gain
compared with the random policy are reported in Fig.7.

Finding1: The tree structure beneﬁts efﬁciency and effec-
tiveness for exploring the optimal creative. We focus on the
convergence speed in terms of CTR since the budget for ad-
vertising is limited. Context-free baselines such as Egreedy
and UCB, take more time for exploration at the very be-
ginning so that they show worse performances. Compared
with simple solutions, LinearUCB and Ind-Egreedy, our pro-
posed method converges quickly to better solutions and con-
tinuously has better performance. This demonstrates that the
relationships modeled by the ingredient tree are related to
the user engagement and they help increase the overall CTR.
Finding2: Both the elements and their interactions are
helpful for accurate CTR estimation. To evaluate different
performances with different types of interactions between
elements, we conduct experiments with different estimators,
as shown in Fig.8. Edge-TS only focuses on the inﬂuence of
edges while Vertex-TS exploits the weights of vertices over
the element graph. AES algorithm captures more informa-
tion than Edge-TS and Vertex-TS. It has better performances
than the two methods, which indicates the contribution both
of the vertex and edge in the ad creatives on user clicks.

Finding3: The accuracy of CTR estimator is almost not
affected by the tree structure assumption. Notably, although
any possible interaction between different elements is cap-
tured in Full-TS, AES still shows comparable performance
but in signiﬁcantly less time complexity, as shown in Fig. 8.
This implies that the interactions of the tree-based structure
play important roles in the estimation of CTR. Moreover,
AES allows efﬁcient search based on dynamic programming
by introducing the tree structure while Full-TS needs to enu-
merate all the candidate creatives.

Finding4: The tree structure allows efﬁcient searching
for optimal creative and shows superior performances on
overall CTR. As shown in Fig.8, compared with MVT
method, which captures more interactions between elements
but utilizes hill climbing for searching, our proposed method
shows superior performances on CTR. The gap between

Method

Time(Second)

Optimal Selection

Full-TS

729.70 ± 3.09 Enumerated computation

MVT

656.96 ± 2.45

Hill Climbing

AES

165.04 ± 0.07

Dynamic Programming

Table 1: Comparisons of running time for searching the op-
timal creative on the real-world dataset. Experiments are run
for 10 repetitions under 50,000 impressions.

Full-TS and MVT implies the inaccuracy of hill climbing for
optimal selection. The ingredient tree enables accurate opti-
mal selection under a huge number of composited creatives
through dynamic programming. Furthermore, these methods
differ in the efﬁciency of searching optimal ad creative, as
shown in Table.1. We set the number of iterations S = 4 and
K = 3 for hill climbing as mentioned in (Hill et al. 2017).
AES takes the minimum time compared with hill climbing
and enumerated method. That is to say, the construction of
the ingredient tree signiﬁcantly reduces the time complexity
under huge creative space.

To sum up, the proposed method shows superior perfor-
mances on the real-world dataset over competing baselines
in terms of overall CTR. The accuracy of CTR estimator is
not affected by the tree structure assumption and efﬁcient
searching can be implemented for optimal selection via dy-
namic programming.

Conclusions

This is the ﬁrst work to investigate the optimal ad creative
selection and we propose an Adaptive and Efﬁcient ad cre-
ative Selection (AES) framework based on ingredient tree.
The tree-based structure allows dynamic programming for
efﬁcient search under huge creative space. Due to the ex-
tremely sparse feedbacks, the exploration method, Thomp-
son Sampling, is suggested to ﬁnd potential good creatives
and increase the overall CTR. To show the effectiveness of
our methods, we conduct experiments both on synthetic data
and real-world data and our approach shows superior perfor-
mance over competing baselines.

36963609001200# of banner creatives0.0020.0040.006RegretEgreedyIndegreedyAES0100200300400500# of iterations0%10%20%Relative Improvement of CTRLinearUCBEgreedyUCBInd-EgreedyTEgreedyAES0100200300400500# of iterations0%10%20%Relative Improvement of CTRAESVertex-TSEdge-TSFull-TSMVTAcknowledgements
The work was supported by Alibaba Group through Al-
ibaba Innovative Research Program. Defu Lian is supported
by grants from the National Natural Science Foundation of
China (Grant No. 61976198, 62022077), the National Key
R&D Program of China under Grant No. 2020AAA0103800
and the Fundamental Research Funds for the Central Uni-
versities. Kai Zheng is supported by NSFC (No. 61972069,
61836007, 61832017) and Sichuan Science and Technology
Program under Grant 2020JDTD0007.

References
Agrawal, S.; and Goyal, N. 2013. Thompson sampling for
contextual bandits with linear payoffs. In International Con-
ference on Machine Learning, 127–135.

sponsored search advertising in Microsoft’s bing search en-
gine. In Proceedings of the 27th International Conference
on International Conference on Machine Learning, 13–20.

Hill, D. N.; Nassif, H.; Liu, Y.; Iyer, A.; and Vishwanathan,
S. 2017. An efﬁcient bandit algorithm for realtime mul-
In Proceedings of the 23rd ACM
tivariate optimization.
SIGKDD International Conference on Knowledge Discov-
ery and Data Mining, 1813–1821.

Hua, X.-S. 2018. Challenges and Practices of Large Scale
In Proceedings of
Visual Intelligence in the Real-World.
the 26th ACM international conference on Multimedia, 364–
364.

Kulkarni, A. P.; Gavlovski, A. S.; and Zhang, Z. 2018.
Postview of content items for dynamic creative optimiza-
tion. US Patent App. 15/397,556.

Auer, P. 2002. Using conﬁdence bounds for exploitation-
exploration trade-offs. Journal of Machine Learning Re-
search 3(Nov): 397–422.

Li, J.; Yang, J.; Hertzmann, A.; Zhang, J.; and Xu, T. 2019.
Layoutgan: Generating graphic layouts with wireframe dis-
criminators. arXiv preprint arXiv:1901.06767 .

Azimi, J.; Zhang, R.; Zhou, Y.; Navalpakkam, V.; Mao, J.;
and Fern, X. 2012. The impact of visual appearance on user
In Proceedings of
response in online display advertising.
the 21st International Conference on World Wide Web, 457–
458.

Bubeck, S.; and Munos, R. 2010. Open Loop Optimistic
Planning. In COLT, 477–489.

Cesa-Bianchi, N.; and Lugosi, G. 2012. Combinatorial ban-
dits. Journal of Computer and System Sciences 78(5): 1404–
1422.

Chapelle, O.; and Li, L. 2011. An empirical evaluation of
thompson sampling. In Advances in neural information pro-
cessing systems, 2249–2257.

Chen, J.; Sun, B.; Li, H.; Lu, H.; and Hua, X.-S. 2016. Deep
ctr prediction in display advertising. In Proceedings of the
24th ACM international conference on Multimedia, 811–
820.

Chen, W.; Wang, Y.; and Yuan, Y. 2013. Combinatorial
multi-armed bandit: General framework and applications. In
International Conference on Machine Learning, 151–159.

Cheng, H.; Zwol, R. v.; Azimi, J.; Manavoglu, E.; Zhang,
R.; Zhou, Y.; and Navalpakkam, V. 2012. Multimedia fea-
tures for click prediction of new ads in display advertising.
In Proceedings of the 18th ACM SIGKDD international con-
ference on Knowledge discovery and data mining, 777–785.

Chu, W.; Li, L.; Reyzin, L.; and Schapire, R. 2011. Contex-
tual bandits with linear payoff functions. In Proceedings of
the Fourteenth International Conference on Artiﬁcial Intel-
ligence and Statistics, 208–214.

Fouch´e, E.; Komiyama, J.; and B¨ohm, K. 2019. Scaling
In Proceedings of the
Multi-Armed Bandit Algorithms.
25th ACM SIGKDD International Conference on Knowl-
edge Discovery & Data Mining, 1449–1459.

Graepel, T.; Candela, J. Q.; Borchert, T.; and Herbrich, R.
2010. Web-scale Bayesian click-through rate prediction for

Li, W.; Wang, X.; Zhang, R.; Cui, Y.; Mao, J.; and Jin, R.
2010. Exploitation and exploration in a performance based
In Proceedings of the 16th
contextual advertising system.
ACM SIGKDD international conference on Knowledge dis-
covery and data mining, 27–36.

Liu, H.; Lu, J.; Yang, H.; Zhao, X.; Xu, S.; Peng, H.; Zhang,
Z.; Niu, W.; Zhu, X.; Bao, Y.; et al. 2020. Category-Speciﬁc
CNN for Visual-aware CTR Prediction at JD. com. In Pro-
ceedings of the 26th ACM SIGKDD International Confer-
ence on Knowledge Discovery & Data Mining, 2686–2696.

Mo, K.; Liu, B.; Xiao, L.; Li, Y.; and Jiang, J. 2015.
Im-
age feature learning for cold start problem in display adver-
tising. In Twenty-Fourth International Joint Conference on
Artiﬁcial Intelligence.

Montague, P. R. 1999. Reinforcement Learning: An Intro-
duction, by Sutton, RS and Barto, AG. Trends in cognitive
sciences 3(9): 360.

Rejwan, I.; and Mansour, Y. 2020. Top-k Combinatorial
Bandits with Full-Bandit Feedback. In Algorithmic Learn-
ing Theory, 752–776.

Tang, L.; Rosales, R.; Singh, A.; and Agarwal, D. 2013. Au-
tomatic ad format selection via contextual bandits. In Pro-
ceedings of the 22nd ACM international conference on In-
formation & Knowledge Management, 1587–1594.

Teo, C. H.; Nassif, H.; Hill, D.; Srinivasan, S.; Goodman,
M.; Mohan, V.; and Vishwanathan, S. 2016. Adaptive, per-
sonalized diversity for visual discovery. In Proceedings of
the 10th ACM conference on recommender systems, 35–38.

Thompson, W. R. 1933. On the likelihood that one unknown
probability exceeds another in view of the evidence of two
samples. Biometrika 25(3/4): 285–294.

Wang, Q.; Li, T.; Iyengar, S.; Shwartz, L.; and Grabarnik,
G. Y. 2018. Online IT ticket automation recommendation
In Pro-
using hierarchical multi-armed bandit algorithms.
ceedings of the 2018 SIAM International Conference on
Data Mining, 657–665. SIAM.

Wang, Y.; Yin, D.; Jie, L.; Wang, P.; Yamada, M.; Chang, Y.;
and Mei, Q. 2016. Beyond ranking: Optimizing whole-page
presentation. In Proceedings of the Ninth ACM International
Conference on Web Search and Data Mining, 103–112.
Yue, Y.; Hong, S. A.; and Guestrin, C. 2012. Hierarchical ex-
ploration for accelerating contextual bandits. In Proceedings
of the 29th International Coference on International Confer-
ence on Machine Learning, 979–986.

