A Data-Driven Machine Learning Approach for 
Consumer Modeling with Load Disaggregation 

A. Khaled Zarabie, Sanjoy Das*, and Hongyu Wu 
Electrical & Computer Engineering, Kansas State University. 
*Corresponding author: sdas@ksu.edu 

1 

Abstract—While  non-parametric  models,  such  as  neural 
networks, are sufficient in the load forecasting, separate estimates 
of  fixed  and  shiftable  loads  are  beneficial  to  a  wide  range  of 
applications  such  as  distribution  system  operational  planning, 
load  scheduling,  energy  trading,  and  utility  demand  response 
is  usually 
programs.  A  semi-parametric  estimation  model 
required,  where  cost  sensitivities  of  demands  must  be  known. 
Existing  research  work  consistently  uses  somewhat  arbitrary 
parameters  that  seem  to  work best.  In  this  paper,  we  propose  a 
generic class of data-driven semiparametric models derived from 
consumption data of residential consumers. A two-stage machine 
learning approach is developed. In the first stage, disaggregation 
of the load into fixed and shiftable components is accomplished by 
means  of  a  hybrid  algorithm  consisting  of  non-negative  matrix 
factorization (NMF) and Gaussian mixture models (GMM), with 
(EM) 
the 
algorithm.  The  fixed  and  shiftable  loads  are  subject  to  analytic 
treatment with economic considerations. In the second stage, the 
model  parameters  are  estimated  using  an  L2-norm,  ϵ-insensitive 
regression approach. Actual energy usage data of two residential 
customers show the validity of the proposed method.   

trained  by  an  expectation-maximization 

latter 

Index  Terms—Cobb-Douglas  Preference,  Disaggregation, 
Gaussian  Mixture  Model,  Non-negative  Matrix  Factorization, 
Semi-parametric Model, Unsupervised Learning, Utility. 

I.  INTRODUCTION 

T 

HE overarching goal of this paper is to develop a framework 
to  model  a  residential  unit’s  daily  energy  consumption 
patterns, factoring in cost and temperature dependencies, using 
non-intrusive smart meter data. Load disaggregation lies at the 
core of the proposed approach.  
  Unlike  earlier  methods  that  attempt  to  extract  usages  of 
individual appliances, disaggregation in this research separates 
the load into only two components, (i) shiftable loads, and (ii) 
fixed  loads,  with  only  the  latter  responsive  to  time-of-use 
(TOU)  pricing  and  ambient  temperatures.  The  proposed 
unsupervised  learning  method  for  load  disaggregation  is  a 
hybrid  algorithm  that  applies expectation-maximization  (EM) 
to train a Gaussian mixture model (GMM), with non-negative 
matrix factorization (NMF). 

A  meaningful,  nonlinear  utility  model  of  the  residence, 
which is grounded on classical econometrics and game theory, 
is proposed here. The disaggregated loads are used to estimate 
the parameters of this model. Regression with an ϵ-insensitive, 
L2-norm  loss  function  is  applied  to  minimize  the  mismatch 
between 
the 
corresponding disaggregated loads. 

the  model’s  predicted  energy  use  and 

A.  Literature Survey 

Recent  advancements  in  machine  learning  have  made  it 
possible to disaggregate residential loads obtained from smart 
meters  into  smaller  components.  Some  algorithms  for  load 
disaggregation rely on supervised or semi-supervised learning, 
which require a set of training data where the individual loads 
are known a priori [1]. Deep neural networks are an example of 
such a method [2], [3], [4], [5]. Unfortunately, these approaches 
are  not  suitable  for  non-intrusive  load  monitoring  where  the 
only available data is in the form of smart meter readings, even 
during the training phase.  

Several other approaches tailored for energy disaggregation 
have  been  proposed.  Among  them  include  [6]  that  uses  the 
fuzzy c-means clustering to identify the number of appliances. 
Quadratic  programming  has  been  used 
[7].  A 
computationally efficient additive neural network is used in [8], 
with  a 
training  algorithm  called  cogent 
confabulation.  The  approach  in  [8]  relies  on  OFF-ON 
transitions to detect individual appliances. It also uses bagging 
(an ensemble learning technique) for improved classification of 
appliances.  Two  novel  algorithms  based  on  spectral  graph 
theory  have  been  applied  for  disaggregation  in  [9]  whereas 
fuzzy logic has been adopted in [10]. 

specialized 

in 

Hidden  Markov  models  (HMM)  are  a  popular  choice  of 
modeling  individual  appliances.  Individual  appliances  are 
represented  using  two  or  more  states,  with  transition  and/or 
emission  probabilities  usually  learned  from  a variation  of  the 
EM  algorithm.  In  [11],  the  total  number  of  appliances  are 
determined  using  K-means  clustering.  An  improved  method 
proposed in [12] that models appliances using factorial HMMs. 
Other  extensions  to  represent  appliances  include  explicit 
HMMs [13] and hierarchical HMMs [14] for load modeling. 

The  EM  algorithm  is  also  used  to  train  Gaussian  mixture 
models  (GMM)  [15].  GMMs  are  based  on  probability  theory 
that  usually  apply  the  maximum  likelihood  criterion  for 
appliance classification. These approaches assume the presence 
of a set of ‘latent’ variables z𝑗, where 𝑗 is an index, with only 
one being ‘active’ at each time. The output follows a Gaussian 
probability distribution that is uniquely identified by the active 
latent  variable.  The  algorithm  proposed  in  [15]  is  based  on 
GMMs.  The  approach  uses  the  Dempster-Shaffer  theory  for 
appliance classification. 

unsupervised 

Non-negative matrix factorization (NMF) is another widely 
used, 
energy 
disaggregation.  The  classical  NMF  algorithm  decomposes  an 
input  data  matrix 𝐗,  whose  columns  are  sample  vectors,  into 
two factors, 𝐖 and 𝐇, so that their product equals 𝐗. Usually, 

approach 

learning 

for 

 
 
 
𝐗 has a very large number of columns, which are independent 
samples. The columns of 𝐖 serve as basis vectors so that each 
sample  𝐱(𝑛), 𝑛 ∈ 𝒩 ,  which  are  columns  of  𝐗  can  be 
represented as  a  weighted  combination  of  the bases,  with the 
non-negative weights being the corresponding column vectors 
𝐡(𝑛) of 𝐇.  NFM  has  been  used  for  energy  disaggregation  of 
HVAC load components in an industrial building and in a smart 
home setting [16]. Another method has been proposed in [17], 
[18] to impose 𝐿0 constraints, which uses a softmax distribution 
for  the  elements  in  𝐇  to  assign  weights  to  them  in  such  a 
manner that those with higher values are likelier to improve the 
objective 
function.  Semi-supervised  NMF  using  prior 
knowledge of the usage time profiles of individual appliances 
has been proposed in [1]. NMF has been applied for data over 
larger  periods  in  time  to  retrieve  seasonal  trends  in  usage 
profiles in [19]. 

Disaggregated  loads  are  used  in  this  research  to  derive 
nonlinear  utility  models  of  residential  consumers.  In  [20], 
generation  side  utilities  are  modeled  as  piecewise  linear 
functions so that linear programming can be applied for energy 
auctioning.  A  linear  utility  function  is  also  used  in  [21]  for 
individual  appliances,  with  customers  trying  to maximize  the 
sum  of  all  such  utilities.  However,  it  should  be  noted  that 
linearization is not suitable in many other applications as they 
do not encapsulate the dependence of utility to price changes. 
For  this  reason,  recent  research  proposals  routinely  represent 
utilities  using  saturating  nonlinearities.  In  [22]  customers’ 
behavior based utility functions are modeled in this manner. In 
the  double  auction  mechanism  described  in  [23]  participants’ 
bidding  strategies  are  determined  from  nonlinear  utilities  of 
individual goods. Similarly, in  [24], nonlinear functions have 
been used to quantify the utility of a potential user from pricing 
and QoS. 

Logarithmic functions are commonly used to model utilities 
nowadays.  The  double  auctions  in  [23]  make  use  of  such 
utilities.  Portfolio  optimization  using  power-log  utilities  are 
taken up in [25]. The approach in [24] uses log-concave utility 
functions. In [26], logarithmic utilities are also used to quantify 
the benefit derived from operating shiftable appliances. In [27], 
[28], [29] residential consumers’ utilities have been modeled as 
logarithms in energy market games. In [28], log utilities have 
been used to represent aggregator payoffs. Logarithmic utilities 
have also beeen used in [30], [31], in a Stackelberg game based 
model of energy trade in the grid. 

B.  Research Contributions 

The novelties of the research that this paper entails are listed 

as follows. 

(i) A fully non-intrusive approach for load disaggregation is 
proposed.  This  is  an  improvement  not  only  over  supervised 
learning  approaches  but  also  those  that  use  unsupervised 
learning  such  as  GMMs,  HMMs,  or  NMF,  most  of  which 
require some form of prior information about the consumption 
patterns  of  individual  appliances.  Therefore,  the  proposed 
approach can be entirely trained in real-time after deployment. 
(ii)  Disaggregation  in  this  research  is  accomplished  with  a 
hybrid  algorithm  that  harnesses  the  synergy  of  GMMs  and 

2 

NMF. GMMs are most effective in learning the load patterns of 
binary OFF-ON shiftable appliances as well as those operating 
at  only  a  few  discrete  levels,  whereas  NMF  approaches  are 
suitable to iteratively obtain basis sets to represent fixed loads 
whose energy consumption levels cannot be discretized readily.  
(iii)  A  semi-parametric  consumer  utility  model  has  been 
proposed,  which  represents  the  appropriate  tradeoff  between 
parametric and non-parametric models. For many applications, 
it suffices to distinguish only between fixed and cost dependent 
components of the load. Additionally, the present utility model 
considers temperature dependence of energy consumption. 

(iv) Parameter estimation of the consumer utility model has 
been  formulated  in  terms  of  𝐿2 -norm  maximum  margin 
regression. The use of the utility model as a means to validate 
the  performance  of  the  disaggregation  algorithm  has  been 
proposed. 

Fig.  1.  Isoquants  for  Cobb-Douglas  preference  (black),  perfect 
substitution  (blue,  dashed)  and  perfect  complementarity  (red, 
dashed). The coordinates represent resource usages. 

𝑡∈𝒯

𝑓 + 𝑥𝑡

𝑓 and 𝑥𝑡

,  and 𝐱𝑠 = [𝑥𝑡

II.  OVERVIEW OF APPROACH 
It  is  assumed  that  any  user’s  energy  usage 𝑥𝑡  at  any  time 
𝑠 +
instant 𝑡 is  divided  into  two  components,  i.e. 𝑥𝑡 = 𝑥𝑡
𝑠 are the fixed and shiftable loads, and 𝜂𝑡 is 
𝜂𝑡, where 𝑥𝑡
random  noise.  We  define  the  following  vectors, 𝐱 = [𝑥𝑡]𝑡∈𝒯, 
𝑓]
𝑠]𝑡∈𝒯 .  Each  quantity  is  a |𝒯| × 1 
𝐱𝑓 = [𝑥𝑡
vector,  where  𝒯  is  the  set  of  all  time  instances.  The  time 
instances  𝑡 ∈ 𝒯  are  divided  into  a  set  of  non-overlapping 
periods, with each period including exactly 𝐿 instances. The set 
of periods is denoted as 𝒦 so that 𝐿 = |𝒦|−1|𝒯|. For example, 
if  the  time  instances  are  of  a  minute  duration  each,  that  are 
divided up into hour-long periods, then |𝒯| = 1440 mins/day, 
|𝒦| = 24  hours/day,  and  𝐿 = 60  mins/hour.  Within  each 
period  𝑘 ∈ 𝒦  we  define  the  𝐿 × 1  vectors  𝐱𝑘
, 
𝑠 = [𝑥𝑡
𝑠]𝓀(𝑡)=𝑘 ,  where  𝓀(∙)  is  a  mapping  𝓀: 𝒯 → 𝒦  that 
𝐱𝑘
provides  the  period  index  corresponding  to  a  time  instance 𝑡. 
The  temperature  vector  𝛉 = [𝜃𝑘]𝑘∈𝒦  and  the  vector  of  unit 
costs 𝐜 = [𝑐𝑘]𝑘∈𝒦 are the other 𝐿 × 1 vectors used here. 

𝑓]
𝑓 = [𝑥𝑡

𝓀(𝑡)=𝑘

 
 
 
 
 
The  dataset  used  in  this  research  consists  of  multiple 
samples, where each sample pertains to a day. Accordingly, we 
define  the  load  matrices, 𝐗 = [𝐱(𝑛)]𝑛∈𝒩 , 𝐗𝑓 = [𝐱𝑓(𝑛)]𝑛∈𝒩 , 
and 𝐗𝑠 = [𝐱𝑠(𝑛)]𝑛∈𝒩 ,  of  dimensionalities |𝒯| × |𝒩|,  where 
𝒩 is the set of samples and sample index 𝑛 indicates a day. The 
|𝒦| × |𝒩| matrix of temperatures is 𝚯 = [𝛉(𝑛)]𝑛∈𝒩. The cost 
vector 𝐜 is constant across all samples in 𝒩. 

Fig. 2. A typical utility function (top) and its derivative, the 
marginal  utility  (bottom).  The  marginal  utility  is  also  the 
unit cost of energy. 

A.  Load Model 

Appliances that are used intermittently by a typical residence 
make  up  the  shiftable  loads,  such  as  washer/dryer  units  or 
PHEVs.  When  in  operation  they  consume  a  large  amount  of 
energy that can be discretized into a few levels. Smart homes 
schedule  these  appliances  based  on  the  instantaneous  cost  of 
electricity.  Some  shiftable  loads  (e.g.  air-conditioners)  are 
temperature dependent, their use being comfort-driven. Fixed 
loads  pertain  to  appliances  that  are  deemed  essential  in  any 
residence,  such  as  lighting  and  refrigeration.  Consequently 
energy  pricing  has  little  bearing  on  their  operation.  With  the 
exception of refrigerators, fixed loads cannot be characterized 
as discrete loads. Their energy consumption is lower than that 
in fixed loads. Unlike shiftable loads, fixed load appliances are 
operated throughout the day. 

It is assumed that the fixed load at any period 𝑘 consists of a 

temperature independent and dependent terms so that, 

T𝐱𝑘

𝑓 = 𝟏𝐿

𝑓 = 𝑝𝑘 + 𝑞𝑘𝜃𝑘.
(1) 
𝑥̂𝑘
𝑓  is  the 
Here 𝑝𝑘  and 𝑞𝑘  are  two  model  parameters, 𝑥𝑘
total fixed load and 𝜃𝑘 is the temperature during that period. It 
may be noted that 𝑞𝑘 = 0 in most cases as fixed loads do not 
𝑓 
depend on outside temperature. The ‘hat’ (∙̂) appearing over 𝑥𝑘
in (1) indicates that it is a modeled load (as opposed to a real 
load obtained from the available input data). Shiftable loads are 
modeled using econometric principles that are described next. 
Consider  a  market  with  two  divisible  resources,  indexed  1 
and 2. Suppose  the amounts  of each resource  consumed by  a 
consumer  are 𝑥1  and 𝑥2 .  The  consumer’s  preference  can  be 
quantified  in  terms  of  the  function  𝑦(𝑥1, 𝑥2) .  When  the 
resources  display  perfect  complementarity,  the  consumer’s 

3 

preference  can  be  expressed  as 𝑦(𝑥1, 𝑥2) = min(𝑎1𝑥1, 𝑎2𝑥2), 
where 𝑎1  and 𝑎2  are  two  constants  based  on  the  consumer’s 
individual  characteristics.  On  the  other  hand,  when  the 
resources are perfect substitutes of each other, then 𝑦(𝑥1, 𝑥2) =
𝑎1𝑥1 + 𝑎2𝑥2 .  The  Cobb-Douglas  function  [32]  is  frequently 
used as the preference when the two resources are intermediate 
between  being  perfect  complements  and  perfect  substitutes. 
The schematic in Fig. 1. shows the shape of a typical isoquant 
for  the  Cobb-Douglas  preference.  For  comparison,  isoquants 
for  perfect  substitutes  and  perfect  complements  are  also 
provided. In the present case with two resources, the preference 
𝑎2 .  In  general,  with  𝐱 
can  be  expressed  as  𝑦(𝑥1, 𝑥2) = 𝑥1
representing  the  vector  of  all  resources,  the  Cobb-Douglas 
preference  is 𝑦(𝐱) = ∏ (𝑥𝑘)𝑎𝑘
,  (𝑘 = 1,2, …).  The parameters 
𝑎𝑘 > 0  are  referred  to  as  elasticity  constants.  The  Cobb-
Douglas preference is widely used to model resource usage. 

𝑎1𝑥2

𝑘

Since the original Cobb-Douglas preference function serves 
as a production function, it becomes zero if any component of 
the final product, 𝑥𝑘 = 0. In the present application, each factor 
is incremented by 1 to prevent this from happening, so that each 
𝑠 + 1)𝑎𝑘. The logarithm of the 
factor in 𝑦(𝐱𝑠) is of the form, (𝑥𝑘
modified  Cobb–Douglas  preference  is  chosen  as  the  utility 
function in this research. Treating the logarithm of the  Cobb-
Douglas preference in this manner, renders the utility function: 
(i) non-decreasing, (ii) strictly concave, (iii) intersecting at the 
origin at 𝐱𝑠 = 𝟎, indicating that a consumer can glean no utility 
without  consuming  energy,  and  (iv)  Lipschitz  continuous. 
These are highly desirable features of the utility function, the 
first three being mandated by the well-known economic precept 
known  as  the  law  of  diminishing  returns,  while  the  fourth 
making the function suitable for mathematical treatment. 

Accordingly,  the  expression  for  the  utility  used  in  this 

research is given by the following, 
𝑢(𝐱𝑠) = ∑ 𝑎𝑘 log ((𝑥𝑘
𝑘∈𝒦

𝑠 − (𝑏𝑘 + 𝑑𝑘𝜃𝑘))

+ 1)

.

+

(2) 

The quantity 𝑏𝑘 is the base component of the shiftable load that 
is determined by extraneous, non-economic factors (e.g. it is not 
practicable  for  a  washer/dryer  unit  to  be  put  into  use  at  2:00 
AM). The term 𝑑𝑘𝜃𝑘 is the temperature dependent component 
𝑠 (which is predominantly due to air conditioning). For this 
of 𝑥𝑘
𝑠 in (2). The operator 
reason, (𝑏𝑘 + 𝑑𝑘𝜃𝑘) is subtracted from 𝑥𝑘
(∙)+ restricts the enclosed argument to be non-negative. 

Generally speaking, the energy consumption increases when 
the ambient temperature deviates in either direction from some 
desired  value,  say  𝜃des  that  is  considered  to  be  most 
comfortable to the occupants of a residential unit. Under these 
circumstances  a  temperature  dependent  term  𝑑|𝜃𝑘 − 𝜃des| 
𝑠 so that the perceived utility 
should have been removed from 𝑥𝑘
is  lowered  in  either  direction  by  the  difference  between  the 
temperature  from  the desired value.  However,  as  the  specific 
data  used  in  this  research  involved  only  warmer  days,  it  is 
assumed that 𝜃𝑘 > 𝜃des thereby justifying the inclusion of the 
linear  term 𝑑𝑘𝜃𝑘 in  (2).  This  approach  also  avoids  using  the 
non-differentiable absolute operator |∙|. 

loadunit costloadutility 
 
 
 
 
𝑠 is the agent’s 
  The derivative of 𝑢(𝐱𝑠) with respect to any 𝑥𝑘
marginal  utility,  which  is  also  equal  to  the  unit  cost  𝑐𝑘 . 
Accordingly, it can be readily established using (2) that, 

𝑠 = 𝑐𝑘
𝑥̂𝑘

−1𝑎𝑘 + 𝑏𝑘 + 𝑑𝑘𝜃𝑘.   

(3) 
𝑠  into 
The  above  expression  splits  the  model  shiftable  load 𝑥̂𝑘
cost  dependent,  constant,  and  temperature  dependent  terms. 
Fig. 2. illustrates how the utility and its derivative, the unit cost, 
vary  with  energy  use.  The  utility  is  strictly  concave  in 
accordance with the law of diminishing returns. Although the 
unit cost is shown as a function in Fig. 2., in energy auctions 
the unit cost is usually determined by the DSO or aggregator, 
with  each  consumer  agent 
the 
corresponding amount of energy [26],[27],[28],[29]. 

responding  by  using 

B.  Modeling Steps  

The load matrix 𝐗, the temperature matrix 𝚯, and the vector 
𝐜 of unit costs are the three input data sets. Load disaggregation 
is carried out using the hybrid approach proposed here, with the 
GMM  associated  with  shiftable  loads  and  NMF  with  fixed 
loads.  The  hybrid  NMF-GMM  disaggregation  algorithm 
produces  matrices  of  fixed  loads 𝐗̃𝑓 ,  and  shiftable  loads 𝐗̃𝑠 , 
which serve as the input to the regression algorithm that yields 
the parameters associated with the consumer utility model. Fig. 
3. illustrates the various steps involved. 

Fig.  3.  Steps  involved  in  the  proposed  approach.  Thicker  grey 
arrows  indicate  the  directions  of  data  flow  whereas  thinner, 
colored arrows represent parameter flow. 

III.  LOAD DISAGGREGATION 

A.  Gaussian Mixture Model 

The shiftable loads are represented in our framework in terms 
of a Gaussian mixture model (GMM). The 𝑗th prior, mean, and 
2, which are trainable parameters with 
variance are π𝑗 𝜇𝑗, and 𝜎𝑗
the exception of 𝜇0 which is permanently assigned a value 𝜇0 =
0 to represent the case when none of the shiftable loads is in 
2 is treated as a nonzero quantity to subsume 
use. Its variance 𝜎0
noise  or  small  fixed  loads.  With 𝒢 being  the  set  of  nonzero 
Gaussians, the probability distribution of 𝑥𝑡
2
𝑠−𝜇𝑗)
2
𝜎𝑗

𝑠 is expressed as, 

(𝑥𝑡

−

.

(4) 

pr[𝑥𝑡

𝑠] = ∑ π𝑗𝑒
𝑗∈𝒢∪{0}

The  GMM  is  trained  using  the  expectation-maximization 
(EM)  algorithm  [1], 
for 
convenience. The algorithm consists of an expectation step (E-

[33],  briefly  described  here 

4 

step)  and  a  maximization  step  (M-step).  In  the  E-step,  using 
2  for  each 𝑗,  the  posterior 
existing  estimates  of π𝑗  𝜇𝑗 ,  and 𝜎𝑗
probabilities z𝑗,𝑡(𝑛) = pr[𝛿𝑔(𝑡)=𝑗|𝑥𝑡] of  each  Gaussian  in 𝒢 ∪
{0} is estimated as, 

2

−

(𝑥𝑡(𝑛)−𝜇𝑗)
2
𝜎𝑗

−1π𝑗𝑒

z𝑗,𝑡(𝑛) = Σ𝑡,𝑛

(5)
The quantity Σ𝑡,𝑛 in the denominator of (5) is for normalization 
such that the joint probability is unity, ∑

,   𝑗 ∈ 𝒢 ∪ {0}.  

= 1. 

z𝑗,𝑡(𝑛)

|𝒢|
𝑗=0

During the maximization step the  GMM  parameters, π𝑗 𝜇𝑗, 

and 𝜎𝑗

2 are updated using the following rules, 

𝜇𝑗 = ∑ z𝑗,𝑡𝑥𝑡(𝑛)

,   𝑗 ∈ 𝒢,

𝑡∈𝒯,𝑛∈𝒩

2 = ∑ z𝑗,𝑡(𝑥𝑡(𝑛) − 𝜇𝑗)
𝜎𝑗

2

,   𝑗 ∈ 𝒢 ∪ {0},

𝑡∈𝒯,𝑛∈𝒩

π𝑗 = |𝒯|−1|𝒩|−1 ∑ z𝑗,𝑡(𝑛)

,   𝑗 ∈ 𝒢 ∪ {0}.  

(6𝑎) 

(6𝑏) 

(6𝑐) 

𝑡∈𝒯,𝑛∈𝒩

The  E-step  and  M-step  are  repeated  multiple  times  until 
convergence. 

Given a total load 𝑥𝑡(𝑛) at time instance 𝑡, the shiftable load 

is estimated according to the expression below, 

𝑥̃𝑡

𝑠(𝑛) = max
𝑗∈𝒢

𝜇𝑗 ≤ 𝑥𝑡(𝑛) .
Ignoring noise, the remaining load 𝑥𝑡(𝑛) − 𝑥𝑡
the fixed load 𝑥̃𝑡

𝑓(𝑛), i.e., 

(7) 
𝑠(𝑛) is taken to be 

𝐗̃𝑓 = 𝐗 − 𝐗̃𝑠.  
(8) 
The estimated fixed load 𝐗̃𝑓 is disaggregated in the following 
NMF algorithm. 

B.  Non-Negative Matrix Factorization 

It is assumed that the  fixed load 𝐱̃𝑓(𝑛) of each sample 𝑛 ∈
𝒩  can  be  represented  using  a  set  ℬ  of  basis  vectors  of 
dimensionality  |𝒯| × 1 .  If  ℎ𝑘(𝑛), 𝑘 = 1, … , |ℬ|  are  there 
coefficients, we must have, 

𝐱̃𝑓(𝑛) = ∑ ℎ𝑘

𝑓(𝑛)𝐰𝑘

𝑓

.  

(9) 

𝑘∈ℬ

T𝐰𝑙 =
The  basis  set  is  assumed  to  be  orthonormal,  so  that 𝐰𝑘
𝛿𝑘=𝑙. These basis vectors form the columns of a |𝒯| × |ℬ| basis 
letting  𝐡𝑓(𝑛) =
matrix,  𝐖𝑓 = [ℎ𝑘(𝑛)]𝑘∈𝒦 .  Similarly, 
 be  the  𝐵 × 1  vector  of  coefficients  in  (9),  we 
[ℎ𝑘
define the |ℬ| × |𝒩| matrix, 𝐇𝑓 = [𝐡𝑓(𝑛)]𝑛∈𝒩. Therefore the 
above expression can be written more concisely as, 

𝑓(𝑛)]

𝑘∈𝒦

𝐗̃𝑓 = 𝐖𝑓𝐇𝑓.
(10) 
As  the  basis  vectors  are  mutually  orthonormal,  it  is  apparent 
that  𝐖𝑓 T
𝐖𝑓 = 𝐈𝐵×𝐵 .  The  set  of  all  possible  orthonormal 
matrices  𝐖𝑓 is a Steifel manifold, a subset of ℝ|𝒯|×|ℬ|, as long 
as  |ℬ| < |𝒯| .  Steifel  manifolds  are  Riemannian  under  an 
appropriately defined matrix inner product [1], [34]. 

The  matrices  𝐖𝑓  and  𝐇𝑓  are  trained  using  the  usual 
multiplicative update rule [17], [35], [36], [37] to minimize the 
squared  Frobenius  norm  Φ = ‖𝐗𝑓 − 𝐗̃𝑓‖
.  Consider  any 
matrix  parameter  𝐏  (which  can  be  either  𝐖𝑓  or  𝐇𝑓 ).  The 
gradient, ∇𝐏Φ of Φ can be expressed in terms of its positive and 
−.  In gradient descent, 
negative components as ∇𝐏Φ = ∇𝐏

+ − ∇𝐏

𝐹

2

LICQPGMMNMFparameterestimationloaddisaggregationconsumerutility model 
 
 
 
 
+ + ϵ∇𝐏

− .  This 
𝐏 would  be  updated  additively  as 𝐏 ← 𝐏 − ϵ∇𝐏
would require the use of an additional algorithmic constant ϵ, 
as  well  as  an  additional  projection  step  to  ensure  that 𝐏 ≥ 𝟎. 
The multiplicative method removes both these drawbacks. The 
multiplicative update rule is 𝐏 ← 𝐏 ∘ ∇𝐏
Since  the  gradient  ∇𝐇𝑓Φ = 𝐖𝑓 T

𝐗𝑓 ,  the 
coefficient  matrix 𝐇𝑓  is  updated  according  to  the  following 
expression, 

− ⊘ ∇𝐏
+. 
𝐖𝑓𝐇𝑓 − 𝐖𝑓 T

𝐇𝑓 ← 𝐇𝑓 ∘

.  

(11) 

𝐗𝑓

𝐖𝑓 T
𝐖𝑓 T𝐖𝑓𝐇𝑓

The corresponding update rule for the basis matrix 𝐖𝑓 could 
be obtained in the same manner. However, in order to maintain 
orthonormality of the basis vectors, the version in  [38] has been 
adopted in this research, which yields the modified update rule, 

𝐖𝑓 ← 𝐖𝑓 ∘

.   

(12) 

𝐗𝑓𝐇𝑓T
𝐖𝑓𝐇𝑓𝐗𝑓 T𝐖𝑓

, 

The  modification lies in the  denominator of the above rule. 
− 𝐗𝑓𝐇𝑓 T
Since  the  gradient ∇𝐖𝑓Φ in ℝ|𝒯|×|ℬ| is 𝐖𝑓𝐇𝑓𝐖𝑓 T
the denominator in (12) would have been 𝐖𝑓𝐇𝑓𝐖𝑓T
. However 
its  natural  gradient ∇̃
𝐖𝑓Φ must  be  tangential  to  the  “curved” 
Steifel  manifold  in  ℝ|𝒯|×|ℬ| ,  which  is  possible  as  long  as 
𝐖𝑓 T
𝐖𝑓 + ∇̃
the  natural 
gradient  of Φ is ∇̃
,  leading  to 
the update rule in (11b) that preserves the orthonormality of the 
basis matrix 𝐖𝑓. 

𝐖𝑓Φ = 𝐖𝑓𝐇𝑓𝐗𝑓 T

= 𝟎  [34].  Accordingly, 

𝐖𝑓 − 𝐗𝑓𝐇𝑓 T

T 𝐖𝑓 T
𝐖𝑓

∇̃

It must be mentioned here that although it has been shown in 
[36] that the multiplicative update rule lowers the cost function 
Φ, to the best of our knowledge there have been no concrete 
studies  showing  that  it  converges  to  a  unique  fixed  point. 
Needless to say, the simplicity of multiplicative updates makes 
it  widely  used.  The  theoretical  backdrop  becomes  even  more 
pessimistic with orthonormal NMF updates  as applied  in this 
research.  Nonetheless,  numerous  preliminary  simulations  in 
this  research  revealed  that  this  method  was  consistently  as 
accurate as that in [35], while maintaining orthonormality. 

Ignoring  noise,  the  residual  load  in 𝐗  that  is  not  fixed,  is 

treated as the shiftable load, so that, 

This load is used by the next iteration of the EM algorithm. 

𝐗̃𝑠 = 𝐗 − 𝐖𝑓𝐇𝑓.  

(13) 

C.  Hybrid Algorithm 

The steps of the hybrid algorithm are outlined below. 

1.   initialize 𝐗̃𝑓, 𝐗̃𝑠 
2.   initialize {π𝑗, 𝜇𝑗, 𝜎𝑗
3.   initialize 𝐖𝑓, 𝐇𝑓 
4.   repeat 

2}

𝑗∈𝒢∪{0}

a.   estimate {z𝑗,𝑡(𝑛)}
(𝑗,𝑡,𝑛)∈𝒢×𝒯×𝒩
2}
b.   update {π𝑗, 𝜇𝑗, 𝜎𝑗
c.   estimate 𝐗̃𝑓 according to (7),(8) 

𝑗∈𝒢∪{0}

 according to (6) 

 according to (4),(5) 

        d.   update 𝐇𝑓 according to (11) 
        e.   update 𝐖𝑓 according to (12) 
        f.   estimate 𝐗̃𝑠 according to (13) 
      until converged 

5 

The first step of the hybrid disaggregation algorithm involves 
dividing  the  training  samples  𝐗  into  shiftable  and  fixed 
components.  Initialization  of  the  GMM  parameters  and  the 
NFM matrices takes place in steps 2 and 3. Step 4 is the main 
iterative process. 

Steps 4a and 4b pertain to the GMM as outlined in III.A. In 
step 4a, the hidden variables z𝑗,𝑡(𝑛) are estimated. This is the 
E-step of the EM algorithm. The M-step is implemented in step 
4b.  In  step  4c,  the  estimated  fixed  load 𝐗̃𝑓 is  computed.  The 
next two steps (steps 4d and 4e) implement the NMF algorithm. 
In step 4d and 4e, the matrices 𝐇𝑓 and 𝐖𝑓 associated with the 
fixed  loads  are  incremented.  Finally, 𝐗̃𝑠 ,  the  estimate  of  the 
total shiftable load is determined in step 4f.  

The criterion to determine when convergence is achieved is 
omitted in the overall algorithm’s outline because it was found 
that  the  algorithm  always  converged  within  merely  10-20 
iterations,  which  was  well  within  2  minutes.  Therefore  the 
repeat-until loop may be replaced with a  simple for loop that 
terminates  after  a  predetermined  maximum  number  of 
iterations.  

It  may  be  noted  that  in  (8),  the  shiftable  load 𝐗̃𝑠,  which  is 
determined using a probability threshold, is subtracted from the 
total load 𝐗 for the NMF steps. In a similar manner, the NMF 
algorithm  estimates 𝐗̃𝑓  and  the  difference 𝐗 − 𝐗̃𝑓  is  used  by 
the EM algorithm. Suppose the estimated total load, 𝐗̃ is given 
by, 

𝐗̃ = 𝐗̃𝑠 + 𝐗̃𝑓.
(13) 
The  difference  between  𝐗  and  𝐗̃  can  be  attributed  to  either 
noise  or  discrepancy  arising  from  the  proposed  hybrid 
disaggregation  algorithm.  The  disaggregated  loads 𝐗̃𝑠 and 𝐗̃𝑓 
are used to estimate the model parameters, which is described 
next. 

IV.  PARAMETER ESTIMATION 

A.  𝜖-Insensitive Constraints 

The |𝒦| × 1 vectors of parameters are, 𝐚, 𝐛, 𝐝, 𝐩, and 𝐪. Let 
𝜖 𝑓 be a tolerance bound on the difference between the modeled 
and the disaggregated fixed loads in (1) and (9). No penalty is 
𝑓|  is within 𝜖 𝑓, 
incurred when the absolute difference, |𝑥̂𝑘
𝑓. Hence, for each 
whereas anything in excess of it is an error, 𝜉𝑘
sample 𝑛 ∈ 𝒩 is, 

𝑓 − 𝑥̃𝑘

𝕀𝑓: |𝐩 + 𝛉(𝑛) ∘ 𝐪 − 𝐆𝐱̃𝑓(𝑛)| ≤ 𝟏|𝒦|𝜖 𝑓 + 𝛏𝑓.

(14) 
In  a  similar  manner,  with 𝜖 𝑠 being  the  maximum  allowable 
tolerance  of  the  difference  between  the  model  and  the 
disaggregated  shiftable  loads,  shown  in  (3)  and  (10)  for  each 
𝑛 ∈ 𝒩 is given by, 
𝕀𝑠: |𝐜∘−1 ∘ 𝐚 + 𝐛 + 𝛉(𝑛) ∘ 𝐝 − 𝐆𝐱̃ 𝑠(𝑛)| ≤ 𝟏|𝒦|𝜖 𝑠 + 𝛏𝑠. (15)  
In  (14)  and  (15), 𝐆 is  a |𝒦| × |𝒯| summing  matrix  that  sums 
time  samples  of  variables  index  𝑡  to  their  periodic  totals 
indexed 𝑘, as shown, 

𝐆 = [

T
T ⋯ 𝟎𝐿
𝟏𝐿
⋮
⋮
⋱
T
T ⋯ 𝟏𝐿
𝟎𝐿

]. 

 
 
 
 
The use of 𝜖-insensitive loss as in (14) and (15) is universally 
accepted  practice  in  machine  learning  as  it  reduces  the 
regression model’s VC-dimensionality [39], [40]. 

B.  𝐿2 Regularized Loss 

𝑓 and 𝜉𝑘

The weighted sum of all squared errors 𝜉𝑘

𝑠, is the loss 
function is selected as the loss function to be minimized. This 
loss, 𝕃 can be expressed as a squared 𝐿2 norm,  
𝕃 = ‖[𝑤𝑓𝐈
𝟎

𝛏𝑓
𝛏𝑠]‖
The quantities 𝑤𝑓 and 𝑤 𝑠 are the weights. 

𝟎
𝑤 𝑠𝐈

(16) 

] [

2

.

The above loss is regularized by with the function which is 
the sum of two squared 𝐿2 norms of the shiftable and fixed load 
parameters.  The  regularization  function  ℝ  is  given  by  the 
following expression, 

ℝ = ‖[

𝛾𝑝𝐈
𝟎

𝟎
𝛾𝑞𝐈

] [

2

𝐩
𝐪]‖

+ ‖[

𝛾𝑎𝐈
𝟎
𝟎

𝟎
𝛾𝑏𝐈
𝟎

𝟎
𝟎
𝛾𝑑𝐈

] [

𝐚
𝐛
𝐝

2

]‖

.

(17) 

In  (17), 𝛾𝑝 , 𝛾𝑞 , 𝛾𝑎 , 𝛾𝑏  and 𝛾𝑑  are  arbitrarily  small,  positive 
regularization coefficients. 

C.  Linear Inequality Constrained Quadratic Programming  

The  overall  problem  of  estimating  the  parameter  vectors, 
𝐚, 𝐛, 𝐝 ,  𝐩 ,  and  𝐪  of  the  utility  model  can  now  be  readily 
formulated 
linear  inequality 
terms  of 
constrained quadratic programming (LICQP), 

the  following 

in 

Minimize:  𝕃 + ℝ. 
Subject to:  𝕀𝑓, 𝕀𝑠. 

It can be observed that the regularized loss can be expressed 
as a quadratic function with an associated 7|𝒦| × 7|𝒦| matrix 
whose  diagonal  elements  are  the  two  weights  and  the  five 
coefficients; ergo the quadratic term in the objective function 
𝕃 + ℝ  is strictly positive definite. Thus, the objective function 
in the above LICQP is strictly convex. As both set of inequality 
constraints 𝕀𝑓, 𝕀𝑠 are linear, there exists a unique minimum. 

V.  RESULTS & DISCUSSION 

A.  Data 

The  proposed  approach  was  tested  on  actual  energy  usage 
data  of  two  residential  customers  that  was  obtained  from  the 
Pecan Street Inc., Dataport database [41] sampled at one minute 
intervals, and for 61 days during March and April, 2018. The 
total  energy  data  was  arranged  as  a 1440 × 61 data  matrix 𝐗 
whose  columns  were  the  1440-dimensional  sample  vectors, 
𝐱(𝑛), 𝑛 ∈ 𝒩.  

The  database  also  included  individual  appliance  usage 
measurements at the circuit level. These appliances are, (i) air 
conditioner, (ii) electric car, (iii) washer/dryer, (iv) dishwasher, 
(v)  microwave,  (vi)  refrigerator,  (vii)  furnace,  (viii)  bedroom 
appliances, (ix) light plugs and (x) kitchen appliances.  The first 
four appliances are classified as shiftable loads for our purpose, 
while the remaining ones are fixed loads. It should be noted that 
user-1 did not own bedroom appliances or furnace, while user-
2 did not own an electric car. 

The  hourly  temperature  data  for  the  same  61  days 𝑛 ∈ 𝒩 
was  also  obtained  from  [41].  Therefore,  the  load  data  and 

6 

temperatures in the data used in this study are from the city of 
Austin in Texas. Accordingly, the hourly time of use rates were 
obtained  from  the  Austin  Energy  website  [42].  This  site 
provides  electricity  rates  in  the  Austin  area  for  a  time  of  use 
pilot project. The user data used in this study were part of DER 
that  received  pricing  information  from  the  utility  and  were 
expected to defer their loads during peak or high energy price 
hours. All algorithms were implemented in MATLAB. 

B.  Disaggregation 

The plots in Figs. 4. and 5. show comparisons between the 
real data (left column, red) and the outcome of disaggregation 
for user-1 (right column, blue) for the first two days, (𝑛 = 1, 2). 
The  remarkable  similarities  in  the  shiftable  loads 𝐗𝑠  and 𝐗̃𝑠 
(top row) is evident. The corresponding fixed loads 𝐗𝑓 and 𝐗̃𝑓 
(middle row) are quite similar but there are minor differences. 
Among  the  most  conspicuous  ones  in  Fig.  4  occur  at  time 
instances 𝑡 ≈ 250, 660, 718,  and 𝑡 ≈ 1080.  At 𝑡 ≈ 250, 660, 
a small fraction of the fixed load 𝐗𝑓 is erroneously incorporated 
by the hybrid algorithm into the shiftable load 𝐗̃𝑠, whereas at 
𝑡 ≈ 718, 1080 some of 𝐗𝑠 is transferred to 𝐗̃𝑓. However these 
discrepancies  are  quite  small  in  spite  of  their  exaggerated 
appearances in the plots are due to the smaller range of the fixed 
loads in comparison to the shiftable loads. 

In  Fig.  5,  between  , 𝑡 ≈ 660 − 800 ,  some  differences 
between  the real  and  proposed  approach’s  reconstructed  shift 
and  shiftable  loads  can  be  observed.  In  particular,  the  high 
frequency  fluctuation  in 𝐗𝑓  does  not  get  incorporated  in 𝐗̃𝑓 . 
However, this is at only at the relatively low power level of 0.5 
kW. In the interval 𝑡 ≈ 820 − 900, a few upward spikes in 𝐗̃𝑓 
can be seen. This occurs again at the instances 𝑡 ≈ 1210, 1380.  
In  both  Fig.  4  and  Fig.  5,  the  total  loads 𝐗 and 𝐗̃   (bottom 
rows) are very similar, indicating the effectiveness of the hybrid 
approach  with  the  NMF  and  GMM  algorithms  working  in 
tandem in disaggregating the total load. 

Figs.  6  and  7  show  the  consumption  patterns  of  user-2  on 
days  𝑛 = 1, 2 .  The  positions  of  the  real  loads  (left,  red), 
disaggregated  loads  (right,  blue),  shiftable  loads  (top),  fixed 
loads (middle) and total (bottom) are exactly as in Figs. 4 and 5 
which were associated with user-1. 

One  noticeable  difference  in  user-2  consumption  profile  is 
that the power usages of the fixed loads and shiftable loads are 
at similar levels. Consequently, sudden bursts in the fixed loads 
were consistently misinterpreted by the hybrid disaggregation 
algorithm as shiftable loads, with the GMM assigning a prior 
2  large  enough  to 
mean  𝜇𝑗  (for  some  𝑗 ),  with  a  variance  𝜎𝑗
subsume all such fixed load spikes. These spikes appear at time 
instances  𝑡 ≈ 491,600,776  on  day  𝑛 = 1  and  at  𝑡 ≈
770, 481, 485, 1210, 1360  on  day  𝑛 = 2 .  Although  this 
phenomenon has been observed earlier in the case of user-1, it 
is  visually  more  pronounced  now  due  to  the  similar  power 
levels of user-2’s shiftable and fixed loads. 

Simple  post-processing  heuristic  filtering  would  be  readily 
able to rectify these discrepancies in the hybrid disaggregation 
approach. In view of algorithmic simplicity, no modifications 
were  made  to  the  disaggregation  approach  to  address  this 
situation. Moreover, as these fixed load spikes lasted for only 
1-2 minutes each, the effect on model parameter estimation is 
imperceptible. 

 
7 

Fig.  4.  Energy  consumption  of  user-1  on day 𝑛 = 1.   The  real  loads  (red,  left)  and  disaggregated  loads  (blue,  right)  are 
shown. The shiftable (top) and fixed (middle) components of the total load (bottom) are shown. 

Fig.  5.  Energy  consumption  of  user-1  on day 𝑛 = 2.   The  real  loads  (red,  left)  and  disaggregated  loads  (blue,  right)  are 
shown. The shiftable (top) and fixed (middle) components of the total load (bottom) are shown. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
8 

Fig.  6.  Energy  consumption  of  user-1  on day 𝑛 = 1.   The  real  loads  (red,  left)  and  disaggregated  loads  (blue,  right)  are 
shown. The shiftable (top) and fixed (middle) components of the total load (bottom) are shown. 

Fig.  7.  Energy  consumption  of  user-1  on day 𝑛 = 1.   The  real  loads  (red,  left)  and  disaggregated  loads  (blue,  right)  are 
shown. The shiftable (top) and fixed (middle) components of the total load (bottom) are shown. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
C.  Parameter Estimation 

The parameter vectors, 𝐚, 𝐛, 𝐝, 𝐩, and 𝐪 of the utility model 
are  the  optimal  solutions  of  the  LICQP  in  IV.C,  that  were 
obtained  using  the  fmincon()  subroutine  that  is  available  in 
MATLAB’s  optimization  toolbox.  As  it  was  noticed  that 
temperature had little bearing on the fixed load usage of either 
user, the corresponding parameter q was set to zero. Although 
the  purpose  of  this  research  is  to  derive  a  consumer  model 
entirely through smart metering data, sans any prior information 
about  how  and  when  individual  appliances  were  operated, 
𝐚, 𝐛, 𝐝, 𝐩, and 𝐪 were computed using real loads 𝐗𝑠 and 𝐗𝑓 as 
well as their estimates 𝐗̃𝑠 and 𝐗̃𝑓 obtained as described in V.B 
using the hybrid approach. The median values of all parameters 
are supplied in Table I, separately for each user. It can be seen 
that the medians obtained from the disaggregated estimates (4th 
column)  are  very  close  to  those  obtained  from  real  data  (3rd 
column). Furthermore,  the correlation coefficients between the 
median  values  are  also  shown  in  Table  I  (5th  column).  The 
correlation coefficients of the shiftable load parameters 𝐚, 𝐛 and 
𝐝 are in the range 0.978 – 0.995, which is remarkably close to 
1,  indicating  the  fidelity  of  the  proposed  disaggregation 
approach. The corresponding values of the fixed load parameter 
p (0.891 and 0.892) are also very close to 1. 

user 

User-1 

User-2 

TABLE I. 

median 

real  
2.816 
0.222 
0.219 
27.191 
0 
2.819 
0.228 
0.225 
27.192 
0 

disagg. 
2.711 
0.242 
0.236 
20.565 
0 
2.709 
0.269 
0.263 
21.108 
0 

para- 
meter 
𝐚 
𝐛 
𝐝 
p 
q 
𝐚 
𝐛 
𝐝 
p 
q 

corr. 
coeff. 
0.994 
0.983 
0.983 
0.891 
- 
0.995 
0.979 
0.978 
0.892 
- 

9 

Fig.  8.  User-1  utility  and  cost.  The  utility  functions  (top) 
and  cost  (bottom)  functions  are  shown,  using  real  loads 
(red, solid lines) and disaggregated loads (blue dotted lines). 

Fig.  9.  User-2  utility  and  cost.  The  utility  functions  (top) 
and  cost  (bottom)  functions  are  shown,  using  real  loads 
(red, solid lines) and disaggregated loads (blue dotted lines). 

The  utility  curves  associated with  the  shiftable  loads  were 
obtained from the parameters 𝐚, 𝐛 and 𝐝 are shown in Fig. 8 for 
user-1 and Fig. 9 for user-2. In both figures, the users’ perceived 
utilities (top) as well as their derivatives (bottom) are provided. 
These plots were obtained using parameters obtained directly 
from  real  loads 𝐗𝑠  and 𝐗𝑓  (red,  solid  lines)  as  well  as  their 
estimates 𝐗̃𝑠 and 𝐗̃𝑓 (blue, dotted lines). It should be noted that 
the difference between the real and utilities is only an artifact of 
integration. The curves corresponding to the estimated utilities 
(blue, dotted) can be shifted upwards to more closely with the 
real curves (red, solid).  

Finally,  Fig.  10  shows  the  hourly  consumption  profiles  of 
user-1 (top) and user-2 (bottom) for a typical day in the 61 day 
period used in this research. They were obtained from (1) and 
(2) with the parameters obtained from the LICQP optimization 
procedure and using the disaggregated loads estimated by the 
disaggregation approach. 

VI.  CONCLUSION 

    This  paper  proposes  a  generic  class  of  data-driven 
semiparametric  models  derived  from  consumption  data  of 
residential consumers. A two-stage machine learning approach 
is developed, in which disaggregation of the load into fixed and 
shiftable  components  is  accomplished  by  means  of  a  hybrid 
algorithm consisting of non-negative NMF and GMM, with the 
latter trained by an expectation-maximization (EM) algorithm. 
In the second stage, the model parameters are estimated using 
an  L2-norm,  ϵ-insensitive  regression  approach.  Actual  energy 
usage data of two residential customers show the validity of the 
proposed method.  

The  proposed  method 

that  disaggregates  electricity 
consumption into the shiftable and fixed portions, can enhance 
the  demand  response  program  of  utilities  as  well  as  help 
residential  customers  make  well  informed  decisions  and 
increase  the  energy  efficiency  gains  while  participating  in  a 

 
 
 
 
 
 
 
demand response program. It also allows for automated energy 
transactions  between  customers  and  the  utilities  based  on  a 
the  actual 
semi-parametric  utility  model 
consumption pattern of the customers. 

learned  from 

Fig. 10. Typical 24-hour load profiles of user-1 (top) and 
user-2  (bottom)  obtained  from  the  semi-parametric  utility 
model  with  disaggregated  load  estimates.  The  shaded 
regions depict the range of values from the real data. 

VII.  ACKNOWLEDGMENT 

This work was supported by the National Science Foundation-
CPS under Grant CNS-1544705.  

VIII.  REFERENCES 

[1] 

[2] 

[3] 

[4] 

[5] 

[6] 

[7] 

B.  Humala,  S.  N.  A.  U.  Nambi,  and  R.  V.  Prasad, 
“UniversalNILM: A Semi-supervised Energy Disaggregation 
Framework using General Appliance Models,” Proceedings 
of  the  Ninth  International  Conference  on  Future  Energy 
System,  2018. 
F. C. C. Garcia, C. M. C. Creayla, and E. Q. B. Macabebe, 
“Development  of  an  Intelligent  System  for  Smart  Home 
Energy  Disaggregation  Using 
Stacked  Denoising 
Autoencoders,”  Procedia  Computer  Science,  vol.  105,  no. 
December 2016, pp. 248–255, 2017. 
I.  H.  Çavdar  and  V.  Faryad,  “New  Design  of  a  Supervised 
Energy  Disaggregation  Model  Based  on  the  Deep  Neural 
Network for a Smart Grid,” Energies, vol. 12, no. 7, p. 1217, 
2019. 
S.  Singh  and  A.  Majumdar,  “Deep  sparse  coding  for  non-
intrusive  load  monitoring,”  IEEE  Transactions  on  Smart 
Grid, vol. 9, no. 5, pp. 4669–4678, 2018. 
M.  DrIncecco,  S.  Squartini,  and  M.  Zhong,  “Transfer 
IEEE 
Learning 
Transactions on Smart Grid, vol. 11, no. 2, pp. 1419–1429, 
2020. 
T.  Y.  Ji  et  al.,  “Non-Intrusive  Load  Monitoring  Using 
Additive Factorial Approximate Maximum a Posteriori Based 
on Iterative Fuzzy C-Means,” vol. 3053, no. 2018, pp. 1–11, 
2019. 
K. He, D. Jakovetic, B. Zhao, V. Stankovic, L. Stankovic, and 
S.  Cheng,  “A  Generic  Optimisation-based  Approach  for 
IEEE 
Improving  Non-intrusive  Load  Monitoring,” 

for  Non-Intrusive  Load  Monitoring,” 

10 

[8] 

[9] 

[10] 

Transactions on Smart Grid, vol. 10, no. 6, pp. 1–1, 2019. 
S.  W.  Park,  L.  B.  Baker,  and  P.  D.  Franzon,  “Appliance 
Identification  Algorithm  for  a  Non-Intrusive  Home  Energy 
Monitor  Using  Cogent  Confabulation,”  IEEE  Transactions 
on Smart Grid, vol. 10, no. 1, pp. 714–721, 2019. 
K.  He,  L.  Stankovic,  J.  Liao,  and  V.  Stankovic,  “Non-
Intrusive  Load  Disaggregation  Using  Graph  Signal 
Processing,” IEEE Transactions on Smart Grid, vol. 9, no. 3, 
pp. 1739–1747, 2018. 
G. C. Koutitas and L. Tassiulas, “Low Cost Disaggregation 
of Smart Meter Sensor Data,” IEEE Sensors Journal, vol. 16, 
no. 6, pp. 1665–1673, 2016. 

[11]  W. Kong, Z. Y. Dong, J. Ma, D. J. Hill, J. Zhao, and F. Luo, 
“An  Extensible  Approach 
for  Non-Intrusive  Load 
Disaggregation with Smart Meter Data,” IEEE Transactions 
on Smart Grid, vol. 9, no. 4, pp. 3362–3372, 2018. 
[12]  M. A. Mengistu, A. A. Girmay, C. Camarda, A. Acquaviva, 
and  E.  Patti,  “A  Cloud-Based  On-Line  Disaggregation 
Algorithm for Home Appliance Loads,”  IEEE Transactions 
on Smart Grid, vol. 10, no. 3, pp. 3430–3439, 2019. 
Z. Guo, Z. J. Wang, and A. Kashani, “Home appliance load 
modeling  from  aggregated  smart  meter  data,”  IEEE 
Transactions on Power Systems, vol. 30, no. 1, pp. 254–262, 
2015. 

[13] 

[16] 

[15] 

[14]  W. Kong, Z. Y. Dong, D. J. Hill, J. Ma, J. H. Zhao, and F. J. 
Luo, “A Hierarchical Hidden Markov Model Framework for 
Home  Appliance  Modeling,”  IEEE  Transactions  on  Smart 
Grid, vol. 9, no. 4, pp. 3079–3090, 2018. 
P.  A.  Chou  and  R.  I.  Chang,  “Unsupervised  adaptive  non-
intrusive load monitoring system,” Proceedings - 2013 IEEE 
International Conference on Systems, Man, and Cybernetics, 
SMC 2013, pp. 3180–3185, 2013. 
A.  Rahimpour,  H.  Qi,  D.  Fugate,  and  T.  Kuruganti,  “Non-
Intrusive Energy Disaggregation Using Non-Negative Matrix 
Factorization with Sum-to-k Constraint,” IEEE Transactions 
on Power Systems, vol. 32, no. 6, pp. 4430–4441, 2017. 
A.  Miyasawa,  Y.  Fujimoto,  and  Y.  Hayashi,  “Energy 
disaggregation based on smart metering data via semi-binary 
nonnegative matrix factorization,” Energy and Buildings, vol. 
183, pp. 547–558, 2019. 
A. Miyasawa, M. Matsumoto, Y. Fujimoto, and Y. Hayashi, 
“Energy  disaggregation  based  on  semi-supervised  matrix 
factorization  using  feedback  information  from  consumers,” 
2017  IEEE  PES  Innovative  Smart  Grid  Technologies 
Conference  Europe,  ISGT-Europe  2017  - Proceedings,  vol. 
2018-Janua, pp. 1–6, 2018. 

[17] 

[18] 

[21] 

[20] 

[19]  M. Figueiredo, B. Ribeiro, and A. de Almeida, “Analysis of 
trends  in  seasonal  electrical  energy  consumption  via  non-
negative tensor factorization,” Neurocomputing, vol. 170, pp. 
318–327, 2015. 
L.  A.  Barroso,  A.  Street,  S.  Granville,  and  M.  V.  Pereira, 
“Offering  strategies  and  simulation  of  multi-item  iterative 
auctions of energy contracts,” IEEE Transactions on Power 
Systems, vol. 26, no. 4, pp. 1917–1928, 2011. 
N. Li, L. Chen, and S. H. Low, “Optimal demand response 
based  on  utility  maximization  in  power  networks,”  IEEE 
Power and Energy Society General Meeting, 2011. 
[22]  M.  Li,  H.  Feng,  F.  Chen,  and  J.  Kou,  “Optimal  versioning 
strategy for information products with behavior-based utility 
function  of  heterogeneous  customers,”  Computers  & 
Operations Research, vol. 40, no. 10, pp. 2374–2386, 2013. 
J. H. Choi, H. Ahn, and I. Han, “Utility-based double auction 
mechanism  using  genetic  algorithms,”  Expert  Systems  with 
Applications, vol. 34, no. 1, pp. 150–158, 2008. 
J. Cox and R. Oaxaca, “Is bidding behavior consistent with 
bidding  theory  for  private  value  auctions?,”  Research  in 
experimental economics, vol. 6, pp. 131–148, 1996. 

[23] 

[24] 

 
 
 
 
[26] 

[25] 

J. K. Kale, “Growth maximization and downside protection 
using  power-log  utility  functions  for  optimizing  portfolios 
with  derivatives,”  5th 
International  Conference  on 
Information  Technology  and  Applications,  ICITA  2008,  no. 
Icita, pp. 282–286, 2008. 
A. Abdel-Hadi and C. Clancy, “A utility proportional fairness 
approach  for  resource  allocation 
in  4G-LTE,”  2014 
International  Conference  on  Computing,  Networking  and 
Communications, ICNC 2014, pp. 1034–1040, 2014. 
[27]  M.  N.  Faqiry  and  S.  Das,  “Distributed  bilevel  energy 
allocation mechanism with grid constraints and hidden user 
information,” IEEE Transactions on Smart Grid, vol. 10, no. 
1869–1879, 2019. 

11 

[29] 

[32] 

[30] 

[34] 

[31] 

[33] 

to  Energy  Transaction 

[28]  M. N. Faqiry and S. Das, “Double Auction With Hidden User 
Information:  Application 
in 
Microgrid,”  IEEE  Transactions  on  Systems,  Man,  and 
Cybernetics: Systems, pp. 1–14, 2018. 
A.  K.  Zarabie,  S.  Das,  and  M.  N.  Faqiry,  “Fairness-
Regularized  DLMP-Based  Bilevel  Transactive  Energy 
Mechanism in Distribution Systems,” IEEE Transactions on 
Smart Grid, vol. 10, no. 6, pp. 6029–6040, 2019. 
S.  Bahrami  and  A.  Sheikhi,  “From  Demand  Response  in 
Smart  Grid  Toward  Integrated  Demand  Response  in  Smart 
Energy Hub,” IEEE Transactions on Smart Grid, vol. 7, no. 
2, pp. 650–658, 2016. 
K.  Jhala,  B.  Natarajan,  and  A.  Pahwa,  “Prospect  Theory-
Based Active Consumer Behavior under Variable Electricity 
Pricing,”  IEEE  Transactions  on Smart  Grid,  vol.  10, no. 3, 
pp. 2809–2819, 2019. 
A.  S.  W.  A.  Barnett,  “Quantifying  Consumer  Preferences 
Chapter 1: Measuring Consumer Preferences and Estimating 
Demand  Systems,”  in  Contributions  to  Economic  Analysis, 
2009, pp. 1–35. 
N.  Vlassis  and  A.  Likas,  “A  Greedy  EM  Algorithm  for 
Gaussian Mixture Learning,” Neural Processing Letters, vol. 
15, no. 1, pp. 77–87, 2002. 
A. Edelman, T. A. Arias, and S. T. Smith, “The Geometry of 
Algorithms  with  Orthogonality  Constraints,”  SIAM  Journal 
on Matrix Analysis and Applications, vol. 20, no. 2, pp. 303–
353, 1998. 
D. D. Lee and H. S. Seung, “Learning the parts of objects by 
non-negative  matrix  factorization,”  Nature,  vol.  401,  no. 
6755, pp. 788–791, 1999. 
D. D. Lee, M. Hill, and H. S. Seung, “Algorithms for Non-
Negative  Matrix  Factorization,”  in  Proceeding  NIPS’00 
Proceedings of the 13th International Conference on Neural 
Information Processing Systems, 2000, no. 1, pp. 535–541. 
N.  Gillis,  “The  Why  and  How  of  Nonnegative  Matrix 
Factorization,” ArXiv, pp. 1–25, 2014. 
S.  Choi,  “Algorithms  for  orthogonal  nonnegative  matrix 
factorization,”  Proceedings  of 
the  International  Joint 
Conference on Neural Networks, pp. 1828–1832, 2008. 
D.  Jap,  M.  Stöttinger,  and  S.  Bhasin,  “Support  vector 
regression,”  Neural  Information  Processing  –  Letters  and 
Reviews, vol. 11, no. 10, pp. 1–8, 2015. 
Y.  Tan  and  J.  Wang,  “A  Support  Vector  Machine  with  a 
and  Minimal  Vapnik-Chervonenkis 
Hybrid  Kernel 
Dimension,”  IEEE  Transactions  on  Knowledge  and  Data 
Engineering, vol. 16, no. 4, pp. 385–395, 2004. 
“Electric  Consumption  Data.”  https://www.pecanstreet.org/ 
(accessed Jan. 15, 2019). 
“Asuting 
(accessed Mar. 09, 2019). 

https://austineenergy.com/ae/rates/ 

Energy.” 

[41] 

[42] 

[37] 

[35] 

[38] 

[36] 

[40] 

[39] 

 
 
 
 
