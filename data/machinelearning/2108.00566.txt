Efﬁcient On-Chip Multicast Routing based on
Dynamic Partition Merging

Binayak Tiwari, Mei Yang, Yingtao Jiang
Department of Electrical and Computer Engineering
University of Nevada Las Vegas
Las Vegas, USA
Email: btiwari@unlv.nevada.edu, {mei.yang, yingtao.jiang}@unlv.edu

Xiaohang Wang
School of Software Engineering
South China University of Technology
Guangzhou, China
Email: xiaohangwang@scut.edu.cn

1
2
0
2

g
u
A
1

]
I

N
.
s
c
[

1
v
6
6
5
0
0
.
8
0
1
2
:
v
i
X
r
a

Abstract—Networks-on-chips (NoCs) have become the main-
stream communication infrastructure for chip multiprocessors
(CMPs) and many-core systems. The commonly used parallel
applications and emerging machine learning-based applications
involve a signiﬁcant amount of collective communication patterns.
In CMP applications, multicast is widely used in multithreaded
programs and protocols for barrier/clock synchronization and
cache coherence. Multicast routing plays an important role on the
system performance of a CMP. Existing partition-based multicast
routing algorithms all use static destination set partition strategy
which lacks the global view of path optimization. In this paper,
we propose an efﬁcient Dynamic Partition Merging (DPM)-
based multicast routing algorithm. The proposed algorithm
divides the multicast destination set into partitions dynamically
by comparing the routing cost of different partition merging
options and selecting the merged partitions with lower cost. The
simulation results of synthetic trafﬁc and PARSEC benchmark
applications conﬁrm that the proposed algorithm outperforms the
existing path-based routing algorithms. The proposed algorithm
is able to improve up to 23% in average packet latency and
14% in power consumption against the existing multipath routing
algorithm when tested in PARSEC benchmark workloads.

Index Terms—Networks-on-Chip (NoCs), Multicast, Routing

Algorithm, Dynamic Partition Merging

I. INTRODUCTION

Rapid advancement in semiconductor technology has made
it possible to integrate tens, hundreds and even thousands of
processing elements on a single chip multi-processor (CMP).
Networks-on-Chips (NoCs) [1] have become the mainstream
intra-chip communication infrastructure for CMPs and many-
core systems due to their scalability and power efﬁciency.
The communication in NoCs can be categorized into unicast
(one-to-one) and multicast (one-to-many) communication. A
signiﬁcant amount of multicast trafﬁc is demonstrated in paral-
lel applications involving multithreaded programs, replication,
barrier/clock synchronization [2], and cache coherence [3]
protocols. Simulations of a set of CMP benchmark applications
with MESI cache protocols show that the multicast trafﬁc per-
centage ranges from 5%−15% [4]. The study in [3] shows that
depending on the coherence protocol used, the multicast trafﬁc
percentage can vary with up to 16 destinations. Emerging het-
erogeneous CPU-GPU many-core systems speciﬁcally target
to machine learning applications which contain large amount
of communication (around 80%) to the memory controller

[5]. Convolution Neural Network (CNN) and Deep Neural
Network (DNN) [5] [6] [7] are commonly used deep learning
architectures. CNNs contain a stack of convolution and pooling
layers followed by a fully-connected layer at the end. The
convolution and pooling layers use distributed operations for
moving data between the cores, while the fully connected
layer is a communication intensive process where the trafﬁc
is inherently multicast in nature. All these applications require
attention for the multicast trafﬁc.

Although multicast communication can be performed by
splitting a multicast packet into multiple unicast packets, it
is not an efﬁcient way of doing it due to poor resource
utilization. Authors in [3] [4] show that a small percentage
of multicast trafﬁc can signiﬁcantly degrade the network’s
performance. Thus, an efﬁcient multicast algorithm is needed
to overcome this degradation. Multicast routing algorithms
are broadly classiﬁed into tree-based and path-based. In tree-
based [8] algorithms, a spanning tree is constructed from the
source node to cover all destination nodes. In a tree, messages
are replicated at the intermediate node and forwarded along
multiple branches. Although the tree-based algorithm can
deliver messages to each destination via the shortest path, it is
susceptible to deadlocks because of high blocking probability
[9]. The multiple unicast routing can be considered as a
simple tree-based algorithm which has an advantage when the
multicast destination is sparsely located.

In path-based multicast algorithms, intermediate branching
is prohibited. Multiple paths at the source node are identiﬁed
and the packet is delivered to the destination nodes along the
paths. The issue with deadlock is not present in path-based
algorithms, however, the path to each destination tends to be
long resulting in longer packet latency. In the dual-path [10]
algorithm, the destination set is divided into two partitions
DH and DL covering all the destination nodes with higher
and lower label number than the source node, respectively.
Then the multicast packet is delivered along DH and DL
paths. In the multi-path (MP) [11] algorithm, DH and DL are
further divided into two subsets, one enclosing destinations
with x coordinate less than that of the source node (DH1
and DL1) and the other having destinations with x coordinate
greater or equal than that of the source node (DH2 and DL2).
Each multicast packet is distributed on four paths to four

 
 
 
 
 
 
destination groups. By making full utilization of four outgoing
channels at the source node, the multi-path algorithm achieves
better performance than the dual-path algorithm. However, the
existing multi-path algorithms all use static partitions which
lack the global view of path optimization.

In this paper, we ﬁrst formulate the multicast destination set
partition problem and propose an efﬁcient dynamic partition
merging (DPM) algorithm to solve it. The proposed algorithm
divides the multicast destination set into partitions dynamically
by comparing the routing cost of different partition merging
options and selecting the merged partitions with lower cost.
The multicast routing in each partition takes advantage of
both multiple unicast and dual-path algorithms. Deadlock is
avoided by separating the physical network in high and low-
channel networks with corresponding turn restrictions. Simula-
tion results of the proposed algorithm by both synthetic trafﬁc
and PARSEC benchmark workloads show that the DPM-based
multicast routing algorithm achieves signiﬁcant improvement
over the existing multi-path algorithms in both average packet
latency and power consumption.

The rest of the paper is organized as follows. Section II
provides brief review of existing on-chip multicast routing
algorithms. In Section III, the problem of multicast destination
set partition is formulated and the proposed algorithm is de-
scribed in detail. Section IV provides the experimental settings,
simulation results, and discussion of the results. Section V
concludes the paper.

II. RELATED WORK

In the literature, several tree-based and path-based multicast
routing algorithms have been proposed for NoCs. In the
Virtual Circuit Tree Multicast (VCTM) [3] scheme, a unique
VCT ID is created for each source destination set and a
virtual circuit is formed before the multicast trafﬁc begins
to ﬂow. The overhead of virtual circuit setup time and tree
maintenance information is not trivial, especially when the
number of multicast destinations is high. For Recursive Parti-
tioning Multicast (RPM) [12], the network is ﬁrst partitioned
according to the source node location and selectively a tree is
formed by replication. After the replica reaches the next hop
in each partition, the same process repeats recursively inside
the partition till the message is delivered to all destinations.
In [13], a deadlock free tree-based multicast routing based on
a hold-release tagging method is proposed where ﬂits can be
interleaved and pheromone tracking method is used to reduce
the communication energy.

Two multicast routing algorithms are proposed for 3D
NoCs [14], where MXYZ is a tree-based dimension order
routing algorithm where packets are replicated to X, Y or Z
direction based on the destinations with common coordinates
and AL+XYZ ﬁnds an alternate output channel if the selected
output channel
is not available. In [15], an adaptive and
deadlock free tree-based multicast routing scheme is proposed
by interleaving ﬂits from different sources in a message queue.
The K-Means based Multicast Routing (KMCR) scheme [16]
employs K-means clustering method to partition the network

Fig. 1: View with (a) Static Partition (b) Alternate Partition

balanced in terms of destinations. Then the centroid of each
partition is found, a tree from the source node to each centroid
is created and ﬁnally a subtree is formed from the centroid to
each destination. All tree-based routing algorithms require the
support of ﬂit replication in the router microarchitecture.

In dual-path (DP) [10] and multipath (MP) [11] routing
algorithms,
the destination nodes are partitioned into two
groups and four groups respectively according to their relative
position to the source node. In the column-path [17] based
method, the message is traversed on X dimension to the ﬁrst
node which x coordinate is matched with the destination along
the East or West direction and then delivered along the North
or South direction to match the y coordinate of the destination.
Authors in [18] have proposed a low distance multipath
algorithm wherein the destination list is sorted according to
hop count instead of the label. The algorithm is shown to be a
better option than both multipath and column-path algorithms.
In [19], a path-based adaptive routing scheme is proposed to
exploit potential alternative paths by prohibiting the turns,
which achieves better performance with a high degree of
adaptivity than [20].

To reduce the latency in multicast packets, the path-based
routing algorithm proposed in [21] selects the available output
channel according to the size of buffer space in downstream
routers based on the destination partitions. Authors in [22]
proposed a balanced partitioning method in a 3D NoC which
is an extended version of dualpath, multipath and column-path
method. Authors in [23] also proposes a hierarchical multicast
routing algorithm combining both multiple unicast and multi-
path routing which shows better resilience to hardware trojan
attacks to multicast trafﬁc. All the aforementioned path-based
multicast routing algorithms use a static destination set parti-
tion strategy which lacks the global view of path optimization.
As a matter of fact, the partition strategy should be ﬂexible
enough to cope with various distribution of destination nodes.

III. DYNAMIC PARTITION MERGING-BASED MULTICAST
ROUTING

The problem of static destination set partition is illustrated
in Fig. 1. Based on the source node,
the destination set
is divided into four partitions using the partition method
proposed in [11]. Thus, four packets will be sent along the four
paths as shown in Fig. 1a towards four destination groups. Fig.
1b shows an alternate partition strategy which yields less total

0,3151,3142,3130,281,292,2100,171,162,153,3123,2113,140,001,012,023,03source0,3151,3142,3130,281,290,171,163,3120,001,012,023,032,2103,2112,153,14destination(a)(b)packetdirectiongenerality, we describe the DPM algorithm using a non-edge
node. For each node L = (lx, ly), its basic partition is obtained
according to the following rule:

• P0 = {L : lx > sx & ly > sy}
• P1 = {L : lx = sx & ly > sy}
• P2 = {L : lx < sx & ly > sy}
• P3 = {L : lx < sx & ly = sy}
• P4 = {L : lx < sx & ly < sy}
• P5 = {L : lx = sx & ly < sy}
• P6 = {L : lx > sx & ly < sy}
• P7 = {L : lx > sx & ly = sy}
A basic destination partition set P = {P0, P1, .., P7}
is formed where Pi ⊆ D and all
the elements of Pi
are mutually exclusive. An extended partition set is deﬁned
as P = {P0P1, P1P2, .., P7P0, P0P1P2, P1P2P3, .., P7P0P1}
where PiPj stands for Pi ∪ Pj and PiPjPk stands for Pi ∪
Pj ∪Pk for i, j, k = 0, 1, ...7. P is obtained by merging up to 3
consecutive partitions from the partition set P . The limit is set
to 3 in order to prevent the ﬁnal partition from being converged
to two partitions like in the dual-path algorithm [10] which is
already proven to be worse than the multipath algorithm [10].
Additionally, this limit will also help in saving unnecessary
computation effort. The collection set V = P ∪ P which
contains all possible partitions by merging up to 3 consecutive
partitions. The cost Ci of multicast routing for each destination
partition in set V is obtained as deﬁned in Deﬁnition 2 which
is determined after ﬁnding the representative node (Deﬁnition
1) in the partition. The saving A deﬁned in Deﬁnition 3 is
used to measure the merging beneﬁt for each element in P.

Deﬁnition 1. The representative node R = (rx, ry) of an
element Vi ∈ V is the nearest destination node d = (dx, dy)
from a source node S = (sx, sy) for a given multicast packet
{costd : ∀ d (cid:15) Vi} , where costd =
obtained by: R = arg min

d
|dx − sx| + |dy − sy|.

Deﬁnition 2. The cost Ci
for each destination partition
Vi ∈ V can be obtained by selecting the least cost between
multiple unicast routing Ct and dual-path routing Cp as
Ci = min(Ct, Cp), where
Ct = (cid:80)|Vi|−1
k=0
of destinations in Vi,
Cp = CostDL + CostDH i.e.,the hop count of dual-path [10]
from node R.

|dkx − rx| + |dky − ry|, |Vi| gives the number

Deﬁnition 3. The saving A for merging t number of par-
titions, i.e., for partitions in P ,is obtained by the following
rule: A = max(0 , (cid:80)t−1
i=0 Ci - C0,1,..,t−1), where C0,1,..,t−1 is
the cost of the merged partition.

The proposed DPM algorithm is shown in Algorithm 1.
For each node at (x, y) in a nxn mesh,
is labeled as
L(x, y) = yn + x if y is even, and L(x, y) = yn + n − x − 1 if
y is odd. The labels will be used for calculating the dual-path
routing paths. The network is ﬁrst partitioned in P according
to the partition rule, then the extended partition set P and
the search set V are obtained. For each partition in V , a

it

Fig. 2: Partition with source node S

hop count from the source node to all destination nodes than
the static four-partition strategy. This example motivates us to
study the problem of an optimal partition of the destination
set such that the total hop count of the multicast routing
paths is minimized. In the following, we ﬁrst formulate the
problem and propose the Dynamic Partition Merging (DPM)-
based multicast routing algorithm.

A. Problem Formulation

The destination set partition problem can be modeled as
follows. Given a source node S and a universal set of the
N multicast destination nodes D = {d0, d1, ..., dN −1}. A
collection of subsets of D, denoted as V = {V0, V1, ..., Vk−1}
where V0, V1, ..., Vk−1 ⊆ D can be formed with the cost
C0, C1, ..., Ck−1 correspondingly, where Ci
is the cost of
multicast routing from source S to Vi. The objective of
the problem is to ﬁnd the set I ⊆ V with the minimum
total cost such that all destination nodes in D are covered, i.e.,

subject to:

minimize

(cid:88)

Vi∈I

Ci

(cid:91)

Vi∈I

Vi = D

∀Vi, Vj ∈ I and i (cid:54)= j, Vi ∩ Vj = ∅

(1)

(2)

Equation (1) ensures that all the multicast destination nodes
are reached. Equation (2) ensures that each destination is
reached only once. The destination set partition problem is
actually an exact weighted set cover problem [24] which is
proven to be NP-complete.

B. Proposed Solution

Considering the hardware implementation cost, we propose
a heuristic algorithm to solve the destination set partition
problem. In light of the ﬁne-grained partition used in [12],
the destination set
is partitioned into at most eight parti-
tions according to the relative position to the source node
S = (sx, sy), as shown in Fig. 2a. For each non-corner edge
node Fig. 2b, there are ﬁve partitions. While for each corner
node Fig. 2c, three partitions are possible. Without loss of

0,3151,3142,3130,281,292,2100,171,162,153,3123,2113,140,001,012,023,03p0p1p2p4p5p6p3p70,3151,3142,3130,281,292,2100,171,162,153,3123,2113,140,001,012,023,03p4p5p3source(a)(c)0,3151,3142,3130,281,292,2100,171,162,153,3123,2113,140,001,012,023,03p7p3p4p5p6(b)Algorithm 1: Dynamic Partition Algorithm (DPM)
Input

: Multicast destination set D = d0, d1, .., dN −1

and a source node S = (sx, sy)

Output: Final partition set I
1 P ← {P0, P1, .., P7} based on S
2 P ←

{P0P1, P1P2, .., P7P0, P0P1P2, P1P2P3, .., P7P0P1}

3 V ← P ∪ P
4 for ∀Vi ∈ V and Vi
5

(cid:54)= ∅ do

ﬁnd R
/* saving for Pi ∈ P is not needed */
if Vi ∈ P then
ﬁnd A(Vi)

// Deﬁnition 1

// Deﬁnition 3

6

7

13

14

15

end

8
9 end
10 I ← ∅
11 while ∃A(Vi) ∈ P (cid:54)= 0 do
q ← arg max
12

i

{A(Vi) : ∀ Vi (cid:15) P}

I ← I ∪ Vq
/* to avoid duplicate delivery */
for ∀Vi ∈ V and Vq ∩ Vi (cid:54)= ∅ do

A(Vi) ← 0

// initialize the ﬁnal partition I

end

16
17 end

/* add leftover partition which did not merge */

18 P ← P − (P ∩ I)
19 I ← I ∪ P

representative node R is found, followed by the saving A for
each element in P is calculated. The partition in P with the
maximum saving will be selected as a ﬁnal partition in the set
I. The saving A of the other partitions that contain the selected
partition will be reset to 0 to avoid overlapping of the selected
partitions. The searching process will quickly converge (up
to 4 iterations) to a point when there is no more saving.
Any non-merged partition from P is added to I. For each
partition in the ﬁnal set I, a multicast packet is formed with
the destination group as well as the selected routing algorithm
and delivered to the representative node R using XY routing.
From the representative node R, the selected routing algorithm
(either dual-path or multiple unicast based on the comparison
in Deﬁnition 2) will be used to deliver the packet.

Fig. 3 shows the comparison of the multipath (MP) routing
[10], the new multipath (NMP) routing proposed by Ebrahimi
et.al [18] and the proposed (DPM)-based routing algorithm. In
the example, the source node is marked in yellow and all desti-
nation nodes are marked in green. Fig. 3a shows the operation
of MP, the destination set is divided into four partitions, which
are DH1 = {25, 33, 35} , DH2 = {29, 30, 32}, DL1 = {11},
and DL2 = {9, 7, 2}. For DH partition, the destination nodes
are sorted in the ascending order of node labels and delivered
accordingly. Whereas in the DL partition, destinations are
sorted in the descending order of node labels and delivered
accordingly. Fig. 3b shows the operation of NMP, where the

partition is similar to that of MP, however, the node is label as
L(x, y) = yn + x. In each partition, the destination is sorted
according to the least hop from the source node. A multicast
packet is forwarded to the nearest destination ﬁrst and then
again sorted for the next destination. This method is better
than multipath in saving the number of routing hops in DH2
and DL2.

Fig. 3c shows the partition before merging and Fig. 3d
shows the partition after merging where P0, P1 and P4, P5
are merged. If the cost of merging is same then the group
containing the least number of partitions is chosen ﬁrst then
the partition with the smallest indexed partition is chosen. For
partition P0P1, after delivery to the representative node 33
(a dotted path), a dual-path routing is performed for the rest
of the destinations. For partition P2, a unicast is performed
to deliver a packet to destination 35. In partition P4P5, after
delivery to the representative node 9, multiple unicast (MU)
option is chosen as both dual-path and MU gives the same cost
but the overhead of computing DH , DL is eliminated using
MU. The proposed method uses dynamic partition to regroup
the eight original partitions into four partition as shown in Fig.
3d. With this optimization, DPM is able to deliver with less
number of hops than MP [10] or NMP [18].

C. Deadlock Avoidance

Deadlock is an important aspect to consider when designing
a multicast routing algorithm. The proposed DPM-based mul-
ticast routing algorithm is likely to produce a deadlock because
of mixed turns. To avoid deadlocks, the physical network
is divided into high-channel and low-channel subnetwork as
shown in Fig. 4 where the high-channel subnetwork is used
is higher than the present node
when the next hop label
label and the low-channel subnetwork is used if the next hop
label is lower than the present node label. Fig. 4 also shows
the allowed turns in each subnetwork, invalid turns are not
allowed. As long as this rule is followed deadlocks can be
avoided. This method of channel selection and restriction of
turns are used by both multicast and unicast trafﬁc to avoid
deadlocks.

IV. PERFORMANCE EVALUATION

In the following sections, the proposed DPM-based multi-
cast routing algorithm is evaluated against the multipath (MP)
[10] and the new multipath (NMP) [18] algorithms using
synthetic trafﬁc and real application workloads.

A. Simulation Settings

The C++ based cycle accurate NoC simulator [25] is used
to simulate the proposed multicast routing algorithm with the
network parameter shown in Table I. Orion 2.0 [26] is used
to estimate the dynamic power consumption. The 8x8 mesh
based NoC is used for the simulation purpose where 4 VCs are
used, 2 VCs are used for the high and low channel subnetwork
respectively. Different destination ranges are adopted based on
the study of average destination set size per multicast packet
[27]. In our simulations, on average 10% of multicast portion

Fig. 3: Comparison of (a) MP [10] (b) NMP [18] (c) Partition of the network (d) DPM

Fig. 4: (a) 3x3 mesh physical network (b) high-channel sub-
network (c) low-channel subnetwork

Fig. 5: Packet format

and 90% unicast portion are assumed for the synthetic trafﬁc.
Netrace [28] is used to generate a trace ﬁle of workloads
from PARSEC [29] benchmark. Netrace uses 64 cores, in-
order Alpha ISA 2Ghz as the target system with 32KB I/D
cache with MESI coherence protocol for L1 cache. The packet
format for the simulation is shown in Fig. 5 where the ﬂit
ﬁeld identiﬁes a head, body or tail ﬂit. The packet ﬁeld
can identify a multicast or unicast packet. The routing ﬁeld
indicates the dual-path or multiple unicast routing algorithm,
as determined in Deﬁnition 2. In the header ﬂit, a source node
ID, a destination ID followed by multicast destination in bit

TABLE I: Network Conﬁguration

Topology
Virtual Channels
Buffer Depth
Packet Size
Trafﬁc
Multicast Packet Portion
Multicast Destination Range

8x8 Mesh
4
4 ﬂits
4 ﬂits/packet
Uniform Random
10 %
2-5,4-8,7-10,10-16

string format are included. A body or tail ﬂit only contains
the ﬂit type identiﬁer and the payload.

0,5351,5342,5333,5324,5315,5300,4241,4252,4263,4274,4285,4290,3231,3222,3213,3204,3195,3180,2121,2132,2143,2154,2165,2170,1111,1102,193,184,175,160,001,012,023,034,045,05DH1DH2DL2DL10,5301,5312,5323,5334,5345,5350,4241,4252,4263,4274,4285,4290,3181,3192,3203,3214,3225,3230,2121,2132,2143,2154,2165,2170,161,172,183,194,1105,1110,001,012,023,034,045,05DH1DH2DL2DL1p0p1p2p3p4p5p6p7p0p1p2p4p5p6p7p3Dynamic Merging destinationsourceselected path (a)(b)(c)(d)0,001,012,023,034,045,050,5351,5342,5333,5324,5315,5300,4241,4252,4263,4274,4285,4290,3231,3222,3213,3204,3195,3180,2121,2132,2143,2154,2165,2170,1111,1102,193,184,175,160,001,012,023,034,045,050,5351,5342,5333,5324,5315,5300,4241,4252,4263,4274,4285,4290,3231,3222,3213,3204,3195,3180,2121,2132,2143,2154,2165,2170,1111,1102,193,184,175,160,261,272,280,151,142,130,001,012,02(a)(b)(c)0,261,272,280,151,142,130,001,012,020,261,272,280,151,142,130,001,012,02Flit Packet    RoutingSrcDstMulticast DstFlit Data : PayloadFlit Data : PayloadHeader FlitBody FlitTail FlitFlit: H/B/TPacket: U/MRouting: MU/DPSrc: Source IDDst: Destination IDMulticast Dst: Bit string multicast destinationFlit Data : PayloadBody FlitB. Result

Fig. 6 shows the simulation results for the average packet
latency of 8x8 mesh network with synthetic trafﬁc. The
multiple unicast (MU) where a multicast packet is delivered
by multiple unicast packets, MP [10], NMP [18] and DPM are
compared. As the destination range increasing from (2 − 5)
to (10 − 16), all the routing algorithms are saturated earlier
mainly because of the increased congestion in the network.
The proposed algorithm has better average packet latency in
all destination ranges. The improvement is mainly due to the
dynamic partition merging which allows the regrouping of
destinations to reduce the routing cost, i.e., saving the hops
to deliver leads to comparatively less network congestion.

The dynamic power consumption for all four algorithms
are measured for synthetic trafﬁc and the percentage improve-
ment of the latter three algorithms vs. MU at the saturation
point of the MU is shown in Fig. 7. DPM is consuming
around 7%, 16%, 22%, and 35% less power than the MU
algorithm at the saturation point for the destination range
(2 − 5), (4 − 8), (7 − 10) and (10 − 16), respectively. For
the other two algorithms as well we see a similar trend of the
increasing improvement in power consumption up to around
25% improvement at the range (10−16). Similarly, on average
DPM is consuming around 21% less power than NMP and
23% less power than MP for all four destination range.

The performance of average packet latency under the PAR-
SEC benchmark traces is shown in Fig. 8 where multipath [10]
is considered as a baseline for the benchmark evaluation. For
each benchmark, the trace ﬁle of the region of interest section
is extracted for the simulation. The performance improvement
of NMP and DPM vs. MP is measured. For the average
latency in Fig. 8a, the proposed algorithm shows around 23%
in ﬂuidanimate and NMP shows around 5%
improvement
improvement in canneal and swaptions workloads. Similarly,
for the total power consumption, the proposed algorithm shows
around 14% improvement in ﬂuidanimate while NMP shows
around 4% improvement in swaptions and blackscholes. The
variation in delay and power performance in benchmark traces
is due to the variation in the destination size and multicast
percentage in the benchmark traces.

V. CONCLUSION

In this paper, the dynamic partition merging (DPM)-based
multicast routing algorithm is proposed for NoCs. The des-
tination set partition problem is ﬁrst modeled as the exact
weighted set cover problem. The proposed DPM algorithm
is proposed to solve the problem by comparing the different
options of merging partitions and selecting the option with the
most saving in routing cost. Compared with the static partition
strategy, DPM ﬁnds the partitions with lower routing cost
and hence helps in reducing the network latency and power
consumption. The routing algorithm inside each partition is
selected from the dual-path and multiple unicast routing. The
simulation results show that for synthetic trafﬁc, the proposed
algorithm achieves lower average packet
latency and the
network is saturated later than the existing algorithms with less

(a) destination range (2-5)

(b) destination range (4-8)

(c) destination range (7-10)

(d) destination range (10-16)

Fig. 6: Average latency for different multicast destination
range

 0 150 300 450 600 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07Average Latency (cycle)Injection Rate (packet/node/cycle) MUMPNMPDPM 0 150 300 450 600 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07Average Latency (cycle)Injection Rate (packet/node/cycle) MUMPNMPDPM 0 150 300 450 600 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07Average Latency (cycle)Injection Rate (packet/node/cycle) MUMPNMPDPM 0 150 300 450 600 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07Average Latency (cycle)Injection Rate (packet/node/cycle) MUMPNMPDPM[2] H. Xu, P. K. McKinley and L. M. Ni, “Efﬁcient implementation of
barrier synchronization in wormhole-routed hypercube multicomputers,”
in Proc. 12th Intl. Conf. Distrib. Comput. Syst., 1992, pp. 118-125.
[3] N. E. Jerger, L. Peh and M. Lipasti, “Virtual circuit tree multicasting:
a case for on-chip hardware multicast mupport,” in Proc. Intl. Symp.
Comput. Archit., 2008, pp. 229-240.

[4] A. Karkar, T. Mak, K. Tong and A. Yakovlev, “A survey of emerging
interconnects for on-chip efﬁcient multicast and broadcast in many-
cores,” in IEEE Circuits and Syst. Mag., vol. 16, no. 1, pp. 58-72,
2016

[5] B. K. Joardar, J. R. Doppa, P. P. Pande, D. Marculescu and R.
Marculescu, “Hybrid on-chip communication architectures for hetero-
geneous manycore syst.,” in Proc. Intl. Conf. Comput.-Aided Design
(ICCAD),2018, pp. 1-6.

[6] W. Choi et al., “On-chip communication network for efﬁcient training of
deep convolutional networks on heterogeneous manycore syst.,” IEEE
Trans. Comput., vol. 67, no. 5, pp. 672-686, May 2018.

[7] S. Yasaman et al., “Flow mapping and data distribution on mesh-
based deep learning accelerator,” in Proc. 13th IEEE/ACM Intl. Symp.
Networks-on-Chip,2019

[8] M. P. Malumbres, J. Duato and J. Torrellas, “An efﬁcient implementation
of tree-based multicast routing for distributed shared-memory multipro-
cessors,” in Proc. 8th IEEE Symp. Parallel and Distrib. Process., 1996,
pp. 186-189.

[9] D. R. Kumar, W. A. Najjar and P. K. Srimani, “A new adaptive hardware
tree-based multicast routing in k-ary n-cubes,” IEEE Trans. Comput.,
vol. 50, no. 7, pp. 647-659, July 2001.

[10] Xiaola Lin, P. K. McKinley and L. M. Ni, “Deadlock-free multicast
wormhole routing in 2-D mesh multicomputers,”IEEE Trans. on Parallel
and Distrib. Syst., vol. 5, no. 8, pp. 793-804, Aug. 1994.

[11] L. M. Ni and P. K. McKinley, “A survey of wormhole routing techniques
in direct networks,”Comput., vol. 26, no. 2, pp. 62-76, Feb. 1993.
[12] L. Wang, Y. Jin, H. Kim and E. J. Kim, “Recursive partitioning multicast:
a bandwidth-efﬁcient routing for networks-on-chip,” in Proc. 3rd Intl.
Symp. Networks-on-Chip,2009, pp. 64-73.

[13] F. A. Samman, T. Hollstein and M. Glesner. “Planar adaptive network-
on-chip supporting deadlock-free and efﬁcient tree-based multicast rout-
ing method,” Microprocessors and Microsystems, vol.36, no. 6, pp.
449–461,2012

[14] X. Wang et.al,“Efﬁcient multicast schemes for 3-D networks-on-

chip”,Syst. Archit. 59, 9, 693-708, 2013.

[15] F. A. Samman, T. Hollstein and M. Glesner, “Adaptive and deadlock-
free tree-based multicast routing for networks-on-chip,” IEEE Trans.
Very Large Scale Integr. (VLSI) Syst., vol. 18, no. 7, pp. 1067-1080,
July 2010.

[16] T. H. Vu and A. B. Abdallah, “Low-latency k-means based multicast
routing algorithm and architecture for three dimensional spiking neu-
romorphic chips,” in Proc. Intl. Conf. Big Data and Smart Comput.
(BigComp) 2019, pp. 1-8.

[17] R. V. Boppana, S. Chalasani and C. S. Raghavendra, “Resource dead-
locks and performance of wormhole multicast routing algorithms,” IEEE
Trans. Parallel and Distrib. Syst., vol. 9, no. 6, pp. 535-549, June 1998.
[18] M. Ebrahimi et al., “An efﬁcent dynamic multicast routing protocol for
distributing trafﬁc in NOCs,” in Proc. Des., Automat. & Test Europe
Conf. & Exhib., 2009, pp. 1064-1069.

[19] P. Bahrebar and D. Stroobandt, “The hamiltonian-based odd-even turn
model for adaptive routing in interconnection networks,” in Proc. Intl.
Conf. Reconﬁgurable Comput. and FPGAs (ReConFig), 2013, pp. 1-6.
[20] M. Ebrahimi, M. Daneshtalab, P. Liljeberg and H. Tenhunen, “HAMUM
- a novel routing protocol for unicast and multicast trafﬁc in MPSoCs,”
in Proc. 18th Euromicro Conf. Parallel, Distrib. and Network-based
Process., 2010, pp. 525-532.

[21] Z. Wang, H. Gu, Y. Yang, H. Zhang, Y. Chen,“An adaptive partition-
based multicast routing scheme for mesh-based networks-on-chip”, in
Comput. & Elect. Eng., vol.51,pp 235-251,2016

[22] M. Ebrahimi, M. Daneshtalab, P. Liljeberg and H. Tenhunen, “Parti-
tioning methods for unicast/multicast trafﬁc in 3D NoC architecture,” in
Proc. 13th IEEE Symp. Des. and Diagnostics of Electronic Circuits and
Syst.,2010, pp. 127-132.

[23] B. Tiwari, M. Yang, Y. Jiang and X. Wang, “Effect of hardware trojan
attacks on the performance of on-chip multicast routing algorithms,” in
Proc. 9th Annu. Computing and Communication Workshop and Conf.
(CCWC), 2019, pp. 0623-0629.

[24] V. V. Vazirani, “Approximation algorithms”, in SpringerVerlag, 2003.

Fig. 7: % improvement in power for MP, NMP and DPM over
MU

(a) Average Packet Latency

(b) Total Power

Fig. 8: Performance under PARSEC benchmark trafﬁc

power consumption. Similarly, for PARSEC benchmark loads,
latency improvement is up to 23% and power improvement is
up to 14% are observed. In our future work, the extension of
the DPM-based multicast routing algorithm to 3D NoCs and
evaluation of machine-learning benchmarks will be conducted.

REFERENCES

[1] L. Benini and G. De Micheli, “Networks on chips: a new soc

paradigm,”Comput., vol. 35, no. 1, pp. 70-78, Jan. 2002.

[25] X. Wang, T. Mak, M. Yang, Y. Jiang, M. Daneshtalab and M. Palesi,
“On self-tuning networks-on-chip for dynamic network-ﬂow dominance
adaptation,” in Proc. 7th Intl. Symp. Networks-on-Chip (NoCS), 2013,
pp. 1-8.

[26] A. B. Kahng, B. Li, L. Peh and K. Samadi, “ORION 2.0: a power-area
simulator for interconnection networks,” IEEE Trans. Very Large Scale
Integr. (VLSI) Syst., vol. 20, no. 1, pp. 191-196, Jan. 2012.

[27] S. Ma, N. E. Jerger and Z. Wang, “Supporting efﬁcient collective com-
munication in NoCs,” in Proc. Intl. Symp. High-Performance Comput.
Archit., 2012, pp. 1-12.

[28] J. Hestness, B. Grot, S. W. Keckler. “Netrace: dependency-driven, trace-
based network-on-chip simulation.” in Proc. 3rd Intl. Workshop Network
on Chip Architectures (NoCArc), 2010.

[29] C. Bienia and K. Li, “Parsec 2.0: a new benchmark suite for chip-
multiprocessors,” in Proc. 5th Annu. Workshop Model., Benchmarking
and Simul., 2009.

