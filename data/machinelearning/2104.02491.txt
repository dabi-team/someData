Nonlinear Model Based Guidance with Deep Learning
Based Target Trajectory Prediction Against Aerial Agile Attack Patterns
A. Sadik Satir1, Umut Demir2, Gulay Goktas Sever3, N. Kemal Ure4

Abstract—In this work, we propose a novel missile guidance algo-
rithm that combines deep learning based trajectory prediction with
nonlinear model predictive control. Although missile guidance and
threat interception is a well-studied problem, existing algorithms’ per-
formance degrade significantly when the target is pulling high acceler-
ation attack maneuvers while rapidly changing its direction. We argue
that since most threats execute similar attack maneuvers, these nonlin-
ear trajectory patterns can be processed with modern machine learn-
ing methods to build high accuracy trajectory prediction algorithms.
We train a long short-term memory network (LSTM) based on a class
of simulated structured agile attack patterns, then combine this pre-
dictor with quadratic programming based nonlinear model predictive
control (NMPC). Our method, named nonlinear model based predic-
tive control with target acceleration predictions (NMPC-TAP), signif-
icantly outperforms compared approaches in terms of miss distance,
for the scenarios where the target/threat is executing agile maneuvers.

I. INTRODUCTION
Since the World War II, missile interception guidance has been one
of the most important problems in missile studies. Several guidance
laws are introduced over the years. One of the most popular and com-
monly used guidance law is Proportional Navigation (PN). PN can
be implemented easily and can guarantee to hit targets under certain
limitations such as non-maneuvering or weakly maneuvering targets
[1]. Garber proposed Augmented Proportional navigation (APN)
to overcome these limitations [2]. APN is developed by further
optimizing the PN guidance. Thereafter, several other guidance laws
are designed based on APN [3] [4], but none of these approaches are
capable of explicitly predicting the future trajectory of the target. It is
shown that the success of guidance algorithms can be improved with
prediction of target maneuvers. Moreover, if target performs agile
maneuvers and the distance between target and interceptor is small,
predicting the future states of the target can be used to increase the
hit performance [5]. That being said, intercepting highly agile targets
is still an open problem, since the predictive capabilities of existing
algorithms are usually limited to targets that execute standard (non-
agile) maneuvers. The main objective of this paper is to utilize recent
advances in machine learning and predictive guidance to push the
state of the art performance in intercepting agile targets.

A. Previous Work

In recent years, there has been a great deal of effort in developing
predictive guidance laws by employing knowledge/prediction of
target trajectory and/or dynamics [6]–[8]. Best and Norton [9]
proposed a predictive guidance law inspired by model predictive

This is the author version of the manuscript of the same name accepted in the

1
2
0
2

r
p
A
6

]

Y
S
.
s
s
e
e
[

1
v
1
9
4
2
0
.
4
0
1
2
:
v
i
X
r
a

proceedings of the 2021 American Control Conference (ACC 2021).

1MSc Student, Department of Aeronautics and Astronautics, Istanbul Technical

University, Istanbul, Turkey. sadiksatir@gmail.com

2MSc Student, Department of Aeronautics and Astronautics, Istanbul Technical

University, Istanbul, Turkey. demiru@itu.edu.tr

3MSc Student, Department of Defense Technologies, Istanbul Technical

University, Istanbul, Turkey. sever17@itu.edu.tr

4 ITU Artificial Intelligence and Data Science Application and Research Center,
Associate Professor, Department of Aeronautics and Astronautics, Istanbul Technical
University, Istanbul, Turkey. ure@itu.edu.tr

control (MPC). The guidance law is based on predicting the
probability density function(PDF) of target position at interception,
Shima et al. [10] presented the multiple-model estimator in case the
target performs evasive maneuver characterized by a random switch-
ing time. Dionne et al. [11] extends the Best and Norton [9] and
presents a new terminal guidance law which uses target position that
estimated a in terms of a PDF in the terminal constraint. Nobahari
[12] introduced a heuristic predictive line-of-sight (LOS) guidance
law based on a dynamic optimization algorithm which determines
the acceleration commands. Ure [7] proposed a stochastic predictive
guidance and control methodology for interception of agile targets.
Akcal [8] presents a predictive guidance which uses a recursive least
squares (RLS) to estimate the possible target positions and nonlinear
programming is employed for selecting the optimal action. Eren
et al. [13] extensively investigated potential and vast applications
of MPC in aerospace guidance field in the survey paper. Li et al.
[14] introduced a NMPC scheme in case of target acceleration is
unknown for missile interception based on the primal–dual neural-
network(PDNN) optimization. NMPC formulated as quadratic
programming (QP) problem which needs to be solved at each time
step and PDNN optimization implementation was shown. Integrated
control and guidance of missiles based on NMPC proposed by
Bachitar [15]. A multiobjective offline tuning of NMPC introduced
which considered control performance and implementation cost
based on required computational capacity. Kumar et al. [16]
presented an integrated missile guidance and control using NMPC
for missile-on-missile interception.To genarate an optimal control
command constrained nonlinear problem solved with a sequential
quadratic programming (SQP) algorithm. Bhattacherjee [17] derived
a NMPC based missile guidance algorithm for target interception.

B. Contributions

In this paper, nonlinear model predictive control with target accel-
eration predictions (NMPC-TAP) method is proposed by exploiting
target trajectory predictions generated by a deep neural network. The
main idea behind using deep neural networks for this purpose stems
from the fact that a large array of past target trajectories are available
from operational heuristics and domain expertise in air defense
systems [18]. By using these heuristic, synthetic agile target trajecto-
ries can be fed to a time series prediction network (long short-term
memory networks in our case) to predict target trajectories. We show
that using such networks for agile maneuvering targets is indeed
more efficient compared to alternative approaches. Proposed method
needs instantaneous and future target acceleration predictions along
the prediction horizon of NMPC. Then a QP is solved at each time
step by employing these predictions. In PDNN [14] and QP [17]
based optimization approaches,control inputs and bounded unknown
target accelerations are combined in a decision variable vector. The
QP problem in NMPC-TAP is obtained by leaving the control input
as only decision variable, since the target accelerations are predicted.
The NMPC-TAP is validated by simulations for agile maneuvers. It
is shown that NMPC-TAP yields significantly superior performance

 
 
 
 
 
 
compared to PN, APN and NMPC with unknown target acceleration
in agile maneuvering target interception scenarios.

The paper is organized is follows; the Section 2 gives a brief
background on the interception geometry , the Section 3 provides
the details of the NMPC based predictive guidance algorithms,
the Section 4 describes the structure of the LSTM and finally the
Section 5 gives simulation results for various guidance laws.

II. INTERCEPTION GEOMETRY

It is well known that MPC usually requires difference equations
in discrete-time. Difference equations can be easily obtained by
applying Euler discretization on Eq.(1):

x(k+1)=fd(x(k))+gd(x(k))u(k)+dd(x(k))w(k)

(3)

where

fd(x(k))=



+∆(t)









x1(k)
x2(k)
x3(k)
x4(k)




x2(k)
x2
4(k)/x1(k)
x4(k)/x1(k)
−x2(k)x4(k)/x1(k)






gd(x(k))=∆(t)



,dd(x(k))=∆(t)




0
sin(θM −x3(k))
0
−cos(θM −x3(k))











0
aT r
0
aT λ

III. PREDICTIVE GUIDANCE
ALGORITHMS WITH CONSTRAINED OPTIMIZATION
In this section QP based formulations for predictive guidance will

be derived for both predicted and unknown target accelerations.

A. NMPC with Predicted Target Accelerations

The NMPC-TAP method is described in this section.

The reference predictive form [20] can be expressed by using Eq.
(3) as

Fig. 1: The missile-target engagement geometry.

x(k+j|k)=fd(x(k+j−1|k))+

(4)

−→
RT ;

−−→
RM ;

−→
i and

−→
VM and

We consider a two-dimensional intercept model which is depicted
in Figure 1.Assuming an inertial frame defined by Xi and Yi
−→
j . xM ;
axes together with corresponding unit vectors
yM ; xT ; and yT are the Cartesian coordinates of the missile and
−→
VT represent the position and
the target while
velocity vectors of the missile and target.In addition to the previous
−→
R can be rewritten in polar
definitions, missile target range vector
coordinates as R = (r,λ). r is the range along LOS, and λ is the
LOS angle. VR is the first time derivative of R ; VT and aT are
target velocity and acceleration, respectively; and VM and aM
are missile velocity and acceleration, respectively.The interception
geometry is represented in polar coordinate system in [19] [14].

Vr =VT cos(θT −λ)−VM cos(θM −λ)
Vλ =VT sin(θT −λ)−VM sin(θM −λ)
aT r =aT sin(θT −λ)
aT λ =aT cos(θT −λ)

Vλ is a transversal component of relative velocity rotating with
LOS, aT r and aT λ can be described as the projection components
of the target acceleration. Let us consider the state variable vector
x=[r,Vr,λ,Vλ]T . Then, the following state model of missile-target
interception model can be obtained in polar coordinates as follows:

˙x=f(x)+g(x)u+d(x)w,

(1)

where x ∈ (cid:60)nx is a state vector, w = [aT r,aT λ]T ∈ (cid:60)2 is a vector
which represents target acceleration in polar coordinates, and
u=aM ∈(cid:60) is a control input. The control input is subjected to an
acceleration limit, which is expressed in Eq. 2.

−umax ≤u≤umax.

(2)

gd(x(k+j−1|k))u(k+j−1|k)+
dd(x(k+j−1|k))w(k+j−1|k)

where

u(k+j−1|k)=u(k+j−2|k)+∆u(k+j−1|k)

where (k + j|k) means that the current time-step is k and the
distance from the current time-step is j [20]. The standard prediction
form is given by

Xk =Fk+Gk∆Uk+gk+dk

(5)

with

Xk =[x(k+1|k), x(k+2|k),...,x(k+Np|k)]T
Uk =[u(k|k), u(k+1|k),...,u(k+Np−1|k)]T
∆Uk =[∆u(k|k), ∆u(k+1|k),...,∆u(k+Np−1|k)]T



Fk =







Gk =







gk =







dk =




0
0
...
gd(x(k+Np−1)|k)













fd(x(k|k))
fd(x(k+1|k))
...
fd(x(k+Np−1|k))
gd(x(k|k))
gd(x(k+1|k))
...
gd(x(k+Np−1)|k)

...
...
...
...
gd(x(k|k)u(k−1))
gd(x(k+1|k))u(k−1)
...
gd(x(k+Np−1|k−1))u(k−1)







dd(x(k|k))w(k|k)
...
dd(x(k+Np−1|k))w(k+Np−1|k)




.

where u(k−1|k) is the control input of the last time-step, Np,Nc
are the prediction and control horizons, respectively, Xk ∈(cid:60)nxNp×1,
Fk ∈ (cid:60)nxNp×1, Gk ∈ (cid:60)nxNp×Nc, ∆Uk ∈ (cid:60)Nc×1,gk ∈ (cid:60)nxNp×1
and Dk ∈ (cid:60)nxNp×2. Calculating the matrices Fk, Gk, gk is
challenging, since the ∆Uk is unknown until optimization problem
is solved. The problem is tackled by utilizing ∆Uk belongs to
previous time step to calculate these matrices.

B. NMPC with Unknown Target Accelerations

We can define the quadratic cost function for the same

performance objective (5) as follows [14], [17]:

min

(cid:21)T

(cid:20) ∆Uk
dk
(cid:20) ∆Uk
dk

W
(cid:21)

≤b

subject to E

(cid:20) ∆Uk
dk

(cid:21)

+cT

(cid:20) ∆Uk
dk

(cid:21)

(13)

∆u(k|k)
∆u(k+1|k)
...

(cid:44) ∆u((k−1)+1|k−1)
(cid:44) ∆u((k−1)+2|k−1)

...

where

(6)

W =

∆u(k+Np−1|k) (cid:44) ∆u((k−1)+Np|k−1)

∆u(k+Np|k)

(cid:44)

0

We can define a quadratic cost function as:

J =XT

k QXk+∆U T

k R∆Uk










E =

(7)

(cid:20) GT

k QGk+R GT Q

QGk
01
−Ilt
01
Ilt
01
−I1
01
I1
02 −I2
I2
02

Q


b=








(cid:21)
,










(cid:20) 2GT

c=

k Q(Fk+gk)
2Q(Fk+gk)
−Umin+u(k−1|k)1Nc
Umax+u(k−1|k)1Nc
−∆Umin
∆Umax
−dmin
dmax

(cid:21)










where Q∈(cid:60)nxNp×nxNp and R∈(cid:60)Nc×Nc. Then, the performance
objective function can be rewritten by substituting Eq.(5) into Eq. (7)

J =(Fk+Gk∆Uk+gk+dk)T Q(Fk+Gk∆Uk+gk+dk)+

∆U T

k R∆Uk

(8)

The control input magnitude Eq. 2 and its rate is constrained as:

Umin ≤Uk ≤Umax =Umin ≤Uk−1+Ilt∆Uk ≤Umax

(9)

where Uk−1 ∈(cid:60)Nc×1 and Ilt ∈(cid:60)Nc×Nc are given as following

Ilt =







I
I
...
I

Uk−1 =u(k−1|k)1Nc

···
···
...
···

0
0
...
I

0
I
...
I





The increment on the control input constraint as follows

∆Umin ≤∆Uk ≤∆Umax

(11)

where ∆Umin,∆Umax, Umin, and Umax are the lower and upper
bounds of the input vectors. We can define the cost function

min ∆U T
subject to E∆Uk ≤b

k W ∆Uk+cT ∆Uk

(12)

where

W =(GT

k QGk+R),
c=2(Fk+gk+dk)T QGk




E =






b=





 I1 =INc×Nc

−Ilt
Ilt
−I1
I1
−Umin+u(k−1|k)1Nc
Umax+u(k−1|k)1Nc
−∆Umin
∆Umax






(10)

A. Structured Attacks and Training Data

01 =0Np×Npnx,02 =0Npnx×Np,I2 =INpnx

IV.
PREDICTION ALGORITHM AND NETWORK DESIGN
Predicting target motion is a challenging task due to highly
nonlinear dynamics and large maneuver envelope of the aircraft.
Furthermore, trajectories are further complicated by decisions
executed by the pilot. That being said, many attack trajectories
follow similar patterns [18]. Hence it is possible to either construct
or collect data from radar to create maneuver library for such
attacks. Then the trajectory prediction problem can be treated as
a regular time series analysis problem on target trajectory. In this
section, different types of neural network architectures for trajectory
prediction task is discussed and evaluated.

To train and demonstrate prediction and interception method,
a variety of interception scenarios are simulated. The maneuver
parameters for each maneuver are selected randomly under the limits.
In addition, target can switch one maneuver to another with equal
probability. This allows us to simulate more complex structured
attack patterns. Examples of the flight data can be seen on Fig. 2.
For instance, the left side of the Fig. 2 shows that target executes
weave and coordinated turn maneuvers. The other sub-figures show
that the target starts with level flight and executes high acceleration
turn on the middle and weave maneuver at the right sub-figure.

A fixed origin frame of reference is used. The position and
velocity vectors are obtained with respect to the origin. Input of the
model can be written as;

X=[xt−1,xt−2,xt−3,....,xt−n]
x,vt
xt =[xt,yt,vt
y]
X vector contains positions and velocities from t − n to t, which
n is the observation history size. Min-max scaler normalization
is used to fit the data into [0,1] interval since the target’s position,
velocity, and acceleration values vary differently. Gaussian noise is
added to imitate the radar measurements. A total of 500 simulations
with random initial positions and 30 seconds of flight time are
conducted. Next, the data are randomly sampled from flights in the
form of X. The data are divided such that % 60 is used for training,

Fig. 2: Simulation Scenarios; Combination of left, right coordinated turns, level flight and weave maneuver. Arrows indicate the flow of time.

%20 for validation and %20 for test. During the simulation studies,
it has been observed that at least 2 seconds of observation history
is essential to obtain good predictions.

B. Network Design for Trajectory Prediction

There are plenty of deep neural network architectures that consist
of Convolutional Neural Networks (CNNs), Recurrent Neural
Networks (RNNs), Long-Short Term Memory Networks(LSTMs)
for time-series analysis. The CNN architecture is mostly used for
spatial inference from high dimensional data such as an image, and
it can also be used for one-dimensional long-term dependent data
[21]. It is well known that LSTM and RNN models have more
suitable structures to process time series data. Since the input and
output size are different,an encoder-decoder architecture is needed
to deal with sequence to sequence prediction [22], [23].Moreover,
this type of architecture is capable of generalizing the solution and
remove input noise.

Fig. 3: Encoder-Decoder architectures for trajectory prediction.

Our preliminary studies about which kind of neural network
model performs more precise acceleration predictions give rise to
implement LSTM and RNN models for prediction. So, four kinds
of recurrent neural network architectures such as LSTM, RNN,
MLST and variational autoencoders (VAEs) [24] are compared
with each other. Fig. 3 shows the studied architectures constructed
over encoder-decoder. The first LSTM and RNN models are vanilla
encoder-decoder which directly connect encoder outputs to decoder

inputs at the latent space. On the other hand, M-LSTM adds a
maneuver classification feature into encoder outputs then sends it
to decoder input. It is inspired M-LSTM model from [23] since an
LSTM encoder-decoder architecture with maneuver classification
improves the accuracy of position prediction. In addition to the
models above, variational autoencoders derive a Gauss distribution
and then take a sample from it in the latent space.

C. Implementation Details

Parameters for the prediction model are tuned according to
simulation results. It is observed that adding extra layers increases
computation time rather than improving the accuracy of the model.
However, an increasing number of neurons in a single layer may
improve the overall model accuracy.
Activation functions at the last layers of the classification part in
the M-LSTM are softmax. In order to prevent over-fitting, dropout
method is employed. For recurrent layers 20% and for dense layers
10% dropout is implemented. Simulation studies show that Adagrad
optimization method which changes learning rates according to
parameter update frequency is a good fit for this problem. The
number of trainable parameters varies in different architectures.
The strategy was to select first encoder layer as the biggest and then
decreasing and increasing the layer through the encoder decoder
layers. No further improvement is obtained above 128 neurons.

D. The Prediction Results

In order to certify the effectiveness of the proposed model,
SimpleRNN, LSTM, M-LSTM and VAE models are compared
in simulation. The training and test accuracy are measured with
Mean Square Error (MSE). The results can be seen at Table I. The
acceleration limits, [−25, 25], were normalized to [0, 1] interval.
Therefore, the MSE losses must be examined accordingly.

TABLE I: Training and Test Losses of the Models

Number of Parameters
Small
Medium
Large

SimpleRNN
Test
0.0373
0.0328
0.0386

Train
0.0304
0.0258
0.0376

LSTM

M-LSTM

VAE

Train
0.0121
0.0169
0.0162

Test
0.0191
0.0152
0.0096

Train
0.0175
0.0158
0.0148

Test
0.0156
0.0142
0.0091

Train
0.0653
0.0651
0.0648

Test
0.0648
0.0641
0.0631

The result show that LSTM and M-LSTM architectures are
superior to SimpleRNN and VAE. In addition, M-LSTM is slightly
better than LSTM architecture. Therefore, in the presence of
maneuver label information, more accurate models can be used. All
models also perform well on test data, which shows that models
are capable of generalizing to maneuvers not used in training.

TABLE II: Example Prediction Results on Test Data

10 Horizon

10 Horizon

20 Horizon

20 Horizon

Time Step
k
k+1
.
.
.
.
.
.
k+n

Real
-16.21
-16.21
16.21
16.21
16.21
16.21
16.21
16.21
16.21

Prediction
-16.88
-15.74
-8.67
12.18
19.25
17.84
17.54
17.26
17.22

Real
-24.67
-24.67
-24.67
-24.67
24.67
24.67
24.67
24.67
24.67

Prediction
-25
-25
-25
-11.08
20.57
25.11
23.83
23.91
24.19

Real
14.829
14.829
.
.
.
14.829
14.829
14.829
14.829

Prediction
14.572
14.643
.
.
.
13.624
13.61
13.578
13.561

Real
15.182
15.182
.
15.182
15.182
15.182
.
-15.182
-15.182

Prediction
14.749
13.991
.
12.97
9.227
-0.084
.
-15.699
-16.032

Several acceleration prediction results can be seen at Table II. The
results show that the model can predict target acceleration with high
accuracy on a large set of agile maneuvers. It should be noted that
the model also captures and predicts switches between different
maneuvers types and associated accelerations. This property
provides our proposed method NMPC-TAP a considerable edge
against the alternative approaches.

V. SIMULATION RESULTS

In this section, simulation studies are conducted by comparing
proposed NMPC-TAP algorithm with aforementioned methods
from literature such as PN, APN and NMPC. Trajectory predictions
governed by the M-LSTM from table I. To compare these methods,
100 Monte-Carlo simulation are run for each guidance algorithm
with 5% noise. Simulation parameters of NMPC-TAP are given
by Table III.

TABLE III: Simulation parameters

∆t
g
umax
umin
q
θM,0
xM,0
yM,0
VM

0.02 [s]
9.81 [m/s2]
25g
−umax
[0,0,0,100]
0◦
0
0
150

dmax
dmin
∆umax
∆umin
R
θT,0
xT,0
yT,0
VT
N (cid:48) =3

8g×∆t[m/s2]
−dmax
0.025umax
−∆umax
I
190◦
1000
1000
100

Here Q=diag([q,...,q]) and q ∈(cid:60)nx×1, N (cid:48) is navigation constant
for PN and APN. The NMPC-TAP cost function Eq. (7) is chosen to
penalize the Vλ and input rate. An agile maneuvering target is used
for simulation purposes. The maneuver is assumed that the target
begins with left coordinated turn with 4g and 70◦ then makes 100m
level flight and weave maneuver with 8g and 4s period. Interception
performance of each guidance law against aforementioned agile
maneuvering target is shown in Fig. 4. It is apparently seen that each
approach achieves target interception. However the interception
performance can not be evaluated objectively by only analyzing
X, Y trajectories. Then, relative velocity component perpendicular
to the LOS, Vλ is given by Fig. 5, since the quadratic cost Eq.
(7) in NMPC based approaches primarily aims to penalize Vλ.
NMPC unknown and NMPC-TAP has superior Vλ responses. Vλ
is being enforced to zero much more earlier than PN and APN
laws with a navigation constant equal to 3. Moreover, NMPC-TAP
provides smaller magnitudes along whole simulation history. Fig.6
shows the control input histories. Benefits of employing target
acceleration predictions in optimization problem is revealed by
control inputs. NMPC-TAP changes direction of control input
few steps earlier than NMPC-unknown. In addition, control input
constrains are not violated by both NMPC based approaches. In

Fig. 4: Missile trajectories generated by each guidance algorithms during
missile-target interception.

Fig. 5: Vλ histories during missile-target interception.

Fig. 6: Missile acceleration histories during missile-target interception.

order to increase reliability of comparisons, results are averaged
over 100 Monte-Carlo (MC) simulations with the values of Np =10,
Np = 30 and Np = 40. It is also assumed that Np = Nc for each
simulations. The results are evaluated in terms of miss distance,
interception time and input rate. TableIV compares PN, APN,
NMPC and NMPC-TAP algoritms as given above.
Here, MDmean denotes mean of miss distances, MDST D repre-
sents standard deviation of miss distances, IT stands for interception
time and AIR presents average absolute input rate. Increasing
the dimension of prediction horizon is efficiently decreasing the
MDmean values. Since the target is performing agile escape maneu-

[13] U. Eren, A. Prach, B. B. Koc¸er, S. V. Rakovi´c, E. Kayacan, and B. Ac¸ıkmes¸e,
“Model predictive control in aerospace systems: Current state and opportunities,”
Journal of Guidance, Control, and Dynamics, vol. 40, no. 7, pp. 1541–1566,
2017.

[14] Z. Li, Y. Xia, C. Su, J. Deng, J. Fu, and W. He, “Missile guidance law based
on robust model predictive control using neural-network optimization,” IEEE
Transactions on Neural Networks and Learning Systems, vol. 26, no. 8, pp.
1803–1809, 2015.

[15] V. Bachtiar, C. Manzie, and E. C. Kerrigan, “Nonlinear model-predictive
integrated missile control and its multiobjective tuning,” Journal of Guidance,
Control, and Dynamics, vol. 40, no. 11, pp. 2961–2970, 2017.

[16] P. Kumar, S. Sonkar, A. Ghosh, and D. Philip, “Nonlinear model-predictive
integrated guidance and control scheme applied for missile-on-missile
interception,” in 2020 International Conference on Emerging Smart Computing
and Informatics (ESCI).
IEEE, 2020, pp. 318–324.

[17] D. Bhattacharjee, A. Chakravarthy, and K. Subbarao, “Nonlinear model
predictive control based missile guidance for target interception,” in AIAA
Scitech 2020 Forum, 2020, p. 0865.

[18] D. P. Lotter, “Design of a weapon assignment subsystem within a ground-based
air defence environment,” Ph.D. dissertation, Stellenbosch: Stellenbosch
University, 2017.

[19] D. Lianos, Y. Shtessel, and I. Shkolnikov, “Integrated guidance-control
system of a homing interceptor-sliding mode approach,” in AIAA Guidance,
Navigation, and Control Conference and Exhibit, 2001, p. 4218.

[20] W. H. Kwon and S. H. Han, Receding horizon control: model predictive
control for state models. Springer Science & Business Media, 2006.
[21] B. Zhao, H. Lu, S. Chen, J. Liu, and D. Wu, “Convolutional neural networks
for time series classification,” Journal of Systems Engineering and Electronics,
vol. 28, pp. 162–169, 02 2017.

[22] I. Sutskever, O. Vinyals, and Q. Le, “Sequence to sequence learning with
neural networks,” Advances in Neural Information Processing Systems, vol. 4,
09 2014.

[23] N. Deo and M. M. Trivedi, “Multi-modal trajectory prediction of surrounding
vehicles with maneuver based lstms,” in 2018 IEEE Intelligent Vehicles
Symposium (IV), 2018, pp. 1179–1184.

[24] D. Kingma and M. Welling, “An introduction to variational autoencoders,”
Foundations and Trends® in Machine Learning, vol. 12, pp. 307–392, 01 2019.

TABLE IV: Results obtained by MC Simulations.

APN
PN

NMPC-TAP
NMPC

NMPC-TAP
NMPC

NMPC-TAP
NMPC

MDmean (m) MDST D (m)

18.69
26.378

7.2
9.2

6.58
11.22

3.57
14.58

22.75
7.72

Results for Np =10

12.91
17.49

Results for Np =30

8.80
6.19

Results for Np =40

2.70
6.05

IT (s)
6.52
6.52

AIR (m/s2)
5.21
5.3

6.54
6.67

6.56
6.57

6.62
6.73

5.64
4.76

6.06
6.06

6.025
5.96

vers, LSTM predictions provide invaluable future information along
the prediction horizon. NMPC-TAP outperforms other guidance
algorithms as long as the prediction horizon is sufficiently long.
Despite the fact that NMPC-TAP presents much lower MDmean
values, limitations on the allowable control signal is not sacrificed.

VI. CONCLUSIONS
A novel nonlinear model predictive guidance that uses target
acceleration prediction provided by an LSTM NN is proposed
in this work. Target acceleration predictions are directly included
in the NMPC scheme for propagating the interception problem’s
states. The NMPC formulates the interception problem as a QP
problem in order to find the sub-optimal missile acceleration
command. Simulations, which are conducted against an agile target
to evaluate the performance and effectiveness of the proposed
method, demonstrate that the desired guidance method is superior
when compared to the others.

ACKNOWLEDGMENT
This work is supported by the ITU BAP grant no: MOA-2019-

42321.

REFERENCES

[1] P. Zarchan, Tactical and strategic missile guidance. American Institute of

Aeronautics and Astronautics, Inc., 2012.

[2] V. Garber, “Optimum intercept laws for accelerating targets.” AIAA Journal,

vol. 6, no. 11, pp. 2196–2198, 1968.

[3] S. Ghosh, D. Ghose, and S. Raha, “Capturability of augmented proportional
navigation (apn) guidance with nonlinear engagement dynamics,” in 2013
American Control Conference.

IEEE, 2013, pp. 7–12.

[4] ——, “Capturability of augmented pure proportional navigation guidance
against time-varying target maneuvers,” Journal of Guidance, Control, and
Dynamics, vol. 37, no. 5, pp. 1446–1461, 2014.

[5] A. Zhurbal and M. Idan, “Effect of estimation on the performance of an
integrated missile guidance and control system,” IEEE Transactions on
Aerospace and Electronic systems, vol. 47, no. 4, pp. 2690–2708, 2011.
[6] N. Prabhakar, I. D. Kumar, S. K. Tata, and V. Vaithiyanathan, “A predictive
explicit guidance scheme for ballistic missiles.” Defence science journal, 2013.
[7] N. K. Ure and G. Inalhan, “Predictive missile guidance for agile maneuvering
targets with stochastic hybrid dynamics,” in 2016 IEEE Aerospace Conference.
IEEE, 2016, pp. 1–9.

[8] M. U. Akcal and N. K. Ure, “Predictive missile guidance with online trajectory

learning.” Defence Science Journal, vol. 67, no. 3, 2017.

[9] R. Best and J. Norton, “Predictive missile guidance,” Journal of Guidance,

Control, and Dynamics, vol. 23, no. 3, pp. 539–546, 2000.

[10] T. Shima, Y. Oshman, and J. Shinar, “Efficient multiple model adaptive
estimation in ballistic missile interception scenarios,” Journal of Guidance,
Control, and Dynamics, vol. 25, no. 4, pp. 667–675, 2002.

[11] D. Dionne, H. Michalska, and C. A. Rabbath, “A predictive guidance law
with uncertain information about the target state,” in 2006 American Control
Conference.

IEEE, 2006, pp. 6–pp.

[12] H. Nobahari and A. Haeri, “A heuristic predictive los guidance law based on
trajectory learning, ant colony optimization and tabu search,” in 2016 6th IEEE
International Conference on Control System, Computing and Engineering
(ICCSCE).

IEEE, 2016, pp. 163–168.

