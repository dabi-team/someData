0
2
0
2

v
o
N
2

]
h
p
-
p
e
h
[

2
v
9
3
4
6
0
.
0
1
0
2
:
v
i
X
r
a

Simulation-based inference methods for particle physics

Johann Brehmer and Kyle Cranmer

New York University, New York, NY, 10003

Our predictions for particle physics processes are realized in a chain of
complex simulators. They allow us to generate high-ﬁdelty simulated
data, but they are not well-suited for inference on the theory param-
eters with observed data. We explain why the likelihood function of
high-dimensional LHC data cannot be explicitly evaluated, why this
matters for data analysis, and reframe what the ﬁeld has traditionally
done to circumvent this problem. We then review new simulation-based
inference methods that let us directly analyze high-dimensional data by
combining machine learning techniques and information from the sim-
ulator. Initial studies indicate that these techniques have the potential
to substantially improve the precision of LHC measurements. Finally,
we discuss probabilistic programming, an emerging paradigm that lets
us extend inference to the latent process of the simulator.

Contents

2.

1
Simulation-based inference methods for particle physics
2
1. Particle physics measurements as a simulation-based inference problem . . . .
2
1.1. A fundamental problem for LHC measurements . . . . . . . . . . . . . .
4
1.2. Solving the problem with summary statistics . . . . . . . . . . . . . . . .
6
1.3. The frontier of simulation-based inference
. . . . . . . . . . . . . . . . .
6
Inference with surrogates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
2.1. An approximation: the Matrix-Element Method . . . . . . . . . . . . . .
8
2.2. Learning the likelihood . . . . . . . . . . . . . . . . . . . . . . . . . . . .
9
2.3. Learning the likelihood ratio . . . . . . . . . . . . . . . . . . . . . . . . .
2.4.
Integration and augmentation . . . . . . . . . . . . . . . . . . . . . . . . 10
2.5. Active learning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
Inference with suﬃcient summary statistics . . . . . . . . . . . . . . . . . . . . 14
3.1. An approximation: parton-level Optimal Observables . . . . . . . . . . . 15
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
3.2. Learning the score
4. Diagnostics, calibration, and systematic uncertainties . . . . . . . . . . . . . . 16
5. Probabilistic programming . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18

3.

1

 
 
 
 
 
 
2

Johann Brehmer and Kyle Cranmer

6.
Software and computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
7.
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24

1. Particle physics measurements as a simulation-based in-

ference problem

1.1. A fundamental problem for LHC measurements

Among the sciences, particle physics has the luxury of having a very well
established theoretical basis. Quantum ﬁeld theory provides a framework
not only for the Standard Model, but also for theories of physics beyond the
standard model (BSM). We almost take for granted the predictive power of
our theories, but the way our ﬁeld formulates searches for new new physics
in terms of hypothesis tests and conﬁdence intervals is critically tied to the
fact that we have predictive models to test in the ﬁrst place.

Often we seem to equate the predictions of a theory with Feynman dia-
grams and the matrix element for a hard scattering process, which in turn
can be used to predict a fully diﬀerential cross-section. Of course, that is not
the full story, as one must include parton density functions and quarks and
gluons give rise to a parton shower and subsequent hadronization process.
Moreover, we observe electronic signatures tied to scintillation, ionization,
etc. in our detectors, not the ﬁnal-state particles directly. Therefore the
predictive model for a theory must incorporate the response of the detector
to the ﬁnal state particles.

While all of these points are well known to an experimental particle
physicist, it has not been customary to describe the full simulation chain
explicitly as a probabilistic model for the data. Why is that? In part
that is because we have no explicit closed-form equation to write down nor
do we have a function that we can provide to Minuit [1] that describes
the probability distribution for the raw data in terms of parameters that
appear in the Lagrangian for a given theory. Nevertheless, we can pro-
duce synthetic data using Monte Carlo simulation tools like MadGraph [2],
Sherpa [3], Pythia [4], Herwig [5], and GEANT4 [6].

The colloquial term or jargon for both the simulation tools and the
synthetic data they produce is Monte Carlo. This term refers to methods
that sample from probability distributions to compute an integral. Particle
physics simulators use such methods to compute the cross section of a pro-
cess by sampling a number of events following the probability distribution

p(x, zd, zs, zp|

θ) = px(x

|

zd) pd(zd|

zs) ps(zs|

zp) p(zp|

θ) .

(1)

3

Table 1. Dictionary of symbols that appear in this review (derived from Ref. [7]).

Symbol

Meaning

θ
x
v
zp
zs
zd
z = (zp, zs, zd) Full simulation history of event

Theory parameters
All observables
1-2 selected kinematic variables
Parton-level four-momenta
Parton shower history
Detector interactions

pfull({x}|θ)
p(x|θ)

pp(zp|θ)
ps(zs|zp)
pd(zs|zp)
px(x|zd)
r(x|θ)
r(x, z|θ)
t(x)
t(x, z|θ)

ˆθ
ˆp(x|θ)
ˆr(x|θ)
ˆs(x|θ)
ˆt(x)
ˆptf (x|zp)

Full likelihood function, see Eq. (2)
Kinematic likelihood for single event
(normalized fully diﬀerential xsec, Eq. (3))
Parton-level distribution
Parton-shower eﬀects
Detector eﬀects
Detector readout
Likelihood ratio function, see Eq. (4)
Joint likelihood ratio, see Eq. (8)
Score (locally optimal obs., Eq. (10))
Joint score, see Eq. (9)

Best ﬁt for theory parameters
Parameterized estimator for likelihood
Parameterized estimator for likelihood ratio
Parameterized classiﬁer decision function
Estimator for score
Approximate shower and detector eﬀects
(transfer function)

ML abstraction

Parameters of interest
Features
Summary statistics
Latent variables
Latent variables
Latent variables
All latent variables

Implicit density
Implicit density

Tractable density
Implicit density
Implicit density
Implicit density

Unbiased est. of r(x|θ)

Unbiased est. of score

Estimator for θ

Here the vector zp is the parton-level phase-space point of a simulated
event (i. e. the parton four-momenta, helicities, and charges); the vector
zs summarizes the parton shower simulation, including the stable particles
that emerge from it; zd are the interactions in the detector. These three
vectors collectively deﬁne the “Monte-Carlo truth record” of a simulated
event and are the latent variables of the process: we cannot measure them,
and in fact they are only well deﬁned within a given simulator code. Finally,
x is the vector of observables. While a real-life observation consists of tens
of millions of sensor read-outs, one can consider the reconstruction of the
event as part of the measurement process and take x as a vector of four-
In Tbl. 1
momenta and other properties of the reconstructed particles.
we provide a look-up table for these and other symbols that appear in
this review and translate between particle physics and machine learning or
statistics nomenclature.

4

Johann Brehmer and Kyle Cranmer

There is an established chain of high-ﬁdelity simulators that can sam-
ple events from the probability density in Eq. (1). However, statistical
inference—quantifying the degree to which parameter values θ are in agree-
n
ment with an observed set of events
i=1—is surprisingly challeng-
D
ing. Why? The key quantity for both frequentist and Bayesian inference
method is the likelihood function pfull(
θ), the probability density of an
observed set of events
as a function of the parameters θ. The full likeli-
D
hood function is given by

xi}
{

D|

=

pfull(

θ) = Pois(n

D|

(cid:15) L σ(θ))

|

(cid:89)

i

θ) ,

p(xi|

(2)

where Pois(n
(cid:15) L σ(θ)) is the Poisson probability density for n observed
|
events, eﬃciency and acceptance factors (cid:15), integrated luminosity L, total
cross section σ(θ), and where

(cid:90)

(cid:90)

(cid:90)

dzd

dzs

p(x

θ) =
|

dzp p(x, zd, zs, zp|

θ)

(3)

is the probability density for an individual event to have data x. This like-
lihood function involves integrals over the entire parton-level phase space,
all possible shower histories, and all possible detector interactions compati-
ble with the measurement x. The integral over this enormous space clearly
cannot be computed in practice, so we cannot directly evaluate the likeli-
hood of an observed event under diﬀerent parameter values θ. This means
that we cannot directly ﬁnd the maximum-likelihood estimators that best
ﬁt a given observation, construct conﬁdence limits based on a likelihood
ratio test statistic, or compute the Bayesian posterior p(θ

x)!

The task of performing statistical inference when the data generating
process does not have a tractable likelihood is known as simulation-based or
likelihood-free inference. This case is not at all unique to particle physics.
The formulation of this problem in a common, abstract language has led
to statisticians, computer scientists, and domain scientists from various
ﬁelds developing powerful methods for simulation-based inference together.
While this review focuses on the particle physics case, the methods apply
equally to a range of problems for instance in neuroscience, cosmology, or
epidemiology.

|

1.2. Solving the problem with summary statistics

If the intractability of the likelihood function is such a problem, how have
high-energy physicists successfully analyzed particle collisions for decades?

5

The reason that this problem is rarely acknowledged explicitly is that parti-
cle physicists have a track record of developing a good intuition about pro-
cesses they study and ﬁnding powerful summary statistics for them. Sum-
mary statistics are individual variables that condense a high-dimensional
observation. Typical examples are the reconstructed mass of a decaying
unstable particle, decay angles between decay products, or other kinematic
variables [8, 9]. An ideal summary statistics vector v captures all of the
relevant information in the observed event x relevant to the parameter
θ, while being of much lower dimensionality. Given one or two summary
statistics, we can easily compute the likelihood function p(v
θ) with his-
|
tograms, kernel density estimation, or other density estimation techniques
and then ﬁnd the maximum-likelihood estimator in the parameter space
and construct conﬁdence limits based on the (proﬁle) likelihood ratio test
statistic [10, 11]. This approach has been the workhorse of statistical anal-
ysis in collider physics for decades.

Note that most uses of machine learning in experimental particle physics
take place within this approach. Experimental particle physicists have em-
braced the use of multivariate models (commonly boosted decision trees or
fully connected neural networks) in the event selection. The statistical anal-
ysis of the events that pass this selection is then still based on histograms
of kinematics-based summary statistics or the neural network output itself.
The reduction of data to summary statistics also enables Approximate
Bayesian Computation (ABC) [12, 13], a simulation-based inference method
that is gaining popularity in cosmology and is widely used in many scien-
tiﬁc ﬁelds outside of physics. It directly targets Bayesian inference, using
repeated runs of the simulator together with an accept-reject criterion to
draw parameter samples that approximately follow the posterior.

Both the histogram method popular in particle physics and ABC suﬀer
from the curse of dimensionality: the number of simulations required scales
exponentially with the dimensionality of x or v. This is why they only
work with a low-dimensional statistic v and cannot be eﬀectively applied
to high-dimensional data x. However, ﬁnding suitable summary statistics
is a diﬃcult and task-dependent problem and almost any choice of sum-
mary statistics discards some information. As a result, data analysis based
on summary statistics typically leads to reduced sensitivity and statistical
power.

6

Johann Brehmer and Kyle Cranmer

1.3. The frontier of simulation-based inference

In the next sections, we will describe modern simulation-based inference
methods that allow us to analyze higher-dimensional data, improve the
quality of inference, and improve the sample eﬃciency. Three developments
are the key drivers behind these improvements [14]:

(1) The revolution in machine learning provides us with powerful surrogate
models for the likelihood, likelihood ratio, or posterior function, or for
optimal summary statistics. We can thus tap into the ability of modern
machine learning methods to learn useful representations directly from
high-dimensional data.

(2) Active learning methods iteratively use past results to steer the next

simulations, leading to a better sample eﬃciency.

(3) Integrating inference capabilities with the simulation code and aug-
menting the training data with additional information that can be ex-
tracted from the simulator can substantially improve sample eﬃciency
and quality of inference.

Against the backdrop of these three broad trends, many diﬀerent in-
ference algorithms have been proposed in recent years, see Ref. [14] for an
overview. Here we focus on a few methods that are particularly relevant
for particle physics. In Sec. 2 we discuss techniques that aim to estimate
the likelihood function or the likelihood ratio function, ranging from the
Matrix-Element Method to machine learning–based methods to techniques
that bring together matrix-element information and machine learning. Sec-
tion 3 covers methods that aim to deﬁne powerful summary statistics, from
parton-level Optimal Observables to neural network surrogates for the score
function. We summarize and compare the main methods we discuss in
Tbl. 2. In the following sections we will brieﬂy discuss diagnostic tools and
systematic uncertainties as well as software implementations of these ideas.
In Sec. 5 we focus more on the latent process of the simulators and describe
the paradigm of probabilistic programming. We discuss implementations
of these methods in the HEP software stack in Sec. 6, before concluding
with a summary in Sec. 7.

2. Inference with surrogates

The ﬁrst class of methods that we discuss tackles the problem head-on and
θ) or the closely
constructs an estimator for the likelihood function p(x
|

7

Table 2. Simulation-based inference methods for particle physics. We classify meth-
ods by the key quantity that is estimated in the diﬀerent approaches, by whether they
rely on a manual choice of summary statistics, are based on a transfer-function ap-
proximation (“TF”), whether their optimality depends on a local approximation (“lo-
cal”), by whether they use any other functional approximations such as a histogram
binning or a neural network (“NN”), whether they leverage matrix-element information
(“|M|2”), and by the computational evaluation cost. Derived from a table in Ref. [15].

Method

Estimates

Approximations

|M|2

Comp. cost

summaries TF local functional

Histograms
ABC

ˆp(v|θ)
θ ∼ p(θ|v)

(cid:88)
(cid:88)

MEM
NDE
SCANDAL
CARL
RASCAL etc

OO
SALLY

ˆp(x|θ)
ˆp(x|θ)
ˆp(x|θ)
ˆr(x|θ)
ˆr(x|θ)

ˆt(x)
ˆt(x)

binning
(cid:15)-kernel

integral
NN
NN
NN
NN

integral
NN

(cid:88)

(cid:88) (cid:88)
(cid:88)

curse of dim.
curse of dim.

high (TF)
amortized
amortized
amortized
amortized

high (TF)
amortized

(cid:88)

(cid:88)

(cid:88)

(cid:88)
(cid:88)

related likelihood ratio function

r(x

θ) =
|

p(x
θ)
|
pref (x)

,

(4)

where the denominator is some reference distribution, for instance using
a reference value of the parameter points such as the Standard Model, a
model average of multiple parameter points, or uniform phase space.

Once we have such an estimator, which we will denote ˆp(x

θ),
|
we can immediately use it in the established statistical pipeline: we can
ﬁnd the maximum-likelihood estimator for instance as

θ) or ˆr(x

|

ˆθMLE = arg max

Pois(n

θ

L σ(θ))
|

(cid:89)

i

θ)

ˆr(xi|

(5)

and similarly construct exclusion limits based on asymptotic properties of
the (proﬁle) likelihood ratio [16]. Additionally, we can use the resulting
likelihood ratio test statistic together with toy Monte Carlo to guarantee
coverage, as discussed in Sec. 4.

2.1. An approximation: the Matrix-Element Method

The Matrix-Element Method (MEM) [17–32] approximates the likelihood in
Eq. (3) by replacing the precise model of the eﬀects of shower and detector
zp). This simpliﬁes the
with a simple, tractable transfer function ˆptf (x

|

8

Johann Brehmer and Kyle Cranmer

marginal distribution that would involve integrating over a large number
of microscopic interactions to a convenient probability density such as a
Gaussian. The MEM likelihood is given, schematically, by

(cid:90)

(cid:90)

1
σ(θ)

|

∼

(z

θ)

θ)

p
|

zp)

|M

θ) =
|

ˆpM EM (x

dzp ˆptf (x

zp) p(zp|
|

dzp ˆptf (x
|

θ)
|
(6)
2 is the squared matrix element evaluated at a phase-space
where
|
point zp and parameters θ and for simplicity we have left out parton den-
sities as well as phase-space and eﬃciency factors. Since the integrand is
tractable and the integral is over a much lower-dimensional space than the
on in Eq. (3), it is feasible—though expensive—to compute this approxi-
mate likelihood function.a

(zp|

|M

2 ,

In some processes, particularly those involving only leptons and photons,
the MEM can give a reliable estimate of the true likelihood. However, jets
are less well modeled by transfer functions and additional jet radiation
is diﬃcult to describe in this approach. Finally, the MEM still requires
a computationally expensive numerical integration for every event that is
evaluated, which can be prohibitive.

2.2. Learning the likelihood

Rather than computing the integral in the likelihood for every event to be
evaluated, we can ﬁt a surrogate model to data from the simulator and then
use that for inference. Such a surrogate model needs to be ﬂexible enough
to accurately represent a complicated and multimodal probability distribu-
tion, we have to ﬁt it to limited training data, and its likelihood function
needs to be computed eﬃciently. Kernel density estimation has been used
in this context [37], but it was limited to roughly ﬁve-dimensional data. Re-
cently, several machine learning models have been developed for this task,
which are eﬀective for estimating distributions of high-dimensional data.
In particular, neural density estimators such as normalizing ﬂows [38, 39]
are ﬂexible probabilistic models with a tractable likelihood function.

This lets us solve the problem of simulation-based inference in three

phases [40]:

(1) We run the usual simulator chain a number of times with diﬀerent
input parameters θ and saving θ together with the simulated events
x

p(x

θ).

aThis approach has also been extended to include an explicit calculation of leading
parton-shower eﬀects [33–36].

∼

|

9

|

(2) Next, a neural density estimator is trained to learn the conditional prob-
ability density p(x
θ). We use a single model for the whole parameter
space (as opposed to individual models for a number of points along a
grid in the parameter space), the parameter point θ to be evaluated is
an additional input to the model. Such a parameterized model [41, 42]
can leverage the smooth dependence on the parameter space, the prob-
ability density at each parameter point can “borrow” information from
nearby points).

(3) After training, we can evaluate this model for arbitrary observations
x and parameter points θ and eﬃciently get an estimator for the like-
lihood function ˆp(x
θ). We can then use this to deﬁne best-ﬁt points
|
and exclusion limits with the usual statistical tools.

Two aspects of this approach are noteworthy. First, we can use any
state-of-the-art simulator in this approach, including shower and detector
eﬀects. Unlike in the MEM, there is no need for any approximations on the
underlying physics. Second, the approach is amortized : after an upfront
simulation and training phase, we can evaluate the approximate likelihood
function very eﬃciently for a large number of events and parameter values.
Neural density estimators like normalizing ﬂows have other useful prop-
erties. They are generative models, i. e. one can sample from the probability
distributions they have learned. This is not only a convenient cross check,
but can also be used for event generation, to unfold reconstruction-level
variables to the parton level [43], and for anomaly detection [44].

2.3. Learning the likelihood ratio

Training a surrogate for the likelihood function actually solves a harder
problem then necessary for inference. To ﬁnd the maximum-likelihood pa-
rameter point and to construct exclusion limits we do not actually need
to know the likelihood function itself—the likelihood ratio r(x
θ) deﬁned
|
in Eq. (4) is in fact just as useful! As it turns out, training a neural net-
work to learn the likelihood ratio is often easier than learning the likelihood
function.

The key idea is known as the likelihood ratio trick : a binary classiﬁer
p(x
pref (x) will
θ)+pref (x)], which
θ)
θ). In other words, we
|

trained to discriminate samples x
∼
eventuallyb converge to the output ˆs(x
is a monotonic function of the likelihood ratio r(x

θ) from samples x
|
pref (x)/[p(x
→

bIn the limit of a suﬃciently expressive model, inﬁnite training data, and eﬃcient mini-
mization of the loss function.

∼

|

|

10

Johann Brehmer and Kyle Cranmer

can transform the output of a classiﬁer ˆs(x
likelihood ratio function as

θ) into an estimator for the
|

1

ˆr(x

θ) =
|

−
ˆs(x

ˆs(x
θ)
|
θ)
|

.

(7)

We can use this in an inference algorithm similar to the one discussed

in the previous section [41, 45–54]:

(1) We again start by running the simulator chain, generating one set of
events from a reference distribution pref (x) (e. g. the SM) and a second
set of events from various parameter points θ.

(2) Next, a neural classiﬁer is trained to discriminate between these two
sets, using the binary cross-entropy as a loss function. Like before, the
classiﬁer is parameterized: the parameters θ are used as explicit inputs
into the classiﬁer.

(3) After training, we can transform the output of the classiﬁer into an
estimator for the likelihood ratio function with Eq. (7) and an optional
calibration procedure. This surrogate model can then be used to ﬁnd
the best-ﬁt point and exclusion contours using established statistical
tools.

This method is known as CARL [41, 48, 55]. It again supports arbitrary
simulators without requiring approximations on the underlying physics and
is amortized, allowing for an eﬃcient evaluation after an upfront simulation
and training cost. Compared to learning the likelihood function with a
neural density estimator, the CARL approach can be more sample eﬃcient
(saving computation time).

While a surrogate model for the likelihood ratio does not allow us to
generate samples, it can be used for reweighting. For the simulation-based
inference problem, this can be useful as a diagnostic tool. In other con-
texts, this ability can be used to reweight events [47, 54, 55], tune shower
and detector-simulation parameters to data [54], for unfolding [56], and for
anomaly detection [57].

2.4. Integration and augmentation

Both inference techniques described above—training a neural density es-
timator to learn the likelihood function and training a classiﬁer to learn
the likelihood ratio—treat the simulator chain as a black box that takes
parameters θ as input and outputs samples x
θ). In reality, though,
|
we know more about the particle physics processes. They consist of the

p(x

∼

11

separate pieces of parton-level generator, parton shower, and detector sim-
ulation, as given by Eq. (3); typically only the parton-level step explicitly
depends on the theory parameters of interest θ.

We can leverage this understanding of the simulated process to extract
more information from the simulator and use it to augment the training
data for the likelihood or likelihood ratio model.c
In particular, we can
access the latent variables (or Monte-Carlo truth record) z = (zp, zs, zd),
while tools like MadGraph let us compute matrix elements for arbitrary
theory parameters. For each simulated event we can thus compute two
useful quantities: the joint likelihood ratio [7, 58, 60]

r(x, z

θ)
|

and the joint score

=

≡

p(x, z
θ)
|
pref (x, z)
p(x
zd) p(zd|
|
zd) p(zd|
p(x
|
2(zp|
θ)
= |M|
2
ref (zp)
|M|

zs) p(zs|
zs) p(zs|
σref
σ(θ)

θ)
zp) p(zp|
zp) pref (zp)

(8)

|

θ)

θ)

px(x

t(x, z

≡ ∇θ log p(x, z
=
|
px(x

θ)
|
∇θpp(zp|
zp)
zs) ps(zs|
zd) pd(zd|
zs) ps(zs|
zd) pd(zd|
θ)
zp) pp(zp|
|
2(zp|
θ)
∇θσ(θ)
= ∇θ|M|
.
2(zp|
σ(θ)
θ) −
|M|
2
Here
ref (zp) are the squared matrix elements for parton-
|M|
level phase space points zp for theory parameters θ and under the reference
distribution, respectively, while σ(θ) and σref are the total cross sections.
The joint likelihood ratio and joint score quantify how the probability of
one simulated event—ﬁxing all of the latent variables in the simulation
chain—changes if we change the theory parameters θ.

2(zp|

θ) and

|M|

(9)

How are these two quantities useful, especially given that they depend
on latent variables z that are only meaningful for simulated events, but not
for real measurements? It turns out that the joint likelihood ratio r(x, z
θ)
is an unbiased estimator of the likelihood ratio r(x
θ) and the joint score
|
provides unbiased gradient information. This means that we can augment
cThe extraction of the joint likelihood ratio and score is in fact more general and can
be realized for many simulators [58, 59]. However, the particular structure of particle
physics processes makes it easy to compute these quantities, which in this case are closely
linked to the squared matrix element.

|

12

Johann Brehmer and Kyle Cranmer

Fig. 1.
Illustration of a complete inference method using the RASCAL or ALICES
methods to train a surrogate for the likelihood ratio function. Figure taken from Ref. [60].

our training data with these numbers and use them as labels in a supervised
training setup. This idea is realized in a few diﬀerent algorithms, which
mostly diﬀer by the loss functions that they use: the SCANDAL method
improves the training of neural surrogates for the likelihood function [58],
while the RASCAL [7, 58, 60] and ALICES [61] techniques train neural
surrogates of the likelihood ratio function more eﬃciently. After training
the surrogates for the likelihood or likelihood ratio, we are again left with
a neural network that can be evaluated for arbitrary events and parameter
points and allows for amortized inference as before. The full workﬂow is
schematically shown in Fig. 1.

Extracting the joint likelihood ratio and joint score during the simu-
lation stage and augmenting the training data with it adds multiple or-
thogonal pieces of information to the training, as we illustrate in Fig. 2.
In practice, this substantially reduces the number of simulated events that
are necessary for a good performance—in some cases by multiple orders of
magnitude [7, 60]!

Some particle physics measurements have even more additional struc-
ture, for instance when we are trying to constrain the Wilson coeﬃcients of
an eﬀective ﬁeld theory and the squared matrix element is a polynomial of
these parameters. Incorporating this additional structure in the inference
workﬂow can improve the eﬃciency even further [7, 62, 63].

2.5. Active learning

Active learning here describes a sequential workﬂow that alternates simula-
tion and inference stages. The theory parameters for which more events are
generated are chosen such that they are expected to be most useful based

SimulationMachine LearningInferencexz<latexit sha1_base64="HjZ6RxRDdZu139wdkhmGLAXlGyY=">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</latexit><latexit sha1_base64="N0otbztN+sjGy9xqdVKMRIGUlNA=">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</latexit><latexit sha1_base64="N0otbztN+sjGy9xqdVKMRIGUlNA=">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</latexit><latexit sha1_base64="KGKYmyKWjUVupNzZY8DVUShrvqU=">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</latexit>r(x,z|✓)<latexit sha1_base64="n4ECwTYdCfuLwJXCZl6+ybiKm1E=">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</latexit><latexit sha1_base64="yfNfOs7ZyWqkNT8RpYmkj2bn/mA=">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</latexit><latexit sha1_base64="yfNfOs7ZyWqkNT8RpYmkj2bn/mA=">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</latexit><latexit sha1_base64="kQLQGJ4Xe+WRfsBc6Tu8qUqoqpg=">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</latexit>t(x,z|✓)<latexit sha1_base64="BMHppIHEY/0iNNG8Fhs+Hd4wokw=">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</latexit><latexit sha1_base64="WhfdL6HX9XmJ7WXSrLsNwv05onI=">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</latexit><latexit sha1_base64="WhfdL6HX9XmJ7WXSrLsNwv05onI=">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</latexit><latexit sha1_base64="GuTW9do3dzdd+I9ZbAmjhvNlqcg=">AAAcoXicpVltc9y2Eb6kb6n65rQfow9INXbtzOl0d5IsKR3PZJx40szYtSpLjltR0oDkksQcSVAAeL4Tw/6C/pp+bf9I/00XIE/i61nTnkY8EPs8i8VisVzw7CRkUo3H//no4x/9+Cc//dknP9/4xS9/9evfPPj0t28lT4UDZw4PuXhnUwkhi+FMMRXCu0QAjewQvrdnX2v593MQkvH4VC0TuIioHzOPOVRh19WDR5aChTJ6MpeK2bYAN8/U48WQ3JAfiKUCUPRJfvVgazwamw9pNyZlY2tQfo6vPv3MsVzupBHEygmplOeTcaIuMioUc0LIN6xUQkKdGfXhHJsxjUBeZMaQnDzEHpd4XOB/rIjprTIyGkm5jGxERlQFsinTnV2y81R5hxcZi5NUQewUA3lpSBQn2jvEZQIcFS6xQR3B0FbiBFRQR6EPa6MYm4aLwuCNjYfE+FqirbHEZcNpk/dMBSQJuUKmCx6uUNPPwrfzbDw6HGpf6svkcLx7NJ3sPz18Oj3Y25/kHUw7TOGWOr6l3oPpC4C4Tq1yxkeow+jLNx622VzQ2F+NPCnoT/cOxvuHh9Pd/enR3mRyWLI/QC5nvFeiu1Zv6Eq99EPdVpyHshYxmWRpzNSi3ukLmgTMafRGaaiY4O+HNuczRW05xEsaUrEYeiGnqh6KetBnMRcRDSW7gYtMprbH/MboGNABuENb0BnUFWQeLOMo2aap4nXNkgv1yOERbk+JkR5TZTMbIce4OV4nejfKU35cagmWSQCxzLNUhHlVS+J6uGGHAXP1lp/Job4aPz+rRMeQOExBtbtY+iFBfdVuHYXGMRHeSZ5AbBQq7jyjYXih7QAhwKvPEeI0Qv0R7h+zSVEktosldwn6NgRV3yzo8YY7Muo4uEfkSoUVBFTVOWx2U6csJLZAM0xDEhbjdosiGrvFcJoSMlwVscREg2suh8RFNwiT7ORIT5LFPvYW0lGEyc1s3m8hBkFDkwRQj0LUhhXD+1J9ZukY1LGRn08uMpMzpZNtTfK8DsN2gunCRGKeWdi2Yp6g8TYm5ZllM1/OWFLrizmLXXRFQxPGJ5vrtShGDHARskCp5MudHSMaceHvYDTvoBGFQUrhpN+x+ZfarIY23YCV9egGH1MgFZklPY9GLFxaErNdonTIdz4QCpUVR+nsi7uS1IdhUa7Vq0BEGWva4DLPuxO7TTH4eZbByBr6o/zvDRnDzJExlEFbBtcpm9NQzw7nwyK4Nob+FeMj5iSiSxvqhCUkiMTdlQrQxmjvNFMkIZYTgGO2RcuZGEMu9/p1FAkaVVCpWmRceuinGmcjU+E8ZOnyNybY61qur69TilDLfJPiK29hbkErVA/sDncLLJA4/HGwlMyRqxWvk3ECq5hSgUPD7FV+ZQKoY2/oidewr/OrDljoizrs5RqVwm2qtELw1OOtiSWYH6gnDYIt7iLw+UlTXZRgDNXXRl9tL0vyq9PLYptlEZN6aVpkaJJffJCDjyt5nZvvS8ulvg+YCfGmAcMaBcPtzVWpTN8VoXGGD8HGisDcbIMM3rbCdiWatWXRSvaqLfNXsm/bMrWSnbZlnl2I8Lu5ne9El9l2O1slpThpM+9EKya64RssuASzU5PlSXO/6Wd5fj6tRMmfc+tz/CsjhVgRc90QfiBbU3IbNlotCMwsis0xlaAu86xJFVVcNHyeuCCKETwsFYnJ+4phlsSIrd5NW+5rEnWOLFlFs03p5FxOq6wMaZctptciQqjoile0p4VDn/PQ7d7w2OOaM0E91okRFIysODS0VlUj4jTvp6GwgwKJZCGP1/DmVKxAHfxFg1nu6EUX9qYbe9OFXXZjl13YeTd23oVV3VjVaS8I3g0fFwv5ClTA3cYaOhSLytsi5mt9Z5W1VR0oeCjugCf6rhsosVhc3iHfmNt+KIt5Haw7uuEOlbhjq9aa+x57G+CTBtg8TMHRx1/CMUhFd4yb8NVFb9lc5V3d1UpIsdKnQ4rn7XpVQbLOQipZp0HcR4NYp0HeR4Ncp0HdR0O7rKlouLmPhr+1NIQc1yrimIju5cfVohha8WjF5f0uVoDFd3NF0TqdBvCLWJ+TIkkurD+257BIBFZeLegfOrGshbtincBZGzjrAnq0bWaRwzS6Bb9pYm96lLaARfLotLWFXRBrWNXfomAxBdC0+3K328EeT0ULu9ePXbaxyz5s03TEdntE2yCxKgi7DBn2TbG6itVH7y6Z4RP08dRK2JPL3bxvxD76XpW+10k3wye9wyf3Gb6Pvleldw9v6D3+SsgOWZGN6x6St+DoEsmUTLiDBWudXtR7PgenqEVswLNolhjg4ov83LkguiSzTDEGiL4VNQsh7RSjZvdDavC6u1aXnqFRtXcfVea6t966UqPoVinuqbLlNnPe6jfyESos9D36oIXGf0bf0Vp9+rJbmIetfX15asw90M1DfTlaP5Axe60n/he7Rbfh4v8yHMP3JY/NMcymonHYnIPAzvLAOQMRk8loP0qNQL9/L3u3TS+eQCt3eZVQHC54is9KYt564SghxL4+b+rXYAHoM0hj2lpghn64QfBj6bdUvEDWWPXjK/YX725KFnVdxTvGyrbHo919zOIlTvOseRLQWPEIC6s0hGyiT8dV0gqMqUFWxyoqT/3sxiO/KM9L34ATYlGlu1+XvbiWWPHgf4/0FKWnvVKXUT/PzLUHcQK6GDyBPvkxZ1gvmWsPwuFYuetLjxxPHnmmLz1yWGC5qczbx/K9g21nL/I++POTXL+V6JEGTp4FI2vojLoRX+iXhn5E8fGK39ZQt9YBWbwCYqtnTAFhql348qwPEXIfT98Mbbtt9Q366s2LPNOXPoASEVC0SkUmhE7Z7Mb8lGDFcYyFoX47mY1HB/tOlK/6Q7oEISHJprVOG0Ld2QDbXLgFejyq9y9kwDyF3UZN0R/KyqDTO3zZD8UjUY/RFumfONq9OGUf91FFcGt+q7N4E12dlxY05nX1YGvS/BGu3Xg7HU3Go8lfxltfHZY/0H0y+Gzw+8HjwWRwMPhq8KfB8eBs4Az+Mfjn4F+Df29ubX63ebx5UkA//qjk/G5Q+2ye/xcse64D</latexit>✓<latexit sha1_base64="uKih3q81UG5Y39UkSUDmaMgSwo0=">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</latexit><latexit sha1_base64="sg4BK8w5ytAcXmQyQ0tWWWn7/Y0=">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</latexit><latexit sha1_base64="sg4BK8w5ytAcXmQyQ0tWWWn7/Y0=">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</latexit><latexit sha1_base64="cLB/gHcLXKsvdN1Ss3kTuhimZm0=">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</latexit>argmingL[g]<latexit sha1_base64="K5zdKfNQlfWV+Iu2lZ+kbdAR2qQ=">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</latexit><latexit sha1_base64="ApOBYqsfgOriMeFGC7CAo7I3urI=">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</latexit><latexit sha1_base64="ApOBYqsfgOriMeFGC7CAo7I3urI=">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</latexit><latexit sha1_base64="Y+642ZFyiyZWQmFYdFZi+qnOJts=">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</latexit>ˆr(x|✓)<latexit sha1_base64="NPA37tSEX6NJZFS7lgnMywc24Uw=">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</latexit><latexit sha1_base64="OWtH3yFwQxlgBBM8LzzB+Kr7/wE=">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</latexit><latexit sha1_base64="OWtH3yFwQxlgBBM8LzzB+Kr7/wE=">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</latexit><latexit sha1_base64="8WBmztmqRcTSWIh+NwhKhjUiPqA=">AAAcjnicpVltc9y2Eb4kfUnVNyX5GH1AqrFrZ07nu5NkS+l4mnHiSTpj14osOW5FSQOSSxJzJEEB4PlODPtX+rX9Sf03XYA8ia9nTXsa8UDs8ywWi8VywbOTkEk1Hv/ngw8/+tnPf/HLj3+18evf/PZ3v9/85NM3kqfCgVOHh1y8tamEkMVwqpgK4W0igEZ2CD/as2+0/Mc5CMl4fKKWCZxH1I+ZxxyqsOty8zMroCoT+YMF+YlYKgBFH15ubo9HY/Mh7cakbGwPys/R5SefO5bLnTSCWDkhlfJsMk7UeUaFYk4I+YaVSkioM6M+nGEzphHI88xYn5N72OMSjwv8jxUxvVVGRiMpl5GNyIiqQDZlurNLdpYq7+A8Y3GSKoidYiAvDYniRLuCuEyAo8IlNqgjGNpKnIAK6ih0WG0UY9NwURi8sXGPGMdKtDWWuEY4bfKOqYAkIVfIdMHD5TDozKVitiPAzTPh23k2Hh0MtS/1ZXIw3j2cTvYfHzyePtnbn+QdTDtM4YY6vqHegekLgLhOrXLGh6jD6Ms37rXZXNDYX408KeiP956M9w8Oprv708O9yeSgZL+HXM54r0R3rd7QlXrph7qtOA9lLWIyydKYqUW90xc0CZjT6I3SUDHB3w1tzmeK2nKIlzSkYjH0Qk5VPRT1oE9jLiIaSnYN55lMbY/5jdExoANwh7agM6gryDxYxlGyQ1PF65olF+q+wyPcixIjPabKZjZCjnBzvEr01pMn/KjUEiyTAGKZZ6kI86qWxPUULIYBc/X+nsmhvho/P61Ex5A4TEG1u1j6IUF91W4dhcYxEd5JnkBsFCruPKVheK7tACHAq88R4jRC/RHuH7NJUSR2iiV3Cfo2BFXfLOjxhjsy6ji4R+RKhRVg0qlz2Oy6TllIbIFmmIYkLMbtFkU0dovhNCVkuCpiiYkG11wOiYtuECazyZGeJIt97C2kowhzm9m830EMgoYmCaAehagNK4Z3pfrM0jGoYyM/m5zjHSyUdLLtSZ7XYdhOMF2YSMwzC9tWzBM03sYMPLNs5ssZS2p9MWexi65oaML4ZHO9FsWIAS5CFiiVfPXokRGNuPAfYTQ/QiMKg5TCSb9l86+0WQ1tugEr69ENPqZAKjJLeh6NWLi0JGa7ROmQN7qaiapQWXGUzr64K0l9GBblWr0KRJSxpg0u87xbsdsUg59nGYysoT/K/9GQMcwcGUMZtGVwlbI5DfXscD4sgitj6N8wPmJOIrq0oU5YQoJI3F2pAG2M9k4zRRJiOQE4Zlu0nIkx5HKvX0eRoFEFlapFxqWHfqpxNjIVzkOWLn9tgr2u5erqKqUItcw3Kb7yFuYGtEL1wG5xN8ACicMfBUvJHLla8ToZJ7CKKRU4NMxe5pcmgDr2hp54Dfsqv+yAhb6ow16sUSncpkorBE892J5YgvmBetgg2OI2Ap8dN9VFCcZQfW301fayJL88uSi2WRYxqZemRYYm+fl7Ofi4kle5+b6wXOr7gJkQbxowrFEw3F5flsr0XREap/gQbKwIzM02yOBNK2xXollbFq1kL9syfyX7ri1TK9lJW+bZhQi/m9v5VnSR7bSzVVKKkzbzVrRiohu+xYJLMDs1WZ4095t+ludn00qU/DW3vsC/MlKIFTHXDeEnsj0lN2Gj1YLAzKLYHFMJ6jLPmlRRxUXD54kLohjBw1KRmLyvGGZJjNjq3bTlviZR58iSVTTblE7OxbTKypB20WJ6LSKEiq54RXtaOPQZD93uDY89rjkS1GOdGEHByIozQ2tVNSJO834aCjsokEgW8ngNb07FCtTBXzSY5Y5edGGvu7HXXdhlN3bZhZ13Y+ddWNWNVZ32guDd8HGxkC9BBdxtrKFDsai8KWK+0XdWWVvVgYKH4hZ4rO+6gRKLxeUt8rW57YeymNfBuqMb7lCJO7ZqrbnvsbcBPm6AzcMUHH3WJRyDVHTHuAlfXfSWzVXe1V2thBQrfTqkeLiuVxUk6yykknUaxF00iHUa5F00yHUa1F00tMuaiobru2j4e0tDyHGtIo6J6E5+XC2KoRWPVlzev8QKsPhurihap9MAfhHrC1IkyYX1p/YcFonAyqsF/WMnlrVwl6wTOGsDZ11Aj7bNLHKYRrfg103sdY/SFrBIHp22trALYg2r+lsULKYAmnZf7HY72OOpaGH3+rHLNnbZh22ajthuj2gbJFYFYZchw74pVlex+ujdJTN8gj6YWgl7eLGb943YR9+r0vc66Wb4pHf45C7D99H3qvTu4Q29x18JeURWZOO6e+QNOLpEMiUT7mDBWqcX9Y7PwSlqERvwLJolBrj4Mj9zzokuySxTjAGib0TNQkg7xajZfZ8avO6u1aVnaFTt3UWVue6tt67UKLpVijuqbLnNnLf6jbyPCgt9999rofGf0Xe4Vp++7BbmYWtfXx4bc5/o5oG+HK4fyJi91hP/i92i23DxfxmO4fuCx+YYZlPROGzOQWBneeCcgYjJZLQfpUagX7aXvTumF0+glbu8SigOFzzFZyUxb71wlBBiX5839WuwAPQZpDFtLTBD39sg+LH0WypeIGus+vFVv8k3725KFnVdxTvGynbGo919zOIlTvOseRLQWPEIC6s0hGyiT8dV0gqMqUFWxyoqT/3sxiO/KM9L34ITYlGlu1+VvbiWWPHgf4/0BKUnvVKXUT/PzLUHcQy6GDyGPvkRZ1gvmWsPwuFYuetLjxxPHnmmLz1yWGC5qczbx/K9g21nz/M++LPjXL+V6JEGTp4FI2vojLoRX+qXhn5E8fGK39ZQt9YBWbwCYqtnTAFhql344rQPEXIfT98Mbbtp9Q368vXzPNOXPoASEVC0SkUmhE7Y7Nr8lGDFcYyFoX47mY1HT/adKF/1h3QJQkKSTWudNoS6swG2uXAL9HhU71/IgHkKu42aoj+UlUGnt/iyH4pHoh6jLdI/cbR7cco+7qOK4Mb8VmfxJro6Ly1ozOtyc3vS/BGu3XgzHU3Go8kP4+2vD8of6D4efD74w+DBYDJ4Mvh68P3gaHA6cAbLwT8H/xr8e2tz6/HW060/F9APPyg5nw1qn63v/wuOb6XU</latexit>✓i<latexit sha1_base64="l7N+1zwpgVSD9LHyu2N3Zdptxos=">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</latexit><latexit sha1_base64="A0803SRxkfT9iDkUxwV/3t5Rbms=">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</latexit><latexit sha1_base64="A0803SRxkfT9iDkUxwV/3t5Rbms=">AAAcgXicpVltc9y2Eb4kfUnVpnXaj9EHphq5duZ0vjtJlpyMZzxO3LQzdq3IsuNElDQguSQxBxIUAJ7vxLI/ol/bz/0h/Rf9N12APImvZ017GvFA7PMsFovFcsFzEkalGo//88GHH/3kpz/7+ce/2Pjlrz759W/ufPrbN5KnwoXXLmdcvHWIBEZjeK2oYvA2EUAih8H3zuxrLf9+DkJSHp+oZQJnEQli6lOXKOx6a6sQFLmgF3e2xqOx+VjtxqRsbD355N/p9h83/nV08elnru1xN40gVi4jUp5Oxok6y4hQ1GWQb9iphIS4MxLAKTZjEoE8y4zBubWNPZ7lc4H/sbJMb5WRkUjKZeQgMiIqlE2Z7uySnabKPzzLaJykCmK3GMhPmaW4pWdveVSAq9gSG8QVFG213JAI4ir0UW0UY9NwURi8sbFtGV9KtDWWuCw4besdVaGVMK6Q6YGPK2DQmUfEbEeAl2cicPJsPDocal/qy+RwvPtoOtl/ePhwerC3P8k7mA5L4Zo6vqbeghkIgLhOrXLGj1CH0ZdvbLfZXJA4WI08KegP9w7G+4eH09396aO9yeSwZL+HXM54r0R3rd7Qk3rph7qtOGeyFjGZpGlM1aLeGQiShNRt9EYpU1Twd0OH85kijhziJWVELIY+40TVQ1EP+jjmIiJM0is4y2Tq+DRojI4BHYI3dASZQV1B5sMyjpIdkipe1yy5UHddHuH2kxjpMVEOdRByhJvjZaJ3mzzhR6WWcJmEEMs8SwXLq1oSz1ewGIbU01t6Jof6avz8uBIdQ8ulCqrdxdIPLdRX7dZRaBwT4Z3kCcRGoeLuY8LYmbYDhAC/PkeI0wj1R7h/zCZFkdgpltyz0LcMVH2zoMcb7siI6+IekSsVdhgSVefQ2VWdspDYAs0wDWnRGLdbFJHYK4bTFEZxVcQSEw2uuRxaHrpBmGQmR3qSNA6wt5COIkxuZvN+CzEIwkwSQD0KURt2DO9K9ZmtY1DHRn46OcM7WCjpZluTPK/DsJ1gujCRmGc2tu2YJ2i8g0l3Zjs0kDOa1PpiTmMPXdHQhPFJ53otihFDXIQsVCr58sEDIxpxETzAaH6ARhQGKYWTfkvnX2qzGtp0A1bWoxsCTIFEZLb0fRJRtrQlZrtE6ZA3upqJqlBZcZTOvrgrrfowNMq1ehWKKKNNGzzq+zdirymGIM8yGNnDYJT/rSGjmDkyijJoy+AypXPC9OxwPjSCS2PoDxgfMbcisnSgTlhCgkjcXakAbYz2TjNFWpbthuCabdFyJsaQx/1+HUWCRhVEqhYZlx76qcbZyFQ4D1m6/JUJ9rqWy8vLlCDUNt9W8ZW3MNegFaoHdoO7BhZIHP4oXErqytWK18k4gVVMqdAlLHuRX5gA6tgbeuI17Mv8ogPGAlGHPV+jUnhNlTYDX93bmtiCBqG63yA44iYCnx431UUJxlB9bfTV8bMkvzg5L7ZZFlGpl6ZFhib52Xs5+LiSl7n5Prc9EgSAmRBvGjCsUTDcXl2UyvRdERqv8SHYWBGYm22QwZtW2K5Es7YsWsletGXBSvZtW6ZWspO2zHcKEX43t/ON6DzbaWerpBQnbeaNaMVEN3yDBZegTmqyvNXcb/pZnp9OK1Hyl9z+HP/KSLHsiHoeg79aW1PrOmy0WhCYWRSdYypBXeZZkyqiuGj4PPFAFCP4WCpaJu8rilkSI7Z6N225r0nUObJkFc02pZNzPq2yMqSdt5h+iwhMkRWvaE8Lhz7lzOve8NjjmTNBPdYtIygYWXFoaK2qRsRp3k9DYQcFEkkZj9fw5kSsQB38RYNZ7uhFF/aqG3vVhV12Y5dd2Hk3dt6FVd1Y1WkvCN4NHxcL+QJUyL3GGroEi8rrIuZrfWeXtVUdKDgTN8BjfdcNlFgsLm+Qr8xtP5TGvA7WHd1wl0jcsVVrzX2PvQ3wcQNsHqbg6uOtxTFIRXeMm/DVRW/ZXOVd3dVKSLHSp0OC5+l6VWFlnYVUsk6DuI0GsU6DvI0GuU6Duo2GdllT0XB1Gw0/tjQwjmsVcUxEt/LjalEMrXi04vL+OVaAxXdzRdE6nQbwy7I/t4okubC/as9hkQisvFrQP3RiaQt3QTuBszZw1gX0SdvMIodpdAt+1cRe9ShtAYvk0WlrC7uw7GFVf4uCxRRA0+7z3W4H+zwVLexeP3bZxi77sE3TEdvtEW2DxKqAdRky7JtidRWrj95da4ZP0HtTO6H3z3fzvhH76HtV+l4n3Qyf9A6f3Gb4Pvpeld49vKH3+CuxHlgrsnHdtvUGXF0imZIJd7CgrdOLesfn4Ba1iAN4Fs0SA1x8kZ+6Z5YuyWxTjAGir0XNQkg7xajZfZ8avO6u1aVnaFTt3UaVue6tt67UKLpViluqbLnNnLf6jbyLCgt9d99rofGf0fdorT592S3Mw9a+vjw05h7o5qG+PFo/kDF7rSf+F7tFt+Hi/zIcw/c5j80xzCGicdicg8DO8sA5AxFbk9F+lBqBfr9e9u6YXjyBVu7yKqE4XPAUn5WWeeuFozCIA33e1K/BQtBnkMa0tcAMvb1h4cfWb6l4gayx6sdX7C/e3ZQs4nmKd4yV7YxHu/uYxUuc5tnzJCSx4hEWVimDbKJPx1XSCoypQVbHKipP/ezGI78oz0vfgMuwqNLdL8teXEusePC/R3qC0pNeqUdJkGfm2oM4Bl0MHkOf/IhTrJfMtQfhcqzc9aVHjiePPNOXHjkssNxU5u1j+d7BcbJneR/86XGu30r0SEM3z8KRPXRH3Ygv9EvDICL4eMVve6hb64A0XgGx1TOmAJZqFz5/3YdgPMDTN0Xbrlt9g7549SzP9KUPoEQEBK1SkQmhEzq7Mj8l2HEcY2Go305m49HBvhvlq35GliAkJNm01ukA050NsMOFV6DHo3r/QobUV9ht1BT9TFYGnd7gy34oHol6jLZI/8TR7sUpB7iPKoJr81udxZvo6ry0oDGviztbk+aPcO3Gm+loMh5NvhtvPTkcFJ+PB58Nfj+4N5gMDgZPBn8aHA1eD9wBG/x98I/BPzc/2ry/Od6cFtAPPyg5vxvUPptf/RfDxKQU</latexit><latexit sha1_base64="wu6Hts1TOb3rsEaGlT7xgnbYqiA=">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</latexit>✓j<latexit sha1_base64="I43qAb/N9+gEleDQ88LUjU6gBUM=">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</latexit><latexit sha1_base64="caXfti+QmnIlgO/vw7RCZ7mPWrs=">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</latexit><latexit sha1_base64="caXfti+QmnIlgO/vw7RCZ7mPWrs=">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</latexit><latexit sha1_base64="isTL59a2OifKddQT14KzRD58m1M=">AAAcgXicpVltc9y2Eb4kfUnVN6f9GH1gqpFrZ06nu5Nkycl4JuPEk3bGrlVZctyKkgYklyR6IEEB4PlOLPsj+rX9Y/03XYA8ia9nTXsa8UDs8ywWi8VywXMSRqUaj//z0cef/OjHP/nppz/b+PkvfvmrXz/47DdvJU+FC2cuZ1y8c4gERmM4U1QxeJcIIJHD4Adn9q2W/zAHISmPT9UygYuIBDH1qUsUdr2zVQiKXP3t6sHWeDQ2H6vdmJSNrUH5Ob767HPX9ribRhArlxEpzyfjRF1kRCjqMsg37FRCQtwZCeAcmzGJQF5kxuDc2sYez/K5wP9YWaa3yshIJOUychAZERXKpkx3dsnOU+UfXWQ0TlIFsVsM5KfMUtzSs7c8KsBVbIkN4gqKtlpuSARxFfqoNoqxabgoDN7Y2LaMLyXaGktcFpy29Z6q0EoYV8j0wMcVMOjMI2K2I8DLMxE4eTYeHQ21L/VlcjTeezqdHDw5ejI93D+Y5B1Mh6VwSx3fUu/BDARAXKdWOeOnqMPoyze222wuSBysRp4U9Cf7h+ODo6Pp3sH06f5kclSyP0AuZ7xfortWb+hJvfRD3VacM1mLmEzSNKZqUe8MBElC6jZ6o5QpKvj7ocP5TBFHDvGSMiIWQ59xouqhqAd9FnMRESbpDVxkMnV8GjRGx4AOwRs6gsygriDzYRlHyQ5JFa9rllyohy6PcPtJjPSYKIc6CDnGzfE60btNnvLjUku4TEKIZZ6lguVVLYnnK1gMQ+rpLT2TQ301fn5WiY6h5VIF1e5i6YcW6qt26yg0jonwTvIEYqNQcfcZYexC2wFCgF+fI8RphPoj3D9mk6JI7BRL7lnoWwaqvlnQ4w13ZMR1cY/IlQo7DImqc+jspk5ZSGyBZpiGtGiM2y2KSOwVw2kKo7gqYomJBtdcDi0P3SBMMpMjPUkaB9hbSEcRJjezeb+HGARhJgmgHoWoDTuG96X6zNYxqGMjP59c4B0slHSzrUme12HYTjBdmEjMMxvbdswTNN7BpDuzHRrIGU1qfTGnsYeuaGjC+KRzvRbFiCEuQhYqlXy1u2tEIy6CXYzmXTSiMEgpnPQ7Ov9Km9XQphuwsh7dEGAKJCKzpe+TiLKlLTHbJUqHvNHVTFSFyoqjdPbFXWnVh6FRrtWrUEQZbdrgUd+/E3tNMQR5lsHIHgaj/B8NGcXMkVGUQVsG1ymdE6Znh/OhEVwbQ/+C8RFzKyJLB+qEJSSIxN2VCtDGaO80U6Rl2W4IrtkWLWdiDHnc79dRJGhUQaRqkXHpoZ9qnI1MhfOQpcvfmGCva7m+vk4JQm3zbRVfeQtzC1qhemB3uFtggcThj8OlpK5crXidjBNYxZQKXcKyV/mVCaCOvaEnXsO+zq86YCwQddjLNSqF11RpM/DVo62JLWgQqscNgiPuIvD5SVNdlGAM1ddGXx0/S/Kr08tim2URlXppWmRokl98kIOPK3mdm+9L2yNBAJgJ8aYBwxoFw+3NValM3xWhcYYPwcaKwNxsgwzetsJ2JZq1ZdFK9qotC1ay79sytZKdtmW+U4jwu7md70SX2U47WyWlOGkz70QrJrrhOyy4BHVSk+Wt5n7Tz/L8fFqJkj/l9hf4V0aKZUfU8xj83dqaWrdho9WCwMyi6BxTCeoyz5pUEcVFw+eJB6IYwcdS0TJ5X1HMkhix1btpy31Nos6RJatotimdnMtplZUh7bLF9FtEYIqseEV7Wjj0OWde94bHHs+cCeqxbhlBwciKQ0NrVTUiTvN+Ggo7KJBIyni8hjcnYgXq4C8azHJHL7qwN93Ymy7sshu77MLOu7HzLqzqxqpOe0Hwbvi4WMhXoELuNdbQJVhU3hYx3+o7u6yt6kDBmbgDnui7bqDEYnF5h3xjbvuhNOZ1sO7ohrtE4o6tWmvue+xtgE8aYPMwBVcfby2OQSq6Y9yEry56y+Yq7+quVkKKlT4dEjxP16sKK+sspJJ1GsR9NIh1GuR9NMh1GtR9NLTLmoqGm/to+GtLA+O4VhHHRHQvP64WxdCKRysu7x9jBVh8N1cUrdNpAL8s+wurSJIL++v2HBaJwMqrBf19J5a2cFe0EzhrA2ddQJ+0zSxymEa34DdN7E2P0hawSB6dtrawC8seVvW3KFhMATTtvtzrdrDPU9HC7vdjl23ssg/bNB2x3R7RNkisCliXIcO+KVZXsfro3bNm+AR9NLUT+vhyL+8bsY++X6Xvd9LN8Env8Ml9hu+j71fp3cMbeo+/EmvXWpGN67att+DqEsmUTLiDBW2dXtR7Pge3qEUcwLNolhjg4sv83L2wdElmm2IMEH0rahZC2ilGzd6H1OB1b60uPUOjav8+qsx1f711pUbRrVLcU2XLbea81W/kQ1RY6Hv4QQuN/4y+p2v16cteYR62DvTliTH3UDeP9OXp+oGM2Ws98b/YLboNF/+X4Ri+L3lsjmEOEY3D5hwEdpYHzhmI2JqMDqLUCPT79bJ3x/TiCbRyl1cJxeGCp/istMxbLxyFQRzo86Z+DRaCPoM0pq0FZujtDQs/tn5LxQtkjVU/vmJ/8e6mZBHPU7xjrGxnPNo7wCxe4jTPnichiRWPsLBKGWQTfTquklZgTA2yOlZReepnNx75RXle+g5chkWV7n5d9uJaYsWD/z3SU5Se9ko9SoI8M9cexAnoYvAE+uTHnGK9ZK49CJdj5a4vPXI8eeSZvvTIYYHlpjJvH8v3Do6Tvcj74M9Pcv1WokcaunkWjuyhO+pGfKlfGgYRwccrfttD3VoHpPEKiK2eMQWwVLvw5VkfgvEAT98Ubbtt9Q366s2LPNOXPoASERC0SkUmhE7p7Mb8lGDHcYyFoX47mY1HhwdulK/6GVmCkJBk01qnA0x3NsAOF16BHo/q/QsZUl9ht1FT9DNZGXR6hy/7oXgk6jHaIv0TR7sXpxzgPqoIbs1vdRZvoqvz0oLGvK4ebE2aP8K1G2+no8l4NPnzeOubo/IHuk8Hnw9+N3g0mAwOB98M/jA4HpwN3AEb/HPwr8G/Nz/ZfLw53pwW0I8/Kjm/HdQ+m1//F7BpoXY=</latexit>parameterlatentobservableaugmented dataapproximate likelihood ratio13

Fig. 2.
Illustration of diﬀerent approaches to train surrogates for the likelihood ratio
function and the role of joint likelihood ratio and joint score. Figures taken from Ref. [7].
in the likelihood ratio trick and the CARL inference method, a classiﬁer
Top left:
decision function (red) has to be learned from binary labels that are zero or one (green
dots). Top right: the joint likelihood ratio provides noisy, but unbiased labels (green)
for the likelihood ratio function to be learned (red). Bottom left: the joint score adds
noisy, but unbiased gradient information (arrows). Bottom right: the RASCAL and
ALICES methods combine three orthogonal pieces of information (dots with arrows),
allowing a neural network to learn the likelihood ratio function (surface) more eﬃciently.

on the observed data and the results of past iterations. Diﬀerent algorithms
have been proposed, some of which are based on neural surrogates for the
likelihood [64, 65], while others target the likelihood ratio [53, 66]. While
active learning is often phrased in a Bayesian framework, these methods

02468x0.00.20.40.60.81.0ye, s(x|0,1)s(x|0,1)xep(x|=0=0.0)xep(x|=1=0.6)02468x012345r(xe,ze|0,1), r(x|0,1)r(x|0,1)r(x,z|0,1), xp(x|=0)r(x,z|0,1), xp(x|=1)02468x0.00.10.20.30.40.50.6p(x|)p(x|=0.8)p(x|=0.0)p(x|=0.8)p(xe,ze|=0), t(xe,ze|=0)1.00.50.00.51.03.002.752.502.252.001.751.501.251.00logp(x|), logp(xe,ze|)logp(x=4|)logp(x=4,z|), t(x=4,z|)x024681.00.50.00.51.0logr(x|,1)1510505x024681.00.50.00.51.0logr(x|,1)151050514

Johann Brehmer and Kyle Cranmer

can be applied equally well to frequentist inference [67–69].

Active learning maximizes sample eﬃciency for a particular observed
data set. This is somewhat at odds with the goal of amortization, which
aims to train a surrogate model that works well for multiple diﬀerent data
sets. While active learning can be very powerful in cases with few observed
data points, it is less crucial in particle physics use cases with a large number
of expected or observed events.

3. Inference with suﬃcient summary statistics

The methods discussed in the previous section tackle simulation-based in-
ference by learning the likelihood or likelihood ratio function in the high-
dimensional data space. While these methods are powerful, they require
an analysis workﬂow that is substantially diﬀerent from the high-energy
physics standards. This makes modiﬁcations to the usual software pipeline,
careful cross checks, and some changes to the way that systematic uncer-
tainties are handled necessary (more on this later).

A more incremental change to the current analysis workﬂow is to con-
struct powerful summary statistics in a systematic way. After the high-
dimensional data x for an event is compressed to one or a few of these
summary statistics, it can be analyzed in the usual, histogram-centric way
described in Sec. 1.2. The analysis workﬂow remains largely unchanged,
except that instead of kinematic variables (like the transverse momentum
of a jet) more complicated variables (like the output of a neural network)
are analyzed. No essential modiﬁcations to the software pipeline or the
treatment of systematic uncertainties are necessary in this approach.

So how do we ﬁnd these optimal summary statistics? There are two
broad strategies. The ﬁrst is to try to learn a summary statistic as an in-
termediate step in the end-to-end analysis of the data where the objective
function is, for instance, an expected signiﬁcance or expected limit as in
INFERNO [70] or neos [71]. This is connected to the recent discussions
around diﬀerentiable programming. Optimizing an experiment-level objec-
tive is computationally expensive, and not actually necessary since the data
are independent and the likelihood factorizes as in Eq. 2.d
dIf we knew the full likelihood p(D|θ, ν) in Eq. (2), where θ are parameters of interest and
ν are nuisance parameters, the ﬁnal test statistic we would target would be the proﬁle
likelihood ratio λ(θ) = p(D|θ, ˆˆν)/p(D|ˆθ, ˆν), where ˆθ and ˆν are the maximum likelihood
estimator (MLE) and ˆˆν is the conditional maximum likelihood estimator (CMLE) [72].
The numerator and denominator of the likelihood of the likelihood ratio factorize across
experiments, but the values for the MLE and CMLE couple all of the events in the dataset

15

Alternatively, we can look for suﬃcient statistics that allow us to ap-
proximate the per-event likelihood, and there are many advantages to cast-
ing the learning problem in terms of individual events. While our expo-
sition will focus on the parameters of interest, one can consider θ to also
include nuisance parameters, and proﬁling the nuisance parameters would
then happen down-stream in the statistical inference pipeline and after the
amortized learning stage described below.

The key to learning optimal observables is to consider a local approxi-
mation of the likelihood function in the parameter space. In other words,
assume that we are studying parameters θ that are close to some chosen ref-
erence parameter point θref (imagine this, for instance, to be the Standard
Model). Then one can show [60, 73, 74] that the most powerful observable
for measuring θ is the score

t(x) =

∇θ log p(x

(cid:12)
(cid:12)
θ)
(cid:12)θref
|

.

(10)

This gradient vector contains one component per parameter of interest. In
the neighborhood of θref, the score components are the suﬃcient statistics:
analyzing just t(x) will yield just as much information about θ than analyz-
ing the high-dimensional data x. By using the score as summary statistics,
we are therefore not throwing away any information, at least as long we
focus on parameters close to θref. Further away from the reference point,
the score components may no longer be suﬃcient and a histogram-based
analysis will no longer be optimal.

Unfortunately, like the likelihood function itself, the score is in general
intractable. In the following we will present two methods that allow us to
estimate it.

3.1. An approximation: parton-level Optimal Observables

Remember that the Matrix-Element Method approximated the likelihood
function by summarizing the eﬀect of shower and detector with a transfer
function. Parton-level Optimal Observables (OO) [75–77] use the same

D. However, this coupling of events through the MLE and CMLE can be postponed and
based on a learned surrogate for the per-event likelihood or likelihood ratio function as
discussed in the previous section.

16

Johann Brehmer and Kyle Cranmer

approximation to compute the score:

ˆtOO(x) =

(cid:18)(cid:90)

∇θ log
(cid:90)

dzp ˆptf (x
|

zp) p(zp|

θ)

(cid:19)(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)θ=θref

dzp ˆptf (x
|
(cid:90)

=

dzp ˆptf (x

|

zp)

∇θp(zp|
zp) p(zp|

θref)

θref)

.

(11)

In practice, this method is usually applied to processes with easily iden-
tiﬁable ﬁnal-state particles like leptons and photons.
In that case, the
reconstructed particle properties are simply identiﬁed with the parton-level
four-momenta, ˆp(x
|

zp i).
While this approach elegantly uses our knowledge of matrix elements, it
requires substantial approximations to the underlying process, and taking
into account shower or detector eﬀects in the observable detection leads to
a large computational cost for each analyzed event.

i δ4(xi −

zp) = (cid:81)

3.2. Learning the score

The SALLY method [7, 58, 60] trains a neural network to learn the (in-
tractable) score function t(x) including the full detector simulation. As in
the methods discussed in Sec. 2.4, the ﬁrst step is running the simulator
chain a number of times, now using the reference parameter point θref as
θref) deﬁned
input. In addition to the observation x, the joint score t(x, z
|
in Eq. (9) is computed and stored for every simulated event. In a next step,
a machine learning model like a neural network ˆt(x) is trained to minimize
2. It can be shown that the neural
the mean squared error
|
network will ultimately converge to the score function given in Eq. (10).
After training, the neural network thus deﬁnes the locally most powerful
observables for the measurement of θ and can be used in a standard analysis
pipeline.

ˆt(x)
|

t(x, z)

−

In addition to deﬁning locally optimal observables, neural score estima-
tors can also be used to compute the Fisher information, a versatile tool
for sensitivity forecasting, cut optimization, and feature selection [78–80].

4. Diagnostics, calibration, and systematic uncertainties

The analysis methods described in the previous sections contain some parts,
in particular neural networks, that are not always easy to interpret and

17

can be harder to debug than a standard analysis based on histograms of
traditional observables. It is important to make sure that we can trust the
results and quantify any systematic uncertainties. This is very similar to
basing the downstream statistical analysis on histograms of neural network
outputs.

Mainly we have to correctly diagnose model misspeciﬁcation. Inference
is always performed within the context of a statistical model, but if that
model is not correct for a task at hand, the inference results will be mean-
ingless or misleading. In the simulation-based inference methods we discuss,
two types of models appear, both of which are prone to misspeciﬁcation:
the simulator itself and machine learning surrogates. This is similar to the
distinction between the full simulation and the use of an analytic function
(surrogate) to model a smooth mγγ spectrum in a H

γγ analysis.

Misspeciﬁcation of the simulator occurs when MadGraph, Pythia,
Geant4 etc. do not model the physics of LHC collisions accurately enough.
This problem also plagues classical histogram-based analyses, but may be
easier to diagnose and calibrate when only a single variable is studied than
in the multivariate analysis methods described here [81]. It is usually ad-
dressed by varying the parameters of the simulator, which introduces nui-
sance parameters α with unknown true values, and proﬁling over them in
the statistical analysis. We can also use ideas from domain adaptation and
algorithmic fairness to make the neural network less sensitive to variations
in the nuisance parameters [70, 82, 83]. If possible, however, it is concep-
tually cleaner to explicitly include the eﬀect of nuisance parameters in the
likelihood model ˆp(x
θ, α) and to use well-deﬁned and estab-
lished statistical procedures like proﬁling to take them into account in the
downstream statistical analysis.

θ, α) or ˆr(x

|

|

→

Misspeciﬁcation of the surrogate model occurs when the neural network
does not approximate the true likelihood or likelihood ratio perfectly. This
is analogous to a falling exponential for the mγγ spectrum not ﬁtting the
simulated data perfectly. Typical reasons are the limited number of train-
ing samples, insuﬃcient network capacity, or an ineﬃcient minimization
of the loss function. A common issue is that the classiﬁer ˆs(x
θ) will be
|
roughly one-to-one with the true likelihood ratio, but not exactly. This
can be ﬁxed with the calibration procedure used in CARL and described
in Ref. [41]. One can protect against more severe deﬁciencies by calibrat-
ing the inference results with toy simulations from the simulator: for every
parameter point, we can run the simulator to construct the distribution of
the likelihood or likelihood ratio. Ultimately this leads to conﬁdence sets

18

Johann Brehmer and Kyle Cranmer

with a coverage guarantee (assuming the simulator is accurate) as in the
Neyman Construction, i. e. that will never overly optimistic [7, 41]. This
toy Monte Carlo approach can require a large number of simulations, espe-
cially for high-dimensional parameter spaces. For an in-depth discussion of
calibration and the Neyman construction, see Ref. [7].

There are other, less computationally expensive tools to diagnose mis-
speciﬁcation of the surrogate model. These include oﬀ-the-shelf uncertainty
quantiﬁcation methods for neural networks such as ensemble methods and
Bayesian neural networks. In addition, one can train classiﬁers to distin-
guish data from the surrogate model and the true simulator [41], check cer-
tain expectation values of estimators of the likelihood, likelihood ratio, or
score against a known true value [7], vary unphysical reference distributions
that should leave the inference result invariant [41], and compare the distri-
bution of network outputs against known asymptotic properties [72, 84, 85].
Passing these closure tests does not guarantee that a model is correct, but
failing them is an indication of an issue.

5. Probabilistic programming

def

e l s e :

z 2 t = rand ( )
x = z1 + z 2 t

z 2 f = rand ( )
z 3 f = rand ( )
x = z1 + z 2 f + z 3 f

s t o c h a s t i c f u n c t i o n ( ) :
z1 = rand ( )
i f z1 < 0 . 5 :

We will now switch gears and re-
view probabilistic programming, a
set of methods that are related to,
but diﬀerent from the simulation-
based inference techniques discussed
in the previous sections. Computer
programs that involve random num-
bers and do not have determinis-
tic input-output relationships can be
thought of as specifying a probabil-
ity distribution p(output
It
input).
|
is natural to think of simulators in
this way, where the parameters of the simulator are identiﬁed with θ and
the output of the simulator is identiﬁed with x. Furthermore, the values
of the random variables and the other intermediate quantities inside the
computer program can be thought of as latent variables z. The structure
of the space of latent variables can also be complex. Consider the simple
example in Fig. 3, where the list of latent variables is either (z1, z2t) or
(z1, z2f, z3f) and depends on the control ﬂow of the program.

Illustrative example of a stochas-

Fig. 3.
tic function.

return x

It can be useful to think of the latent space of such a program as the

19

space of its stack traces along with the values of all the variables. Take
a moment to think about the complexity of the typical simulation chain
going from matrix elements to parton shower and hadronization through
the detector simulation. These programs have enormous, highly structured
latent spaces. The probability that the program returns x corresponds to
integrating over all the possible executions of the program that could return
x; as we argued in the introduction of this review, this is intractable for
moderately complicated programs.

We saw in Sec. 2 how we can use machine learning surrogates to approx-
imate the likelihood p(x
θ), where the dependence
θ) or likelihood ratio r(x
|
|
on z has been marginalized or integrated out. One of the advantages of
those approaches is that the surrogate models don’t attempt to capture the
θ). But what
complexity of the latent state or the joint distribution p(x, z
|
if we also want to infer something about the latent variables that describe
what is going on inside the simulator?

→

In HEP it is common to inspect the Monte Carlo truth record (i.e. z) for
some set of events that satisfy some cuts to gain insight into why something
happens. For instance, we might want to know what happened inside the
simulation of pp
jj events that led to very large missing transverse
energy, or why a jet faked a muon. To study this, we often ﬁlter a large
set of events (simulated with a particular parameter setting θ), ﬁlter those
events that satisfy the cuts, and then look at histograms of some particular
Monte Carlo truth quantities f (z) (for example, to inspect if there was a
semi-leptonic b-decay or punch-through in the calorimeter). That familiar
procedure is approximating the posterior distribution of f (z) given that
the event generated with parameter θ passes the cuts, which we can write
cuts(x) = True, θ). Similarly, the unﬁltered sample
symbolically as p(f
can be thought of as samples from the prior p(f

θ).

|

The problem with the traditional approach is that the ﬁlter eﬃciency
can be very low, and very few of the prior samples may survive to estimate
the posterior. This is similar to the ineﬃciency found in Approximate
Bayesian Computation, which asks for the simulator to generate an a sim-
ulated x close to the observed xobs. This motivates an additional language
construct that allows for conditioning on random variables, which charac-
terizes probabilistic programming. Probabilistic programming languages
(PPLs) extend general-purpose programming languages with constructs to
do sampling and conditioning of random variables [86, 87]e.

|

eOften it is assumed that the quantity being conditioned on is directly sampled from a
distribution with a known likelihood (conditioned on the latent state of the simulator

20

Johann Brehmer and Kyle Cranmer

The additional language constructs express the concept of sampling and
conditioning, but they do not necessarily specify how that is implemented.
It is best to decouple the model speciﬁcation (the probabilitic program or
simulator code) from the inference algorithm—much as we use a tool like
HistFactory [88] to create a statistical model and then use RooStats [89] to
provide generic statistical inference algorithms. Various inference engines
have been developed implementing diﬀerent inference strategies such as
Importance Sampling [90] and specializations of Metropolis-Hastings [91]
that are compatible with the complex latent space structure associated to
stack traces.
In general, the inference algorithms can be thought of as
hijacking the random sampling inside of the simulator code to guide the
simulator towards a certain output.

Early research in probabilistic programming required coding the simula-
tor in special-purpose languages, which is not an attractive option for HEP
as we have decades of work invested in our simulation code bases. Recently,
however, the Etalumis project developed PPX, a cross-platform probabilistic
execution protocol that allows an inference engine to control a simulator in a
language-agnostic way [90, 92]. The Etalumis team integrated PPX into the
SHERPA simulator and a simpliﬁed calorimeter simulation to demonstrate
probabilistic programming with a real-world simulator (see Fig. 4).

The bulk of the probabilistic programming literature is phrased in terms
of Bayesian statistics. The posterior distribution p(z
x, θ) is of no concep-
|
tual problem for an ardent, frequentist particle physicists, because while z
θ)
may be latent, it is a random variable and the joint distribution p(x, z
is perfectly well deﬁned. However, if one wanted to use probabilistic pro-
gramming to infer the parameters of the simulation θ, then one would need
to include a prior p(θ) and sample from that distribution at the begin-
ning of the program. The result would be a probabilistic program for the
joint model p(x, z, θ) = p(x, z
θ)p(θ), and one would then condition on x to
|
obtain samples from the posterior p(θ, z

x) or the the marginal p(θ

x).

|

|

|

at that point in the execution). Sometimes this is reasonable, but sometimes this as-
sumption is violated and we want to condition on some more complicated function of
the random variables with an intractable density. In that setting, one typically needs to
introduce some tolerance or kernel. In this way, probabilistic programming can be seen
as a more sophisticated and computationally eﬃcient way of implementing Approximate
Bayesian Computation.

21

Fig. 4. An illustration of a Python-based probabilistic programming system’s inference
engine controlling the SHERPA event generator through the PPX protocol. Figure taken
from Ref. [92].

6. Software and computing

The methods described in this review are closely connected to the soft-
ware and computing challenges of high-energy physics, particularly when
we think about the high-luminosity LHC.

Initial results from phenomenological studies indicate that these new
machine-learning based approaches provide substantial improvements in
sensitivity to traditional approaches, but generating the training data is
computationally expensive. However, with some additional work, the aug-
mented data described in Sec. 2.4 can reduce the amount of simulated
data needed by orders of magnitude. The Python library MadMiner [80]
implements most of the machine learning–based algorithms discussed in
Secs. 2 and 3. It wraps around MadGraph, Pythia, and Delphes and thus
automates the entire pipeline for a typical phenomenological studyf . The
approach is compatible with full simulation like Geant4 as the necessary
information can just be passsed through the detector simulation similar
to the weights used to assess uncertainty in the parton distribution func-

f The sbi package [93] implements many simulation-based inference methods, in particu-
lar for Bayesian inference, in a problem-agnostic way, but does not provide any interface
to particle physics simulators yet.

SimulatorProbabilistic programming systemSHERPA (C++)PPL + (Python)22

Johann Brehmer and Kyle Cranmer

tions. However, this still requires a modest investment in the experiments’
simulation software.

The use of the learned likelihood ratio for reweighting event samples has
the potential for a signiﬁcant reduction in simulation costs as the reweight-
ing factor can often be learned on parton-level or particle-level data without
running the full simulation or reconstruction on large samples of simulated
data with varied parameter settings. The CARL technique is being ex-
plored within ATLAS and integrated into the ATLAS software framework
for this purpose [55].

Probabilistic programming also has the potential to address the compu-
tational resources needed for simulation at the high-luminosity LHC. Signs
of new physics typically would hide in tails of background distributions,
which are computationally expensive to populate with naive sampling ap-
proaches. HEP collaborations regularly use a form of importance sampling
where the parton-level phase space is sliced (e. g. slices in the transverse
momentum of outgoing partons to ﬁll the high-pT in the process pp
jj).
In this case, one merges several individual samples of simulated events
weighted by the Ns/σs, where Ns is the number simulated samples and σs
is total cross-section for that slice. However, this approach does not work
for eﬃciently sampling regions of phase space that do not correspond to
simple regions in the parton phase space. For example, if we want to popu-
late the regions of phase space where standard QCD jets fake a boosted top
tagger based on a deep neural network [94] the fake rate is roughly 10−3 and
much of the relevant ﬂuctuations happen in the parton shower and are not
reﬂected in the parton-level phase space. Event generators instrumented
with probabilitic programming constructs oﬀers the potential to eﬃciently
sample these complicated regions of phase space, which is being explored
with a simpliﬁed parton shower known as Ginkgo [95].

→

In the long term, we should not treat the simulation chain as a black
box, but open them and begin to integrate automatic diﬀerentiation and
probabilistic programming capabilities in them as that will enable more
powerful and sample-eﬃcient inference algorithms [14].

7. Summary

Particle physicists have a suite of simulators at their disposal that can model
essentially all aspects of particle collisions with impressive ﬁdelity. These
tools use Monte-Carlo methods to generate events, with the distribution of
outputs depending on the parameters of the physics model. However, we

23

cannot use these tools directly for inference because we cannot evaluate the
probability the simulator to generate a speciﬁc observed event. Because the
likelihood is intractable, we can not directly ﬁt for the most likely parameter
points or calculate exclusion limits from observed data. Historically, this
challenge has been overcome by reducing the high-dimensional event data
to one or two kinematic variables and to use histograms or analytic func-
tions to model the distribution of these observables. This makes inference
possible, but often degrades the sensitivity of the analysis.

Here we reviewed simulation-based (or likelihood-free) inference meth-
ods that allow us to infer parameters based on high-dimensional event data.
These methods are closely connected to other important tasks in HEP
and provide the ability to reweight events [47, 54, 55], tune shower and
detector-simulation parameters to data [54], unfold distributions [56], and
anomaly detection [57]. An important driver of these algorithms are the
rapidly increasing capabilities of machine learning, which let us analyze
high-dimensional data eﬃciently.
In addition, extracting matrix-element
information from the simulator and using it to augment training data can
drastically reduce the number of simulations we need to run. We presented
algorithms based on these two ideas in which a neural network is trained as
a surrogate for the likelihood or the likelihood ratio function or deﬁnes op-
timal observables, which can then be used in a traditional histogram-based
analysis.

In ﬁrst phenomenological LHC studies, these algorithms have been ap-
plied to Higgs precision measurements in vector boson fusion [7], in W H
production [96], and in t¯tH production [80], as well as ZW measure-
ments [63] and the search for massive resonances decaying into dijets [97].
The new machine learning–based techniques consistently led to more sensi-
tive analyses than traditional histogram-based approaches such as simpli-
ﬁed template cross-section measurements [96]. With a range of diagnostic
tools and ideas for uncertainty quantiﬁcation available and software pack-
ages making the application of these methods easier, the application of
these new simulation-based inference techniques to data collected at the
LHC experiments seems imminent.

Acknowledgments

We want to thank our collaborators Zubair Bhatti, Sally Dawson, Irina
Espejo, Joeri Hermans, Samuel Homiller, Felix Kling, Gilles Louppe, Sid-
dharth Mishra-Sharma, Juan Pavez, Sinclert Perez, Tilman Plehn, and

24

Johann Brehmer and Kyle Cranmer

Markus Stoye. This work was supported by the U. S. National Science Foun-
dation (NSF) under the awards ACI-1450310, OAC-1836650, and OAC-
1841471. We are grateful for the support of the Moore-Sloan data science
environment at NYU.

References

[1] F. James and M. Roos, Minuit: A System for Function Minimization and

Analysis of the Parameter Errors and Correlations, Comput. Phys.
Commun. 10 (1975) 343.

[2] J. Alwall, R. Frederix, S. Frixione, V. Hirschi, F. Maltoni, O. Mattelaer,

H. S. Shao, T. Stelzer, P. Torrielli, and M. Zaro, The automated
computation of tree-level and next-to-leading order diﬀerential cross
sections, and their matching to parton shower simulations, Journal of High
Energy Physics 2014 (2014) 7, 79, arXiv:1405.0301 [hep-ph].
[3] T. Gleisberg, S. Hoeche, F. Krauss, M. Schonherr, S. Schumann,

F. Siegert, and J. Winter, Event generation with SHERPA 1.1, JHEP 02
(2009) 7, arXiv:0811.4622 [hep-ph].

[4] T. Sj¨ostrand, S. Ask, J. R. Christiansen, R. Corke, N. Desai, P. Ilten,

S. Mrenna, S. Prestel, C. O. Rasmussen, and P. Z. Skands, An Introduction
to PYTHIA 8.2, Comput. Phys. Commun. 191 (2015) 159,
arXiv:1410.3012 [hep-ph].

[5] G. Corcella, I. G. Knowles, G. Marchesini, S. Moretti, K. Odagiri,

P. Richardson, M. H. Seymour, and B. R. Webber, HERWIG 6: An Event
generator for hadron emission reactions with interfering gluons (including
supersymmetric processes), JHEP 01 (2001) 10, arXiv:0011363 [hep-ph].
[6] T. G. Collaboration, Geant4 – a simulation toolkit, Nuclear Instruments

and Methods in Physics Research Section A: Accelerators, Spectrometers,
Detectors and Associated Equipment 506 (2003) 3, 250.

[7] J. Brehmer, K. Cranmer, G. Louppe, and J. Pavez, A guide to constraining
eﬀective ﬁeld theories with machine learning, Physical Review D 98 (2018)
5, 052004, arXiv:1805.00020.

[8] A. J. Barr and C. G. Lester, A Review of the Mass Measurement

Techniques proposed for the Large Hadron Collider, J. Phys. G 37 (2010)
123001, arXiv:1004.2732 [hep-ph].

[9] P. Jackson, C. Rogan, and M. Santoni, Sparticles in motion: Analyzing
compressed SUSY scenarios with a new method of event reconstruction,
Phys. Rev. D 95 (2017) 3, 035031, arXiv:1607.08307 [hep-ph].

[10] P. J. Diggle and R. J. Gratton, Monte Carlo Methods of Inference for
in Journal of the Royal Statistical Society:

Implicit Statistical Models,
Series B (Methodological). 1984.

[11] K. Cranmer, Kernel estimation in high-energy physics, Computer Physics

Communications 136 (2001) 3, 198, arXiv:hep-ex/0011057.

[12] D. B. Rubin, Bayesianly Justiﬁable and Relevant Frequency Calculations

for the Applied Statistician, The Annals of Statistics 12 (1984) 4, 1151.

25

[13] M. A. Beaumont, W. Zhang, and D. J. Balding, Approximate Bayesian
computation in population genetics, Genetics 162 (2002) 4, 2025.

[14] K. Cranmer, J. Brehmer, and G. Louppe, The frontier of simulation-based

inference,
Academy of Sciences, 2020. arXiv:1911.01429 [stat.ML].

in Proceedings of the National Academy of Sciences. National

[15] J. Brehmer, K. Cranmer, I. Espejo, F. Kling, G. Louppe, and J. Pavez,

Eﬀective LHC measurements with matrix elements and machine learning,
in 19th International Workshop on Advanced Computing and Analysis
Techniques in Physics Research: Empowering the revolution: Bringing
Machine Learning to High Performance Computing (ACAT 2019)
Saas-Fee, Switzerland, March 11-15, 2019. 2019. arXiv:1906.01578.
in Proceedings, 2011

[16] K. Cranmer, Practical Statistics for the LHC,

European School of High-Energy Physics (ESHEP 2011): Cheile Gradistei,
Romania, September 7-20, 2011. 2015. arXiv:1503.07622 [physics.data-an].
[17] K. Kondo, Dynamical Likelihood Method for Reconstruction of Events with

Missing Momentum: I. Method and Toy Models, Journal of the Physical
Society of Japan 57 (1988) 12, 4126.

[18] V. M. Abazov and Others, A precision measurement of the mass of the top

quark, Nature 429 (2004) 6992, 638, arXiv:hep-ex/0406031.

[19] P. Artoisenet and O. Mattelaer, MadWeight: Automatic event reweighting
with matrix elements, Proceedings of Science CHARGED200 (2008) 25.
[20] Y. Gao, A. V. Gritsan, Z. Guo, K. Melnikov, M. Schulze, and N. V. Tran,
Spin determination of single-produced resonances at hadron colliders,
Physical Review D - Particles, Fields, Gravitation and Cosmology 81
(2010) 7, 75022, arXiv:1001.3396 [hep-ph].

[21] J. Alwall, A. Freitas, and O. Mattelaer, Matrix element method and QCD

radiation, Physical Review D - Particles, Fields, Gravitation and
Cosmology 83 (2011) 7, 74010, arXiv:1010.2263 [hep-ph].

[22] S. Bolognesi, Y. Gao, A. V. Gritsan, K. Melnikov, M. Schulze, N. V. Tran,
and A. Whitbeck, On the spin and parity of a single-produced resonance at
the LHC, Phys. Rev. D86 (2012) 95031, arXiv:1208.4018 [hep-ph].
[23] P. Avery, D. Bourilkov, M. Chen, T. Cheng, A. Drozdetskiy, J. S. Gainer,
A. Korytov, K. T. Matchev, P. Milenovic, G. Mitselmakher, M. Park,
A. Rinkevicius, and M. Snowball, Precision studies of the Higgs boson decay
channel H→ZZ→4l with MEKD, Physical Review D - Particles, Fields,
Gravitation and Cosmology 87 (2013) 5, 55006, arXiv:1210.0896 [hep-ph].
[24] J. R. Andersen, C. Englert, and M. Spannowsky, Extracting precise Higgs
couplings by using the matrix element method, Physical Review D -
Particles, Fields, Gravitation and Cosmology 87 (2013) 1, 15019,
arXiv:1211.3011 [hep-ph].

[25] J. M. Campbell, R. K. Ellis, W. T. Giele, and C. Williams, Finding the

Higgs boson in decays to Zγ using the matrix element method at
next-to-leading order, Physical Review D - Particles, Fields, Gravitation
and Cosmology 87 (2013) 7, 73005, arXiv:1301.7086 [hep-ph].

[26] P. Artoisenet, P. de Aquino, F. Maltoni, and O. Mattelaer, Unravelling t¯th
via the Matrix Element Method, Phys. Rev. Lett. 111 (2013) 9, 91802,

26

Johann Brehmer and Kyle Cranmer

arXiv:1304.6414 [hep-ph].

[27] J. S. Gainer, J. Lykken, K. T. Matchev, S. Mrenna, and M. Park, The

Matrix Element Method: Past, Present, and Future, in Proceedings, 2013
Community Summer Study on the Future of U.S. Particle Physics:
Snowmass on the Mississippi (CSS2013): Minneapolis, MN, USA, July
29-August 6, 2013. 2013. arXiv:1307.3546.

[28] D. Schouten, A. Deabreu, and B. Stelzer, Accelerated matrix element

method with parallel computing, Computer Physics Communications 192
(2015) 54, arXiv:1407.7595 [physics.comp-ph].

[29] T. Martini and P. Uwer, Extending the Matrix Element Method beyond the
Born approximation: calculating event weights at next-to-leading order
accuracy, Journal of High Energy Physics 2015 (2015) 9, 83,
arXiv:1506.08798 [hep-ph].

[30] A. V. Gritsan, R. R¨ontsch, M. Schulze, and M. Xiao, Constraining

anomalous Higgs boson couplings to the heavy-ﬂavor fermions using matrix
element techniques, Physical Review D 94 (2016) 5, 55023,
arXiv:1606.03107 [hep-ph].

[31] T. Martini and P. Uwer, The Matrix Element Method at next-to-leading

order QCD for hadronic collisions: Single top-quark production at the LHC
as an example application, arXiv:1712.04527 [hep-ph].

[32] M. Kraus, T. Martini, and P. Uwer, Predicting event weights at

next-to-leading order QCD for jet events deﬁned by 2 → 1 jet algorithms,
arXiv:1901.08008 [hep-ph].

[33] D. E. Soper and M. Spannowsky, Finding physics signals with shower
deconstruction, Physical Review D - Particles, Fields, Gravitation and
Cosmology 84 (2011) 7, 74002, arXiv:1102.3480 [hep-ph].

[34] D. E. Soper and M. Spannowsky, Finding top quarks with shower

deconstruction, Physical Review D - Particles, Fields, Gravitation and
Cosmology 87 (2013) 5, 54012, arXiv:1211.3140 [hep-ph].

[35] D. E. Soper and M. Spannowsky, Finding physics signals with event

deconstruction, Physical Review D - Particles, Fields, Gravitation and
Cosmology 89 (2014) 9, 94005, arXiv:1402.1189 [hep-ph].

[36] C. Englert, O. Mattelaer, and M. Spannowsky, Measuring the Higgs-bottom

coupling in weak boson fusion, Phys. Lett. B756 (2016) 103,
arXiv:1512.03429 [hep-ph].

[37] L. Holmstrom, S. Sain, and H. Miettinen, A New multivariate technique for

top quark search, Comput. Phys. Commun. 88 (1995) 195.

[38] D. J. Rezende and S. Mohamed, Variational inference with normalizing

ﬂows, 32nd International Conference on Machine Learning, ICML 2015 2
(may, 2015) 1530, arXiv:1505.05770.

[39] G. Papamakarios, E. Nalisnick, D. Jimenez Rezende, S. Mohamed, and

B. Lakshminarayanan, Normalizing Flows for Probabilistic Modeling and
Inference, arXiv:1912.02762 [stat.ML].

[40] K. Cranmer and G. Louppe, Unifying generative models and exact

likelihood-free inference with conditional bijections, J. Brief Ideas (2016) .
http://doi.org/10.5281/zenodo.198541.

27

[41] K. Cranmer, J. Pavez, and G. Louppe, Approximating Likelihood Ratios

with Calibrated Discriminative Classiﬁers, arXiv:1506.02169.
[42] P. Baldi, K. Cranmer, T. Faucett, P. Sadowski, and D. Whiteson,

Parameterized neural networks for high-energy physics, European Physical
Journal C 76 (2016) 5, 235, arXiv:1601.07913 [hep-ex].

[43] M. Bellagente, A. Butter, G. Kasieczka, T. Plehn, A. Rousselot,

R. Winterhalder, L. Ardizzone, and U. K¨othe, Invertible Networks or
Partons to Detector and Back Again, arXiv:2006.06685 [hep-ph].
[44] B. Nachman and D. Shih, Anomaly Detection with Density Estimation,

Phys. Rev. D 101 (2020) 75042, arXiv:2001.04990 [hep-ph].
[45] R. M. Neal, Computing likelihood functions for high-energy physics

experiments when distributions are deﬁned by simulators with nuisance
parameters, in PHYSTAT LHC Workshop on Statistical Issues for LHC
Physics, PHYSTAT 2007 - Proceedings. 2008.
http://cds.cern.ch/record/1099977/files/p111.pdf.

[46] Y. Fan, D. J. Nott, and S. A. Sisson, Approximate Bayesian computation
via regression density estimation, Stat 2 (dec, 2013) 34, arXiv:1212.1479
[stat.CO].

[47] “NIPS 2016 Keynote: Machine learning & likelihood free inference in

particle physics.”.

[48] G. Louppe, K. Cranmer, and J. Pavez, Carl: a Likelihood-Free Inference

Toolbox, The Journal of Open Source Software 1 (2016) 1, 11.

[49] S. Mohamed and B. Lakshminarayanan, Learning in Implicit Generative

Models, arXiv:1610.03483.

[50] O. Thomas, R. Dutta, J. Corander, S. Kaski, and M. U. Gutmann,
Likelihood-free inference by ratio estimation, arXiv:1611.10242.
[51] M. U. Gutmann, R. Dutta, S. Kaski, and J. Corander, Likelihood-free

inference via classiﬁcation, Statistics and Computing 28 (2018) 2, 411,
arXiv:1407.4981.

[52] T. Dinev and M. U. Gutmann, Dynamic Likelihood-free Inference via Ratio

Estimation (DIRE), arXiv:1810.09899.

[53] J. Hermans, V. Begy, and G. Louppe, Likelihood-free MCMC with
Approximate Likelihood Ratios, arXiv:1903.04057 [stat.ML].

[54] A. Andreassen and B. Nachman, Neural Networks for Full Phase-space
Reweighting and Parameter Tuning, Phys. Rev. D 101 (2020) 9, 91901,
arXiv:1907.08209 [hep-ph].

[55] L. Vesterbacka, carl-torch, Oct., 2020.

https://doi.org/10.5281/zenodo.4062049.

[56] A. Andreassen, P. T. Komiske, E. M. Metodiev, B. Nachman, and

J. Thaler, OmniFold: A Method to Simultaneously Unfold All Observables,
Phys. Rev. Lett. 124 (2020) 18, 182001, arXiv:1911.09107 [hep-ph].

[57] A. Andreassen, B. Nachman, and D. Shih, Simulation Assisted

Likelihood-free Anomaly Detection, Phys. Rev. D 101 (2020) 9, 95004,
arXiv:2001.05001 [hep-ph].

[58] J. Brehmer, G. Louppe, J. Pavez, and K. Cranmer, Mining gold from
implicit models to improve likelihood-free inference, Proceedings of the

28

Johann Brehmer and Kyle Cranmer

National Academy of Sciences of the United States of America 117 (2020)
10, 5242, arXiv:1805.12244.

[59] J. Brehmer, S. Mishra-Sharma, J. Hermans, G. Louppe, and K. Cranmer,
Mining for Dark Matter Substructure: Inferring Subhalo Population
Properties from Strong Lenses with Machine Learning, The Astrophysical
Journal 886 (2019) 1, 49, arXiv:1909.02005.

[60] J. Brehmer, K. Cranmer, G. Louppe, and J. Pavez, Constraining Eﬀective
Field Theories with Machine Learning, Physical Review Letters 121 (2018)
11, 111801, arXiv:1805.00013.

[61] M. Stoye, J. Brehmer, G. Louppe, J. Pavez, and K. Cranmer,

Likelihood-free inference with an improved cross-entropy estimator,
NeurIPS workshop on Machine Learning for the Physical Sciences (2019) ,
arXiv:1808.00973.

[62] G. Aad and Others, “A morphing technique for signal modelling in a

multidimensional space of coupling parameters.” 2015.

[63] S. Chen, A. Glioti, G. Panico, and A. Wulzer, Parametrized classiﬁers for

optimal EFT sensitivity, arXiv:2007.10356 [hep-ph].

[64] G. Papamakarios, D. C. Sterratt, and I. Murray, Sequential Neural

Likelihood: Fast Likelihood-free Inference with Autoregressive Flows,
International Conference on Artiﬁcial Intelligence and Statistics (2018) ,
arXiv:1805.07226.

[65] J.-M. Lueckmann, G. Bassetto, T. Karaletsos, and J. H. Macke,

Likelihood-free inference with emulator networks, in Proceedings of The 1st
Symposium on Advances in Approximate Bayesian Inference, F. Ruiz,
C. Zhang, D. Liang, and T. Bui, eds. PMLR, 2018. arXiv:1805.09294.
[66] C. Durkan, I. Murray, and G. Papamakarios, On Contrastive Learning for

Likelihood-free Inference, arXiv:2002.03712 [stat.ML].

[67] P. Ranjan, D. Bingham, and G. Michailidis, Sequential experiment design

for contour estimation from complex computer codes, Technometrics 50
(2008) 4, 527.

[68] J. Bect, D. Ginsbourger, L. Li, V. Picheny, and E. Vazquez, Sequential

design of computer experiments for the estimation of a probability of
failure, Statistics and Computing 22 (may, 2012) 773.

[69] L. Heinrich, G. Louppe, and K. Cranmer, diana-hep/excursion: Initial

Zenodo Release, nov, 2018. https://doi.org/10.5281/zenodo.1634428.

[70] P. de Castro and T. Dorigo, INFERNO: Inference-Aware Neural

Optimisation, Computer Physics Communications 244 (2019) 170,
arXiv:1806.04743.

[71] L. Heinrich and N. Simpson, pyhf/neos, Mar., 2020.
https://doi.org/10.5281/zenodo.3697981.

[72] G. Cowan, K. Cranmer, E. Gross, and O. Vitells, Asymptotic formulae for
likelihood-based tests of new physics, European Physical Journal C 71
(2011) 2, 1554, arXiv:1007.1727.

[73] J. Alsing and B. Wandelt, Generalized massive optimal data compression,
Monthly Notices of the Royal Astronomical Society: Letters 476 (2018) 1,
L60, arXiv:1712.00012.

29

[74] J. Alsing, B. Wandelt, and S. Feeney, Massive optimal data compression
and density estimation for scalable, likelihood-free inference in cosmology,
Monthly Notices of the Royal Astronomical Society 477 (2018) 3, 2874,
arXiv:1801.01497.

[75] D. Atwood and A. Soni, Analysis for magnetic moment and electric dipole

moment form factors of the top quark via e+e− → t¯t, Physical Review D
45 (1992) 7, 2405.

[76] M. Davier, L. Duﬂot, F. Le Diberder, and A. Roug´e, The optimal method

for the measurement of tau polarization, Physics Letters B 306 (1993) 3-4,
411.

[77] M. Diehl and O. Nachtmann, Optimal observables for the measurement of
three gauge boson couplings in e+e− → W +W −, Zeitschrift f¨ur Physik C
Particles and Fields 62 (1994) 3, 397.

[78] J. Brehmer, K. Cranmer, F. Kling, and T. Plehn, Better Higgs boson

measurements through information geometry, Physical Review D 95 (2017)
7, 73002, arXiv:1612.05261 [hep-ph].

[79] J. Brehmer, F. Kling, T. Plehn, and T. M. Tait, Better Higgs-CP tests
through information geometry, Physical Review D 97 (2018) 9, ,
arXiv:1712.02350 [hep-ph].

[80] J. Brehmer, F. Kling, I. Espejo, and K. Cranmer, MadMiner: Machine

Learning-Based Inference for Particle Physics, Computing and Software for
Big Science 4 (2020) 1, , arXiv:1907.10621.

[81] B. Nachman and C. Shimmin, AI Safety for High Energy Physics,

arXiv:1910.08606 [hep-ph].

[82] G. Louppe, M. Kagan, and K. Cranmer, Learning to pivot with adversarial

networks, Advances in neural information processing systems (2017) 981.

[83] J. Alsing and B. Wandelt, Nuisance hardened data compression for fast
likelihood-free inference, Monthly Notices of the Royal Astronomical
Society 488 (2019) 4, 5093, arXiv:1903.01473.

[84] S. S. Wilks, The Large-Sample Distribution of the Likelihood Ratio for

Testing Composite Hypotheses, The Annals of Mathematical Statistics 9
(1938) 1, 60.

[85] A. Wald, Tests of Statistical Hypotheses Concerning Several Parameters

When the Number of Observations is Large, Transactions of the American
Mathematical Society 54 (1943) 3, 426.

[86] A. D. Gordon, T. A. Henzinger, A. V. Nori, and S. K. Rajamani,

Probabilistic programming,
- Proceedings. 2014.

in Future of Software Engineering, FOSE 2014

[87] F. Wood, J. W. Van De Meent, and V. Mansinghka, A new approach to
probabilistic programming inference, in Journal of Machine Learning
Research. 2014. arXiv:1507.00996.

[88] K. Cranmer, G. Lewis, L. Moneta, A. Shibata, and W. Verkerke,

HistFactory: A tool for creating statistical models for use with RooFit and
RooStats, .

[89] L. Moneta, K. Belasco, K. S. Cranmer, S. Kreiss, A. Lazzaro, D. Piparo,

G. Schott, W. Verkerke, and M. Wolf, The RooStats Project, PoS

30

Johann Brehmer and Kyle Cranmer

ACAT2010 (2010) 057, arXiv:1009.1003 [physics.data-an].

[90] A. G. Baydin, L. Shao, W. Bhimji, L. Heinrich, L. Meadows, J. Liu,

A. Munk, S. Naderiparizi, B. Gram-Hansen, G. Louppe, M. Ma, X. Zhao,
P. Torr, V. Lee, K. Cranmer, Prabhat, and F. Wood, Etalumis: Bringing
probabilistic programming to scientiﬁc simulators at scale, International
Conference for High Performance Computing, Networking, Storage and
Analysis, SC (jul, 2019) arXiv:1907.03382, arXiv:1907.03382.
[91] D. Wingate, A. Stuhlmueller, and N. Goodman, Lightweight
implementations of probabilistic programming languages via
transformational compilation, JMLR Workshop and Conference
Proceedings, 11–13 Apr, 2011.

[92] A. G. Baydin, L. Shao, W. Bhimji, L. Heinrich, S. Naderiparizi, A. Munk,

J. Liu, B. Gram-Hansen, G. Louppe, L. Meadows, et al., Eﬃcient
probabilistic inference in the quest for physics beyond the standard model,
in Advances in neural information processing systems. 2019.

[93] A. Tejero-Cantero, J. Boelts, M. Deistler, J.-M. Lueckmann, C. Durkan,
P. J. Gon¸calves, D. S. Greenberg, and J. H. Macke, sbi: A toolkit for
simulation-based inference, Journal of Open Source Software 5 (2020) 52,
2505.

[94] A. Butter et al., The Machine Learning Landscape of Top Taggers, SciPost

Phys. 7 (2019) 014, arXiv:1902.09914 [hep-ph].

[95] K. Cranmer, S. Macaluso, and D. Pappadopulo, Ginkgo: a simpliﬁed parton

shower, 2019. https://github.com/SebastianMacaluso/ToyJetsShower.

[96] J. Brehmer, S. Dawson, S. Homiller, F. Kling, and T. Plehn, Benchmarking
simpliﬁed template cross sections in W H production, Journal of High
Energy Physics 2019 (2019) 11, , arXiv:1908.06980 [hep-ph].

[97] J. Hollingsworth and D. Whiteson, Resonance Searches with Machine

Learned Likelihood Ratios, arXiv:2002.04699 [hep-ph].

