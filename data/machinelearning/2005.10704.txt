0
2
0
2

y
a
M
1
2

]
h
p
-
p
p
a
.
s
c
i
s
y
h
p
[

1
v
4
0
7
0
1
.
5
0
0
2
:
v
i
X
r
a

1

Temporal Memory with Magnetic Racetracks
Hamed Vakili∗, Mohammad Nazmus Sakib†, Samiran Ganguly†, Mircea Stan†,
Matthew W. Daniels‡, Advait Madhavan‡§, Mark D. Stiles‡ and Avik W. Ghosh∗,
∗Department of Physics, University of Virginia, Charlottesville, VA 22903 USA
†Department of Electrical and Computer Engineering, University of Virginia, Charlottesville, VA 22903 USA
‡Alternative Computing Group, National Institute of Standards and Technology, Gaithersburg, MD
§Institute for Research in Physics and Applied Electronics, University of Maryland, College Park, MD

Abstract—Race logic is a relative timing code that represents
information in a wavefront of digital edges on a set of wires in
order to accelerate dynamic programming and machine learning
algorithms. Skyrmions, bubbles, and domain walls are mobile
magnetic conﬁgurations (solitons) with applications for Boolean
data storage. We propose to use current-induced displacement of
these solitons on magnetic racetracks as a native temporal mem-
ory for race logic computing. Locally synchronized racetracks can
spatially store relative timings of digital edges and provide non-
destructive read-out. The linear kinematics of skyrmion motion,
the tunability and low-voltage asynchronous operation of the
proposed device, and the elimination of any need for constant
skyrmion nucleation make these magnetic racetracks a natural
memory for low-power, high-throughput race logic applications.

Index Terms—Skyrmions, Domain Walls, Racetrack, Race

Logic, Temporal Memory.

I. DISPLACEMENT BASED MAGNETIC MEMORIES AND
ARRIVAL TIME CODES

When energy efﬁciency becomes the predominant metric in
computing systems, the choice of information representation
also becomes important. A recently proposed temporal coding
scheme, known as race logic [1]–[3], can have orders of
magnitude energy improvements over classical approaches.
In race logic, information is encoded in the relative timing
between digital rising edges on different wires. This allows
conventional Boolean primitives to perform non-traditional
operations at a very low energy cost. Computations are gen-
erally performed by setting up the problem in a spatially
arranged network of operators, like AND gates, OR gates,
temporal wavefronts
and temporal delay elements. Digital
are presented to the inputs of such an array and the way
the wavefront navigates through the network performs the
computation. For example, an OR gate determines the ﬁrst
arriving signal, essentially performing a MIN function on the
signals encoded on two wires. This approach is very efﬁcient
for dynamic programming problems like decision trees [2] or
genetic sequencing [3].

One major impediment in implementing race-logic-based
temporal computing systems is the need for a memory that can
easily store such temporally coded information. Such storage
would enable more complicated processing than can be done
with simple logic gates. Though digital wavefronts can be
generated and recorded with conventional Boolean circuits,
conversions between temporal and binary representation incur

a sizeable area and energy cost and hence limit the kinds of
computations that can be performed.

Magnetic devices play key roles in data storage from
magnetic tapes to hard disk drives to tunnel junction memories.
A racetrack memory [4] is similar to a magnetic disk but
without physically moving parts. Translating the magnetic con-
ﬁguration along the track plays the role of moving a magnetic
tape. Racetracks with skyrmions [5], a particular magnetic
conﬁguration discussed in Sec. II can be used to store Boolean
information with the presence of a skyrmion at a particular
location indicating a one and the absence a zero, for example.
This information can be subsequently read by translating the
skyrmions past a detector that reads the changing magnetic
state through a resistance change. Translation can be achieved
by several mechanisms including passing a current through a
heavy metal layer underlying the track. This current injects
a spin current into the magnetic layer creating a spin-orbit
torque [6], [7] that rotates the magnetization. The subsequent
local rotations of the magnetization give rise to an effective
translation of the magnetization pattern.

In this paper, we present a design (Fig. 1) for a memory cell
that converts information from the time domain to a displace-
ment domain by using current pulses of varying lengths in
time to translate skyrmions variable distances in space, thereby
encoding the arrival times of the pulses. The displacement
of the skyrmions is induced by applying a current along the
racetrack, causing the skyrmions to move along the racetrack
with a ﬁxed velocity. During the write operation, the different
timings of arriving digital edges on the wires lead to different
lengths of current pulses and hence different translations of
the skyrmions in the corresponding race tracks. When this
memory needs to be read out, the temporal reference signal is
provided to the array initiating current ﬂow along the racetrack
displacing the stored skyrmion. When the skyrmion reaches
the end of the racetrack, its arrival triggers an output edge.
We use pairs of racetracks to enable a non-destructive read as
discussed in Sec. III.

The linear dependence of displacement on temporal differ-
ence, coupled with the possibility of variable operating speed,
make a skyrmion-based memory very attractive for temporally
coded systems. A previously proposed temporal memory [8]
is based on memristors, which have logarithmic responses to
inputs. These are complicated to use in exact timing codes
because the nonlinear response has to be actively managed,
and restricts operation to only a small dynamic range of the

 
 
 
 
 
 
device. The development of an energy and space efﬁcient
way to store temporal signals with linear read/write dynamics
greatly expands the range of algorithms that can be addressed
with race logic.

We present details of this memory,

the non-destructive
readout, a way to reset memory, and a comparison with
conventional Boolean approaches in the next few sections.
Section II provides background on the magnetic technology
that is used. Section III describes how complementary metal-
oxide-semiconductor (CMOS) circuits can be interfaced with
such technology to perform read and write operations. Sec-
tion IV describes our simulation results for ideal skyrmion
racetracks followed by a discussion of non-idealities that arise
as a result of imperfections in material properties and how
they affect the the operation of this memory.

II. DOMAIN WALLS AND SKYRMIONS FOR MEMORY

Magnetic memories generally store information in the ori-
entations of the microscopic magnetic domains that reside
within the magnetic material. Magnetizations tend to have their
energy minimized when the moments point in either direction
along a preferred axis. Such a binary conﬁguration naturally
lends itself to binary information encoding in which one
direction corresponds to 0 and the other to 1. This encoding is
used in magnetic tapes, hard disk drives, and magnetic random
access memory. In continuous media, the magnetization tends
to form domains with the magnetization in two neighboring
regions roughly uniform and separated by a narrow region
where the magnetization rotates from one domain to the other.
The region with the rotating magnetization is referred to as a
domain wall.

When magnetic materials are fabricated in a 2D geometry,
energetic considerations typically prefer that the magnetization
lie in the plane. However, it is possible to tune the anisotropies
of the material such that the magnetization tends to point
parallel to the interface normal, which we label ˆz. We choose
such a material in this work. In the uniform conﬁguration, the
magnetization points in the same direction everywhere in a
sample, either along ˆz or −ˆz. However, other conﬁgurations
can exist in a metastable state [9]. One such conﬁguration
consists of two stable regions (one along ˆz and one along −ˆz)
separated by a localized 180◦ domain wall. Localized domain
walls are generated between oppositely oriented magnetic
regions through the balance of exchange and anisotropy forces,
the latter of which can arise due to intrinsic magnetocrystalline
anisotropy or from magnetostatic interactions [10], [11].

The domain wall we have just described divides two regions
of uniform magnetization. A skyrmion can be imagined by
making the domain wall circular to surround a region of
uniform magnetization (inside the circle) from an region
(outside the circle). For skyrmions, the domain wall separating
the two regions twists in a particular way, which is described
by a topological index known as a winding number. Using
ultra-thin ferromagnets (FM) on top of heavy metal (HM)
layers breaks inversion symmetry and generates an additional
the Dzyaloshinskii-Moriya interaction (DMI)
energy term,
[12], which stabilizes skyrmions.

2

Both domains and skyrmions have been proposed as funda-
mental elements of future magnetic memories. For domains,
ones and zeros are encoded in different magnetization direc-
tions; for skyrmions, it is their presence or absence which
encodes a bit. In the particular class of memory devices
called racetracks [4], [5] that we consider here, the sample
geometry is a long thin wire. The information stored in the
racetrack can be translated along the wire by passing a current
through the wire. Here, this translation is facilitated by the
inclusion of a heavy metal layer next to the magnetic layer.
layer
An electric current driven through the heavy metal
injects a spin current, through a spin Hall effect, perpendicular
to the FM/HM interface into the magnetic layer,
thereby
applying a spin-orbit torque to the ferromagnetic layer [13]–
[16]. This torque can drive skyrmions and domain walls in
a variety of ultra-thin magnetic systems at speeds as high as
500 m/s to 1 km/s for relatively low current densities. Possi-
ble systems include ferromagnets, antiferromagnets (AFMs),
heavy-metal heterostructures, and the two systems of particular
interest here: synthetic antiferromagnets [17]–[19], and nearly
compensated ferrimagnets. In our simulations, we consider
a racetrack that is either a two-sublattice near-compensated
ferrimagnet (FiM) like CoGd or a synthetic antiferromagnet,
where the low saturation magnetization gives small-sized
high-speed skyrmions that propagate along the track without
deﬂection to the side as discussed in Sec. IV.

The dynamics of domain walls and skyrmions under the
effect of an electronic current is well studied [20], [21], and
can be modeled using classical mechanics. In this work we
make use of these classical kinemetic behaviors of domain
walls and skyrmions by exploiting the simple linear response
x = vt between displacement x and time t, mediated by a
constant velocity v. By using a constant, known-amplitude
current pulse to drive a skyrmion at v for some period of time
t, we ﬁnd that t is stored in the position x of the skyrmion
along the track, and t can be reliably recovered simply by
driving the skyrmion in reverse and waiting for however long
it takes the skyrmion to return to its origin point on the track.
Both domain walls and skyrmions have topological protec-
tion of different types, which means that there is a signiﬁcant
barrier to eliminating them. This topological protection gives
them some of the stability needed for long lifetimes [22]. All
of these properties make domain walls and skyrmions good
candidates for racetrack memories. We choose skyrmions for
simulations, but most of the work here applies equally well to
domain walls and other possible magnetic solitons. We choose
synthetic antiferromagnetic systems because their motion has
useful features as explained below.

To model skyrmion motion in synthetic antiferromagnets,
we use a collective coordinate description of a rigid skyrmion,
that is, we assume the skyrmion texture has only translational
degrees of freedom and derive equations for these from the
governing Landau-Lifshitz-Gilbert equations. In antiferromag-
nets and synthetic antiferromagnets, the resulting rigid soliton
dynamics is given by a second order differential equation [21],
characterized by an effective skyrmion mass. The effective
mass of a rigid skyrmion in a synthetic antiferromagnet is
inversely proportional to the interlayer exchange coupling [23].

a)

Input wavefront
t1

Arecovery

t2

Aprimary

Bprimary

Brecovery

MTJ

b)

VM

T7

ERASE

Main Racetrack

MTJ

SAF/FM
HM

Vbias

R0

Vf
VM T5

Input signal

t1

T1

SAF/FM
HM

T4

Vf

3

by the ratio of 4π(cid:104)N (cid:105) to αDxx. Because of the off-diagonal
nature of a skyrmion’s velocity response, αDxx ends up
being principally responsible for the longitudinal skyrmion
motion along the track while the winding number (cid:104)N (cid:105) gives
a transverse Magnus force. Finally, the factor Id accounts for
the spatially varying response of the skyrmion due to its spin
texture; this term can be approximated as

Id ≈ e−r/∆ +

πr
∆

(4)

VOUT

RE
WL

T2

in rigid skyrmions of radius r, where r is deﬁned by the mz =
0 contour [24].

Note that, contrary to ferromagnetic skyrmions, skyrmions
in synthetic antiferromagnets are not expected to experience a
Magnus force, due to cancellation between the two oppositely
magnetized layers [25]. This cancellation implies that (cid:104)N (cid:105) =
0, reducing Eq. (1) to

Vf

T8

BL

VM

T6

RD

Recovery Racetrack

SAF/FM
HM

RWL

T3

SL

Fig. 1. Concept and circuit illustration: panel (a) shows the general arrange-
ment of a single column of N = 2 cells which can be used to store and
play temporal wavefronts. The racetracks consist of a bilayer of synthetic
antiferromagnet (SAF) or a ferromagnet (FM) with magnetic tunnel junctions
(MTJs) to detect when a skyrmion appears under them. Panel (b) shows a
detailed description of the circuits in each cell. Control lines consist of the
bit line (BL), source line (SL), word line (WL), read enable (RE), recovery
line (RD), recovery word line (RWL), and erase line (ERASE).

We assume very strong coupling, which sends the mass to zero
and reduces the dynamics to a ﬁrst-order description. We also
assume that the only driving forces on the skyrmions come
from spin orbit torques arising from the spin Hall effect (spin
Hall angle Θsh) in the heavy metal layer.

The resulting Thiele equation gives an instantaneous speed

for the skyrmion [20], [24]

xx

j,

(1)

v =

πγ¯h
2e

Θsh
ΣitiMsi

Id∆
(cid:112)(4π)2(cid:104)N (cid:105)2 + α2D2
where j is the electrical current density in the heavy metal
layer, t is the thickness of that layer, ∆ is the characteristic
domain wall length, Ms is the saturation magnetization in
each layer of the synthetic antiferromagnet, α is the Gilbert
damping, and γ is the gyromagnetic ratio. Two characteristic
properties of the skyrmion texture are the (integer) winding
number

(cid:104)N (cid:105) =

(cid:90)

1
4π

dx dy m ·

(cid:18) ∂m
∂x

×

∂m
∂y

(cid:19)

and the longitudinal component of the dissipation tensor

(cid:90)

Dxx =

dx dy (∂xm)2,

(2)

(3)

the moving
which provides a kinetic friction force for
skyrmion. The direction of the skyrmion motion is determined

v =

πγ¯h
2e

Id∆
αDxx

Θsh
ΣitiMsi

j.

(5)

We develop a circuit module that integrates Eq. (5) over time to
obtain the instantaneous skyrmion location on the racetracks,
which is used to capture the effect of micromagnetic simula-
tions as shown in Fig. 2.

In memories based on a classical Boolean representation, a
skyrmion is used to implement a binary 1 or a 0 by virtue of
its presence or absence. This procedure requires nucleating and
destroying skyrmions [13], which costs substantial energy. It
can also be difﬁcult to engineer in a deterministic fashion. The
energy cost is necessary, because the resulting energy barrier
that must be overcome provides the necessary stability for a
skyrmion to be used as a memory. In our memory, we just
translate skyrmions without creating or destroying, aside from
initializing them for the ﬁrst time in the device. Once the
skyrmions are nucleated, it is their position on the racetrack
that encodes information and hence a “0” state can be stored
by returning the skyrmion to its initial position, instead of
destroying it. This is made possible by the long lifetimes and
relatively low currents needed to drive skyrmions.

The detection scheme is based on the tunneling magne-
toresistance (TMR) found in magnetic tunnel junctions. In
a magnetic tunnel junction, two magnetic layers are brought
close to each other and separated by an insulating layer.
The resistance through this material stack depends on the
relative orientations of the magnetizations on either side of
the insulator. This effect allows the information stored in
these magnetic domains to be electrically read out. In this
system, the insulating layer is deposited directly on top of the
racetrack layer and an additional ferromagnetic layer with a
ﬁxed magnetization is deposited on top of that. The resistance
measured by this detector changes when there is a skyrmion
in the race track below the rest of the tunnel junction.

III. TEMPORAL MEMORY CIRCUITS AND SIMULATIONS

Two cells of the proposed magnetic skyrmion based archi-
tecture are shown in Fig. 1a. The full architecture consists of
N cells, each comprising two parallel racetracks. The memory
is interfaced with an N channel data bus on which the input

t1

τ − t1

Recovery track A:

Main track A:

τ − t1

t2

τ − t2

Main track B:

τ − t2

Recovery track B:

−1

mz

+1

640 nm

t1

t1

4

2
0
0

n
m

t1

t2

t1

τ − t1

t2

τ − t2

τ
a) Inputs

b) Write

t2

c) Read

t2

d) Recovery

e) Erase

Fig. 2.
(a) Two example waveforms presented as input to be stored by the memory cell. (b-e) Four operational phases of the racetrack temporal memory
from a micromagentic simulation. The ﬁgures show a background of up-spin magnetic material (black) with a down-spin skyrmion (white); color indicates the
in-plane spin orientation. In each phase, the skyrmion location is shown at the beginning of that phase while the arrows point to the location of the skyrmion
at the end of the phase. The red circles in the ﬁrst column indicate the magnetic tunnel junction (MTJ) placement, and the patterned area of the racetracks
represents an energy barrier. Ampliﬁed repulsion from edges helps keep the skyrmions on their path to the read MTJ locations while preventing them from
annihilation or pinning at the edges.

wavefronts arrive. Our temporal memory allows for these N -
channel wavefronts to be stored in these cells, in parallel
as a single write operation. These written values can also
be replayed back in a single parallel read operation. As we
discuss below, this reading process destroys the information
in a single racetrack. The second racetrack for each of the
N channels retains the stored information allowing a recovery
operation to restore the previously read state. Finally, an erase
operation returns the cells to a zero value. All operations
involve translating a single preexisting skyrmion in each of the
racetracks so that none are ever created or destroyed. Note that,
between these operations, all the drive signals can be turned off
without losing the data, due to the inherent non-volatility of the
skyrmions. We present these four operations next, combined
with the details of the temporal to spatial mapping scheme.
The bias voltages for these operations are given in Table I.

A. Temporal-to-Spatial Mapping Scheme

The linearity of skyrmion displacement with the drive
current pulse length is central to storing temporal data into a
linearly mapped spatial skyrmion arrangement on a racetrack.
Defects in the racetrack can give rise to non-linear effects,
which we discuss in Sec. IV. Assuming a defect-free fabrica-
tion process, the racetracks have a ﬁnite capacity to store the
temporal information, which depends on the storable racetrack
length L, given by the total time, τ = L/v, needed by the
skyrmion to travel with velocity v from the starting point to the
end point of the racetrack. This temporal memory architecture
requires that during the ‘read’ process, the arrival time of a
skyrmion to the read magnetic tunnel junction (MTJ) located

at the end of the racetrack corresponds to the stored temporal
data t1.

To meet this requirement, the computation window for the
cell is set as the transit time τ = L/v. The time t1 is the
arrival time of a rising edge, the time delay after which the
wavefront voltage switches from low to high. Provided that
0 ≤ t1 ≤ τ , the write process to store that value requires
displacing the skyrmion for τ −t1 after the rising edge arrives.
This displacement positions the skyrmion properly to represent
the wavefront arrival. The ﬁdelity of this operation is ensured
because the CMOS-based control circuitry turns off the drive
current sufﬁciently quickly to minimize any overshoot of
skyrmion on the racetrack.

We incorporate a read-enable signal whose charging up
corresponds to the temporal axis origin for the read process,
t = 0. This read-enable signal restarts the drive current as well
as the read MTJs reporting the temporal data τ −t1 by toggling
the read voltage caused by skyrmion/wavefront arrival. The
time of arrival for the skyrmion to the read sensing MTJ is
t1, after which the pulse jumps up to high upon a read and
stays high for the remainder of the clock cycle τ − t1, thus
reproducing the incoming wavefront. As usual, the ﬁdelity of
the read process is ensured by the much faster time scales
of CMOS control circuitry compared to the time scale of the
current pulses used to move the skyrmions.

B. Write Operation

The circuit for the write operation is shown in ﬁg. 1(b). As
described before, we assume pre-nucleated skyrmions in the
starting position of the main racetrack and the recovery track
as the initial condition for the write operation. Note that the

a) Write

b) Read

c) Recover

d) Erase

WL

Input

RE

RD

RWL

ERASE

VM
Vout

Main track

Recovery track

s
l
a
n
g
i
s

l
o
r
t
n
o
C

)

V

(

s
t
u
p
t
u
O

)

m
µ
(

n
o
i
t
a
c
o
L

1.0

0.5

0.5

16

20

24

28

32

t (ns)

Fig. 3. Control signals, output signals, and skyrmion positions on the two
tracks through four phases memory cell operation. Top: control bits for the
write line (WL), read enable (RE), recovery line (RD), recovery write line
(RWL), erase line (ERASE), and the incoming signal. The middle panel shows
the synchronizing signal VOUT and the node voltage VM . The bottom panel
shows the instantaneous skyrmion positions on the tracks. The four operational
phases are highlighted with gray boxes. a) WL drives the skyrmion along the
main racetrack, once the input arrives. b) WL and RWL drive the main and
recovery skyrmions, respectively, until the main track skyrmion reaches the
MTJ read stack, which is enabled by RE. The resulting resistance change in
the MTJ, detected via the feedback voltage Vf (inverse of Vout), halts the
drive currents through the tracks. c) WL and RWL drive the main and recovery
skyrmions as in the read operation, but with the relative polarity of source
and bit lines inverted to enable a reverse drive current. Motion stops when the
recovery track skyrmion is detected by the RD-enabled MTJ stack, restoring
the original position of the main track skyrmion before the read operation. d)
The ERASE signal drives the main skyrmion back to the origin point until it
is detected and the drive current is turned off.

write operation involves only the primary/main track and not
the recovery track, hence only transistors T1 and T2 are turned
on. All the other transistors are in the off state. The write
operation corresponds to shifting the skyrmion in the primary
racetrack, from its starting position to its ﬁnal position, by the
application of the write current (ﬁg. 2c.). The ﬁnal position
of the skyrmion depends on the duty cycle of the incoming
wavefront. This is performed by applying high (VDD = 1 V)
voltage to the bit line (BL) and ground to the source line (SL)
to generate the current, while the write line (WL) transistor,
T2, is turned on to establish a current path.

When the incoming temporally coded high signal arrives at
the gate of the transistor T1, the write path through the heavy
metal layer is turned on and the skyrmion begins its motion
along the track. When the incoming signal falls to ground, the
transistor T1 turns off, causing the skyrmion to stop moving
and isolating the main racetrack from the BL. This isolation
of the main racetrack from the BL ensures no skyrmion

5

movement after the end of write operation. This captures the
incoming high temporal signal, and converts it into a spatial
displacement of the skyrmion in the track. The control signals
and corresponding skyrmion motion as a function of time are
shown in Fig. 3a.

C. Read Operation

Once the input signal

is captured in the racetrack by
displacement of the skyrmion to the appropriate position, it
can be read. This read operation is a destructive operation
because once the track is read out, the position information of
the skyrmion on that track is lost. To overcome this issue, we
use a corresponding recovery track, which operates as shown
in Fig. 1b. The time period of the applied bias voltage has
to be same in both tracks to ensure data integrity. The BL
is biased to high (VDD = 1 V) and SL is biased to ground,
similar to the write operation. Transistor T1 is turned off and
is not used in the read operation. The node voltage VM is low
at the beginning of the read operation due to the low resistance
value of the readout MTJ in the absence of skyrmion.

The ampliﬁed node voltage Vf is high and turns on the
transistors T4 and T8. This sets the system up so that the same
current ﬂows through both the primary and recovery track, as
soon as the rising edge that initiates the read operation appears
at the inputs to transistors T2 and T3. Moreover, the aspect
ratio of the transistors T1, T4, and T8 are adjusted to make
sure that the same current ﬂows through the main racetrack
during both the write and read operation and the recovery
racetrack during the read operation. The same current through
the main and recovery racetracks ensures the same duty cycle
of the stored and retrieved wavefront.

When the rising edge arrives, the skyrmions on both the
primary and recovery tracks begin to move in the same
direction until the skyrmion in the primary track reaches the
MTJ at the end of the track (see ﬁg. 2c. for a micromagnetic
simulation and ﬁg. 3b. for a circuit simulation). This results
in an output edge, corresponding to time τ − t1, which is the
correct stored value. The important point is that since the main
and recovery tracks see the same current pulse, they exhibit
identical dynamics, hence keeping the information that would
have otherwise been lost. To ensure that this information is
stored correctly to perform successive read operations, the
recovery track has to be turned off as soon as the output
triggers a rising edge. This is achieved by nMOS transistors
T8 and T4 which turn both current paths off as the Vf goes low
when VM and VOU T trigger a rising edge. Note that the CMOS
time constants are much faster than the magnetic dynamics of
skyrmion movement and hence can be treated as instantaneous.
In order to correctly detect the skyrmion, we use MTJ
readout circuitry based on the difference in resistance between
there being a skyrmion beneath the detector, Rsk, or not, RP.
This difference can be characterized by an effective TMR,
β = (Rsk − RP)/RP. A bias voltage Vbias with a reference
resistor R0 produces a voltage swing that depends on the
effective TMR β at node VM in the presence or absence of
a skyrmion. The voltage at the node VM is then ampliﬁed
by an inverter to feed high or low feedback voltage Vf to

TABLE I
BIAS VOLTAGES FOR RACE LOGIC AND MEMORY OPERATIONS. COLUMNS
CORRESPOND TO THE LABELED CIRCUIT NODES IN FIG. 1B.

Write
Read
Recovery
Erase

BL

VDD
VDD
0
0

SL

0
0
VDD
VDD

WL

RWL

VDD
VDD
VDD
VDD

0
VDD
VDD
0

RE

0
VDD
0
0

RD

ERASE

0
0
VDD
0

0
0
0
VDD

the gates of the nMOS transistors T4 and T8. Note that the
readout circuitry is biased in such a pattern that the feedback
voltage Vf turns on the transistors T4 and T8 during the read,
recovery, and erase operations only.

The reference resistance should provide the maximum con-
trast between the skyrmion and no-skyrmion states under the
MTJ. To ensure functionality, R0 must be between R0− and
R0+, where

R0± =

(cid:34)

Rsk
2Vmin

β
β + 1

Vbias − Vmin(1 + 2/β)

(cid:113)

±

min − 2VbiasVmin(1 + 2/β) + V 2
V 2
bias

(cid:35)

.

(6)

√

Here, Vmin is the minimum voltage difference between the
skyrmion and no-skyrmion states needed at node VM to
ensure switching behavior at Vf , and Vbias is the bias volt-
age. The maximum possible voltage swing is given when
R0 =
RskRP. Higher resistances increase efﬁciency and can
be achieved by using a thicker MgO layer in the MTJ. The
TMR used in this expression, β, is reduced from the bare
TMR by the ﬁll factor of the skyrmion underneath the MTJ
due to the non-uniform magnetization in the skyrmion. It is
essential that this effective TMR be large and the ﬁlling of
the MTJs by the skyrmions be almost complete because the
read-out circuitry begins to function poorly when the effective
TMR is below 50 %. Using domain walls instead of skyrmions
would give a larger read-out signal at the potential cost of more
complicated motion.

Though VM is connected to three different MTJs, only one
of them is active in each operating phase. This node and
its associated readout circuitry can therefore be shared by
these MTJs, reducing the area and energy cost associated with
static read currents. Such selective operation of the readout
circuitry is performed by transistors T5, T6, and T7. In the
read operation, for example, only T5 is active, while T6 and
T7 are turned off.

D. Recovery Operation

The third operation which compensates for the destructive
read, is the recovery operation. It restores the primary and re-
covery skyrmions to their original (i.e. before the read process)
state. This operation is the opposite of the read operation and is
performed almost identically, except with a reversed applied
current. Hence, the BL is biased to ground while the SL is
biased to high (VDD=1V), reversing the direction of current
and hence the direction of motion of the skyrmions (ﬁg. 2d.).
Since the output MTJ in the recovery operation is the one

6

at the beginning of the recovery track, transistors T5 and T7
can be disabled, while transistor T6 is enabled. This allows
the readout circuits to trigger when the skyrmion returns to
its original location under the MTJ in the recovery track (ﬁg.
3c.). Note that as in the read operation, this MTJ detects the
end of the operation and turns off transistors T8 and T4. After
this operation is complete, the skyrmion in the recovery track
is restored to its default origin position, while the skyrmion
in the primary track is restored to its value before the read.
The cell is now ready for another read as described before,
or an erase operation. The recovery operation also replays the
stored temporal data like the read operation (ﬁg. 3b) does.

E. Erase Operation

The ﬁnal operation is the erase operation to return the
cell to its conﬁguration before any write operations, i.e., the
conﬁguration with the skyrmions on both racetracks at the
origin. The erase operation is similar to the write operation as
only the skyrmion in the main track is moved, but the direction
of the drive current and hence skyrmion motion is reversed
(ﬁg. 2e.). The ending of this phase is determined by the MTJ
at the beginning of the main track. Note that in this phase, the
other two MTJs are not required, causing transistors T5 and
T6 to be disabled, while transistor T7 can be enabled. As soon
as the node voltage Vf of the readout circuitry turns low, the
transistor T4 turns off, signaling the end of the erase operation
(ﬁg. 3d.). The cells are now ready to write a new state.

IV. RESULTS AND DISCUSSION

In order to understand and quantify the performance of this
wavefront memory cell, we perform detailed circuit simula-
tions using a modular approach. In particular, we construct
a complete circuit model using the 45 nm technology node
obtained from the Predictive Technology Model [26] for the
driving transistors and the module discussed in Sec. II for the
dynamics of the skyrmions in the magnetic racetracks.

To describe the magnetic dynamics, our simulations use a
Gilbert damping constant α = 0.1, saturation magnetization
Ms = 3 × 105 A/m, magnetic anisotropy K = 135 kJ/m3,
Dzyaloshinskii-Moriya interaction strength D = 1.2 mJ/m2,
and exchange stiffness Aex = 7.5×10−12 J/m. Consequently,
the domain wall width is ∆ = πD/4K ≈ 7.0 nm and
the skyrmion radius is approximately 24 nm [27]. We use
these parameters to model a synthetic antiferromagnet with
thickness of tFM = 2 nm for each layer, length of 640 nm,
and width of 200 nm. The heavy metal thickness is assumed
to be 10 nm. The MTJ diameter is 40 nm with a TMR of
≈ 400 %, based on RP = 6.67 kΩ and RAP = 33.3 kΩ. The
circuit behaves acceptably provided the bare TMR is greater
than 100 %, or an effective TMR of 50 %. With the chosen
parameters, the skyrmion size is comparable to that of the
MTJ. From the structure of the skyrmion, we compute a 50 %
reduction in the TMR to an effective TMR close to 200 %.
The reference resistance is taken to be R0 = 15 kΩ, giving a
swing voltage of ≈ 425 mV.

The saddle point barrier to skyrmion annihilation is Eb ≈
23AextFM − Eskyr ≈ 100 kT , where k is the Boltzmann

Energy (fJ)

1
0
0

2
0
0

3
0
0

1
0
0

2
0
0

3
0
0

1
0
0

2
0
0

3
0
0

1
0
0

2
0
0

3
0
0

T1

T2

T3

T4

T5

T6

T7

T8

TrackM

TrackR

R0

MTJ

Buffer

1000

500

)
J
f
(

y
g
r
e
n
E

l
a
t
o
T

Write

Read

Recovery

Erase

Fig. 4. Total energy, and energy breakdown per circuit element, for an average
case of wavefront capture on a set of 640 nm racetracks. The read and
recovery processes consume the most energy because both tracks are active in
these operations. In all operations, the largest energy dissipation arises from
transistor leakage, with only minimal contributions from Joule heating in the
main (TrackM ) and recovery (TrackR) racetracks.

constant and T is the temperature. Assuming a mean lifetime
to annihilation of [28] τ = f0eEb/kB T with f0 = 10−10,
the lifetime of these skyrmions is in the range of years
at room temperature. While the Magnus force is small in
the compensated synthetic antiferromagnet,
the wide track
requires skyrmion injection right down the middle to hit the
MTJ. This constraint can be avoided with narrower racetracks
with repulsive edges.

Fig. 4 gives the energies consumed for these four operations
in each component, for an average case in which the skyrmion
is moved to the middle of the racetrack. The encoding of
the wavefront arrival time is linear on the skyrmion motion.
Transient simulations on our circuit allow us to capture the
in-depth energy consumption in each component of the cell.
The bottom panel of Fig. 4 shows that the energy con-
in the read and recovery operations,

sumption is highest

7

as it involves driving both racetracks, while the write and
erase operations, single track operations, consume relatively
less energy. For the chosen parameters for the racetrack and
the racetrack drive currents (≈ 244 µA), the total energy
consumption of the complete cell is ≈ 2.8 pJ for the full
cycle of the four memory operations, at a 50 % duty cycle—
that is, the case where the write process puts the skyrmion
midway in the racetrack. This is the average case (t = τ /2)
of all possible temporal data recordings in the range [0, τ ].

The top panel of Fig. 4 shows that the energy consumption
in the racetracks themselves (due to Joule heating) is only a
very minor component of the total energy consumption and is
on the order of ≈ 45 fJ. Most of the energy is consumed
in the driving and synchronizing transistors, primarily due
to the high overdrive voltage applied to them. One way to
reduce energy consumption is to optimize the energy of the
driving and synchronizing transistors. Increasing their size up
decreases the resistance, which will allow large drive current
ﬂow through the racetracks. Though the energy consumption
of the transistors will decrease, energy consumption by the
racetracks will increase. Even if increasing their size only
moderately decreases the overall energy consumption, doing
so would signiﬁcantly improve the energy delay product.
Further energy efﬁciency can be achieved if the necessary
drive current for the skyrmion in a racetrack can be decreased
without reducing the skyrmion velocity, as is the case for all
racetrack memories. Speciﬁc optimization of these memory
cells depends on the application and is left as a future exercise.
This memory cell is only useful if it has advantages over
alternatives based solely on CMOS. One such alternative
would be a up-counter coupled with a latch or an SRAM cell.
The up-counter counts ‘clock ticks’ and can thereby digitize
a clock delay. An up-counter is built out of multiple positive
edge-triggered D-ﬂip ﬂops (DFF) and combinational circuits.
Textbook implementations of one such DFF requires 20 MOS-
information,
FETs. Our racetracks store ‘analog’ temporal
while a counter stores quantized information. For example,
a 6 stage counter, which has a 26 = 64 step quantization of
temporal data, will require 120 transistors. Coupling them with
simple S-R latches to store the memory requires another 24
transistors, yielding a total of 144 transistors.

In addition,

this scheme stores the data logarithmically
and its readout requires either a Boolean decoder circuit
increasing the number of transistors (an estimate for a 6 × 64
decoder requires 128 transistors) or a clock generator driven
by latch readout (component count dependent on implemen-
tation scheme). Factoring in the built-in non-volatility of the
skyrmion, where the proposed cell can be powered off without
losing information for years, compared to the volatile nature
of a pure CMOS design, makes it clear that the proposed
memory cell is ultra-compact and would consume signiﬁcantly
less energy than such a CMOS-only design.

A. Non-Idealities of Racetracks and their Possible Ameliora-
tion

Our simulations are based on pristine racetracks, that is,
there are no defects, particularly pinning centers. In experi-
mental realizations, racetracks will suffer from a number of

complications. In this section, we discuss these complications
and possible techniques to minimize their impact.

Defects: Defects such as notches or material non-uniformity
during fabrication of the racetrack give rise to pinning centers
for skyrmions. The pinning and unpinning of skyrmions adds
nonlinear effects to skyrmion movement described by the
Eq. (5), giving rise to phenomena like creep. Domain walls,
another candidate for this approach, also suffer from pinning,
but the two types of magnetic textures are more strongly
affected by different types of disorder. Since skyrmions are
localized to the center of the racetrack, they are less susceptible
to pinning by edge roughness than domain walls. On the other
hand, because domain walls are more extended, they are less
susceptible to pinning by the anisotropic grains that can exist
in a racetrack [14].

For low drive currents, the motion of skyrmions and domain
walls are in the creep regime, where the motion consists of
repeated pinning and thermally assisted depinning [29]. The
resulting stochastic motion of the magnetic textures causes
errors in the spatial mapping of the temporal data as the
skyrmion velocity is no longer a fully controllable parameter.
While it is obvious that better fabrication of racetracks can
ameliorate this unpredictability to an extent, we expect the
presence of a residual density of defects under the best of
the processes. Higher drive currents provide more energy
to the motion, limiting defect based pinning and providing
more predictable motion. However, higher currents increase
the energy cost.

Higher order skyrmion dynamics: At higher speeds the
assumption of skyrmion rigidity is no longer valid. This can
lead to nonlinear effects in skyrmion velocity [30]. For larger
skyrmions, the existence of an inertia has been reported [31]
which can effect the position of skyrmions. The breathing
modes of skyrmions [32] can also effect the motion, as it can
change size and domain wall angle of a skyrmion, which in
turn can introduce nonlinear effects to the skyrmion motion.
Skyrmion readability: The read-out of skyrmion motion
is through the TMR effect of the MTJ as mentioned before.
Therefore the relative area of the skyrmion under the MTJ
is a critical factor for obtaining a sufﬁciently large resistance
swing to control the output swing of signal VM in Fig. 3. This
matching of the area can be achieved by using large skyrmions
to ﬁll a signiﬁcant area under the MTJ reader. Using domain
walls removes this problem as they can be large enough to
provide nearly full MTJ cross-section coverage. Improving the
TMR of MTJ’s would allow smaller skyrmions to be read
with sufﬁcient contrast. Another solution is to use additional
transistors at the read stage to amplify the smaller voltage
contrast provided by a low read TMR, but with a higher area
and energy cost.

Skyrmion lifetime: Skyrmion lifetimes dictate the storage
times of the memory cell. They depend on the skyrmion
diameter and larger area skyrmions are more stable against
annihilation [28]. Here, we consider skyrmions of diameter
48 nm with lifetimes of years as mentioned above. While in
general smaller skyrmions might be preferable for high density
binary memory, for a specialized application like this one,
the skrmion size is less important, as the memory density

8

is governed by the racetrack size, rather than the skyrmion
size. The use of larger skyrmions also helps achieve better ﬁll
factors for readability and avoids accidental off-center injected
skyrmions bypassing the MTJ altogether.

Edge annihilation: Skyrmions are susceptible to annihi-
lation by the edges of the racetrack. This can be partially
ameliorated by use of wide racetracks, whereby we can avoid
the possibility of skyrmion drifting to the edges and getting
annihilated due to Magnus effect. This however can worsen
the skyrmion readability as this scales up the size of the read
MTJs, or makes skyrmions miss the MTJ as discussed above.
While the use of synthetic antiferromagnet racetracks with
compensation for Magnus force can considerably reduce this
issue, use of reﬂecting edges through anisotropy engineering,
such as using ion beam irradiation, or geometry engineering by
using thicker edges can also help with this issue [33], [34]. By
using reﬂective edges, the skyrmion will more reliably reach
the MTJ position, as the repulsive force from the edges will
conﬁne the skyrmion to the middle of racetrack.

All of these issues listed above are common to the area of
magnetic racetracks, an area of active research, and any future
improvements through better fabrication capabilities and novel
extrinsic circuit techniques will beneﬁt the performance and
shortcomings of the proposed temporal memory cell.

V. CONCLUSION
Faced with the unrelenting demand of tomorrow’s comput-
ing needs, coupled with ending of Moore’s law, engineers are
faced with the task of questioning some of the fundamental
assumptions that have driven the development of conventional
computing systems for many years. While changing the in-
formation representation may be a small step in the quest for
efﬁciency, it requires the development of supporting systems
like memory that can naturally encode information in the same
domain, so as to cut domain translation costs.

In this work, we utilize a novel

technology based on
skyrmions in magnetic racetracks to provide energy-efﬁcient
memory for
temporal computing. Our proposal uses the
displacement of pre-nucleated skyrmions to store temporal
information in magnetic racetracks, avoiding the energy cost
required to nucleate them. The readout of this memory is
made non-destructive by doubling the number of racetracks
to store the information in the second racetrack during the
read process. While this increases the energy consumption and
area of the memory, we limit the impact by sharing readout
and control circuits for the different operations involved in
using the memory. The linearity of the stored information with
respect to the input limits the circuitry required for translation
between the time and displacement domains. By changing the
current used to drive the skyrmions, and hence their velocity,
these memory cells can be tuned so their time scale matches
the range of input information. Such an efﬁcient memory will
greatly expand the problem domain that can be efﬁciently
addressed by timing based computing.

VI. ACKNOWLEDGMENTS
This work is funded in part by the Defense Advanced
Research Projects Agency (DARPA) Topological Excitations

in Electronics (TEE) program (grant D18AP00009). A.M.
acknowledges support under the Cooperative Research Agree-
ment Award No. 70NANB14H209, through the University of
Maryland. We would like to thank Andrew Kent, Joe Poon,
Geoffrey Beach, and Brian Hoskins for insightful discussions.

REFERENCES

[1] A. Madhavan, T. Sherwood, and D. Strukov, “Race Logic: A hardware
acceleration for dynamic programming algorithms,” in 2014 ACM/IEEE
41st International Symposium on Computer Architecture (ISCA), Jun.
2014, pp. 517–528, iSSN: 1063-6897.

[2] G. Tzimpragos, A. Madhavan, D. Vasudevan, D. Strukov, and T. Sher-
wood, “Boosted race trees for low energy classiﬁcation,” in Proceedings
of the Twenty-Forth International Conference on Architectural Support
for Programming Languages and Operating Systems, ser. ASPLOS ’19,
April 2019.

[3] A. Madhavan, T. Sherwood, and D.Strukov, “A 4-mm 2 180-nm-cmos
15-giga-cell-updates-per-second dna sequence alignment engine based
on asynchronous race conditions,” in 2017 IEEE Custom Integrated
Circuits Conference (CICC).

IEEE, 2017, pp. 1–4.

[4] S. S. P. Parkin, M. Hayashi, and L. Thomas, “Magnetic Domain-Wall
Racetrack Memory,” Science, vol. 320, no. 5873, pp. 190–194, Apr.
2008.

[5] R. Tomasello, E. Martinez, R. Zivieri, L. Torres, M. Carpentieri, and
G. Finocchio, “A strategy for the design of skyrmion racetrack memo-
ries,” Sci Rep, vol. 4, no. 1, p. 6784, May 2015.

[6] C. Hanneken, F. Otte, A. Kubetzka, B. Dup, N. Romming, K. von
Bergmann, R. Wiesendanger, and S. Heinze, “Electrical detection of
magnetic skyrmions by tunnelling non-collinear magnetoresistance,”
Nature Nanotechnology, vol. 10, no. 12, pp. 1039–1042, Dec. 2015.
[7] K. Y. Camsari, R. Faria, B. M. Sutton, and S. Datta, “Stochastic p -Bits
for Invertible Logic,” Phys. Rev. X, vol. 7, no. 3, p. 031014, Jul. 2017.
[8] A. Madhavan and M.D.Stiles, “Storing and retrieving wavefronts with
resistivetemporal memory,” in 2020 IEEE International Symposium on
Circuits and Systems (ISCAS), submitted.

IEEE, 2020, pp. 1–4.

[9] A. Belavin and A. Polyakov, “Metastable states of two-dimensional
isotropic ferromagnets,” JETP lett, vol. 22, no. 10, pp. 245–248, 1975.
[10] A. Thiaville, J. M. Garc´ıa, and J. Miltat, “Domain wall dynamics
in nanowires,” Journal of Magnetism and Magnetic Materials, vol. 242-
245, pp. 1061–1063, Apr. 2002.

[11] G. S. D. Beach, C. Nistor, C. Knutson, M. Tsoi, and J. L. Erskine,
“Dynamics of ﬁeld-driven domain-wall propagation in ferromagnetic
nanowires,” Nature Mater, vol. 4, no. 10, pp. 741–744, Oct. 2005.
[12] I. Dzyaloshinsky, “A thermodynamic theory of weak ferromagnetism of
antiferromagnetics,” Journal of Physics and Chemistry of Solids, vol. 4,
no. 4, Jan. 241–255.

[13] J. Sampaio, V. Cros, S. Rohart, A. Thiaville, and A. Fert, “Nucleation,
stability and current-induced motion of isolated magnetic skyrmions in
nanostructures,” Nature nanotechnology, vol. 8, no. 11, pp. 839–844,
2013.

[14] R. Tomasello, V. Puliaﬁto, E. Martinez, A. Manchon, M. Ricci, M. Car-
pentieri, and G. Finocchio, “Performance of synthetic antiferromagnetic
racetrack memory: domain wall versus skyrmion,” J. Phys. D: Appl.
Phys., vol. 50, no. 32, p. 325302, Aug. 2017.

[15] X. Zhang, Y. Zhou, and M. Ezawa, “Magnetic bilayer-skyrmions without
skyrmion Hall effect,” Nat Commun, vol. 7, no. 1, p. 10293, Apr. 2016.
[16] H. Vakili, Y. Xie, and A. W. Ghosh, “Self focusing hybrid skyrmions
in spatially varying canted ferromagnetic systems.” [Online]. Available:
http://arxiv.org/abs/2001.00729

[17] W. Legrand, D. Maccariello, F. Ajejas, S. Collin, A. Vecchiola,
K. Bouzehouane, N. Reyren, V. Cros, and A. Fert, “Room-temperature
stabilization of antiferromagnetic skyrmions in synthetic antiferromag-
nets,” Nat. Mater., Sep. 2019.

9

[18] T. Dohi, S. DuttaGupta, S. Fukami, and H. Ohno, “Formation and
current-induced motion of synthetic antiferromagnetic skyrmion bub-
bles,” Nat Commun, vol. 10, no. 1, p. 5153, Dec. 2019.

[19] Y. Xie, J. Ma, H. Vakilitaleghani, Y. Tan, and A. W. Ghosh,
“Computational search for ultrasmall and fast skyrmions in the Inverse
Heusler family,” arXiv:1901.09446 [cond-mat], Jan. 2019. [Online].
Available: http://arxiv.org/abs/1901.09446

[20] A. A. Thiele, “Steady-State Motion of Magnetic Domains,” Phys. Rev.

Lett., vol. 30, no. 6, pp. 230–233, Feb. 1973.

[21] E. G. Tveten, A. Qaiumzadeh, O. A. Tretiakov, and A. Brataas,
“Staggered dynamics in antiferromagnets by collective coordinates,”
Phys. Rev. Lett., vol. 110, p. 127208, Mar 2013. [Online]. Available:
https://link.aps.org/doi/10.1103/PhysRevLett.110.127208

[22] A. N. Bogdanov and U. K. Rler, “Chiral Symmetry Breaking in
Magnetic Thin Films and Multilayers,” Phys. Rev. Lett., vol. 87, no. 3,
p. 037203, Jun. 2001.

[23] M. W. Daniels, W. Yu, R. Cheng, J. Xiao, and D. Xiao, “Topological
spin hall effects and tunable skyrmion hall effects
in uniaxial
antiferromagnetic insulators,” Phys. Rev. B, vol. 99, p. 224433, Jun
2019. [Online]. Available: https://link.aps.org/doi/10.1103/PhysRevB.
99.224433

[24] F. Bttner, I. Lemesh, and G. S. D. Beach, “Theory of isolated mag-
netic skyrmions: From fundamentals to room temperature applications,”
Sci Rep, vol. 8, no. 1, p. 4464, Dec. 2018.

[25] J. Barker and O. A. Tretiakov, “Static and dynamical properties of
antiferromagnetic skyrmions in the presence of applied current and
temperature,” Phys. Rev. Lett., vol. 116, p. 147203, Apr 2016. [Online].
Available: https://link.aps.org/doi/10.1103/PhysRevLett.116.147203

[26] “Predictive

technology model

(ptm).”

[Online]. Available: http:

//ptm.asu.edu/

[27] X. S. Wang, H. Y. Yuan, and X. R. Wang, “A theory on skyrmion size,”

Communications Physics, vol. 1, no. 1, p. 31, Jul. 2018.

[28] P. F. Bessarab, G. P. Mller, I. S. Lobanov, F. N. Rybakov, N. S.
Kiselev, H. Jnsson, V. M. Uzdin, S. Blgel, L. Bergqvist, and A. Delin,
“Lifetime of racetrack skyrmions,” vol. 8, no. 1, p. 3433. [Online].
Available: https://doi.org/10.1038/s41598-018-21623-3

[29] S.-Z. Lin, C. Reichhardt, C. D. Batista, and A. Saxena, “Particle model
for skyrmions in metallic chiral magnets: Dynamics, pinning, and creep,”
Physical Review B, vol. 87, no. 21, p. 214419, 2013.

[30] K. Litzius, I. Lemesh, B. Kr¨uger, P. Bassirian, L. Caretta, K. Richter,
F. B¨uttner, K. Sato, O. A. Tretiakov, J. F¨orster, R. M. Reeve,
M. Weigand, I. Bykova, H. Stoll, G. Sch¨utz, G. S. D. Beach, and
M. Kl¨aui, “Skyrmion hall effect revealed by direct time-resolved x-ray
microscopy,” Nature Physics, vol. 13, no. 2, pp. 170–175, 2017.
[31] W. Kang, C. Zheng, Y. Huang, X. Zhang, W. Lv, Y. Zhou, and W. Zhao,
“Compact modeling and evaluation of magnetic skyrmion-based race-
track memory,” IEEE Transactions on Electron Devices, vol. 64, no. 3,
pp. 1060–1068, March 2017.

[32] B. F. McKeever, D. R. Rodrigues, D. Pinna, A. Abanov, J. Sinova, and
K. Everschor-Sitte, “Characterizing breathing dynamics of magnetic
skyrmions and antiskyrmions within the hamiltonian formalism,”
Phys. Rev. B, vol. 99, p. 054430, Feb 2019. [Online]. Available:
https://link.aps.org/doi/10.1103/PhysRevB.99.054430

[33] H. T. Fook, W. L. Gan, I. Purnama, and W. S. Lew, “Mitigation
of magnus force in current-induced skyrmion dynamics,” vol. 51,
no. 11, pp. 1–4. [Online]. Available: http://ieeexplore.ieee.org/document/
7108038/

[34] K. Fallon, S. Hughes, K. Zeissler, W. Legrand, F. Ajejas, D. Maccariello,
S. McFadzean, W. Smith, D. McGrouther, S. Collin, N. Reyren,
V. Cros, C. H. Marrows, and S. McVitie, “Controlled individual
skyrmion nucleation at artiﬁcial defects formed by ion irradiation,”
p. 1907450. [Online]. Available: https://onlinelibrary.wiley.com/doi/abs/
10.1002/smll.201907450

