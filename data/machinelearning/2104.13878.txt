2
2
0
2

y
a
M
1
2

]

C
O
.
h
t
a
m

[

3
v
8
7
8
3
1
.
4
0
1
2
:
v
i
X
r
a

A Multiobjective Approach for Sector Duration
Optimization in Stereotactic Radiosurgery Treatment
Planning

Oylum S¸eker
Department of Mechanical and Industrial Engineering, University of Toronto, Toronto, Ontario, Canada,
oylum.seker@utoronto.ca

Mucahit Cevik
Department of Mechanical and Industrial Engineering, Ryerson University, Toronto, Ontario, Canada,
mcevik@ryerson.ca

Merve Bodur
Department of Mechanical and Industrial Engineering, University of Toronto, Toronto, Ontario, Canada,
bodur@mie.utoronto.ca

Young Lee-Bartlett
Elekta Instrument AB, Toronto, Ontario, Canada,
young.lee-bartlett@elekta.com

Mark Ruschin
Department of Radiation Oncology, Sunnybrook Health Sciences Centre, University of Toronto, Ontario, Canada,
mark.ruschin@sunnybrook.ca

Sector duration optimization (SDO) is a problem arising in treatment planning for stereotactic radiosurgery

on Gamma Knife. Given a set of isocenter locations, SDO aims to select collimator size conﬁgurations

and irradiation times thereof such that target tissues receive prescribed doses in a reasonable amount of

treatment time, while healthy tissues nearby are spared. We present a multiobjective linear programming

model for SDO to generate a diverse collection of solutions so that clinicians can select the most appropriate

treatment. We develop a generic two-phase solution strategy based on the ε-constraint method for solving
multiobjective optimization models, 2phasε, which aims to systematically increase the number of high-

quality solutions obtained, instead of conducting a traditional uniform search. To improve solution quality

further and to accelerate the procedure, we incorporate some general and problem-speciﬁc enhancements.
Moreover, we propose an alternative version of 2phasε, which makes use of machine learning tools to reduce

the computational eﬀort. In our computational study on eight previously treated real test cases, a signiﬁcant
portion of 2phasε solutions outperformed clinical results and those from a single-objective model from the

literature. In addition to signiﬁcant beneﬁts of the algorithmic enhancements, our experiments illustrate the

usefulness of machine learning strategies to reduce the overall run times nearly by half while maintaining or

besting the clinical practice.

Key words : Multiobjective optimization; sector duration optimization; stereotactic radiosurgery;

ε-constraint method; two-phase algorithm

1

 
 
 
 
 
 
2

1.

Introduction

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

Radiotherapy is one of the most commonly used cancer treatment methods. The technique

uses high-energy radiation to kill or damage cancer cells, and is employed in approximately

half of the treatments, sometimes in conjunction with chemotherapy and surgery (Breed-

veld et al. 2019). There are diﬀerent forms of radiotherapy, one of which is stereotactic

radiosurgery (SRS), a technique speciﬁcally designed to deliver high doses of radiation

from multiple positions to precisely deﬁned targets in the brain. Gamma Knife was the
ﬁrst SRS delivery system, but the state of the art is Leksell Gamma Knife® (LGK) Icon™

by Elekta (Stockholm, Sweden) (Zeverino et al. 2017).

LGK Icon™ (and also its predecessor Perfexion™) has eight independently controlled

sectors and contains 192 cobalt-60 (a radioactive isotope) sources, 24 per sector. Each

sector can be robotically moved to one of the three circular collimator sizes (with 4, 8,

and 16 mm diameters) or be blocked. All the sources in a sector deliver radiation beams

through the chosen size, or are completely blocked. A patient lies still on a treatment couch

and radiation beams are emitted from the sectors to the target, where their focal point is

termed an isocenter. The couch remains stationary while radiation is being delivered to a

speciﬁc isocenter and is repositioned automatically for other isocenter locations deﬁned in

the treatment plan. All beams are blocked as the patient is repositioned. Each isocenter is

irradiated for a certain amount of time through one or more collimator conﬁgurations, and

the treatment session is complete once the planned radiation amounts have been delivered

to each isocenter.

Diﬀerent types of radiotherapy techniques require similar decisions to be made to deter-

mine a treatment plan. Common decisions include the irradiation times as well as the

positions and aperture shapes and/or sizes through which radiation beams target cancer-

ous regions. For Gamma Knife systems, a set of aperture sizes at every sector is ﬁxed on

the device, and the planner needs to decide on the irradiation durations for each of them.

SRS treatment planning has two main steps, those being (i) determination of the number

and locations of isocenters, and (ii) ﬁnding the irradiation times of each isocenter. Existing

studies mostly handle these two problems separately. For the former, heuristic methods

are commonly used; for instance, Ghobadi et al. (2012) combine the well-known grassﬁre

algorithm (Wagner et al. 2000) with sphere packing, and Doudareva et al. (2015) introduce

a method based on skeletonization techniques. We focus on the latter problem in this study.

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

3

Given a set of isocenter locations, the sector duration optimization (SDO) problem aims

to ﬁnd the irradiation durations of every isocenter from each sector through each collimator

size, such that a quality solution is achieved in terms of clinical goals. The problem has

high dimensionality and incorporates a large number of clinical restrictions. Consequently,

it is not generally possible to generate an optimal or clinically acceptable treatment plan

simply by inspection, thus mathematical models and optimization tools are needed.

As in other radiotherapy problems, multiple criteria are considered in SDO. Target sites

should receive the prescribed doses, while surrounding tissues should be spared. The dura-

tion of the treatment is another important consideration, because longer treatment times

may cause patient discomfort and increases the possibility of patient movement leading to

dose uncertainties (Padilla and Palta 2019). These and other criteria are commonly consid-

ered in radiotherapy treatment planning. They are conﬂicting in nature, and it is generally

not possible to simultaneously attain individual best values for each. Moreover, clinicians

are often interested in evaluating trade-oﬀs among competing criteria and choosing a plan

most suitable to the speciﬁcs of a case. Motivated by this, we propose a multiobjective

approach for SDO arising in SRS treatment planning on Gamma Knife systems, partic-
ularly with LGK Icon™. Our aim is to provide a collection of solutions addressing the

trade-oﬀs between conﬂicting clinical goals, and thereby oﬀer ﬂexibility to decision makers

as they select a plan for an individual patient.

We present a multiobjective linear programming model for SDO, with the the objectives

being to minimize the underdosing of tumors, the overdosing of tumors and healthy tis-

sues, and the treatment time. We introduce a two-phase solution approach that employs

a widely-used technique to solve multiobjective optimization models, namely, the ε-

constraint method, which consists of optimizing one objective while bounding the others.

We perform the ﬁrst phase to explore solutions from all parts of the feasible space, and

the second phase to restrict the search to achieve a denser representation of clinically

desirable solutions. Generated solutions yield Pareto-optimal points in terms of the model

objectives; however, we continue the evaluative process by evaluating a treatment plan

with some widely-used clinical measures, namely, tumor coverage and Paddick conformity

index. Note that these clinical metrics are not directly optimized by the model, and in that

regard, our objectives, other than the treatment time, serve as surrogates to derive solu-

tions that yield clinically preferable options. We conduct computational experiments using

4

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

anonymized data from eight previously treated cases, and we compare our results with

the clinical plans and the treatment plans from the single-objective model by Cevik et al.

(2019). We note that even though we demonstrate our solution scheme on the SDO prob-
lem with LGK Icon™, it is a generic framework that can be applied to other radiosurgery

modalities, and even other multiobjective problems.

Our main contributions can be summarized as follows:
• We present a multiobjective linear programming model for SDO and generate a diverse

collection of solutions, oﬀering ﬂexibility to decision makers to select one that best

suits patient-speciﬁc needs. We also derive inequalities that improve our model and

that aid the solution process.

• We provide a self-contained alternative proof showing that a properly constructed

ε-constraint model yields an eﬃcient solution for the multiobjective model.

• We prevent generation of repeating solutions in the ε-constraint method by extending

an existing strategy to linear programs, applicable regardless of problem context.
• We propose a generic and eﬃcacious two-phase ε-constraint method, 2phasε, that

systematically focuses the search on more favorable regions. We additionally develop
an alternative version of 2phasε that makes use of machine learning tools to predict

performance, which thereby reduces the computational burden.

The rest of the paper is organized as follows. We survey the related literature in Sec-

tion 2 and present our multiobjective model for SDO in Section 3. We then review the

ε-constraint method and propose problem-speciﬁc improvements in Section 4, and we pro-
vide algorithmic enhancements in Section 5. We introduce 2phasε in Section 6, report our

experimental results in Section 7, and conclude our work in Section 8. We provide all the

proofs in Appendix A.

2. Literature Review

We ﬁrst review the related SRS treatment planning literature, and then provide an overview

of the related multiobjective optimization studies.

2.1. SRS Treatment Planning

Several SRS technologies have been developed since the introduction of Gamma Knife

devices. Linear accelerator-based systems comprise a commonly-used class of such devices,

which are widely used for conventional radiotherapy, starting in the early 1980s (Chen and

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

5

Girvigian 2005). There are various studies focusing on SRS treatment planning with such

delivery systems, e.g., (Yu 1997, Yu et al. 2000, Lee et al. 2000). Linear accelerator-based

systems are also used in intensity modulated radiation therapy (IMRT), and there exist

various studies presenting multiobjective approaches for IMRT treatment planning, e.g.,

(Romeijn et al. 2004, Breedveld et al. 2012, Cabrera-Guerrero et al. 2018a,b). Though

SDO has similarities with IMRT treatment planning, the diﬀerences in delivery devices

precludes a direct correspondence between them. We refer the interested reader to the

survey studies by Ehrgott et al. (2010) and Breedveld et al. (2019) on optimization for

IMRT treatment planning and multiobjective optimization for radiotherapy in general,

respectively. We restrict our review to studies focusing on SDO on Gamma Knife systems,

sometimes in conjunction with isocenter placement problem.

Relatively early studies on Gamma Knife treatment planning for older devices required

manual interventions to change the collimator size and couch position, leading to limita-

tions on the number of isocenters and collimator sizes. These studies use mixed integer and

nonlinear programming models, as well as heuristics to determine the isocenter locations

and irradiation durations, e.g., (Ferris and Shepard 2000, Shepard et al. 2000, 2003, Zhang

et al. 2001, 2003). A viable strategy is to determine a treatment plan in multiple steps to

distribute the computational burden, starting with a coarse grid approximation by consid-

ering only a subset of unit volumes and reﬁning it in subsequent steps, e.g., (Ferris et al.

2002, 2003, Cheek et al. 2005). Ferris et al. (2002) solve a series of nonlinear and mixed

integer programming models, where solution quality gradually improves while maintaining

clinical eﬃcacy. A similar approach is followed by Ferris et al. (2003). An earlier work

by Shepard et al. (1999) presents radiotherapy treatment planning models that impose

bounds on one or more criteria while optimizing a weighted sum of them. The ε-constraint

model is built similarly, and the ε-constraint method we employ systematically varies the

bounds on the objectives and solves the corresponding models to obtain diﬀerent solu-

tions. Another relevant study in that regard is by Schlaefer and Schweikard (2008), which

presents a step-wise multiobjective approach that iteratively reaches a desired trade-oﬀ

between clinical goals by optimizing one objective and bounding the others at each step.

The method by Lee et al. (2006) derives an initial plan by ﬁnding a closely matching

treatment volume from a database of past treatments, and it improves the treatment with

a nonlinear objective function that seeks to improve the conformity.

6

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

In the studies handling treatment planning for more recent Gamma Knife systems,

diﬀerent mathematical optimization models are presented with multiple objectives that

are mostly combined into one as a weighted sum. Heuristic and exact methods then solve

the resulting single objective model. Proposed models for SDO include a second-order

cone optimization model (Oskoorouchi et al. 2011); convex models with quadratic and/or

linear penalty terms (Ghobadi et al. 2012, 2013, Ghaﬀari et al. 2017); linear, quadratic,

and unconstrained convex moment-based penalty models (Cevik et al. 2018); and more

standard linear models (Cevik et al. 2019, Sj¨olund et al. 2019, Tian et al. 2020).

We lastly review multiobjective approaches for Gamma Knife treatment planning that

explore the trade-oﬀs among the clinical goals by oﬀering an assortment of solutions. One

such study by Giller (2011) conducts Pareto analysis via a heuristic, namely, a genetic

algorithm, by considering the trade-oﬀ between the percentage of tumor covered and the

volume of normal tissue exposed. Another work by Svensson (2014) adapts an existing

Pareto-surface approximation algorithm for SDO, and it develops a graphical user interface

to aid the selection of a treatment. The work by Ripsman et al. (2015) also develops a

graphical user interface for SRS. The underlying algorithm solves an approximate linearized

model that minimizes a weighted sum of doses delivered to ring tissues.

2.2. Multiobjective Optimization

A goal in multiobjective optimization is to generate the set of all Pareto-optimal points

(Pareto set), although if this is not desirable or reasonable, then a representative sub-

set is sought. The ε-constraint method is a generic technique for handling multiobjective

optimization problems, introduced by Haimes et al. (1971) and later discussed in detail

by Cohon (1978) and Chankong and Haimes (1983). It has been widely used for diﬀerent
model classes, such as linear and integer programs, to ﬁnd the Pareto set (e.g., see ¨Ozlen

and Azizo˘glu (2009), Kirlik and Sayın (2014), Tamby and Vanderpooten (2021)), or a rep-

resentation of it (e.g., see Eus´ebio et al. (2014), Jindal and Sangwan (2017)) which we also

aim to ﬁnd in this study.

The idea of the ε-constraint method is to optimize one objective while bounding the

remaining ones, and to explore diﬀerent Pareto-optimal points by varying the bounds on

the objectives. Selection of the objective bounds determines what portion of the Pareto set

the model is conﬁned to, and it is thus an important design component of the ε-constraint

method. The work by Cohon (1978) suggests to place an evenly spaced grid over the

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

7

objective space and solve the model at each point on the grid which serves as objective

bounds. This technique has been widely used in the literature, e.g, by Mavrotas (2009).

We also employ this technique within each phase of our two-phase ε-constraint method,
2phasε, which is a generic framework particularly suitable for problems where at least

some of the model objectives serve as surrogates to the actual performance measures, those
being widely-used clinical metrics in our case. In the regular version of 2phasε, we carry

out an evenly-distributed search in the ﬁrst phase, and based on the values of the clinical

metrics that the obtained solutions yield, we determine the promising regions to conduct

another evenly-distributed search therein in the second phase. In the machine learning-
guided version of 2phasε, we make predictions to further guide the search in both phases

in order to reduce the overall computational eﬀort.

The ε-constraint method we employ in this study is most closely related to the works of

Cohon (1978), Mavrotas (2009), Mavrotas and Florios (2013), Zhang and Reimann (2014)

and Nikas et al. (2020), which we discuss in more detail in Sections 4 and 5. We mention a

few other ε-constraint method related studies here, which are, to the best of our knowledge,

the remaining relevant works for this survey. The study by Laumanns et al. (2006) develops

an adaptive scheme, where the objective bounds are generated dynamically based on the

previously obtained solutions, and infeasible and already-discovered regions are updated

during the search. Another study by Sahebjamnia et al. (2015) presents a modiﬁed ε-

constraint model that incorporates decision maker’s preferences as objective weights, and it

uses that model to generate solutions while avoiding infeasibilities and repeating solutions.

The work by Jindal and Sangwan (2017) presents an interactive ε-constraint method that

produces sets of Pareto-optimal points until the decision maker is satisﬁed with one of

them. If the decision maker does not pick any of the presented points, the most preferred

segments of objective ranges are determined and the next search is conducted there. The

similarity of our study with the work of Jindal and Sangwan (2017) is that we also identify

the preferred objective ranges and ultimately conﬁne our search to those regions, but using

certain clinical metrics within a two-phase framework rather than interactively consulting

to a decision maker.

We note that some attributes have been introduced to assess the quality of discrete

representations of the Pareto set. For instance, Sayın (2000) deﬁnes coverage, uniformity,

and cardinality as the three attributes of quality, while Shao and Ehrgott (2016) propose

8

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

a method that provides guarantees to the extent coverage and uniformity are achieved.

Previous quality measures from the literature do not align well with our goal of producing

solutions from speciﬁc parts of the feasible space, particularly those that yield clinically

desirable performance. Therefore, we chose a general-purpose solution method for multi-

objective optimization models, namely, the ε-constraint method, and we tailor it for our

problem within a two-phase framework, explained in Section 6.

3. A Multiobjective Model for SDO

We assume a predetermined set of isocenter positions, with the goal of SDO being to

determine the irradiation times through every sector for each collimator size and isocen-

ter location. The received radiation should conform to prescribed doses for the targets,

and exposure of nearby healthy tissues should be as low as possible. These nearby tissues

involve those surrounding the targets, which we label as rings, and sometimes speciﬁc

organs as well, called organs-at-risk (OARs) or critical structures, such as the brain stem

or cochlea, which are especially radiosensitive. Also, the beam-on time (BOT), i.e., the

total radiation delivery time of the treatment, should be as low as possible. We note that

BOT approximately indicates the overall treatment time, because automatic collimator

adjustment takes less than three seconds (Novotn`y 2012) and does not exceed a few min-

utes in total. All structures are discretized into a collection of small cubes, called voxels

(volumetric pixels), for planning purposes, which are typically 1 mm or less in length.

3.1. Notation

Let L be the set of all structures, comprised of the sets of tumors, rings, and OARs denoted

by T , R, and C, respectively. Each structure (cid:96) ∈ L consists of a set V(cid:96) of voxels. The sets of

isocenters, sectors, and collimator sizes are respectively I, S, and K. The G(cid:96)vθsk parameters

represent the dose rate (dose per unit time) absorbed by voxel v ∈ V(cid:96) of structure (cid:96) ∈ L via
isocenter θ ∈ I through sector s ∈ S at collimator size k ∈ K. The Dt and Dmax

parameters

(cid:96)

respectively denote the prescribed dose for tumor t ∈ T and the desired maximum dose for

structure (cid:96) ∈ L, measured in units of gray (Gy).

The variable gθsk is the duration isocenter θ ∈ I is irradiated through sector s ∈ S at

collimator size k ∈ K, and d(cid:96)v denotes the dose received by voxel v ∈ V(cid:96) of structure (cid:96) ∈ L.

Since it may not always be possible to deliver the required dose to each voxel of the targets

without violating prescribed limitations, we deﬁne auxiliary under- and overdose variables

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

9

as well. The variable utv denotes the underdose amount to voxel v ∈ Vt of tumor t ∈ T , and

o(cid:96)v denotes the overdose to voxel v ∈ V(cid:96) of structure (cid:96) ∈ L. Finally, bθ is the BOT value of

isocenter θ ∈ I.

3.2. Five-Objective Linear Program

Our model is an extension of the single-objective model by Cevik et al. (2018) to our

multiobjective setting:

min
h,d,g,b,u,o

(h1, h2, h3, h4, h5)

s.t.

h1 =

(cid:88)

(cid:88)

orv

h2 =

h3 =

h4 =

h5 =

d(cid:96)v =

dcv +

(cid:88)

(cid:88)

drv

r∈R

v∈Vr

otv

utv

r∈R
(cid:88)

v∈Vr
(cid:88)

c∈C
(cid:88)

v∈Vc
(cid:88)

t∈T
(cid:88)

v∈Vt
(cid:88)

t∈T
(cid:88)

v∈Vt

bθ

θ∈I
(cid:88)

(cid:88)

(cid:88)

θ∈I

s∈S

k∈K

G(cid:96)vθsk gθsk

(cid:96) ∈ L, v ∈ V(cid:96)

dtv + utv ≥ Dt

dtv − otv ≤ Dmax

t

drv − orv ≤ Dmax

r

dcv ≤ Dmax

c
(cid:88)

bθ ≥

gθsk

k∈K

bθ ≥ 0

gθsk ≥ 0

utv ≥ 0

o(cid:96)v ≥ 0

t ∈ T , v ∈ Vt

t ∈ T , v ∈ Vt

r ∈ R, v ∈ Vr

c ∈ C, v ∈ Vc

θ ∈ I, s ∈ S

θ ∈ I

θ ∈ I, s ∈ S, k ∈ K

t ∈ T , v ∈ Vt

(cid:96) ∈ L, v ∈ V(cid:96)

(1a)

(1b)

(1c)

(1d)

(1e)

(1f)

(1g)

(1h)

(1i)

(1j)

(1k)

(1l)

(1m)

(1n)

(1o)

(1p)

We denote the ﬁve objectives of our MOLP with variables h1, . . . , h5 in (1a), and we set

their associated expressions in constraints (1b)–(1f). The objective function denoted with

10

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

h1 is the total overdose amount to rings, h2 is the total dose amount to OARs and rings,

h3 is the total overdose amount to tumors, h4 is the total underdose amount to tumors,

and h5 is the BOT of the treatment plan.

Constraints (1g) determine the dose delivered to each voxel in each structure. Constraints

(1h) through (1k) aim to keep the dose delivered to voxels of each structure within desired

limits. In particular, constraints (1h) enforce the received dose and underdose amount to

add up to at least the required dose for each tumor voxel. Similarly, constraints (1i) and

(1j) respectively link the under- and overdose amounts with their received doses and dose

limits for tumors and rings. Since OARs are subject to strict dose restrictions, we do not

deﬁne overdose variables for OARs, and thus constraints (1k) simply ensure that OARs

do not receive more than their maximum allowed doses. For the sake of ﬁnding a feasible

treatment plan, the model is allowed to go beyond the maximum dose limits for rings, in

which case the excessive amount of radiation is measured by overdose variables.

At each isocenter location, radiation is simultaneously delivered from all sectors that

are not blocked, through one or more collimator sizes. The amount of time spent at each

sector s is the total time used over all collimator sizes k ∈ K in it, and the time spent at

each isocenter location θ is the maximum time spent over all sectors s ∈ S. Constraints (1l)

force the BOT value at each isocenter to be at least as much as the total time radiation

is delivered to it. The sum of bθ variables then corresponds to total BOT. Constraints

(1m)–(1p) are nonnegativity restrictions on the decision variables.

The model in (Cevik et al. 2019) has constraints as (1g)–(1m), and its objective is a

weighted sum of the objectives that we treat separately with the diﬀerence being that we

do not allow overdosing of OARs to protect the critical structures from excessive damage.

We note that these models are not speciﬁc to LGK Icon™ and that they apply to other

versions of the device.

Identifying the weights to combine the objectives as a weighted sum is a nontrivial task.

For instance, Cevik et al. (2019) and Babier et al. (2018) determine the objective weights

via a simulated annealing algorithm and inverse optimization, respectively. Our solution

strategy is based on treating the diﬀerent objectives separately rather than combined, as

we explain in the next section.

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

11

4. The ε-Constraint Method

The traditional approach to solving multiobjective optimization models is scalarization,

i.e., formulating a single-objective model related to it (Ehrgott 2005). The ε-constraint

method is one of the most popular scalarization techniques for general multiobjective

optimization models. We review the ε-constraint method and present some problem-speciﬁc

improvements.

4.1. Preliminaries

A generic multiobjective program has the form

MOP : min
x∈X

(f1(x), . . . , fp(x))

(2)

where p ∈ Z+ is the number of objectives, x is the vector of decision variables, X ⊆ Rn is
the set of feasible solutions, and f : X → Rp maps each solution x ∈ X into a p-dimensional
objective vector f (x) := (f1(x), . . . , fp(x)), with fi : X → R for i ∈ {1, . . . , p}.

A solution x ∈ X is weakly eﬃcient if there is no ˜x ∈ X satisfying fi(˜x) < fi(x) for all

i ∈ {1, . . . , p}. A solution x ∈ X is eﬃcient if there exists no other solution ˜x ∈ X such that

fi(˜x) ≤ fi(x) for all i ∈ {1, . . . , p}, with at least one inequality being strict, i.e., fi(cid:48)(˜x) < fi(cid:48)(x)
for some index i(cid:48). Similarly, f (x) dominates f (˜x) if fi(x) ≤ fi(˜x) for all i ∈ {1, . . . , p}, with at
least one index i(cid:48) such that fi(cid:48)(x) < fi(cid:48)(˜x) holds. An objective vector f (x) is nondominated,

or Pareto-optimal, if there is no other solution ˜x ∈ X such that f (˜x) dominates f (x). The

set of all Pareto-optimal points is the Pareto set.

4.2. The Formulation

The ε-constraint method ﬁrst appeared in (Haimes et al. 1971), but it is discussed in

detail in (Cohon 1978) and (Chankong and Haimes 1983). In this method, an ε-constraint

formulation is constructed for MOP by selecting one of the objectives as being primary,

then minimizing it while constraining the remaining p − 1 objectives. An ε-constraint

formulation for MOP is

min
x∈X

fk(x)

s.t.

fi(x) ≤ εi

i ∈ {1, . . . , p}, i (cid:54)= k

(3)

where εi bounds the ith objective. A solution ˆx ∈ X is eﬃcient if and only if it is an

optimal solution of the ε-constraint model in (3) for every k = 1, . . . , p, with εi = fi(ˆx) for

12

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

i = 1, . . . , p, i (cid:54)= k. This means that with appropriate choices of ε, all eﬃcient solutions

are identiﬁable in theory, independent of the structure of X (Chankong and Haimes 1983,

Ehrgott and Ruzika 2008).

The ε-constraint model relates to a weighted sum model P (w) that combines objectives

as a weighted sum, i.e., P (w) : min {(cid:80)p

i=1 wifi(x) : x ∈ X }, where wi ≥ 0 for all i ∈ {1, . . . , p}
wi = 1. If ˆx is an optimal solution to (3) with εi = fi(ˆx), i (cid:54)= k and if X and fi(x)’s are

and

convex, then ˆx is optimal for P (w) for some nonnegative w. Conversely, if ˆx is an optimal

p
(cid:80)
i=1

solution for P (w), then either (i) if wk > 0, ˆx is also optimal for (3) with εi = fi(ˆx), i (cid:54)= k,

or (ii) if ˆx is the unique minimizer of P (w), then ˆx is optimal for (3) with εi = fi(ˆx), i (cid:54)= k

for all k (Chankong and Haimes 1983).

The ε-constraint method solves (3) (or a modiﬁed version of it, which we present in the

sequel) for diﬀerent ε-vectors to generate a diverse set of eﬃcient solutions. The collection

of ε-vectors is built by determining a range of values for each individual εi parameter and

systematically combining them.

Guaranteed eﬃciency of solutions. An optimal solution to the ε-constraint formulation

in (3) is not guaranteed to be an eﬃcient solution for MOP; it may be weakly eﬃcient

(Cohon 1978, Chankong and Haimes 1983). To ensure that optimal solutions of the ε-

constraint model are eﬃcient, the following modiﬁed formulation is proposed by Ehrgott

and Ruzika (2008) and Mavrotas (2009). Letting f1 denote the primary objective for sim-

plicity,

MOP(ε) :

min
x∈X , y∈Rp−1

+

f1(x) −

p
(cid:88)

i=2

βiyi

(4)

s.t.

fi(x) + yi = εi,

i ∈ {2, . . . p}

where βi’s are strictly positive weight parameters for the slack variables yi’s. We place no

particular hierarchy among the objectives in our problem and scale the slack terms in the

objective function with the widths of the ranges that the fi(x)’s can achieve, as suggested

by Mavrotas (2009). Namely, we set βi = β/δi, where fi(x) spans a width of δi, and β > 0,

which is chosen to be suﬃciently small.

Alternative proof of correctness. The optimal solutions of (4) being eﬃcient solutions

for MOP follows from Lemma 3.1 and Theorem 3.1 in the work of Ehrgott and Ruzika

(2008), proven by making use of other ﬁndings and deﬁnitions presented in that paper.

The study of Mavrotas (2009) also provides a proposition to show this result, but the proof

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

13

does not fully show the generality of the argument. We provide a simple and self-contained

alternative proof to the following in the Online Supplement.

Proposition 1. An optimal solution to (4) with βi > 0 for all i ∈ {2, . . . , p} is an eﬃ-

cient solution of MOP in (2).

We note that not only an optimal solution of the ε-constraint model in (4) is an eﬃcient

solution for MOP, but also any eﬃcient solution for MOP is in theory attainable through

(4) with appropriate choices of ε. A weighted sum model, on the other hand, is not able

to attain some eﬃcient solutions (unsupported solutions) for nonconvex problems (Ehrgott

2006).

4.3. Procedure to Set ε-vectors

Cohon (1978) proposed a method to build a set of ε-vectors that was later implemented

by Mavrotas (2009). The scheme has two main steps:

(i) Construct a payoﬀ table to set the objective ranges, and

(ii) Divide each range into equidistant points and use their combinations as ε-vectors.

4.3.1. Setting the objective ranges. Let lbi and ubi respectively denote the lower and

i and ube

upper limits for fi(x), and lbe
attains over the set of eﬃcient points of MOP. Ideally, lbi = lbe

i denote the minimum and maximum values fi(x)
i values
can be obtained by minimizing fi(x) over the MOP feasible region, but it is nontrivial
to determine the ube

i values (Weistroﬀer 1985, Isermann and Steuer 1988). A commonly
used alternative is to use surrogates to construct a payoﬀ table. To this end, we employ

i and ubi = ube

i . The lbe

lexicographic optimization, which has been tested by Isermann and Steuer (1988) and later

used by Mavrotas (2009). This method takes an ordering of p objectives and sequentially

optimizes each with the optimal values of the previous objectives being ﬁxed to obtain a

nondominated point in the end. The nondominated point populates one row in the payoﬀ

table. This process is carried out p times with a diﬀerent objective at the start of the

ordering, as shown in Algorithm 1. Then, lbi and ubi values are speciﬁed as the lowest and
highest values of the associated objectives, respectively. This way, we have lbi = lbe
ubi values may fall below or exceed the ube

i , but the
i values (Cohon 1978, Weistroﬀer 1985, Isermann
and Steuer 1988). We note that we use nondominated points to populate the payoﬀ table

in order to obtain possibly smaller ubi values, because our preliminary experiments showed

that higher values do not lead to clinically desirable solutions.

14

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

Algorithm 1 Setting objective ranges

Input: Model Pk : min
x∈X

fk(x) for k ∈ {1, . . . , p}

Output: Lower and upper limit pairs (lbi, ubi) of fi’s ∀i ∈ {1, . . . , p}

1: procedure SetObjRanges

2:

3:

4:

5:

6:

7:

for k := 1, . . . , p do

for i := k, . . . , p, 1, . . . , k − 1 do

Set the objective of Pk as fi(x)

Solve Pk to get the optimal objective value zk

i and add fi(x) ≤ zk

i to Pk as a constraint

for all i ∈ {1, . . . , p} do

lbi ← mink{zk

i }, ubi ← maxk{zk
i }

4.3.2. Constructing the ε-vectors. We divide the objective ranges [lbi, ubi],

for

i ∈ {2, . . . , p}, into equal-width intervals to create a set Ei of equidistant εi values, a tech-

nique suggested by Cohon (1978) and adopted by Mavrotas (2009). We essentially place

a grid over the space of objectives in the constraint set as described by Cohon (1978). We

set the number ri of equidistant points for each objective i ∈ {2, . . . , p}, and enumerate the

set E of all ε-vectors beforehand as

E := E2 × . . . × Ep

where

(cid:26)

lbi + j ·

Ei :=

ubi − lbi
ri − 1

(cid:27)

j=0,1,...,ri−1

, ∀i ∈ {2, . . . , p}.

(5)

(6)

4.4. SDO-speciﬁc Improvements

The procedure above sets the objective ranges regardless of the problem context. Some

portions of these ranges, however, may yield solutions not useful in practice. One may

make use of the problem characteristics or some desired levels in the outputs to reduce the

objective ranges.

While constructing the payoﬀ table, recall that each objective is minimized once before

ﬁxing the value of any objective. When we start with the BOT objective, the model simply

chooses not to deliver any radiation. As a result, the upper limit of the range for total

underdose is always the sum of the prescribed doses, and the lower limit of the range for

BOT is zero, which is unrealistic.

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

15

There are certain clinical performance criteria used to assess the quality of a treatment

plan (discussed in more detail in Section 6). One of the most important measures is tumor

coverage, which is the proportion of tumor voxels receiving at least the prescribed doses.

Depending on the ranges from which εi’s are chosen, a considerable number of ε-vectors

may yield coverage values that are not clinically acceptable. We can, however, use some

minimum clinically desirable coverage value to conﬁne the objective ranges and to derive

additional constraints to tighten the model. We apply this idea for tumor underdosing and

BOT objectives.

4.4.1. Upper bound for tumor underdose. We ﬁrst show that there is a direct relation

between the coverage achieved by a solution and the total underdose amounts for tumors.

Proposition 2 (Underdose upper bound). Any feasible solution to the MOLP in

(1) yielding Covt’s as the tumor coverage values satisﬁes the following inequalities:

(cid:88)

v∈Vt

utv ≤ Dt |Vt| (1 − Covt)

t ∈ T

(7)

Proposition 2 implies that if we set a minimum desired coverage value Covmin and use it

instead of Covt, then the inequalities in (7) are necessary for the MOLP to yield solutions
with at least Covmin coverage for each tumor, albeit they are not suﬃcient generally.

Therefore, as an improvement to our model, we incorporate (7) as an additional set of

constraints, with Covmin in place of Covt.

We further use these inequalities to tighten the upper limit ub4 of the range of the

underdose objective h4. Summing each side over t ∈ T , we obtain

h4 =

(cid:88)

(cid:88)

t∈T

v∈Vt

utv ≤

(cid:88)

t∈T

Dt |Vt| (1 − Covt).

(8)

If we replace Covt’s in (8) with a minimum desired coverage value Covmin, the new upper

limit for the range of the underdose objective h4 is smaller than the one we obtain in our

payoﬀ table, as the minimum desired coverage would never be zero.

4.4.2. Lower bound for BOT. Using the constraints of our MOLP and Proposition 2,

we improve the lower limit for the range of the BOT objective.

16

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

Proposition 3 (BOT range tightening). Any feasible solution to the MOLP in (1)

yielding Covt’s as the coverage values satisﬁes the following inequality:






max
t∈T

Dt Covt
{Gtvθsk} |S|

max
v,θ,s,k






≤ h5.

(9)

For a minimum desired coverage value Covmin to replace Covt in (9), this new bound

replaces the zero lower limit for the range of the BOT objective obtained from the payoﬀ
table. When using (7), (8), and (9), we take Covmin as 0.98.

5. Algorithmic Enhancements

We next discuss two enhancements that accelerate the ε-constraint method, those being

(i) early detection of infeasibilities, and (ii) early detection of repeating Pareto-optimal

points.

5.1. Early Detection of Infeasibilities

Even though each individual objective range (lbi, ubi) contains attainable values for fi,

coexistence of εi’s drawn from these intervals may lead to infeasible MOP(ε) models. This

fact risks computational resources to identify infeasibilities, and we posit the omission of

ε-vectors that lead to infeasibility.

Early detection of infeasibilities has been used in the augmented ε-constraint method

(AUGMECON) of Mavrotas (2009) and was later improved in SAUGMECON by Zhang

and Reimann (2014). SAUGMECON discards the ε-vectors that imply infeasibility, and

we do the same. Once we encounter a vector εinfeas such that MOP(εinfeas) is infeasible, we

search through the unexplored ε-vectors to ﬁnd those that are more restrictive than εinfeas

and remove them from consideration. That is, we extract

E (cid:48) := (cid:8)ε ∈ E : ∃i ∈ {2, . . . , p} with εi > εinfeas

i

(cid:9) ⊆ E.

(10)

5.2. Early Detection of Repeating Pareto-optimal Points

We also detect ε-vectors that yield an already discovered Pareto-optimal point. This

scheme, which is due to Mavrotas and Florios (2013), is based on generating ε-vectors via

nested loops and bypassing some iterates in the innermost loop. SAUGMECON extends

this method by forwarding some of the iterates of the outer loops, and it also uses the

observation that if an optimal solution remains feasible in a tighter solution space, it

remains optimal too. Nikas et al. (2020) also improves upon the work of Mavrotas and

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

17

Florios (2013) in a similar way. We exploit some properties of linear programs and propose

a generalized method to identify repeating solutions.

Let ˆX(ε) be the set of optimal solution vectors ˆx’s for MOP(ε), Nε(ˆx) be the index set
of nonbinding εi-constraints at ˆx, and ˆF (ε) be the set of objective vectors, f (ˆx)’s, for all
ˆx ∈ ˆX(ε).

Proposition 4 (Identifying repeating solutions). Suppose that MOP(ε) is a lin-
ear program. Let ˆx1 ∈ ˆX(ε1), Nε1(ˆx1) (cid:54)= ∅, and ˆf 1 := f (ˆx1). For a given ε2 with ε1 (cid:54)= ε2, if
ˆf 1
i ≤ ε2

k, ∀k ∈ {2, . . . , p} \ Nε1(ˆx1), then ˆf 1 ∈ ˆF (ε2).

i ∀i ∈ Nε1(ˆx1) and ε1

k = ε2

We note that there may be some ˆf 2 ∈ ˆF (ε2) with ˆf 2 (cid:54)= ˆf 1, but we ignore these because

they are likely similar to a discovered point. We scan the unexplored vectors and discard

those satisfying the conditions in Proposition 4. Namely, given a nondominated point
ˆf := f (ˆx) of MOLP, we extract

E (cid:48)(cid:48) :=

(cid:110)
ε ∈ E : ∃i ∈ Nε(ˆx) with εi < ˆfi or ∃k ∈ {2, . . . , p} \ Nε(ˆx) with εk (cid:54)= ˆfk

(cid:111)

⊆ E.

(11)

6. Two-phase ε-constraint Method

Determining an attainable range of values for each objective, whether using the procedure

in Section 4.3 or another, does not ensure that εi values within their identiﬁed ranges yield

a feasible solution. Moreover, it is not generally obvious which subintervals of the objective

ranges give desirable solutions with regard to representing the set of Pareto-optimal points.

This fact is further challenged in our model because solutions are assessed by metrics other

than our objectives, which are clinical proxies.

A straightforward way to reduce the likelihood of missing desirable solutions is to ﬁnely

divide the objective space and to increase the density of the ε-vectors. However, this scheme

burdens the computation eﬀort with several objectives. Moreover, we would rather devote

most of our computational eﬀort on obtaining desirable solutions, which is unlikely if we

simply increase ε-vector granularity without focusing on speciﬁc regions.

We introduce a two-phase ε-constraint method, called 2phasε that helps focus our search

of the ε-vectors. We explore in Phase I the overall objective space, generate solutions,

and identify the objective ranges on which desirable solutions can be obtained. Phase II

conﬁnes the search to those regions to diversify such solutions. We propose two versions

18

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

of 2phasε: the regular version, 2phasε-r (Section 6.1), and the machine learning-guided
version, 2phasε-ml (Section 6.2).

A ﬂow chart for 2phasε is in Figure 1. The sequence of boxes with solid borders and
solid arcs show the ﬂow for 2phasε-r, while ﬁlled boxes with dashed borders display the
digressions related to 2phasε-ml. The top and bottom parts of the ﬁgure are dedicated

to Phase I and Phase II, respectively, as indicated on the left panel (Phase I boxes in teal

blue, Phase II boxes in pink). We adopt such distinctions (achieved by colors and ﬁllings)

in the plots of Section 7.

We now generally present 2phasε and subroutines tailored for SDO.

Performance criteria. The ﬁve objectives we consider can have a wide range of nonneg-

ative values. Even though BOT corresponds to an actual amount of time (in minutes), and

is thus easy to interpret, the remaining objectives are only proxies for clinical benchmarks.

To this end, we consider two well-accepted clinical performance criteria, those being cov-

erage (Cov) and Paddick conformity index (PCI) (Paddick 2000). Cov is the proportion of

target volume receiving at least the prescription doses, and PCI additionally accounts for

healthy tissue exposure. PCI and Cov relate as

PCI =

(TVPIV)2
TV × PIV

= Cov ×

TVPIV
PIV

,

(12)

where TV is the target volume, TVPIV is the target volume that receives at least the pre-

scribed dose, and PIV is the total volume that receives at least the prescribed dose. Both

Cov and PCI range between zero and one, with higher values indicating better perfor-

mance. We heuristically infer ranges for the model objectives that yield desirable values

for these clinical measures, but we note that these clinical measures and the MOLP

objectives each provide valuable information not implied by the other. We also note that
2phasε is a generic strategy; one that can incorporate any set of such criteria to guide the

search process. For our purposes, we use Cov, PCI, and BOT as our performance criteria

henceforth.

6.1. Regular Version
We start Phase I of 2phasε-r by specifying the objective ranges following the procedure

in Section 4.3, in conjunction with the problem-speciﬁc improvements presented in Sec-

tion 4.4. We divide the ranges to generate ε-vectors and solve the corresponding MOP(ε)

Set objective ranges for

Phase I via Algorithm 1 and

problem-speciﬁc improvement

inequalities (8)–(9)

Construct the set

E I of ε-vectors via

equations (5)–(6)

Set
E I,Select ← E I

Pick a random ρ%
subset E I,Select ⊆ E I

Combine the

results from

Phases I & II

Find a subset E II,Select ⊆ E II

with desirable predicted

performance criteria values

via Algorithm 3 and

domination ﬁlter (13)

S¸
e
k
e
r

e
t

a
l
.
:

A
M
u
l
t
i
o
b
j
e
c
t
i
v
e
A
p
p
r
o
a
c
h

f
o
r

S
e
c
t
o
r
D
u
r
a
t
i
o
n
O
p
t
i

m
i
z
a
t
i
o
n

Solve MOP(ε) for ε ∈ E I,Select

incorporating early detection

ﬁlters (10) and (11)

Find a subset
E I,SelectMore ⊆ (E I \ E I,Select)

with desirable predicted

performance criteria values

via Algorithm 3 and

domination ﬁlter (13)

Solve MOP(ε) for ε ∈ E I,SelectMore

incorporating early detection

ﬁlters (10) and (11)

Combine the results

obtained with
E I,Select and E I,SelectMore

Solve MOP(ε) for ε ∈ E II,Select,

incorporating early detection

ﬁlters (10) and (11)

Set

E II,Select ← E II

Construct the set

E II of ε-vectors via

equations (5)–(6)

Set objective ranges

for Phase II

via Algorithm 2

P

H

A

S

E

I

P

H

A

S

E

II

Figure 1

Flow chart of our two-phase method, where boxes with solid borders show the regular version, ﬁlled boxes with dashed borders represent the

digressions for the machine learning-guided version. (Note that (11) only applies to the case of MOLP.)

1
9

20

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

models. In Phase II we take the Pareto-optimal points from Phase I and ﬁlter those deemed

desirable, an assessment that can depend on the MOP objectives, or other measures such as

Cov and PCI. We let the minimum and maximum values of the objectives over the ﬁltered

sets be the bounds of their ranges in Phase II, and we divide each range into equidistant

points (of not necessarily the same granularity as in Phase I). We then enumerate the

ε-vectors and solve the corresponding ε-constraint models. The union of the outputs from

the two phases comprise the ﬁnal set of Pareto-optimal points (see Figure 1).

Let Cov(x), PCI(x), and BOT(x) respectively denote the Cov, PCI, and BOT values of a
feasible solution x. We use set threshold values Covmin, PCImin, and BOTmax and determine

objective ranges for Phase II as stated in Algorithm 2.

Algorithm 2 Setting the objective ranges for Phase II
Input: A set E := {εj}j∈J of ε-vectors, a tuple set (cid:8)(cid:0)f j, Covj, PCIj, BOTj(cid:1)(cid:9)
all operators Op ∈ {f, Cov, PCI, BOT} and j ∈ J , and threshold values Covmin, PCImin, BOTmax

j∈J

, where Opj := Op(ˆx(εj)) for

Output: Lower and upper limit pairs (lbi, ubi) of fi’s for all i ∈ {2, . . . , p}

1: procedure SetObjRangesPhaseII

2:

3:

4:

for all i ∈ {2, . . . , p} do

i ← (cid:8)f j
F sel
lbi ← min{F sel

i }, ubi ← max{F sel
i }

i : Covj ≥ Covmin, PCIj ≥ PCImin, BOTj ≤ BOTmax(cid:9)

We set the threshold values of Covmin and PCImin to 0.98 and 0.75, respectively. Since
BOT values vary considerably, we do not set a ﬁxed value for BOTmax. We ﬁrst ﬁlter the
performance criteria tuples from Phase I using Covmin and PCImin, and then set BOTmax

to be the ﬁrst quartile of BOT values in the remaining subset.

6.2. Machine Learning-guided Version
We adapt 2phasε by incorporating machine learning (ML) methods to reduce the com-

putational eﬀort. Phase I is divided into two rounds. We ﬁrst randomly select ε-vectors

enumerated at the beginning and solve the corresponding MOP(ε) models. We then train

a prediction model for Phase I to predict the values of our performance criteria over the

unexplored ε-vectors, and we solve MOP(ε) for promising ε-vectors in the second round of
Phase I. We use all the data obtained in Phase I and generate the ε-vectors as in 2phasε-r.

We continue by training another prediction model in Phase II to forecast quality ε-vectors

and solve MOP(ε) for them.

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

21

6.2.1. Data collection. An ε-vector deemed unworthy to explore is one that either

makes MOP(ε) infeasible or produces a solution that fails to satisfy desirable criteria.

Hence, our prediction process is twofold: (i) feasibility prediction, and (ii) performance

criteria prediction. To this end, we collect two data sets. We ﬁrst record if an ε-vector

makes MOP(ε) infeasible, and we then store the performance criteria for the ε-vectors that

produce a solution. We employ the ﬁlters provided in (10) and (11) to detect infeasibility

and repeating solutions. The time required by the ﬁltering process is negligible (see Sec-

tion 7), therefore we search the entire set of ε-vectors instead of conﬁning ourselves to a

subset. We associate each ε-vector identiﬁed to yield repeating results with a copy of the

performance criteria obtained previously. As such, we expand our data sets considerably

at no additional cost, and we use them to train prediction models for both phases. Note

that data collection is not needed in Phase II as we do not predict anything afterwards.

6.2.2. Prediction models. We now detail our prediction models (see the book by James

et al. (2013) for more details). We consider an ε-vector as input (features), and either

the feasibility status or each one of the performance criterion values as output (response).

Feasibility status is categorical (feasible or infeasible), whereas the performance criteria

are numerical. Both for classiﬁcation and regression, we utilize decision tree-based models,

namely, random forests.

A decision tree is a graphical structure built through a series of rules that splits data.

Starting from a root node, observations are partitioned into two or more groups based

on typically one of the features until a stopping condition is satisﬁed. The resulting tree

partitions the feature space into a number of regions. The response of a given feature

vector in a region is predicted to be the most commonly encountered or average response

in that region, depending on if the tree is a classiﬁcation or regression tree, respectively. A

random forest is a collection of decision trees, each being built on a sample drawn from the

training data and a sample of features. For classiﬁcation, given an observation of feature

values, the predicted class is the most commonly encountered predicted class over all trees.

Similarly for regression, the predicted response is the average of the predicted responses

from the individual trees.

We note that other ML models could be used in 2phasε-ml, but in our preliminary

experiments, random forests showed the best overall performance among several others.

The models we tested were random forests, decision trees, nearest neighbors, ridge, support

vector machines, and logistic & linear regression (see Section 7.2.2 for details).

22

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

6.2.3. Finding promising ε-vectors. We train random forest classiﬁcation and regres-

sion models for each performance criterion separately after data collection. Prediction steps

explore feasibility of all candidate ε-vectors. Feasibility then prompts prediction of the

performance criteria after which ε-vectors failing to satisfy our desirability conditions are
removed. We set BOTmax to a redundantly large value to explore all candidate solutions
with desirable Cov and PCI values in Phase I. Phase II is the same as in 2phasε-r.

Algorithm 3 Selecting promising ε-vectors via prediction

E TrFeas

:= {εj1}j1∈J TrFeas
sets
j1∈J TrFeas and (cid:8)(cid:0)εj2, Covj2 , PCIj2, BOTj2(cid:1)(cid:9)

Input: Two
sets
(cid:8)(cid:0)εj1, Feasj1(cid:1)(cid:9)
j2∈J TrPerf where Opji := Op(ˆx(εji )) for all
operators Op ∈ {Feas, Cov, PCI, BOT} and j1 ∈ J TrFeas, j2 ∈ J TrPerf; training functions TrainCrit(.) for
Crit ∈ {Feas, Cov, PCI, BOT}; a set E to make predictions for; and threshold values Covmin, PCImin, BOTmax

and E TrPred := {εj2}j2∈J TrPerf ;

training

two

Output: A subset E (cid:48) ⊆ E of selected ε-vectors

1: procedure PredictAndSelect

2:

3:

4:

5:

6:

7:

8:

9:

PredFeas(.) ← TrainFeas

PredCov(.) ← TrainCov

PredPCI(.) ← TrainPCI

PredBOT(.) ← TrainBOT
E (cid:48) ← ∅

(cid:17)

(cid:16)(cid:8)(cid:0)εj1 , Feasj1(cid:1)(cid:9)
(cid:16)(cid:8)(cid:0)εj2 , Covj2(cid:1)(cid:9)
(cid:16)(cid:8)(cid:0)εj2, PCIj2 (cid:1)(cid:9)
(cid:16)(cid:8)(cid:0)εj2 , BOTj2(cid:1)(cid:9)

j1∈J TrFeas
(cid:17)

j2∈J TrPerf

j2∈J TrPerf

(cid:17)

(cid:17)

j2∈J TrPerf

for all ε ∈ E do

if PredFeas(ε) = 1 then

(cid:46) If ε is predicted to yield a feasible solution

if PredCov(ε) ≥ Covmin and PredPCI(ε) ≥ PCImin and PredBOT(ε) ≤ BOTmax then

10:

E (cid:48) ← E (cid:48) ∪ {ε}

6.2.4. Domination analysis. It is possible to solve MOP(ε) for every ε-vector estimated

to produce desirable performance in each phase, but we use an additional ﬁlter if the

objectives are not deemed the ultimate performance criteria. Eﬃcient solutions do not

necessarily yield nondominated points with regard to our clinical assessments, and we ﬁlter

ε-vectors whose estimated performance criteria are not dominated by those of another ε-

vector. We solve MOP(ε) only for the remaining ε-vectors. We deﬁne the N D operator in

(13) to represent this ﬁltering,

E ND := (cid:8)εj(cid:9)

j∈J ND = N D(cid:0) (cid:8)εj, Covj, PCIj, BOTj(cid:9)

j∈J

(cid:1).

(13)

We note that the performance criteria values after the domination ﬁltering are not nec-

essarily nondominated. Conversely, some performance criteria values might be dominated

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

23

due to prediction errors and be eliminated. We also note that this domination analysis is

not meant for cases in which the MOP objectives are to be predicted, because MOP(ε)

models are guaranteed to yield nondominated objective values.

7. Experimental Results

We conducted our experiments on a MacOS computer with a 3 GHz Intel Core i5 CPU and

16 GB memory. We used CPLEX 12.10 (IBM ILOG 2019) as linear programming solver,

and scikit-learn Python library (Pedregosa et al. 2011) for our ML-related implemen-

tations.

We considered combinations of the primal and dual formulations of the ε-constraint

formulation of our MOLP with all the applicable algorithms oﬀered by CPLEX (including

the “automatic” option where the solver decides which algorithm(s) to use) to determine

the fastest option. The average solution times of 77 ε-constraint models of a representative

instance (Case 3) are provided in Table 1, which shows that solving the dual model with

the primal simplex and sifting algorithms give the best overall performance. Since the two

average times are quite close, we further compared the two options on another instance

(Case 6) via 71 ε-constraint models. The average times were 4.53 and 5.67 seconds for

primal simplex and sifting algorithms, respectively. Hence, we conducted our computational

experiments by solving the dual formulation using the primal simplex method.

Table 1

Average solution times (in seconds).

Algorithm

Primal model Dual model

Automatic

Primal simplex

Dual simplex

Barrier

Concurrent

Sifting

10.16

7.00

3.91

27.89

10.74

49.96

7.74

2.36

4.96

21.08

8.20

2.13

We begin our empirical analysis by providing descriptive information on our test bed in
Section 7.1. Afterwards, we present summary statistics on the performance of 2phasε in

Section 7.2, including the impact of the early detection strategies. Lastly, in Section 7.3,
we evaluate the solution quality of 2phasε, and compare it to that of the single-objective

linear program (SOLP) of Cevik et al. (2019), and the actual clinical results obtained

24

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

by applying the plans generated via the planning module Leksell GammaPlan® (Elekta

2010).

7.1. Test Bed

Our test instances consist of anonymized data of eight previously treated clinical cases

with a single tumor, which are also used by Cevik et al. (2019). Table 2 lists descriptive

information about the instances.

Table 2

Instance information.

Case

#

Prescribed

OAR dose

Tumor

# tumor

# ring

# OAR

Total #

isocenters

dose (Gy)

limit (Gy)

volume (cm3)

voxels

voxels

voxels

voxels

1

2

3

4

5

6

7

8

24

25

19

34

8

20

33

16

14.0

24.0

12.5

17.0

20.0

12.0

12.5

18.0

{15, 15}

{15, 8}

{15, 15}

–

–

{15, 11.5}

{15, 7}

–

4.52

5.23

1.35

4524

5234

1347

695

6657

3089

12.83

12 829

18 172

1.63

2.60

2.52

3.45

1628

2601

2521

3447

3809

4077

4235

6833

10 068

8934

5844

–

–

8108

7643

–

15 287

20 825

10 280

31 001

5437

14 786

14 399

10 280

Isocenter locations are typically determined manually by the planners so that the overall

tumor volume is adequately covered. In theory, it is possible to use each tumor voxel as an

isocenter, but the size of the model then grows prohibitively large and cannot be handled

in practice. Isocenters in our cases are positioned automatically with the grassﬁre and

sphere packing algorithms (Cevik et al. 2019). We note that the quality of the generated

treatment plans is quite robust to the number of isocenters, and potential eﬀect of fewer

isocenters is usually compensated for by the use of larger collimator sizes in delivering

radiation, see for instance (Cevik et al. 2019).

7.2. Eﬃcacy of Our Approach

Infeasibilities and repeating solutions are prevalent and the ﬁlters to avoid them give

substantial beneﬁt. Phase II subsequently leads to fewer infeasibilities, which is one of

our two main incentives —the other being to focus on regions expected to yield desirable

solutions.

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

25

7.2.1. Results from the regular version. Table 3 summarizes the results from 2phasε-

r. The column labels are deﬁned as follows:

• “# ε-vectors” is the number of ε-vectors constructed at the beginning of the phase

(i.e., the cardinality of E I or E II in Figure 1),

• “# sol” is the number of obtained Pareto-optimal points,
• “% sol” is the percentage of Pareto-optimal points with respect to the number of

ε-vectors,

• “% infeas” is the percentage of ε-vectors for which MOP(ε) is infeasible,
• “% omit in infeas” is the percentage of early-detected ε-vectors among the infeasible

cases,

• “% omit for infeas” is the percentage of early-detected ε-vectors for infeasibility

(among all ε-vectors),

• “% omit for repeat” is the percentage of early-detected ε-vectors for repeating solu-

tions,

• “Unit sol time” is the average time to obtain a solution,
• “Total sol time” is the overall time spent solving all MOP(ε) models.

We observe that early detection of infeasibilities leaves a small proportion of ε-vectors

to be evaluated. For Phase I, on average, 66.4% of ε-vectors are discarded for infeasibility,

and only 0.9% of the infeasible models are later considered. Together with an average

28.5% of ε-vectors discarded to eliminate repeating solutions, around 95% of all ε-vectors

are omitted in a negligible computation eﬀort requiring around 10−4 seconds (thus not

explicitly reported). For Phase II, the average infeasibility percentage drops to 10.5%, with

more than half of those being detected early. This shows that revision of objective ranges

for Phase II concentrates the search as intended. The increased percentage of solutions

in Phase II also indicates this fact, and the forthcoming Section 7.3 illustrates that the

overall solution quality improves as planned. Combined with the ε-vectors omitted to avoid

repeating solutions, an average of nearly 48% of all ε-vectors are discarded in Phase II,

and we observe that the unit solution times are decreased. We note that, except for Cases

2 and 8, limits for tumor overdosing collapsed to zero, making r3 ε-vectors rather than r4,

with r denoting the number of distinct εi values used for each objective, set to 10 and 5

for Phases I and II, respectively.

26

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

Table 3

Statistics from the regular version of our two-phase method.

Case

#

ε-vectors

#

sol

15

87

77

57

44

71

52

1000

10 000

1000

1000

1000

1000

1000

10 000

103

63.3

2

50

19

15

17

21

17

17

25

125

25

25

25

25

25

125

%

sol

1.5

0.9

7.7

5.7

4.4

7.1

5.2

1.0

4.2

8.0

40.0

76.0

60.0

68.0

84.0

68.0

13.6

%

% omit

% omit

% omit

Unit sol

Total sol

infeas

in infeas

for infeas

for repeat

time (sec)

time (sec)

83.1

75.5

57.7

78.0

61.0

57.1

57.9

67.9

67.3

0.0

0.0

4.0

0.0

24.0

16.0

16.0

24.0

10.5

98.7

99.8

98.1

98.6

98.2

98.1

98.4

99.9

98.7

0.0

0.0

0.0

0.0

66.7

50.0

50.0

93.3

32.5

82.0

75.4

56.6

76.9

59.9

56.0

57.0

67.8

66.4

0.0

0.0

0.0

0.0

16.0

8.0

8.0

22.4

6.8

15.4

23.6

34.6

16.3

34.6

35.8

36.9

31.1

28.5

92.0

60.0

20.0

40.0

8.0

0.0

16.0

62.4

37.3

10.9

16.3

2.4

108.2

0.5

4.5

10.3

2.3

19.4

16.1

0.8

2.1

33.6

0.4

3.9

9.2

3.1

8.7

163.5

1419.8

183.0

6165.2

23.7

321.7

537.0

241.1

1131.9

32.2

41.6

39.7

504.4

7.0

82.2

155.8

52.3

114.4

Phase I

Average

Phase II

1

2

3

4

5

6

7

8

1

2

3

4

5

6

7

8

Average

19.8

52.2

We tested 2phasε-r without the repeating solution ﬁlter to identify its impact. Among

the ε-vectors that yield a solution in Phase I, only 0.34% gives a solution not previously

obtained but discarded with the early detection ﬁlter (due to existence of alternative

optima). We encountered no such solutions in Phase II. Early detection eliminated around

93% and 55% of ε-vectors that produced a solution in Phases I and II, with no repeating

solutions, so the early detection strategies signiﬁcantly reduce calculations without jeop-

ardizing Pareto representation. Run times of some cases (e.g., Case 4) may nevertheless

be high due to the size and/or inherent diﬃculty of those instances.

7.2.2. Results from the ML-guided version. We selected the classiﬁcation and regres-

sion models from several alternatives, by taking the results from (the ﬁrst round of) Phase

I for each one of the eight cases, and using them as training data. We performed a 5-fold

cross validation 10 times for each model and case combination separately, and we compared

the mean accuracy (proportion of correct classiﬁcations) and the area under the receiver

operating characteristic curve for classiﬁers, and mean absolute error for regressors. Ran-

dom forests yielded the best overall performance with decision trees doing almost as well,

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

27

probably because we only have four features (which is the length of an ε-vector for our

5-objective model). For details, see Table 5 in Appendix B.

We ﬁnd upon comparing predictions with actual results that feasibility classiﬁcation is

at least 96% accurate on the average, and that mean absolute errors for Cov and PCI are

approximately no greater than 2%. BOT values vary on a larger scale, which occasionally

lead to relatively higher prediction errors. Nevertheless, with a mean absolute error of less

than seven (minutes), prediction performance for BOT remains useful. We note that it is

possible to hedge against prediction inaccuracies by slightly relaxing the ﬁltering threshold

values, see Table 6 in Appendix B.

2phasε-ml decreases the run times by nearly half. Speciﬁcally, in Phase I, with 8.6%
of the initially constructed ε-vectors for 2phasε-r on the average, 2phasε-ml averages a
47.6% time saving. The number of ε-vectors selected for Phase II of 2phasε-ml is 14.5%

of those built for the same phase of the regular version, and the time savings range from

24% to 79%, averaging 46.5%, see Table 7 in Appendix B.

7.3. Solution Quality Assessment

Table 4 contains summary statistics for Cov, PCI, BOT, and maximum OAR dose values
of the two diﬀerent versions of 2phasε compared with those of SOLP and the clinical

outcomes. Our solution approach generates a collection of solutions for each case, and we

report the number of Pareto-optimal points obtained and the number that remained after

ﬁltering dominated Cov, PCI, and BOT values (in parentheses next to the total number

of solutions). For Cov, PCI and BOT values, we report the minimums and maximums

obtained. We also list the average maximum dose each OAR received over the eﬃcient

solutions.

We see from Table 4 that the maximum Cov and PCI, and the minimum BOT values

are always better than the point values achieved clinically and by SOLP. Comparing the
performances of 2phasε-r and 2phasε-ml, we observe that the latter yields average and

minimum Cov and PCI values at least as good as those of the former. This is because
2phasε-ml has an extra ﬁltering step to only generate desirable solutions in the second
round of Phase I, as a consequence of which it also yields fewer solutions than 2phasε-
r. The minimum and maximum BOT values from 2phasε-r and 2phasε-ml are almost

identical — the maximum BOT value allowed was three hours, as also reported in (Harris

and Das 2020).

Table 4

Performance summary of our two-phase method in comparison to SOLP and clinical results.

2
8

2phasε

SOLP

Clinical

Case

# sol

Cov

PCI

BOT

Max OAR

dose (Gy)

Cov

PCI

BOT

Max OAR

dose (Gy)

Cov

PCI

BOT

Max OAR

dose (Gy)

1

2

3

4

5

6

7

8

R

17 (6)

[0.809, 1]

[0.81, 1]

[10.2, 24.8]

{15.0, 4.0}

0.988

0.94

57.6

{16.4, 3.3}

0.977

0.91

56.0

{15.0, 15.0}

ML

12 (6)

[0.871, 1]

[0.87, 1]

[10.2, 24.8]

{15.0, 4.0}

R 137 (17)

[0.762, 1]

[0.71, 0.94]

[47.0, 180.0]

{15.0, 8.0}

0.816

0.79

100.8

{17.5, 7.8}

0.820

0.56

156.0

{9.7, 7.9}

ML 19 (11)

[0.831, 1]

[0.76, 0.94]

[47.0, 180.0]

{15.0, 8.0}

R 96 (16)

[0.679, 1]

[0.68, 0.96]

[17.9, 128.2] {13.7, 12.5}

0.968

0.75

80.1

{15.2, 10.7} 0.970

0.71

97.0

{13.6, 11.7}

ML

27 (9)

[0.733, 1]

[0.73, 0.96]

[17.9, 128.1] {13.8, 12.5}

R 72 (20)

[0.706, 1]

[0.66, 0.91]

[64.1, 180.0]

ML 30 (12)

[0.748, 1]

[0.74, 0.90]

[64.1, 180.0]

R 61 (18)

[0.767, 1]

[0.65, 0.95]

[12.5, 78.2]

ML 32 (14)

[0.767, 1]

[0.77, 0.95]

[12.5, 78.2]

–

–

–

–

0.995

0.76

54.4

0.985

0.84

20.1

–

–

0.996

0.68

138.0

0.992

0.75

28.2

–

–

R 92 (16)

[0.740, 1]

[0.74, 0.96]

[12.0, 88.8]

{12.9, 10.8}

0.985

0.84

32.0

{13.6, 6.9}

0.990

0.8

64.8

{15, 11.5}

ML 31 (11)

[0.779, 1]

[0.78, 0.96]

[12.1, 88.8]

{12.9, 11.1}

R 69 (17)

[0.827, 1]

[0.77, 0.99]

[14.9, 114.3]

{12.8, 6.7}

0.987

0.85

43.6

{13.7, 1.3}

0.991

0.83

64.4

{15.0, 7.0}

ML 31 (13)

[0.827, 1]

[0.83, 0.99]

[15.0, 114.1]

{12.6, 6.8}

R 120 (17)

[0.802, 1]

[0.77, 0.96]

[17.4, 127.5]

ML 51 (16)

[0.832, 1]

[0.77, 0.96]

[17.4, 127.5]

–

–

0.985

0.80

42.7

–

0.989

0.81

46.9

–

S¸
e
k
e
r

e
t

a
l
.
:

A
M
u
l
t
i
o
b
j
e
c
t
i
v
e
A
p
p
r
o
a
c
h

f
o
r

S
e
c
t
o
r
D
u
r
a
t
i
o
n
O
p
t
i

m
i
z
a
t
i
o
n

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

29

We next investigate the distribution of Pareto solutions over the space of the three

performance criteria in Figure 2. For brevity we consider Cases 1 to 4 as representatives

to show the diﬀerent ways solutions are dispersed. Results for the remaining cases are

provided in the Appendix. Each row of Figure 2 is dedicated to one case and contains

two plots. The plot on the left shows Cov versus PCI and the plot on the right displays

BOT versus PCI for solutions yielding at least 99.7% Cov. This limit is higher than the

maximum coverage achieved clinically and by SOLP over all eight cases, guaranteeing that

our results on the right-hand side plots outperform clinical outcomes and SOLP results.

Figure 2 illustrates that the two phases of 2phasε work as intended. While the solutions

from Phase I are relatively scattered throughout the space of the three performance criteria,

those from Phase II are typically clustered around more desirable regions. The left-hand
side plots demonstrate that 2phasε-r is able to produce a considerably large collection
of solutions outperforming the others in terms of both Cov and PCI, and 2phasε-ml

identiﬁes many such solutions. The right-hand side plots show that several of our solutions

are signiﬁcantly better than those from the clinical design or from SOLP. Cases 2 and 4

are exceptions. A Cov of only 82% has been achieved previously for Case 2, potentially

due to clinicians’ preference to keep the dose to OAR1 much lower than the predeﬁned

OAR1 dose limit (9.7 Gy vs 15.0 Gy). Our approach, however, produces solutions attaining

essentially full coverage with higher, yet still realizable, BOT values, and hence, we provide

the clinician options. Moreover, we obtain many solutions with strictly better Cov, PCI,

and BOT values than the others, which are not contained in the right-hand side plot

because points with less than 99.7% Cov are not shown. Almost all solutions for Case 4

are better than the others in terms of Cov and PCI, yet they yield relatively higher BOT

values than that of SOLP. The general distribution of solutions from Cases 5 to 8 are

similar to that of Case 3, and thus our conclusions remain valid for them.

We lastly examine the dose-volume histograms (DVHs) and isodose curves for a repre-

sentative case, Case 3, see Figure 3. A DVH displays the fraction of each structure’s volume

receiving at least a certain amount of dose. We plot the relative dose percentages on the

x-axis by proportioning the received doses to the prescription dose for the tumor and the
maximum allowed doses for OARs. Among the set of solutions obtained from 2phasε-r,

we ﬁrst remove solutions whose Cov is less than 99.7% and whose PCI is less than 0.75. We

then discard solutions dominated in terms of the Cov, PCI and BOT. We plot the DVH

30

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

Figure 2

Coverage vs. PCI values of all generated solutions (left), and BOT vs. PCI values of solutions with at

least 99.7% coverage (right), for Cases 1 to 4.

0.70.80.91.0Coverage0.70.80.91.0PCICase 1PhaseI                PhaseII     Regular        ML       SOLP    Clinical0204060BOT0.70.80.91.0PCICase 10.70.80.91.0Coverage0.50.60.70.80.91.0PCICase 2PhaseI                PhaseII     Regular        ML       SOLP    Clinical100120140160180200BOT0.50.60.70.80.91.0PCICase 20.60.70.80.91.0Coverage0.60.70.80.91.0PCICase 3PhaseI                PhaseII     Regular        ML       SOLP    Clinical050100150BOT0.60.70.80.91.0PCICase 30.70.80.91.0Coverage0.60.70.80.91.0PCICase 4PhaseI                PhaseII     Regular        ML       SOLP    Clinical050100150200BOT0.60.70.80.91.0PCICase 4S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

31

Figure 3

Dose-volume histograms (left) and isodose curves (right) for Case 3. Relative dose percentages are

computed with respect to the prescribed dose for the tumor (Rx), and maximum allowed doses for

OARs, i.e., brainstem (BS) and cochlea.

curves for the remaining solutions that provide virtually full coverage, PCI values between

0.87 and 0.96, and BOT from 31 to 115 minutes. We then select a solution with 0.96 PCI

and 101-minute BOT and plot the associated isodose curves for several cross sections of

the tumor and OAR tissues. For each cross section, we contour the areas that receive at

least 50% and 100% of the prescribed dose for the tumor (12.5 Gy for Case 3), and indicate

the tumor and nearby OAR tissues with shaded areas.

A DVH curve for the tumor should ideally mimic a vertical decay at the prescription

dose, and in our case it is deviating only slightly from the reference line (shown with the

gray vertical line). Due to the proximity of the tumor to the brainstem and cochlea, which

is evident from the cross sections depicted in the ﬁrst three rows of the plots on the right in

Figure 3, the 50% isodose curves for the target intersect these organs. As the intersecting

volume percentage of the cochlea is larger, we observe that its DVH curve starts decaying

later than that of the brainstem. However, the clinically prioritized measure for OARs is

the maximum doses they receive, and they are less than 85–90% of the allowed values.

8. Conclusion

In this study, we consider the sector duration optimization problem arising in stereo-

tactic radiosurgery with Gamma Knife delivery systems. We have proposed two-phase

ε-constraint methods to help address the trade-oﬀs among diﬀerent clinical goals. A sig-

niﬁcant portion of our solutions outperformed clinical outcomes and those achieved with a

04080120160200Relative dose (%)020406080100Volume (%)PhaseI              PhaseII     Tumor    Cochlea        BS    32

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

single-objective model from the literature. Machine learning algorithms reduced the over-

all computation time by almost half, while still capturing a suﬃcient amount of clinically

desirable solutions. Our two-phase strategy is generic; it can be modiﬁed by incorporating

other clinical metrics, and it can be applied to other radiotherapy or general multiobjec-

tive problems. Future research directions include development of multiobjective models for

simultaneous optimization of isocenter selection and sector duration optimization, as well

as applications of our generic computational schemes for other radiotherapy problems.

Acknowledgments
This work is in part supported by NSERC Discovery Grant RGPIN-2019-05588. We thank the two anonymous

referees for their careful review and constructive comments that helped us improve the content and exposition

of the paper. We are also grateful to Berk G¨org¨ul¨u for his valuable suggestions regarding the machine

learning-related portion of this study.

References
Babier A, Boutilier JJ, Sharpe MB, McNiven AL, Chan TC (2018) Inverse optimization of objective function

weights for treatment planning using clinical dose-volume histograms. Physics in Medicine & Biology

63(10):105004.

Breedveld S, Craft D, Van Haveren R, Heijmen B (2019) Multi-criteria optimization and decision-making in

radiotherapy. European Journal of Operational Research 277(1):1–19.

Breedveld S, Storchi PR, Voet PW, Heijmen BJ (2012) iCycle: Integrated, multicriterial beam angle, and

proﬁle optimization for generation of coplanar and noncoplanar IMRT plans. Medical Physics 39(2):951–

963.

Cabrera-Guerrero G, Ehrgott M, Mason AJ, Raith A (2018a) A matheuristic approach to solve the mul-

tiobjective beam angle optimization problem in intensity-modulated radiation therapy. International

Transactions in Operational Research 25(1):243–268.

Cabrera-Guerrero G, Mason AJ, Raith A, Ehrgott M (2018b) Pareto local search algorithms for the multi-

objective beam angle optimisation problem. Journal of Heuristics 24(2):205–238.

Cevik M, Aleman D, Lee Y, Berdyshev A, Nordstr¨om H, Riad S, Sahgal A, Ruschin M (2019) Simultaneous

optimization of isocenter locations and sector duration in radiosurgery. Physics in Medicine & Biology

64(2):025010.

Cevik M, Ghomi PS, Aleman D, Lee Y, Berdyshev A, Nordstrom H, Riad S, Sahgal A, Ruschin M (2018)

Modeling and comparison of alternative approaches for sector duration optimization in a dedicated

radiosurgery system. Physics in Medicine & Biology 63(15):155009.

Chankong V, Haimes YY (1983) Multiobjective decision making theory and methodology (Elsevier).
Cheek D, Holder A, Fuss M, Salter B (2005) The relationship between the number of shots and the quality

of gamma knife radiosurgeries. Optimization and Engineering 6(4):449–462.

Chen JC, Girvigian MR (2005) Stereotactic radiosurgery: instrumentation and theoretical aspects—part 1.

The Permanente Journal 9(4):23.

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

33

Cohon JL (1978) Multiobjective programming and planning, volume 140 of Mathematics in Science and

Engineering (Academic Press).

Doudareva E, Ghobadi K, Aleman DM, Ruschin M, Jaﬀray DA (2015) Skeletonization for isocentre selection

in Gamma Knife® Perfexion™. TOP 23(2):369–385.

Ehrgott M (2005) Multicriteria optimization, volume 491 (Springer Science & Business Media).
Ehrgott M (2006) A discussion of scalarization techniques for multiple objective integer programming. Annals

of Operations Research 147(1):343–360.

Ehrgott M, G¨uler C¸ , Hamacher HW, Shao L (2010) Mathematical optimization in intensity modulated

radiation therapy. Annals of Operations Research 175(1):309–365.

Ehrgott M, Ruzika S (2008) Improved ε-constraint method for multiobjective programming. Journal of

Optimization Theory and Applications 138(3):375.

Elekta (2010) Inverse planning in Leksell GammaPlan (white paper).
Eus´ebio A, Figueira JR, Ehrgott M (2014) On ﬁnding representative non-dominated points for bi-objective

integer network ﬂow problems. Computers & operations research 48:1–10.

Ferris MC, Lim J, Shepard DM (2002) An optimization approach for radiosurgery treatment planning. SIAM

Journal on Optimization 13(3):921–937.

Ferris MC, Lim J, Shepard DM (2003) Radiosurgery treatment planning via nonlinear programming. Annals

of Operations Research 119(1):247–260, URL https://doi.org/10.1023/A:1022951027498.

Ferris MC, Shepard DM (2000) Optimization of gamma knife radiosurgery. Discrete Mathematical Problems

with Medical Applications 55:27–44.

Ghaﬀari HR, Aleman DM, Jaﬀray DA, Ruschin M (2017) Incorporation of delivery times in stereotactic

radiosurgery treatment optimization. Journal of Global Optimization 69(1):103–115.

Ghobadi K, Ghaﬀari HR, Aleman DM, Jaﬀray DA, Ruschin M (2012) Automated treatment planning for a

dedicated multi-source intracranial radiosurgery treatment unit using projected gradient and grassﬁre

algorithms. Medical Physics 39(6Part1):3134–3141.

Ghobadi K, Ghaﬀari HR, Aleman DM, Jaﬀray DA, Ruschin M (2013) Automated treatment planning for a

dedicated multi-source intra-cranial radiosurgery treatment unit accounting for overlapping structures

and dose homogeneity. Medical Physics 40(9):091715.

Giller CA (2011) Feasibility of identiﬁcation of Gamma Knife planning strategies by identiﬁcation of Pareto

optimal Gamma Knife plans. Technology in Cancer Research & Treatment 10(6):561–574.

Haimes YY, Lasdon LS, Wismer DA (1971) On a bicriterion formation of the problems of integrated system

identiﬁcation and system optimization. IEEE Transactions on Systems, Man and Cybernetics 1(3):296–

297.

Harris L, Das JM (2020) Stereotactic Radiosurgery (StatPearls Publishing, Treasure Island (FL)).
IBM ILOG (2019) CPLEX Optimization Studio 12.10.0 User manual .
Isermann H, Steuer RE (1988) Computational experience concerning payoﬀ tables and minimum criterion

values over the eﬃcient set. European Journal of Operational Research 33(1):91–97.

James G, Witten D, Hastie T, Tibshirani R (2013) An introduction to statistical learning, volume 112

(Springer).

Jindal A, Sangwan KS (2017) Multi-objective fuzzy mathematical modelling of closed-loop supply chain

considering economical and environmental factors. Annals of Operations Research 257(1):95–120.

34

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

Kirlik G, Sayın S (2014) A new algorithm for generating all nondominated solutions of multiobjective discrete

optimization problems. European Journal of Operational Research 232(3):479–488.

Laumanns M, Thiele L, Zitzler E (2006) An eﬃcient, adaptive parameter variation scheme for metaheuristics

based on the epsilon-constraint method. European Journal of Operational Research 169(3):932–942.

Lee EK, Fox T, Crocker I (2000) Optimization of radiosurgery treatment planning via mixed integer pro-

gramming. Medical physics 27(5):995–1004.

Lee KJ, Barber DC, Walton L (2006) Automated Gamma Knife radiosurgery treatment planning with image

registration, data-mining, and Nelder-Mead simplex optimization. Medical Physics 33(7):2532–2540.

Mavrotas G (2009) Eﬀective implementation of the ε-constraint method in multi-objective mathematical

programming problems. Applied Mathematics and Computation 213(2):455–465.

Mavrotas G, Florios K (2013) An improved version of the augmented ε-constraint method (AUGMECON2)

for ﬁnding the exact pareto set in multi-objective integer programming problems. Applied Mathematics

and Computation 219(18):9652–9669.

Nikas A, Fountoulakis A, Forouli A, Doukas H (2020) A robust augmented ε-constraint method (augmecon-r)

for ﬁnding exact solutions of multi-objective linear programming problems. Operational Research 1–42.

Novotn`y J (2012) Leksell Gamma Knife – past, present and future. L´ekaˇr a Technika-Clinician and Tech-

nology 42(3):5–13.

Oskoorouchi MR, Ghaﬀari HR, Terlaky T, Aleman DM (2011) An interior point constraint generation

algorithm for semi-inﬁnite optimization with health-care application. Operations Research 59(5):1184–

1197.

¨Ozlen M, Azizo˘glu M (2009) Multi-objective integer programming: A general approach for generating all

non-dominated solutions. European Journal of Operational Research 199(1):25–35.

Paddick I (2000) A simple scoring ratio to index the conformity of radiosurgical treatment plans. Journal of

neurosurgery 93(supplement 3):219–222.

Padilla L, Palta JR (2019) Overview of technologies for SRS and SBRT delivery. Heron DE, Huq MS, Herman

JM, eds., Stereotactic Radiosurgery and Stereotactic Body Radiation Therapy (SBRT), chapter 7, 73–

101 (Springer).

Pedregosa F, Varoquaux G, Gramfort A, Michel V, Thirion B, Grisel O, Blondel M, Prettenhofer P, Weiss

R, Dubourg V, Vanderplas J, Passos A, Cournapeau D, Brucher M, Perrot M, Duchesnay E (2011)

Scikit-learn: Machine learning in Python. Journal of Machine Learning Research 12:2825–2830.

Ripsman DA, Aleman DM, Ghobadi K (2015) Interactive visual guidance for automated stereotactic radio-

surgery treatment planning. Expert Systems with Applications 42(21):8337–8348.

Romeijn HE, Dempsey JF, Li JG (2004) A unifying framework for multi-criteria ﬂuence map optimization

models. Physics in Medicine & Biology 49(10):1991.

Sahebjamnia N, Torabi SA, Mansouri SA (2015) Integrated business continuity and disaster recovery plan-

ning: Towards organizational resilience. European Journal of Operational Research 242(1):261–273.

Sayın S (2000) Measuring the quality of discrete representations of eﬃcient sets in multiple objective math-

ematical programming. Mathematical Programming 87(3):543–560.

Schlaefer A, Schweikard A (2008) Stepwise multi-criteria optimization for robotic radiosurgery. Medical

Physics 35(5):2094–2103.

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

35

Shao L, Ehrgott M (2016) Discrete representation of non-dominated sets in multi-objective linear program-

ming. European Journal of Operational Research 255(3):687–698.

Shepard DM, Chin LS, DiBiase SJ, Naqvi SA, Lim J, Ferris MC (2003) Clinical implementation of an auto-

mated planning system for Gamma Knife radiosurgery. International Journal of Radiation Oncology,

Biology, Physics 56(5):1488–1494.

Shepard DM, Ferris MC, Olivera GH, Mackie TR (1999) Optimizing the delivery of radiation therapy to

cancer patients. Siam Review 41(4):721–744.

Shepard DM, Ferris MC, Ove R, Ma L (2000) Inverse treatment planning for gamma knife radiosurgery.

Medical Physics 27(12):2748–2756.

Sj¨olund J, Riad S, Hennix M, Nordstr¨om H (2019) A linear programming approach to inverse planning in

Gamma Knife radiosurgery. Medical Physics 46(4):1533–1544.

Svensson J (2014) Multiobjective optimization in radiosurgery: How to approximate and navigate on the

Pareto surface. Master’s thesis, KTH Royal Institute of Technology.

Tamby S, Vanderpooten D (2021) Enumeration of the nondominated set of multiobjective discrete optimiza-

tion problems. INFORMS Journal on Computing 33(1):72–85.

Tian Z, Yang X, Giles M, Wang T, Gao H, Butker E, Liu T, Kahn S (2020) A preliminary study on

a multiresolution-level inverse planning approach for Gamma Knife radiosurgery. Medical Physics

47(4):1523–1532.

Wagner TH, Yi T, Meeks SL, Bova FJ, Brechner BL, Chen Y, Buatti JM, Friedman WA, Foote KD, Bouchet

LG (2000) A geometrically based method for automated radiosurgery planning. International Journal

of Radiation Oncology, Biology, Physics 48(5):1599–1611.

Weistroﬀer H (1985) Careful usage of pessimistic values is needed in multiple objectives optimization. Oper-

ations Research Letters 4(1):23–25.

Yu Y (1997) Multiobjective decision theory for computational optimization in radiation therapy. Medical

Physics 24(9):1445–1454.

Yu Y, Zhang J, Cheng G, Schell M, Okunieﬀ P (2000) Multi-objective optimization in radiotherapy: appli-

cations to stereotactic radiosurgery and prostate brachytherapy. Artiﬁcial Intelligence in Medicine

19(1):39–51.

Zeverino M, Jaccard M, Patin D, Ryckx N, Marguet M, Tuleasca C, Schiappacasse L, Bourhis J, Levivier M,
Bochud FO, Moeckli R (2017) Commissioning of the Leksell Gamma Knife® Icon™. Medical Physics

44(2):355–363.

Zhang P, Dean D, Metzger A, Sibata C (2001) Optimization of gamma knife treatment planning via guided

evolutionary simulated annealing. Medical Physics 28(8):1746–1752.

Zhang P, Wu J, Dean D, Xing L, Xue J, Maciunas R, Sibata C (2003) Plug pattern optimization for gamma

knife radiosurgery treatment planning. International Journal of Radiation Oncology* Biology* Physics

55(2):420–427.

Zhang W, Reimann M (2014) A simple augmented (cid:15)-constraint method for multi-objective mathematical

integer programming problems. European Journal of Operational Research 234(1):15–24.

36

Appendix A: Proofs

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

In this section, we provide the proofs of all the propositions we present in the paper, as well as their statements

for the sake of completeness. We number the equations in this section with a preﬁx of “A.”.

A.1. Proof of Proposition 1

An optimal solution to (4) with βi > 0 for all i ∈ {2, . . . , p} is an eﬃcient solution of MOP in (2).

solution of MOP. Then, there exists another feasible solution (x(cid:48), y(cid:48)) of (4) such that f (cid:48)

Proof. Let (ˆx, ˆy) be an optimal solution to (4). Assume for a contradiction that ˆx is not an eﬃcient
i := fi(x(cid:48)) ≤ fi(ˆx) =: ˆfi
for all i ∈ {1, . . . , p} with at least one strict inequality. Using the equality constraints of (4), we equivalently

write our assumption as

1 ≤ ˆf1
f (cid:48)

ε2 − y(cid:48)

2 ≤ ε2 − ˆy2

...

εp − y(cid:48)

p ≤ εp − ˆyp,

where at least one of the inequalities is strict. We obtain by summing these inequalities that

f (cid:48)
1 −

p
(cid:88)

i=2

i < ˆf1 −
y(cid:48)

p
(cid:88)

i=2

ˆyi.

Since ˆx is optimal and x(cid:48) is feasible for (4), we have

f (cid:48)
1 −

p
(cid:88)

i=2

βiy(cid:48)

i ≥ ˆf1 −

p
(cid:88)

i=2

βi ˆyi.

Rearranging the terms, we get

1 − ˆf1 ≥
f (cid:48)

p
(cid:88)

i=2

βiy(cid:48)

i −

p
(cid:88)

i=2

βi ˆyi =

p
(cid:88)

i=2

βi(y(cid:48)

i − ˆyi).

Since f (cid:48)

1 ≤ ˆf1 by assumption, we have the following two cases to consider:

(A.14)

(A.15)

p
(cid:80)
i=2

(y(cid:48)

p
(cid:80)
i=2

(i)

If f (cid:48)

1 = ˆf1, then

necessitating inequality (A.14) to hold. This implies that

i − ˆyi) > 0 must be true as we need to have at least one strict inequality,
p
(cid:80)
i=2

i − ˆyi) > 0. On the other hand, we

βi(y(cid:48)

have 0 = f (cid:48)

1 − ˆf1 ≥

βi(y(cid:48)

i − ˆyi) > 0 by inequality (A.15), which is a contradiction.

(ii)

If f (cid:48)

1 < ˆf1, the condition that at least one of the inequalities is strict is already satisﬁed and
ˆyi,

the rest do not necessarily need to contain a strict inequality. We, therefore, have

p
(cid:80)
i=2
i − ˆyi) ≥ 0. We also have

p
(cid:80)
i=2

y(cid:48)
i ≥

p
(cid:80)
i=2

βi(y(cid:48)

which implies

i − ˆyi) ≥ 0. Since βi > 0 for all i ∈ {2, . . . , p},

0 > f (cid:48)

1 − ˆf1 ≥

i − ˆyi) ≥ 0, which is a contradiction again.

(y(cid:48)

p
(cid:80)
i=2
βi(y(cid:48)

p
(cid:80)
i=2

Hence, ˆx is an eﬃcient solution for MOP in (2). (cid:3)

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

37

A.2. Proof of Proposition 2

Any feasible solution to the MOLP in (1) yielding Covt’s as the tumor coverage values satisﬁes the following

inequalities:

(cid:88)

v∈Vt

utv ≤ Dt |Vt| (1 − Covt)

t ∈ T

(7)

Proof. Suppose that we have a solution to the MOLP in (1), with ˆutv being the underdose values, V ˆu
t

being the set of voxels in tumor t that is underdosed, i.e., that did not fully receive the required dose amount

Dt, and (cid:100)Covt being the resulting coverage of tumor t. Then,

Moreover,

|V ˆu
t |
|Vt|

= 1 − (cid:100)Covt,

t ∈ T .

0 < ˆutv ≤ Dt

t ∈ T , v ∈ V ˆu
t .

Summing over v ∈ V ˆu

t on each side of (A.17), we get

0 <

(cid:88)

v∈V ˆu
t

ˆutv ≤

(cid:88)

v∈V ˆu
t

Dt = Dt |V ˆu

t |,

t ∈ T .

Using (A.16) and (A.18), we obtain

ˆutv ≤ Dt |Vt| (1 − (cid:100)Covt)

t ∈ T .

(cid:88)

v∈V ˆu
t

(A.16)

(A.17)

(A.18)

(A.19)

Since ˆutv = 0, ∀v ∈ Vt \ V ˆu
which reduces (A.19) to (7). (cid:3)

t , we can expand the domain of the summation on the left of (A.19) to v ∈ Vt,

A.3. Proof of Proposition 3

Any feasible solution to the MOLP in (1) yielding Covt’s as the coverage values satisﬁes the following

inequality:






max
t∈T

Dt Covt
{Gtvθsk} |S|

max
v,θ,s,k






≤ h5

(9)

Proof. Suppose that we have a solution to the MOLP in (1), with ˆgθsk’s being the irradiation times, ˆutv’s
being the underdose values, ˆbθ being the BOT value of isocenter θ, ˆh5 being the total BOT, and (cid:100)Covt the
resulting coverage of tumor t. Let us ﬁrst rewrite the original dose requirement constraint for tumors, using

(1g) and (1h) as

ˆutv ≥ Dt −

(cid:88)

(cid:88)

(cid:88)

θ∈I

s∈S

k∈K

Gtvθsk ˆgθsk,

t ∈ T , v ∈ Vt.

(A.20)

Summing over v ∈ Vt in (A.20) and combining with (7), we obtain

Dt |Vt| (1 − (cid:100)Covt) ≥

(cid:88)

v∈Vt

ˆutv ≥ |Vt|Dt −

(cid:88)

(cid:88)

(cid:88)

(cid:88)

v∈Vt

θ∈I

s∈S

k∈K

Gtvθsk ˆgθsk

t ∈ T .

(A.21)

38

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

We can remove the intermediate underdose term in (A.21) and manipulate the remaining terms to isolate

the BOT objective,

Dt |Vt| (cid:100)Covt ≤

(cid:88)

(cid:88)

(cid:88)

(cid:88)

v∈Vt

θ∈I

s∈S

k∈K

Gtvθsk ˆgθsk ≤ max
v,θ,s,k

{Gtvθsk}

(cid:88)

(cid:88)

(cid:88)

(cid:88)

v∈Vt

θ∈I

s∈S

k∈K

= max
v,θ,s,k

{Gtvθsk} |Vt|

≤ max
v,θ,s,k

{Gtvθsk} |Vt|

(cid:88)

(cid:88)

(cid:88)

θ∈I

s∈S

k∈K

(cid:88)

(cid:88)

ˆbθ

s∈S

θ∈I

= max
v,θ,s,k

{Gtvθsk} |S| |Vt|

(cid:88)

ˆbθ,

θ∈I

Taking the ﬁrst and last expressions, we obtain

Dt (cid:100)Covt ≤ max
v,θ,s,k

{Gtvθsk} |S|

(cid:88)

ˆbθ,

θ∈I

t ∈ T .

ˆgθsk

ˆgθsk

t ∈ T .

(A.22)

We rearrange the terms in (A.22) to leave only the BOT term on the right-hand side of the inequality,

Dt (cid:100)Covt
{Gtvθsk} |S|

max
v,θ,s,k

≤

(cid:88)

θ∈I

ˆbθ = ˆh5,

t ∈ T .

(A.23)

The left-hand side of inequality (A.23) gives a diﬀerent lower bound for each tumor t ∈ T . Since the right-

hand side is independent of index t, the maximum of these bounds over t ∈ T serves as a single valid lower
bound for the BOT objective h5, yielding (9). (cid:3)

A.4. Proof of Proposition 4
Suppose that MOP(ε) is a linear program. Let ˆx1 ∈ ˆX(ε1), Nε1(ˆx1) (cid:54)= ∅, and ˆf 1 := f (ˆx1). For a given ε2 with
ε1 (cid:54)= ε2, if ˆf 1

k, ∀k ∈ {2, . . . , p} \ Nε1 (ˆx1), then ˆf 1 ∈ ˆF (ε2).

i ∀i ∈ Nε1(ˆx1) and ε1

i ≤ ε2

k = ε2

Proof. Let ˆyi be the slack amount for the εi constraint (on fi(x)). Then, ˆyi > 0 ∀i ∈ Nε1 (ˆx1). The feasibility

and optimality of a solution to a linear programming problem remains if the right-hand side of a nonbinding

(and ≤ type) constraint is decreased by at most its slack amount or increased as much as desired. Then, with

any εi satisfying ε1
we conclude that ˆf 1 remains optimal if ε1 is changed to ε2, and hence ˆf 1 ∈ ˆF (ε2). (cid:3)

i − ˆyi ≤ εi for i ∈ Nε1 (ˆx1), the optimality of ˆf 1 remains. Since ε1

i − ˆyi = ˆf 1

i ≤ ε2 ∀i ∈ Nε1(ˆx1),

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

39

Appendix B: Experimental Results

Table 5

Comparison of machine learning models using the results from 10 replications of 5-fold cross validation.

(For each model, average values are given in the ﬁrst row, minimum and maximum values are given in the second

row. ROC AUC stands for the area under the receiver operating characteristic curve, and abs stands for absolute.)

Feasibility classiﬁcation

Regression

Model

Random forest

Accuracy

0.99511

ROC AUC

Cov abs error

PCI abs error

BOT abs error

0.99807

0.00030

0.00027

0.14772

[0.97580, 1]

[0.98079, 1]

[0.00000, 0.00135] [0.00000, 0.00147] [0.00000, 0.65693]

Decision tree

0.99497

0.98370

0.00030

0.00028

0.16255

[0.97483, 1]

[0.90792, 1]

[0.00000, 0.00151]

[0.00000, 0.00147]

[0.00000, 0.78643]

Nearest neighbor

0.98482

0.97032

0.00155

0.00128

0.57949

[0.95454, 1]

[0.87918, 1]

[0.00018, 0.00411]

[0.00016, 0.00348]

[0.05127, 1.66809]

Ridge

0.96790

0.98639

0.00620

0.00725

1.26637

[0.92559, 0.99420]

[0.94245, 1]

[0.00454, 0.00822]

[0.00554, 0.00928]

[0.77902, 1.95676]

Support vector machine

0.97634

0.97051

0.02505

0.03960

3.08289

[0.93426, 0.99710]

[0.89769, 1]

[0.01997, 0.03099]

[0.03596, 0.04394]

[1.84248, 4.52256]

Logistic/linear regression

0.95354

0.94504

0.00620

0.00725

1.26638

[0.89942, 0.99710]

[0.80405, 0.99992]

[0.00454, 0.00822]

[0.00554, 0.00928]

[0.77903, 1.95677]

Table 6

Prediction performance of random forest models.

Phase I

Phase II

Case

1

2

3

4

5

6

7

8

Average

Train set

% correct

Cov avg

PCI avg

Train set

% correct

Cov avg

PCI avg

BOT avg

sizes

feas class

abs error

abs error

sizes

feas class

abs error

abs error

abs error

(185, 102)

(1284, 1205)

(376, 318)

(206, 133)

(324, 264)

(355, 304)

(394, 336)

(2048, 1979)

98.2

92.4

96.5

94.7

96.3

96.4

97.5

93.6

95.7

0.021

0.027

0.028

0.028

0.010

0.015

0.009

0.019

0.020

0.021

0.041

0.038

0.024

0.017

0.021

0.010

0.014

0.023

(190, 105)

(1288, 1208)

(380, 322)

(215, 140)

(340, 277)

(364, 313)

(413, 355)

(2224, 2127)

100.0

100.0

80.0

100.0

100.0

100.0

100.0

88.0

98.5

0.000

0.000

0.000

0.000

0.000

0.000

0.000

0.000

0.000

0.003

0.068

0.025

0.036

0.013

0.015

0.011

0.014

0.023

0.97

0.84

19.06

6.47

2.70

11.40

9.23

3.47

6.77

40

Phase I

Average

Phase II

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

Table 7

Statistics from the ML-guided version of our two-phase method.

Case

#

% 2phasε-r

ε-vectors

ε-vectors

%

% omit

% omit

% omit

Unit sol

Total sol

% 2phasε-r

infeas

in infeas

for infeas

for uniq

time (sec)

time (sec)

1

2

3

4

5

6

7

8

1

2

3

4

5

6

7

8

100+5

100+4

100+4

100+9

100+10

100+9

100+19

100+116

122.0

15

25

12

10

20

8

5

21

10.5

1.0

10.4

10.9

11.0

10.9

11.9

2.2

8.6

60.0

100.0

48.0

40.0

80.0

32.0

20.0

84.0

63.0

#

sol

9

14

22

21

17

27

30

43

%

sol

8.6

13.5

21.2

19.3

15.5

24.8

25.2

19.9

81.0

76.9

55.8

68.8

57.3

46.8

48.7

44.9

22.9

18.5

60.0

3

5

5

9

15

4

1

8

12.0

20.0

60.0

80.0

75.0

100.0

60.0

48.0

0.0

0.0

0.0

0.0

0.0

0.0

0.0

12.0

7.4

56.9

1.5

85.9

72.5

84.5

85.3

87.3

84.3

77.6

77.3

81.8

0.0

0.0

0.0

0.0

0.0

0.0

0.0

66.7

66.7

69.5

55.8

47.1

58.7

50.0

39.4

37.8

34.7

49.1

0.0

0.0

0.0

0.0

0.0

0.0

0.0

8.0

1.0

10.5

9.6

23.1

11.9

27.3

28.4

26.1

35.2

21.5

12.0

20.0

20.0

36.0

60.0

16.0

4.0

32.0

25.0

27.2

28.3

4.4

245.0

395.9

96.0

154.6

3247.4

1.0

6.6

13.8

3.6

29.9

7.9

3.2

2.6

39.2

0.4

4.3

37.9

3.0

12.3

16.5

178.2

414.3

153.7

593.4

23.8

15.8

12.9

352.8

5.3

17.4

37.9

23.7

61.2

time

149.8

27.9

52.5

52.7

69.6

55.4

77.2

63.7

52.4

73.7

38.0

32.5

69.9

75.7

21.2

24.3

45.3

53.5

Average

14.5

S¸eker et al.: A Multiobjective Approach for Sector Duration Optimization

41

Figure 4

Coverage vs. PCI values of all generated solutions (left), and BOT vs. PCI values of solutions with at

least 99.7% coverage (right), for Cases 5 to 8.

0.70.80.91.0Coverage0.70.80.91.0PCICase 5PhaseI                PhaseII     Regular        ML       SOLP    Clinical020406080BOT0.70.80.91.0PCICase 50.70.80.91.0Coverage0.70.80.91.0PCICase 6PhaseI                PhaseII     Regular        ML       SOLP    Clinical020406080100BOT0.70.80.91.0PCICase 60.80.91.0Coverage0.70.80.91.0PCICase 7PhaseI                PhaseII     Regular        ML       SOLP    Clinical0255075100125BOT0.70.80.91.0PCICase 70.80.91.0Coverage0.70.80.91.0PCICase 8PhaseI                PhaseII     Regular        ML       SOLP    Clinical050100150BOT0.70.80.91.0PCICase 8