2
2
0
2

p
e
S
2
1

]
h
t
-
p
e
h
[

1
v
5
9
2
5
0
.
9
0
2
2
:
v
i
X
r
a

Computer algebra calculations in supersymmetric
electrodynamics

I.E.Shirokov

Moscow State University,
Faculty of Physics, Department of Theoretical Physics,
119991, Moscow, Russia.

September 13, 2022

Abstract

We propose a new symbolic algorithm and a C++ program for generating and calculating
supersymmetric Feynman diagrams for N = 1 supersymmetric electrodynamics regularized
by higher derivatives in four dimensions. According to standard rules, the program generates
all diagrams that are necessary to calculate a speciﬁc contribution to the two-point Green
function of matter superﬁelds in the needed order, and then reduces the answer to the sum
of Euclidean momentum integrals. At the moment, the program was used to calculate the
anomalous dimension in N = 1 supersymmetric quantum electrodynamics, regularized by
higher derivatives, in the three-loop approximation.

1 Introduction

Attempts to create software for calculations within the framework of quantum perturbation
theory have been made for more than ﬁfty years (see, for example, [1], as well as a review [2]). Of
course, the early programs were very limited, mostly, they considered quantum electrodynamics.
The main problem for the development of such programs was the extremely low performance
of machines of the day. However, since the 90s, the rapid development of this kind of software
has begun. Some programs created at that time have not lost relevance until now (for example,
[3, 4]).

Various programs for calculations in high-energy physics can be divided into several
groups. Firstly, there are programs designed to calculate various processes, usually within
the framework of the Standard Model. They are usually limited to the tree (PHEGAS[5],
O’mega[6], madevent[7], FDC[8], CompHEP/CalcHEP[9, 10], WHIZARD[11], Herwig++[12],
SHERPA[13]) or maximally to the one-loop approximation (GoSam[14], aMC@NLO[15]). Some
of these programs are also the event generators [5, 7, 12, 13], which can simulate the result of
an experiment. These programs are good because they mainly generate diagrams, amplitudes
and even calculate Feyman integrals. However, they are very limited by possible theories, the
number of loops (usually no more than one), as well as the ﬁeld of application (mostly these are
scattering cross sections, decay widths, etc.).

The second group of programs is related to the generation of amplitudes in a more general
case. One of the most famous programs is QGRAPH[3]. This program has been known for about
30 years, but is still actively used in various studies. It generates all diagrams in any order of
the perturbation theory, outputs them in some symbolic form, and also counts combinatorial
coeﬃcients. At the same time, it neither generates amplitudes nor draws diagrams. Another

1

 
 
 
 
 
 
It generates diagrams and amplitudes
well-known program of this kind is FeynArts[4, 16].
for a given theory. It also depicts them graphically using a special package for LATEX. As a
disadvantage, it can be pointed that it is limited to the three loop approximation.

We should also mention various computer algebra systems. Analytical calculations of dia-
grams have their own speciﬁcs because in addition to simple algebraic operations (which can
be performed using well-known systems such as Mathematica[17], Maple[18], Schoonschip[19],
as well as FORM[20]), it is necessary to analyze tensor structures, calculate traces of gamma
matrices, etc. There is a number of packages and programs for this. For example GiNaC[21],
Cadabra[22], Redberry[23], FeynCalc[24].

There are some programs that calculate Feynman momentum integrals in the D-dimention,
which are formed after construction of the amplitudes. Mostly, the following approach to their
calculation is implemented. Firstly, tensor integrals are reduced to scalar integrals by standard
methods, and then using such techniques as integration by parts in D-dimention [25] and the
application of Lorentz invariance scalar integrals are reduced to a small number of typical mas-
ter integrals. This process is implemented in the programs AIR[26], FIRE [27], LiteRed[28],
Reduze[29] and Kira[30]. Also there are well-known programs for calculating master integrals,
such as AMBRE[31], FIESTA[32] and SecDec[33]. We should also mention the package for
Schoonschip Mincer [34], which was ﬁrstly used to calculate the four-loop beta function using
dimensional regularization [35].

Finally, there are software packages that combine the generation of diagrams and ampli-
tudes, operations with them and taking integrals. For example aITALC[36], FeynMaster[37],
HepLib[38], tapir [39]. Basically, all these packages are based on the generation of diagrams by
the QGRAPH program, and then on the analysis of the results by other programs mentioned
above.

Some of the mentioned programs, among other things, are adapted to work with super-
symmetric theories [40, 8, 9, 13]. All of them work within the framework of the Minimal Su-
persymmetric Standard Model in terms of component ﬁelds. However, two known programs for
working with superﬁelds in the superspace exist. They are SUSYCAL[41] program written using
PASCAL language, as well as a package for Mathematica SusyMath[42]. These programs can
work with superspace expressions, that are generated by supergraphs. In theory, they can sim-
plify them to momentum integrals, but these projects are not being developed and are currently
unavailable for download.

Thus, we can note that despite the signiﬁcant progress in this area, there is a noticeable lack
of software for working within supersymmetric theories in terms of superﬁelds. Even existing
programs need integration with those that generate diagrams. In addition, the generation of
graphs in the supersymmetric case has its own speciﬁcs. To this end, the author has developed
computer-algebraic approaches for working with superﬁelds in the superspace. Using them, the
author created a program, that is capable to generate Feynman diagrams in terms of super-
space, as well as to perform various operations with them, after which the result is output in
the form of standard Feynman integrals. At the moment, the program can be used for calcu-
lating the anomalous dimension of the matter superﬁelds in N = 1 supersymmetric quantum
electrodynamics regularized by higher covariant derivatives in four dimensions.

2 N = 1 superspace formalism

N = 1 superspace is a space with the coordinates (ct, x, y, z, θ), where θ is a Majorana spinor.
Spinors in four dimensions are transformed according to a special spinor law with respect to the
Lorentz group1. Due to using of the superspace supersymmetry is explicit, even at the quantum

1You can read more about spinors, for example, in [43]

2

level. The spinor indices are raised and lowered using charge conjugation matrices:

The supersymmetric covariant derivative is usually introduced as follows:

θa ≡ θbCba;

θa = θbCab.

¯D ˙a =

∂
∂ ¯θ ˙a

− i(γµ) ˙a

bθb ∂µ.

(1)

(2)

In this case, the spinor indices are indicated by Latin letters, the right ones without a dot, and
the left ones with a dot, also the left spinors are marked by a bar. For example, ¯D ˙a is the left
supersymmetric covariant derivative, and the right one is denoted as Da. At the same time , it
is true for squares of derivatives:

D2 = DaDa

¯D2 = ¯D ˙a ¯D ˙a.

(3)

The usual ﬁelds in this approach are components of superﬁelds. So, the gauge ﬁeld is a com-
ponent of the real superﬁeld V (xµ, θ), spinor, and scalar superﬁelds are components of chiral or
antichiral ﬁelds (φ(xµ, θ) and φ∗(xµ, θ), respectively), which, by deﬁnition, satisfy the conditions:

¯D ˙aφ = 0, Daφ∗ = 0.

(4)

In addition, when we construct supersymmetric actions, integration is introduced with respect
to θ variables. In our notation , it can be deﬁned as follows:

(cid:90)

d2 ¯θ =

¯D2,

1
2

(cid:90)

d2θ = −

D2

1
2

(cid:90)

(cid:90)

d4θ =

d2 ¯θd2θ.

(5)

3 Perturbation theory in supersymmetric theories

We now consider how the standard perturbation theory works in the superspace2. First of
all, it is necessary to consider how the action of the theory is written in terms of superﬁelds.
There are 2 invariants with respect to supersymmetry transformations, which can be written as
follows:

(cid:90)

(cid:90)

S1 =

d4x d4θ V, S2 =

d4x d2θ Φ + c.c.

(6)

where V is a real superﬁeld and Φ is a chiral superﬁeld.

It is most convenient to carry out quantization by the functional integral method. The
main element of this approach, from which various quantities can be obtained, is the generating
functional Z, which is constructed as follows:

(cid:90)

Z =

D(superﬁelds) eiS+iSsources,

(7)

where D(superﬁelds) is a measure of the functional integration. The action can be represented
as:

S = S(2) + Sint(φ, V ),
(8)
where S(2) is a contribution to the action quadratic in ﬁelds, and Sint is a sum of contributions
of degree higher than 2. Next, terms with sources for real and chiral ﬁelds look like this:

2You can read about the usual perturbation theory in QFT, for example, in [44]

Ssources = jφ + JV

(9)

3

In this case (7) can be rewritten as follows:
(cid:90)

Z = eiSint( 1

i

δ

δj , 1

i

δ
δJ )

D(superﬁelds) ei(S(2)+Ssources)

(10)

The remaining Gaussian integral is taken using standard methods. The interaction term series
expansion is interpreted graphically using Feynman diagrams.

After the expansion, one can obtain structures which generate propagators in diagrams. For

example, for gauge superﬁeld sources:

At the same time , the following structures arise:

δ
δJ1

δ
δJ2

Z0(J)

δJ1
δJ2

where δ4

12(θ) is deﬁned as

= δ8

12 = δ4(x1 − x2)δ4

12(θ)

12(θ) = δ4(θ1 − θ2) = 4(θ1 − θ2)2(¯θ1 − ¯θ2)2.
δ4

With this deﬁnition, standard rules for a superspatial delta-function are obtained:

(cid:90)

d4θ1δ4

12(θ) = 1;

(cid:90)

d4θ1f (θ1)δ4

12(θ) = f (θ2).

The following relation holds for the sources of chiral ﬁelds:

δj1
δj2

= −

D2
2

δ8
12.

(11)

(12)

(13)

(14)

(15)

In addition, D-derivatives can exist in the vertices and in the generating functional itself.

Sometimes, it is necessary to consider the eﬀective action. It is deﬁned as follows. First, the

generating functional of the connected Green’s functions is constructed:

and the eﬀective action Γ[superﬁelds] is obtained from W [Sources] by Legendre transformation:

W [Sources] = −i ln Z[Sources],

(16)

Γ = W − Ssources|sources−→superﬁelds,

δW
δji

= ϕi.

(17)

In fact, the generating functional W removes all disconnected diagrams from Z, and Γ removes
one-particle reducible diagrams. These are diagrams that can be divided by cutting a single
internal line. As an example, in Fig. 1 the upper diagram is one-particle irreducible, and the
lower one is one-particle reducible.

4 Supersymmetric “D-algebra”

It can be seen that a speciﬁc expression for a Feynman diagram will contain some superspatial
delta-functions δ8
12, to which supersymmetric covariant derivatives act, while the entire expres-
sion is integrated over the superspace. A typical expression has the form

(cid:90)

d8x1...d8xn D ¯D...Dδ8

12 × ... × D ¯D...Dδ8

nm.

(18)

At the same time, in accordance with [45], the following algorithm for working with this expres-
sion can be constructed:

4

Figure 1: One-particle (ir)reducible diagrams

1. We make ‘integration by parts”. One can transfer the external D-derivative from any
element to another one corresponding to the same point. Thus, it is possible to clear a
superspatial delta-function from derivatives and integrate it according to (14).

2. It is also possible to rearrange derivatives among themselves in accordance with the rules

of supersymmetric ‘D-algebra” in four dimensions:

{Da, ¯D˙b} = 2i(γµ)a˙b∂µ,

{Da, Db} = 0,
{ ¯D ˙a, ¯D˙b} = 0,
˙b
[Da, ¯D2] = 4i(γµ)
a
[Da, D2] = 0,

¯D˙b∂µ,

[ ¯D2, D2] = 4i(γµ)

˙ba[Da, ¯D˙b]∂µ,

¯D2D2 ¯D2 = −16∂2 ¯D2,
D2 ¯D2D2 = −16∂2D2.

(19)

(20)

(21)

(22)

(23)

(24)

(25)

(26)

These identities help to reduce a number of the derivatives.

3. If there are several identical superspatial delta-functions in the expression, then the fol-

lowing identities should be applied:

12Dαδ8
δ8

12 = 0,

if α ≤ 3

12D2 ¯D2δ8
δ8

12 = 4δ8

12δ4(x1 − x2)

(27)

(28)

As a result of these steps, it is possible to remove most of the integrations and the superspacial
delta-functions, while covariant derivatives acting on external superﬁelds may remain. Also
there will be a certain number of traces of the gamma matrices, which are evaluated using the
standard proceedures. After that, the expressions under consideration take the form of ordinary
momentum integrals.

5

5 The algorithm implemented by the program

Let us brieﬂy describe the algorithm of the program. We calculate the contribution to the
eﬀective action (17). To do this, one can use Eq. (10) if one excludes from it all one-particle
reducible and disconnected diagrams and also makes substitution of external ﬁelds according to
Legendre transformation (17). In accordance with the above, the program operates as follows.

1. In Eq. (10), the exponent with the interaction vertices is expanded to the desired order of
the perturbation theory. At the same time, terms where external superﬁelds are substituted
in all possible ways are added.

2. Further, in all the resulting contributions we try to pair derivatives with respect to sources,
for example as in the formula (11). If this fails in the end, then the option is discarded,
if it works, a new expression is created in which derivatives with respect to sources are
grouped in pairs.

3. We check the resulting graphs for one-particle reducibility. To do this, we use a function
that removes each of the propagators in turn and then checks the connectivity. After each
check we either remove the graph or leave it.

4. At this stage we switch to the momentum representation, generate a list of loop momenta
based on the expnsion order. Loop momenta are basis momenta, from which other mo-
menta of internal lines can be expressed. Each loop momenta is encoded by a prime
number. Next, we assign a momentum to each propagator, based on the conservation law
for all vertices of a diagram, and replace the paired derivatives sources by a speciﬁc expres-
sion for the propagator, which contains an operator acting on a superspacial delta-function
(it can also contain momenta and constants). After that, each graph is also checked for
compliance with the conservation law in each point. If something is incorrect, the program
throws an error.

5. Now the expressions are ready to work with the D-algebra. Each expression is processed
separately. We consider each operator and choose the one with the fewest covariant deriva-
tives, then we begin to transfer all the operators from it using integration by parts, until
we completely clear the superspacial delta-function on which it acts. In this case, a lot
of new expressions are obtained, and then we separately process each of them. When
the superspacial delta-function is cleared, we look for the same one and, if found, apply
the rules (19)—(26) to reduce the number of derivatives, and then Eqs. (27) and (28) to
eliminate the superspacial delta-function. If there is no such superspacial delta-function,
the integration is simply removed. We act in this way until we eliminate all superspacial
delta-functions. Then, if the external momenta are not equal to zero, we do the same for
matter superﬁelds, taking into account their chirality.

6. Now we have expressions with external ﬁelds, momenta, and other structures, as well as
gamma matrices, delta-symbols, and charge conjugation matrices with spinor indices. At
this step, we contract all indices from the delta symbols and charge conjugation matrices,
and then calculate the traces of the gamma matrices. In general, in our notation, this
is not a completely pure trace of gamma matrices, it also contains γ5, which can lead to
structures containing the antisymmetric tensor (cid:15)µνλδ, but it will always be contracted with
loop momenta and, therefore, will not contribute up to the ﬁve-point Green’s functions,
which we do not consider yet 3. It should be noted that unlike calculations in D-dimension
[46], we work in four dimensions and therefore all standard relations for γ-matrices are
valid in our case.

3More details about the algebra of γ-matrices can be found, for example, in [43]

6

7. After that, we get contributions in the form of squares and scalar products of momenta. We
represent a momentum not by a string, but by a number. This is done for the convenience of
working with it, because one can use standard algorithms for ﬁnding the greatest common
divisor, etc. Each momentum is given by a prime number, and the sum of the momenta
corresponds to their product, so each number uniquely sets the sum. For example: we
have momenta k, l and q. Let us assign k-number 2, l-number 3, q-number 5. Then, for
example, k + l will be 6, and k + l + q will be 30. Mostly, when constructing diagrams, all
lines can be assigned exactly the sum of impulses. If at some point this is not the case,
then, for example, a square can be represented by (k − l)2 = −(k + l)2 + 2k2 + 2l2. In this
case, it is easier to work with full squares, separating them from the general expression.
As an example, the following expression can be considered:

(q + k + l)µ(q + k)µ = (q + k)2 + lµ(q + k)µ

= (q + k)2 +

1
2

(q + k + l)2 −

l2 −

1
2

1
2

(q + k)2

(29)

In the notation of the program, these are the products of momentum 30 (q + k + l) and 10
(q + k). First we look for the greatest common divisor, it is equal to 10 (q + k), and then
multiply the quotient of each with GCD (in this case it is 3(l) and 1(0)) with each of the
other factors (10 (q + k) and 30 (q + k + l), respectively). If the greatest common divisor
is 1, then we decompose into perfect squares in the standard way (as in the second part
(29)). At the end, for each individual graph, we try to collect terms.

8. At the last stage, we try to collect terms between diﬀerent graphs. In this case, we also use
some possible changes of variables, since all ﬁnal expressions are assumed to be integrated
over loop momenta. We implement substitutions of the following type:

k → k + l,

k → k + l + q

etc.

as well as all possible permutations of momenta:

k ↔ l,

k ↔ q

etc.

(30)

(31)

In doing so, we act as follows. We try to make all possible replacements of these two classes,
and for each replacement we put in correspondence a certain weight (which represents the
sum of the values of all momenta). Then we choose such a replacement, which has the
smallest weight. In the general case, this minimum is not unique, but in most situations
it is. Then we carry out a direct comparison of all expressions and collect terms. This
greatly simpliﬁes the expression.

A few general remarks should also be made. At almost all stages, we collect terms as they
are represented at that time. This is usually done by direct comparison of the expressions term
by term. At the ﬁrst stage, where the pairing of derivatives with respect to sources takes place,
the reduction of similar ones is carried out by permuting points and further comparison until
all permutations have been enumerated. This speeds up the program by orders of magnitude.
Also, at the stage of generation and direct processing of each graph, the program is divided into
threads using the OpenMP library [47].

6 Examples

Let us describe examples of using the program. We will consider N = 1 supersymmetric
electrodynamics [45, 48, 49] with Nf types of matter superﬁelds (we will further call them

7

ﬂavors) regularized by higher derivatives [50, 51, 52, 53]. Regularization is carried out in four
dimensions. In the massless limit the action of the original theory has the form:

S =

(cid:90)

Re

1
4e2
0

d4xd2θW aWa +

1
4

Nf
(cid:88)

(cid:90)

α=1

(cid:16)

d4xd4θ

αe2V φα + (cid:101)φ∗
φ∗

αe−2V (cid:101)φα

(cid:17)

(32)

where e0 is a bare coupling constant, V is a gauge superﬁeld and φα are Nf chiral matter super-
ﬁelds. In order to regularize the theory, it is necessary to add to the action the regularization
function R( ∂2

Λ2 ), which satisfy the following conditions

R(0) = 1, R(∞) = ∞.

(33)

Then the regularized action of the theory takes the form

Sreg =

(cid:90)

Re

1
4e2
0

d4xd2θW aR(

∂2
Λ2 )Wa +

1
4

Nf
(cid:88)

(cid:90)

α=1

It is also necessary to add a gauge ﬁxing term:

(cid:16)

d4xd4θ

αe2V φα + (cid:101)φ∗
φ∗

αe−2V (cid:101)φα

(cid:17)

.

(34)

Sgf = −

(cid:90)

1
32e2
0ξ0

d4xd4θD2V K (cid:0)∂2/Λ2(cid:1) ¯D2V,

(35)

here function K( ∂2
Λ2 ). For regularization in
the one-loop approximation, one must also add the Pauli-Villars determinants [54]. They can
be represented as path integrals over the corresponding chiral superﬁelds Φ and ˜Φ:

Λ2 ) satisfy the same conditions (33) as function R( ∂2

(det(P V, M ))−1 =

(cid:90)

DΦD ˜Φ exp(iSP V ),

(36)

where the action for Pauli-Villars superﬁelds is given by the expression

SP V = −

(cid:90)

1
4

d4xd4θ(Φ∗e2V Φ + ˜Φ∗e−2V ˜Φ) +

(cid:90)

1
2

d4xd2θ(M Φ ˜Φ + c.c.),

(37)

and M = aΛ is the mass of the Pauli-Villars superﬁelds.

The ﬁnal expression for the action is

Stotal = S + Ssources + Sreg + Sgf

(38)

and the generating functional can be written in the form:

(cid:90)

Z[J, j, ˜j] =

DV DφD ˜φ (det(P V, M ))Nf exp(iS + iSreg + iSsources + iSgf ),

(39)

where J, j, ˜j are the sources. From this expression, one can obtain the propagators of the theory
for the ordinary superﬁelds and for the Pauli-Villars (massive) superﬁelds:

¯D2
xD2
y
4∂2 δ8
xy;

(40)

P (cid:0)φα,x, φ∗

β,y

(cid:1) = P

(cid:16) ˜φα,x, ˜φ∗

β,y

(cid:17)

= δαβ

(cid:16)

(cid:16)

P

P

Φx, (cid:101)Φy

x, ˜Φ∗
Φ∗
y

(cid:17)

(cid:17)

=

=

P (cid:0)Φx, Φ∗

y

(cid:1) = P

M ¯D2
∂2 + M 2 δ8
xy;
M D2
∂2 + M 2 δ8
xy;
(cid:17)
(cid:16) ˜Φx, (cid:101)Φ∗

y

=

8

¯D2

xD2
y
4 (∂2 + M 2)

δ8
xy.

The gauge ﬁeld propagator reads as

P (Vx, Vy) = 2e2
0

(cid:20)

−

1
R∂2 +

1
16∂4

(cid:18) ξ0
K

−

1
R

(cid:19) (cid:16) ¯D2D2 + D2 ¯D2(cid:17)(cid:21)

δ8
xy.

(41)

The vertices in this case can be easily constructed by the direct expansion of the action. The
regulator function 1
R will be called K4 in the following example. In this case, we omit the ﬂavor
indices; in the program, the powers of Nf is determined by the number of closed matter loops.
The program is currently a console application, the data is read from a text ﬁle. At the

input of the program, one must send

1. Calculation type, that is kind of contribution to eﬀective action do we consider.

2. Various options, for instance, marking that we are working with supersymmetric quantum

electrodynamics with Nf ﬂavors.

3. Expansion order and a number of loops.

4. List of propagators and vertices of the theory

Let us consider an example input ﬁle for the one loop calculation in the Feynman gauge (this
means that ξ0 = 1 and K = R in (41)).

Type:
F#_1^1{-1}*F_1^1{1}
Option:
SQED
Nf^0
Loops:
1
Order:
2
Propagators:
V_1^1{1}*V_2^1{1}
2*i*e^0*I{1^-2}*K4{1}*d_{1}{12}
F#_1^1{1}*F_2^1{1}
-1/4*i*e^0*I{1^-2}*D_1(D#_2(d_{1}{12}))
Vertexes:
1/2*i*e*F#_1^1{6}*V_1^1{-3}*F_1_1{-2}

In our example we consider a contribution to the eﬀective action with two external matter
superﬁelds and examine the case of zero external momenta. We work in theory with Nf ﬂavors
and calculate only the contributions that do not contain Nf .

Now here is the output for this example:

File read correctly
1-loop diagrams are being generated
Completed100%
Diagrams created
Aligning momenta ...
Diagram generation completed
Diagram generation took 0.027 sec
Diagrams are being calculated...
0

9

-1/8*e^2*F#_1^1{-1}*F_2_2{1}*d_{-2}{12}*
D_2(D#_1(d_{2}{12}))*K4{2}*I{2^-2}*I{2^-2}
Diagram calculation completed
Diagram calculation took 0.018 sec
Collecting terms...
Collecting terms completed
Result:
-1/2*e^2*F#_1^1{-1}*F_1_2{1}*K4{2}*I{2^-4}
Total running time 0.052 sec

Each step is explained, the generation process displays the percentage of what has been done
so far. It then displays the time it took to generate. When diagrams are being calculated, for
each graph its number (starting from 0) and an expression for it are displayed. At the end, the
result is displayed. In this case, this expression is translated into analytical language as follows:

−

(cid:90)

1
2

d4k
(2π)4 d4θ φ∗

α(0, θ)φα(0, θ)

1
Rkk4 .

(42)

In general, all input expressions are assumed to be integrated over the full superspace, and all
output expressions over d4θ and over all loop momenta. External momenta in this case are set
equal to zero, but if this is not the case, then integration is assumed over them as well. Since
the connection of the eﬀective action with the two-point Green’s function is expressed by the
equation

Γ(2)
φ =

1
4

Nf
(cid:88)

(cid:90)

α=1

d4q
(2π)4 d4θ

(cid:16)

α(−q, θ)φα(q, θ) + (cid:101)φ∗
φ∗

(cid:17)
α(−q, θ) (cid:101)φα(q, θ)

G (α0, Λ/q) ,

(43)

then the contribution to the Green function (in which the external momentum is set equal to
zero) has the form:

∆G|q=0 = −2e2
0

(cid:90) d4K
(2π)4

1
K4RK

.

(44)

This result agrees with the results of Ref. [55]. Moreover, it corresponds to formula (56) from
[56] with ξ0 = 1.
In addition, it is worth noting that the program outputs an expression in
the form of Euclidean integrals if all input expressions are also written in terms of Euclidean
momenta. Changing the measure as a result of Wick’s rotation and other transformations are
done automatically by the program.

7 Technical information and timing

The program was used in calculations in up to three loops. The results of the three-loop

calculation can be found in Ref. [57].

In the end, we present the time that the various calculations of this program took. The

calculations were carried out on the following conﬁguration:

Operating system: Windows 10 x64

Processor: AMD Ryzen 5 1600 Six-Core Processor 3.20 GHz
RAM: 8 GB
Compiler: GNU GCC Compiler
Compilation options: -march=native, -O3

We will divide them into three parts depending on the degree of the number of ﬂavors.
Moreover, since this degree is determined by the number of closed matter loops, then some

10

contributions exist only in a certain order. In addition, we will also consider the cases of the
minimal (ξ0 = 1) and non-minimal (ξ0 (cid:54)= 1) gauges, as well as the absence or presence of massive
ﬁelds in the theory (m) . The timing is given in table. 1,2,3.

1 loop
0.052 sec
0.067 sec

2 loops
0.14 sec
0.57sec

3 loops
2.6 sec
2 min 27 sec

ξ0 = 1
ξ0 (cid:54)= 1

Table 1: Timing, contribution ∼ N 0
f

ξ0 = 1, m = 0
ξ0 (cid:54)= 1, m = 0
ξ0 = 1, m (cid:54)= 0
ξ0 (cid:54)= 1, m (cid:54)= 0

2 loops
0.16 sec
0.52 sec
0.41 sec
1.23 sec

3 loops
6.6 sec
13 min 49 sec
41.5 sec
3 h 54 min

Table 2: Timing, contribution ∼ N 1
f

ξ0 = 1, m = 0
ξ0 (cid:54)= 1, m = 0
ξ0 = 1, m (cid:54)= 0
ξ0 (cid:54)= 1, m (cid:54)= 0

3 loops
4.2 sec
6.6 sec
35 sec
2 min 58 sec

Table 3: Timing, contribution ∼ N 2
f

In the case of Feynman gauge (ξ0 = 1), we considered vertices in which the number of
external lines of the gauge ﬁeld does not exceed the number of loops, diagrams where this is not
the case are zero in this gauge according to (27). This slightly reduced the running time.

8 Conclusion

A program was created to generate and calculate the superspace part of Feynman diagrams for
two-point Green functions of supersymmetric electrodynamics. It has been tested on calcula-
tions in one and two loops and used for calculations in three loops, including the ones in the
non-minimal gauge (ξ0 (cid:54)= 1). The running time in most calculations turned out to be accept-
able (usually no more than a few minutes), which makes it possible to further upgrade it for
calculations in more interesting theories, such as the supersymmetric Yang-Mills theory.

Acknowledgements

The author expresses deep gratitude to K.V. Stepanyantz for his help in studying methods of
computing in superspace, as well as for careful reading of the text of the article and important
comments. In addition, the author thanks S.V. Morozov for his help and valuable advices on the
C++ language capabilities and the OpenMP package, as well as for careful reading of the article
and important comments. The author also thanks A.L. Kataev for his valuable comments.

11

References

[1] J. A. Campbell and A. C. Hearn, J. Comput. Phys. 5 (1970), 280-327

[2] V. P. Gerdt, O. V. Tarasov and D. V. Shirkov, Sov. Phys. Usp. 23 (1980), 59-77

[3] P. Nogueira, J. Comput. Phys. 105 (1993), 279-289

[4] J. Kublbeck, M. Bohm and A. Denner, Comput. Phys. Commun. 60 (1990), 165-180

[5] C. G. Papadopoulos, Comput. Phys. Commun. 137 (2001), 247-254

[6] M. Moretti, T. Ohl and J. Reuter, [arXiv:hep-ph/0102195 [hep-ph]].

[7] F. Maltoni and T. Stelzer, JHEP 02 (2003), 027

[8] J. X. Wang, Nucl. Instrum. Meth. A 534 (2004), 241-245

[9] E. Boos et al. [CompHEP], Nucl. Instrum. Meth. A 534 (2004), 250-259

[10] A. Belyaev, N. D. Christensen and A. Pukhov, Comput. Phys. Commun. 184 (2013),

1729-1769

[11] W. Kilian, T. Ohl and J. Reuter, Eur. Phys. J. C 71 (2011), 1742

[12] M. Bahr, S. Gieseke, M. A. Gigg, D. Grellscheid, K. Hamilton, O. Latunde-Dada,
S. Platzer, P. Richardson, M. H. Seymour and A. Sherstnev, et al. Eur. Phys. J. C 58
(2008), 639-707

[13] T. Gleisberg, S. Hoeche, F. Krauss, M. Schonherr, S. Schumann, F. Siegert and J. Winter,

JHEP 02 (2009), 007

[14] G. Cullen, H. van Deurzen, N. Greiner, G. Heinrich, G. Luisoni, P. Mastrolia, E. Mirabella,

G. Ossola, T. Peraro and J. Schlenk, et al. Eur. Phys. J. C 74 (2014) no.8, 3001

[15] J. Alwall, R. Frederix, S. Frixione, V. Hirschi, F. Maltoni, O. Mattelaer, H. S. Shao,

T. Stelzer, P. Torrielli and M. Zaro, JHEP 07 (2014), 079

[16] T. Hahn, Comput. Phys. Commun. 140 (2001), 418-431

[17] Wolfram Mathematica, (2022). https://www.wolfram.com/mathematica/

[18] Maple, (2022). https://www.maplesoft.com/products/maple/

[19] M. J. G. Veltman and D. N. Williams, [arXiv:hep-ph/9306228 [hep-ph]].

[20] B. Ruijl, T. Ueda and J. Vermaseren, [arXiv:1707.06453 [hep-ph]].

[21] J. Vollinga, Nucl. Instrum. Meth. A 559 (2006), 282-284

[22] K. Peeters, Comput. Phys. Commun. 176 (2007), 550-558

[23] D. A. Bolotin and S. V. Poslavsky, [arXiv:1302.1219 [cs.SC]].

[24] V. Shtabovenko, R. Mertig and F. Orellana, Comput. Phys. Commun. 256 (2020), 107478

[25] K. G. Chetyrkin and F. V. Tkachov, Nucl. Phys. B 192 (1981), 159-204

[26] C. Anastasiou and A. Lazopoulos, JHEP 07 (2004), 046

12

[27] A. V. Smirnov and F. S. Chuharev, Comput. Phys. Commun. 247 (2020), 106877

[28] R. N. Lee, J. Phys. Conf. Ser. 523 (2014), 012059

[29] C. Studerus, Comput. Phys. Commun. 181 (2010), 1293-1300

[30] P. Maierh¨ofer, J. Usovitsch and P. Uwer, Comput. Phys. Commun. 230 (2018), 99-112

[31] I. Dubovyk, J. Gluza, T. Riemann and J. Usovitsch, PoS LL2016 (2016), 034

[32] A. V. Smirnov, Comput. Phys. Commun. 204 (2016), 189-199

[33] S. Borowka, G. Heinrich, S. P. Jones, M. Kerner, J. Schlenk and T. Zirke, Comput. Phys.

Commun. 196 (2015), 470-491

[34] S. G. Gorishnii, S. A. Larin, L. R. Surguladze and F. V. Tkachov, Comput. Phys. Commun.

55 (1989), 381-408

[35] S. G. Gorishnii, A. L. Kataev, S. A. Larin and L. R. Surguladze, Phys. Lett. B 256 (1991),

81-86

[36] A. Lorca and T. Riemann, Nucl. Phys. B Proc. Suppl. 135 (2004), 328-332

[37] D. Fontes and J. C. Rom˜ao, Comput. Phys. Commun. 256 (2020), 107311

[38] F. Feng, Y. F. Xie, Q. C. Zhou and S. R. Tang, Comput. Phys. Commun. 265 (2021),

107982

[39] M. Gerlach, F. Herren and M. Lang, [arXiv:2201.05618 [hep-ph]].

[40] T. Hahn and C. Schappacher, Comput. Phys. Commun. 143 (2002), 54-68

[41] T. Kreuzberger, W. Kummer and M. Schweda, Comput. Phys. Commun. 58 (1990), 89-104

[42] A. F. Ferrari, Comput. Phys. Commun. 176 (2007), 334-346

[43] K. V. Stepanyantz, “Classical ﬁeld theory,” PHYSMATHLIT. (2009), 1-540, In Russian.

[44] N. N. Bogolyubov and D. V. Shirkov, “INTRODUCTION TO THE THEORY OF QUAN-
TIZED FIELDS,” Intersci. Monogr. Phys. Astron. 3 (1959), 1-720 1 [Moscow: Nauka,
(1973) 416 p, In Russian].

[45] P. C. West, “Introduction to supersymmetry and supergravity,” Singapore: World Scien-

tiﬁc, (1990). 1-425

[46] O. V. Tarasov and A. A. Vladimirov, Phys. Part. Nucl. 44 (2013), 791-802

[47] [OpenMP ARB] OpenMP 5.2 Reference Guide, (2021). https://www.openmp.org/wp-

content/uploads/OpenMPRefCard-5-2-web.pdf

[48] S. J. Gates, M. T. Grisaru, M. Rocek and W. Siegel, “Superspace Or One Thousand and

One Lessons in Supersymmetry,” Front. Phys. 58 (1983), 1-548

[49] I. L. Buchbinder and S. M. Kuzenko, “Ideas and methods of supersymmetry and super-

gravity: Or a walk through superspace,” IOP, (1998), 1-656.

[50] A. A. Slavnov, Nucl. Phys. B 31 (1971), 301-315

[51] A. A. Slavnov, Teor. Mat. Fiz. 13 (1972), 174-177

13

[52] V. K. Krivoshchekov, Teor. Mat. Fiz. 36 (1978), 291-302

[53] P. C. West, Nucl. Phys. B 268 (1986), 113-124

[54] A. A. Slavnov, Teor. Mat. Fiz. 33 (1977), 210-217

[55] A. L. Kataev and K. V. Stepanyantz, Theor. Math. Phys. 181 (2014), 1531-1540

[56] S. S. Aleshin, I. S. Durandina, D. S. Kolupaev, D. S. Korneev, M. D. Kuzmichev,
N. P. Meshcheriakov, S. V. Novgorodtsev, I. A. Petrov, V. V. Shatalova and I. E. Shirokov,
et al. Nucl. Phys. B 956 (2020), 115020

[57] I. Shirokov and K. Stepanyantz, JHEP 04 (2022), 108

14

