Open-source software for electrical engineering applications requiring consideration of
electrodynamics: elecode

Northern Energetics Research Centre, Kola Science Centre of the Russian Academy of Sciences, Apatity, Russia

Dmitry Kuklin∗

2
2
0
2

l
u
J

5
1

]
E
C
.
s
c
[

2
v
8
0
9
6
0
.
7
0
2
2
:
v
i
X
r
a

Abstract

The work presents elecode, open-source software for various electrical engineering applications that require considering electro-
magnetic processes. The primary focus of the software is power engineering applications. However, the software does not impose
any speciﬁc limitations preventing other uses. In contrast to other open-source software based on the Finite Diﬀerence Time Domain
(FDTD) method, elecode implements various thin wire modeling techniques which allow simulating complex objects consisting of
wires. In addition, implemented graphical user interface (GUI) helps modify models conveniently. The software provides auxiliary
numerical methods for simulations and measurements of the electrical soil properties, allows conducting lightning-related simula-
tions (including those involving isolation breakdown models), and calculations of grounding characteristics. The part of the code
responsible for FDTD simulations is well tested in previous works. Recently, the code was rewritten in order to add a convenient
interface for using it as a library, command-line program, or GUI program. Finally, the code was released under an open-source
license. The main capabilities of the software are described in the work. Several simulation examples covering main software
features are presented. elecode is available at https://gitlab.com/dmika/elecode.

Keywords: Finite Diﬀerence Time Domain, Open-source, Computational electromagnetics, Electrical engeneering
2010 MSC: 00-01, 99-00

1. Introduction

Various applications in electrical engineering require con-
sidering complex electromagnetic phenomena [1, 2, 3, 4]. Ex-
amples of such applications are simulations of overvoltages caused
by lightning strikes [5], calculations of electrical grounding char-
acteristics (such as grounding impedance, ground potential rise,
etc.) [6], and simulations related to measurements of frequency-
dependent soil properties [7, 8].

In order to meet the necessary requirements, suitable soft-
ware is needed. FDTD method has demonstrated great poten-
tial in solving power engineering problems. However, existing
open-source FDTD software is usually designed for other pur-
poses [9, 10]. Lack of thin wire techniques, absence of conve-
nient graphical user interface (GUI) for modifying 3D models,
and lack of additional numerical methods (for measurements
of soil properties, insulation breakdown, etc.) do not allow us-
ing the existing software for power engineering applications.
Closed-source software does not allow the implementation of
new numerical methods and therefore is very limited for re-
search purposes.

To ﬁll this gap, open-source software was developed that
allows conducting simulations conveniently both at the level of
computer code and user interface level.

The software mainly focuses on power engineering appli-
cations but is not limited to them: any other uses are possible

(especially if computer code is expanded with additional nu-
merical methods).

Diﬀerent parts of the code were used previously in various
problems [5, 6, 7, 8]. However, the code was closed source,
fragmented, and unsuitable for convenient user-friendly usage.
Recently the code has been rewritten in a more convenient for
modiﬁcations manner, put together as a single software toolset,
and released under an open-source license.

2. Numerical methods

In this section, the main numerical methods implemented
in the software are described. Apart from the FDTD method,
numerous additional methods were implemented which can be
used in electrical engineering.

2.1. Basic FDTD algorithm

The core of the software is the implementation of the FDTD

method (and additional FDTD-related techniques).

The basic FDTD algorithm is based on two of the Maxwell

equations [11, 12]:

∂B
∂t
∂D
∂t

= −∇ × E,

= ∇ × H − J.

(1)

∗Corresponding author
Email address: kuklindima@gmail.com (Dmitry Kuklin)

In Cartesian coordinates, components of the electric ﬁeld:

Preprint submitted to journal

July 18, 2022

 
 
 
 
 
 
where ε and σ are permittivity and conductivity of the medium.

For the magnetic ﬁeld:

∂Ex
∂t
∂Ey
∂t
∂Ez
∂t

=

=

=

1
ε " 
1
ε " 
1
ε " 

∂Hz
∂y
∂Hx
∂z
∂Hy
∂x

−

−

−

∂Hy
∂z !
∂Hz
∂x !
∂Hx
∂y !

− σEx

− σEy

#

#

− σEz

,

#

∂Hx
∂t
∂Hy
∂t
∂Hz
∂t

=

=

=

1
µ  
1
µ  
1
µ  

∂Ey
∂z
∂Ez
∂x
∂Ex
∂y

−

−

−

∂Ez
∂y !
∂Ex
∂z !
∂Ey
∂x !

,

where µ is the permeability of the medium.

Yee proposed using ﬁnite diﬀerence expressions for these
equations [11]. According to this approach, the Ex component
at a certain time moment can be calculated as [12]:

Ex|n+1

i+1/2, j,k =

1 −

σi+1/2, j,k · ∆t
εi+1/2, j,k

!

· Ex|n

i+1/2, j,k

∆t
εi+1/2, j,k
Hy|n+1/2

+

−

Hz|n+1/2

i+1/2, j+1/2,k − Hz|n+1/2
∆y

i+1/2, j−1/2,k

·

i+1/2, j,k+1/2 − Hy|n+1/2
∆z

i+1/2, j,k−1/2

.

!

Similarly for other electric ﬁeld components.

Hx magnetic ﬁeld component is calculated as [12]:

Hx|n+1/2

i, j+1/2,k+1/2 = Hx|n−1/2

+

−

∆t
µi, j+1/2,k+1/2
Ez|n

·

i, j+1,k+1/2 − Ez|n
∆y

i, j,k+1/2

.
!

Ey|n

i, j+1/2,k+1/2
i, j+1/2,k+1 − Ey|n
∆z

i, j+1/2,k

(4)

(5)

Analogously for remaining magnetic ﬁeld components.

Using these equations, it is possible to calculate electric and
magnetic ﬁelds for a particular simulation volume and a certain
number of time steps (assuming that the ﬁeld source is simu-
lated too).

For the cases when better accuracy, special properties of
the media, ﬁeld sources, or additional numerical techniques are
required, these equations are modiﬁed accordingly [13].

For simulations, it is necessary to model sources of the elec-
tromagnetic ﬁeld. The software allows modeling diﬀerent kinds
of sources: non-ideal and ideal current and voltage sources [13]
(they are used the most for the tasks the software focuses on),

2

pointwise electric and magnetic ﬁeld sources [13], and plane-
wave sources. The plane wave is modeled with the total-ﬁeld /
scattered-ﬁeld technique [13], and it can be useful for modeling
antennas (or testing thin wire techniques).

One of the important objects in electrical engineering tasks
are lumped circuit elements. Such elements as resistors and
capacitors can be modeled with the software [13].

(2)

2.2. Absorbing boundary conditions

To simulate the extension of the computation domain to in-
ﬁnity, absorbing boundary conditions (ABC) are required [13].

Among the existing ABCs, the perfectly matched layer (PML)

is one of the most eﬃcient. Two types of PML were imple-
mented in the software: uniaxial PML (UPML) [14, 13] and
convolutional PML (CPML) [15, 13].

(3)

2.3. Thin wire techniques

Another essential object that is usually required in simula-
tions is long wire (with a diameter signiﬁcantly smaller than
the cell size). There are multiple thin wire techniques. Some
of them are suited for wires located along the FDTD grid. In
some cases, arbitrarily located wires are needed. Three main
wire models are implemented: the model [16] with correction
[17, 18], staircase wire model [19, 20], and oblique thin wire
technique [21].

2.4. Dispersive media

In certain cases, it is necessary to model dielectrics with
dispersive properties. One of such cases is modeling frequency-
dependent soil properties [22, 23, 24, 25, 26, 27]. For this pur-
pose, the Debye model provides acceptable results (if the re-
quired frequency range is not too wide) [6].

For simulating Debye media, the auxiliary diﬀerential equa-

tion (ADE) method is used in the software [28, 13].

The thin wire techniques [16] and [21] mentioned above are

modiﬁed for usage with Debye media according to [6].

2.5. Additional methods

Apart from the FDTD-related methods, the software also
provides the implementation of additional numerical methods
and mathematical models useful for various electrical engineer-
ing applications.

In high-voltage engineering, modeling electrical soil prop-
erties is essential because electrical grounding characteristics
depend on them. Therefore, many diﬀerent numerical meth-
ods were implemented that are necessary for measurements and
simulations of the soil properties and grounding characteristics.
Using the Debye model for (simulating dielectric proper-
ties) requires calculating the Debye model parameters. For this
purpose, the hybrid particle swarm-least squares optimization
approach was implemented [29].

For calculating apparent soil properties, the method [30]
was implemented. This method is important for low-frequency
soil resistivity measurements (but can be useful for higher fre-
quencies too).

 
 
 
dependencies

library

CLI

GUI

CLI-GUI

Figure 1: Software modules and their dependencies.

Soil measurements also require information on various char-
acteristics of a measurement array [31]. One of the character-
istics, depth of investigation, can be calculated with the imple-
mented methods for dipole-dipole arrays [32] and [33].

Additionally, several models for frequency-dependent soil
properties were implemented: Alipio-Visacro model [34], Portela
model [35, 23], and Messier model [23].

There is also additional code implementing insulation break-
down models [36, 37]. The models can be used, for exam-
ple, for calculating back ﬂashover probability due to lightning
strikes [5, 38]. Various implemented lightning current wave-
forms [39, 40] help conduct calculations related to lightning
strikes.

3. Software

3.1. Programming language and libraries

The code uses the C++ programming language. C++ was
chosen because it allows programming both at high and low
levels. In addition, it is fast and ubiquitous: GNU Compiler
Collection used for the compilation is readily available on many
platforms (especially Linux-based ones). There are plenty of
useful libraries written for C++.

The code avoids dependencies on external libraries as much
as possible to simplify software maintenance and usage. Most
of the code only needs open-source GNU Compiler Collec-
tion (which includes OpenMP required for parallel computing).
However, additional libraries are needed for the GUI. The GUI
uses Qt [41] and OpenGL [42] libraries.

3.2. Software structure

The software is divided into several modules (Fig. 1): li-
brary, command-line interface (CLI), and GUI. This structure
creates the possibility for conducting simulations at diﬀerent
levels and helps avoid the inﬂuence of higher level code (such
as GUI, for example) on low-level code (responsible for the
simulation process). Thanks to this approach, if a GUI level er-
ror occurs during the simulation process, the simulations would
continue. Also, this helps avoid dependencies on external li-
braries (Qt, OpenGL) if there is no need for them.

The library allows the creation of custom programs for which
relatively low-level usage is required. It provides full control
over implemented numerical methods. But using the library is
not as convenient as a program with a user interface.

Command-line interface (CLI) is created for running simu-
lations in the terminal according to model ﬁles or entered com-
mands. This is important for conducting simulations conve-

3

Figure 2: Graphical user interface.

niently when GUI is not required. For example, this allows au-
tomating simulations via scripting or using an operating system
without a window system.

The primary purpose of GUI is to create, modify, and check

models conveniently.

The software can be compiled as a CLI-GUI program which

is the default option and most convenient to use.

3.3. Interface

CLI has more capabilities for running simulations than GUI:
all essential numerical methods implemented in the software
are available through CLI.

GUI is mostly used for preparing models for FDTD simu-
lations. If necessary, GUI can launch elecode in CLI mode for
running simulations. As stated above, this allows the indepen-
dent execution of GUI and CLI programs.

The main GUI window is shown in Fig. 2.

It includes a
3D model view, an editor for modifying model ﬁles (saved in
plain text format), an error panel (for warnings and errors in the
model ﬁle), and console output (for output from CLI).

If compiled as a CLI-GUI application, elecode can be used
in CLI and GUI modes. This is convenient because both op-
tions are used in practice: GUI for creating models and CLI for
running simulations.

4. Examples of use

Several examples are presented in this section to demon-

strate the main possibilities of the software.

4.1. Electrical grounding characteristics

As mentioned above, the software can be used for calcula-
tions of electrical grounding characteristics. The previous ver-
sion of the code has been successfully used for calculations of
the ground potential rise [6]. This section presents an example

Table 1: The ǫ∞, ∆ǫ, and τ parameters of the four-term Debye function expan-
sion.

ρ0, Ω·m
σ0, mS/m
ǫ∞
∆ǫ1
τ1, s
∆ǫ2
τ2, s
∆ǫ3
τ3, s
∆ǫ4
τ4, s

372.58

2.684

16.381

92.103
7.404·10−6
20.825
1.062·10−6
374.768
2.162·10−5
10.387
1.008·10−8

1: volume (10, 5, 7, 0.125)
2: calctime (15e-6)
3: output (1e-8)
4: abc (cpml, 1.25, 1, 1, 3e-06, 3, 1)
5: block (0, 0, 0, 10, 5, 4, 16.381, 0.002684, deb)
6: debye (deb, 92.103, 7.404e-06, 20.825, 1.062e-06,

374.768, 2.162e-05, 10.387, 1.008e-07)

7: wire (thin, 2.5, 2.5, 3.75, 6.5, 2.5, 3.75, 0.0045)
8: wire (thin, 6.5, 2.5, 3.75, 6.5, 2.5, 4.25, 0.003)
9: wire (thin, 6.5, 2.5, 4.25, 6.75, 2.5, 4.25, 0.003, t)
10: wire (thin, 6.875, 2.5, 4.25, 10, 2.5, 4.25, 0.003)
11: wire (thin, 6.5, 2.5, 4.25, 6.5, 2.75, 4.25, 0.003, t)
12: wire (thin, 6.5, 2.875, 4.25, 6.5, 5, 4.25, 0.003)
13: source (current, 6.75, 2.5, 4.25, 6.875, 2.5, 4.25, 0, fn)
14: calculate (current, 6.75, 2.5, 4.25, 6.875, 2.5, 4.25)
15: calculate (voltage, 6.5, 2.75, 4.25, 6.5, 2.875, 4.25)
16: function (fn, custom, 1e-8, [measured current])

Figure 4: Model for calculating ground potential rise.

current
voltage (measurement)
voltage (simulation)

 80

 60

 40

 20

)

V

(

e
g
a
t
l
o
V

 1.6

 1.2

 0.8

 0.4

)

A

(

t
n
e
r
r
u
C

 0

 0

 1

 2
 3
Time (µs)

 4

 0

 5

Figure 5: Measured and calculated ground potential rise.

Figure 3: Model ﬁle for ground potential rise simulation (measured current
values are not shown due to limited space).

strates accurate modeling of frequency-dependent soil proper-
ties and thin wire models.

in which measured ground potential rise for buried horizontal
wire is compared to that calculated with the software.

Measurements were carried for 4 m long buried wire. After
the measurements of the ground potential rise, the buried wire
was removed and soil properties (resistivity and permittivity)
were measured. Then, after the measurements of the soil prop-
erties, the complex permittivity was calculated with the soft-
ware. Finally, Debye model parameters were calculated with
the software. This allowed using measured soil properties in
the FDTD simulation. Debye parameters for the measured soil
properties are shown in Table 1).

Then, a simulation model corresponding to the measure-
ment case was created. The contents of the model ﬁle for the
simulation are shown in Fig. 3.

Thin wires were simulated with the model [16]. Measured

current values were set in the ”function” command.

Fig. 5 shows calculated and measured ground potential rise
for the model with buried horizontal wire. The example demon-

4.2. Lightning overvoltages

Additionally, the software allows simulating overvoltages
caused by lightning strikes. Previously, the code was used for
calculations of the back ﬂashover probability [5]. In that case,
the staircase wire model was used for modeling the transmis-
sion tower. In the present software version, the oblique wire
model [21] was implemented. Therefore, the current software
version allows comparing these two wire models.

Below, a simulation example for the direct lightning strike
is presented. The tower has the same dimensions as previously
[5]. The tower is modeled with two diﬀerent wire models: using
staircase wires (as in [5]) and using oblique wires (according to
model [21]).

Fig. 6 shows the 3D view of the simulation model.
Fig. 7 shows the calculated voltage (across top phase insu-
lation). It can be seen that diﬀerent wire models lead to sim-
ilar results in this case. Although, the staircase wire model is
less accurate for inclined wires [20] (it can be noted, however,

4

 
 
Table 2: The ǫ∞, ∆ǫ, and τ parameters of the four-term Debye function expan-
sion.

ρ0, Ω·m
σ0, mS/m
ǫ∞
∆ǫ1
τ1, s ·10−5
∆ǫ2
τ2, s ·10−6
∆ǫ3
τ3, s ·10−7
∆ǫ4
τ4, s ·10−8

200

5

400

2.5

800

1.25

15.767

13.488

11.884

839.441

593.525

419.744

3.096

3.096

3.097

143.901

101.748

71.960

4.068

4.066

4.069

66.971

47.348

33.494

7.217

7.212

7.218

31.515

22.273

15.757

9.141

9.132

9.140

1: volume (5, 5, 4, 0.05)
2: calctime (400e-6)
3: output (1e-008)
4: abc (cpml, 0.5, 1, 1, 1e-3, 3, 1)
5: block (0, 0, 2, 5, 5, 3, 15.767, 0.005, deb)
6: debye (deb, 839.441, 3.096e-05, 143.901, 4.068e-06,

66.971, 7.217e-07, 31.515, 9.141e-08)

7: block (0, 0, 1, 5, 5, 2, 13.488, 0.0025, deb1)
8: debye (deb1, 593.525, 3.096e-05, 101.748, 4.066e-06,

47.348, 7.212e-07, 22.273, 9.132e-08)

9: block (0, 0, 0, 5, 5, 1, 11.884, 0.00125, deb2)
10: debye (deb2, 419.744, 3.097e-05, 71.960, 4.069e-06,

33.494, 7.218e-07, 15.757, 9.140e-08)
11: wire (thin, 1, 1, 2.95, 1, 1, 3.15, 0.008)
12: wire (thin, 2, 1, 2.95, 2, 1, 3.15, 0.008)
13: wire (thin, 1, 1, 3.15, 1.45, 1, 3.15, 0.003, t)
14: wire (thin, 1.5, 1, 3.15, 2, 1, 3.15, 0.003)
15: wire (thin, 4, 3, 2.95, 4, 3, 3.15, 0.008)
16: wire (thin, 4, 4, 2.95, 4, 4, 3.15, 0.008)
17: wire (thin, 4, 3, 3.15, 4, 3.45, 3.15, 0.003, t)
18: wire (thin, 4, 3.5, 3.15, 4, 4, 3.15, 0.003)
19: source (current, 1.45, 1, 3.15, 1.5, 1, 3.15, 0, fn)
20: calculate (current, 1.45, 1, 3.15, 1.5, 1, 3.15)
21: calculate (voltage, 4, 3.45, 3.15, 4, 3.5, 3.15)
22: function (fn, heidler, s, 3.7e-7, 1.4e-5, 1, 10, 1, 1.85e-7)

Figure 8: Model ﬁle for array simulation.

)

V
M

(

e
g
a
t
l
o
V

 2

 1.5

 1

 0.5

 0

-0.5

Figure 6: Tower model.

current
voltage (staircase)
voltage (oblique)

 0

 0.5

 1

 1.5
Time (µs)

 2

 2.5

 3

 20

 15

 10

 5

 0

-5

)

A
k
(

t
n
e
r
r
u
C

Figure 7: Top phase voltage corresponding to simulations with diﬀerent wire
models.

that an approach allowing to compensate this error was imple-
mented in the software). Also, the staircase wire model does
not allow simulating wires with arbitrary diameters.

4.3. Calculating apparent soil properties

The software is useful for conducting simulations related to
the apparent soil properties and measurements of those prop-
erties. Using the code, it was predicted that for certain array
conﬁgurations, electromagnetic eﬀects can inﬂuence measure-
ment results [7]. Also, the level of errors was estimated. Later,
those eﬀects were conﬁrmed experimentally [8].

An example that calculates apparent soil properties for a

three-layer soil model is presented below.

First, Debye parameters corresponding were calculated with

the software for soil properties of the three soil layers according
to the Messier model. The parameters are presented in Table 2.
Then, the simulation model was created. Listing for the
model ﬁle is presented in Fig. 8. 3D view of the array model is
shown in Fig. 9.

After FDTD simulations, apparent soil properties were cal-
culated from the known current and voltage. The software can
calculate the properties automatically if the dimensions of the
array are set (in the corresponding CLI command).

Additionally, apparent resistivity was calculated with the

5

 
 
The work presented several simulation cases that can be
conducted using CLI. However, the same simulations can be
performed using the C++ library. This allows simulations to
be performed at a lower level: for example, when modifying
numerical methods is required.

The convenient structure of the software makes further de-
velopment of the software modules relatively independent. Thus,
many new features can be added in the future.

References

[1] L. D. Grcev, F. Dawalibi, An electromagnetic model for transients in
grounding systems, IEEE Transactions on Power Delivery 5 (4) (1990)
1773–1781.

[2] K. Tanabe, Novel method for analyzing the transient behavior of ground-
ing systems based on the ﬁnite-diﬀerence time-domain method, in: IEEE
Power Engineering Society Winter Meeting, 2001, Vol. 3, 2001, pp.
1128–1132. doi:10.1109/PESW.2001.917230 .

[3] P. Yutthagowith, A. Ametani, N. Nagaoka, Y. Baba, Application of the
partial element equivalent circuit method to tower surge response calcu-
lations, IEEJ Transactions On Electrical And Electronic Engineering 6 (4)
(2011) 324–330.

[4] R. G. Olsen, M. C. Willis, A comparison of exact and quasi-
static methods for evaluating grounding systems at high frequen-
cies, IEEE Transactions on Power Delivery 11 (2) (1996) 1071–1081.
doi:10.1109/61.489370.

[5] D. Kuklin, Choosing conﬁgurations of transmission line tower grounding
by back ﬂashover probability value, Frontiers in Energy 10 (2) (2016)
213–226. doi:10.1007/s11708-016-0398-6.

[6] D. Kuklin, Extension of Thin Wire Techniques in the FDTD Method for
Debye Media, Progress In Electromagnetics Research M 51 (2016) 9–17.
doi:10.2528/PIERM16081804.

[7] D. Kuklin, Numerical Analysis of Electromagnetic Coupling Eﬀects
in Measurements of Frequency Dependent Soil Electrical Proper-
ties, Progress In Electromagnetics Research M 79 (2019) 101–111.
doi:10.2528/PIERM18112102.

[8] D. Kuklin, Device for the ﬁeld measurements of frequency-dependent soil
properties in the frequency range of lightning currents, Review of Scien-
tiﬁc Instruments 91 (11) (2020) 114701, publisher: American Institute of
Physics. doi:10.1063/5.0012126.

[9] C. Warren, A. Giannopoulos, I. Giannakis, gprMax: Open source soft-
ware to simulate electromagnetic wave propagation for Ground Pene-
trating Radar, Computer Physics Communications 209 (2016) 163–170.
doi:10.1016/j.cpc.2016.08.020.

[10] Meep. Meep is a free and open-source software package for electromag-

netics simulation.
URL https://github.com/NanoComp/meep

[11] K. S. Yee, Numerical solution of initial boundary value problems involv-
ing Maxwell’s equations in isotropic media, IEEE Transactions on An-
tennas and Propagation 14 (3) (1966) 302–307.

[12] A. Taﬂove, M. E. Brodwin, Numerical solution of steady-state electro-
magnetic scattering problems using the time-dependent Maxwell’s equa-
tions, IEEE Transactions on Microwave Theory and Techniques 23 (8)
(1975) 623–630.

[13] A. Taﬂove, S. C. Hagness, Computational electrodynamics:

the ﬁnite-

diﬀerence time-domain method, 3rd Edition, Artech House, 2005.
[14] J. P. Berenger, A perfectly matched layer for the absorption of electromag-
netic waves, Journal of Computational Physics 114 (2) (1994) 185–200.
[15] J. A. Roden, S. D. Gedney, Convolution PML (CPML): An eﬃ-
cient FDTD implementation of the CFS–PML for arbitrary media,
Microwave and Optical Technology Letters 27 (5) (2000) 334–339.
doi:10.1002/1098-2760(20001205)27:5<334::AID-MOP14>3.0.CO;2-A.

[16] C. J. Railton, D. L. Paul, I. J. Craddock, G. S. Hilton, The treatment of
geometrically small structures in FDTD by the modiﬁcation of assigned
material parameters, IEEE Transactions on Antennas and Propagation
53 (12) (2005) 4129–4136.

[17] Y. Taniguchi, Y. Baba, N. Nagaoka, A. Ametani, An Improved
Thin Wire Representation for FDTD Computations,
IEEE Transac-
tions on Antennas and Propagation 56 (10) (2008) 3248–3252, con-

6

Figure 9: Array model.

FDTD (ρ)
FDTD (ε
r)
analytical (ρ)

 800

 600

 400

 300

)

m
Ω

⋅

(
ρ

 200

 100

 0

 10

 400

ε

r

 200

 0

 100

 1000

Frequency (kHz)

Figure 10: Apparent soil properties calculated with diﬀerent methods.

method [30] (implemented in the software).

Apparent soil properties calculated with two diﬀerent meth-
ods are shown in Fig. 10. It can be seen that both methods give
the same resistivity results.

5. Conclusion

The open-source software for electrical engineering appli-

cations was presented in the work.

The software allows conducting simulations with compli-
cated structures consisting of thin wires, and accurate model-
ing of frequency-dependent soil properties.
It provides vari-
ous additional numerical methods for lightning-related simula-
tions and tools for measuring soil properties. In other words, it
provides numerical methods not available in other open-source
FDTD software.

It has been demonstrated that the software can be success-
fully used for calculations of electrical grounding parameters,
overvoltages, apparent resistivity and permittivity values, etc.

 
ference Name:
doi:10.1109/TAP.2008.929447.

IEEE Transactions on Antennas and Propagation.

[18] Y. Taniguchi, Y. Baba, N. Nagaoka, A. Ametani, An improved arbitrary-
radius-wire representation for FDTD electromagnetic and surge calcula-
tions, Kyoto, Japan, 2009.

[19] T. P. Montoya, J. G. Maloney, G. S. Smith, Modeling staircased wires
using the FDTD method, IEEE Antennas and Propagation Society Inter-
national Symposium 1 (1999) 180–183.

[20] T. Noda, R. Yonezawa, S. Yokoyama, Y. Takahashi, Error in propagation
velocity due to staircase approximation of an inclined thin wire in FDTD
surge simulation, IEEE Transactions on Power Delivery 19 (4) (2004)
1913–1918.

[21] C. Guiﬀaut, A. Reineix, B. Pecqueux, New oblique thin wire formalism
in the FDTD method with multiwire junctions, IEEE Transactions on An-
tennas and Propagation 60 (3) (2012) 1458–1466.

[22] M. Akbari, K. Sheshyekani, M. R. Alemi, The Eﬀect of Frequency De-
pendence of Soil Electrical Parameters on the Lightning Performance of
Grounding Systems, IEEE Transactions on Electromagnetic Compatibil-
ity 55 (4) (2013) 739–746. doi:10.1109/TEMC.2012.2222416.
[23] D. Cavka, N. Mora, F. Rachidi, A Comparison of Frequency-Dependent
Soil Models: Application to the Analysis of Grounding Systems, IEEE
Transactions on Electromagnetic Compatibility 56 (1) (2014) 177–187.
doi:10.1109/TEMC.2013.2271913.

doi:10.1109/TPAS.1985.319172.

[37] A. Pigini, G. Rizzi, E. Garbagnati, A. Porrino, G. Baldo, G. Pe-
savento, Performance of large air gaps under lightning overvoltages:
experimental study and analysis of accuracy predetermination meth-
ods, IEEE Transactions on Power Delivery 4 (2) (1989) 1379–1392.
doi:10.1109/61.25625.

[38] W. A. Chisholm, New challenges in lightning impulse ﬂashover modeling
of air gaps and insulators, IEEE Electrical Insulation Magazine 26 (2)
(2010) 14–25. doi:10.1109/MEI.2010.5482551.

[39] F. Heidler, J. Cvetic, A class of analytical functions to study the light-
ning eﬀects associated with the current front, European Transactions on
Electrical Power 12 (2) (2002) 141–150.

[40] Guide to procedures for estimating the lightning performance of trans-

mission lines, Cigre, 1991.

[41] Qt. Cross-platform software development for embedded & desktop.

URL https://www.qt.io

[42] OpenGL - The Industry Standard for High Performance Graphics.

URL https://www.opengl.org/

[24] R. Alipio, S. Visacro, Frequency dependence of

soil parame-
eﬀect on the lightning response of grounding electrodes,
(1).

on Electromagnetic Compatibility

ters:
IEEE Transactions
doi:10.1109/TEMC.2012.2210227.

55

[25] Z. G. Datsios, P. N. Mikropoulos, E. T. Staikos, Methods for Field
Measurement of the Frequency-Dependent Soil Electrical Properties:
Evaluation of Electrode Arrangements Through FEM Computations,
in: B. N´emeth (Ed.), Proceedings of the 21st International Sympo-
sium on High Voltage Engineering, Lecture Notes in Electrical Engi-
neering, Springer International Publishing, Cham, 2020, pp. 1328–1339.
doi:10.1007/978-3-030-31676-1_124 .

[26] S. Visacro, R. Alipio, C. Pereira, M. Guimar˜aes, M. A. O. Schroeder,
Lightning Response of Grounding Grids: Simulated and Experimen-
tal Results, IEEE Transactions on Electromagnetic Compatibility 57 (1)
(2015) 121–127. doi:10.1109/TEMC.2014.2362091 .

[27] Z.-X. Li, S.-W. Rao, The Inversion of One-Dimensional Soil Pa-
rameters
in the Frequency Domain With Considering Multilay-
ered Earth Based on Simulated Annealing Algorithm, IEEE Trans-
actions on Electromagnetic Compatibility 62 (2)
(2020) 425–432.
doi:10.1109/TEMC.2019.2906486.

[28] M. Okoniewski, M. Mrozowski, M. A. Stuchly, Simple treatment of
multi-term dispersion in FDTD, IEEE Microwave and Guided Wave Let-
ters 7 (5) (1997) 121–123. doi:10.1109/75.569723.

[29] D. F. Kelley, T. J. Destan, R. J. Luebbers, Debye function expansions
of complex permittivity using a hybrid particle swarm-least squares op-
timization approach, IEEE Transactions on Antennas and Propagation
55 (7) (2007) 1999–2005. doi:10.1109/TAP.2007.900230.

[30] T. Takahashi, T. Kawase, Analysis of apparent resistivity in a multi-
layer earth structure, IEEE Transactions on Power Delivery 5 (2) (1990)
IEEE Transactions on Power Delivery.
604–612, conference Name:
doi:10.1109/61.53062.

[31] M. H. Loke, Tutorial: 2-D and 3-D electrical imaging surveys, 2020.
[32] A. Roy, A. Apparao, Depth of investigation in direct current methods,
GEOPHYSICS 36 (5) (1971) 943–959. doi:10.1190/1.1440226.

[33] R. Barker, Depth of

investigation of collinear symmetrical

electrode
doi:10.1190/1.1442728.

arrays, GEOPHYSICS

54

(8)

(1989)

four-
1031–1037.

[34] R. Alipio, S. Visacro, Modeling the Frequency Dependence of Electrical
Parameters of Soil, IEEE Transactions on Electromagnetic Compatibility
56 (5) (2014) 1163–1171. doi:10.1109/TEMC.2014.2313977.
[35] C. Portela, Measurement and modeling of soil electromagnetic behav-
ior, in: 1999 IEEE International Symposium on Electromagnetic Com-
patability. Symposium Record (Cat. No.99CH36261), Vol. 2, 1999, pp.
1004–1009 vol.2. doi:10.1109/ISEMC.1999.810203.

[36] T. Shindo, T. Suzuki, A New Calculation Method of Breakdown
Voltage-Time Characteristics of Long Air Gaps, IEEE Transactions on
Power Apparatus and Systems PAS-104 (6) (1985) 1556–1563, con-
IEEE Transactions on Power Apparatus and Systems.
ference Name:

7

