2
2
0
2

l
u
J

9

]
x
e
-
p
e
h
[

1
v
0
4
3
4
0
.
7
0
2
2
:
v
i
X
r
a

Generative Surrogates for Fast Simulation: TPC Case

Fedor Ratnikova,b,∗, Artem Maevskiya, Alexander Zinchenkoc, Victor Riabovd,
Alexey Sukhorosova, Dmitrii Evdokimova

aHSE University, 20 Myasnitskaya Ulitsa, Moscow, Russia
bYandex School of Data Analysis, 11-2 Timura Frunze Street, Moscow, Russia
cJoint Institute for Nuclear Research, 6 Joliot-Curie St, Dubna, Moscow Oblast, Russia
dPetersburg Nuclear Physics Institute, 1, mkr. Orlova roshcha, Gatchina, Leningradskaya
Oblast, Russia

Abstract

Simulation of High Energy Physics experiments is widely used, necessary for

both detector and physics studies. Detailed Monte-Carlo simulation algorithms

are often limited due to the computational complexity of such methods, and

therefore faster approaches are desired. Generative Adversarial Networks (GANs)

are well suited for aggregating a number of detailed simulation steps into a sur-

rogate probability density estimator readily available for fast sampling. In this

work, we demonstrate the power of the GAN-based fast simulation model on the

use case of simulating the response for the Time Projection Chamber (TPC) in

the MPD experiment at the NICA accelerator complex. We show that our model

can generate high-ﬁdelity TPC responses, while accelerating the TPC simula-

tion by at least an order of magnitude. We describe alternative representation

approaches for this problem and also outline the roadmap for the deployment

of our method into the software stack of the experiment.

Keywords:

fast simulation, time projection chamber, generative adversarial

network

∗Corresponding author
Email addresses: fedor.ratnikov@gmail.com (Fedor Ratnikov),

artem.maevskiy@cern.ch (Artem Maevskiy), alexander.zinchenko@jinr.ru (Alexander
Zinchenko), riabovvg@gmail.com (Victor Riabov), assukhorosov@edu.hse.ru (Alexey
Sukhorosov), dmevdok@gmail.com (Dmitrii Evdokimov)

Preprint submitted to Nuclear Instruments and Methods in Physics Research AJuly 12, 2022

 
 
 
 
 
 
1. Introduction

Eﬃcient detector simulation algorithms are crucial for successful planning,

optimization and operation of High Energy Physics experiments [1]. The num-

ber of samples that can be produced with the existing detailed Monte-Carlo

simulation approaches is often limited by the computational complexity of such

methods. Faster simulation can be achieved by aggregating a number of de-

tailed simulation steps into a single surrogate generative model that learns the

underlying probability density and allows for prompt sampling. Generative Ad-

versarial Networks (GANs) [2] is a deep learning method that is well-suited for

this goal [3]. In our previous work [4], we introduced a GAN-based fast simu-

lation model for the Time Projection Chamber (TPC) in the MPD experiment

at the NICA accelerator complex. Here we brieﬂy review our fast simulation

approach along with its validation and then describe an alternative representa-

tion approach for this problem. We also outline the deployment of our method

into the software stack of the experiment.

2. Fast simulation approach

Our fast simulation approach for the TPC detector consists of building a

GAN that generates the raw detector responses conditioned on the ground truth

event content [4]. For each heavy- ion collision, MPD TPC response contains

approximately 3 · 107 numbers. To simplify the problem of generating such a

large amount of numbers, we factorize the response into an additive decompo-

sition of contributions from small track segments. Within our approach, each

track segment contributes to a geometrically localized window, making the tar-

get response just an 8-by-16 matrix.

The built model is validated both at the low level with the raw detector

responses and at the high level using reconstructed track characteristics. The

low-level validation is done by calculating physically motivated projections from

the 8-by-16 response matrix: two barycenters (which are the proxies for the re-

constructed cluster coordinates), and the two widths and corresponding covari-

2

r
e
t
n
e
c
y
r
a
b

d
a
P

Pad coordinate fraction

Figure 1: (left) Low-level validation proﬁles. Thick lines correspond to (top to bottom):

µ + σ, µ, µ − σ. Line thickness denotes the statistical uncertainty. (right) Relative momentum

resolution as a function of the full momentum.

ance (which describe the shape of the signal and therefore deﬁne the two-track

resolution of the detector). The proﬁles for the distributions of these quantities

as a function of the conditional variables are then built and compared between

the model prediction and the detailed simulation, as shown in Fig. 1 (left).

According to these metrics, our model reproduces the detailed simulation with

high accuracy.

The high-level validation is done by integrating our model into the MPD

codebase and running the full reconstruction on the GAN-generated responses.

The reconstructed track characteristics are then compared with the detailed sim-

ulation predictions. An example of such characteristic is shown in Fig. 1 (right).

Most of the characteristics are reproduced with high ﬁdelity. Some minor dis-

crepancies may be seen, which are well understood and expected to be corrected

for in the next iterations of the model development (see [4] for more details).

The TPC simulation with our model runs ∼ 12 times faster compared to the

detailed simulation on the target hardware.

3. Alternative low-dimensional representation

Since the most important signal properties are the above-mentioned barycen-

ters and widths, one may train a GAN to generate these low-level characteristics

directly and then analytically and deterministically construct the desired pad

3

4020020400.81.01.21.41.61.82.02.22.4realgenerated00.20.40.60.811.21.41.61.8 [GeV/c]p00.0050.010.0150.020.0250.030.0350.040.0450.05ppssimulationGAN > 20hitsnsDCA < 3)
r
e
t
t
e
b

r
e
w
o
l
(

2

(cid:102)χ

Figure 2: Quality comparison between our main model (the baseline) and the alternative

model working in the low-dimensional representation.

response matrices from them. In this way, we drastically reduce the dimension-

ality of the problem and therefore may expect more stable and eﬃcient training,

with quality at least as good as in our main approach.

We have examined such low-dimensional approach with a choice of the dis-

cretized 2D Gaussian function for constructing the response matrices. Unfor-

tunately, the discretization distorts the low-level characteristics, so, in order to

account for these distortions, we train the model in two stages. At the ﬁrst

stage, which we call pretraining, the model is trained to reproduce the low-level

characteristics directly. Then, at the second stage, which we call training, we

introduce the distorting function in between the generator and discriminator

such that the generator learns to account for the distortions automatically. The

quality of our best such model, compared with our main approach (the baseline),

is shown in Fig. 2. Contrary to our expectations, we ﬁnd that this alternative

model is less stable in training and requires ﬁner hyper-parameter tuning to

achieve a reasonable quality level.

4. Model deployment pipeline

The simulation conﬁgurations are expected to vary as MPD development

progresses and running conditions are adapted for. Each new conﬁguration

requires our fast simulation model to be re-trained. It is therefore desired to

automate the training process as much as possible, including the following steps:

4

baselinepretrainingwithout distortionspretrainingwith distortionstraining400500600700800900Figure 3: The model deployment pipeline.

training data generation, model training, model evaluation and selection. Since

a multitude of models arise for diﬀerent conﬁgurations, a model library and

database for storage and prompt model retrieval are required. A preliminary

scheme for such a pipeline is shown in Fig. 3.

A prototype of this scheme has been implemented with the following frame-

work choices. We store the models in the ONNX1 format and use ONNXruntime

for inference. Airﬂow2 is used to manage the workﬂow with the calculation

pipelines described as Directed Acyclic Graphs (DAGs). We use the “Model

Registry” component from MLﬂow3 as the model library, which allows us to use

REST API to download a model for inference directly in the MPD code.

5. Summary

In this work, we have demonstrated our GAN-based fast simulation model

for the Time Projection Chamber (TPC) in the MPD experiment at the NICA

1https://onnxruntime.ai/
2https://airflow.apache.org/
3https://mlflow.org/

5

MPDRoot environmentPython/TensorFlowenvironmentTraining setcatalog serverSaved modelsModel catalogserverEvaluation requestTrainerDataset requestDatasetEvaluationserverTraining setgeneratorSimulationclientsTraining  entry pointSimulation job entry pointEvaluated model request / evaluation resultSimulation model  requestSimulation modelTraining setsDatasetDataset generation requestModel for evaluationModel save requestaccelerator complex. Our model can generate high-ﬁdelity TPC responses with

an order of magnitude acceleration. We have also described an alternative

low-dimensional representation approach for this problem which, contrarily to

our expectations, requires more thorough hyper-parameter tuning to achieve a

reasonable quality level. Finally, we have shown the strategy for the deployment

of our method into the software stack of the experiment.

References

[1] J. Albrecht, et al., A Roadmap for HEP Software and Computing R&D

for the 2020s, Comput. Softw. Big Sci. 3 (1) (2019) 7. arXiv:1712.06982,

doi:10.1007/s41781-018-0018-8.

[2] I. J. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley,

S. Ozair, A. Courville, Y. Bengio, Generative Adversarial Networks,

Advances in Neural Information Processing Systems 27. arXiv:1406.2661.

URL

https://proceedings.neurips.cc/paper/2014/hash/

5ca3e9b122f61f8f06494c97b1afccf3-Abstract.html

[3] L. de Oliveira, M. Paganini, B. Nachman, Learning Particle Physics by

Example: Location-Aware Generative Adversarial Networks for Physics

Synthesis, Comput. Softw. Big Sci. 1 (1) (2017) 4. arXiv:1701.05927,

doi:10.1007/s41781-017-0004-6.

[4] A. Maevskiy, F. Ratnikov, A. Zinchenko, V. Riabov, Simulating the time

projection chamber responses at the MPD detector using generative adver-

sarial networks, Eur. Phys. J. C 81 (7) (2021) 599. arXiv:2012.04595,

doi:10.1140/epjc/s10052-021-09366-4.

6

