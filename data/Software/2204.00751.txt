A Review of Data-driven Robotic Process Automation 
Exploiting Process Mining 

Najah Mary El-Gharib and Daniel Amyot 

School of Electrical Engineering and Computer Science, 
University of Ottawa,  
800 King Edward St., 
Ottawa, Ontario, K1G 0T4, Canada 
Email: nelgh031@uottawa.ca 
Email: damyot@uottawa.ca 

Abstract 
Purpose 
Process mining aims to construct, from event logs, process maps that can help dis-
cover, automate, improve, and monitor organizational processes. Robotic process 
automation (RPA) uses software robots to perform some tasks usually executed by 
humans. It is usually difficult to determine what processes and steps to automate, 
especially with RPA. Process mining is seen as one way to address such difficulty. 
This paper aims to assess the applicability of process mining algorithms in accel-
erating and improving the implementation of RPA, along with the challenges en-
countered throughout project lifecycles. 
Methodology  
A  systematic  literature  review  was  conducted  to  examine  the  approaches  where 
process mining techniques were used to understand the as-is processes that can be 
automated with software robots. Eight databases were used to identify papers on 
this topic. 
Findings  
A total of 19 papers, all published since 2018, were selected from 158 unique can-
didate papers and then analyzed. There is an increase in the number of publications 
in this domain. 
Originality 
The  literature  currently  lacks  a  systematic  review  that  covers  the intersection  of 
process mining and robotic process automation. The literature mainly focuses on 
the methods to record the events that occur at the level of user interactions with the 
application, and on the preprocessing methods that are needed to discover routines 
with  the  steps  that  can  be  automated.  Several  challenges  are  faced  with  prepro-
cessing such event logs, and many lifecycle steps of automation project are weakly 
supported by existing approaches.  
Keywords: Process mining, Process discovery, Robotic process automation, RPA, 
Intelligence automation.  
Paper Type: Systematic Literature Review 

2 

1 

Introduction 

In the context of digital transformation, many organizations are automating their man-
ual processes to improve performance, save costs, and minimize errors while executing 
these processes. However, there is currently a large amount of guess work in assessing 
the processes that can be automated and in monitoring their actual improvement. In the 
past five years, there has been a steep increase in the use of robotic process automation 
(RPA) in organizations, together with related tool support (van der Aalst et al., 2018). 
RPA, which uses software robots to automate human tasks, has often been applied in 
the areas of administration and finance. RPA is frequently implemented in cases where 
high volumes of data are processed through repetitive tasks that can be automated. The 
market of RPA solutions includes over 55 vendors who develop RPA tools that provide 
different  functionalities  to  automate  office  tasks  in  an  intelligent  way  (Dilmegani, 
2021). Understanding processes is key to automating them, but organizations often lack 
a deep understanding of their as-is processes and the way they are being executed in 
reality. 

Process mining (PM) is an emerging technology aiming to generate process maps 
(also known as process  models) from event logs and discover valuable insights.  PM 
takes  event  logs  collected  from  information  systems  as  input  and  produces  process 
maps using discovery algorithms.  

The implementation of a successful and reliable automated process requires under-
standing the detailed activities that compose that process. In order to configure RPA 
technologies, define the process paths and steps, and specify what conditions trigger 
certain actions to occur, the process needs to be modeled with a sufficient level of detail. 
Often,  discovering  as-is  processes  is  done  manually  through  a mix of  interviews, 
workshops,  documentation  analysis,  and  desktop  monitoring.  This  approach  enables 
engineers  to  define  the  activities  that  a  software  robot  has  to  perform,  but  it  is  time 
consuming and multiple errors can occur in understanding and automating the process 
steps. An approach is needed that enables capturing the detailed and precise information 
about a given process, including its possible variations. Given its nature, process mining 
can likely help in that context; van der Aalst et al. (2018) were among the first research-
ers to observe a link between process mining and robotic process automation.  

The objective of this systematic literature review is to determine how process mining 
can complement robotic process automation to accelerate and improve RPA implemen-
tation. More specifically, this review aims to answer the following research questions: 
•  RQ1:  How  are  process  mining  techniques  applied  to  accelerate  and  improve 

robotic process automation implementation? 

•  RQ2: Which tools are used to apply both process mining and robotic process 

automation in a coherent way? 

•  RQ3:  What  are  the  challenges  encountered  when  combining  process  mining 

with robotic process automation? 

Out of the 158 papers that were returned by eight search engines, 19 relevant papers 
were  selected,  reviewed,  and  analyzed  to  answer  the  research  questions  described 
above. To our knowledge, this is the first systematic literature review that covers the 

 
 
3 

intersection of process mining and robotic process automation. Such review will benefit 
researchers and practitioners interested in obtaining  an overview of existing research 
and applications on how to improve robotic process automation projects by combining 
them with process mining discovery approaches.  Additionally,  this review discusses 
how to improve and tailor existing process mining techniques to be applied in the RPA 
domain. 

The organization of this paper is as follows. Section 2 presents an overview of pro-
cess mining and robotic process automation, together with an example. Section 3 intro-
duces the literature review methodology and the selected papers. Section 4 presents the 
results of the analysis of the 19 selected papers, and Section 5 answers the three research 
questions. Threats to validity are discussed in Section 6, while Section 7 concludes. 

2 

Overview of Process Mining and Robotic Process Automation 

This  section  provides  an overview  of  the  two  technologies  of  interest  here,  together 
with an illustrative example. 

2.1  Overview of Process Mining  

Process mining is an emerging analytical discipline providing novel techniques to dis-
cover,  monitor,  and  improve processes  by  extracting  valuable  knowledge  and  infor-
mation from event logs available in information systems.  Process mining offers evi-
dence-based insights that are derived from actual data, in order to help organizations 
audit, analyze, and improve their existing business processes by answering both com-
pliance-related and performance-related questions. Figure 1 shows the four main steps 
commonly followed to apply process mining, starting with extracting event logs from 
information systems (1), preprocessing and cleaning the dataset (2), and importing the 
event  logs  to  process  mining  tools  (3),  which  are  finally  used  to  generate  process 
maps/models (4). 

Figure 1: Overview of Process Mining 

 
 
 
4 

In general, process mining activities are categorized into three main types: discovery, 
conformance, and enhancement (van der Aalst, 2011). Process discovery takes an event 
log as input and produces a process model without a priori information. It is the most 
popular process mining activity. Conformance checking compares an existing process 
model with an event log  generated by an executing process. This  activity is used to 
check whether the reality, as recorded in the log, conforms to the desired or required 
model (Vecino Sato et al., 2022). Enhancement improves an existing process model by 
using information about the actual process recorded in the event logs  previously dis-
covered using PM techniques (van der Aalst, 2011).  

There are several process mining algorithms that have been proposed by researchers 
in this domain (dos Santos Garcia et al., 2019). Some of the most popular discovery 
algorithms include the α-algorithm and Heuristic Mining (van der Aalst, 2011). The α-
algorithm  takes  an  event  log  as  an  input  and  generates  a  Petri  net  model,  including 
concurrency relationships, displaying the behavior included in the input event logs. The 
Heuristic Mining algorithm produces a model without concurrency but takes the fre-
quencies of events and sequences into account when generating the process model. 

There  are  several  tools  that  can  accept  event  logs  as  inputs  and  generate  process 
maps using process mining algorithms. The ProM1 framework is an open-source tool 
implemented in Java. It supports multiple techniques for process discovery, conform-
ance checking, organizational mining, social network analysis, and decision mining. 
Disco2 is another process mining tool supported by a leading academic group from the 
Eindhoven  Institute  of  Technology.  There  are  several  other  commercial  tools  in  the 
market including Celonis, myInvenio, UiPath Process Mining, Signavio Process Intel-
ligence, and QPR ProcessAnalyzer (Kerremans et al., 2021). 

2.2  Overview of Robotic Process Automation  

Robotic process automation is a fast-emerging process automation approach that uses 
software robots to replicate human tasks (van der Aalst et al., 2018). After recording a 
process (or workflow) and its steps, a virtual bot is created to mimic the actions per-
formed by humans in that process. RPA is mainly focused on the automation of repet-
itive, routine, rule-based human tasks, aiming to improve current running processes in 
an organization. 

RPA  is  defined  as  an  umbrella  of  tools  that  operate  at  the  user-interface  level  of 
applications the same way humans do (van der Aalst et al., 2018). RPA tools perform 
if-then-else statements on structured data, typically using a combination of user inter-
face  interactions,  or  by  connecting  to  APIs  to  drive  client  servers,  mainframes,  or 
HTML code. In general, an RPA project has four different stages: 

1)  Assess: before starting any RPA project, it is essential to understand the existing 
processes that can be automated, and the steps executed in such a process. This 
stage  includes  analyzing  the  context  to  determine  which  processes  or  parts 
thereof can be automated using RPA technology. This  stage also includes the 

1 ProM process mining tool: https://www.promtools.org/doku.php 
2 Disco process mining tool: https://fluxicon.com/disco/ 

 
 
5 

understanding  of  the  design  of  the  selected  processes,  which  involves  the 
specification of the events, data flows, and sequences that must be developed. 

2)  Program and test: during this stage, the discovered processes are turned into 
RPA  scripts  that  configure  the  software  robots  to  perform  those  processes. 
Testing is performed on each robot to analyze the behavior of the configured 
bot and detect potential errors that might occur. 

3)  Implement: after completion of the testing stage, the robots are deployed in the 
production  environment  to  start  executing  the  day-to-day  activities  of  the 
automated processes.  

4)  Monitor and sustain: Once the robots are deployed, it is essential to monitor 
their performance in case of errors caused by a change in a process step or by a 
condition  not  being  triggered  properly.  Continuous  monitoring  can  help  in 
performance improvement of the bots and in minimizing the number of errors. 
The RPA software market continues to grow, from 1.26 billion USD in 2020 to 1.61 
billion USD in 2021, to a predicted 7.64 billion USD by 2028 (Shotton et al., 2020). 
Most of the RPA deployments are industry-specific in the financial and administration 
sectors. Some of available tools in RPA on the market include solutions from Automa-
tion Anywhere, UiPath, BluePrism, WorkFusion, and Kryon.  

2.3 

Illustrative Example 

As discussed in Section 1, process mining can potentially accelerate and improve the 
implementation of robotic process automation. For example, suppose that an organiza-
tion wants to create RPA robots for their Procure-to-Pay (P2P) process. P2P is a core 
process for most companies because it drives value and profitability in the business. 
The organization believes that its P2P process consists of five different steps that are 
executed in the order presented by the model in Figure 2a, expressed in the Business 
Process Model and Notation (BPMN) syntax, commonly used in process maps/models.  
After extracting an event log from their information systems, the organization ana-
lysts use process mining to model their real as-is process. The event log dataset includes 
information about the transactions related to the P2P process. The main attributes in the 
event log are transaction number, timestamp, event, department, cost, and items orders. 
As shown in Figure 2b, the as-is process produced by the Disco PM tool is quite differ-
ent from the expected model. All the steps executed in the as-is process need to be taken 
into condition when developing the software robots, otherwise robots will fail to exe-
cute a step if a condition is not met. Process mining discovery algorithms and tools help 
analyze and understand the as-is process steps and eliminate the guess work. Using PM 
tools, the organization can detect long purchasing cycle times due to bottlenecks in the 
purchase requisition and order process, supplier delivery delays, and long cycle time to 
process invoices due to incomplete or missing data. 

Another benefit of process mining in this example is the identification of steps that 
should be automated to improve the efficiency of a process. The Disco tool reports that 
it takes 7 days to perform Process invoice from the time the invoice is received, perhaps 
because the staff are busy or because of issues faced along the way. This is a step that 
can be automated to reduce the time it takes to execute this particular process.  

 
6 

a) Expected P2P process 

b) As-is P2P process (generated by Disco) 

Figure 2: Procure-to-Pay (P2P) process. 

 
 
 
 
7 

The as-is process in Figure 2b also highlights loops in several parts of the process, 
e.g., for Final check of invoice, Approve invoice, and Pay invoice. The discovered pro-
cess raises important questions, such as: 1) Why are the Approve invoice and Pay invoice 
steps repeated several times? and 2) What are the issues that caused this to happen? 
These could be deviations from the expected path that should be prevented. In such 
cases, creating software robots to execute the process steps can help improve the quality 
of a process and eliminate unnecessary steps or repetitions while minimizing errors.  

After discovering the as-is process, starting an RPA project implementation involves 
programming a robot to execute the automatable tasks, e.g., from the Receive invoice 
step to the Process invoice step. The robot is programmed to take the inputs from the 
Receive invoice application and input them into the required fields so the invoice can 
be processed. In the Process invoice step of the P2P process, the related tasks can be 
automated using RPA: manage invoice collection and entry, manage electronic invoic-
ing, validate, and handle invoice data, and submit transactions for processing. The bot 
will be programmed to: 

1)  Scan a mailbox for orders 
2)  Log into the necessary systems  
3)  Read the invoice image  
4)  Register the invoice in the SAP system 
5)  Perform all the necessary validations, including cross-checking against other 

systems, and decide whether to post, park, or block the invoice.   

The process can be optimized through automation using the knowledge gained in the 
PM  discovery  phase.,  e.g.,  to  evaluate  the  supplier performance  and  share  results  to 
create an improvement plan with quantifiable goals. The robots can be programed to 
handle purchase order approvals  up to a certain threshold and  ask humans to handle 
approvals above that threshold. The robots can run the payment process to ensure pay-
ment happens at the right time, which will result in higher accuracy and faster invoice 
processing time. The software bots can handle high-volume repetitive tasks, reduce er-
rors, improve performance, and enhance productivity. 

After the RPA robots are deployed and start executing the different steps,  another 
process map can be generated to visualize the improvement in the process. The organ-
ization could hence check whether the average time has been reduced to a few minutes 
from Receive invoice to Process invoice. The robots are hence monitored using process 
mining techniques, which in turn enables the organization to  monitor purchase order 
cycle  times,  supplier  lead  times,  delivery  dates,  and  invoice  processing  times.  Such 
knowledge allows the organization to act in order to keep its processes on track. The 
organization can set up alerts to inform managers when 1) a supplier delivers late, 2) a 
purchase needs managers approval, 3) a payment is at risk of being delayed, and 4) there 
is missing information at any step in the process. 

From  this  example,  it  is  important  to  observe  that  process  mining  can  help  make 
appropriate decisions regarding what processes and parts thereof to automate via RPA, 
and monitor the effectiveness of the RPA-based automation. 

 
8 

3 

Literature Review Methodology 

This section presents the methodology used to select and review the literature related 
to how PM techniques are used to accelerate and improve the implementation of RPA 
projects. The main goal in conducting this review is to provide a summary of the current 
literature to answer the research questions. The studies focusing on the combination of 
process mining techniques in the early stage to build robotic process automations are 
discussed. The systematic literature review was undertaken based on the guidelines of 
Kitchenham and Charters (2007). The methodology for this SLR, research questions, 
research query, and inclusion/exclusion criteria are presented here. 

3.1  Research Questions 

The  introduction  has  presented  three  research  questions  this  paper  aims  to  answer, 
through the lens provided by the literature. The first question (RQ1) deals with identi-
fying the different studies that use PM techniques and algorithms to discover processes 
that can be automated using RPA. The second question (RQ2) aims to highlight both 
PM and RPA tools that have been used in the selected studies, and whether they are 
open source or commercial tools. The third question (RQ3) aims to list the challenges 
that  exist  when  combing  PM  and  RPA  together,  and  whether  these  challenges  are 
mainly about the PM part, the RPA part, or both parts. 

3.2 

Search Process and Query  

In this research, eight of the most relevant search engines in information technologies 
were used. Elsevier’s Scopus and Clarivate’s Web of Science are both wide-range, cu-
rated, general databases. Web of Science is useful to cover older papers, whereas Sco-
pus indexes more conference and journal papers. In addition, the engines of popular 
publishers in the PM and RPA areas were included, to consider more recent work not 
covered  by  the  two  previous  engines:  IEEE  Xplore,  ACM  Digital  Library,  Spring-
erLink, and Elsevier’s ScienceDirect. Since a small number of papers were returned by 
these databases, Google Scholar and arXiv were also added to capture more recent pa-
pers (at times from unreliable sources) that were not indexed by the other databases. 

Since this SLR focuses on the papers that address PM and RPA, the main two con-
cepts are “process mining” and “robotic process automation”, and their common syn-
onyms. The main query (last searched in December 2021) is the following: 

("process mining" OR "process discovery") 
AND 
("robotic process automat*" OR "intelligent process automat*" OR RPA) 

No specific time limit was used. A total of 158 unique papers (198 with duplicates) 
were returned. Table 1 details the number of papers returned by each of the different 
databases (excluding Google Scholar). The number of papers returned is low consider-
ing that this is a new topic in research and there has not been many publications at the 

 
 
 
intersection of PM and RPA. SpringerLink returned a higher number of papers (137) 
because it searches the keywords in the whole text of the papers and not just in title and 
abstract. Consequently, many papers were returned that were not relevant to answer the 
research questions. A one-level snowballing approach exploiting the papers’ references 
was  used  in  order  to gather more papers  possibly  relevant  to  the  topic  but  were  not 
captured by the database searches.  

9 

Table 1: Number of Papers Returned by the Search Engines 

Database 
Scopus 
IEEE Xplore 
Web of Science 
ACM DL 

SpringerLink 
ScienceDirect 
ArXiv 

Searched Within 
Title/abstract/keywords 
Title/abstract/keywords 
Title/abstract/keywords 
Title/abstract/keywords 
All Text 
Title/abstract/keywords 
All Fields 

Papers Returned 
23 
5 
10 
7 
137 
16 
2 

Since Google Scholar cannot handle the complexity of our search query, a collection 
of simpler queries was used to find other papers that are relevant to the research topic. 
The main query was divided into multiple queries (with only 2 search terms, with an 
implicit AND). Query 1) “process mining” “robotic process automation” returned 7 
papers when searching Title Only and 528 papers when searching Anywhere in the text. 
Query 2) “process discovery”“robotic process automation” returned 3 papers in Title 
Only and 204 papers when searching Anywhere in the text. Both queries “process min-
ing”  “intelligent  process  automation”  and    "process  discovery"  "intelligent  process 
automation" returned no paper when searching in Title Only, while 58 and 27 papers 
were returned respectively when searching  Anywhere in the text.  One paper was re-
turned  in  Title  Only  for  the  “process  mining”  “RPA”  query,  with  419 papers  when 
searching Anywhere in the text. The last query, "process discovery" "RPA", returned 2 
papers when searching the Title Only and 166 papers when searching Anywhere in the 
text.  

In the end, there were no additional papers added through the Google Scholar search. 
The relevant papers returned when searching the title only were already captured when 
searching the other databases (Table 1). Regarding the papers that were returned when 
searching Anywhere is the text, only the papers from 2018 to 2021 were screened but 
these papers were not relevant to answer the research questions. 

3.3 

Inclusion and Exclusion Criteria 

In order to exclude the papers that are irrelevant to our research questions, exclusion 
criteria were defined. These criteria were used to exclude papers that:  

•  Only refer to how to apply PM on RPA event logs (as RPA was already 

implemented). 

•  Do  not  focus  on  how  PM  or  process  discovery  algorithms  are  used  to 

better build RPA. 

 
 
 
10 

•  Were not written in English. 
•  Were published in predatory journals or conferences. 

Inclusion criteria included:  

•  Peer-reviewed conference proceedings, articles, and journal publications. 
•  Publications added through the one-level snowballing strategy. 

3.4 

Paper Selection 

The results of the database searches were imported into Covidence3. Duplicate results 
were identified by Covidence and eliminated. Then, the title and abstract for each of 
the papers were screened to eliminate the obvious irrelevant studies. 

After scanning the papers returned by the search with the inclusion and exclusion 
criteria, the full text of all the selected papers were retrieved. Snowballing on the refer-
ences of the selected papers (based on the references they contained and on papers ref-
erencing them on Google Scholar) resulted in the discovery of three more relevant pa-
pers. 

Figure 3: PRISMA flow diagram for this SLR. 

Figure 3 shows the PRISMA diagram4 for the number of papers that were included 
in this SLR at each stage of the search methodology. The next step was reading the 
papers  and  extracting  the  data.  The  extracted  data  includes  details  about  each  paper 

3 https://www.covidence.org/ 
4 http://prisma-statement.org/prismastatement/flowdiagram.aspx 

 
 
 
  
 
11 

including the title, date, year of publication, type, objective, algorithm developed, chal-
lenges, and tools used. 

3.5  Final Selection  

A total of 19 papers, listed in  
Table 2, were selected for this SLR. All returned papers were published in or after 2018, 
with the majority published in 2019 and 2020. 

Table 2: Papers selected for the SLR, sorted by year of publication. 

Paper 
(Geyer-Klingeberg et al., 
2018) 
(Leno, 2018) 

(Linn et al., 2018) 

(Agostinelli et al., 2019) 

(Bosco et al., 2019) 

(Jimenez-Ramirez et al., 
2019) 
(Kirchmer and Franz, 
2019) 

(Leno et al., 2019) 

(Wanner et al., 2019) 

(Agostinelli et al., 2020) 

(Cabello et al., 2020) 

(Halaška and Šperka, 
2020) 
(Leno et al., 2020) 
(Leno, 2020) 

(van der Aalst, 2020) 

(Agostinelli et al., 2021) 

(Choi et al., 2021) 

(Rinderle-Ma and 
Mangler, 2021) 
(Leno et al., 2020) 

Title  
Process Mining and Robotic Process Automation 
a Perfect Match 
Multi-Perspective Process Model Discovery for 
Robotic Process Automation  
Desktop Activity Mining – A new level of details 
in mining business processes 
Research Challenges for Intelligent Robotic Pro-
cess Automation 
Discovering Automatable Routines from User In-
teraction Logs 
A Method to Improve the Early Stages of the Ro-
botic Process Automation Lifecycle 
Value-Driven Robotic Process Automation 
(RPA): A Process-Led Approach to Fast Results 
at Minimal Risk 
Action Logger: Enabling Process Mining for Ro-
botic Process Automation 
Process Selection in RPA Projects – Towards a 
Quantifiable Method of Decision Making 
Automated Generation of Executable RPA 
Scripts from User Interface Logs 
Beyond the Hype: RPA Horizon for Robot-Hu-
man Interaction 
Importance of Process Flow and Logic Criteria 
for RPA Implementation 
Robotic Process Mining: Vision and Challenges 
Identifying Candidate Routines for Robotic Pro-
cess Automation from Unsegmented UI Logs 
On the Pareto Principle in Process Mining, Task 
Mining, and Robotic Process Automation 
Exploring the Challenges of Automated Segmen-
tation in RPA 
Candidate Digital Tasks Selection Methodology 
for Automation with Robotic Process Automation 
Process Automation and Process Mining in Man-
ufacturing 
Discovering Data Transfer Routines from User 
Interaction logs 

Year  
2018 

2018 

2018 

2019 

2019 

2019 

2019 

2019 

2019 

2020 

2020 

2020 

2020 
2020 

2020 

2021 

2021 

2021 

2021 

 
12 

4 

Results of Selected Studies 

After reviewing and analyzing the selected papers, and in order to answer the research 
questions  for  this  SLR,  three  themes  are  defined:  techniques  and  algorithms  (RQ1), 
tools (RQ2), and challenges (RQ3).  

Figure 4 illustrates, using the BPMN syntax, the steps from a typical project lifecycle 
that involves using process mining techniques and algorithms to implement RPA solu-
tions. The steps S1 to S11 will be used to assess the coverage of existing techniques. 

4.1 

Techniques and Algorithms 

Figure 4 represents the steps of a successful PM+RPA project. Some of selected papers 
cover one step or more. Several papers focus on the recording steps (S1 to S3). Other 
papers focus on preprocessing of event logs in an RPA context and other two papers 
focus on using PM techniques during an RPA project lifecycle. The steps in Figure 4 
will be illustrated further with examples from the selected papers.  

A. Collecting interactions with information systems 
The starting point of process mining is the existence of event logs that include infor-
mation about the processes that were executed. Step S1 in Figure 4 refers to the inter-
action and connection with information systems to collect event logs. However, cur-
rently most of these event logs are collected by information systems and do not include 
many details about actions done by users at the user interactions (UI) level.  

In order to implement a successful RPA project and minimize the number of errors 
after deploying software robots, it is essential to understand the details of a process at 
a UI level since these are the steps that will be automated and executed using software 
robots.  Several  papers,  discussed  in  the  next  section,  focus  on  proposing  new  tech-
niques to collect more logs at the user interaction level of an application then applying 
PM algorithms on the collected logs to generate process maps and discover the process 
steps (Linn et al., 2018; Jimenez-Ramirez et al., 2019; Leno et al., 2019). 

B. Recording activities and generating event logs 
Step S2 in Figure 4 is concerned with recording user interaction activities. During this 
step, the user interactions with applications are recorded at a very granular level, e.g., 
copy an Excel cell with its value, and paste actions. Usually, process mining techniques 
have been applied on event logs collected from information system that do not include 
this level of detail. However, in the context of RPA, it is essential to record user inter-
action activities. Current PM tools do not generally provide features for collecting such 
types of activities, whereas some RPA tools provide  task mining and  task capturing 
features. For example, the UiPath Task Mining5 tool automatically identifies the em-
ployee workflow, and then identifies repetitive tasks that can be automated. Thus, sev-
eral papers focus on recording user interaction activities that include collecting events 
and actions observable at the UI level. 

5 https://www.uipath.com/product/task-mining 

 
 
 
 
13 

Figure 4: Typical PM+RPA process steps. 

 
 
 
14 

Linn et al. (2018) introduced the concept of Desktop Activity Mining (DAM), which 
is designed to add a new level of detail in process mining by 1) capturing user actions 
that are not logged by information systems, b) obtaining a complete set of process var-
iations, and c) deriving a process model and documentation about the process details. 
DAM is a method to record user activities at the level of desktop actions and to recon-
struct the resulting process variations with process and data mining techniques to dis-
cover a process model. Jimenez-Ramirez et al. (2019) proposed a method to improve 
the  early  stages  of  RPA  project  lifecycles.  Their  approach  is  to  monitor back-office 
staff through a screen-mouse-key-logger, with the obtained event logs transformed to a 
UI log used as an input to PM algorithms. This method reduces the effort in analyzing 
the actual system to discover the processes that can be automated manually, rather than 
using process mining techniques. 

Leno  et  al. (2018) moved a step further in the process and  worked on generating 
process maps. The authors particularly look at multi-perspective process model discov-
ery for robotic process automation. In their research project, they aim to develop pro-
cess mining technology to extract a flowchart of how users interact with a given UI, 
which can then be used to train and test RPA bots automatically. This research is ex-
pected to accelerate the adoption of RPA solutions. Process mining could be a way to 
solve the problem of discovering such flowcharts, but the user interactions logs are not 
typically collected by information systems and are not fully documented. Thus, the pro-
cess mining approach does not have access to the activities performed in such systems 
and such event logs should be collected explicitly. 

Leno et al. (2019) introduced a new tool called Action Logger for recording UI logs, 
which are logs of the user interactions with information systems. The purpose of the 
tool is to collect UI logs at a granular level suitable to discover the sufficient details of 
a process steps in the context of RPA. Leno et al. (2019) focused on steps S1 to S3 to 
collect the sufficient event logs needed. This tool includes functional requirements not 
considered in other papers that aim to collect more UI logs. Action Logger  has five 
functional requirements for collecting logs, as summarized in Table 3. 

Table 3: ActionLogger functional requirements. 

Functional Requirement  Definition 
Relevance 

Granularity 

Data-awareness 

Context-independence 

Interoperability 

Record  meaningful  actions,  for  example  moving  the 
mouse action should not be recorded whereas copying 
a cell should be. 
Record actions at a level of detail needed to understand 
the tasks that were performed. 
Record the data that supports each of the actions that 
are recorded, for example, recording the timestamp of 
a particular action. 
Record  actions  with  information  about  the  platforms 
where the actions were performed, with their various 
circumstances and context. 
Record  actions  and  logs  in  a format  that  can be  sup-
ported by process mining tools. 

 
15 

The Action Logger tool architecture only records UI events happening in Excel and 
Chrome  using  an  Excel  plug-in  and  a  Chrome  plug-in.  The  two  plug-ins  are  imple-
mented  as  event  listeners  and  send  the  information  about  the  performed  actions  as 
JSON objects to a logging component that generates the UI log. Leno et al. (2019) did 
not discuss how many users are executing the tasks and how this is being recorded with 
Action Logger. Their tool did not include any steps on how to select the paths that are 
suitable for automation and the authors did not discuss challenges encountered at this 
level. Additionally, Leno et al. mentioned briefly that they developed a log simplifica-
tion tool to reduce the size of UI logs before importing them into PM tools (Apromore 
in their case), which was implemented as set of regular-expression search-and-replace 
rules6. 

Agostinelli et al. (2020) developed the SmartRPA7 tool, which generates executable 
RPA scripts that can be automated using software robots by exploiting UI event logs. 
SmartRPA skips the manual work required to discover flowcharts by discovering pro-
cess maps from UI logs recorded from the user interacting with the software applica-
tion. SmartRPA consists of five stages: 1) record UI logs for the different routine exe-
cutions,  2)  combine  UI  logs  into  a  single  event  log, 3)  filter  out  irrelevant  routines, 
4) detect the most frequent routine variant for a process from the event log, and 5) gen-
erate the executable RPA scripts to create the software robots. The SmartRPA tool was 
developed in Python. 

Additionally, SmartRPA records only those UI actions that can  be automated and 
can be associated with routines. It also enables recording a large set of UI actions, not 
just  limited  to  Excel  and  Chrome,  which  goes  beyond  what  was  developed  in  other 
approaches (Bosco et al., 2019; Leno et al., 2019). 

SmartRPA focuses on steps S1 to S3 of Figure 4 and automates the best processes 
in terms of the frequency and time duration recorded for routine variants, without re-
quiring an a-priori model. SmartRPA records events that happen during a UI interac-
tion,  so  it  can  work  across  different  computer  systems.  The  identification of  similar 
routine variants is not done using the screens of the user’s desktop, which may differ 
between different computer systems.  

During step S3 (generate UI event log datasets), the recorded events are extracted 
into datasets that can be used for process mining discovery. The dataset needs to include 
mandatory attributes (columns) for process mining, namely the timestamp, event name, 
and case ID of each event. Since the recorded events need to be used for generating 
RPA scripts, the event log dataset will include additional attributes. For instance, in a 
“copy cell” event, an additional attribute specifies the value in the copied cell.  

Several vendors, for example Celonis, UiPath, and myInvenio, recently adopted the 
term task mining to refer to process mining based on UI data. These UI data are col-
lected using task recorders. Often, screen captures are taken to infer actions taken by 
the user. The challenge is to match UI data based on identifiers, usernames, keywords, 
and labels, and connect different data sources. Such analysis can be time-consuming to 

6 Log Simplification tool available at https://github.com/apromore/RPA_SemFilter/releases 
7 SmartRPA tool available at https://github.com/bpm-diag/smartRPA/ 

 
 
 
16 

discover all the steps executed by the user involved in the process (van der Aalst et al., 
2018).  

C. Preprocessing event logs 
After collecting the raw event log dataset from the UI activities in the applications, the 
data needs to be prepared for process mining analysis. Given their large size and com-
plexity, the process maps generated from raw data usually do not provide meaningful 
insights about the steps that are followed to execute a task. During step S4 (Figure 4) 
for example, the noise events are filtered out, the incomplete process variants are de-
leted, and the event logs are simplified to provide more meaningful insights when pro-
cess maps are generated. There has been a research focus on how to preprocess event 
logs  to  generate  meaning  insights  when  importing  them  into  process  mining  tools 
(Marin-Castro and Tello-Leal, 2021). Table 4 summarizes the preprocessing techniques 
at the process and event levels, to be discussed next. 

Steps S5a, S5b, and S5c are concerned with identifying segments from event logs, 
identifying candidate routines for automation, and selecting candidate routines for au-
tomation, respectively. These three steps focus on preprocessing and restructuring the 
event logs to discover meaningful routines that can be automated from UI logs, since 
these  types  of  event  logs  come  with  several  challenges.  The  discovery  of  candidate 
routines from recorded event logs for automation using RPA solutions is problem sel-
dom explored. Only four papers identified in this SLR focus on using the UI event logs 
to discover routines that can be automated using RPA (Bosco et al., 2019; Leno, 2020; 
Leno et al., 2020; Agostinelli et al., 2021). 

Bosco  et  al.  (2019)  present  a  method  to  analyze  UI  logs  in  order  to  discover  se-
quences of actions that are well defined and hence can be automated using RPA tools. 
The proposed method takes as an input a UI log that consists of a set of UI event se-
quences,  i.e.,  routines.  Each routine  trace  consists  of  a  sequence of  interactions  (ac-
tions). Each action has a type (copy, paste, select, etc.) and a set of parameters. Given 
a UI log, the method outputs routine details and information. 

1)  Each candidate automatable routine is analyzed by checking whether each of 
its actions is deterministic (i.e., the action could be executed in a systematic 
way by RPA scripts) or not. The output is a tuple consisting of an action and 
a set of functions to automatically determine all the action’s parameter values.  
2)  The  maximal  sequences  of  deterministic  actions  are  extracted  from  the 
candidate automatable routines, and for each of them the activation condition 
of the first action is discovered. 

3)  The final output is a set of routine specifications. Each routine specification is 
a  tuple  consisting  of  an  activation  condition  to  automate  the  routine,  and  a 
sequence of action specifications.  

Leno et al. (2020) developed a robotic process mining (RPM) family of techniques 
that help determine which routines should be automated before starting an RPA deploy-
ment. RPM aims to discover the repetitive routines in a process that are suitable for 
automation from user interaction event logs. Additionally, the RPM tool includes sev-
eral preprocessing steps that help discover the RPA scripts suitable for automation gen-
erated from event logs. This work is more focused on the preprocessing of the event 
logs collected after the recordings are done. In terms of the project lifecycle, this paper 

 
 
17 

covers steps S4 to S6. The first step in an RPM pipeline is to record the interactions 
between one or more workers and one or more software applications. The recorded data 
is represented as a sequence of user interactions such as copy a cell, paste the copied 
data into a form, edit a text field in a form, etc. The unnecessary steps are filtered from 
the event logs. The second step is to decompose the event logs into segments. Those 
discovered  segments  are  used  to  identify  routines  that  are  then  analyzed  to  identify 
those that can be automated and then to encode them as RPA scripts. 

The RPM pipeline is followed by Leno (2020) to identify the candidate routines that 
can be automated from unsegmented event logs collected from user interaction activi-
ties. The approach used in this paper is composed of two macro steps: 1) decompose 
the normalized UI log into segments, and 2) identify candidate routines by mining se-
quential patterns from those segments. The paper proposes a method to split an unseg-
mented UI log into a set of segments, each representing a sequence of steps that are 
repeated in the unsegmented UI log. The first step is to segment the event log and gen-
erate control-flow graphs derived from the log. Then, pattern mining is used to discover 
frequent candidate routines for automation. The patterns are then ranked according to 
four quality criteria: frequency, length, coverage, and cohesion. This approach was ex-
tended by Leno et al. (2021) to present an approach to post-process the identified can-
didate routines in order to assess whether these routines can be automated or not. If the 
routine is fully automatable, then an executable routine specification can be generated. 
Additionally, the authors proposed a method to identify equivalent routines, which en-
ables producing a non-redundant set of automated routines. 

Table 4: Preprocessing techniques at the process and event levels. 

Process Level 

Event Level 

•  Delete incomplete process variants 
•  Identify segments from event logs 
•  Discover repetitive routines 
•  Decompose UI logs into segments 
•  Unsegment event logs from UI 
•  Generate executable routines 

•  Filter out noise events 
•  Mine event patterns  
•  Discover tasks that can be automated 
•  Restructure events 
•  Transform event names based on  

action types 

Agostinelli et al. (2021) explored several issues with the segmentation of UI event 
logs. The focus was on segmenting three different forms of UI logs: 1) same routine 
with different executions, 2) multiple executions for several routines without having 
common user actions, and 3) multiple executions for several routines with the possibil-
ity of common user actions. The authors studied how the segmentation techniques be-
have in each these three cases. Their focus is again on preprocessing and restructuring 
the event logs to discover the routines that can be automated. Even though this paper 
did not focus on using process mining algorithms to discover the different paths of the 
processes, they still studied how to simplify the UI logs to discover segmentations that 
can help implement RPA.  

 Choi  et al. (2021) provided an approach for selecting candidate  tasks for robotic 
process automation based on user interface logs and process mining techniques. Their 

 
 
 
18 

approach also considers collecting and generating user interface logs. However, their 
approach focuses on the transformation stage for the UI logs, which is then followed 
by  log  filtering,  and  finally  tasks  discovery  using  PM.  The  authors  implemented  an 
approach consisting of transformation rules that are defined based on the information 
available in the user event logs. These rules are used to transform the name of the orig-
inal action (for example “Open”) into an action name including sufficient information 
(for example “Open System Folder Orders”) for discovering tasks model describing the 
user’s sequence of actions that can be automated. The transformation rules differ based 
on the action type. For example, the  action “Open” will require a source type and a 
source name to know exactly what is opened, whereas the action “Click Button” needs 
information on the context to know what has been clicked.  

Several other research contributions have discussed pattern mining and other tech-
niques to simplify and restructure event logs. For example, El-Gharib (2019) proposed 
a tool-supported methodology for preprocessing event logs in order to simplify them 
by replacing patterns of events. This methodology can be applied in the context of RPA 
to discover the most frequent paths in a process. Several preprocessing algorithms have 
been explored in the domain of process mining research to simplify, preprocess, and 
discover  paths  from  complex  event  logs  but  they  have  not  been  framed  in  the  RPA 
context (Marin-Castro and Tello-Leal, 2021). 

D. Process discovery and analysis 
After the preprocessing and restructing of the user interaction logs, process maps are 
generated using process mining tools to enable analysis. Step S6 in Figure 4 represents 
process discovery using PM algorithms. Ten papers used open-source and commercial 
tools to discover the process maps that represent the user interaction event logs. Section 
4.2 summarizes the tools that are used in these papers. 

van der Aalst (2020) used the notion of variability in process mining to  select the 
processes for automation. The author focused on the pareto principle (Sanders, 1987) 
or the 80/20 rule, which means that 80% of the outcomes usually come from 20% of 
the causes. If the event log has a pareto-like distribution, then the regular or frequent 
paths can be identified for automation while the infrequent patterns can be filtered out. 
Based  on  the  pareto  principle,  the  process  variant  frequencies  can  be  classified  into 
three groups (van der Aalst, 2020): 

1)  Regular,  highly  frequent  subprocesses  that  should  be  automated  in  a 

traditional way in the information system.  

2)  Frequent, standardized subprocesses that can be automated by robots. 
3) 

Infrequent and exceptional process behaviors that are still handled by humans. 
According to van der Aalst (2020), RPA aims to automate the second group of sub-
processes that are rather frequent, repetitive, and simple, and where it is not cost-effec-
tive to change existing information systems.  

Choi  et  al.  (2021)  used  the  term  “Tasks  Discovery”  to  build  process  models  and 
discover the user actions that can be automated using RPA from transformed UI logs. 
The authors defined three criteria to select the candidate tasks that are suitable for au-
tomation:  

 
 
19 

1)  Frequency:  Creating  a  model  that  shows  the  frequency  of  each  task,  by 
applying case frequency techniques, and the frequency of transition from one 
task to another. Based on the result, the most frequent routines are selected for 
RPA. 

2)  Periodicity: The aim here is to identify and select frequent periodic cases, for 

example that are performed every Monday. 

3)  Duration: The goal in calculating the duration is to identify the cases and tasks 
that  are  taking  a  long  time  to  be  executed  by  employees  and  that  can  be 
automated by bots in a much faster time, at times in a fraction of a second. 

Step 7, which is the process analysis, aims to assess and analyze the generated process 
maps from step 6. 

E. RPA configuration and sustainability 
Successful process automation requires knowledge about the potential for automation, 
effective  training  of  the  software  bots,  and  continuous  monitoring  for  their  perfor-
mance, which is represented from steps S8 to S11 in Figure 4. 

Process mining is presented as a way to identify what can be automated using RPA. 
However,  process  mining  should  not  only  be  used  in  the  implementation  phase.  By 
continuously monitoring and observing human problem resolving capabilities, for ex-
ample system errors or unexpected system behavior, RPA tools can adapt and handle 
non-standard cases (van der Aalst et al., 2018). Moreover, process mining can also be 
used to continuously improve the work between systems, robots, and people. Steps S8 
to S11 respectively target configuring the RPA scripts, implementing the software ro-
bots, monitoring the software robots using PM techniques, and sustaining the RPA im-
plementation. 

F. PM and RPA from Start to End  
Four out of 19 papers (Geyer-Klingeberg et al., 2018; Halaska and Sperka, 2020) used 
process mining techniques throughout the lifecycle of an RPA project. Process mining 
techniques were used before starting the implementation of RPA in order to understand 
the steps of the process that can automated using robots. Then, after the implementation 
and deployment of the robots, process mining was used to monitor the robots and eval-
uate their behavior.  

Geyer-Klingeberg et al. (2018) presented an approach that uses the power of process 
mining to enable effective RPA within process transformation. They showed how the 
Celonis tool aims to support organizations throughout the whole lifecycle of RPA pro-
jects. Their approach consists of three steps:  

1)  Assess RPA potential using process mining: This step aims to discover the pro-
cesses that can be automated, by identifying the processes that are scalable, re-
petitive, and standardized. Once processes are standardized, the highest poten-
tial for automation in an organization should be detected. By using process min-
ing techniques to discover how processes are running, users can explore where 
current automation solutions might be improved and where additional automa-
tion  could  create  benefits  such  as  a  reduction  of  throughput  times  or  the  im-
provement of other process performance measures. 

 
 
 
20 

2)  Develop an RPA application: This step supports training the RPA robots with 
existing workflows and comparisons between humans and robots. After devel-
oping the RPA robots, the generated process instances can be evaluated using 
process mining techniques that can help in identifying the most effective RPA 
implementation. 

3)  Sustain the RPA implementation: After the implementation of the most effec-
tive RPA applications, continuous monitoring ensures tracking the impact of the 
RPA initiative. Process mining again plays a role at this stage, to enable the user 
to see how processes change with RPA over time, as well as to detect when a 
process evolves and how robots need to adapt to an alternating business envi-
ronment.  The  “automation  rate”  can  be  added  as  a  performance  indicator  to 
quantify the RPA initiative. 

Halaška and Šperka (2020) focused on process flow and logic criteria for implement-
ing an RPA solution. In particular the recommendations made for RPA implementation 
are based on common patterns that are discovered using the process flow and the login 
criteria for a certain process. Their approach also focuses on discovering business pro-
cesses using process mining techniques based on the event logs collected from  infor-
mation systems. This helps find common patterns in a process that are suitable for RPA. 
They focused on measuring the productivity and efficiency of tasks without RPA auto-
mation that are affected by the resource allocations and the specific type of human re-
sources assigned for each task. They measured the time it takes to complete a task in 
the common patterns based on the quantity of resources allocated for such a task. They 
concluded that from productivity and efficiency perspectives, it is recommended to start 
implementing RPA solutions for tasks that take the most amount of time to be com-
pleted. The analysts should be considering automating first the common patterns that 
maximize productivity and efficiency.  

Geyer-Klingeberg et al. (2018) also highlight best practices for a successful RPA 
implementation where process mining can accelerate and improve this approach, taking 
into consideration that not all processes are suitable for RPA:  

1)  Selecting the appropriate process use case that can be automated. 
2)  Standardizing the processes before automation.  
3)  Prioritizing the processes that can be automated. 
4)  Monitoring the results continuously. 
5)  Establishing a central unit for automation in the organization. 

Kirchmer and Franz (2019) focused as well on several criteria that should be checked 
before deploying RPA solutions, which include identifying the high impact business 
processes and verifying that the RPA technology fits to the solution. This last part is 
concerned  with  whether  the  processes  are  repetitive  transactions,  high-transactional 
volume processes, and stable and well-defined processes. 

Rinderle-Ma  and  Mangler  (2021)  investigated  how  process  mining  impact 
automation strategies and vice versa, with a focus on manufacturing processes. If there 
is an existing dataset, then process mining can support automation. On the other hand, 
automating manufacturing processes with a proper logging mechanism can yield to a 
good data collection that will increase the quality of process mining and analysis. 

 
21 

4.2 

Tools 

The ProM framework, developed by van Dongen et al. (2005), is an open-source PM 
environment extensible through plugins. This framework is flexible in terms of input 
and output formats, and it allows the implementation of custom PM algorithms. 

A ProM plug-in was used to generate process maps using collected UI logs as an 
input  (Jimenez-Ramirez  et  al.,  2019).  Cabello  et  al.  (2020)  also  used  ProM  as  their 
process mining tool to discover the as-is processes and the paths that can be automated, 
while the UiPath RPA tool was used to program the software robots that automate the 
tasks. 

Three of the selected papers used Disco8 (a commercial PM solution) to discover the 
frequent and most common routines in event logs that can be implemented using RPA 
solutions (Agostinelli et al., 2020; Halaška and Šperka, 2020; Choi et al., 2021). These 
papers imported the event logs to Disco to generate process maps and visualize as-is 
processes and the sequences in which the tasks are executed. 

In three papers, the authors used Apromore9 (an open-source PM tool) to generate 
process maps from event logs that helped discovering patterns in the most frequently 
executed routines (Leno et al., 2019; Bosco et al., 2019; Halaška and Šperka, 2020). 

Only one paper used Celonis10 (a commercial PM solution) to discover process maps 
from event logs, which were analyzed to improve the process in place based on which 
subprocesses can be automated using RPA. Celonis was also used to monitor the pro-
cesses after they were automated using RPA. 

The majority of the papers focused on collecting more event logs at the user interface 
level, which required using APIs to record the actions that were happening in Excel or 
Web browsers (Leno et al., 2019; Jimenez-Ramirez et al., 2019). 

In one paper, Agostinelli et al. (2020) implemented the SmartRPA tool using Python. 
This tool exploits event logs to automatically generate executable RPA scripts that can 
be automated using software robots. Another open-source Java command line tool was 
implemented  to  identify  segments  and  then  detect  candidates  that  can  be  automated 
using RPA (Leno 2020). 

Table 5 summarizes the tools that were used in the selected papers for this SLR. The 
majority of the tools are open source since this provides flexibility for the researchers 
to implement their algorithms. The existing PM and RPA tools in the market do not 
however  provide the flexibility for the developers to preprocess data  as needed. For 
example, existing PM tools and RPA solutions do not have the capability to apply seg-
mentation on UI logs and select the candidates that can be automated. 

8 https://fluxicon.com/disco/ 
9 https://apromore.org/ 
10 https://www.celonis.com/ 

 
 
 
 
 
 
22 

Table 5: Tools used in the selected papers. 

Process Mining Tools 
Apromore 

ProM 
Disco 

UiPath Process Mining 
Celonis 

Papers 
(Bosco et al., 2019) (Leno et al., 2019) (Halaška and Šperka, 
2020) 

(Jimenez-Ramirez et al., 2019) (Cabello et al., 2020) 
(Halaška and Šperka, 2020) (Agostinelli et al., 2020) (Choi et 
al., 2021) 
(Cabello et al., 2020) (Leno et al., 2020) 
(Geyer-Klingeberg et al., 2018) 

4.3  Challenges 

There are many challenges in applying process mining techniques on event logs col-
lected at the user-interface level of an application in order to discover frequent patterns 
that can be automated using RPA, both in terms of process mining and of RPA. 
  Agostinelli et al. (2019) analyzed the RPA tools that are available on the market and 
then developed a classification framework to categorize the tools based on these dimen-
sions: software architecture, coding features, recording facilities, self-learning, automa-
tion type, routine composition, and log quality. Based on their results, four research 
challenges were derived to inject intelligence into current RPA technology. 

1) 

2) 

Intra-routine self-learning (segmentation): none of the RPA tools that exist on 
the  market  can  automatically  understand  which  user  actions  have  to  be 
considered inside the log, interpret the granularity, and identify which routines 
these logs belong to. 
Inter-routine self-learning: the identification of candidate routines that can be 
automated  with  RPA  is  itself  not  automated.  This  step  is  done  through 
interviews,  direct  observation  of  employees,  and  documentation  reviews, 
which are time consuming and might lead to errors.  

3)  Automated  generation  of  flowcharts  from  RPA  logs:  generating  flowcharts 
from  RPA  logs  would  facilitate  the  monitoring  process  for  the  robots  after 
implementation and help testing whether the robots are executing the steps as 
they should. 

4)  Automated  routines  composition:  current  RPA  solutions  allow  to  develop 
software  robots  for  executing  single  and  independent  routines,  not multiple 
dependent ones.  

The RPM pipeline of Leno et al. (2020), introduced to use process discovery tech-
niques to identify candidate routines for RPA implementation, also helped identify sev-
eral challenges. These challenges are classified at the PM level as they are related to 
the event logs collected before building RPA solutions. They include action recording, 
noise filtering, segmentation, simplification, routine extraction, executable routine dis-
covery, and compilation. 

van der Aalst (2020) highlights another challenge, which is to match the user inter-
action log based on identifiers, usernames, keywords, and labels when the data is col-

 
 
23 

lected from multiple sources. For example, when collecting data from task mining tech-
niques,  recordings, and other monitoring tools, the  challenge is to  combine  all these 
logs together and match the identifiers that refer to the same process performed by the 
same user. 

Choi et al. (2021) focused on three challenges that need to be addressed in order to 
use process mining techniques properly to identify candidate tasks for automation using 
RPA: 1) generating event log from recorded interactions with user interface, 2) case 
identification (defining a case ID of a user interface log), and 3) case duration calcula-
tion of tasks taking into consideration real-life situations. 

Rinderle-Ma  and  Mangler  (2021)  studied  manufacturing  processes  and  also 
observed  several  challenges,  including  1)  connecting  the  machines  to  the  process, 
2) involving humans with an active or a passive way, and 3) collecting high quality data 
from manufacturing processes that are suitable for process mining. 

Figure 5 highlights important process mining challenges in the context of RPA im-

plementation, as well as general RPA challenges. 

Figure 5: Process mining and RPA challenges. 

In addition to the process mining challenges that are discussed in the context of RPA, 
researchers have discussed other PM challenges that are not discussed in the RPA lit-
erature. Many of these challenges can also be applied to the RPA context. These chal-
lenges are related to the preprocessing and restructuring of event logs (steps S4-S5 in 
Figure 4) to extract meaningful insights and generate process maps (step S6) that can 
be used in the analysis (step S7). El-Gharib and Amyot (2019) highlighted several chal-
lenges for applying PM in practice, which include: 

1.  Merging and cleaning raw event log data sets.  
2.  Dealing with complex event logs with multiple attributes. 
3.  Mining processes that change over time.  
4. 
5.  Mining complex processes with low levels of granularity (often collected from 

Improving the representation of process maps for less structured processes.  

cloud-based applications). 

6.  Handling sequences of event where ordering does not matter.  
7.  Dealing with noisy event logs. 

RPA Challenges•Identifying automation routines•Updating RPA scripts as processes change•Human monitoring when robots fail•Handling exceptions in processes•Automating processes with many variants•Intra-routine and inter-routine self-learning •Automatically generating workflows from RPA logs•Developing multiple dependent robotsProcess Mining Challenges•Dealing with noisy event logs•Handling complex events logs with a variety of characteristics•Improving model presentation for less structured processes•Handling the absence of reliable unique identifiers•Managingthegranularity of event logs•Compiling event logs•Matching user interaction logs•Collecting high quality dataPM and RPA•Recording user interaction logs•Generating event logs from User Interfaces•Filtering noise•Finding frequent patterns•Extractingroutines•Segmenting event logs•Simplifying event logs 
 
 
24 

These challenges have been discussed when applying process mining discovery algo-
rithms in the context of cloud-based applications. Based on the analysis of the papers 
for this SLR, the challenges discussed by El-Gharib and Amyot (2019) are also relevant 
in the context of RPA when working with UI event logs in order to discover routines 
that are suitable for RPA implementation. 

5 

Answers to the Research Questions 

To answer RQ1 (Section 3.1) on how process mining techniques are applied to accel-
erate and improve robotic process automation, based on the 19 papers cited in this SLR, 
several results can be drawn. As there has been a major increase in RPA application 
across a wide range of industries that are automating processes, it is essential to know 
how  processes  are  being  executed  and  which ones  can  be automated.  This  is  where 
process mining approaches show their strengths, as otherwise organizations often lack 
appropriate tools to understand their processes. Process mining can help analysts un-
derstand as-is processes and discover the routines that can be automated. To understand 
the processes that can be automated with RPA, it is essential to record the events that 
are  executed  by  office  staff  to  perform  a  task.  Then,  recorded  event  logs  give  more 
details  on  the  process  insights  when  they  are  visualized  with  PM  tools.  Once  RPA-
based robots automating processes are deployed, PM can also provide continuous mon-
itoring of these robots to ensure there are no errors or deviations. Further information 
is  provided  in  Section  4.1,  especially  in  terms  of  the  steps  that  compose  a  typical 
PM+RPA project lifecycle (Figure 4). 

A combination of RPA and PM was used, for example, in the telecommunication 
industry at Vodafone (Geyer-Klingeberg et al., 2018). PM raised alerts to Vodafone 
about  many orders deviating from the  expected or the standard process steps. These 
process variants with multiple deviations could not be automated with RPA. PM helped 
Vodafone identify those processes for improvement, which were then more easily au-
tomated using RPA without errors and with a faster speed. In this case, RPA helped 
Vodafone  achieve  a  rate  92%  order  rate  leading  to  improvement  on  several  metrics 
(Geyer-Klingeberg et al., 2018). 

To answer RQ2, several PM and RPA tools have been used in the selected papers 
(see Section 4.2). The RPA tools that are in the market do not provide recording features 
to visualize the steps that are part of the process and to know how the processes happen 
in reality. Several PM tools for example, ProM, Disco, Apromore, and Celonis, have 
been used to build process maps using process mining algorithms. These tools do not 
have the flexibility required  to properly preprocess and simplify event logs in a way 
that would enable discovering the routines that can be automated. Assuming that proper 
preprocessing is done, PM tools can be used at the planning and assessment stage  to 
discover the processes that can be automated and the sequence of events of a particular 
process. After the  RPA software  robots are programmed and are handling the  tasks, 
process mining techniques can be used to monitor these automated processes to further 
discover errors, deadlocks, and deviations. 

 
25 

To answer RQ3, some of the selected papers in this SLR discussed the challenges 
encountered when combining process mining with robotic process automation. Before 
being able to apply process mining discovery algorithms, the collected event logs re-
quire preprocessing. The list of challenges for process mining, robotic process automa-
tion, and their intersection are summarized in Figure 5, with more detail being provided 
in Section 4.3.  

6 

Threats to Validity  

According to Perry et al. (2000), three types of threats to validity are relevant in litera-
ture reviews: 1) construct validity, 2) external validity, and 3) external validity. 

Construct validity refers to the quality of the methodology in terms of being helpful 
to answer the research questions. Even though essential concepts and synonyms were 
included in the query that  was ran across the most popular databases, in addition to 
using a snowballing approach, it could be possible that some relevant papers have not 
been found and were not included in this SLR. This is further exacerbated by the search 
being limited to peer-reviewed papers written in English. The grey literature was not 
reviewed and may include some additional information on how process mining is being 
applied in practice in robotic process automation projects. Such threats to validity were 
partially mitigated by doing a manual snowballing search to try including more papers 
that were not returned by the database searches. 

External validity considers whether applying the conclusion of this study and the 
results to other cases or situations is possible. The focus of this SLR is limited to the 
use of process mining to accelerate and improve the implementation of robotic process 
automation. The methods, tools, results, and challenges that were discussed here were 
based specifically on the papers related to the intersection of PM with RPA. In partic-
ular, as papers exclusively focusing on the use of PM in support of RPA, the results 
may not generalize to other applications (e.g., on how RPA can support PM) or to other 
approaches (e.g., based on machine learning).  

Internal validity examines any bias in performing the research. The major threat to 
the internal validity here is that the review of the literature was done mainly by the first 
author, with punctual support from the second author. Some papers and analysis aspects 
thereof might have been overlooked or misrepresented due to fatigue or bias. This threat 
was partially mitigated by having a clear protocol first defined and validated by a peer, 
and a first version of this SLR peer-reviewed and validated by another peer. 

7 

Conclusion 

The combination of process mining and RPA offers a unique opportunity to  explore 
process management and to address the challenges of process discovery, improvement, 
and automation. Although RPA brings potential benefits to processes in terms of cost 
reduction and efficiency/effectiveness improvements, it is still important to carefully 
analyze  the  processes  before  considering  their  automation.  There  is  in  particular  no 
point in automating non-compliant or ineffective behavior (van der Aalst, 2020). The 

 
26 

application of process mining is broader than RPA and does not stop after the software 
robots are deployed and operating. PM can be applied during the whole RPA project 
lifecycle starting with assessment (steps S2, S3, S4, S5a, S5b, and S5c in  Figure 4), 
software robots’ implementation (steps S8 and S9), and process monitoring (steps S10 
and S11). 

This  paper  presented  a  systematic  literature  review  on  how  process  mining  tech-
niques and algorithms have been applied in the robotic process automation context to 
improve and accelerate automation implementation. Although there are reviews on PM 
and on RPA in isolation, none  of them has focused on their intersection. RPA is an 
emerging technology that is designed to automate the repetitive, high-volume tasks that 
are  executed  by  employees  on  their  desktops  by  getting  software  robots  to  do  them 
instead. It is essential to understand how these processes are executed in reality so they 
can be automated. PM techniques support the deployment of RPA projects by discov-
ering as-is processes, which helps in selecting the processes and tasks that can be auto-
mated, with further support for their robot monitoring. 

This SLR discussed and analyzed 19 peer-reviewed papers selected from database 
searches supplemented with snowballing. The contributions of this review include the 
identification of the techniques and algorithms that are currently used to improve and 
accelerate discovering and detecting the routines and the tasks that can be automated 
(RQ1). There is a focus on the techniques and algorithms to preprocess, prepare, re-
structure, and simplify the UI logs before importing such data sets into PM tools. A mix 
of open-source and commercial tools are being used at the PM and RPA levels (RQ2). 
This SLR also discusses the challenges that are encountered with combining PM with 
RPA during and automation project’s lifecycle (RQ3). 

This review is of value to practitioners working either in the domain of process min-
ing or robotic process automation, as it summarizes the knowledge and state-of-art tech-
niques that lie at the intersection of both research domains. This review is also valuable 
to researchers and tool developers in the PM domain as it highlights further challenges 
that should be addresses at the event log level to better enable RPA solutions. Addi-
tionally, this review is important to the researchers in the RPA domain as it shows how 
PM can be leveraged in the RPA context and how it plays an increasingly important 
role during all RPA stages. Both research areas have been growing recently, though 
there are still challenges that can be further explored in future research. 

References 

Agostinelli, S., Lupia, M., Marrella, A. and Mecella, M. (2020), “Automated Genera-
tion of Executable RPA Scripts from User Interface Logs”, in Business Process 
Management: Blockchain and Robotic Process Automation Forum (BPM 2020), 
Springer, Cham, pp.116-131. DOI:10.1007/978-3-030-58779-6_8 

Agostinelli, S., Marrella, A. and Mecella, M. (2019), “Research challenges for intelli-
gent robotic process automation”, in BPM 2019: Business Process Management 
Workshops, Springer, Cham, pp.12-18. DOI:10.1007/978-3-030-37453-2_2 

 
27 

Agostinelli, S., Marrella, A. and Mecella, M. (2021), “Exploring the Challenge of Au-
tomated Segmentation in Robotic Process Automation”, in Research Challenges 
in  Information  Science  (RCIS  2021),  Springer,  Cham,  pp.38-54.  DOI:10.1007/ 
978-3-030-75018-3_3 

Bosco, A., Augusto, A., Dumas, M., La Rosa, M. and Fortino, G. (2019), “Discovering 
automatable routines from user interaction logs”, in BPM2019: Business Process 
Management  Forum,  Springer,  Cham,  pp.144-162.  DOI:10.1007/978-3-030-
26643-1_9 

Cabello, R., Escalona, M.J. and Enríquez, J.G. (2020), “Beyond the Hype: RPA Hori-
zon for Robot-Human Interaction”,  Business Process Management: Blockchain 
and Robotic Process Automation Forum (BPM 2020), Springer, Cham, pp.185-
199. DOI:10.1007/978-3-030-58779-6_13 

Choi, D., R’bigui, H. and Cho, C. (2021), “Candidate Digital Tasks Selection Method-
ology for Automation with Robotic Process Automation”, Sustainability, 13(16), 
p.8980. DOI:10.3390/su13168980 

Dilmegani, C. (2021),  Top 55 Robotic Process Automation (RPA) Tools & Vendors. 

[Online] Available at: https://research.aimultiple.com/rpa-tools/ 

dos  Santos  Garcia,  C.,  Meincheim,  A.,  Faria  Junior,  E.R,  Dallagassa,  M.R.,  Vecino 
Sato, D.M., Carvalho, D.R., Portela Santos, E.A. and Scalabrin, E.E. (2019), “Pro-
cess mining techniques and applications – A systematic mapping study”, Expert 
Systems with Applications, 133, pp.260-295. DOI:10.1016/j.eswa.2019.05.003 

El-Gharib, N.M. (2019), Using Process Mining Technology to Understand User Be-
havior in SaaS Applications, Master’s Thesis, University of Ottawa, Canada. DOI: 
10.20381/ruor-24202 

El-Gharib, N.M. and Amyot, D. (2019), “Process mining for cloud-based applications: 
a  systematic  literature  review”,  in  2019  IEEE  27th  International  Requirements 
Engineering Conference Workshops (REW), IEEE CS,  pp.34-43.  DOI:10.1109/ 
REW.2019.00012 

Kerremans, M., Srivastave, T., and Choudhary, F. (2021), Gartner Market Guide for 
[Online]  Available  at  https://www.gartner.com/doc/re-

Process  Mining, 
prints?id=1-289D1SO7&ct=211129&st=sb  

Geyer-Klingeberg, J., Nakladal, J., Baldauf, F. and Veit, F. (2018), “Process Mining 
and Robotic Process Automation: A Perfect Match”, in BPM 2018 Dissertation 
Award, Demonstration, and Industrial Track, CEUR-WS, Vol-2196, pp.124-131. 
Halaška, M. and Šperka, R. (2020), “Importance of Process Flow and Logic Criteria 
for RPA Implementation”, in Agents and Multi-Agent Systems: Technologies and 
Applications 2020, Springer, Singapore, pp.221-231. DOI:10.1007/978-981-15-
5764-4_20 

Jimenez-Ramirez, A., Reijers, H.A., Barba, I. and Del Valle, C. (2019), “A method to 
improve the early stages of the robotic process automation lifecycle”, in Interna-
tional Conference on Advanced Information Systems Engineering (CAiSE 2019), 
Springer, Cham, pp. 446-461. DOI:10.1007/978-3-030-21290-2_28 

Kirchmer, M. and Franz, P. (2019), “Value-driven robotic process automation (RPA)”, 
in Business Modeling and Software Design (BMSD 2019), Springer, Cham, pp.31-
46. DOI:10.1007/978-3-030-24854-3_3 

 
28 

Kitchenham, B. and Charters, S. (2007) Guidelines for performing systematic literature 

reviews in software engineering, EBSE technical report, Ver. 2.3, UK.  

Leno, V. (2018) “Multi-perspective process model discovery for robotic process auto-
mation”, in CAiSE 2018 Doctoral Consortium, CEUR-WS, Vol. 2114, pp.37-45. 
Leno,  V.,  Augusto,  A.,  Dumas,  M.,  La  Rosa,  M.,  Maggi,  F.M.  and  Polyvyanyy,  A. 
(2020), “Identifying candidate routines for Robotic Process Automation from un-
segmented  UI  logs”,  in  2020 2nd International  Conference  on  Process  Mining 
(ICPM), IEEE CS, pp.153-160). DOI:10.1109/ICPM49681.2020.00031 

Leno,  V.,  Augusto,  A.,  Dumas,  M.,  La  Rosa,  M.,  Maggi,  F.M.  and  Polyvyanyy,  A. 
(2021),  “Discovering  data  transfer  routines  from  user  interaction  logs”,  Infor-
mation Systems, 107, 101916. DOI:10.1016/j.is.2021.101916 

Leno, V., Polyvyanyy, A., Dumas, M., La Rosa, M. and Maggi, F.M. (2020), “Robotic 
process mining: vision and challenges”, Business & Information Systems Engi-
neering, 63, pp.301-314. DOI:10.1007/s12599-020-00641-4 

Leno, V., Polyvyanyy, A., La Rosa, M., Dumas, M. and Maggi, F.M. (2019), “Action 
logger: Enabling process mining for robotic process automation”, in BPM 2019 
Dissertation  Award,  Doctoral  Consortium,  and  Demonstration  Track,  CEUR-
WS, Vol. 2420, pp.124-128. 

Linn, C., Zimmermann, P. and Werth, D. (2018), “Desktop activity mining - A new 
level of detail in mining business processes”, in Workshops der INFORMATIK 
2018-Architekturen,  Prozesse,  Sicherheit  und  Nachhaltigkeit,  Köllen  Druck+ 
Verlag GmbH, Bonn, pp.245-258. 

Marin-Castro, H.M. and Tello-Leal, E. (2021), “Event Log Preprocessing for Process 
Mining:  A  Review”,  Applied  Sciences,  11(22),  10556.  DOI:  10.3390/ 
app112210556 

Perry, D.E., Porter, A.A. and Votta, L.G. (2000), “Empirical studies of software engi-
neering: a roadmap”, in ICSE’00: Proceedings of the conference on The future of 
Software engineering, ACM, pp.345-355. DOI:10.1145/336512.336586 

Rinderle-Ma, S. and Mangler, J. (2021), “Process Automation and Process Mining in 
Manufacturing”, in Business Process Management (BPM 2021), Springer, Cham, 
pp.3-14. DOI:10.1007/978-3-030-85469-0_1 

Sanders, R. (1987), “The Pareto principle: its use and abuse”,  Journal of Services Mar-

keting, 1(2), pp.37-40. DOI: 10.1108/eb024706 

Shotton, L., Stoudt-Hansen, S., Karamouzis, F., Alexander, M., Sturgill, N., and Kan-
daswamy, R. (2020) Predicts 2021: Accelerate Results Beyond RPA to Hyperau-
tomation,  [Online]  Available  at:  https://www.gartner.com/doc/reprints?id=1-
253WYNPK&ct=210129&st=sb. 

van der Aalst, W.M. (2011) Process mining - Discovery, conformance and enhance-
ment  of  business  processes.  Springer,  Heidelberg.  DOI:10.1007/978-3-642-
19345-3 

van der Aalst, W.M. (2020), “On the Pareto Principle in Process Mining, Task Mining, 
and Robotic Process Automation”, in Proceedings of the 9th International Con-
ference on Data Science, Technology and Applications - DATA, SciTePress, pp.5-
12. DOI:10.5220/0009979200050012 

 
29 

van der Aalst, W. M., Bichler, M. and Heinzl, A. (2018), “Robotic process automation”. 
Business  &  Information  Systems  Engineering,  60,  pp.269-272.  DOI:10.1007/ 
s12599-018-0542-4 

van Dongen, B.F., de Medeiros, A.K.A., Verbeek,  H.M.W., Weijters, A.J.M.M. and 
van Der Aalst, W.M. (2005), “The ProM framework: A new era in process mining 
tool  support”,  in  Applications  and  Theory  of  Petri  Nets  2005  (ICATPN  2005), 
Springer, Berlin, pp.444-454. DOI:10.1007/11494744_25 

Vecino Sato, D.M., De Freitas, S.C., Barddal, J.P. and Scalabrin, E.E. (2022) “A Survey 
on Concept Drift in Process Mining”, ACM Computing Surveys, 54(9), pp.189:1-
189:38. DOI:10.1145/3472752 

Wanner, J., Hofmann, A., Fischer, M., Imgrund, F., Janiesch, C. and Geyer-Klingeberg, 
J. (2019), “Process selection in RPA projects – Towards a quantifiable method of 
decision  making”,  in  ICIS  2019  Proceedings,  6,  AISeL,  [Online]  Available  at  
https://aisel.aisnet.org/icis2019/business_models/business_models/6 

 
