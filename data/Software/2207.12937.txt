Review of Peer-to-Peer Botnets and Detection
Mechanisms

1st Khoh Choon Hwa
National Advanced IPv6 Center
Universiti Sains Malaysia
Penang, Malaysia

2nd Selvakumar Manickam
National Advanced IPv6 Center
Universiti Sains Malaysia
Penang, Malaysia
selva@usm.my

3rd Mahmood A. Al-Shareeda
National Advanced IPv6 Center
Universiti Sains Malaysia
Penang, Malaysia
alshareeda022@gmail.com

2
2
0
2

l
u
J

7
1

]

R
C
.
s
c
[

1
v
7
3
9
2
1
.
7
0
2
2
:
v
i
X
r
a

Abstract—Cybercrimes are becoming a bigger menace to both
people and corporations. It poses a serious challenge to the
modern digital world. According to a press release from 2019
Cisco and Cybersecurity Ventures, Cisco stopped seven trillion
threats in 2018, or 20 billion threats every day, on behalf of
its clients. According to Cybersecurity Ventures, the global cost
of cybercrime will reach $6 trillion annually by 2021, which
is signiﬁcantly more than the annual damage caused by all
natural disasters and more proﬁtable than the global trade
in all major illegal narcotics put together. Malware software,
including viruses, worms, spyware, keyloggers, Trojan horses,
is therefore frequently used in cybercrime. Es-
and botnets,
pecially for businesses that heavily rely on digital information
technologies,
it has become crucial for businesses across all
industries and governments to identify and stop cyberattacks
before they cause signiﬁcant damage. The most common malware
employed by attackers to carry out cybercrimes is the botnet,
which is available in a variety of forms and for a variety
of purposes when attacking computer assets. Botnets are the
most common and have a signiﬁcant negative impact on any
civilization among malware programmes. It is difﬁcult to identify
and stop malicious behaviours from occurring without a thorough
grasp of the relevant cybercrime operations, such as malicious
botnet activities. Fortunately, a wide range of strategies have
been created and advocated to tackle the botnet issue. However,
the issue continues to exist and worsen, seriously harming both
enterprises and people who conduct their business online. The
detection of P2P (Peer to Peer) botnet, which has emerged as
one of the primary hazards in network cyberspace for acting
as the infrastructure for several cyber-crimes, has proven more
difﬁcult than regular botnets using a few existing approaches.
As a result, this study will explore various P2P botnet detection
algorithms by outlining their essential characteristics, advantages
and disadvantages, obstacles, and future research.
Index Terms—P2P botnet, detection mechanism.

I. INTRODUCTION

The majority of Internet users utilise the Internet to conduct
many of their usual daily activities, including routine work,
social interactions, and personal leisure. Nearly all Internet
users claim that their everyday activities and routines would
be altered if they lost access to the Internet. Our lives have
altered in every way because to the internet and communi-
cation technologies. Internet has a lot to offer us in terms
of valuable services and applications. However, security risks,
often known as cybercrimes that affect people and companies,
are one of the biggest downsides of the Internet [1]. Malicious

software, sometimes known as malware, has thus risen to
prominence in today’s high-tech society. Malwares are made
up of a wide range of programmes, including Trojans, worms,
spyware, keyloggers, and botnets. The most pervasive and
signiﬁcant threat to computing assets among the various types
of malicious software is posed by botnets. The increasing
dependence on the internet over the past few decades has made
it difﬁcult to manage the integrity, conﬁdentiality, and security
of user data and computing resources [2]–[26]. This is due to
the fact that the majority of cyber-security-related problems are
caused by malicious software that is operating undetected on
user computers and may jeopardise the security of the user’s
data, especially in critical infrastructure, government, business,
and academic settings [27].

A botnet is a group of compromised computers that the
attackers covertly control and utilise for a variety of harmful
purposes. A bot master, who controls a botnet’s command
and control for remote process execution, is the attacker. The
inﬁltrated computers or other devices in a botnet are known as
zombies or bots [28]. Using a set-up C&C channel, Botmaster
has the capacity to remotely control the behaviour of bot mal-
ware, making bot operations more adaptable and customising
instructions to suit its requirements. The bot master uses the
botnet he controls to carry out a variety of malicious activities,
including Distributed Denial of Service (DDoS), sending spam
emails with viruses attached, phishing, spreading malware,
cracking passwords, stealing identities, committing internet
fraud, key logging, and extorting online businesses, among
others. The bot master needs powerful computational power in
order to carry out the nefarious acts. Thus, a bot master makes
various social engineering and exploiting attempts to attack
weak computers or devices (systems with fewer protection
mechanisms) on a network. Once the computers or devices are
infected, the legitimate owner or user will not even be aware
of it, and without his or her consent, the computers or devices
will become a member of their botnets, where the personal
data and credentials that are stored there will be stolen or
they will engage in other malicious activities as directed by
the bot master [1].

This paper focuses solely on discussing numerous P2P bot-
net topics, including P2P botnet design, C&C communication,
P2P detection methods, and observations and difﬁculties. The

 
 
 
 
 
 
following are some of its noteworthy contributions:

• P2P botnets’ life cycle of development is discussed.
• It presents the taxonomy and thorough analysis of the

various detection frameworks and models.

• The research observation and difﬁculties in using these

P2P botnet detection methods are discussed.

The reminder of this paper is organized as follows. Section
II covers the background and related surveys. The various
P2P detection techniques are discuss in Section III. In Section
IV, it will presenting the identiﬁed research observation and
challenges. Finally the Section V presents the summary and
the directions for future research work.

II. BACKGROUND AND RELATED SURVEY

A group of infected computers that are managed by the bot
master via command and control (C&C) channels is referred
to as a botnet. A botnet usually consists of three different kinds
of software. As follows:

• Server program: To control infected computers or bots,
these programmes are placed on the command and control
(C&C) server [1].

• Client program: To control infected computers or bots,
these programmes are placed on the command and control
(C&C) server [1].

• Malicious program: These applications or programmes
fall under the category of malware since they are used
to infect or compromise susceptible machines online.
Malware like Gnuman and VBS that is managed by a
bot master has been found to compromise computers.
Trojan.Peacomm, Gnutella, SdDrop, and others [1].
The botnet’s communication system is another crucial ele-
ment. Bots are always in communication with the C&C server,
receiving instructions to engage in nefarious activity. The bots
then continuously listen for commands, carry out the tasks
as directed, and backup the acquired data to the C&C server.
They are divided into three groups based on how the botnets
communicate: IRC botnets, HTTP botnets, and P2P botnets.

A. IRC Botnet

The earliest botnet in existence is the IRC botnet. They are
not classiﬁed as malicious bots in the design of these bots. In
actuality, the majority of bots are useful and necessary for the
operation of the Internet. Internet Relay Chat (IRC) protocol
chatroom functioning was facilitated by the ﬁrst internet bots.
Search engines utilise web crawler internet bots for indexing
and updating. In addition to indexing websites, bots are also
used to gather current news and price data. Chat bots are an
additional useful area. Siri is the most well-known chatbot,
and they are utilised as virtual assistants and in social services.
Additionally, there is a moral and legal grey area surrounding
the use of commercial internet bots for automated trading,
auction bidding, and monitoring of product positioning and
reviews [29]. The IRC protocol was ﬁrst created for extensive
data distribution and conversation among end users, as shown
in the examples above. The IRC protocol’s inherent ﬂexibility

and scalability have been used by criminals to carry out a
variety of nefarious activities. IRC botnets are regarded as
having a centralised C&C architecture. In other words, a single
C&C server is in charge of all the bots. (View Figure 1) As
a result, it is susceptible to single point of failure due to the
centralised architecture. The entire botnet will disintegrate as
soon as the server is identiﬁed and taken ofﬂine [1].

B. HTTP botnet

It is comparable to the IRC botnet in this HTTP (Hypertext
Transfer Protocol) botnet. The bot masters set up HTTP
servers so that
they may communicate with the infected
computers using the HTTP protocol. Due to the popularity
of the HTTP protocol on the Internet, its use by many apps,
and its ease of entrance toolkits, bot masters aim to blend their
malicious bot trafﬁc with legitimate HTTP trafﬁc in order to
avoid detection. The HTTP botnet also falls under the category
of centralised C&C architecture, and it can be developed into a
hierarchical design with speciﬁc subgroups of bots structured
for load balancing and for speciﬁc content distribution, such
as spam [29]. The centralised C&C structure is reliable and
simple to put into practise. Bot master has the capacity to
tell all bots to react, respond, and attack simultaneously over
communication. Due to the fact that the C&C server contained
information about the whole botnet, a single point of collapse
resulted [30].

C. P2P botnet

If the C&C server is discovered, the entire botnet could
be destroyed, as is understood with the IRC and HTTP bot-
nets. As centralised botnet mitigation became commonplace,
botnets advanced to a decentralised C&C architecture (See
Figure 1). Instead of being connected to a central C&C server,
the bots with a decentralised architecture are connected to
the neighbouring bots in the botnet. Because of this,
the
decentralised botnet is frequently referred to as a peer-to-peer
(P2P) botnet. This structure is similar in principle to the peer-
to-peer network model. The P2P architecture eliminates the
vulnerability of a single point of disruption because every bot
in the P2P botnet can act as either the client or server, but
it increases the cost of reaction time [1]. The most recent
botnet architecture makes use of social media sites like Twitter
and Facebook,
therefore the term ”botnet” now refers to
an automated social media account rather than a hijacked
computer or other device. The bot master can then manually
create numerous accounts or, for increased efﬁciency, register
to the social media site using an application. Since social
media sites don’t charge for account registration, social media
botnets often have cheap entrance and upkeep costs. The owner
of a social media bot will use this opportunity to post malicious
links, gather information on prominent targets, and disseminate
information with the aim of inﬂuencing politics and business.

D. Botnet Development Lifecycle

A product development model is employed to provide a
taxonomy and lifecycle for botnets. The product development

between internal and external botnets as well as potential
vulnerability nodes is involved. It’s crucial to distinguish
botnets from other malware types by their communi-
cation capability. For connecting freshly infected nodes
to the botnet channel, internal communication relies on
the C&C architecture, whilst external communication
uses the Domain Name Service (DNS) to request the
resolution of IP addresses. External communication is
also in charge of the registration procedure that allows
a vulnerable device to join the botnet. defences to avoid
detection during the communication phase. so that the
weak nodes can conceal the identity of the infected node.
• Application & Response. By leasing the botnet’s services
or selling the code, the botnet can become proﬁtable once
the potential motivation level in terms of economic value
is met. At this stage, botnet attacks are launched, includ-
ing DDoS, spam, phishing, click fraud, virus distribution,
espionage, and others.

• Update & maintenance. Updates and maintenance, such
as claiming dormant peer bots, are needed for the infected
nodes that joined the active botnet. In order to strengthen
the prevention strategy, the executable C&C server may
need to migrate, replace the C&C super peers that were
removed after being discovered, and update the binaries
on all afﬂicted nodes. If a botmaster detects a botnet
as a whole at this point, the development cycle must
be restarted. If not, new botnet variants will continue to
strike.

1) Command and Control Mechanisms: The bots are in-
structed by distant systems through the command and control
(C&C) channels. Based on the C&C protocols, multiple C&C
architectures can be categorised, including IRC, HTTP, P2P,
Bluetooth, email, social networks, DNS, and other unique
protocols. The botnet is based on the demands that either P2P
or non-P2P protocols be used for C&C communication. The
pull and push mechanisms in botnets are the 2 main C&C
activities. When using a pull system, bot masters post instruc-
tions at predetermined sites, where peer bots can subscribe
and actively accept them. The bot subsequently follows the
instructions and also notiﬁes its list of neighbouring peers
[28]. To execute the commands, C&C servers push or advance
them to their neighbouring peers via the push technique. The
nearby peer bots then wait passively for the instructions and
also transmit the instructions they get to further nearby peer
bots.

III. P2P BOTNET DETECTION TECHNIQUES

To categorise the attacks,

the common botnet detection
methods can be divided into three categories. (1) Botnet
trafﬁc, (2) Command and Control (C&C) servers, and (3) PCs
with bot infections. Nowadays, a lot of proposed detection
schemas are based on one or more of the aforementioned
criteria. This study groups the numerous ideas into the fol-
lowing subcategories based on these three characteristics:
trafﬁc-based detection, behavior-based detection, DNS-based
detection, graph-based detection, data mining-based detection,

Fig. 1. A typical Centralized Botnet VS Peer to Peer Botnet Architecture.

lifecycle of a botnet has numerous stages, including infection
and propagation, communication and control, application and
reaction, and update and maintenance. Below is a detailed
explanation of each phase (See Figure 2) [28], [29].

Fig. 2. Botnet Development Lifecycle.

• Infection & propagation. The motivation of the bot master
is a major factor in whether or not they will construct a
botnet. Money, entertainment, ego, and other factors are
among the motivations that are described above. The bot
master’s goal at this point is to increase the number of
nodes in the botnet. It can boost the dissemination by
taking advantage of ﬂaws in any of the many malware
attack vectors, including websites and browsers, email,
and social media platforms [29]. The initial infection of
the vulnerable nodes progresses to secondary infection
(Zombie conversion), which spreads to the neighbouring
nodes.

• Communication & control. At this level, communication

soft computing-based detection, and general framework. More
information on each detection approach will be provided in
the next section.

A. Trafﬁc-based Detection

The P2P bots interact with a large number of other peer
bots to carry out push/pull mechanisms, provide the bots
instructions to gather data, or deliver updates from the bot
master to infected PCs. Consequently, it continually produces
anomalous network trafﬁc [28]. For the objective of observing
network patterns and monitoring network trafﬁc in order to
identify the presence of botnets, a number of trafﬁc-based
detection approaches have been presented. Multi-phased ﬂow
model is one of the well-known P2P trafﬁc-based detection
techniques. When acting as the sole peer in a P2P botnet,
a bot must establish connections with as many neighbour
peers as possible in order to build bot networks. As a result,
the outcome illustrates the features of processing a large
amount of network data in order to perform peer discovery and
information exchange with several linked neighbour peers. In
other words, it suggests that the network trafﬁc ﬂow resembles
the network pattern and happens frequently at erratic intervals.
For instance, a massive amount of TCP and UDP trafﬁc
created by P2P botnets is ﬂown, analysed for correlations, and
compressed into clusters that represent each ﬂow phase in the
assault trafﬁc. As a result, by developing the modelling in a
Markov chain framework, the trafﬁc ﬂows are grouped into
models based on the states [31].

The clustering of TCP or UDP communication formats
creates the grouping and tracks packets to identify whether
they are ﬂooding attacks from botnets or regular network
this method employs an
trafﬁc transmission. Additionally,
algorithm to create a matrix of ﬂow modelling and detecting
engine based on network trafﬁc. This method, however, can
only identify P2P C&C trafﬁc that resembles user trafﬁc
while the model is being trained. In order to avoid discovery,
malicious software or botnets may use network trafﬁc patterns
that are similar to those of genuine P2P networks.

The researcher also suggested a different method based
on the ﬂow dependence of C&C network data to identify
P2P botnets. By assuming that typical network trafﬁc has
complex short-term network ﬂow dependence, this method
distinguishes P2P networks from conventional P2P application
network trafﬁc [28]. This method likewise relies on looking
into the well-known network ﬂow relationships. This approach
may have trouble identifying network ﬂow dependencies if
the network ﬂows haven’t happened frequently in the past.
Additionally, a lot of trace network sample patterns that
represent synthetic P2P botnet trafﬁc must be collected for
this technique to function fairly. As a result, this technique is
not excellent for scaling because it requires a lot of labour to
rebuild the modelling [28].

B. Behavior-based detection

The behavioural characteristics of the botnet have been
thoroughly analysed. Bots typically have a wide range of

common features, including structured behaviour, maintaining
consequence connections to communicate with and respond
to neighbouring bots, as well as receiving commands from
the bot master via a C&C server. This method looks at the
P2P botnets’ behaviour and network characteristics, which
are thought to be very closely related to their fundamental
architecture and mode of operation. This technique focuses
on the network behaviour that is done by the botnet after
getting the order from the C&C server will behave unlikely to
be human behaviour rather than analysing the network trafﬁc
ﬂow as per network-based detection.

One of the suggested behavior-based detection methods for
identifying P2P botnets uses a list of behaviour metrics that ul-
timately derive from characteristics of standard network trafﬁc,
such as statistics on trafﬁc pattern, topological properties, and
protocol sequence, to identify hosts with similar connection
patterns. The monitoring network must have several infected
bots for this strategy to be effective. Additionally, threshold
attacks launched by bot masters can avoid the thresholding
metrics ﬁltering in the list of behaviour metric attributes.

TABLE I
SUMMARY OF DETECTION TECHNIQUES

Detection
Type

Network
structure bots

and

Known

P2P

Real
time
Bots

Yes

Known

P2P

Yes

Known

P2P, structured

Yes

P2P

Yes

Both

P2P, Structured

Detect
P2P bots
only
in
a mon-
itored
network
Yes

P2P

Yes

Known and
detected any
new detec-
tion type

Both

P2P

Yes

Accuracy

Detect P2P
bots only in
a monitored
network
Detect P2P
bots only in
a monitored
network
Detect P2P
bots only in
a monitored
network

Detect P2P
bots only in
a monitored
network
Detect P2P
bots which
feature had
been identi-
ﬁed before
High

Known

P2p

Limited

Low

Detection
Tech-
niques

Trafﬁc-
based
detection

Trafﬁc-
based
detection

Behavior-
based
detection

DNS-
based
detection
Both

Graph-
based
detection

Data
Mining-
based
detection

Machine
learning-
based
detection
Generic
Frame-
works

Detection
Techniques

Trafﬁc-based
detection

Behavior-
based
detection

DNS-based
detection

Graph-based
detection

Data Mining-
based detec-
tion

Soft
computing-
based
detection

Generic
Frameworks

TABLE II
STRENGTHS AND LIMITATION OF P2P BOTNET DETECTION TECHNIQUES

Strengths

Limitation and Challenges

• Behavior & Trafﬁc Analysis, Multi-phased ﬂows model
• C&C Trafﬁc detection
• Flow dependencies, Independent of malicious Trafﬁc
• Structure & protocol independent, Pattern based features
• Real-time & large scale

• Exploit Trafﬁc pattern
• Bots group behavior
• Host-network cooperation, Independent of topology & proto-

col

• Resilient to encryption & obfuscation
• Temporal resource sharing mode
• Monitoring resource sharing behavior

• Not detected by using a legitimate P2P network
• Higher false positive
• Not detected by blended peer bots and randomization
• Not detected on trafﬁc tunneling through Tor net-

work

• Detect P2P bots only in a monitored network

• Multiple bots dependency, Vulnerable to threshold

attack

• Evasion by bots: using benign domains
• Used only for parasite P2P botnets
• Source should be popular and short life

• Group Activity Detector, Online unsupervised known, Un-

• Requires multiple bots

known

• Scalable, Real-time

• Reachability & centrality properties
• C&C channels detection, Monitoring bot activities
• C&C patterns in overlay topology
• Large-scale, Clustering techniques

• Vulnerable to random delay
• P2P protocols dependency, False negatives
• Bootstrap information required

• Mining Concept-Drifting Data Stream
• Packet features are extracted and aggregated into Flow char-

acteristics

• Analysis of trafﬁc features – Fingerprint botnet C&C channels
• Created application proﬁle from known P2P applications
• Based on high-level statistical trafﬁc features
•

• Requires monitoring trafﬁc at each host
• Sampling may miss useful communications patterns
• Evasion by random message padding
• Dependency on the dialog-like pattern
• Deals with the signaling ﬂows as a whole
• Evasion by randomization of inter-packet delays

• Trafﬁc behavior, Detection in C&C phase
• Detection rate 98%
• Anomalous Network trafﬁc
• Real-time detection in C&C phase & attack phase

• Dependency on features selection
• High computational requirement
• Sampling can skip botnet ﬂows
• Vulnerable to obfuscation

• Anomaly-based-behavior, trafﬁc-based analysis
• Independent to protocol and C&C structure, Realtime
• Network trafﬁc, Bot behavior, Detect Bots
• No prior information required
• Remote control process- analysis
• Active-informed probing, Fast, Scalable, Real time

• Detect only active bot(s)
• Targets enterprise network only
• Threshold attack
• Content analysis required
• False positives advanced encryption
• Delayed port binding

C. DNS-based Detection

The fundamental characteristic of the bots is a cluster of
activity, and they frequently use the domain name system
(DNS) to rearrange C&C servers, update their bots’ code,
and conduct attacks. On rare occasions, the same DNS’s bot
trafﬁc—which is distinct from that of actual users—dominates
the DNS trafﬁc [28]. In terms of security, DNS trafﬁc can
be a rich information source. The majority of these DNS-
based detection methods enable the identiﬁcation of infected
computers only based on the network trafﬁc created by botnets.

Untrustworthy computers can then be examined throughout
the botnet lifespan. These methods can identify botnets that
have not yet launched an assault and may still be in the
formation stage. Unfortunately, as DNS trafﬁc volume grows
tremendously, security network administrators and analysts
must contend with the difﬁculty of gathering, retrieving, and
analysing DNS trafﬁc in order to respond to contemporary
Internet threats. In other words, the majority of DNS research
is detrimental to this ﬁeld. The DNS-based anomaly detection
methods are described and assessed in this study [32].

This study suggested Botnet Group Activity Detector, an

online unsupervised botnet detection method (BoTGAD) [33].
BotGAD is only concerned with DNS ﬂow analysis, with
which it attempts to identify coordinated bot activity. A
number of sensors have been put
in various parts of the
network to identify such activity, and bots use the DNS
protocol to resolve the address of potential threats’ domain
names. All of the devices connected to the studied network will
be recognised because the BotGAD is designed to only detect
synchronous action. In contrast to legitimate network trafﬁc,
the bot master typically transmits commands to all of his bots.
For those bots that get the commands, they attempt to send
back the desired results of these commands as soon as feasible.
As a result, the results are transferred quickly. Additionally,
all running bots will deliver results in a synchronous way,
which will increase the resemblance between each network
session set up for bots to communicate with each other’s
masters. For example Elastic Zombie [34] and Blackshaded
[33] botnets sends control packet to C&C conﬁrming activity
at speciﬁed time, response time are 30 seconds. and 45 seconds
respectively. As a result, synchronous activity can be seen
during a variety of botnet operations. BotGAD, in contrast, is
a good method but it also has a number of shortcomings. The
main drawback of BotGAD is that it must divide a complete
activity into time-windows with ﬁxed lengths, which denote
predeﬁned and equal portions of the entire monitoring time.
This is in addition to the fact that it only examines DNS
protocol. In those windows, all source IPs of the examined
destination IP are consolidated. The effectiveness of the group
activity detection is signiﬁcantly impacted by how the time
window’s length is determined.

D. Graph-based detection

Numerous research use various graph-based features to
ﬁnd network anomalies. The spatial relationships are mostly
used by the graph-based features to understand the botnet
network activity. The characteristic patterns of the botnets can
be discovered through the graphical analysis of the botnet
communication interaction. BotGrep is a well-known example
of a graph-based detection. The examination of network ﬂows
gathered over numerous big networks, such as ISP networks,
is how the BotGrep ﬁnds P2P botnets. In the BotGrep
concept, a P2P network is ﬁrst recognised as a group of
hosts in the overall view of Internet trafﬁc. The structure of
Kademlia-based P2P botnets, as seen from a graph theoretical
perspective and as implemented as C&C communications,
heavily inﬂuences the algorithm. To bootstrap the detecting
algorithm, BotGrep requires additional data. It may be difﬁcult
to maintain an overall perspective on Internet communications
when bootstrapping the detection algorithm.

E. Data Mining-based detection

Based on data mining techniques, various research projects
have been proposed to identify malicious activities carried
out by botnets. These methods are capable of categorising
actual unseen threat samples, recognising the threat families
of malicious samples, and deducing the feature. In essence,

these strategies involve the two steps of feature extraction
and categorization. Binary strings, API calls, and programme
actions are just a few of the features that are statistically
extracted as the key features in the feature extraction process.
These features capture the characteristics of the ﬁle samples
dynamically. Once the feature extraction process’s data col-
lecting is complete, the next step, known as classiﬁcation, can
be taken.

In this stage, the ﬁle samples are classiﬁed into appropri-
ate groups or classes based on the examination of feature
categories produced by the feature extraction process, using
intelligent approaches like classiﬁcation or clustering [28]. As
a result, the primary differences between these data mining-
based detection strategies relate to the feature category and
the data mining techniques used. Effective threat detection,
whether from known or unidentiﬁed botnets, heavily depends
on the quality of the trained model. The model must ﬁrst
be built and trained by the system before it can be utilised
to make inferences. Without a high-quality training sample,
the system cannot be trained with good software applications
or malware. In order to extract the features and comprehend
the underlying qualities, each sample is parsed. The training
set then included the conversion of all the extracted features
into digital vectors with labels for each feature, or the so-
called trained model.The classiﬁcation algorithm is then given
the trained model to create the classiﬁers. Depending on the
learned model that is utilised in the system, the classiﬁcation
algorithm can either identify a sequence of unknown input ﬁle
samples as dangerous or legitimate applications.

F. Machine learning-based detection

Based on network trafﬁc, network activity, and a number of
additional features for study, there are numerous approaches
to identify P2P botnets. This section suggested a method for
checking the ﬂexibility, inventiveness, and early detection of
P2P botnets using machine learning. One of the suggested
methods for achieving real-time detection is to have the
system analyse the properties of network trafﬁc ﬂows in brief
time frames. Utilizing a botnet architecture with supervised
machine learning algorithms is another method. This method
uses a framework that extracts conversation-based features via
learning from random forests [28].

G. Generic Frameworks

Additionally, other general frameworks for detecting botnets
have been put out and are based on trafﬁc correlation analysis
and behaviour tracking. One common framework for locating
the botnet is BotMiner. This method is applicable on a small
scale and does not scale well since it relies on network packets
and ﬂow analysis, which takes a lot of ﬁne-grained data to
study the network [28].

IV. OBSERVATIONS AND CHALLENGES

Botnet detection methods are compared based on their
performance in identifying known and unknown bots, protocol
and structure bots, encrypted C&C channel bots, real-time

bots, and accuracy. This comparison are summarize into Table
I and Table II below:

V. CONCLUSION

This research provided a thorough analysis of several facets
of P2P botnets. There is no one detection method that can
consistently identify evolving botnets because each detection
method has its own strengths, weaknesses, and scope. Fur-
thermore, the majority of detection techniques rely on ofﬂine
analysis, grouping, and classiﬁcation, and as a result, do not
take into account the needs of real-time detection. As a result,
the need to build a real-time detection technique for clustering
and categorising botnet trafﬁc as well as on-the-ﬂy mining of
the botnet trafﬁc is now very important.

REFERENCES

[1] Sangita Baruah. Botnet detection: analysis of various techniques.
International Journal of Computational Intelligence & IoT, 2(2), 2019.
[2] Mahmood A Al-Shareeda, Mohammed Anbar, Iznan Husainy Has-
bullah, and Selvakumar Manickam.
Survey of authentication and
privacy schemes in vehicular ad hoc networks. IEEE Sensors Journal,
21(2):2422–2433, 2020.

[3] Mahmood A Al-Shareeda, Mohammed Anbar, Selvakumar Manickam,
and Ali A Yassin. Vppcs: Vanet-based privacy-preserving communica-
tion scheme. IEEE Access, 8:150914–150928, 2020.

[4] Mahmood A Al-Shareeda, Mohammed Anbar, Iznan Husainy Hasbullah,
Selvakumar Manickam, and Sabri M Hanshi. Efﬁcient conditional
privacy preservation with mutual authentication in vehicular ad hoc
networks. IEEE Access, 8:144957–144968, 2020.

[5] Mahmoud Al Shareeda, Ayman Khalil, and Walid Fahs. Realistic
heterogeneous genetic-based rsu placement solution for v2i networks.
Int. Arab J. Inf. Technol., 16(3A):540–547, 2019.

[6] Mahmood A Al-shareeda, Mohammed Anbar, Selvakumar Manickam,
and Iznan H Hasbullah. An efﬁcient identity-based conditional privacy-
preserving authentication scheme for secure communication in a vehic-
ular ad hoc network. Symmetry, 12(10):1687, 2020.

[7] Mahmood A Al-Shareeda, Mohammed Anbar, Murtadha A Alazzawi,
Selvakumar Manickam, and Ahmed Shakir Al-Hiti.
Lswbvm: A
lightweight security without using batch veriﬁcation method scheme for
a vehicle ad hoc network. IEEE Access, 8:170507–170518, 2020.
[8] Mustafa Maad Hamdi, Lukman Audah, Sami Abduljabbar Rashid, and
Mahmood Al Shareeda. Techniques of early incident detection and trafﬁc
monitoring centre in vanets: A review. J. Commun., 15(12):896–904,
2020.

[9] Mahmood A Al-shareeda, Mohammed Anbar, Iznan H Hasbullah,
Selvakumar Manickam, Nibras Abdullah, and Mustafa Maad Hamdi.
Review of prevention schemes for replay attack in vehicular ad hoc
In 2020 IEEE 3rd International Conference on
networks (vanets).
Information Communication and Signal Processing (ICICSP), pages
394–398. IEEE, 2020.

[10] Mahmood A Al-shareeda, Mohammed Anbar, Selvakumar Manickam,
and Iznan H Hasbullah. Review of prevention schemes for man-in-
International
the-middle (mitm) attack in vehicular ad hoc networks.
Journal of Engineering and Management Research, 10, 2020.

[11] Mahmoud Al Shareeda, Ayman Khalil, and Walid Fahs. Towards the
optimization of road side unit placement using genetic algorithm.
In
2018 International Arab Conference on Information Technology (ACIT),
pages 1–5. IEEE, 2018.

[12] Mahmood A Al-shareeda, Mohammed Anbar, Selvakumar Manickam,
and Iznan H Hasbullah. Review of prevention schemes for modiﬁcation
attack in vehicular ad hoc networks. International Journal of Engineer-
ing and Management Research, 10, 2020.

[13] Mustafa Maad Hamdi, Ahmed Shamil Mustafa, Hussain Falih Mahd,
Mohammed Salah Abood, Chanakya Kumar, and Mahmood A Al-
shareeda. Performance analysis of qos in manet based on ieee 802.11
b. In 2020 IEEE international conference for innovation in technology
(INOCON), pages 1–5. IEEE, 2020.

[14] Murtadha A Alazzawi, Hasanain AH Al-behadili, Mohsin N Srayyih Al-
malki, Aqeel Luaibi Challoob, and Mahmood A Al-shareeda. Id-ppa:
robust identity-based privacy-preserving authentication scheme for a
In International Conference on Advances
vehicular ad-hoc network.
in Cyber Security, pages 80–94. Springer, 2020.

[15] Mahmood A Al-Shareeda, Mohammed Anbar, Selvakumar Manickam,
Ayman Khalil, and Iznan Husainy Hasbullah. Security and privacy
schemes in vehicular ad-hoc network with identity-based cryptography
approach: A survey. IEEE Access, 9:121522–121531, 2021.

[16] Mahmood A Al-shareeda, Mohammed Anbar, Selvakumar Manickam,
Iznan H Hasbullah, Nibras Abdullah, Mustafa Maad Hamdi, and
Ahmed Shakir Al-Hiti. Ne-cppa: A new and efﬁcient conditional
privacy-preserving authentication scheme for vehicular ad hoc networks
(vanets). Appl. Math, 14(6):1–10, 2020.

[17] Mahmood A Al-Shareeda, Mohammed Anbar, Selvakumar Manickam,
and Iznan H Hasbullah. A secure pseudonym-based conditional privacy-
preservation authentication scheme in vehicular ad hoc networks. Sen-
sors, 22(5):1696, 2022.

[18] Mahmood A Al-Shareeda, Mohammed Anbar, Selvakumar Manickam,
and Iznan H Hasbullah. Se-cppa: A secure and efﬁcient conditional
privacy-preserving authentication scheme in vehicular ad-hoc networks.
Sensors, 21(24):8206, 2021.

[19] Mahmood A Al-Shareeda, Mohammed Anbar, Selvakumar Manickam,
and Iznan H Hasbullah. Towards identity-based conditional privacy-
preserving authentication scheme for vehicular ad hoc networks. IEEE
Access, 2021.

[20] MAASM Mahmood A Al-shareeda, Mohammed Anbar, Murtadha A
Alazzawi, Selvakumar Manickam, and Iznan H Hasbullah. Security
schemes based conditional privacy-preserving in vehicular ad hoc net-
Indonesian Journal of Electrical Engineering and Computer
works.
Science, 21(1), 2020.

[21] Mahmood A Al-Shareeda, Mohammed Anbar, Selvakumar Manickam,
and Iznan H Hasbullah. Password-guessing attack-aware authentication
scheme based on chinese remainder theorem for 5g-enabled vehicular
networks. Applied Sciences, 12(3):1383, 2022.

[22] Mahmood A Al-shareeda, Murtadha A Alazzawi, Mohammed Anbar,
Selvakumar Manickam, and Ahmed K Al-Ani. A comprehensive survey
on vehicular ad hoc networks (vanets). In 2021 International Conference
on Advanced Computer Applications (ACA), pages 156–160. IEEE,
2021.

[23] Mahmood A Al-shareeda, Mohammed Anbar, Selvakumar Manickam,
Iznan H Hasbullah, Ayman Khalil, Murtadha A Alazzawi, and
Ahmed Shakir Al-Hiti. Proposed efﬁcient conditional privacy-preserving
authentication scheme for v2v and v2i communications based on elliptic
In International
curve cryptography in vehicular ad hoc networks.
Conference on Advances in Cyber Security, pages 588–603. Springer,
2020.

[24] Mahmood A Al-Shareeda, Selvakumar Manickam, Badiea Abdulkarem
Mohammed, Zeyad Ghaleb Al-Mekhlaﬁ, Amjad Qtaish, Abdullah J
Alzahrani, Gharbi Alshammari, Amer A Sallam, and Khalil Almekhlaﬁ.
Chebyshev polynomial-based scheme for resisting side-channel attacks
in 5g-enabled vehicular networks. Applied Sciences, 12(12):5939, 2022.
[25] Mahmood A Al-Shareeda, Selvakumar Manickam, Badiea Abdulkarem
Mohammed, Zeyad Ghaleb Al-Mekhlaﬁ, Amjad Qtaish, Abdullah J
Alzahrani, Gharbi Alshammari, Amer A Sallam, and Khalil Almekhlaﬁ.
Cm-cppa: Chaotic map-based conditional privacy-preserving authenti-
cation scheme in 5g-enabled vehicular networks. Sensors, 22(13):5026,
2022.

[26] Mahmood A Al-Shareeda and Selvakumar Manickam. Security methods
in internet of vehicles. arXiv preprint arXiv:2207.05269, 2022.
[27] Gulbadan Khehra and Sanjeev Sofat. Botnet detection techniques:
In 2018 Second International Conference on Intelligent
A review.
Computing and Control Systems (ICICCS), pages 1319–1326. IEEE,
2018.

[28] Ramesh Singh Rawat, Emmanuel S Pilli, and Ramesh Chandra Joshi.
Survey of peer-to-peer botnets and detection frameworks. Int. J. Netw.
Secur., 20(3):547–557, 2018.

[29] Polly Wainwright and Houssain Kettani. An analysis of botnet models.
In Proceedings of the 2019 3rd International Conference on Compute
and Data Analysis, pages 116–121, 2019.

[30] Di Zhuang and J Morris Chang. Enhanced peerhunter: Detecting peer-to-
peer botnets through network-ﬂow level community behavior analysis.
IEEE Transactions on Information Forensics and Security, 14(6):1485–
1500, 2018.

[31] Jonghoon Kwon, Jehyun Lee, Heejo Lee, and Adrian Perrig. Psybog: A
scalable botnet detection method for large-scale dns trafﬁc. Computer
Networks, 97:48–73, 2016.

[32] Hubert Ostap and Ryszard Antkiewicz. A concept of clustering-based
method for botnet detection. In International Conference on Mathemati-
cal Methods, Models, and Architectures for Computer Network Security,
pages 223–234. Springer, 2017.

[33] Wentao Chang, Aziz Mohaisen, An Wang, and Songqing Chen. Mea-
In Proceedings of the
suring botnets in the wild: Some new trends.
10th ACM Symposium on Information, Computer and Communications
Security, pages 645–650, 2015.

[34] Susel G´ongora Alonso, Isabel de la Torre-D´ıez, Soﬁane Hamrioui,
Miguel L´opez-Coronado, Diego Calvo Barreno, Lola Mor´on Nozaleda,
and Manuel Franco. Data mining algorithms and techniques in mental
health: a systematic review. Journal of medical systems, 42(9):1–15,
2018.

