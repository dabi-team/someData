2
2
0
2

p
e
S
1
2

]

G
L
.
s
c
[

2
v
8
2
1
1
1
.
6
0
2
2
:
v
i
X
r
a

TNTORCH: TENSOR NETWORK LEARNING WITH PYTORCH

Mikhail Usvyatsov1*, Rafael Ballester-Ripoll2*, and Konrad Schindler1

1ETH Zurich, Switzerland,

mikhailu, schindler
{
}
2IE University, Madrid, Spain, rafael.ballester@ie.edu
*Joint ﬁrst authors

@ethz.ch

September 22, 2022

ABSTRACT

We present tntorch, a tensor learning framework that supports multiple decompositions (including
CANDECOMP/PARAFAC, Tucker, and Tensor Train) under a uniﬁed interface. With our library, the
user can learn and handle low-rank tensors with automatic differentiation, seamless GPU support,
and the convenience of PyTorch’s API. Besides decomposition algorithms, tntorch implements dif-
ferentiable tensor algebra, rank truncation, cross-approximation, batch processing, comprehensive
tensor arithmetics, and more.

Keywords tensor decompositions

pytorch

·

·

low-rank methods

·

multilinear algebra

1

Introduction

In many machine learning and data analysis tasks one is faced with multi-dimensional data arrays. Tensors are a
powerful tool to represent and handle such data, but often constitute a bottleneck in terms of storage and computation.
Tensor decompositions expand a tensor into a set of separable terms. If the tensor has low rank (i.e., there are much
fewer degrees of freedom than tensor elements), then such a decomposition can dramatically reduce the representation
size (Kolda and Bader, 2009; Cichocki et al., 2016; Khrulkov et al., 2019).

Tensor decompositions play an increasingly important role in machine learning: they are used to factorize neural
network weights (Novikov et al., 2015; Gusak et al., 2019; Wang et al., 2020; Idelbayev and Carreira-Perpi˜n´an, 2020;
Kossaiﬁ et al., 2020), to accelerate learning and inference (Ma et al., 2019; Hrinchuk et al., 2019; Usvyatsov et al.,
2021), to impose priors that improve accuracy (Kuznetsov et al., 2019; He et al., 2022) and robustness (Kolbeinsson
et al., 2021), etc. For more applications of tensors in machine learning see (Panagakis et al., 2021). Importantly, the
distinction between the different classical decomposition schemes has become blurred, as newer types of low-rank
constraints and tensor indexing schemes have gained popularity (Novikov et al., 2015; Khrulkov et al., 2019; Cichocki
et al., 2016; Usvyatsov et al., 2021). There exist multiple frameworks (Novikov et al., 2020; Kossaiﬁ et al., 2019)
with emphasis on different aspects. We believe that more than ever, tensor software must be ﬂexible regarding the
underlying tensor formats, while exposing a natural and accessible interface to the user.

To this end, we introduce tntorch (github.com/rballester/tntorch), an open-source Python package that ab-
stracts the choice of format, while providing a wide range of tools for tensor learning, manipulation, and analysis.
Compared to similar recent libraries T3F (Novikov et al., 2020), TensorLy (Kossaiﬁ et al., 2019), TedNet (Pan et al.,
2021), TensorD (Hao et al., 2018), TensorNetwork (Roberts et al., 2019), and tt-pytorch (Khrulkov et al., 2019),
tntorch emphasizes an easy-to-use, decomposition-independent interface inherited from PyTorch1. The package’s
API is fully documented and features a score of tutorial Jupyter notebooks (tntorch.readthedocs.io) across a
variety of use cases. See Appendix A.2 for a point-by-point comparison with the aforementioned software packages
as of June 2022.

1tntorch can be installed conveniently via the PyPI package manager (command: pip install tntorch)

 
 
 
 
 
 
tntorch: Tensor Network Learning with PyTorch

2 Supported Tensor Formats

tntorch supports several decomposition models that are important in the context of machine learning, including CAN-
DEDOMP/PARAFAC (CP, Harshman, 1970), the Tucker decomposition2 (de Lathauwer et al., 2000), and the tensor
train (TT, Oseledets, 2011). These formats are encapsulated into a single class Tensor and share a common interface
for all supported operations, which in turn replicate the API of PyTorch as closely as possible. Internally, the decom-
position is stored as a low-rank tensor network: a graph whose nodes are low-dimensional tensors and whose edges are
tensor dimensions that may be contracted together (Cichocki et al., 2016) by performing the corresponding operation
(e.g., a matrix-vector product). Tensors in tntorch can mix more than one format, e.g., one may attach Tucker factors
to TT cores, interleave CP and TT cores, or even blend all three formats in various ways. See Fig. 1 for illustrative
examples.

(a) 4D CP

(b) 4D TT-Tucker

(c) 5D CP-TT-Tucker (one of many possible combinations)

Figure 1: Examples of tensor networks that can be assembled in tntorch. A square represents a matrix, as used for CP
factors, Tucker factors, and for the ﬁrst and last cores of a TT; a circle is a 3D tensor and is used for internal TT cores;
a dot is a 3D copy tensor (Biamonte, 2019), i.e., a super-diagonal tensor with ones along the diagonal.

In tntorch, every decomposition consists of a sequence of cores and, optionally, one or more factors. All nodes of
the resulting tensor network may also be accessed directly if the user desires low-level control. By virtue of this
abstraction, other tensor formats such as INDSCAL, CANDELINC, DEDICOM, and PARATUCK2 (Kolda and Bader,
2009) can be represented as Tensor objects, too. See documentation for details.

2The Tucker tensor is represented as a TT with arbitrary ranks, which has equal expressive power. Furthermore, Tucker fac-
tors are implemented as standard unconstrained matrices, in contrast to other implementations that often implement them as uni-
tary/orthogonal matrices.

2

<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="ax60jYcSG4Nfcg/uajxKffRwR18=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lE1GPBi71VtB/QhrLZTtqlm03Y3Qgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSK4Nq777RTW1jc2t4rbpZ3dvf2D8uFRS8epYthksYhVJ6AaBZfYNNwI7CQKaRQIbAfj25nffkKleSwfzSRBP6JDyUPOqLHSQ73v9csVt+rOQVaJl5MK5Gj0y1+9QczSCKVhgmrd9dzE+BlVhjOB01Iv1ZhQNqZD7FoqaYTaz+anTsmZVQYkjJUtachc/T2R0UjrSRTYzoiakV72ZuJ/Xjc14Y2fcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6JRuCt/zyKmldVL2r6uX9ZaVWz+Mowgmcwjl4cA01uIMGNIHBEJ7hFd4c4bw4787HorXg5DPH8AfO5w/JEI2B</latexit>I1<latexit sha1_base64="nt4/tv9DSYXOmWHfhB9P0oOiKxw=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXswtonlAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5Pb2Nza3snvFvb2Dw6PiscnLR2nimGTxSJWnYBqFFxi03AjsJMopFEgsB2Mb+d++wmV5rF8NJME/YgOJQ85o8ZKD/V+pV8suWV3AbJOvIyUIEOjX/zqDWKWRigNE1Trrucmxp9SZTgTOCv0Uo0JZWM6xK6lkkao/eni1Bm5sMqAhLGyJQ1ZqL8npjTSehIFtjOiZqRXvbn4n9dNTXjjT7lMUoOSLReFqSAmJvO/yYArZEZMLKFMcXsrYSOqKDM2nYINwVt9eZ20KmXvqly9r5Zq9SyOPJzBOVyCB9dQgztoQBMYDOEZXuHNEc6L8+58LFtzTjZzCn/gfP4AypSNgg==</latexit>I2<latexit sha1_base64="jeo7bGuVhPb097yZAFpIOuAos1I=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL+YW0TwgWcLsZDYZMju7zPQKIeQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777eTW1jc2t/LbhZ3dvf2D4uFR08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup35rSeujYjVI44T7kd0oEQoGEUrPdR6l71iyS27c5BV4mWkBBnqveJXtx+zNOIKmaTGdDw3QX9CNQom+bTQTQ1PKBvRAe9YqmjEjT+ZnzolZ1bpkzDWthSSufp7YkIjY8ZRYDsjikOz7M3E/7xOiuGNPxEqSZErtlgUppJgTGZ/k77QnKEcW0KZFvZWwoZUU4Y2nYINwVt+eZU0L8reVblyXylVa1kceTiBUzgHD66hCndQhwYwGMAzvMKbI50X5935WLTmnGzmGP7A+fwBzBiNgw==</latexit>I3<latexit sha1_base64="OaXX5vJ7xYZKyu/1PaUieyt0qMs=">AAAB6nicbVBNS8NAEJ34WetX1aOXxSJ4KokU9VjwYm8V7Qe0oWy2k3bpZhN2N0IJ/QlePCji1V/kzX/jts1BWx8MPN6bYWZekAiujet+O2vrG5tb24Wd4u7e/sFh6ei4peNUMWyyWMSqE1CNgktsGm4EdhKFNAoEtoPx7cxvP6HSPJaPZpKgH9Gh5CFn1Fjpod6v9ktlt+LOQVaJl5My5Gj0S1+9QczSCKVhgmrd9dzE+BlVhjOB02Iv1ZhQNqZD7FoqaYTaz+anTsm5VQYkjJUtachc/T2R0UjrSRTYzoiakV72ZuJ/Xjc14Y2fcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6RRuCt/zyKmldVryrSvW+Wq7V8zgKcApncAEeXEMN7qABTWAwhGd4hTdHOC/Ou/OxaF1z8pkT+APn8wfNnI2E</latexit>I4<latexit sha1_base64="Yslmet6edIHpsAq3pHuxc7QXtnc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyKqMeAF73FRx6QLGF2MpsMmZ1dZnqFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777RRWVtfWN4qbpa3tnd298v5B08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup76rSeujYjVI44T7kd0oEQoGEUrPdz3vF654lbdGcgy8XJSgRz1Xvmr249ZGnGFTFJjOp6boJ9RjYJJPil1U8MTykZ0wDuWKhpx42ezUyfkxCp9EsbalkIyU39PZDQyZhwFtjOiODSL3lT8z+ukGF75mVBJilyx+aIwlQRjMv2b9IXmDOXYEsq0sLcSNqSaMrTplGwI3uLLy6R5VvUuqud355XabR5HEY7gGE7Bg0uowQ3UoQEMBvAMr/DmSOfFeXc+5q0FJ585hD9wPn8A1saNig==</latexit>R1<latexit sha1_base64="vYMFgKSwspAn9dqqFbAyqPemg50=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWH3lAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5NbW9/Y3MpvF3Z29/YPiodHTR2nimGDxSJW7YBqFFxiw3AjsJ0opFEgsBWMrmd+6wmV5rF8NOME/YgOJA85o8ZKD/e9Sq9YcsvuHGSVeBkpQYZ6r/jV7ccsjVAaJqjWHc9NjD+hynAmcFrophoTykZ0gB1LJY1Q+5P5qVNyZpU+CWNlSxoyV39PTGik9TgKbGdEzVAvezPxP6+TmvDKn3CZpAYlWywKU0FMTGZ/kz5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf88ippVsreRbl6Vy3VbrM48nACp3AOHlxCDW6gDg1gMIBneIU3RzgvzrvzsWjNOdnMMfyB8/kD2EqNiw==</latexit>R2<latexit sha1_base64="Z8nir680/HG232gSyGXMOi1DOsc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL3qLjzwgWcLspJMMmZ1dZmaFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7glhwbVz328mtrK6tb+Q3C1vbO7t7xf2Dho4SxbDOIhGpVkA1Ci6xbrgR2IoV0jAQ2AxG11O/+YRK80g+mnGMfkgHkvc5o8ZKD/fd826x5JbdGcgy8TJSggy1bvGr04tYEqI0TFCt254bGz+lynAmcFLoJBpjykZ0gG1LJQ1R++ns1Ak5sUqP9CNlSxoyU39PpDTUehwGtjOkZqgXvan4n9dOTP/KT7mME4OSzRf1E0FMRKZ/kx5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf48jJpnJW9i3LlrlKq3mZx5OEIjuEUPLiEKtxADerAYADP8ApvjnBenHfnY96ac7KZQ/gD5/MH2c6NjA==</latexit>R3<latexit sha1_base64="ax60jYcSG4Nfcg/uajxKffRwR18=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lE1GPBi71VtB/QhrLZTtqlm03Y3Qgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSK4Nq777RTW1jc2t4rbpZ3dvf2D8uFRS8epYthksYhVJ6AaBZfYNNwI7CQKaRQIbAfj25nffkKleSwfzSRBP6JDyUPOqLHSQ73v9csVt+rOQVaJl5MK5Gj0y1+9QczSCKVhgmrd9dzE+BlVhjOB01Iv1ZhQNqZD7FoqaYTaz+anTsmZVQYkjJUtachc/T2R0UjrSRTYzoiakV72ZuJ/Xjc14Y2fcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6JRuCt/zyKmldVL2r6uX9ZaVWz+Mowgmcwjl4cA01uIMGNIHBEJ7hFd4c4bw4787HorXg5DPH8AfO5w/JEI2B</latexit>I1<latexit sha1_base64="nt4/tv9DSYXOmWHfhB9P0oOiKxw=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXswtonlAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5Pb2Nza3snvFvb2Dw6PiscnLR2nimGTxSJWnYBqFFxi03AjsJMopFEgsB2Mb+d++wmV5rF8NJME/YgOJQ85o8ZKD/V+pV8suWV3AbJOvIyUIEOjX/zqDWKWRigNE1Trrucmxp9SZTgTOCv0Uo0JZWM6xK6lkkao/eni1Bm5sMqAhLGyJQ1ZqL8npjTSehIFtjOiZqRXvbn4n9dNTXjjT7lMUoOSLReFqSAmJvO/yYArZEZMLKFMcXsrYSOqKDM2nYINwVt9eZ20KmXvqly9r5Zq9SyOPJzBOVyCB9dQgztoQBMYDOEZXuHNEc6L8+58LFtzTjZzCn/gfP4AypSNgg==</latexit>I2<latexit sha1_base64="jeo7bGuVhPb097yZAFpIOuAos1I=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL+YW0TwgWcLsZDYZMju7zPQKIeQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777eTW1jc2t/LbhZ3dvf2D4uFR08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup35rSeujYjVI44T7kd0oEQoGEUrPdR6l71iyS27c5BV4mWkBBnqveJXtx+zNOIKmaTGdDw3QX9CNQom+bTQTQ1PKBvRAe9YqmjEjT+ZnzolZ1bpkzDWthSSufp7YkIjY8ZRYDsjikOz7M3E/7xOiuGNPxEqSZErtlgUppJgTGZ/k77QnKEcW0KZFvZWwoZUU4Y2nYINwVt+eZU0L8reVblyXylVa1kceTiBUzgHD66hCndQhwYwGMAzvMKbI50X5935WLTmnGzmGP7A+fwBzBiNgw==</latexit>I3<latexit sha1_base64="OaXX5vJ7xYZKyu/1PaUieyt0qMs=">AAAB6nicbVBNS8NAEJ34WetX1aOXxSJ4KokU9VjwYm8V7Qe0oWy2k3bpZhN2N0IJ/QlePCji1V/kzX/jts1BWx8MPN6bYWZekAiujet+O2vrG5tb24Wd4u7e/sFh6ei4peNUMWyyWMSqE1CNgktsGm4EdhKFNAoEtoPx7cxvP6HSPJaPZpKgH9Gh5CFn1Fjpod6v9ktlt+LOQVaJl5My5Gj0S1+9QczSCKVhgmrd9dzE+BlVhjOB02Iv1ZhQNqZD7FoqaYTaz+anTsm5VQYkjJUtachc/T2R0UjrSRTYzoiakV72ZuJ/Xjc14Y2fcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6RRuCt/zyKmldVryrSvW+Wq7V8zgKcApncAEeXEMN7qABTWAwhGd4hTdHOC/Ou/OxaF1z8pkT+APn8wfNnI2E</latexit>I4<latexit sha1_base64="l6Vx2nIfuEEgpwFpFyh3rELtwjQ=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lE1GPBi94qtR/QhrLZTtqlm03Y3Qgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSK4Nq777RTW1jc2t4rbpZ3dvf2D8uFRS8epYthksYhVJ6AaBZfYNNwI7CQKaRQIbAfj25nffkKleSwfzSRBP6JDyUPOqLFSo9H3+uWKW3XnIKvEy0kFctT75a/eIGZphNIwQbXuem5i/Iwqw5nAaamXakwoG9Mhdi2VNELtZ/NTp+TMKgMSxsqWNGSu/p7IaKT1JApsZ0TNSC97M/E/r5ua8MbPuExSg5ItFoWpICYms7/JgCtkRkwsoUxxeythI6ooMzadkg3BW355lbQuqt5V9fLhslK7z+Mowgmcwjl4cA01uIM6NIHBEJ7hFd4c4bw4787HorXg5DPH8AfO5w/YTI2L</latexit>S1<latexit sha1_base64="o6g41GfinjmbY1/IBeIcVRY0YDs=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWiXlAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5Pb2Nza3snvFvb2Dw6PiscnLR2nimGTxSJWnYBqFFxi03AjsJMopFEgsB2Mb+d++wmV5rF8NJME/YgOJQ85o8ZKjUa/0i+W3LK7AFknXkZKkKHeL371BjFLI5SGCap113MT40+pMpwJnBV6qcaEsjEdYtdSSSPU/nRx6oxcWGVAwljZkoYs1N8TUxppPYkC2xlRM9Kr3lz8z+umJrzxp1wmqUHJlovCVBATk/nfZMAVMiMmllCmuL2VsBFVlBmbTsGG4K2+vE5albJ3Va4+VEu1+yyOPJzBOVyCB9dQgzuoQxMYDOEZXuHNEc6L8+58LFtzTjZzCn/gfP4A2dCNjA==</latexit>S2<latexit sha1_base64="kQZ8v2oIcTXRAS1xT5nCYIYyt8g=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL3qLxDwgWcLspDcZMju7zMwKIeQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGtzO/9YRK81g+mnGCfkQHkoecUWOler132SuW3LI7B1klXkZKkKHWK351+zFLI5SGCap1x3MT40+oMpwJnBa6qcaEshEdYMdSSSPU/mR+6pScWaVPwljZkobM1d8TExppPY4C2xlRM9TL3kz8z+ukJrzxJ1wmqUHJFovCVBATk9nfpM8VMiPGllCmuL2VsCFVlBmbTsGG4C2/vEqaF2Xvqlx5qJSq91kceTiBUzgHD66hCndQgwYwGMAzvMKbI5wX5935WLTmnGzmGP7A+fwB21SNjQ==</latexit>S3<latexit sha1_base64="3RIFiqtdWosQfG1EvwJyKofY3hw=">AAAB6nicbVBNS8NAEJ34WetX1aOXxSJ4KokU9VjwordK7Qe0oWy2k3bpZhN2N0IJ/QlePCji1V/kzX/jts1BWx8MPN6bYWZekAiujet+O2vrG5tb24Wd4u7e/sFh6ei4peNUMWyyWMSqE1CNgktsGm4EdhKFNAoEtoPx7cxvP6HSPJaPZpKgH9Gh5CFn1Fip0ehX+6WyW3HnIKvEy0kZctT7pa/eIGZphNIwQbXuem5i/Iwqw5nAabGXakwoG9Mhdi2VNELtZ/NTp+TcKgMSxsqWNGSu/p7IaKT1JApsZ0TNSC97M/E/r5ua8MbPuExSg5ItFoWpICYms7/JgCtkRkwsoUxxeythI6ooMzadog3BW355lbQuK95VpfpQLdfu8zgKcApncAEeXEMN7qAOTWAwhGd4hTdHOC/Ou/OxaF1z8pkT+APn8wfc2I2O</latexit>S4<latexit sha1_base64="ax60jYcSG4Nfcg/uajxKffRwR18=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lE1GPBi71VtB/QhrLZTtqlm03Y3Qgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSK4Nq777RTW1jc2t4rbpZ3dvf2D8uFRS8epYthksYhVJ6AaBZfYNNwI7CQKaRQIbAfj25nffkKleSwfzSRBP6JDyUPOqLHSQ73v9csVt+rOQVaJl5MK5Gj0y1+9QczSCKVhgmrd9dzE+BlVhjOB01Iv1ZhQNqZD7FoqaYTaz+anTsmZVQYkjJUtachc/T2R0UjrSRTYzoiakV72ZuJ/Xjc14Y2fcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6JRuCt/zyKmldVL2r6uX9ZaVWz+Mowgmcwjl4cA01uIMGNIHBEJ7hFd4c4bw4787HorXg5DPH8AfO5w/JEI2B</latexit>I1<latexit sha1_base64="nt4/tv9DSYXOmWHfhB9P0oOiKxw=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXswtonlAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5Pb2Nza3snvFvb2Dw6PiscnLR2nimGTxSJWnYBqFFxi03AjsJMopFEgsB2Mb+d++wmV5rF8NJME/YgOJQ85o8ZKD/V+pV8suWV3AbJOvIyUIEOjX/zqDWKWRigNE1Trrucmxp9SZTgTOCv0Uo0JZWM6xK6lkkao/eni1Bm5sMqAhLGyJQ1ZqL8npjTSehIFtjOiZqRXvbn4n9dNTXjjT7lMUoOSLReFqSAmJvO/yYArZEZMLKFMcXsrYSOqKDM2nYINwVt9eZ20KmXvqly9r5Zq9SyOPJzBOVyCB9dQgztoQBMYDOEZXuHNEc6L8+58LFtzTjZzCn/gfP4AypSNgg==</latexit>I2<latexit sha1_base64="OaXX5vJ7xYZKyu/1PaUieyt0qMs=">AAAB6nicbVBNS8NAEJ34WetX1aOXxSJ4KokU9VjwYm8V7Qe0oWy2k3bpZhN2N0IJ/QlePCji1V/kzX/jts1BWx8MPN6bYWZekAiujet+O2vrG5tb24Wd4u7e/sFh6ei4peNUMWyyWMSqE1CNgktsGm4EdhKFNAoEtoPx7cxvP6HSPJaPZpKgH9Gh5CFn1Fjpod6v9ktlt+LOQVaJl5My5Gj0S1+9QczSCKVhgmrd9dzE+BlVhjOB02Iv1ZhQNqZD7FoqaYTaz+anTsm5VQYkjJUtachc/T2R0UjrSRTYzoiakV72ZuJ/Xjc14Y2fcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6RRuCt/zyKmldVryrSvW+Wq7V8zgKcApncAEeXEMN7qABTWAwhGd4hTdHOC/Ou/OxaF1z8pkT+APn8wfNnI2E</latexit>I4<latexit sha1_base64="jeo7bGuVhPb097yZAFpIOuAos1I=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL+YW0TwgWcLsZDYZMju7zPQKIeQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777eTW1jc2t/LbhZ3dvf2D4uFR08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup35rSeujYjVI44T7kd0oEQoGEUrPdR6l71iyS27c5BV4mWkBBnqveJXtx+zNOIKmaTGdDw3QX9CNQom+bTQTQ1PKBvRAe9YqmjEjT+ZnzolZ1bpkzDWthSSufp7YkIjY8ZRYDsjikOz7M3E/7xOiuGNPxEqSZErtlgUppJgTGZ/k77QnKEcW0KZFvZWwoZUU4Y2nYINwVt+eZU0L8reVblyXylVa1kceTiBUzgHD66hCndQhwYwGMAzvMKbI50X5935WLTmnGzmGP7A+fwBzBiNgw==</latexit>I3<latexit sha1_base64="Yslmet6edIHpsAq3pHuxc7QXtnc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyKqMeAF73FRx6QLGF2MpsMmZ1dZnqFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777RRWVtfWN4qbpa3tnd298v5B08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup76rSeujYjVI44T7kd0oEQoGEUrPdz3vF654lbdGcgy8XJSgRz1Xvmr249ZGnGFTFJjOp6boJ9RjYJJPil1U8MTykZ0wDuWKhpx42ezUyfkxCp9EsbalkIyU39PZDQyZhwFtjOiODSL3lT8z+ukGF75mVBJilyx+aIwlQRjMv2b9IXmDOXYEsq0sLcSNqSaMrTplGwI3uLLy6R5VvUuqud355XabR5HEY7gGE7Bg0uowQ3UoQEMBvAMr/DmSOfFeXc+5q0FJ585hD9wPn8A1saNig==</latexit>R1<latexit sha1_base64="Yslmet6edIHpsAq3pHuxc7QXtnc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyKqMeAF73FRx6QLGF2MpsMmZ1dZnqFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777RRWVtfWN4qbpa3tnd298v5B08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup76rSeujYjVI44T7kd0oEQoGEUrPdz3vF654lbdGcgy8XJSgRz1Xvmr249ZGnGFTFJjOp6boJ9RjYJJPil1U8MTykZ0wDuWKhpx42ezUyfkxCp9EsbalkIyU39PZDQyZhwFtjOiODSL3lT8z+ukGF75mVBJilyx+aIwlQRjMv2b9IXmDOXYEsq0sLcSNqSaMrTplGwI3uLLy6R5VvUuqud355XabR5HEY7gGE7Bg0uowQ3UoQEMBvAMr/DmSOfFeXc+5q0FJ585hD9wPn8A1saNig==</latexit>R1<latexit sha1_base64="Yslmet6edIHpsAq3pHuxc7QXtnc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyKqMeAF73FRx6QLGF2MpsMmZ1dZnqFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777RRWVtfWN4qbpa3tnd298v5B08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup76rSeujYjVI44T7kd0oEQoGEUrPdz3vF654lbdGcgy8XJSgRz1Xvmr249ZGnGFTFJjOp6boJ9RjYJJPil1U8MTykZ0wDuWKhpx42ezUyfkxCp9EsbalkIyU39PZDQyZhwFtjOiODSL3lT8z+ukGF75mVBJilyx+aIwlQRjMv2b9IXmDOXYEsq0sLcSNqSaMrTplGwI3uLLy6R5VvUuqud355XabR5HEY7gGE7Bg0uowQ3UoQEMBvAMr/DmSOfFeXc+5q0FJ585hD9wPn8A1saNig==</latexit>R1<latexit sha1_base64="vYMFgKSwspAn9dqqFbAyqPemg50=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWH3lAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5NbW9/Y3MpvF3Z29/YPiodHTR2nimGDxSJW7YBqFFxiw3AjsJ0opFEgsBWMrmd+6wmV5rF8NOME/YgOJA85o8ZKD/e9Sq9YcsvuHGSVeBkpQYZ6r/jV7ccsjVAaJqjWHc9NjD+hynAmcFrophoTykZ0gB1LJY1Q+5P5qVNyZpU+CWNlSxoyV39PTGik9TgKbGdEzVAvezPxP6+TmvDKn3CZpAYlWywKU0FMTGZ/kz5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf88ippVsreRbl6Vy3VbrM48nACp3AOHlxCDW6gDg1gMIBneIU3RzgvzrvzsWjNOdnMMfyB8/kD2EqNiw==</latexit>R2<latexit sha1_base64="vYMFgKSwspAn9dqqFbAyqPemg50=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWH3lAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5NbW9/Y3MpvF3Z29/YPiodHTR2nimGDxSJW7YBqFFxiw3AjsJ0opFEgsBWMrmd+6wmV5rF8NOME/YgOJA85o8ZKD/e9Sq9YcsvuHGSVeBkpQYZ6r/jV7ccsjVAaJqjWHc9NjD+hynAmcFrophoTykZ0gB1LJY1Q+5P5qVNyZpU+CWNlSxoyV39PTGik9TgKbGdEzVAvezPxP6+TmvDKn3CZpAYlWywKU0FMTGZ/kz5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf88ippVsreRbl6Vy3VbrM48nACp3AOHlxCDW6gDg1gMIBneIU3RzgvzrvzsWjNOdnMMfyB8/kD2EqNiw==</latexit>R2<latexit sha1_base64="vYMFgKSwspAn9dqqFbAyqPemg50=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWH3lAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5NbW9/Y3MpvF3Z29/YPiodHTR2nimGDxSJW7YBqFFxiw3AjsJ0opFEgsBWMrmd+6wmV5rF8NOME/YgOJA85o8ZKD/e9Sq9YcsvuHGSVeBkpQYZ6r/jV7ccsjVAaJqjWHc9NjD+hynAmcFrophoTykZ0gB1LJY1Q+5P5qVNyZpU+CWNlSxoyV39PTGik9TgKbGdEzVAvezPxP6+TmvDKn3CZpAYlWywKU0FMTGZ/kz5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf88ippVsreRbl6Vy3VbrM48nACp3AOHlxCDW6gDg1gMIBneIU3RzgvzrvzsWjNOdnMMfyB8/kD2EqNiw==</latexit>R2<latexit sha1_base64="7KDK5iWGXbcYbv8Q3G9p9UjxjRM=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexKfBwDXswtonlAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5NbW9/Y3MpvF3Z29/YPiodHTR2nimGDxSJW7YBqFFxiw3AjsJ0opFEgsBWMbmd+6wmV5rF8NOME/YgOJA85o8ZKD7XeZa9YcsvuHGSVeBkpQYZ6r/jV7ccsjVAaJqjWHc9NjD+hynAmcFrophoTykZ0gB1LJY1Q+5P5qVNyZpU+CWNlSxoyV39PTGik9TgKbGdEzVAvezPxP6+TmvDGn3CZpAYlWywKU0FMTGZ/kz5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf88ippXpS9q3LlvlKq1rI48nACp3AOHlxDFe6gDg1gMIBneIU3RzgvzrvzsWjNOdnMMfyB8/kDzyCNhQ==</latexit>I5<latexit sha1_base64="l6Vx2nIfuEEgpwFpFyh3rELtwjQ=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lE1GPBi94qtR/QhrLZTtqlm03Y3Qgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSK4Nq777RTW1jc2t4rbpZ3dvf2D8uFRS8epYthksYhVJ6AaBZfYNNwI7CQKaRQIbAfj25nffkKleSwfzSRBP6JDyUPOqLFSo9H3+uWKW3XnIKvEy0kFctT75a/eIGZphNIwQbXuem5i/Iwqw5nAaamXakwoG9Mhdi2VNELtZ/NTp+TMKgMSxsqWNGSu/p7IaKT1JApsZ0TNSC97M/E/r5ua8MbPuExSg5ItFoWpICYms7/JgCtkRkwsoUxxeythI6ooMzadkg3BW355lbQuqt5V9fLhslK7z+Mowgmcwjl4cA01uIM6NIHBEJ7hFd4c4bw4787HorXg5DPH8AfO5w/YTI2L</latexit>S1<latexit sha1_base64="o6g41GfinjmbY1/IBeIcVRY0YDs=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWiXlAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5Pb2Nza3snvFvb2Dw6PiscnLR2nimGTxSJWnYBqFFxi03AjsJMopFEgsB2Mb+d++wmV5rF8NJME/YgOJQ85o8ZKjUa/0i+W3LK7AFknXkZKkKHeL371BjFLI5SGCap113MT40+pMpwJnBV6qcaEsjEdYtdSSSPU/nRx6oxcWGVAwljZkoYs1N8TUxppPYkC2xlRM9Kr3lz8z+umJrzxp1wmqUHJlovCVBATk/nfZMAVMiMmllCmuL2VsBFVlBmbTsGG4K2+vE5albJ3Va4+VEu1+yyOPJzBOVyCB9dQgzuoQxMYDOEZXuHNEc6L8+58LFtzTjZzCn/gfP4A2dCNjA==</latexit>S2tntorch: Tensor Network Learning with PyTorch

3 Features and Operations

3.1 Learning Tensors

Given a data tensor, tntorch can ﬁt a decomposition in multiple ways. E.g., gradient descent is available out-of-the-
box, thanks to PyTorch’s automatic differentiation and the numerous optimizers it provides. It is very general, as it
can be used to learn incomplete tensors, tensors with constraints, or to add various loss terms. For the case of learning
TT tensors, a cross-approximation routine is provided that performs adaptive sampling (Oseledets and Tyrtyshnikov,
2010). Other methods include TT-SVD (Oseledets, 2011), higher-order SVD and alternating least squares (Kolda and
Bader, 2009) for the TT, Tucker and CP formats, respectively.

3.2 Tensor Arithmetics

×

matrix and tensor

vector products, element-wise operations, dot products, convolution,
The library supports tensor
concatenation, mode reordering, padding, orthogonalization, rank truncation, and more. These are useful for common
use cases in machine learning: tensor completion; learning low-rank layers or compressing/approximating existing
layers; applying multi-linear operators; dimensionality reduction; etc. Advanced element-wise functions such as /,
exp, and tanh can be approximately computed via cross-approximation (currently available for TT tensors). Besides
these features, tntorch also implements further, miscellaneous tools, such as: sensitivity analysis; Boolean algebra
operations; statistical moments; a smart reduction operator; sampling from TT-compressed distributions; multi-linear
polynomial expansions; etc.

×

3.3 Slicing and Indexing

Any Tensor may be accessed in several ways:

- Basic indexing via slices in the format start:stop:step and variants, as in t[::-1];
- Fancy indexing via handcrafted, possibly irregular slices, e.g. by passing a list of indices as in t[:, (0, 3,

4)];

- Indexing by NumPy arrays. For example, accessing an N -dimensional tensor by an M

returns a 1D tensor with M elements.

N NumPy matrix

×

- Insertion of dummy dimensions, as in t[None, :], or ellipsis, as in t[..., 3];
- Broadcasting is supported, i.e., operations will be repeated along one or more dimensions when their sizes do

not match. For example, if t is a 1D tensor, then t[:, None] + t[None, :] is a square matrix.
Such read operations match the behavior of PyTorch tensors almost exactly3. They are performed in the compressed
domain and return a compressed Tensor. Moreover, tensors can be edited using the expected syntax, as in a[:, 0,
:] = 2 * b[0, :, :] or t[(0, 2), ..., -1, ::3] += 1. All read/write operations preserve differentiability,
a behavior at present unique to tntorch, to the best of our knowledge.

3.4 Batched Tensors

Batch processing is an important capability to increase the efﬁciency of tensor-based learning. Besides being
differentiable and GPU-ready, decomposition and arithmetic operations in tntorch work on batches of tensors in any
format; internally, a batch is represented as an extra dimension in every node of the tensor network. As an example,
we can decompose multiple tensors into TT cores at once using the TT-SVD algorithm (Oseledets, 2011), with linear
algebra operations applied in batches. See Section 4 for a benchmark.

3.5 Tensor Train Matrices

The TT matrix decomposition has recently become a particularly relevant format, because it is, among others, well-
suited to compress neural weight layers (Novikov et al., 2015). Unlike standard tensors, a TT matrix has a different
indexing scheme, with two sets of row and column indices. As a consequence, TT matrices come with a distinct set of
vector multiplication. Therefore, they have their own class
computation rules for standard operations such as matrix
TTMatrix, with a separate API. See additional details in Appendix A.4

×

3Interleaving fancy and basic indices is not supported, as it is in general computationally expensive.

3

tntorch: Tensor Network Learning with PyTorch

4 Performance

We benchmark tntorch’s running times across four representative operations: TT decomposition using the TT-SVD
algorithm, cross-approximation, and two arithmetic operations that can be achieved by direct manipulation of TT
cores (Oseledets, 2011). We test four modalities: CPU vs. GPU, and in both cases for loop vs. vectorized batch
processing. As a baseline, we also compare with the Python library ttpy (Oseledets, 2015), which is written in NumPy
and FORTRAN and also implements these four operations. All experiments use randomly initialized tensors of TT-
rank R = 20, physical dimension sizes I = 15, . . . , 45, and number of dimensions N = 8 (except for the TT-SVD
experiment, where N = 4). We used PyTorch 1.13.0a0+git87148f2 (compiled from source) and NumPy 1.22.4 on an
Intel(R) Core(TM) i7-7700K CPU with 64Gb RAM and an NVIDIA GeForce RTX 3090 GPU.

Results are reported in Fig. 2. Note that the GPU is more performant on both batch and non-batch modes. Also,
tntorch scales better (or similarly, for cross-approximation) than the baseline w.r.t. the tensor size, and is thus a good
ﬁt for data-intensive ML applications.

5 Conclusions

We have introduced tntorch, a PyTorch-powered library that uniﬁes multiple efﬁcient tensor formats under the same
interface, together with a rich suite of learning and analysis routines. The library comes with many standard features
of modern machine learning frameworks, including auto-differentiation, GPU and batch processing, and advanced
indexing. tntorch imitates the look and feel of standard PyTorch tensors, while making the power of low-rank tensor
decompositions accessible for machine learning.

4

tntorch: Tensor Network Learning with PyTorch

(a) Element-wise sum

(b) Element-wise product

(c) TT-SVD

(d) Cross-approximation

Figure 2: Runtimes of four operations with varying tensor sizes (average time per processed object, over 10 runs). The
batch size is set to B = 32. Best viewed in color.

5

15202530354045TensorsizeI10−410−3Time(s)tntorch(CPU)tntorch(GPU)ttpytntorch(batchCPU)tntorch(batchGPU)15202530354045TensorsizeI10−410−310−210−1Time(s)tntorch(CPU)tntorch(GPU)ttpytntorch(batchCPU)tntorch(batchGPU)15202530354045TensorsizeI10−210−1100Time(s)tntorch(CPU)tntorch(GPU)ttpytntorch(batchCPU)tntorch(batchGPU)15202530354045TensorsizeI10−1100Time(s)tntorch(CPU)tntorch(GPU)ttpytntorch: Tensor Network Learning with PyTorch

A Appendix

A.1 Additional details

We heavily exploit the versatility of Einstein summation algebra as made possible by PyTorch’s einsum function.
Effectively, einsum allows to represent tensor operations like summation and multiplication using compact strings of
symbols, each encoding one tensor index. tntorch represents basic decompositions using:

• CP: a sequence of 2D factor matrices
• TT: a sequence of 3D tensor train cores
• Tucker: the cores are TT-like, but they are chosen so as to be error-free (i.e. they are not rank reduced). In

addition, there is a sequence of 2D factors to encode the Tucker bases.

A.2 Comparison between tensor libraries

tntorch T3F TensorLy TedNet TensorD TensorNetwork tt-pytorch

Tensor arithmetics
Fancy indexing
CP decomposition
Tucker decomposition
TT decomposition
CP/Tucker/TT blending
Tensor ring
Hierarchical/tree formats
TT matrix
CP matrix
Cross-approximation
Global optimization
Riemannian optimization
Batch processing
Sparse tensor algorithms

(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)2
-
-
(cid:88)
(cid:88)
(cid:88)
(cid:88)
-
(cid:88)
-

(cid:88)
-
-
-
(cid:88)
-
-
-
(cid:88)
-
-
-
(cid:88)
(cid:88)2
(cid:88)

-
-
(cid:88)
(cid:88)
(cid:88)
-
-
-
(cid:88)
-
(cid:88)
-
-
-
(cid:88)

-
-
(cid:88)
-
(cid:88)
-
(cid:88)
-
-
-
-
-
-
(cid:88)
-

(cid:88)
-
(cid:88)
(cid:88)
-
-
-
-
-
-
-
-
-
-
-

-
-
(cid:88)1
(cid:88)1
(cid:88)1
(cid:88)1
(cid:88)1
(cid:88)1
(cid:88)1
(cid:88)1
-
-
-
(cid:88)1
-

-
-
-
-
(cid:88)
-
(cid:88)
-
-
-
-
-
-
-
-

Table 1: Feature comparison between tntorch and six related libraries that also support GPU processing and automatic
differentiation as of June 2022.

A.3 Cross-approximation

tntorch implements cross-approximation (Oseledets and Tyrtyshnikov, 2010), a powerful technique to learn a com-
pressed TT tensor out of a black-box function by evaluating it on a limited set of samples. This is a valuable tool when
the target tensor does not ﬁt into memory but it can be sampled on demand, and can be used for surrogate modeling
or to efﬁciently compute functions of already compressed tensors. Cross-approximation has also been adapted as a
gradient-free global optimizer for discrete problems, and an implementation is available in tntorch. See Sozykin et al.
(2022) for a detailed example of an application in reinforcement learning. tntorch also provides a differentiable ver-
sion of cross-approximation which alternates between sample selection (which is a combinatorial, non-differentiable
heuristic), followed by evaluation and backpropagation of the target function on the selected samples (Usvyatsov et al.,
2021).

Under the hood, cross-approximation selects indices based on a tensor version of an earlier algorithm known as maxvol
(Mikhalev and Oseledets, 2018). In short, maxvol is a greedy heuristic that ﬁnds the k most linearly independent rows
or columns from a given matrix (known to be an
-hard problem (Civril and Magdon-Ismail, 2009)). We use the
maxvolpy library by Mikhalev (2016), which relies on BLAS, for this algorithm, but tntorch also provides its own
implementation to fall back to whenever BLAS is not available.

N P

A.4 Tensor Train Matrices

A matrix of shape M
m1 ×· · ·×

×
mk and N = n1 ×· · ·×

N (Fig. 3a) transforms to a tensor of shape m1 × · · · ×

nk, where M =
nk. Corresponding row and column dimensions are grouped together and the shape

n1 × · · · ×

mk

×

1Tensor networks can be constructed, but no tools are provided to decompose a given data tensor into a desired network.
2Batched decomposition of a data tensor is not supported.

6

tntorch: Tensor Network Learning with PyTorch

nk (Fig. 3b). The tensor is subject to standard TT decomposition
of the resulting tensor becomes m1 ×
with the cores of shape Ri
Ri+1 (Fig. 3d),
×
separating each input and output dimension on the core level. Many operations discussed in Izmailov et al. (2018) have
also been implemented in tntorch, including fast matrix inverse and determinant algorithms for rank-1 TT matrices
that are equivalent to Kronecker products.

n1 ×· · ·×
Ri+1 (Fig. 3c) and ﬁnally each core is reshaped to Ri

mini

mk

mi

ni

×

×

×

×

×

(a) Matrix of shape M × N

(b) Tensor of shape m1 × n1 × · · · × m4 × n4

(c) 4D TT tensor

(d) 4D TT matrix

Figure 3: Example of conversion of matrix to 4D TT tensor and corresponding TT matrix

tt multiply. In TT format matrix
(Fig. 4a) is reshaped as in Fig. 4 to a tensor of shape n1 × · · · ×
corresponding dimensions are contracted with the TT matrix (Fig. 3d). The result of matrix
contracted tensor of shape m1 × · · · ×
2015) for more details.

vector multiplication does not require decompression. The vector of shape N
nk and
vector operation is a
mk, which can be reshaped back to a vector of shape M . See (Novikov et al.,

nk (Fig. 4b), such that N = n1 × · · · ×

×

×

(a) Vector of shape N

(b) Vector of shape n1 × · · · × n4

Figure 4: Example of vector transformation for tt multiply

A.5 CP Matrices

Similarly to TT matrix decomposition, we have also implemented a CP matrix decomposition. The scheme for index-
ing and regrouping dimensions is identical to that of TTMatrix. In a CP matrix, each CP factor has shape mini
R
R, where mi and ni are spatial dimensions. Like TTMatrix, CP matrices
but is conceptually equivalent to mi
ni
vector products) that are not available for CP tensors and thus are imple-
require custom operations (such as matrix
mented as a separate class CPMatrix. See Fig. 1a for a visualization of a CP tensor and Fig. 5 for the corresponding
CP matrix with Ik = mk

×
×

nk.

×

×

×

Figure 5: 4D CP matrix, during matrix
dimensions

×

vector multiplication dimensions mk are contracted with corresponding vector

7

<latexit sha1_base64="Kl6q6kSBGBGu2fAwISKgTxI95YI=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3oQEjAPSJYwO+lNxszOLjOzQgj5Ai8eFPHqJ3nzb5wke9DEgoaiqpvuriARXBvX/XZya+sbm1v57cLO7t7+QfHwqKnjVDFssFjEqh1QjYJLbBhuBLYThTQKBLaC0c3Mbz2h0jyWD2acoB/RgeQhZ9RYqX7fK5bcsjsHWSVeRkqQodYrfnX7MUsjlIYJqnXHcxPjT6gynAmcFrqpxoSyER1gx1JJI9T+ZH7olJxZpU/CWNmShszV3xMTGmk9jgLbGVEz1MveTPzP66QmvPYnXCapQckWi8JUEBOT2dekzxUyI8aWUKa4vZWwIVWUGZtNwYbgLb+8SpoXZe+yXKlXStW7LI48nMApnIMHV1CFW6hBAxggPMMrvDmPzovz7nwsWnNONnMMf+B8/gCqFozh</latexit>M<latexit sha1_base64="8LMpAAq9ey4GPSha3rAqPO4bCd8=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3qRBMwDkiXMTnqTMbOzy8ysEEK+wIsHRbz6Sd78GyfJHjSxoKGo6qa7K0gE18Z1v53c2vrG5lZ+u7Czu7d/UDw8auo4VQwbLBaxagdUo+ASG4Ybge1EIY0Cga1gdDPzW0+oNI/lgxkn6Ed0IHnIGTVWqt/3iiW37M5BVomXkRJkqPWKX91+zNIIpWGCat3x3MT4E6oMZwKnhW6qMaFsRAfYsVTSCLU/mR86JWdW6ZMwVrakIXP198SERlqPo8B2RtQM9bI3E//zOqkJr/0Jl0lqULLFojAVxMRk9jXpc4XMiLEllClubyVsSBVlxmZTsCF4yy+vkuZF2bssV+qVUvUuiyMPJ3AK5+DBFVThFmrQAAYIz/AKb86j8+K8Ox+L1pyTzRzDHzifP6uajOI=</latexit>N<latexit sha1_base64="HOHxc/bWIpvmklKjvBOpdZ1ziwM=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqexKUY8FL3qraD+gXUo2zbahSXZJskJZ+hO8eFDEq7/Im//GtN2Dtj4YeLw3w8y8MBHcWM/7RoW19Y3NreJ2aWd3b/+gfHjUMnGqKWvSWMS6ExLDBFesabkVrJNoRmQoWDsc38z89hPThsfq0U4SFkgyVDzilFgnPci+3y9XvKo3B14lfk4qkKPRL3/1BjFNJVOWCmJM1/cSG2REW04Fm5Z6qWEJoWMyZF1HFZHMBNn81Ck+c8oAR7F2pSyeq78nMiKNmcjQdUpiR2bZm4n/ed3URtdBxlWSWqboYlGUCmxjPPsbD7hm1IqJI4Rq7m7FdEQ0odalU3Ih+Msvr5LWRdW/rNbua5X6XR5HEU7gFM7Bhyuowy00oAkUhvAMr/CGBHpB7+hj0VpA+cwx/AH6/AH/6I2l</latexit>m1<latexit sha1_base64="yivungj6LXy6qPeP5ZOum6N6beg=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqexKUY8FL3qraD+gXUo2zbahSXZJskJZ+hO8eFDEq7/Im//GtN2Dtj4YeLw3w8y8MBHcWM/7RoW19Y3NreJ2aWd3b/+gfHjUMnGqKWvSWMS6ExLDBFesabkVrJNoRmQoWDsc38z89hPThsfq0U4SFkgyVDzilFgnPch+rV+ueFVvDrxK/JxUIEejX/7qDWKaSqYsFcSYru8lNsiItpwKNi31UsMSQsdkyLqOKiKZCbL5qVN85pQBjmLtSlk8V39PZEQaM5Gh65TEjsyyNxP/87qpja6DjKsktUzRxaIoFdjGePY3HnDNqBUTRwjV3N2K6YhoQq1Lp+RC8JdfXiWti6p/Wa3d1yr1uzyOIpzAKZyDD1dQh1toQBMoDOEZXuENCfSC3tHHorWA8plj+AP0+QMEg42o</latexit>m4<latexit sha1_base64="AdD1zhbuE3IEd3/MivpYTsx9Nh4=">AAAB7XicbVBNS8NAEJ3Ur1q/qh69BIvgqSRS1GPBi94q2A9oQ9lsNu3azW7YnQil9D948aCIV/+PN/+N2zYHbX0w8Hhvhpl5YSq4Qc/7dgpr6xubW8Xt0s7u3v5B+fCoZVSmKWtSJZTuhMQwwSVrIkfBOqlmJAkFa4ejm5nffmLacCUfcJyyICEDyWNOCVqp1aORQtMvV7yqN4e7SvycVCBHo1/+6kWKZgmTSAUxput7KQYTopFTwaalXmZYSuiIDFjXUkkSZoLJ/Nqpe2aVyI2VtiXRnau/JyYkMWachLYzITg0y95M/M/rZhhfBxMu0wyZpItFcSZcVO7sdTfimlEUY0sI1dze6tIh0YSiDahkQ/CXX14lrYuqf1mt3dcq9bs8jiKcwCmcgw9XUIdbaEATKDzCM7zCm6OcF+fd+Vi0Fpx85hj+wPn8AbNgjz8=</latexit>···<latexit sha1_base64="AdD1zhbuE3IEd3/MivpYTsx9Nh4=">AAAB7XicbVBNS8NAEJ3Ur1q/qh69BIvgqSRS1GPBi94q2A9oQ9lsNu3azW7YnQil9D948aCIV/+PN/+N2zYHbX0w8Hhvhpl5YSq4Qc/7dgpr6xubW8Xt0s7u3v5B+fCoZVSmKWtSJZTuhMQwwSVrIkfBOqlmJAkFa4ejm5nffmLacCUfcJyyICEDyWNOCVqp1aORQtMvV7yqN4e7SvycVCBHo1/+6kWKZgmTSAUxput7KQYTopFTwaalXmZYSuiIDFjXUkkSZoLJ/Nqpe2aVyI2VtiXRnau/JyYkMWachLYzITg0y95M/M/rZhhfBxMu0wyZpItFcSZcVO7sdTfimlEUY0sI1dze6tIh0YSiDahkQ/CXX14lrYuqf1mt3dcq9bs8jiKcwCmcgw9XUIdbaEATKDzCM7zCm6OcF+fd+Vi0Fpx85hj+wPn8AbNgjz8=</latexit>···<latexit sha1_base64="YILoX4jgO4beqFpN19pQku8ZvVE=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlTf65crbtWdg6wSLycVyNHol796g5ilEVfIJDWm67kJ+hnVKJjk01IvNTyhbEyHvGupohE3fjY/dUrOrDIgYaxtKSRz9fdERiNjJlFgOyOKI7PszcT/vG6K4bWfCZWkyBVbLApTSTAms7/JQGjOUE4soUwLeythI6opQ5tOyYbgLb+8SloXVe+yWruvVep3eRxFOIFTOAcPrqAOt9CAJjAYwjO8wpsjnRfn3flYtBacfOYY/sD5/AEBfY2m</latexit>n1<latexit sha1_base64="jNWSYueKIy9Zm00jWGewW9/9lX4=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlS/1i9X3Ko7B1klXk4qkKPRL3/1BjFLI66QSWpM13MT9DOqUTDJp6VeanhC2ZgOeddSRSNu/Gx+6pScWWVAwljbUkjm6u+JjEbGTKLAdkYUR2bZm4n/ed0Uw2s/EypJkSu2WBSmkmBMZn+TgdCcoZxYQpkW9lbCRlRThjadkg3BW355lbQuqt5ltXZfq9Tv8jiKcAKncA4eXEEdbqEBTWAwhGd4hTdHOi/Ou/OxaC04+cwx/IHz+QMGCY2p</latexit>n4<latexit sha1_base64="Yslmet6edIHpsAq3pHuxc7QXtnc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyKqMeAF73FRx6QLGF2MpsMmZ1dZnqFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777RRWVtfWN4qbpa3tnd298v5B08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup76rSeujYjVI44T7kd0oEQoGEUrPdz3vF654lbdGcgy8XJSgRz1Xvmr249ZGnGFTFJjOp6boJ9RjYJJPil1U8MTykZ0wDuWKhpx42ezUyfkxCp9EsbalkIyU39PZDQyZhwFtjOiODSL3lT8z+ukGF75mVBJilyx+aIwlQRjMv2b9IXmDOXYEsq0sLcSNqSaMrTplGwI3uLLy6R5VvUuqud355XabR5HEY7gGE7Bg0uowQ3UoQEMBvAMr/DmSOfFeXc+5q0FJ585hD9wPn8A1saNig==</latexit>R1<latexit sha1_base64="vYMFgKSwspAn9dqqFbAyqPemg50=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWH3lAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5NbW9/Y3MpvF3Z29/YPiodHTR2nimGDxSJW7YBqFFxiw3AjsJ0opFEgsBWMrmd+6wmV5rF8NOME/YgOJA85o8ZKD/e9Sq9YcsvuHGSVeBkpQYZ6r/jV7ccsjVAaJqjWHc9NjD+hynAmcFrophoTykZ0gB1LJY1Q+5P5qVNyZpU+CWNlSxoyV39PTGik9TgKbGdEzVAvezPxP6+TmvDKn3CZpAYlWywKU0FMTGZ/kz5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf88ippVsreRbl6Vy3VbrM48nACp3AOHlxCDW6gDg1gMIBneIU3RzgvzrvzsWjNOdnMMfyB8/kD2EqNiw==</latexit>R2<latexit sha1_base64="Z8nir680/HG232gSyGXMOi1DOsc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL3qLjzwgWcLspJMMmZ1dZmaFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7glhwbVz328mtrK6tb+Q3C1vbO7t7xf2Dho4SxbDOIhGpVkA1Ci6xbrgR2IoV0jAQ2AxG11O/+YRK80g+mnGMfkgHkvc5o8ZKD/fd826x5JbdGcgy8TJSggy1bvGr04tYEqI0TFCt254bGz+lynAmcFLoJBpjykZ0gG1LJQ1R++ns1Ak5sUqP9CNlSxoyU39PpDTUehwGtjOkZqgXvan4n9dOTP/KT7mME4OSzRf1E0FMRKZ/kx5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf48jJpnJW9i3LlrlKq3mZx5OEIjuEUPLiEKtxADerAYADP8ApvjnBenHfnY96ac7KZQ/gD5/MH2c6NjA==</latexit>R3<latexit sha1_base64="/gunUQai9zarEX7bYB3ta4c15nA=">AAAB7nicbVBNSwMxEJ3Ur1q/qh69BIvgqeyKqMeCF71VsB/QLks2zbahSXZJskJZ+iO8eFDEq7/Hm//GtN2Dtj4YeLw3w8y8KBXcWM/7RqW19Y3NrfJ2ZWd3b/+genjUNkmmKWvRRCS6GxHDBFesZbkVrJtqRmQkWCca3878zhPThifq0U5SFkgyVDzmlFgndWToYxX6YbXm1b058CrxC1KDAs2w+tUfJDSTTFkqiDE930ttkBNtORVsWulnhqWEjsmQ9RxVRDIT5PNzp/jMKQMcJ9qVsniu/p7IiTRmIiPXKYkdmWVvJv7n9TIb3wQ5V2lmmaKLRXEmsE3w7Hc84JpRKyaOEKq5uxXTEdGEWpdQxYXgL7+8StoXdf+qfvlwWWvcF3GU4QRO4Rx8uIYG3EETWkBhDM/wCm8oRS/oHX0sWkuomDmGP0CfP0rIjus=</latexit>m1n1<latexit sha1_base64="TXkTCdZ/dBhnfTYXLILSnZGE1hE=">AAAB7nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lKUY8FL3qrYD+gDWGz3bRLdzdhdyOU0B/hxYMiXv093vw3btMctPXBwOO9GWbmhQln2rjut1Pa2Nza3invVvb2Dw6PqscnXR2nitAOiXms+iHWlDNJO4YZTvuJoliEnPbC6e3C7z1RpVksH80sob7AY8kiRrCxUk8EDSSDRlCtuXU3B1onXkFqUKAdVL+Go5ikgkpDONZ64LmJ8TOsDCOczivDVNMEkyke04GlEguq/Sw/d44urDJCUaxsSYNy9fdEhoXWMxHaToHNRK96C/E/b5Ca6MbPmExSQyVZLopSjkyMFr+jEVOUGD6zBBPF7K2ITLDCxNiEKjYEb/XlddJt1L2revOhWWvdF3GU4QzO4RI8uIYW3EEbOkBgCs/wCm9O4rw4787HsrXkFDOn8AfO5w9N1I7t</latexit>m2n2<latexit sha1_base64="g9smAEUB4zvuhmwVG24e3P7pCxw=">AAAB7nicbVBNSwMxEJ2tX7V+VT16CRbBU9m1pXoseNFbBfsB7bJk02wbmmSXJCuUpT/CiwdFvPp7vPlvTNs9aOuDgcd7M8zMCxPOtHHdb6ewsbm1vVPcLe3tHxwelY9POjpOFaFtEvNY9UKsKWeStg0znPYSRbEIOe2Gk9u5332iSrNYPpppQn2BR5JFjGBjpa4IakgGtaBccavuAmideDmpQI5WUP4aDGOSCioN4Vjrvucmxs+wMoxwOisNUk0TTCZ4RPuWSiyo9rPFuTN0YZUhimJlSxq0UH9PZFhoPRWh7RTYjPWqNxf/8/qpiW78jMkkNVSS5aIo5cjEaP47GjJFieFTSzBRzN6KyBgrTIxNqGRD8FZfXiedq6rXqNYf6pXmfR5HEc7gHC7Bg2towh20oA0EJvAMr/DmJM6L8+58LFsLTj5zCn/gfP4AUOCO7w==</latexit>m3n3<latexit sha1_base64="Q5oo6O6LwU2zMssUJtFFe9LKpdM=">AAAB7nicbVBNS8NAEJ3Ur1q/qh69LBbBU0kkVI8FL3qrYD+gDWGz3bRLdzdhdyOU0B/hxYMiXv093vw3btsctPXBwOO9GWbmRSln2rjut1Pa2Nza3invVvb2Dw6PqscnHZ1kitA2SXiiehHWlDNJ24YZTnupolhEnHajye3c7z5RpVkiH800pYHAI8liRrCxUleEPpKhH1Zrbt1dAK0TryA1KNAKq1+DYUIyQaUhHGvd99zUBDlWhhFOZ5VBpmmKyQSPaN9SiQXVQb44d4YurDJEcaJsSYMW6u+JHAutpyKynQKbsV715uJ/Xj8z8U2QM5lmhkqyXBRnHJkEzX9HQ6YoMXxqCSaK2VsRGWOFibEJVWwI3urL66RzVfcadf/BrzXvizjKcAbncAkeXEMT7qAFbSAwgWd4hTcndV6cd+dj2VpyiplT+APn8wdT7I7x</latexit>m4n4<latexit sha1_base64="Yslmet6edIHpsAq3pHuxc7QXtnc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyKqMeAF73FRx6QLGF2MpsMmZ1dZnqFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7gkQKg6777RRWVtfWN4qbpa3tnd298v5B08SpZrzBYhnrdkANl0LxBgqUvJ1oTqNA8lYwup76rSeujYjVI44T7kd0oEQoGEUrPdz3vF654lbdGcgy8XJSgRz1Xvmr249ZGnGFTFJjOp6boJ9RjYJJPil1U8MTykZ0wDuWKhpx42ezUyfkxCp9EsbalkIyU39PZDQyZhwFtjOiODSL3lT8z+ukGF75mVBJilyx+aIwlQRjMv2b9IXmDOXYEsq0sLcSNqSaMrTplGwI3uLLy6R5VvUuqud355XabR5HEY7gGE7Bg0uowQ3UoQEMBvAMr/DmSOfFeXc+5q0FJ585hD9wPn8A1saNig==</latexit>R1<latexit sha1_base64="vYMFgKSwspAn9dqqFbAyqPemg50=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKeyGoB4DXvQWH3lAsoTZSW8yZHZ2mZkVQsgnePGgiFe/yJt/4yTZgyYWNBRV3XR3BYng2rjut5NbW9/Y3MpvF3Z29/YPiodHTR2nimGDxSJW7YBqFFxiw3AjsJ0opFEgsBWMrmd+6wmV5rF8NOME/YgOJA85o8ZKD/e9Sq9YcsvuHGSVeBkpQYZ6r/jV7ccsjVAaJqjWHc9NjD+hynAmcFrophoTykZ0gB1LJY1Q+5P5qVNyZpU+CWNlSxoyV39PTGik9TgKbGdEzVAvezPxP6+TmvDKn3CZpAYlWywKU0FMTGZ/kz5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf88ippVsreRbl6Vy3VbrM48nACp3AOHlxCDW6gDg1gMIBneIU3RzgvzrvzsWjNOdnMMfyB8/kD2EqNiw==</latexit>R2<latexit sha1_base64="Z8nir680/HG232gSyGXMOi1DOsc=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL3qLjzwgWcLspJMMmZ1dZmaFsOQTvHhQxKtf5M2/cZLsQRMLGoqqbrq7glhwbVz328mtrK6tb+Q3C1vbO7t7xf2Dho4SxbDOIhGpVkA1Ci6xbrgR2IoV0jAQ2AxG11O/+YRK80g+mnGMfkgHkvc5o8ZKD/fd826x5JbdGcgy8TJSggy1bvGr04tYEqI0TFCt254bGz+lynAmcFLoJBpjykZ0gG1LJQ1R++ns1Ak5sUqP9CNlSxoyU39PpDTUehwGtjOkZqgXvan4n9dOTP/KT7mME4OSzRf1E0FMRKZ/kx5XyIwYW0KZ4vZWwoZUUWZsOgUbgrf48jJpnJW9i3LlrlKq3mZx5OEIjuEUPLiEKtxADerAYADP8ApvjnBenHfnY96ac7KZQ/gD5/MH2c6NjA==</latexit>R3<latexit sha1_base64="HOHxc/bWIpvmklKjvBOpdZ1ziwM=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqexKUY8FL3qraD+gXUo2zbahSXZJskJZ+hO8eFDEq7/Im//GtN2Dtj4YeLw3w8y8MBHcWM/7RoW19Y3NreJ2aWd3b/+gfHjUMnGqKWvSWMS6ExLDBFesabkVrJNoRmQoWDsc38z89hPThsfq0U4SFkgyVDzilFgnPci+3y9XvKo3B14lfk4qkKPRL3/1BjFNJVOWCmJM1/cSG2REW04Fm5Z6qWEJoWMyZF1HFZHMBNn81Ck+c8oAR7F2pSyeq78nMiKNmcjQdUpiR2bZm4n/ed3URtdBxlWSWqboYlGUCmxjPPsbD7hm1IqJI4Rq7m7FdEQ0odalU3Ih+Msvr5LWRdW/rNbua5X6XR5HEU7gFM7Bhyuowy00oAkUhvAMr/CGBHpB7+hj0VpA+cwx/AH6/AH/6I2l</latexit>m1<latexit sha1_base64="YILoX4jgO4beqFpN19pQku8ZvVE=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlTf65crbtWdg6wSLycVyNHol796g5ilEVfIJDWm67kJ+hnVKJjk01IvNTyhbEyHvGupohE3fjY/dUrOrDIgYaxtKSRz9fdERiNjJlFgOyOKI7PszcT/vG6K4bWfCZWkyBVbLApTSTAms7/JQGjOUE4soUwLeythI6opQ5tOyYbgLb+8SloXVe+yWruvVep3eRxFOIFTOAcPrqAOt9CAJjAYwjO8wpsjnRfn3flYtBacfOYY/sD5/AEBfY2m</latexit>n1<latexit sha1_base64="hfw/CoiPS+kmAv7AIqUI0BTKMwg=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lKUY8FL3qraGuhDWWz3bRLN5uwOxFK6E/w4kERr/4ib/4bt20O2vpg4PHeDDPzgkQKg6777RTW1jc2t4rbpZ3dvf2D8uFR28SpZrzFYhnrTkANl0LxFgqUvJNoTqNA8sdgfD3zH5+4NiJWDzhJuB/RoRKhYBStdK/6tX654lbdOcgq8XJSgRzNfvmrN4hZGnGFTFJjup6boJ9RjYJJPi31UsMTysZ0yLuWKhpx42fzU6fkzCoDEsbalkIyV39PZDQyZhIFtjOiODLL3kz8z+umGF75mVBJilyxxaIwlQRjMvubDITmDOXEEsq0sLcSNqKaMrTplGwI3vLLq6Rdq3oX1fpdvdK4zeMowgmcwjl4cAkNuIEmtIDBEJ7hFd4c6bw4787HorXg5DPH8AfO5w8DAY2n</latexit>n2<latexit sha1_base64="txQtUBXuJunktr2V15dgRHX58RQ=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqeyWoh4LXvRW0dZCu5Rsmm1Dk+ySZIWy9Cd48aCIV3+RN/+NabsHbX0w8Hhvhpl5YSK4sZ73jQpr6xubW8Xt0s7u3v5B+fCobeJUU9aisYh1JySGCa5Yy3IrWCfRjMhQsMdwfD3zH5+YNjxWD3aSsECSoeIRp8Q66V72a/1yxat6c+BV4uekAjma/fJXbxDTVDJlqSDGdH0vsUFGtOVUsGmplxqWEDomQ9Z1VBHJTJDNT53iM6cMcBRrV8riufp7IiPSmIkMXackdmSWvZn4n9dNbXQVZFwlqWWKLhZFqcA2xrO/8YBrRq2YOEKo5u5WTEdEE2pdOiUXgr/88ipp16r+RbV+V680bvM4inACp3AOPlxCA26gCS2gMIRneIU3JNALekcfi9YCymeO4Q/Q5w8Be42m</latexit>m2<latexit sha1_base64="8T7epuXbJ3NvkpkhEIWuAfyujZY=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL3qLaB6QLGF2MpsMmccyMyuEJZ/gxYMiXv0ib/6Nk2QPGi1oKKq66e6KEs6M9f0vr7Cyura+UdwsbW3v7O6V9w9aRqWa0CZRXOlOhA3lTNKmZZbTTqIpFhGn7Wh8PfPbj1QbpuSDnSQ0FHgoWcwItk66F/3zfrniV/050F8S5KQCORr98mdvoEgqqLSEY2O6gZ/YMMPaMsLptNRLDU0wGeMh7ToqsaAmzOanTtGJUwYoVtqVtGiu/pzIsDBmIiLXKbAdmWVvJv7ndVMbX4UZk0lqqSSLRXHKkVVo9jcaME2J5RNHMNHM3YrICGtMrEun5EIIll/+S1pn1eCiWrurVeq3eRxFOIJjOIUALqEON9CAJhAYwhO8wKvHvWfvzXtftBa8fOYQfsH7+AYC/42n</latexit>m3<latexit sha1_base64="rP1yoljo9eAs8f5eeCn5zEjt44E=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0m0qMeCF71VtB/QhrLZTtqlm03Y3Qgl9Cd48aCIV3+RN/+N2zYHrT4YeLw3w8y8IBFcG9f9cgorq2vrG8XN0tb2zu5eef+gpeNUMWyyWMSqE1CNgktsGm4EdhKFNAoEtoPx9cxvP6LSPJYPZpKgH9Gh5CFn1FjpXvbP++WKW3XnIH+Jl5MK5Gj0y5+9QczSCKVhgmrd9dzE+BlVhjOB01Iv1ZhQNqZD7FoqaYTaz+anTsmJVQYkjJUtachc/TmR0UjrSRTYzoiakV72ZuJ/Xjc14ZWfcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6JRuCt/zyX9I6q3oX1dpdrVK/zeMowhEcwyl4cAl1uIEGNIHBEJ7gBV4d4Tw7b877orXg5DOH8AvOxzcEhY2o</latexit>n3<latexit sha1_base64="jNWSYueKIy9Zm00jWGewW9/9lX4=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlS/1i9X3Ko7B1klXk4qkKPRL3/1BjFLI66QSWpM13MT9DOqUTDJp6VeanhC2ZgOeddSRSNu/Gx+6pScWWVAwljbUkjm6u+JjEbGTKLAdkYUR2bZm4n/ed0Uw2s/EypJkSu2WBSmkmBMZn+TgdCcoZxYQpkW9lbCRlRThjadkg3BW355lbQuqt5ltXZfq9Tv8jiKcAKncA4eXEEdbqEBTWAwhGd4hTdHOi/Ou/OxaC04+cwx/IHz+QMGCY2p</latexit>n4<latexit sha1_base64="yivungj6LXy6qPeP5ZOum6N6beg=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqexKUY8FL3qraD+gXUo2zbahSXZJskJZ+hO8eFDEq7/Im//GtN2Dtj4YeLw3w8y8MBHcWM/7RoW19Y3NreJ2aWd3b/+gfHjUMnGqKWvSWMS6ExLDBFesabkVrJNoRmQoWDsc38z89hPThsfq0U4SFkgyVDzilFgnPch+rV+ueFVvDrxK/JxUIEejX/7qDWKaSqYsFcSYru8lNsiItpwKNi31UsMSQsdkyLqOKiKZCbL5qVN85pQBjmLtSlk8V39PZEQaM5Gh65TEjsyyNxP/87qpja6DjKsktUzRxaIoFdjGePY3HnDNqBUTRwjV3N2K6YhoQq1Lp+RC8JdfXiWti6p/Wa3d1yr1uzyOIpzAKZyDD1dQh1toQBMoDOEZXuENCfSC3tHHorWA8plj+AP0+QMEg42o</latexit>m4<latexit sha1_base64="8LMpAAq9ey4GPSha3rAqPO4bCd8=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3qRBMwDkiXMTnqTMbOzy8ysEEK+wIsHRbz6Sd78GyfJHjSxoKGo6qa7K0gE18Z1v53c2vrG5lZ+u7Czu7d/UDw8auo4VQwbLBaxagdUo+ASG4Ybge1EIY0Cga1gdDPzW0+oNI/lgxkn6Ed0IHnIGTVWqt/3iiW37M5BVomXkRJkqPWKX91+zNIIpWGCat3x3MT4E6oMZwKnhW6qMaFsRAfYsVTSCLU/mR86JWdW6ZMwVrakIXP198SERlqPo8B2RtQM9bI3E//zOqkJr/0Jl0lqULLFojAVxMRk9jXpc4XMiLEllClubyVsSBVlxmZTsCF4yy+vkuZF2bssV+qVUvUuiyMPJ3AK5+DBFVThFmrQAAYIz/AKb86j8+K8Ox+L1pyTzRzDHzifP6uajOI=</latexit>N<latexit sha1_base64="AdD1zhbuE3IEd3/MivpYTsx9Nh4=">AAAB7XicbVBNS8NAEJ3Ur1q/qh69BIvgqSRS1GPBi94q2A9oQ9lsNu3azW7YnQil9D948aCIV/+PN/+N2zYHbX0w8Hhvhpl5YSq4Qc/7dgpr6xubW8Xt0s7u3v5B+fCoZVSmKWtSJZTuhMQwwSVrIkfBOqlmJAkFa4ejm5nffmLacCUfcJyyICEDyWNOCVqp1aORQtMvV7yqN4e7SvycVCBHo1/+6kWKZgmTSAUxput7KQYTopFTwaalXmZYSuiIDFjXUkkSZoLJ/Nqpe2aVyI2VtiXRnau/JyYkMWachLYzITg0y95M/M/rZhhfBxMu0wyZpItFcSZcVO7sdTfimlEUY0sI1dze6tIh0YSiDahkQ/CXX14lrYuqf1mt3dcq9bs8jiKcwCmcgw9XUIdbaEATKDzCM7zCm6OcF+fd+Vi0Fpx85hj+wPn8AbNgjz8=</latexit>···<latexit sha1_base64="YILoX4jgO4beqFpN19pQku8ZvVE=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlTf65crbtWdg6wSLycVyNHol796g5ilEVfIJDWm67kJ+hnVKJjk01IvNTyhbEyHvGupohE3fjY/dUrOrDIgYaxtKSRz9fdERiNjJlFgOyOKI7PszcT/vG6K4bWfCZWkyBVbLApTSTAms7/JQGjOUE4soUwLeythI6opQ5tOyYbgLb+8SloXVe+yWruvVep3eRxFOIFTOAcPrqAOt9CAJjAYwjO8wpsjnRfn3flYtBacfOYY/sD5/AEBfY2m</latexit>n1<latexit sha1_base64="jNWSYueKIy9Zm00jWGewW9/9lX4=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlS/1i9X3Ko7B1klXk4qkKPRL3/1BjFLI66QSWpM13MT9DOqUTDJp6VeanhC2ZgOeddSRSNu/Gx+6pScWWVAwljbUkjm6u+JjEbGTKLAdkYUR2bZm4n/ed0Uw2s/EypJkSu2WBSmkmBMZn+TgdCcoZxYQpkW9lbCRlRThjadkg3BW355lbQuqt5ltXZfq9Tv8jiKcAKncA4eXEEdbqEBTWAwhGd4hTdHOi/Ou/OxaC04+cwx/IHz+QMGCY2p</latexit>n4<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="Sh2/4hHxW3Pv1fFocBSJTT5u/5I=">AAAB6HicbVDLSgNBEOyNrxhfUY9eBoPgKexKUI8BL3pLxDwgWcLspDcZMzu7zMwKIeQLvHhQxKuf5M2/cZLsQRMLGoqqbrq7gkRwbVz328mtrW9sbuW3Czu7e/sHxcOjpo5TxbDBYhGrdkA1Ci6xYbgR2E4U0igQ2ApGNzO/9YRK81g+mHGCfkQHkoecUWOl+n2vWHLL7hxklXgZKUGGWq/41e3HLI1QGiao1h3PTYw/ocpwJnBa6KYaE8pGdIAdSyWNUPuT+aFTcmaVPgljZUsaMld/T0xopPU4CmxnRM1QL3sz8T+vk5rw2p9wmaQGJVssClNBTExmX5M+V8iMGFtCmeL2VsKGVFFmbDYFG4K3/PIqaV6UvctypV4pVe+yOPJwAqdwDh5cQRVuoQYNYIDwDK/w5jw6L86787FozTnZzDH8gfP5A7GqjOY=</latexit>R<latexit sha1_base64="YILoX4jgO4beqFpN19pQku8ZvVE=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlTf65crbtWdg6wSLycVyNHol796g5ilEVfIJDWm67kJ+hnVKJjk01IvNTyhbEyHvGupohE3fjY/dUrOrDIgYaxtKSRz9fdERiNjJlFgOyOKI7PszcT/vG6K4bWfCZWkyBVbLApTSTAms7/JQGjOUE4soUwLeythI6opQ5tOyYbgLb+8SloXVe+yWruvVep3eRxFOIFTOAcPrqAOt9CAJjAYwjO8wpsjnRfn3flYtBacfOYY/sD5/AEBfY2m</latexit>n1<latexit sha1_base64="HOHxc/bWIpvmklKjvBOpdZ1ziwM=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqexKUY8FL3qraD+gXUo2zbahSXZJskJZ+hO8eFDEq7/Im//GtN2Dtj4YeLw3w8y8MBHcWM/7RoW19Y3NreJ2aWd3b/+gfHjUMnGqKWvSWMS6ExLDBFesabkVrJNoRmQoWDsc38z89hPThsfq0U4SFkgyVDzilFgnPci+3y9XvKo3B14lfk4qkKPRL3/1BjFNJVOWCmJM1/cSG2REW04Fm5Z6qWEJoWMyZF1HFZHMBNn81Ck+c8oAR7F2pSyeq78nMiKNmcjQdUpiR2bZm4n/ed3URtdBxlWSWqboYlGUCmxjPPsbD7hm1IqJI4Rq7m7FdEQ0odalU3Ih+Msvr5LWRdW/rNbua5X6XR5HEU7gFM7Bhyuowy00oAkUhvAMr/CGBHpB7+hj0VpA+cwx/AH6/AH/6I2l</latexit>m1<latexit sha1_base64="txQtUBXuJunktr2V15dgRHX58RQ=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqeyWoh4LXvRW0dZCu5Rsmm1Dk+ySZIWy9Cd48aCIV3+RN/+NabsHbX0w8Hhvhpl5YSK4sZ73jQpr6xubW8Xt0s7u3v5B+fCobeJUU9aisYh1JySGCa5Yy3IrWCfRjMhQsMdwfD3zH5+YNjxWD3aSsECSoeIRp8Q66V72a/1yxat6c+BV4uekAjma/fJXbxDTVDJlqSDGdH0vsUFGtOVUsGmplxqWEDomQ9Z1VBHJTJDNT53iM6cMcBRrV8riufp7IiPSmIkMXackdmSWvZn4n9dNbXQVZFwlqWWKLhZFqcA2xrO/8YBrRq2YOEKo5u5WTEdEE2pdOiUXgr/88ipp16r+RbV+V680bvM4inACp3AOPlxCA26gCS2gMIRneIU3JNALekcfi9YCymeO4Q/Q5w8Be42m</latexit>m2<latexit sha1_base64="8T7epuXbJ3NvkpkhEIWuAfyujZY=">AAAB6nicbVDLSgNBEOyNrxhfUY9eBoPgKexqUI8BL3qLaB6QLGF2MpsMmccyMyuEJZ/gxYMiXv0ib/6Nk2QPGi1oKKq66e6KEs6M9f0vr7Cyura+UdwsbW3v7O6V9w9aRqWa0CZRXOlOhA3lTNKmZZbTTqIpFhGn7Wh8PfPbj1QbpuSDnSQ0FHgoWcwItk66F/3zfrniV/050F8S5KQCORr98mdvoEgqqLSEY2O6gZ/YMMPaMsLptNRLDU0wGeMh7ToqsaAmzOanTtGJUwYoVtqVtGiu/pzIsDBmIiLXKbAdmWVvJv7ndVMbX4UZk0lqqSSLRXHKkVVo9jcaME2J5RNHMNHM3YrICGtMrEun5EIIll/+S1pn1eCiWrurVeq3eRxFOIJjOIUALqEON9CAJhAYwhO8wKvHvWfvzXtftBa8fOYQfsH7+AYC/42n</latexit>m3<latexit sha1_base64="yivungj6LXy6qPeP5ZOum6N6beg=">AAAB6nicbVBNSwMxEJ3Ur1q/qh69BIvgqexKUY8FL3qraD+gXUo2zbahSXZJskJZ+hO8eFDEq7/Im//GtN2Dtj4YeLw3w8y8MBHcWM/7RoW19Y3NreJ2aWd3b/+gfHjUMnGqKWvSWMS6ExLDBFesabkVrJNoRmQoWDsc38z89hPThsfq0U4SFkgyVDzilFgnPch+rV+ueFVvDrxK/JxUIEejX/7qDWKaSqYsFcSYru8lNsiItpwKNi31UsMSQsdkyLqOKiKZCbL5qVN85pQBjmLtSlk8V39PZEQaM5Gh65TEjsyyNxP/87qpja6DjKsktUzRxaIoFdjGePY3HnDNqBUTRwjV3N2K6YhoQq1Lp+RC8JdfXiWti6p/Wa3d1yr1uzyOIpzAKZyDD1dQh1toQBMoDOEZXuENCfSC3tHHorWA8plj+AP0+QMEg42o</latexit>m4<latexit sha1_base64="hfw/CoiPS+kmAv7AIqUI0BTKMwg=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0lKUY8FL3qraGuhDWWz3bRLN5uwOxFK6E/w4kERr/4ib/4bt20O2vpg4PHeDDPzgkQKg6777RTW1jc2t4rbpZ3dvf2D8uFR28SpZrzFYhnrTkANl0LxFgqUvJNoTqNA8sdgfD3zH5+4NiJWDzhJuB/RoRKhYBStdK/6tX654lbdOcgq8XJSgRzNfvmrN4hZGnGFTFJjup6boJ9RjYJJPi31UsMTysZ0yLuWKhpx42fzU6fkzCoDEsbalkIyV39PZDQyZhIFtjOiODLL3kz8z+umGF75mVBJilyxxaIwlQRjMvubDITmDOXEEsq0sLcSNqKaMrTplGwI3vLLq6Rdq3oX1fpdvdK4zeMowgmcwjl4cAkNuIEmtIDBEJ7hFd4c6bw4787HorXg5DPH8AfO5w8DAY2n</latexit>n2<latexit sha1_base64="rP1yoljo9eAs8f5eeCn5zEjt44E=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0m0qMeCF71VtB/QhrLZTtqlm03Y3Qgl9Cd48aCIV3+RN/+N2zYHrT4YeLw3w8y8IBFcG9f9cgorq2vrG8XN0tb2zu5eef+gpeNUMWyyWMSqE1CNgktsGm4EdhKFNAoEtoPx9cxvP6LSPJYPZpKgH9Gh5CFn1FjpXvbP++WKW3XnIH+Jl5MK5Gj0y5+9QczSCKVhgmrd9dzE+BlVhjOB01Iv1ZhQNqZD7FoqaYTaz+anTsmJVQYkjJUtachc/TmR0UjrSRTYzoiakV72ZuJ/Xjc14ZWfcZmkBiVbLApTQUxMZn+TAVfIjJhYQpni9lbCRlRRZmw6JRuCt/zyX9I6q3oX1dpdrVK/zeMowhEcwyl4cAl1uIEGNIHBEJ7gBV4d4Tw7b877orXg5DOH8AvOxzcEhY2o</latexit>n3<latexit sha1_base64="jNWSYueKIy9Zm00jWGewW9/9lX4=">AAAB6nicbVBNS8NAEJ3Ur1q/qh69LBbBU0mkqMeCF71VtB/QhrLZbtqlm03YnQgl9Cd48aCIV3+RN/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38z89hPXRsTqEScJ9yM6VCIUjKKVHlS/1i9X3Ko7B1klXk4qkKPRL3/1BjFLI66QSWpM13MT9DOqUTDJp6VeanhC2ZgOeddSRSNu/Gx+6pScWWVAwljbUkjm6u+JjEbGTKLAdkYUR2bZm4n/ed0Uw2s/EypJkSu2WBSmkmBMZn+TgdCcoZxYQpkW9lbCRlRThjadkg3BW355lbQuqt5ltXZfq9Tv8jiKcAKncA4eXEEdbqEBTWAwhGd4hTdHOi/Ou/OxaC04+cwx/IHz+QMGCY2p</latexit>n4tntorch: Tensor Network Learning with PyTorch

References

Biamonte, J. (2019). Lectures on quantum tensor networks. arXiv preprint arXiv:1912.10049. 2

Cichocki, A., Lee, N., Oseledets, I. V., Phan, A.-H., Zhao, Q., and Mandic, D. P. (2016). Tensor networks for
dimensionality reduction and large-scale optimization: Part 1 - Low-rank tensor decompositions. Foundations and
Trends in Machine Learning, 9(4-5):249–429. 1, 2

Civril, A. and Magdon-Ismail, M. (2009). On selecting a maximum volume sub-matrix of a matrix and related

problems. Theoretical Computer Science, 410(47-49):4801–4811. 6

de Lathauwer, L., de Moor, B., and Vandewalle, J. (2000). On the best rank-1 and rank-(R1, R2, ..., RN ) approximation

of higher-order tensors. SIAM Journal of Matrix Analysis and Applications, 21(4):1324–1342. 2

Gusak, J., Kholiavchenko, M., Ponomarev, E., Markeeva, L., Oseledets, I., and Cichocki, A. (2019). MUSCO: Multi-

stage compression of neural networks. arXiv preprint 1903.09973. 1

Hao, L., Liang, S., Ye, J., and Xu, Z. (2018). TensorD: A tensor decomposition library in TensorFlow. Neurocomput-

ing, 318:196–200. 1

Harshman, R. A. (1970). Foundations of the PARAFAC procedure: Models and conditions for an “explanatory”

multi-modal factor analysis. UCLA Working Papers in Phonetics, 16:1–84. 2

He, W., Chen, Y., Yokoya, N., Li, C., and Zhao, Q. (2022). Hyperspectral super-resolution via coupled tensor ring

factorization. Pattern Recognition, 122:108280. 1

Hrinchuk, O., Khrulkov, V., Mirvakhabova, L., Orlova, E., and Oseledets, I. (2019). Tensorized embedding layers for

efﬁcient model compression. arXiv preprint 1901.10787. 1

Idelbayev, Y. and Carreira-Perpi˜n´an, M. ´A. (2020). Low-rank compression of neural nets: Learning the rank of each
layer. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 8049–8059.
1

Izmailov, P., Novikov, A., and Kropotov, D. (2018). Scalable gaussian processes with billions of inducing inputs via
tensor train decomposition. In International Conference on Artiﬁcial Intelligence and Statistics, pages 726–735.
PMLR. 7

Khrulkov, V., Hrinchuk, O., Mirvakhabova, L., Orlova, E., and Oseledets, I. (2019). Tensorized embedding layers for

efﬁcient model compression. arXiv preprint 1901.10787. 1

Kolbeinsson, A., Kossaiﬁ, J., Panagakis, Y., Bulat, A., Anandkumar, A., Tzoulaki, I., and Matthews, P. M. (2021).

Tensor dropout for robust learning. IEEE Journal of Selected Topics in Signal Processing, 15(3):630–640. 1

Kolda, T. G. and Bader, B. W. (2009). Tensor decompositions and applications. SIAM Review, 51(3):455–500. 1, 2, 3
Kossaiﬁ, J., Panagakis, Y., Anandkumar, A., and Pantic, M. (2019). TensorLy: Tensor learning in Python. Journal of

Machine Learning Research, 20(1):925–930. 1

Kossaiﬁ, J., Toisoul, A., Bulat, A., Panagakis, Y., Hospedales, T. M., and Pantic, M. (2020). Factorized higher-order
CNNs with an application to spatio-temporal emotion estimation. In Proceedings of the IEEE/CVF Conference on
Computer Vision and Pattern Recognition, pages 6060–6069. 1

Kuznetsov, M., Polykovskiy, D., Vetrov, D., and Zhebrak, A. (2019). A prior of a googol Gaussians: a tensor ring
induced prior for generative models. In Advances in Neural Information Processing Systems, pages 4104–4114. 1

Ma, X., Zhang, P., Zhang, S., Duan, N., Hou, Y., Zhou, M., and Song, D. (2019). A tensorized transformer for

language modeling. In Advances in Neural Information Processing Systems, pages 2232–2242. 1

Mikhalev, A. (2016). maxvolpy: routines for ﬁnding maximum volume submatrices and building cross- and CGR-

approximations. BitBucket repository, https://bitbucket.org/muxas/maxvolpy. 6

Mikhalev, A. and Oseledets, I. V. (2018). Rectangular maximum-volume submatrices and their applications. Linear

Algebra and its Applications, 538(Supplement C):187 – 211. 6

Novikov, A., Izmailov, P., Khrulkov, V., Figurnov, M., and Oseledets, I. (2020). Tensor train decomposition on

TensorFlow (T3F). Journal of Machine Learning Research, 21:1–7. 1

Novikov, A., Podoprikhin, D., Osokin, A., and Vetrov, D. (2015). Tensorizing neural networks. In Advances in Neural

Information Processing Systems, pages 442–450. 1, 3, 7

Oseledets, I. V. (2011). Tensor-train decomposition. SIAM Journal on Scientiﬁc Computing, 33(5):2295–2317. 2, 3, 4

Oseledets, I. V. (2015). ttpy: Python implementation of the tensor train (TT)-Toolbox. GitHub repository, https:

//github.com/oseledets/ttpy. 4

8

tntorch: Tensor Network Learning with PyTorch

Oseledets, I. V. and Tyrtyshnikov, E. (2010). TT-cross approximation for multidimensional arrays. Linear Algebra

Applications, 432(1):70–88. 3, 6

Pan, Y., Wang, M., and Xu, Z. (2021). TedNet: a PyTorch toolkit for tensor decomposition networks. arXiv e-prints.

1

Panagakis, Y., Kossaiﬁ, J., Chrysos, G. G., Oldﬁeld, J., Nicolaou, M. A., Anandkumar, A., and Zafeiriou, S. (2021).

Tensor methods in computer vision and deep learning. Proceedings of the IEEE, 109(5):863–890. 1

Roberts, C., Milsted, A., Ganahl, M., Zalcman, A., Fontaine, B., Zou, Y., Hidary, J., Vidal, G., and Leichenauer, S.

(2019). TensorNetwork: A library for physics and machine learning. 1

Sozykin, K., Chertkov, A., Schutski, R., Phan, A.-H., Cichocki, A., and Oseledets, I. (2022). Ttopt: A maximum
volume quantized tensor train-based optimization and its application to reinforcement learning. arXiv preprint
arXiv:2205.00293. 6

Usvyatsov, M., Makarova, A., Ballester-Ripoll, R., Rakhuba, M., Krause, A., and Schindler, K. (2021). Cherry-picking
gradients: Learning low-rank embeddings of visual data via differentiable cross-approximation. In International
Conference on Computer Vision. 1, 6

Wang, D., Wu, B., Zhao, G., Chen, H., Deng, L., Yan, T., and Li, G. (2020). Kronecker cp decomposition with fast

multiplication for compressing rnns. arXiv preprint 2008.09342. 1

9

