2
2
0
2

y
a
M
1
3

]

C
O
.
h
t
a
m

[

1
v
2
3
0
0
0
.
6
0
2
2
:
v
i
X
r
a

A new mixed-integer programming model for irregular strip
packing based on vertical slices with a reproducible survey

Juan J. Lastra-Díaza,∗, M. Teresa Ortuñoa

aDepartment of Statistics and Operational Research, Institute of Interdisciplinary Mathematics, UCM Research Group HUMLOG, Complutense
University of Madrid, Spain

A R T I C L E I N F O

A B S T R A C T

Keywords:
Packing
Integer programming
Irregular strip packing
Nesting
Cutting

The irregular strip-packing problem, also known as nesting or marker making, is deﬁned as the
automatic computation of a non-overlapping placement of a set of non-convex polygons onto a
rectangular strip of ﬁxed width and unbounded length, such that the strip length is minimized.
Nesting methods based on heuristics are a mature technology, and currently, the only practical
solution to this problem. However, recent performance gains of the Mixed-Integer Programming
(MIP) solvers, together with the known limitations of the heuristics methods, have encouraged
the exploration of exact optimization models for nesting during the last decade. Despite the re-
search eﬀort, the current family of exact MIP models for nesting cannot eﬃciently solve both
large problem instances and instances containing polygons with complex geometries. In order to
improve the eﬃciency of the current MIP models, this work introduces a new family of continu-
ous MIP models based on a novel formulation of the NoFit-Polygon Covering Model (NFP-CM),
called NFP-CM based on Vertical Slices (NFP-CM-VS). Our new family of MIP models is based
on a new convex decomposition of the feasible space of relative placements between pieces into
vertical slices, together with a new family of valid inequalities, symmetry breakings, and vari-
able eliminations derived from the former convex decomposition. Our experiments show that
our new NFP-CM-VS models outperform the current state-of-the-art MIP models. Finally, we
provide a detailed reproducibility protocol and dataset based on our Java software library as
supplementary material to allow the exact replication of our models, experiments, and results.

1. Introduction

Cutting and packing regular (convex) and irregular (non-convex) polygons onto a rectangular strip with unbounded
length is a tedious and omnipresent task in most manufacturing industries based on the cutting of any ﬂat material. For
instance, Milenkovic et al. [58] study the nesting problem for the fashion and apparel industry, whilst Heistermann and
Lengauer [45] and Whelan and Batchelor [95] do it on leather manufacturing, Elamvazuthi et al. [36] in furniture, Han
et al. [44] in the glass industry, Alves et al. [8] in the automotive industry, and Cheok and Nee [18] in shipbuilding. The
irregular strip-packing methods aim to compute a non-overlapping placement of a set of irregular polygons onto a ﬁxed-
width rectangular strip with unbounded length, called the board, whose length is the minimum between all feasible
placements. Another closely related problem, called two-dimensional bin packing [57], is deﬁned as the computation
of a non-overlapping placement of a set of polygons onto a larger closed polygon, called the bin, to minimize the
number of bins required. Although most of bin packing problems are deﬁned for rectangular bins and items [47], we
also ﬁnd many irregular bin packing problems in the aforementioned industries. Strip and bin packing problems, and
all their variants concerning the geometry of the pieces or boards, belong to the broader family of Cutting and Packing
(C&P) problems categorized by Dyckhoﬀ [35] and Wäscher et al. [94], and extensively reviewed by Sweeney and
Paternoster [90], Dowsland and Dowsland [32], Wang and Wäscher [93], and Bennell et al. [14].

Research on the irregular strip and bin packing problems can be traced back to the pioneering Linear Programming
(LP) models for rectangular bin packing introduced by Gilmore and Gomory [41], and the pioneering heuristic methods
for irregular strip packing proposed by Art [11], Adamowicz and Albano [2, 1], and Albano and Sapuppo [5] in the
late nineteen sixties and seventies. These early works introduce many of the basic ideas subsequently exploited by all
heuristics methods reported in the literature, such as the notion of a feasible non-overlapping region between pieces
based on the No-Fit Polygon (NFP) representation, and the sequential placement of pieces based on a bottom-left

∗Corresponding author
Email addresses: jlastra@ucm.es (J.J. Lastra-Díaz); mteresa@ucm.es (M.T. Ortuño)
ORCID(s): 0000-0003-2522-4222 (J.J. Lastra-Díaz); 0000-0002-5568-9496 (M.T. Ortuño)

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 1 of 25

 
 
 
 
 
 
A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

heuristics. Given two polygons 𝐴, 𝐵 ⊂ ℝ2, the no-ﬁt polygon of 𝐵 regarding 𝐴 is deﬁned by 𝑁𝐹 𝑃𝐴𝐵 = 𝐴⊕(−𝐵(0, 0)),
where ⊕ symbol denotes the Minkowski sum of two sets 𝑆1, 𝑆2 ⊂ ℝ2, such that 𝑆1 ⊕ 𝑆2 = {𝑝 + 𝑞 ∶ 𝑝 ∈ 𝑆1, 𝑞 ∈ 𝑆2}
and 𝐵(0, 0) is the translation of the polygon 𝐵 such that its reference point is positioned at the origin. The boundary
and outer region of the no-ﬁt polygon 𝑁𝐹 𝑃𝐴𝐵 set the feasible positions in which polygon 𝐵 can be placed without
rotating into a non-overlapping position regarding polygon 𝐴. The no-ﬁt polygon allows computing the feasible relative
placements for any polygon pair (𝐴, 𝐵) a priori by checking whether their relative position vector (𝑥𝐵 − 𝑥𝐴, 𝑦𝐵 − 𝑦𝐴)
belongs to either the boundary or the outer region of 𝑁𝐹 𝑃𝐴𝐵. Consequently, this later property has converted the NFP
into the most broadly adopted and eﬀective geometric representation for the nesting problem reported in the literature,
both by the families of heuristics methods [13] and exact mathematical models [53].

Fowler et al. [40] and Milenkovic et al. [58] show that the irregular strip-packing problem is NP-complete. For this
reason, most practical solutions reported in the literature since the pioneering work of Art [11] are based on sequential
placement heuristics to build eﬃciently feasible solutions that are combined with meta-heuristics for exploring the
space of feasible solutions, as shown in most of surveys on nesting [33, 34, 46, 13, 70]. Current heuristics-based meth-
ods can eﬃciently compute acceptable solutions for large problem instances, which have encouraged their early and
extensive adoption in all industries mentioned above, especially in those industries with a so signiﬁcant and perma-
nent diversity of products as the garment industry [66]. Elkeran [37] introduces the current state-of-the-art heuristics
method for nesting, called Guided Cuckoo Search (GCS), which deﬁnes a two-stages method based on piece clustering
and a NFP-based bottom-left heuristics [42] to build an initial feasible solution that is shrinked by solving an overlap
minimization problem using a variant of the cuckoo search meta-heuristics. Although GCS was introduced almost a
decade ago, subsequent works have been unable to outperform its results, as shown by Pinheiro et al. [65, table 3],
Sato et al. [78, table 5], Cherri et al. [22, table 4], Mundim et al. [62, table 6], Amaro Júnior et al. [9, table 2], and Sato
et al. [77, tables 4-5]. GCS [37] also signiﬁcantly outperforms a commercial nesting system broadly adopted in the
industry [10, ﬁgure 3]. However, the heuristics methods demand several hours to improve their initial solutions [62,
table 6], and they can neither provide an optimality proof nor a gap measure to the optimal solution.

Recent performance gains of the Mixed-Integer Programming (MIP) solvers, and the limitations of the heuristics
methods mentioned above, have encouraged the exploration of exact mathematical models for nesting during the last
decade, as shown by Leao et al. [53]. The mathematical models for nesting can be categorized into continuous, discrete,
or semi-continuous models according to the type of decision variable used to represent the position of the pieces. Li
[54, §8] introduces the ﬁrst continuous MIP model for nesting reported in the literature to solve a limitation of the
pioneering LP compaction model of Li and Milenkovic [55, 56]. Despite Li’s model is not experimentally evaluated,
it sets the two main features of the family of continuous MIP models based on the NFP as follows: (1) the convex
decomposition of the outer NFP feasible regions; and (2) the deﬁnition of mutually-exclusive binary variables to set
the pairwise non-overlapping constraints between pieces deﬁning the feasible regions for their relative placement.
Thus, we say that Li’s model sets the basic continuous linear MIP model for nesting without rotations, from which
all subsequent works, including the present work, introduce more tightened and reﬁned formulations. For instance,
Dean [30, §5] introduces and evaluates for the ﬁrst time a MIP model for nesting based on a reﬁnement of the Daniels
et al. [29] bin packing model that is essentially identical to the Li’s model. Subsequently, Fischetti and Luzzi [39]
(F&L) introduce a reﬁnement of Li’s model based on lifting the big-M formulation and a branching-priority algorithm
to guide the Branch&Bound (B&B) exploration by ﬁxing large sets of feasible relative placements among pieces.
Álvarez-Valdés et al. [7] improve the F&L model by introducing a new MIP model called HS2, which is based on a
detailed convex decomposition of the feasible regions, a lifting for the bound constraints of the continuous variables,
six new branching strategies, and the x-axis ordering of identical pieces to remove all symmetric solutions derived
from their permutation. However, the HS2 model [7] cannot signiﬁcantly improve the F&L model despite all their
improvements.

More recently, Cherri et al. [25] introduce two continuous MIP models improving the HS2 model [7], together with
the ﬁrst MIP model integrating discrete rotations, which are based on the convex decomposition of the pieces and the
deﬁnition of the non-overlapping constraints between pieces by using the convex no-ﬁt polygons among their convex
parts. The ﬁrst model, called Direct Trigonometry Mode (DTM), uses a direct trigonometry function encoding the
separation lines deﬁned by the edges of the polygons to build the non-overlapping constraints between pairs of convex
parts from two pieces, whilst the second model, called NoFit-Polygon Covering Model (NFP-CM), uses the convex
NFP between convex parts and several valid inequalities. DTM and NFP-CM use the same x-axis symmetry-breaking
for identical pieces proposed by Alvarez-Valdes et al. [6]. Subsequently, Rodrigues et al. [73] improve the NFP-CM
model by breaking the symmetries of the feasible space for the relative placements between pieces, setting the current

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 2 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

state-of-the-art in terms of performance among the family of exact continuous mathematical models for irregular strip
packing. However, the Improved NFP-CM model [73] is only able to solve small problem instances with up to 17
pieces with simple geometry [73, table 2], and unlike the NFP-CM model [25, table 3], it has not been evaluated on
complex small and large problem instances yet.

The main aim of this work is to introduce a new family of continuous MIP models for irregular strip packing
without rotations capable of improving the performance of current state-of-the-art MIP models. The new family of
MIP models, called NFP-CM based on Vertical Slices (NFP-CM-VS), is a novel and more tightened formulation of the
state-of-the-art NFP-CM models [25, 73] that is based on a new disjoint convex decomposition of the feasible regions
between convex parts into vertical slices, together with a new family of valid inequalities, symmetry breakings, and
variable reductions derived from the former geometric decomposition. A second aim of this work is to carry out a fair
reproducible comparison of our new family of MIP models with the state-of-the-art family of NFP-CM models [25, 73]
by replicating these later models and implementing our new MIP models into a single software platform integrating
the latest version of the Gurobi solver, which will be provided together with a detailed reproducibility protocol and
dataset as supplementary material to allow the exact replication of all our models, experiments, and results.

1.1. Motivation and hypothesis

Our main motivation is the proposal and evaluation of a new and more tightened formulation of the family of NFP-
CM models introduced by Cherri et al. [25] and Rodrigues et al. [73]. Our main hypothesis is that the new NFP-CM-VS
models could improve the performance of the current state-of-the-art MIP models.

The second motivation of this work is to implement a reproducible experimental survey for a fair and conﬁrmatory
comparison of all models, which is based on our software implementation of all MIP models evaluated herein into a
single Java software library based on the latest version of the Gurobi solver, called Gurobi 9.5.

A third motivation is to bridge the lack of reproducibility resources hampering the independent replication and
conﬁrmation of previously reported models and results, as well as the incorporation of newcomers into this area, by
providing a detailed reproducibility protocol and dataset as supplementary material to allow the exact replication of
all MIP models evaluated herein, as well as all our experiments and results.

And ﬁnally, our fourth motivation is a conﬁrming evaluation for the ﬁrst time of the state-of-the-art Improved
NFP-CM model [73] in the same problem instances reported for NFP-CM [25, tables 1-2] to provide a fair and updated
benchmark of the current state-of-the-art MIP models for nesting. We also evaluate the NFP-CMnc model [25] in a
set of large problem instances not reported before.

1.2. Deﬁnition of the problem and contributions

The irregular strip-packing problem can be abstractly deﬁned regardless of the geometric representation of the
non-overlapping constraints as follows. Let be  = {𝑃𝑖}𝑖=1,…,𝑛 the set of pieces to be placed onto the board ,
𝑇 = {𝑡𝑖}𝑖=1,…,𝑛 and 𝑅 = {𝑟𝑖}𝑖=1,…,𝑛 the set of translation vectors and orientations deﬁning a feasible solution of the
problem, 𝐿 the length of the board,  the set of admissible orientations, 𝑃 (𝑟) ⊂ ℝ2 denotes an orientation of the piece
𝑃 , and 𝑖𝑛𝑡(𝐴) denotes the interior set for any set 𝐴 ⊂ ℝ2 with the usual topology of ℝ2. Then, the minimization problem
(1) deﬁnes the optimal solution to the irregular strip packing problem, where constraints (2) prevent the overlapping
of pieces, and constraints (3) force the pieces to be entirely contained in the board.

minimize 𝐿
subject to

𝑖𝑛𝑡(𝑃𝑖(𝑟𝑖) ⊕ 𝑡𝑖) ∩ 𝑖𝑛𝑡(𝑃𝑗(𝑟𝑗) ⊕ 𝑡𝑗) = ∅,
(𝑃𝑖(𝑟𝑖) ⊕ 𝑡𝑖) ⊆ ,
𝑡𝑖 ∈ ℝ2, 𝑟𝑖 ∈ , 𝐿 ∈ ℝ>0

1 ≤ 𝑖 ≤ 𝑛

1 ≤ 𝑖 < 𝑗 ≤ 𝑛

(1)

(2)

(3)

(4)

The main research problem tackled in this work is the deﬁnition and evaluation of a new and more tightened
MIP model for irregular strip packing than the current state-of-the-art family of NFP-CM models [25, 73]. Our main
contribution is the introduction of a new family of MIP models, called NFP-CM-VS, which is based on a new convex
decomposition of the feasible regions between convex parts into vertical slices, together with a new family of valid
inequalities, symmetry breakings, and variable eliminations derived from the former geometric decomposition. Our
second signiﬁcant contribution is the introduction of the ﬁrst reproducible experimental survey in this line of research,
which is based on our software implementation of all models evaluated herein into a Java software library, together
with a detailed reproducibility protocol and dataset to allow the exact replication of all our models and results.

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 3 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

The rest of the paper is structured as follows. Section 2 reviews the literature on exact mathematical models for
irregular strip packing. Section 3 introduces our new family of MIP models, whilst the section 4 details our experi-
mental setup and results, and section 5 introduces our discussion of the results. Next section summarizes our main
conclusions and future work. Subsequently, Appendix A introduces all raw output data generated for each MIP model
evaluated herein not included in the results section because of lack of room. Finally, Appendix B introduces a detailed
reproducibility protocol based on our supplementary dataset [50] to allow the exact replication of all our models,
experiments, and results. Both aforementioned appendices are provided as supplementary material.

2. Related work on exact models for nesting

Our introduction has provided a detailed review of the family of continuous MIP models for irregular strip packing
based on the NFP, to which this work belongs. In addition, this section introduces a comprehensive categorization of
the literature on exact mathematical models for nesting, together with an extended review of the linear MIP models
based on the NFP. However, for a detailed and recent review of the family of mathematical models, we refer the reader
to the survey of Leao et al. [53] and the survey on geometric representations for nesting of Bennell and Oliveira [12] .

2.1. Categorization of exact mathematical models

Figure 1 shows our categorization of the family of exact continuous mathematical models for irregular strip packing
reported in the literature, which can be divided into three large families as follows. First, the family of Linear MIP
models based on the NFP, whose main features are the convex decomposition of the feasible regions deﬁned by the
pairwise NFP between pieces and the use of mutually exclusive binary variables to select their relative placements,
such as the family of continuous models pioneered by Li [54, §8], Dean [30, §5], and Fischetti and Luzzi [39], which
are subsequently reﬁned by Alvarez-Valdes et al. [6], Cherri et al. [25], and Rodrigues et al. [73]. Second, the family of
Constraint Programming (CP) models based on the NFP, whose pioneering work is introduced by Ribeiro et al. [69],
and subsequently improved by Carravilla et al. [17], Ribeiro and Carravilla [68], and Cherri et al. [21]. And third,
Other models based on alternatives geometric representations and Non-Linear Programming (NLP) models, such as
(3.a) the family of models based on Φ-functions, whose pioneering works are introduced by Stoyan et al. [88], Chernov
et al. [19], and Stoyan et al. [89]; (3.b) others non-linear models based on direct trigonometry introduced by Rocha
et al. [71], Cherri et al. [24], and Peralta et al. [64]; and ﬁnally, (3.c) the family of models based on circle coverings
admitting free rotations, whose pioneering work is introduced by Jones [48] and subsequently reﬁned by Rocha et al.
[72], Rocha et al. [71], and Wang et al. [92].

Likewise, the linear MIP models can be divided into three subfamilies according to the nature of the decision vari-
ables encoding the (𝑥, 𝑦) position of the pieces as follows: (1) continuous models, such as the former aforementioned
ones [54, 30, 39, 6, 25, 73]; (2) discrete models like the pioneering Dotted-Board model of Toledo et al. [91], subse-
quently reﬁned by Rodrigues and Toledo [74]; and (3) semi-continuous models as that proposed by Leao et al. [52].
On the other hand, the linear MIP models can also be divided into models based on the NFP or direct trigonometry
according to the geometric representation used for building the non-overlapping constraints, as shown in ﬁgure 1.

2.2. Linear continuous MIP models

We summarize the review of linear continuous MIP models advanced in our introduction as follows. Li [54, §8]
introduces the ﬁrst continuous MIP model for irregular strip packing reported in the literature, whilst Dean [30, §5] eval-
uates for the ﬁrst time a minor adaptation of the Li’s model, and Fischetti and Luzzi [39] introduce and experimentally
evaluate a reﬁnement of the Li’s model based on a lifting of the big-M formulation together with a branching-priority
algorithm, which is subsequently reﬁned by Álvarez-Valdés et al. [7] by introducing the HS2 model based on a detailed
convex decomposition of the feasible space of relative placements between pieces, a lifting for the bound constraints of
the continuous variables, and six new branching strategies. More recently, Cherri et al. [25] introduce two continuous
MIP models, called DTM and NFP-CM, which are based on the convex decomposition of the pieces and the deﬁnition
of the non-overlapping constraints between pieces by using either direct trigonometry or the convex no-ﬁt polygons
among their convex parts, together with some valid inequalities and a variable elimination. Subsequently, Rodrigues
et al. [73] improve the NFP-CM model by breaking the symmetries in the feasible space of relative placements between
pieces. On the other hand, Santoro and Lemos [76] introduce an exact MIP model to compute eﬃciently tighter upper
bounds for the irregular nesting problem based on approximating the input pieces by parallel-chamfered n-gons with
up to 8 sides, as shown in Santoro and Lemos [76, ﬁg. 2], and generalizing the disjunctive MIP model for rectangular
strip packing proposed by Sawaya and Grossmann [80].

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 4 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

Exact models
for
irregular
strip packing

⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩

-

Linear
MIP
models

⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩

- based on
the NFP

- Li [54], Dean [30], Fischetti and Luzzi [39]
- Alvarez-Valdes et al. [6, HS1, HS2]
- Cherri et al. [25, NFP-CM]
- Rodrigues et al. [73]
- Santoro and Lemos [76, special convex pieces]
- Family of NFM-CM-VS models (ths work)

⎧
⎪
⎪
⎨
⎪
⎪
⎩

- Toledo et al. [91, Dotted-Board (DB)]
- Rodrigues and Toledo [74, Clique covering + DB]
- Cherri et al. [23, DB with discrete rotations]
- Al Theeb et al. [4, Improved DB Model (IDBM)]
- Rodrigues&Andretta [81, 82, Stochastic DB])

- Continuous
positions

- Discrete
positions

⎧
⎪
⎪
⎨
⎪
⎪
⎩

{

- Semi-continuous
positions

- Leao et al. [52, y-axis discretization],
- Leao and Toledo [51]

⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩

-

based on Direct
Trigonometry (DT)

{

- Cherri et al. [25, DTM]
- Cherri et al. [25, DTM + discrete rotations]

-

Non-Linear
Programming
(NLP) models
(continuous
rotations)

⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎩

- based on

Φ-functions

⎧
⎪
⎨
⎪
⎩

- Stoyan et al. [88, 89], Stoyan and Romanova [86],
- Chernov et al. [19, 20],
- Stoyan et al. [87, 83, 84, 85]
- Pankratov et al. [63], Romanova et al. [75]

{

- based on circle coverings

- Jones [48], Rocha et al. [72]
- Rocha et al. [71], Wang et al. [92]

-

based on Direct
Trigonometry
and the NFP

- Kallrath [49, non-convex NLP&MINLP models]

(restricted to circles, rectangles, and convex pieces)

- Cherri et al. [24, convex MIQCP model]
- Peralta et al. [64, non-convex NLP model]

⎧
⎪
⎨
⎪
⎩

-

Constraint Programming
(CP) models based on
the NFP

- Ribeiro et al. [69, convex pieces]
- Carravilla et al. [17, irregular pieces]
- Ribeiro and Carravilla [67, 68, global nesting constraint]
- Carravilla and Ribeiro [16, hybrid CP-MIP]
- Cherri et al. [21, new global constraint + DB model]

⎧
⎪
⎪
⎨
⎪
⎪
⎩

Figure 1: Categorization of exact mathematical models for irregular strip packing.

Regardless of the minor diﬀerences in the formulation of the continuous MIP models mentioned above, their main
diﬀerence is the geometric decomposition of the feasible space of relative placements between pieces used to build
the non-overlapping constraints, as shown in ﬁgure 2. Fischetti and Luzzi [39] propose a convex decomposition of the
feasible regions using the overall 𝑁𝐹 𝑃𝑖𝑗 between pieces 𝑖 and 𝑗, as shown in ﬁgure 2.a. However, Fischetti and Luzzi
do not provide a detailed deﬁnition of its geometry, which encourages Alvarez-Valdes et al. [6] to propose a well-deﬁned
convex decomposition based on horizontal slices to build their HS2 model, as shown in ﬁgure 2.b. Subsequently, Cherri
et al. [25] propose a convex decomposition of the pieces and the deﬁnition of their non-overlapping constraints by using
the convex no-ﬁt polygons among their convex parts, as shown in ﬁgure 2.c. The convex decomposition proposed by
Cherri et al. for their NFP-CM model provides two key advantages on previous MIP models as follows: (1) it avoids
the need to explicitly compute the overall NFP between irregular pieces by computing the NFP between convex parts,
which is much easier than the former; and, (2) it allows building the non-overlapping constraints between pieces
using only one constraint per binary variable, unlike the previous MIP models that require at least three constraints
per binary variable. However, one signiﬁcant drawback of the NFP-CM model [25] is the existence of symmetric

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 5 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

𝑣4
𝑖𝑗

𝑣5
𝑖𝑗

𝑣6
𝑖𝑗

𝑁𝐹 𝑃𝑖𝑗

𝑣7
𝑖𝑗

𝑣1
𝑖𝑗

𝑣3
𝑖𝑗

𝑣2
𝑖𝑗

𝑣7
𝑖𝑗

𝑣8
𝑖𝑗

𝑣6
𝑖𝑗

𝑣2
𝑖𝑗

𝑁𝐹 𝑃𝑖𝑗

𝑣5
𝑖𝑗

𝑣1
𝑖𝑗

𝑣4
𝑖𝑗

𝑣𝑝3
𝑖𝑗

NFP𝑝
𝑖𝑗

𝑣𝑝2
𝑖𝑗

𝑣𝑝4
𝑖𝑗

𝑣𝑝5
𝑖𝑗

𝑣𝑝3
𝑖𝑗

NFP𝑝
𝑖𝑗

𝑣𝑝2
𝑖𝑗

𝑣𝑝4
𝑖𝑗

𝑣𝑝5
𝑖𝑗

(a) Fischetti and Luzzi [39]

𝑣3
𝑖𝑗
(b) HS2 model [6]

𝑣𝑝1
𝑖𝑗

𝑣𝑝1
𝑖𝑗

(c) NFP-CM model [25]

(d) Improved NFP-CM [73]

Figure 2: Disjoint convex decomposition of the feasible relative placements between pieces deﬁned by each model in the
family of continuous MIP models for irregular strip packing. Each single convex feasible sub-region in ﬁgures (a)-(d)
above is enabled by a mutually-exclusive binary variable 𝑣𝑘
𝑖𝑗. The Fischetti and Luzzi (a) and HS2 (b) models set their
non-overlapping constraints using the overall no-ﬁt polygon 𝑁𝐹 𝑃𝑖𝑗 between pieces 𝑖 and 𝑗, whilst the NFP-CP models
(c-d) set them using the convex NFP parts between each pair of convex parts of two pieces. Figure (c) shows in green
the space of symmetric solutions generated by adjacent feasible sub-regions of the NFP-CM model [25], whilst ﬁgure (d)
shows the symmetry-breaking of the former model proposed by the Improved NFP-CM model [73].

solutions induced by the overlapping of adjacent feasible sub-regions, as shown by regions in green in ﬁgure 2.c, which
encourages Rodrigues et al. [73] to break these symmetries by inserting one additional constraint per binary variable
activating a separation line deﬁned by the previous edge in the polygon’s boundary, as shown in ﬁgure 2.d, at the cost
of doubling the number of non-overlapping constraints to break the symmetries in their geometric decomposition.

The main limitation of the family of current continuous MIP models based on the NFP approach is their inability
to solve either large problem instances or instances including pieces with complex geometries, which we attribute to
two diﬃculties derived from their structure as follows: (1) the large number of binary variables needed to build the
non-overlapping constraints between pieces; and (2) a poor tightening of the LP relaxed model as a consequence of
encoding the linearization of a min-max model in the objective function that does not directly depend on the binary
variables. For instance, the number of binary variables in current continuous exact MIP models [39, 6, 25, 73] is
quadratic regarding the number of pieces 𝑛 with scalability factor (𝑟4 𝑛
(𝑛 − 1)), whilst the number of non-overlapping
2
constraints might be up to three times the latter factor, where 𝑟 is the average number of edges per piece. The 1
𝑛(𝑛 − 1)
2
factor is derived from the pairwise combinatory nature of the problem, whilst the 𝑟4 gives account of the geometric
complexity of the pieces, which derives from the fact that the resulting NFP from two polygons with 𝑠 and 𝑡 edges might
has 𝑂(𝑠2𝑡2) edges in the worst case [3, p.40], although it is at most 𝑠 + 𝑡 for convex polygons. Thus, the complexity of
current continuous MIP models grows rapidly regarding both the number of pieces and its geometric complexity.

2.3. Discrete and semi-continuous MIP models

For the reasons detailed above, several authors have proposed discrete MIP models to solve eﬃciently large problem
instances as follows: (1) the discrete models based on a grid representation of the board introduced by Toledo et al.
[91], which is reﬁned by Rodrigues and Toledo [74] using a clique-based formulation, being subsequently extended by
Rodrigues de Souza and Andretta [81, 82] to deal with the uncertainty in the demand of the pieces using a two-stage
stochastic programming model; and ﬁnally, (2) the semi-continuous model based on the discretization of the y-axis
introduced by Leao et al. [52]. The Dotted-Board model (DB) model of Toledo et al. [91] is able to solve problem
instances with up to 56 pieces of two types to optimality (see [91, table 3]), whilst the semi-continuous MIP model of
Leao et al. [52] removes the resolution error in the x-axis direction and allows solving instances with up to 70 pieces and
larger boards [52, table 1] than the DB model. However, the discrete models above are approximations of the exact
continuous problem. Thus, the quality of their solutions depends on the grid resolution, as shown experimentally
by Sato et al. [79]. Moreover, the computational cost of the discrete models also grows rapidly with the resolution
of the grid and the number of diﬀerent piece types, which encouraged several improvements to the DB model as
follows. Rodrigues and Toledo [74] propose a new clique-based formulation of the DB model, whilst Cherri et al. [23]
propose two methods to build non-regular grids together with an eﬃcient data structure to represent them. The grid
representation, also called no-ﬁt raster, is also used by recent state-of-the-art heuristics methods [62, 61].

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 6 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

3. The new family of MIP models for nesting

This section introduces two new MIP models for irregular strip packing based on a new disjoint convex decompo-
sition of the space of feasible placements between pieces deﬁned by the pairwise convex NFP between their convex
parts, together with a set of valid inequalities, symmetry breakings, and variable eliminations derived from the former
decomposition. The use of the convex NFP between convex parts of the pieces to build the pairwise non-overlapping
constraints is the core innovation of the family of NFP-CM models proposed by Cherri et al. [25] and subsequently
improved by Rodrigues et al. [73] to break the symmetries of the NFP-CM model, as shown in ﬁgure 2.d. Thus, our
new MIP models set a more tightened formulation than the NFP-CM model for the same feasible space of relative
placements between pieces by deﬁning a new set of constraints and two new binary variables based on our new dis-
joint convex decomposition shown in ﬁgure 5. Our new NFP-CM-VS models include at most 2 binary variables more
per convex NFP part than the NFP-CM model [25] to encode the left and right feasible sub-regions shown in ﬁgure 5
in those cases in which the NFP’s boundary does not include a vertical edge in some of their sides.

The two aims of our new convex decomposition are as follows: (1) to break the symmetries of the feasible solutions;
and (2) to infer a large number of unfeasible relative placements among three pieces or two pieces of the same type,
which can be hand-coded either as feasibility cuts or by removing some binary variables from the model, respectively.
Our new feasibility cuts among three pieces can also be generalized to combinations of more than three pieces; however,
we limit our evaluation herein to piece triplets. First, we introduce the basic formulation of our new MIP model called
No-Fit Polygon Covering Model based on Vertical Slices (NFP-CM-VS). Next, we introduce several families of valid
inequalities and variable eliminations to break the symmetries and remove some unfeasible solutions derived from the
convex NFP parts between two pieces, as well as a family of feasibility cuts among three pieces. Finally, we introduce
the NFP-CM-VS2 model integrating all cuts and variable eliminations of the full NFP-CM-VS model but removes
the big-M terms for the constraints encoding the vertical slices of our convex decomposition by factorizing all x-axis
constraints into two single constraints per convex NFP part.

3.1. Basic notation and geometric tools

Representation of the pieces. Figure 3 details the meaning of the parameters used to represent the geometry of
the pieces and the board. The board is represented by an open rectangle of ﬁxed height 𝐻 and variable length 𝐿,
whose lower and upper bounds are denoted by 𝐿𝑙𝑏 and 𝐿𝑢𝑏 respectively. We use a standard orthogonal x-y reference
frame setting the origin of the board in its bottom-leftmost corner. Each piece 𝑃𝑖 is deﬁned by an irregular polygon
decomposed into a set of disjoint convex polygons, called convex parts, whose boundaries are represented by a counter-
clockwise ordered list of points in the plane, called vertices, such that each pair of consecutive vertices deﬁnes a line
segment, called edge. We use the indexes 𝑓 and 𝑔 to denote the source convex parts generating the convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗
part between the pieces 𝑃𝑖 and 𝑃𝑗. For each piece 𝑃𝑖, one arbitrary vertex from any of its convex parts is selected
as reference point, denoted by 𝑟𝑖 = (𝑥𝑖, 𝑦𝑖), to set the continuous decision variables representing the position of the
piece 𝑖 on the board. The parameters 𝑙𝑚𝑖𝑛
denote the x-axis distance from the leftmost and rightmost points
of piece 𝑖 to its reference point 𝑟𝑖, respectively, whilst ℎ𝑚𝑖𝑛
denote the y-axis distance from the topmost and
bottommost points of piece 𝑖 to 𝑟𝑖. The type of each piece 𝑖 is denoted by 𝑡𝑖, whilst their area and demand are denoted
by Δ𝑡 and 𝑑𝑡 respectively.

and ℎ𝑚𝑎𝑥
𝑖

and 𝑙𝑚𝑎𝑥
𝑖

𝑖

𝑖

Convex decomposition of pieces. To build the non-overlapping constraints of our family of NFP-CM-VS models,
all non-convex pieces must be decomposed into convex polygons, as shown in ﬁgure 3. Thus, each piece 𝑃𝑖 is deﬁned

as the union of 𝑄𝑖 convex parts as follows 𝑃𝑖 =

𝑃 𝑓
𝑖 . We use the Green’s convex decomposition algorithm [43]

𝑄𝑖⋃
𝑓 =1

implemented by the CGAL library to decompose the pieces into convex parts as proposed by Cherri et al. [25], with
the aim of replicating their NFP-CM models and experiments. The Greene’s algorithm eﬃciently approximates the
optimal convex decomposition of a polygon without adding new vertices to its boundary. However, there are many
other alternatives in the literature [38] that could potentially generate fewer number of edges, and thus fewer binary
variables, than the Greene’s algorithm. For instance, we found in many problem instances that our implementation of
a variant of the Angle-Bisector (AB) convex decomposition method [3] generated models with fewer binary variables
than those built using the Greene’s method. Thus, any practical implementation of our models should consider both
the impact of the convex decomposition methods on the size of the resulting MIP models and their computational cost.
Computation of convex NFP parts. Figure 4 shows in light grey the no-ﬁt polygon 𝑁𝐹 𝑃𝐴𝐵 between two convex
polygons 𝐴 and 𝐵 with reference points 𝑟𝐴 and 𝑟𝐵, respectively. The outer and boundary regions of 𝑁𝐹 𝑃𝐴𝐵 deﬁne the

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 7 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

𝐿

𝑃 1
𝑖

𝜕𝑃𝑖

𝑃 2
𝑖

𝑙𝑚𝑎𝑥
𝑖
𝑟𝑖 = (𝑥𝑖, 𝑦𝑖)

ℎ𝑚𝑎𝑥
𝑖

𝑙𝑚𝑖𝑛
𝑖

ℎ𝑚𝑖𝑛
𝑖

𝐻

𝑋

𝑌

(0, 0)

𝜕𝐴

𝑁𝐹 𝑃𝐴𝐵

𝐴

𝑟𝐴

𝜕𝑁𝐹 𝑃𝐴𝐵

𝜕𝐵

𝐵

𝑟𝐵

Figure 3: Representation of the parameters encoding
the geometry of the pieces and the board. Non-convex
pieces are decomposed into convex parts, such that
the piece 𝑖 is decomposed as 𝑃𝑖 = 𝑃 1

𝑖 ∪ 𝑃 2
𝑖 .

Figure 4: No-ﬁt polygon 𝑁𝐹 𝑃𝐴𝐵 between the static
polygon 𝐴 and the orbiting polygon 𝐵, whose boundaries
are denoted by 𝜕𝑁𝐹 𝑃𝐴𝐵, 𝜕𝐴, and 𝜕𝐵, respectively.

𝐿

𝐻

𝑣𝑓 𝑔𝑙
𝑖𝑗

𝑣𝑓 𝑔𝑡2
𝑖𝑗

𝑣𝑓 𝑔𝑡1
𝑖𝑗

𝑣𝑓 𝑔𝑡3
𝑖𝑗

𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗

𝑣𝑓 𝑔𝑟
𝑖𝑗

𝑁𝐹 𝑃 11
𝐴𝐵

𝐴1

𝐴2

𝐵1

𝐴 = 𝐴1 ∪ 𝐴2

𝐵 = 𝐵1

𝑣𝑓 𝑔𝑏1
𝑖𝑗

𝑣𝑓 𝑔𝑏2
𝑖𝑗

𝑣𝑓 𝑔𝑏3
𝑖𝑗

𝑁𝐹 𝑃 21
𝐴𝐵

Figure 5: Disjoint convex decomposition into vertical slices
of the feasible region for the relative placement of piece 𝑃𝑗
regarding piece 𝑃𝑖, as deﬁned by the convex no-ﬁt polygon
𝑁𝐹 𝑃 𝑓 𝑔
in dark grey, which are enabled in our MIP models
𝑖𝑗
by the set of mutually-exclusive binary variables 𝑣𝑓 𝑔𝑘

.

𝑖𝑗

Figure 6: Dashed lines show the boundaries of the
convex 𝑁𝐹 𝑃 11
convex part 𝐵1 of piece 𝐵 and the two convex parts 𝐴1
and 𝐴2 of piece 𝐴.

𝐴𝐵 parts between the single

𝐴𝐵 and 𝑁𝐹 𝑃 21

feasible region in which polygon 𝐵 can be placed without overlapping polygon 𝐴, whilst its inner region sets the non-
feasible relative positions for placing 𝐵, and the boundary of 𝑁𝐹 𝑃𝐴𝐵, denoted by 𝜕𝑁𝐹 𝑃𝐴𝐵, sets the positions in which
both polygons are in contact. Given two convex polygons 𝐴 and 𝐵, their no-ﬁt polygon 𝑁𝐹 𝑃𝐴𝐵 = 𝐴 ⊕ (−𝐵(0, 0))
is always convex [15, theorem 13.5] and it can be eﬃciently computed using any specialized algorithm for convex
polygons, such as the orbiting method of Cuninghame-Green [28], or a specialized version of Minkowski sums for
convex polygons [15, p.299]. Despite Cherri et al. [25] propose the use of the Cuninghame-Green’s algorithm to
compute the NFP between convex polygons to build their NFP-CM model, our preferred option is to use convex
Minkowski sums because once all convex parts of any orbiting piece 𝐵 are translated to the origin by summing the
−𝑟𝐵 vector, the relative positions of all convex 𝑁𝐹 𝑃 𝑓 𝑔
𝐴𝐵 parts are well deﬁned regarding the reference point 𝑟𝐴 of the
static piece, unlike the resulting NFP parts obtained with the Cuninghame-Green’s algorithm. Algorithm 1 introduces
our detailed implementation of the MinkowskiSum algorithm [15, p.299] for convex polygons used to compute the
convex NFP between the convex parts of each pair of pieces.

New convex decomposition based on vertical slices. Figure 5 shows our new disjoint convex decomposition of the
feasible space of relative placements for the piece 𝑗 regarding the piece 𝑖, such that their corresponding convex parts 𝑔
and 𝑓 do not overlap. We recall that the non-overlapping constraints of our family of NFP-CM-VS model are deﬁned

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 8 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

Algorithm 1 Our version of the MinkowskiSum(𝛿𝑎, 𝛿𝑏) algorithm for convex polygons introduced by de Berg et al.
[15, p.299]. ConvexMinkowskiSum function is used to compute the convex no-ﬁt polygon 𝑁𝐹 𝑃𝐴𝐵 = 𝐴 ⊕ (−𝐵(0, 0))
between convex parts 𝐴 and 𝐵 by calling the function below with parameters 𝛿𝑎 = 𝜕𝐴 and 𝛿𝑏 = −(𝜕𝐵 ⊕ −𝑟𝐵).
Input: counter-clockwise oriented boundaries 𝛿𝑎 ∈ ℝ2×𝑛, 𝛿𝑏 ∈ ℝ2×𝑚
Output: counter-clockwise boundary 𝛿𝑁𝐹 𝑃 of 𝑁𝐹 𝑃𝐴𝐵
1: function CONVEXMINKOWSKISUM(𝛿𝑎, 𝛿𝑏)
2:
3:
4:
5:

⊳ ﬁrst vertex has the smallest y-axis coordinate

⊳ 𝛿𝑁𝐹 𝑃 is an array of ℝ2 points

⊳ adds a new vertex to 𝛿𝑁𝐹 𝑃

𝛿′
𝑎 ← 𝑠𝑜𝑟𝑡(𝛿𝑎)
𝛿′
𝑏 ← 𝑠𝑜𝑟𝑡(𝛿𝑏)
n ← lengthof(𝛿′
𝑎)
m ← lengthof(𝛿′
𝑏)
𝛿𝑁𝐹 𝑃 ← ∅
i ← 0
j ← 0
while (𝑖 < 𝑛 ∨ 𝑗 < 𝑚) do
𝑎𝑑𝑑𝑠
←←←←←←←←←←←←←←←←←←←← 𝛿′
𝑎[(𝑖 + 1)%𝑛] − 𝛿′
𝑏[(𝑗 + 1)%𝑚] − 𝛿′

𝛿𝑁𝐹 𝑃
𝑏 ← 𝛿′
𝑐 ← 𝛿′
𝜃 ← 𝑏𝑥𝑐𝑦 − 𝑐𝑥𝑏𝑦
if 𝜃 ≥ 0 then
𝑖 ← 𝑖 + 1

end if
if 𝜃 ≤ 0 then
𝑗 ← 𝑗 + 1

𝑎[𝑖%𝑛] + 𝛿′

𝑏[𝑗%𝑚]

𝑎[𝑖%𝑛]
𝑏[𝑗%𝑚]

6:
7:
8:
9:

10:
11:
12:
13:

14:
15:
16:
17:
18:
19:

end if
end while
return 𝛿𝑁𝐹 𝑃

20:
21:
22: end function

𝐴𝐵 and 𝑁𝐹 𝑃 21

by all pairwise combination of convex parts between two distinct pieces. 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 denotes the convex no-ﬁt polygon
between the static convex part 𝑓 of piece 𝑖 and the orbiting convex part 𝑔 of piece 𝑗. For example, ﬁgure 6 shows
the boundaries of 𝑁𝐹 𝑃 11
𝐴𝐵 parts derived from the combinations of convex parts of pieces 𝐴 and 𝐵 as
dashed lines, whilst 𝜕𝑁𝐹 𝑃 11
𝑖𝑗 denotes the boundary of
𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 and it is deﬁned by a counter-clockwise oriented polyline whose line segments are called edges and denoted
𝑖𝑗,𝑥 , 𝑎𝑓 𝑔𝑘
by (𝑎𝑓 𝑔𝑘
𝑖𝑗
The no-ﬁt boundary 𝜕𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗
the overall number of boundary edges. To deﬁne the feasible sub-regions induced by

𝐴𝐵 denote their boundaries. Likewise, 𝜕𝑁𝐹 𝑃 𝑓 𝑔

is represented as the union of all its line segments, called edges, as deﬁned in

) ∈ ℝ2 × ℝ2, with extreme points 𝑎𝑓 𝑔𝑘

𝐴𝐵 and 𝜕𝑁𝐹 𝑃 21

𝑖𝑗,𝑦 ) and 𝑏𝑓 𝑔𝑘

𝑖𝑗 = (𝑎𝑓 𝑔𝑘

𝑖𝑗 = (𝑏𝑓 𝑔𝑘

𝑖𝑗,𝑥 , 𝑏𝑓 𝑔𝑘
𝑖𝑗,𝑦 ).

, 𝑏𝑓 𝑔𝑘
𝑖𝑗

expression (5) below, being 𝑓 𝑔
𝑖𝑗
𝑖𝑗 , we decompose the line segments 𝑒𝑓 𝑔𝑘
𝑁𝐹 𝑃 𝑓 𝑔
edges, as deﬁned by the expressions (6-9) below.

𝑖𝑗

of 𝜕𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗

into three disjoint sets grouping the top, bottom, and side

𝜕𝑁𝐹 𝑃 𝑓 𝑔

𝑖𝑗 =

𝑓 𝑔
𝑖𝑗
⋃

𝑘=1

𝑒𝑓 𝑔𝑘
𝑖𝑗

,

𝑖𝑗 = (𝑎𝑓 𝑔𝑘
𝑒𝑓 𝑔𝑘

𝑖𝑗

, 𝑏𝑓 𝑔𝑘
𝑖𝑗

),

𝑎𝑓 𝑔𝑘
𝑖𝑗

, 𝑏𝑓 𝑔𝑘

𝑖𝑗 ∈ ℝ2

𝑖𝑗

𝑖𝑗 =  𝑓 𝑔
𝜕𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 = {𝑒𝑓 𝑔𝑘
 𝑓 𝑔
𝑓 𝑔
𝑖𝑗 = {𝑒𝑓 𝑔𝑘
𝑖𝑗 = {𝑒𝑓 𝑔𝑘
 𝑓 𝑔

𝑖𝑗 ∪ 𝑓 𝑔
𝑖𝑗 ∪  𝑓 𝑔
𝑖𝑗 ∈ 𝜕𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 ∈ 𝜕𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 ∈ 𝜕𝑁𝐹 𝑃 𝑓 𝑔

𝑖𝑗 |𝑎𝑓 𝑔𝑘
𝑖𝑗 |𝑎𝑓 𝑔𝑘
𝑖𝑗 |𝑎𝑓 𝑔𝑘

𝑖𝑗,𝑥 > 𝑏𝑓 𝑔𝑘
𝑖𝑗,𝑥 }
𝑖𝑗,𝑥 < 𝑏𝑓 𝑔𝑘
𝑖𝑗,𝑥 }
𝑖𝑗,𝑥 = 𝑏𝑓 𝑔𝑘
𝑖𝑗,𝑥 }

(boundary’s edge decomposition)

(top edges)

(bottom edges)

(side edges)

(5)

(6)

(7)

(8)

(9)

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 9 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

Binary variables enabling top feasible regions deﬁned by edges in  𝑓 𝑔
𝑖𝑗
binary variables enabling bottom feasible regions deﬁned by edges in 𝑓 𝑔
. Finally, side edges
 𝑓 𝑔
𝑖𝑗 will not be considered in our model, because the feasible regions deﬁned by vertical edges, either on the left or
right sides of 𝑁𝐹 𝑃 𝑓 𝑔
, as shown in ﬁgure 5. Each
convex feasible sub-region enabled by a variable 𝑣𝑓 𝑔𝑘
𝑖𝑗 ⊂ ℝ2. Finally, we introduce a notation for
the smallest and largest x-axis coordinates of each convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 part, as detailed in equations (10) and (11) below.

𝑖𝑗 , are enabled by the distinguished binary variables 𝑣𝑓 𝑔𝑙

are denoted by 𝑣𝑓 𝑔𝑡𝑘
𝑖𝑗 are denoted by 𝑣𝑓 𝑔𝑏𝑘

is denoted by 𝑅𝑓 𝑔𝑘

in ﬁgure 5, whilst

and 𝑣𝑓 𝑔𝑟

𝑖𝑗

𝑖𝑗

𝑖𝑗

𝑖𝑗

𝑖𝑗

𝑖𝑗 = min{𝜕𝑁𝐹 𝑃 𝑓 𝑔
𝑥𝑓 𝑔
𝑖𝑗,𝑥}
𝑖𝑗 = max{𝜕𝑁𝐹 𝑃 𝑓 𝑔
𝑥𝑓 𝑔
𝑖𝑗,𝑥}

(smallest x-axis coordinate of the convex NFP part)

(largest x-axis coordinate of the convex NFP part)

(10)

(11)

Deﬁnition of index sets. Before detailing our models, we deﬁne the index set 𝐼 𝑓 𝑔

𝑖𝑗 detailed below (12) to simplify
our notation and the presentation of our models. Each tuple (𝑖, 𝑗, 𝑓 , 𝑔) ∈ 𝐼 𝑓 𝑔
is used to denote the indexes involved
𝑖𝑗
in the deﬁnition of the binary variables or constraints concerning a convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 part obtained by evaluating the
algorithm 1 with the convex parts 𝑓 and 𝑔 of pieces 𝑖 and 𝑗 as input, where 𝑄𝑖 and 𝑄𝑗 are the number of convex parts of
the former pieces, respectively. On the other hand, 𝑇 𝑓 𝑔
𝑖𝑗 and 𝐵𝑓 𝑔
𝑖𝑗 denote the index set of the binary variables encoding
the top and bottom convex feasible sub-regions deﬁned by 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 denotes the index set of all binary
variables encoding the convex feasible sub-regions shown in ﬁgure 5, as detailed below.

𝑖𝑗 , whilst 𝐾 𝑓 𝑔

𝐼 𝑓 𝑔
𝑖𝑗 = {𝛼 ∈ {1, … , 𝑁} × {1, … , 𝑁} × {1, … , 𝑄𝑖} × {1, … , 𝑄𝑗} | 1 ≤ 𝑖 < 𝑗 ≤ 𝑁}
𝑇 𝑓 𝑔
𝑖𝑗 = {𝑘 ∈ {1, … , 𝑓 𝑔
𝑖𝑗 = {𝑘 ∈ {1, … , 𝑓 𝑔
𝐵𝑓 𝑔
𝑖𝑗 ∪ 𝐵𝑓 𝑔
𝑖𝑗 = {𝑘 ∈ 𝑇 𝑓 𝑔
𝐾 𝑓 𝑔

𝑖𝑗 } (indexes of variables encoding top feasible sub-regions)
𝑖𝑗 } (indexes of variables encoding bottom feasible sub-regions)

𝑖𝑗 }} (indexes of variables encoding all feasible sub-regions)

𝑖𝑗 } | 𝑒𝑓 𝑔𝑘
𝑖𝑗 } | 𝑒𝑓 𝑔𝑘
𝑖𝑗 ∪ {𝑣𝑓 𝑔𝑙

𝑖𝑗 ∈  𝑓 𝑔
𝑖𝑗 ∈ 𝑓 𝑔
, 𝑣𝑓 𝑔𝑟

𝑖𝑗

(12)

(13)

(14)

(15)

Most of the constraints of our models are based on one convex NFP part resulting from the combination of two
convex parts from two diﬀerent pieces, whose deﬁnition requires a tuple with ﬁve indexes from the Cartesian product
of 𝐼 𝑓 𝑔
𝑖𝑗 with any of the index sets of binary variables in deﬁnitions (13-15). However, we also introduce here for the
ﬁrst time several constraints among three pieces that demand up to nine indexes for their deﬁnition. Thus, we deﬁne in
(16) the index set 𝐼𝐼 𝑓 𝑔ℎ
for the convex parts 𝑓 , 𝑔, and ℎ from three diﬀerent pieces denoted by 𝑖, 𝑗, and 𝑢 respectively.
𝑖𝑗𝑢

𝐼𝐼 𝑓 𝑔ℎ

𝑖𝑗𝑢 = {𝛼 ∈ {1, … , 𝑁} × {1, … , 𝑁} × {1, … , 𝑁} × {1, … , 𝑄𝑖} × {1, … , 𝑄𝑗} × {1, … , 𝑄𝑢}

| 1 ≤ 𝑖 < 𝑗 < 𝑢 ≤ 𝑁}

3.2. The NFP-CM-VS models

(16)

and 𝑣𝑓 𝑔𝑙
𝑖𝑗

The basic NFP-CM-VS model is deﬁned by the objective function (17) and the constraints (18-32), whilst the
full NFP-CM-VS model is deﬁned by the former objective function and the constraints, symmetry breakings, valid
inequalities, and variable eliminations in expressions (18-41). The objective function (17) together with the constraints
(18-23) ﬁt the deﬁnition of the basic NFP-CM model without cuts [25], with the only exception of our two distinguished
binary variables 𝑣𝑓 𝑔𝑙
encoding the left and right feasible sub-regions shown in ﬁgure 5, whilst the constraints
𝑖𝑗
(24-29) encode our new convex decomposition based on vertical slices, which removes all symmetric solutions derived
from any relative placement between pieces. 𝑁 and 𝑚 denote the number of pieces and types of pieces, respectively.
Constraints (18) and (19) set the lower and upper bounds for the reference point 𝑟𝑖 = (𝑥𝑖, 𝑦𝑖) of each piece to ensure
that all pieces are inside the board. These two later constraints encode the Inner-Fit Polygon (IFT) of each piece,
which represents the feasible region of the board in which it can be placed. Constraint (20) sets the upper bound 𝐿𝑢𝑏
for 𝐿 deﬁned as the overall sum of the length of all pieces, whilst constraint (21) sets the lower bound 𝐿𝑙𝑏 of 𝐿, which
is deﬁned as the largest value between the largest length of any piece and the overall sum of the areas of the pieces
divided by the height (𝐻) of the board. The lower and upper bounds of 𝐿 detailed above have been also used by most
of continuous MIP models reported in the literature [39, 6, 25, 73]. Despite having been studied other upper and lower

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 10 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

bounds for 𝐿, the bounds mentioned above have become the standard ones for the objective function of the irregular
strip-packing problem because of the drawbacks of other alternatives. For instance, Alvarez-Valdes et al. [6] propose
a lower bound for 𝐿 based on the approximation of the pieces by a set of inner rectangles and the solution of an integer
program deﬁning a 1-Contiguous Bin Packing Problem (1-CBPP) [7]. However, the authors ﬁnally discard the use of
this later lower bound because its computational cost is very high. On the other hand, Cherri et al. [25] point out on
the possibility of using more tightened upper bounds that “a tighter big-M formulation generally makes it hard to the
solver to ﬁnd good quality solutions at the beginning of the search", a conclusion that we also subscribe. Thus, this later
drawback and the computational cost of computing tighter upper bounds endorse using the upper bound introduced
above as a practical solution.

min 𝐿

s.t.

𝑙𝑚𝑖𝑛
𝑖
ℎ𝑚𝑖𝑛
𝑖

𝐿 ≤

≤ 𝑥𝑖
≤ 𝑦𝑖
𝑚
∑

𝑡=1

≤ 𝐿 − 𝑙𝑚𝑎𝑥
𝑖
≤ 𝐻 − ℎ𝑚𝑎𝑥

𝑖

1 ≤ 𝑖 ≤ 𝑁
1 ≤ 𝑖 ≤ 𝑁

𝑑𝑡(𝑙𝑚𝑖𝑛

𝑡 + 𝑙𝑚𝑎𝑥

𝑡

) = 𝐿𝑢𝑏

𝐿𝑙𝑏 = max{ max
1≤𝑡≤𝑚

{𝑙𝑚𝑖𝑛

𝑡 + 𝑙𝑚𝑎𝑥

𝑡

𝑑𝑡Δ𝑡} ≤ 𝐿

𝑖𝑗,𝑥 − 𝑎𝑓 𝑔𝑘
(𝑏𝑓 𝑔𝑘

𝑚
∑

},

𝑡=1

1
𝐻
𝑖𝑗,𝑦 − 𝑏𝑓 𝑔𝑘
𝑖𝑗 × 𝑇 𝑓 𝑔
𝑖𝑗,𝑥 𝑎𝑓 𝑔𝑘
𝑖𝑗,𝑥 |𝐻 + |𝑎𝑓 𝑔𝑘

𝑖𝑗,𝑦

𝑖𝑗,𝑥 )(𝑦𝑗 − 𝑦𝑖) + (𝑎𝑓 𝑔𝑘
∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑘) ∈ {𝐼 𝑓 𝑔
𝑖𝑗,𝑦 𝑎𝑓 𝑔𝑘
𝑖𝑗 = 𝑏𝑓 𝑔𝑘
𝐶 𝑓 𝑔𝑘
𝑖𝑗,𝑥 − 𝑎𝑓 𝑔𝑘
|𝑏𝑓 𝑔𝑘
𝑀 𝑓 𝑔𝑘
≥
𝑖𝑗
∑
𝑣𝑓 𝑔𝑘
𝑖𝑗 = 1,
𝑖𝑗 +

𝑖𝑗,𝑥 − 𝑏𝑓 𝑔𝑘

𝑖𝑗,𝑦 |𝐿𝑢𝑏 + 𝐶 𝑓 𝑔𝑘

𝑖𝑗,𝑦 − 𝑏𝑓 𝑔𝑘
∀(𝑖, 𝑗, 𝑓 , 𝑔) ∈ 𝐼 𝑓 𝑔
𝑖𝑗

𝑖𝑗

𝑖𝑗,𝑦 )(𝑥𝑗 − 𝑥𝑖) + 𝐶 𝑓 𝑔𝑘
𝑖𝑗 ∪ 𝐵𝑓 𝑔
𝑖𝑗 }

𝑖𝑗

≤ (1 − 𝑣𝑓 𝑔𝑘

𝑖𝑗

)𝑀 𝑓 𝑔𝑘
𝑖𝑗

𝑖𝑗 + 𝑣𝑓 𝑔𝑟
𝑣𝑓 𝑔𝑙

− 𝑙𝑚𝑖𝑛
𝑗

,
𝑖 − 𝑎𝑓 𝑔𝑘
,

𝑖𝑗,𝑥

− 𝑙𝑚𝑖𝑛
𝑗

,
𝑖 − 𝑏𝑓 𝑔𝑘

𝑖𝑗,𝑥

𝑖𝑗

𝑖𝑗

𝑖𝑗

≥ 𝑏𝑓 𝑔𝑘

≥ 𝑎𝑓 𝑔𝑘

) ̄𝑀 ′𝑓 𝑔𝑘
𝑖𝑗

)𝑀 ′𝑓 𝑔𝑘
𝑖𝑗

𝑗 − 𝑙𝑚𝑖𝑛

𝑖
)𝑀 ′′𝑓 𝑔𝑘
𝑖𝑗

𝑖𝑗 ∪𝐵𝑓 𝑔
𝑘∈𝑇 𝑓 𝑔
𝑏𝑓 𝑔𝑘
≤ (1 − 𝑣𝑓 𝑔𝑘
𝑖𝑗,𝑥 + 𝑥𝑖 − 𝑥𝑗
𝑀 ′𝑓 𝑔𝑘
𝑖𝑗,𝑥 + 𝐿𝑢𝑏 − 𝑙𝑚𝑎𝑥
𝑖𝑗
𝑥𝑗 − 𝑥𝑖 − 𝑎𝑓 𝑔𝑘
≤ (1 − 𝑣𝑓 𝑔𝑘
𝑖𝑗,𝑥
𝑖𝑗
𝑀 ′′𝑓 𝑔𝑘
≥ 𝐿𝑢𝑏 − 𝑙𝑚𝑎𝑥
𝑖𝑗
𝑎𝑓 𝑔𝑘
≤ (1 − 𝑣𝑓 𝑔𝑘
𝑖𝑗,𝑥 + 𝑥𝑖 − 𝑥𝑗
̄𝑀 ′𝑓 𝑔𝑘
𝑖𝑗,𝑥 + 𝐿𝑢𝑏 − 𝑙𝑚𝑎𝑥
𝑖𝑗
𝑥𝑗 − 𝑥𝑖 − 𝑏𝑓 𝑔𝑘
≤ (1 − 𝑣𝑓 𝑔𝑘
𝑖𝑗,𝑥
𝑖𝑗
̄𝑀 ′′𝑓 𝑔𝑘
≥ 𝐿𝑢𝑏 − 𝑙𝑚𝑎𝑥
𝑖𝑗
𝑥𝑗 − 𝑥𝑖 − 𝑥𝑓 𝑔
≤ (1 − 𝑣𝑓 𝑔𝑙
𝑖𝑗
𝑖𝑗
𝑀 𝑓 𝑔𝑙
≥ 𝐿𝑢𝑏 − 𝑙𝑚𝑎𝑥
𝑖𝑗
𝑥𝑗 − 𝑥𝑖 − 𝑥𝑓 𝑔
≥ (1 − 𝑣𝑓 𝑔𝑟
𝑖𝑗
𝑀 𝑓 𝑔𝑟
𝑗 + 𝑙𝑚𝑎𝑥
≤ 𝑙𝑚𝑖𝑛
𝑖𝑗
𝐿 ∈ ℝ>0
(𝑥𝑖, 𝑦𝑖) ∈ ℝ2, 1 ≤ 𝑖 ≤ 𝑁
𝑣𝑓 𝑔𝑘
𝑖𝑗 ∈ {0, 1},

𝑖
) ̄𝑀 ′′𝑓 𝑔𝑘
𝑖𝑗
𝑗 − 𝑙𝑚𝑖𝑛
)𝑀 𝑓 𝑔𝑙
,
𝑖𝑗
𝑖 − 𝑥𝑓 𝑔
𝑗 − 𝑙𝑚𝑖𝑛
)𝑀 𝑓 𝑔𝑟
,
𝑖𝑗
− 𝐿𝑢𝑏 − 𝑥𝑓 𝑔
𝑖𝑗

𝑖𝑗

𝑖𝑗

𝑖

,

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑘) ∈ {𝐼 𝑓 𝑔

𝑖𝑗 × 𝑇 𝑓 𝑔
𝑖𝑗 }

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑘) ∈ {𝐼 𝑓 𝑔

𝑖𝑗 × 𝑇 𝑓 𝑔
𝑖𝑗 }

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑘) ∈ {𝐼 𝑓 𝑔

𝑖𝑗 × 𝐵𝑓 𝑔
𝑖𝑗 }

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑘) ∈ {𝐼 𝑓 𝑔

𝑖𝑗 × 𝐵𝑓 𝑔
𝑖𝑗 }

∀(𝑖, 𝑗, 𝑓 , 𝑔) ∈ 𝐼 𝑓 𝑔
𝑖𝑗

∀(𝑖, 𝑗, 𝑓 , 𝑔) ∈ 𝐼 𝑓 𝑔
𝑖𝑗

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑘) ∈ {𝐼 𝑓 𝑔

𝑖𝑗 × 𝐾 𝑓 𝑔
𝑖𝑗 }

(17)

(18)

(19)

(20)

(21)

(22)

(23)

(24)

(25)

(26)

(27)

(28)

(29)

(30)

(31)

(32)

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 11 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

Constraints (22) deﬁnes the feasible region for any feasible relative placement of piece 𝑗 regarding piece 𝑖, which is
𝑖𝑗 ∈ 𝜕𝑁𝐹 𝑃 𝑓 𝑔
deﬁned on the right side of each counter-clockwise oriented edge 𝑒𝑓 𝑔𝑘
for all convex NFP parts between
𝑖𝑗
both former pieces. The deﬁnition of the constraints (22) on the convex 𝑁𝐹 𝑃 𝑓 𝑔
𝐼𝐽 parts between pieces is the core
contribution of the NFP-CM model introduced by Cherri et al. [25], which has the advantage of requiring the minimum
number of constraints to deﬁne the feasible space of relative placements between pieces among the current family of
continuous MIP models. However, the feasible space generated by the constraints (22) introduces a large number of
symmetric solutions derived from the overlapping of feasible regions spanned by consecutive edges, as shown in ﬁgure
2.c. In order to break these later symmetries, Rodrigues et al. [73] propose the convex decomposition of the feasible
space shown in ﬁgure 2.c, which doubles the number of non-overlapping constraints per binary variable of the NFP-CM
model [25]. Unlike the Improved NFP-CM model of Rodrigues et al. [73], our novel disjoint convex decomposition
shown in ﬁgure 5 allows the NFP-CM-VS model to break the symmetries of the solution space at the expense of tripling
the number of constraints per binary variable of the NFP-CM model [25]. However, our new formulation allows the
explicit derivation of many feasibility cuts and symmetry breaks linking the binary variables encoding the relative
placements among multiple pieces, which provide a tighter formulation of the problem than the former state-of-the-
art NFP-CM models [25, 73]. On the other hand, the formulation of our NFP-CM-VS2 model introduced in section
3.3 removes the aforementioned drawback on the number of constraints required by the symmetry-breaking of our
NFP-CM-VS model.

Constraints (23) encode the selection in any feasible solution of a single feasible sub-region for the relative place-
ment between two pieces, as deﬁned by our convex decomposition of each convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 part shown in ﬁgure 5.
Constraints (24-29) encode the vertical lines delimiting our convex feasible sub-regions, as shown in ﬁgure 5. Our
model deﬁnes the same binary variables for the edges of 𝜕𝑁𝐹 𝑃 𝑓 𝑔
than the NFP-CM [25] and Improved NFP-CM
𝑖𝑗
[73] models, with the only exception of the two distinguished binary variables 𝑣𝑓 𝑔𝑙
𝑖𝑗
right sub-regions, as shown in ﬁgure 5. Finally, constraints (30 - 32) set the domains for the decision variables.

encoding the left and

and 𝑣𝑓 𝑔𝑟

𝑖𝑗

3.2.1. Symmetry-breaking and variable eliminations for identical pieces

Symmetry-breaking of piece permutations. It is a well-known fact that any permutation of identical pieces generates
the same overall feasible space and optimal solutions, which leads the Branch and Bound (B&B) algorithm to obtain
≤ 𝑥𝑗 for all
many symmetrical solutions. To break the aforementioned symmetries, we can impose that either 𝑥𝑖
1 ≤ 𝑖 < 𝑗 ≤ 𝑁 if pieces 𝑖 and 𝑗 are of the same type, as proposed by Alvarez-Valdes et al. [6, §4.5] and Cherri
≤ 𝑦𝑗 as proposed by Rodrigues et al. [73, ineq.15]. Our family of NFP-CM-VS models includes
et al. [25, §3.1], or 𝑦𝑖
the y-axis symmetry-breaking proposed for the Improved NFP-CM model [73], as deﬁned by constraints (33) below.
However, the satisfaction of the constraints (33) joined to our new convex decomposition shown in ﬁgure 5 induces
several a priori unfeasible relative placements between identical pieces that can be coded into the models as a set of
new variable eliminations and valid inequalities, as detailed by constraints (34) and (35) below.

𝑦𝑖

≤ 𝑦𝑗,

1 ≤ 𝑖 < 𝑗 ≤ 𝑁, 𝑗 = min{𝑘 = 𝑖 + 1, … , 𝑁 | 𝑡𝑖 = 𝑡𝑗}

(33)

𝑖𝑗

enabling the bottom regions of any 𝑁𝐹 𝑃 𝑓 𝑔

Variable eliminations for identical pieces. Because constraint (33) must be satisﬁed for identical pieces, all binary
variables 𝑣𝑓 𝑔𝑘
𝑖𝑗 between two identical pieces must be equal to 0 whenever
pieces 𝑖 and 𝑗 are of the same type (i.e. 𝑡𝑖 = 𝑡𝑗) and the bottom region is below the reference point 𝑟𝑖. For this reason,
all binary variables 𝑣𝑓 𝑔𝑘
encoding bottom feasible sub-regions should be ﬁxed to 0 and removed from any NFP-CM-
VS model, as detailed by constraints (34) below. Because the origin (0, 0) of all convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 parts is deﬁned at
the reference point 𝑟𝑖, a bottom feasible region 𝑅𝑓 𝑔𝑘
𝑖𝑗 will be below 𝑟𝑖 if the y-coordinates of the extreme points of its
associate edge 𝑒𝑓 𝑔𝑘

are negative, as detailed by equality (34).

𝑖𝑗

𝑖𝑗

𝑣𝑓 𝑔𝑘
𝑖𝑗 = 0

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑘) ∈ {𝐼 𝑓 𝑔

𝑖𝑗 × 𝐵𝑓 𝑔

𝑖𝑗

| 𝑡𝑖 = 𝑡𝑗 ∧ (𝑎𝑓 𝑔

𝑖𝑓 ,𝑦 < 0) ∧ (𝑏𝑓 𝑔

𝑖𝑗,𝑦 < 0)}

(34)

Valid inequality for identical pieces. For the same reasons detailed above, given two orbiting identical pieces 𝑗 and
𝑢 and another static distinct piece 𝑖 with index lower than the two former pieces, the piece 𝑢 cannot be placed below
piece 𝑗 if piece 𝑗 is placed on top of piece 𝑖. Thus, the constraints (35) below must be satisﬁed by all feasible solutions

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 12 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

𝐴1

𝐴2

𝐴3

𝐵1

𝐴 = 𝐴1 ∪ 𝐴2 ∪ 𝐴3

𝐵 = 𝐵1

𝑁𝐹 𝑃 11
𝐴𝐵

𝐴1

𝑁𝐹 𝑃 21
𝐴𝐵

𝐴2

𝐴3

𝑁𝐹 𝑃 31
𝐴𝐵

(a) convex decomposition of pieces 𝐴 and 𝐵

(b) convex NFP parts between pieces 𝐴 and 𝐵

𝑣11𝑙
𝐴𝐵

𝑣21𝑙
𝐴𝐵

𝑣31𝑙
𝐴𝐵

𝑁𝐹 𝑃 11
𝐴𝐵

𝑁𝐹 𝑃 21
𝐴𝐵

𝑁𝐹 𝑃 31
𝐴𝐵

𝑣11𝑟
𝐴𝐵

𝑣21𝑟
𝐴𝐵

𝑣31𝑟
𝐴𝐵

𝑁𝐹 𝑃 11
𝐴𝐵

𝑣11𝑏1
𝐴𝐵

𝑁𝐹 𝑃 31
𝐴𝐵

𝑣11𝑏0
𝐴𝐵

𝑁𝐹 𝑃 11
𝐴𝐵

𝑁𝐹 𝑃 31
𝐴𝐵

𝑣31𝑏1
𝐴𝐵

𝑣31𝑏2
𝐴𝐵

𝑣31𝑏2
𝐴𝐵

(c) identical feasible left and
right sub-regions in light grey

(d) subsumption between
regions of two convex parts

(e) non-overlapping feasible
regions of two convex parts

Figure 7: This ﬁgure shows three geometric conﬁgurations between convex NFP parts of the pieces 𝐴 and 𝐵, which
induces three types of logic relationships encoded as valid cuts and variable eliminations into our NFP-CM-VS models.

of the NFP-CM-VS model.

∑

𝑘∈𝑇 𝑓 𝑔
𝑖𝑗

𝑣𝑓 𝑔𝑘
𝑖𝑗 +

∑

𝑣𝑓 ℎ𝑘′
𝑖𝑢

≤ 1,

∀(𝑖, 𝑗, 𝑢, 𝑓 , 𝑔, ℎ) ∈ {𝐼𝐼 𝑓 𝑔ℎ
𝑖𝑗𝑢

| 𝑡𝑗 = 𝑡𝑢}

(35)

𝑘′∈𝐵𝑓 ℎ
𝑖𝑢

3.2.2. Valid cuts and variable reductions between two pieces

Given two non-convex pieces 𝑖 and 𝑗, their overall 𝑁𝐹 𝑃𝑖𝑗 is decomposed into a collection of convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗
parts obtained from the combination of the convex parts from both pieces, as shown in ﬁgure 7.b. For example, ﬁgure
7.a shows a convex piece 𝐵 and a non-convex piece 𝐴 decomposed into three convex parts, whilst ﬁgure 7.b shows
the three pairwise 𝑁𝐹 𝑃 𝑓 𝑔
𝐴𝐵 parts resulting from the combination of the convex parts of both former pieces, denoted
by 𝑁𝐹 𝑃 11
𝐴𝐵, 𝑁𝐹 𝑃 21
𝐴𝐵 part in the example shown in ﬁgure 7 sets a collection of
feasible sub-regions for the relative placement of piece 𝐵 regarding piece 𝐴. However, any feasible relative placement
of the orbiting piece 𝐵 regarding piece 𝐴 in our MIP models must be in a common feasible region for all 𝑁𝐹 𝑃 𝑓 𝑔
𝐴𝐵
parts between both pieces. Thus, given two or more feasible sub-regions belonging to two or more diﬀerent convex
𝑁𝐹 𝑃 𝑓 𝑔
𝐴𝐵 parts of 𝑁𝐹 𝑃𝐴𝐵, we identify three a priori geometric relationships between them inducing the set of logic
relationships enumerated below, which allow tightening the formulation of our family of NFP-CM-VS models.

𝐴𝐵. Each convex 𝑁𝐹 𝑃 𝑓 𝑔

𝐴𝐵, and 𝑁𝐹 𝑃 31

(1) Identical feasible sub-regions. If feasible sub-regions of diﬀerent convex NFP parts between two pieces represent
the same feasible region for their relative placement, then we can eliminate all redundant binary variables and

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 13 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

represent all identical regions by a single binary variable in the model. According to our convex decomposition
and 𝑣𝑓 𝑔𝑟
in ﬁgure 2, only the left and right feasible regions encoded by the binary variables 𝑣𝑓 𝑔𝑙
in diﬀerent
𝑖𝑗
convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 parts can be identical. For example, ﬁgure 7.c shows that 𝑣11𝑙
𝐴𝐵, 𝑣21𝑙
𝐴𝐵 encode the same
𝐴𝐵, and 𝑣31𝑟
feasible region on the left, whilst 𝑣11𝑟
𝐴𝐵 encode the same feasible region on the right. Thus, we can
set a single variable to enable the left and right feasible sub-regions and remove the remaining ones during the
building of the model. This variable eliminations are deﬁned by the equalities (36) and (37) below.

𝐴𝐵, and 𝑣31𝑙

𝐴𝐵, 𝑣21𝑟

𝑖𝑗

𝑖𝑗 = 𝑣𝑓 ′𝑔′𝑙
𝑣𝑓 𝑔𝑙
,
𝑖𝑗 = 𝑣𝑓 ′𝑔′𝑟
𝑣𝑓 𝑔𝑟

𝑖𝑗

𝑖𝑗

,

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑓 ′, 𝑔′) ∶ (𝑓 , 𝑔) ≠ (𝑓 ′, 𝑔′) ∧ 𝑥𝑓 ′𝑔′
∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑓 ′, 𝑔′) ∶ (𝑓 , 𝑔) ≠ (𝑓 ′, 𝑔′) ∧ 𝑥𝑓 ′𝑔′

𝑖𝑗

𝑖𝑗 = 𝑥𝑓 𝑔
𝑖𝑗 = 𝑥𝑓 𝑔

𝑖𝑗

(36)

(37)

(2) Subsumed feasible sub-regions. Figure 7.d shows an example with two feasible sub-regions 𝑅31𝑏1

𝐴𝐵 and 𝑅31𝑏2
𝐴𝐵
respectively, which are subsumed by the feasible sub-region 𝑅11𝑏1
𝐴𝐵 belonging to other convex NFP part between
𝐴𝐵 ⊂ 𝑅11𝑏1
the same pieces, such that 𝑅31𝑏1
𝐴𝐵 . Thus, this later subsumption relationships between
feasible sub-regions set a logic implication between their corresponding binary variables, such that any feasible
solution of the model that sets to 1 a binary variable enabling a subsumed sub-region must also set to 1 the binary
variables enabling their subsumer regions from other convex NFP parts between the same pieces. Thus, we can
include the valid inequalities (38) in our models.

𝐴𝐵 and 𝑅31𝑏2

𝐴𝐵 ⊂ 𝑅11𝑏1

∑

𝑘∈𝐾𝑓 𝑔

𝑖𝑗 ∧(𝑅𝑓 𝑔𝑘

𝑖𝑗 ⊂𝐾 𝑓 ′𝑔′𝑘′

𝑖𝑗

𝑣𝑓 𝑔𝑘
𝑖𝑗

≤ 𝑣𝑓 ′𝑔′𝑘′
𝑖𝑗

,

)

∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑓 ′, 𝑔′) ∶ (𝑓 , 𝑔) ≠ (𝑓 ′, 𝑔′)

(38)

(3) Non-overlapping regions. If two feasible sub-regions belonging to two diﬀerent convex NFP parts between
two pieces do not overlap, then their corresponding binary variables can be enabled in none feasible solution
at the same time because the resulting MIP model would be infeasible. For example, ﬁgure 7.e shows that
𝐴𝐵 = ∅, which implies that any feasible solution of the model must satisfy that 𝑣11𝑏0
𝑅11𝑏0
𝐴𝐵 ∩ 𝑅31𝑏2
≤ 1.
Thus, the former logic relationships can be represented in the model by including the valid inequalities (39).

𝐴𝐵 + 𝑣31𝑏2

𝐴𝐵

𝑖𝑗 + 𝑣𝑓 ′𝑔′𝑘′
𝑣𝑓 𝑔𝑘

𝑖𝑗

≤ 1, ∀(𝑖, 𝑗, 𝑓 , 𝑔, 𝑓 ′, 𝑔′, 𝑘, 𝑘′) ∶ 𝑅𝑓 𝑔𝑘

𝑖𝑗 ∩ 𝑅𝑓 ′𝑔′𝑘′

𝑖𝑗

= ∅

(39)

Clique-based cuts. The inequalities (39) can be implemented in a much more eﬃcient manner by deﬁning them
using the cliques of mutually-exclusive non-overlapping feasible sub-regions between convex NFP parts of two
pieces, as deﬁned by constraints (40). Given an undirected graph 𝐺 = (𝑉 , 𝐸), a set of vertexes  ⊆ 𝑉 is a
clique if ∀𝑎, 𝑏 ∈  ⇒ ∃(𝑎, 𝑏) ∈ 𝐸. The cliques allow factorizing many of the former constraints into a single
one, which signiﬁcantly reduces the number of constraints inserted into the model. Thus, we build an undirected
, 𝑣𝑓 ′𝑔′𝑘′
graph 𝐺 = (𝑉 , 𝐸) for representing the collection of constraints (39), such that 𝐸 contains an edge (𝑣𝑓 𝑔𝑘
)
𝑖𝑗
for each pair of binary variables satisfying (39), and 𝑉 contains all the binary variables that take part in at least
one of the former constraints. Next, we compute the cliques of non-overlapping feasible sub-regions using the
minimum Edge Clique Covering (ECC) algorithm [27] provided by the ECC8 Java software library available at
https://github.com/Pronte/ECC. Finally, the clique-based cuts (40) are inserted as SOS-type 1 constraints
in the implementation of our models instead of constraints (39).

𝑖𝑗

𝑣𝑓 𝑔𝑘
𝑖𝑗

≤ 1,

∑

𝑣𝑓 𝑔𝑘
𝑖𝑗 ∈𝑞

∀

𝑞 ∈ {cliques covering constraints (39)}

(40)

3.2.3. Valid inequalities among three pieces

Unfeasible relative placements of three pieces. One key advantage derived from our convex decomposition based
on vertical slices is that it allows disclosing many unfeasible combinations of binary variables encoding feasible relative
placements among multiple pieces, which can be explicitly inserted into the model as feasibility cuts. For instance,
given three convex pieces 𝐴, 𝐵, and 𝐶 as shown in ﬁgure 8.a, if binary variables 𝑣11𝑟
𝐴𝐶 are enabled in any
solution of the model, then pieces 𝐵 and 𝐶 will be placed in the grey sub-regions with respect to the piece 𝐴, as

𝐴𝐵 and 𝑣11𝑡1

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 14 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

𝑣11𝑡1
𝐴𝐶

𝐴

𝑅11𝑡1
𝐴𝐶

𝜕𝑁𝐹 𝑃 11
𝐵𝐶

𝐴

𝑅11𝑟
𝐴𝐵

𝑟𝐵

𝐴

𝐵

𝜕𝑁𝐹 𝑃 11
𝐴,𝐶

𝑣11𝑟
𝐴𝐵

𝜕𝑁𝐹 𝑃 11
𝐴𝐶

𝐶

𝜕𝑁𝐹 𝑃 11
𝐴,𝐵

𝑅11𝑏1
𝐵𝐶

𝜕𝑁𝐹 𝑃 11
𝐴𝐵

(a) Three convex pieces

𝐴𝐵 and 𝑣11𝑡1

(b) If 𝑣11𝑟
𝐴𝐶 are enabled, then pieces
𝐵 and 𝐶 are placed on grey regions w.r.t. 𝐴.

(c) 𝑣11𝑡1

𝐴𝐶 ∧ 𝑣11𝑟
𝐴𝐶 ∩ 𝑅11𝑏1
𝑅11𝑡1

𝐴𝐵 ⇒ ∀𝑟𝐵 ∈ 𝑅11𝑟
𝐵𝐶 = ∅

𝐴𝐵

Figure 8: Figure (a) shows an example of three convex pieces whose relative placements produce a large number of
unfeasible combinations of three binary variables. Figure (b) shows in grey the two feasible relative placements of pieces 𝐵
and 𝐶 regarding the static (pivot) piece 𝐴. Finally, ﬁgure (c) shows that if the binary variables 𝑣11𝑡1
𝐴𝐵 are enabled,
then ∀𝑟𝐵 ∈ 𝑅11𝑟
𝐵𝐶 will produce an unfeasible
solution, as shown in ﬁgure (c). The joint activation of 𝑣11𝑡1
𝐴𝐵 above causes that the all relative placements of piece
𝐶 regarding piece 𝐵 be unfeasible, with the only exception of the left feasible sub-region enabled by 𝑣11𝑟
𝐵𝐶 .

𝐵𝐶 = ∅. Thus, the activation of the relative placements enabled by 𝑣11𝑏1

𝐴𝐶 and 𝑣11𝑟

𝐴𝐶 and 𝑣11𝑟

𝐴𝐶 ∩𝑅11𝑏1

𝐴𝐵, 𝑅11𝑡1

shown in ﬁgure 8.b. However, ﬁgure 8.c shows that if the three aforementioned pieces are placed in the former relative
placements, then the piece 𝐶 can be placed in none relative feasible sub-region regarding piece 𝐵 that be compatible
(feasible) with its relative placement regarding piece 𝐴 deﬁned by 𝑅11𝑡1
𝐴𝐶 , with the only exception of the left feasible
region enabled by 𝑣11𝑙
𝐵𝐶 . In this way, many unfeasible relative placements among three pieces can be detected a priori
and represented as valid inequalities in the model. Thus, we can identify many unfeasible relative placements among
three pieces (𝑖, 𝑗, 𝑢) by testing if the relative placement of piece 𝑢 regarding piece 𝑗 is feasible in any solution of the
problem given the relative placements of pieces 𝑗 and 𝑢 regarding piece 𝑖.

𝑖𝑗

and 𝑣𝑓 ℎ𝑘′
𝑖𝑢

Feasibility cuts among multiple pieces. Although we focus here on representing the unfeasible relative placements
among three pieces, our ideas can be generalized to combinations of (𝑚 ≥ 3) pieces by ﬁxing the pairwise relative
placements of the ﬁrst 𝑚 − 1 pieces and testing the feasibility for the relative placements of the last piece regarding the
ﬁrst 𝑚 − 1 pieces, at the expense of exponentially increasing the number of valid inequalities inserted into the model.
Computation of feasibility cuts among three pieces. Algorithm 2 partially evaluates the feasibility of 𝑣𝑔ℎ𝑘′′
given
and 𝑅𝑓 ℎ𝑘′
that 𝑣𝑓 𝑔𝑘
regions overlap along the horizontal direction using
interval arithmetic [59, 60]. Then, all unfeasible relative placements among three pieces can be inserted into our model
using combinatorial Benders cuts [26], as deﬁned by constraints (41). Although our feasibility test only considers the
overlapping along the horizontal direction, it is capable of detecting a large number of unfeasible relative placements
among three pieces. Because the number of valid inequalities (41) grows rapidly, raising to tenths of millions for large
problem instances, we insert this family of feasibility cuts into our NFP-CM-VS models as user cuts. Thus, the former
valid inequalities are used by the Integer Programming (IP) solver to cut any feasible solution violating them, being
inserted into the Branch and Cut (B&C) exploration according to the heuristics rules implemented by each IP solver.

are enabled by testing if 𝑅𝑔ℎ𝑘′′

𝑗𝑢

𝑗𝑢

𝑖𝑢

𝑖𝑗 +𝑣𝑓 ℎ𝑘′
𝑣𝑓 𝑔𝑘
𝑖𝑢 +

∑

𝑣𝑔ℎ𝑘′′
𝑗𝑢

𝑘′′∈𝐾 𝑔ℎ
𝑗𝑢

≤ 2, ∀(𝑖, 𝑗, 𝑢, 𝑓 , 𝑔, ℎ, 𝑘, 𝑘′, 𝑘′′) ∶ 𝑣𝑓 𝑔𝑘

𝑖𝑗 +𝑣𝑓 ℎ𝑘′

𝑖𝑢 = 2 ⇒ ∀𝑟𝐵 ∈ 𝑅𝑓 𝑔𝑘

𝑖𝑗

, 𝑅𝑓 ℎ𝑘′

𝑖𝑢 ∩𝑅𝑔ℎ𝑘′′

𝑗𝑢 = ∅ (41)

3.3. The NFP-CM-VS2 model

As mentioned above, our basic NFP-CM-VS model triples in average the number of constraints of the NFP-CM
model [25] to break the symmetries of the feasible space, unlike the Improved NFP-CM model [73] that only doubles
them. To solve this drawback, we introduce a reformulation of our NFP-CM-VS model, called NFP-CM-VS2, which
is derived from the full NFP-CM-VS model deﬁned by the objective function (17) and the constraints and variable
eliminations (18-41) by substituting the constraints (24-29) by the constraints (42-43) below.

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 15 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

Algorithm 2 IsUnfeasible() function uses interval arithmetic [60, ch.2] to test if three ﬁxed relative placements among
three pieces produce an unfeasible solution by testing their potential overlapping along the horizontal direction. A
closed interval of real numbers is denoted by [𝑎, 𝑏] = {𝑥 ∈ ℝ ∶ 𝑎 ≤ 𝑥 ≤ 𝑏}. Let be 𝑋 = [𝑋, 𝑋] and 𝑌 = [𝑌 , 𝑌 ]
two intervals, we say that both are equal if they are the same subset of ℝ. The sum of two intervals is 𝑍 = 𝑋 + 𝑌 =
[𝑋 + 𝑌 , 𝑋 + 𝑌 ]. The intersection of two intervals is 𝑍 = 𝑋 ∩ 𝑌 = {𝑧 ∶ 𝑧 ∈ 𝑋 ∧ 𝑧 ∈ 𝑌 } = [max{𝑋, 𝑌 }, min{𝑋, 𝑌 }],
and 𝑋 ∩ 𝑌 = ∅ if 𝑌 < 𝑋 or 𝑋 < 𝑌 .
, 𝑅𝑓 ℎ𝑘′
𝑖𝑢

≠ ∅, or false otherwise

)

𝑖𝑗

𝑖𝑗

𝑖𝑗

𝑖𝑢

3:

2:

, 𝑅𝑔ℎ𝑘′′
Input: 𝑅𝑓 𝑔𝑘
𝑗𝑢 ⊂ ℝ2
|𝑅𝑓 ℎ𝑘′
Output: true if ∄𝑟𝑗 ∈ 𝑅𝑓 𝑔𝑘
1: function ISUNFEASIBLE(𝑅𝑓 𝑔𝑘
𝑥𝑓 𝑔𝑘
𝑖𝑗 ← [min{𝑅𝑓 𝑔𝑘
𝑥𝑓 ℎ𝑘′
𝑖𝑢 ← [min{𝑅𝑓 ℎ𝑘′
𝑗𝑢 ← [min{𝑅𝑔ℎ𝑘′′
𝑥𝑔ℎ𝑘′′
𝑖𝑗 + 𝑥𝑔ℎ𝑘′′
𝛿𝑥𝑗𝑢 ← 𝑥𝑓 𝑔𝑘
𝑧 ← 𝛿𝑥𝑗𝑢 ∩ 𝑥𝑓 ℎ𝑘′
𝑟 ∈ {true, false}
if 𝑧 = ∅ then
r ← true

∩ 𝑅𝑔ℎ𝑘′′
𝑗𝑢
, 𝑅𝑔ℎ𝑘′′
, 𝑅𝑓 ℎ𝑘′
𝑗𝑢
𝑖𝑢
𝑖𝑗,𝑥 }, max{𝑅𝑓 𝑔𝑘
𝑖𝑗,𝑥 }] ⊂ ℝ
𝑖𝑢,𝑥 }, max{𝑅𝑓 ℎ𝑘′
𝑖𝑢,𝑥 }] ⊂ ℝ
𝑗𝑢,𝑥 }, max{𝑅𝑔ℎ𝑘′′
𝑗𝑢,𝑥 }] ⊂ ℝ
𝑖𝑗 + 𝑥𝑔ℎ𝑘′′
𝑗𝑢 = [𝑥𝑓 𝑔𝑘
𝑖𝑢 = [max{𝛿𝑥𝑗𝑢, 𝑥𝑓 ℎ𝑘′

7:
8:
9:

𝑗𝑢

6:

4:

5:

𝑖𝑢

⊳ sets the x-axis interval spanned by 𝑅𝑓 𝑔𝑘
⊳ sets the x-axis interval spanned by 𝑅𝑓 ℎ𝑘′
⊳ sets the x-axis interval spanned by 𝑅𝑔ℎ𝑘′′
⊳ sum of x-axis intervals

𝑗𝑢

𝑖𝑢

𝑖𝑗

}]

⊳ gets feasible relative placement interval for 𝑢

⊳ feasibility test

𝑖𝑗 + 𝑥𝑔ℎ𝑘′′
, 𝑥𝑓 𝑔𝑘
}, min{𝛿𝑥𝑗𝑢, 𝑥𝑓 ℎ𝑘′

𝑗𝑢

]

𝑖𝑢

r ← false

else

10:
11:
end if
12:
return 𝑟
13:
14: end function

𝑥𝑗 − 𝑥𝑖

𝑥𝑗 − 𝑥𝑖

≥ −(𝐿𝑢𝑏 − (𝑙𝑚𝑖𝑛

𝑗 + 𝑙𝑚𝑎𝑥)

𝑖

))𝑣𝑓 𝑔𝑙

𝑖𝑗 + 𝑥𝑓 𝑔

𝑖𝑗 𝑣𝑓 𝑔𝑟

𝑖𝑗 +

∑

𝑖𝑗,𝑥 𝑣𝑓 𝑔𝑘
𝑏𝑓 𝑔𝑘

𝑖𝑗 +

∑

𝑖𝑗,𝑥 𝑣𝑓 𝑔𝑘
𝑎𝑓 𝑔𝑘

𝑖𝑗

, ∀(𝑖, 𝑗, 𝑓 , 𝑔) ∈ 𝐼 𝑓 𝑔
𝑖𝑗

(42)

≤ 𝑥𝑓 𝑔

𝑖𝑗 𝑣𝑓 𝑔𝑙

𝑖𝑗 + (𝐿𝑢𝑏 − (𝑙𝑚𝑖𝑛

𝑖 + 𝑙𝑚𝑎𝑥

𝑗

𝑘∈𝑇 𝑓 𝑔
𝑖𝑗
∑

𝑖𝑗,𝑥 𝑣𝑓 𝑔𝑘
𝑎𝑓 𝑔𝑘

𝑖𝑗 +

))𝑣𝑓 𝑔𝑟

𝑖𝑗 +

𝑘∈𝐵𝑓 𝑔
𝑖𝑗
∑

𝑖𝑗,𝑥 𝑣𝑓 𝑔𝑘
𝑏𝑓 𝑔𝑘

𝑖𝑗

, ∀(𝑖, 𝑗, 𝑓 , 𝑔) ∈ 𝐼 𝑓 𝑔
𝑖𝑗

(43)

𝑘∈𝑇 𝑓 𝑔
𝑖𝑗

𝑘∈𝐵𝑓 𝑔
𝑖𝑗

The most compact symmetry-breaking. The constraints (42) and (43) introduce two signiﬁcant improvements on
the basic NFP-CM-VS model as follows. First, they remove the big-M factors from constraints (24-29). And second,
they allow a signiﬁcant reduction in the complexity of the model by factorizing all constraints encoding the vertical
lines bounding the feasible sub-regions of each convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 part into only two constraints, whilst they hold the
symmetry-breaking of the symmetric solutions for the space of feasible relative placements between pieces with much
fewer constraints per convex 𝑁𝐹 𝑃 𝑓 𝑔
𝑖𝑗 part than the state-of-the-art Improved NFP-CM model [73]. Note that the
Improved NFP-CM model requires 2 constraints per binary variable of each convex 𝑁𝐹 𝑃 𝑓 𝑔𝑘
part to cover the feasible
space as shown in ﬁgure 2.d, whilst the NFP-CM-VS2 model only requires 1 constraint per binary variable (ineq. 22)
plus 2 constraints (ineq. 42-43) per convex 𝑁𝐹 𝑃 𝑓 𝑔𝑘
part. Thus, our NFP-CM-VS2 model provides the most compact
symmetry-breaking of the feasible space of relative placements between pieces reported in the literature.

𝑖𝑗

𝑖𝑗

4. Evaluation

The goals of the experiments in this section are as follows: (1) to evaluate the performance of our two new MIP
models, called NFP-CM-VS and NFP-CM-VS2; (2) to evaluate the impact of the family of feasibility cuts among three
pieces deﬁned by constraints (41); (3) to carry out a fair comparison of the performance of our new models with the
family of state-of-the-art continuous MIP models for irregular strip packing, which is based on the same hardware and

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 16 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

MIP model

Reference

Implementation details

NFP-CMnc

[25]

Exact replication of the NFP-CM model without cuts.

NFP-CM

[25]

Exact replication of the NFP-CM model [25] in which the non-overlapping feasibility
cuts [25, Algo.1, step 14] are inserted into the model as SOS-1 constraints for a fair
comparison with our models.

Improved
NFP-CM
(baseline)

[73]

Exact replication of the Improved NFP-CM model as detailed in [73, §3-4].

NFP-CM-VSnc

this work

Objective function (17) with constraints (18-40). All constraints are inserted into the
root node of the model, with the only exception of the clique-based cuts (40) that are
inserted into the model as SOS-1 constraints.

NFP-CM-VS

this work

Same implementation than NFP-CM-VSnc plus the feasibility cuts among three
pieces (41) inserted as user cuts (Lazy = -1) into the model.

NFP-CM-VS2

this work

Same implementation than NFP-CM-VS and substitution of the constraints (24-29)
by constraints (42) and (43), which are inserted into the root node of the model.

Table 1
Implementation details for all models evaluated herein. All models are built by ordering the pieces by non-increasing area.

software platform; (4) to replicate the state-of-the-art family of NFP-CM and Improved NFP-CM models from scratch;
(5) to develop a reproducible benchmark of state-of-the-art MIP models based on our software implementation of all
models evaluated herein into the same software library, which is provided as supplementary material (see Appendix
B); (6) to evaluate the state-of-the-art Improved NFP-CM in a standard benchmark [25] including many unexplored
problem instances not considered in its introductory paper [73]; (7) the independent conﬁrmation of previous ﬁndings
and results reported in the literature; and ﬁnally, (8) to elucidate the current state of the art on continuous MIP models
for irregular strip packing in a sound and reproducible way.

4.1. Experimental setup

We reproduce the same experiments carried-out by Cherri et al. [25] to evaluate the NFP-CMnc and NFP-CM
models by replicating all models detailed in table 1 and evaluate them in the same set of problem instances used by the
former authors, with the exception of the instances with holes and rotations. Thus, our experiments include the thirty-
ﬁve small problem instances and ten large ones shown in Cherri et al. [25, tables 2-3], which include most of problem
instances evaluated by Alvarez-Valdes et al. [6] that were also considered by Cherri et al. [25], plus one additional
large instance. On the other hand, the state-of-the-art Improved NFP-CM model setting our baseline for comparison
is evaluated here for the ﬁrst time in most of small problem instances shown in table 2 and all large problem instances
shown in table 3.

Table 1 details the state-of-the-art MIP models for irregular strip packing evaluated herein and the details of our
software implementation. To study the impact of our new family of feasibility cuts among three pieces (41), we have
deﬁned two versions of our new NFP-CM-VS model to be evaluated in our experiments, which are called NFP-CM-
VSnc and full NFP-CM-VS respectively, as shown in table 1. The only diﬀerence between these two later models is
that NFP-CM-VSnc does not include our new family of feasibility cuts among three pieces (41).

All our experiments are based on our own software implementation of all MIP models evaluated herein into the
same Java software library, called RAMNEST, which uses the Java API of Gurobi 9.5 to solve the models. Our
source code and a pre-compiled version of our software are publicly available in our reproducibility dataset [50]. We
have replicated the state-of-the-art family of NFP-CM models [25, 73] from scratch by integrating the three steps to
evaluate all models as follows: (1) pre-processing to decompose the pieces into convex parts based on the CGAL
implementation of the Greene’s algorithm [43]; (2) in-memory building of the MIP models by calling the functions in
the Java API for Gurobi 9.5; and (3) resolution of the optimization models by calling the Java API for Gurobi with its
default parameters. As we mentioned above, we use the ECC8 Java software library [27] to compute the cliques used
to deﬁne the clique-based cuts (40) inserted as SOS-1 constraints in our NFP-CM-VS and NFP-CM-VS2 models. The

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 17 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

version of the ECC algorithm [27] provided by ECC8 is not deterministic, which means that subsequent calls to ECC8
with the same data could return diﬀerent cliques. For this reason, we save the cliques computed by the ECC8 software
library into plain text ﬁles to allow the exact replication of our experiments, and to study isolately the impact of the
valid cuts (41) in our two former models regarding the NFP-CM-VSnc model. All our experiments were implemented
on a desktop UBUNTU 20.04 computer with an AMD Ryzen 7 5800X @3.8 GHz CPU (8 cores) and 64 Gb RAM.

4.2. Reproducing our benchmarks

All our experiments were generated by running the RamNestingdriver program distributed with RAMNEST V1R1
software library [50] with two reproducible benchmark ﬁles that deﬁnes all problem instances evaluated herein. All
problem instances are deﬁned in ESICUP XML ﬁle format and provided with our raw output data in our reproducibility
dataset [50]. The evaluation of each MIP model generates a Scalable Vector Graphics (SVG) ﬁle providing an image
of the solution, and a raw output ﬁle in (*.csv) ﬁle format reporting the following data for each problem instance
(see Appendix A): (1) name of the problem instance; (2) number of pieces; (3) nesting eﬃciency; (4-5) lower and
upper bounds of the solution; (6) MIP gap; (7) number of binary variables; (8) number of B&B nodes; (9) number of
simplex iterations; and (10) running time in seconds. All data reported herein is automatically generated by running
the benchmark_results R-language script ﬁle on the collection of raw output ﬁles. Finally, all our models, experiments,
and results can be exactly reproduced by following the instructions detailed in Appendix B, which also explains how
to evaluate the MIP models detailed in table 1 in other problem instances provided in ESICUP XML ﬁle format.

4.3. Evaluation metrics

To evaluate the performance of the MIP models detailed in table 1, we compare the upper bound, solution gap
( 𝑈 𝐵−𝐿𝐵
), and computation time in seconds obtained by each MIP model in the evaluation of all problem instances. In
𝑈 𝐵
order to provide a fair and unbiased comparison of the performance of all MIP models evaluated herein, we adopt the
same approach proposed by Cherri et al. [25], which uses performance proﬁles [31] based on the ratios between the
computation time of each model and the best computation time obtained by any model as a performance metric. Let be
Φ and 𝑀 the sets of problem instances and MIP models evaluated herein, respectively. Then the ratio of computation
times 𝑡𝜙,𝑚 for each model 𝑚 ∈ 𝑀 is deﬁned by 𝑟𝜙,𝑚 in formula (44), considering that the computation time is inﬁnite
whenever the models are unable to solve the problem instance up to the optimality. We assume an arbitrary parameter
≥ 𝑟𝜙,𝑚 ∀(𝜙, 𝑚) ∈ Φ × 𝑀, such that 𝑟𝜙,𝑚 = 𝑟𝑀 if and only if the model 𝑚 is unable to solve the problem 𝜙. Dolan
𝑟𝑀
and Moré [31] deﬁne a performance proﬁle of a solver or optimization model as the Cumulative Distribution Function
(CDF) of the computation time ratios 𝑟𝜙,𝑚, denoted by 𝜌𝑚(𝜏), and deﬁned in formula (45) below. The performance
proﬁles deﬁned by the 𝜌𝑚(𝜏) function set a well-founded and broadly adopted metric to compare optimization models
by avoiding any bias derived from a particular set of problem instances and dealing with those cases in which the
models are unable to solve the problem up to the optimality.

𝑟𝜙,𝑚 =

𝜌𝑚(𝜏) =

𝑡𝜙,𝑚
min{𝑡𝜙,𝑖 ∶ 𝑖 ∈ 𝑀}
1
𝑛𝜙

{𝜙 ∈ Φ ∶ 𝑟𝜙,𝑚

,

∀(𝜙, 𝑚) ∈ Φ × 𝑀

≤ 𝜏},

∀(𝑚, 𝜏) ∈ 𝑀 × [1, 𝑟𝑀 ]

(44)

(45)

4.4. Results obtained

Table 2 reports the terminating gap and running time in seconds obtained by the MIP models in the evaluation of
the thirty-ﬁve small problem instances, whilst table 3 reports the terminating gap for the eleven large instances. Figure
9 shows the performance proﬁle curves comparing the performance ratio (45) obtained by all models in the evaluation
of the small instances. Because of the lack of room, tables 2 and 3 omit the presentation of the lower and upper bounds.
However, this missing information and all our raw output data are provided in Appendix A as supplementary material.

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 18 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

e
r
e
w
s
l
e
d
o
m

l
l

A

.
s
e
c
e
i
p
#
h
t
i

w
s
e
c
n
a
t
s
n
i

m
e
l
b
o
r
p
l
l
a
m

s

f
o
n
o
i
t
a
u
l
a
v
e

e
h
t
n
i

s
l
e
d
o
m
P
I
M

e
h
t
y
b
d
e
n
i
a
t
b
o
s
d
n
o
c
e
s
n
i

e
m

i
t
g
n
i
n
n
u
r
d
n
a
p
a
g
g
n
i
t
a
n
i
m
r
e
T

:
2
e
l
b
a
T

.

d
l
o
b
n
i
n
w
o
h
s

e
r
a

s
t
l
u
s
e
r

t
s
e
B

.
s
d
n
o
c
e
s
0
0
6
3
o
t

t
e
s

s
a
w

)
L
T
(

t
i

i

m
L
e
m
T

i

.
4
0
.
0
2
U
T
N
U
B
U
d
n
a
5
.
9
i
b
o
r
u
G
n
o
d
e
s
a
b
y
r
a
r
b
i
l

e
r
a
w

t
f
o
s

e
m
a
s

e
h
t
o
t
n
i
d
e
t
n
e
m
e
l
p
m

i

-

2
S
V
M
C
-
P
F
N

-

S
V
M
C
-
P
F
N

-

c
n
S
V
M
C
-
P
F
N

]
3
7
[

M
C
-
P
F
N
d
e
v
o
r
p
m

I

]
5
2
[

M
C
-
P
F
N

]
5
2
[

c
n
M
C
-
P
F
N

e
m
T

i

)
s
c
e
s
(

5
0
0
0

.

4
0
3

.

0

5
3
0
0

.

1
2
0
0

.

4
0
0

.

2
4
2
1

.

3
5
5
0

.

6
4
1

.

0

1
8
9

.

0

2
2
2

.

9
0
1

3
6
9
0

.

8
5
4
1

.

1
2
3
2

.

7
3
8

.

4
1
1

8
5
7

.

4
4
2

9
9
3
6

.

8
3
4
1
3

.

1
4
3
3

.

6
8
8
8

.

7
3
0

.

3

5
8
9
8
8

.

3
7
1

.

0
2

1
6
3
6
3
3

.

6
4
3
4

.

3
2
7

.

3
2

1
1
2
1
6

.

3
1
2
9
5
2

.

3
9
5
9
8
1

.

2
4
8
7
5
2

.

L
T

L
T

2
7
5
5
1
1

.

L
T

L
T

L
T

P
A
G

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

9
2
0
0

.

3
4
1
0

.

0

3
4
1
0

.

3
7
1
0

.

7
9
1
0

.

e
m
T

i

)
s
c
e
s
(

5
0
0
0

.

2
7
2

.

0

5
0
0

.

9
1
0
0

.

6
6
0
0

.

1
7
9

.

0

5
9
5
0

.

2
9
0
0

.

2
9
2

.

2

6
9
8
1
1
1

.

9
4
7
0

.

2
8
9

.

0

2
6
8

.

8
1

7
3
2

.

6
0
2

8
2
2

.

3
6
6

5
6
3

.

0
1

4
4
9
1
2

.

8
9
9

.

4

9
6
6

.

8
1

5
0
0

.

4

9
4
0

.

3
3

9
2

9
7

.

6
5
2

7
7
7

.

6
3

7
6
3

.

4
2

3
3
1

.

7
2

3
7
6
2
0
3

.

4
0

.

1
5
1

9
9
5
4
9
3

.

L
T

L
T

2
5
8
1
2
2

.

L
T

L
T

4
4
7

.

0
8
3

P
A
G

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

8
1
1
0

.

3
4
1
0

.

0

3
4
1
0

.

2
1
2
0

.

0

e
m
T

i

)
s
c
e
s
(

4
0
0
.
0

6
0
3
.
0

4
5
0
.
0

0
2
0
.
0

2
5
0
.
0

5
5
2
.
1

8
2
5
.
0

5
4
1
.
0

6
0
3
.
5

2
0
6
.
8
8
2

2
1
8
.
0

4
5
6
.
1

4
2
6
.
4
4

3
0
4
.
3
8
1

9
3
1
.
2
8
2

1
0
8
.
8

6
1
2
.
4
3

3
0
2
.
4

1
8
8
.
7
2

5
7
4
.
3

2
4
6
.
5
3

6
.
4
2

8
6
8
.
9
4
1

8
7
2
.
1
9

5
9
9
.
8
5

2
6
7
.
3
3

8
4
2
.
5
1
2

7
5
7
.
1
6
1

3
5
.
1
9
1

L
T

L
T

6
4
5
.
2
9

L
T

L
T

2
0
0
.
8
0
2
2

P
A
G

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

9
2
0
.
0

3
4
1
.
0

0

3
4
1
.
0

2
7
1
.
0

0

e
m
T

i

)
s
c
e
s
(

8
0
0
.
0

8
3
1
.
0

4
2
0
.
0

4
2
0
.
0

9
3
0
.
0

4
5
.
0

7
4
6
.
0

5
1
1
.
0

6
8
3
.
1

L
T

1
5
7
.
0

2
8
4
.
1

9
1
1
.
2
1
4

1
7
2
.
4
7
2

2
8
5
.
5
0
3

1
4
3
.
8

4
2
7
.
7
1

7
4
0
.
6

1
5
7
.
8
1

7
9
9
.
2

5
0
6
.
0
1
1

3
7
2
.
6
2

7
2
7
.
8
4
2

3
0
1
.
9
6
1

5
2
6
.
0
7

9
7
5
.
7
0
2

6
5
1
.
1
8
3

2
2
5
.
0
9
2
1

4
0
6
.
4
5
5
1

L
T

L
T

9
1
4
.
5
4
3

L
T

L
T

L
T

P
A
G

0

0

0

0

0

0

0

0

0

4
9
0
.
0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

9
2
0
.
0

3
4
1
.
0

0

3
4
1
.
0

6
9
1
.
0

4
2
2
.
0

e
m
T

i

)
s
c
e
s
(

6
0
0
.
0

2
4
.
0

6
1
0
.
0

9
2
0
.
0

3
3
0
.
0

4
7
4
.
0

8
6
6
.
0

9
0
.
0

4
6
0
.
0

L
T

1
7
.
0

3
0
8
.
0

6
6
3
.
2

6
4
4
.
0
9
1

L
T

9
9
3
.
3

8
8
.
0
2
1

8
2
7
.
4

9
6
8
.
8
4

7
0
4
.
1

2
7
3
.
9
2
7

5
2
5
.
4
8
8
1

7
4
0
1

L
T

8
5
2
.
3
3
1

9
0
3
.
4
7

6
2
0
.
4
4
9

L
T

L
T

L
T

L
T

9
0
4
.
7
6
0
1

L
T

L
T

5
4
4
.
9
0
0
1

P
A
G

0

0

0

0

0

0

0

0

0

5
1
1
0

.

0

0

0

0

5
4
0
0

.

0

0

0

0

0

0

0

0

3
8
0
0

.

0

0

0

7
7
0
0

.

3
8
0
0

.

8
1
1
0

.

3
4
1
0

.

0

3
4
1
0

.

6
5
1
0

.

0

e
m
T

i

)
s
c
e
s
(

5
0
0
0

.

2
6
1
0

.

7
3
0
0

.

8
2
0
0

.

3
3
0
0

.

7
4
0

.

8
5
6
0

.

7
8
0
0

.

6
8
0
0

.

L
T

1
1
7
0

.

4
8
7
0

.

9
4
7
1

.

9
6
1
1
9
1

.

L
T

7
2
2
3

.

9
6
1
0
2
1

.

3
3
3
7

.

1
6
0
1
8
1

.

8
5
4
1

.

.

2
9
7
1
9
5
3

.

5
4
7
2
6
3
1

.

1
9
8
7
4
0
1

.

8
0
0
3
8
6
2

3
3
2
2
9

.

5
8
1
1
1
2

.

.

3
5
8
4
7
7
1

L
T

.

6
3
8
4
0
4
3

L
T

L
T

7
9
2
6
8
7

.

L
T

L
T

5
3
7
7
8
5

.

P
A
G

0

0

0

0

0

0

0

0

0

5
1
1
0

.

0

0

0

0

5
4
0
0

.

0

0

0

0

0

0

0

0

0

0

0

0

4
5
1
0

.

0

7
6
1
0

.

3
4
1
0

.

0

3
4
1
0

.

3
5
1
0

.

0

#

3

4

5

5

6

6

6

7

7

8

8

9

9

9

9

0
1

0
1

0
1

0
1

0
1

0
1

0
1

2
1

2
1

2
1

2
1

2
1

2
1

4
1

4
1

4
1

4
1

4
1

5
1

6
1

e
c
n
a
t
s
n
I

4
s
e
p
a
h
S

1
s
s
a
l
g

e
e
r
h
t

5
u
f

6
u
f

9
w
2
p
e
e
r
h
t

2
p
e
e
r
h
t

8
s
e
p
a
h
S

2
s
s
a
l
g

7
u
f

8
u
f

9
u
f

9
w
3
p
e
e
r
h
t

3
p
e
e
r
h
t

3
s
s
a
l
g

2
e
h
g
i
D

0
1
u
f

0
-
0
2
-
0
1
-
1
J

1
-
0
2
-
0
1
-
1
J

2
-
0
2
-
0
1
-
1
J

3
-
0
2
-
0
1
-
1
J

4
-
0
2
-
0
1
-
1
J

u
f

0
-
0
2
-
2
1
-
1
J

1
-
0
2
-
2
1
-
1
J

2
-
0
2
-
2
1
-
1
J

3
-
0
2
-
2
1
-
1
J

4
-
0
2
-
2
1
-
1
J

0
-
0
2
-
4
1
-
1
J

1
-
0
2
-
4
1
-
1
J

2
-
0
2
-
4
1
-
1
J

3
-
0
2
-
4
1
-
1
J

4
-
0
2
-
4
1
-
1
J

a
1
y
l
o
P

1
e
h
g
i
D

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 19 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

Figure 9: Performance proﬁle [31] showing the Cumulative Distribution Function (CDF) for the performance ratio 𝑟𝜙,𝑚
comparing the running times of all MIP models in the evaluation of the small problem instances.

Table 3
Terminating gap ( 𝑈 𝐵−𝐿𝐵
) and running time in seconds obtained by the MIP models in the evaluation of all large problem
instances. All models were implemented into the same software library based on Gurobi 9.5 onto an UBUNTU 20.04
computer. Time Limit (TL) was set to 3600 seconds, but none model was able to solve any instance up to optimality
within this time limit. The ’X’ symbol denotes that no feasible solution was obtained. Best gap results are shown in bold.

𝑈 𝐵

NFP-CMnc NFP-CM Improved NFP-CM NFP-CM-VSnc NFP-CM-VS NFP-CM-VS2

Instance #
16
Blaz2-16
20
Blaz2
20
Mao
24
Albano
24
Marques
25
Jakobs1
25
Jakobs2
28
Blaz1
30
Dagli
48
Shapes0
64
Trousers

GAP
0.299
0.265
0.243
0.235
0.176
0.167
0.321
0.243
0.278
X
0.235

GAP
0.285
0.271
0.285
0.241
0.207
0.167
0.296
0.236
0.249
X
0.241

GAP
0.322
0.296
X
X
X
0.167
0.367
X
X
X
X

GAP
0.304
0.269
0.798
0.259
X
0.167
0.321
0.262
X
X
X

GAP
0.302
0.265
0.297
0.19
0.188
0.167
0.321
0.232
0.27
X
X

GAP
0.312
0.281
X
0.25
0.179
0.167
0.269
0.264
0.215
X
X

5. Discussion
5.1. Comparison in small problem instances

The entire family of NFP-CM-VS models obtains a signiﬁcantly higher performance ratio than the family of NFP-
CM models, and signiﬁcantly outperforms the baseline Improved NFP-CM model, as shown in ﬁgure 9. Likewise,
the NFP-CM-VSnc and NFP-CM-VS models solve the largest number of small problem instances up to optimality, as
shown in table 2.

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 20 of 25

010203040500.00.20.40.60.81.0Performance profile for the 35 small instancesRunning time ratio respect to the best running time for each instanceCDF for the performance ratio NFP−CMncNFP−CMImproved NFP−CMNFP−CM−VSncNFP−CM−VSNFP−CM−VS2A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

The symmetry-breaking proposed by our new geometric decomposition based on vertical slices signiﬁcantly out-
performs that proposed by the baseline Improved NFP-CM model, as shown in ﬁgure 9, and the results reported for
large problem instances in table 3, in which the NFP-CM-VS and NFP-CM-VS2 models obtain better terminating gaps
than the Improved NFP-CM model in all large instances, moreover doubling the number of instances in which a feasible
solution is obtained.

Looking at the results in table 2, we ﬁnd that among the small instances solved up to optimality, NFP-CM-VS2
is the fastest model in 7 instances, whilst NFP-CM-VS, NFP-VSnc, and NFP-CMnc models are the fastest ones in 6
instances, NFP-CM in 5, and Improved NFP-CM in 2.

The NFP-CM-VS and NFP-CM-VSnc models obtain a slightly better performance ratio than the NFP-CM-VS2
model, as shown in ﬁgure 9. Thus, the compact formulation of the NFP-CM-VS2 model is unable to outperform the
NFP-CM-VS models. Despite our NFP-CM-VS2 model deﬁning a much more compact formulation than the NFP-CM-
VS models and removing almost two-thirds of constraints and big-M terms, not only does NFP-CM-VS2 not improve
on the NFP-CM-VS models, but it also performs slightly worse than the later ones. Thus, we conjecture that the NFP-
CM-VS formulation provides a more tightened model than the more compact NFP-CM-VS2 formulation, making the
B&C exploration of the MIP solver faster.

5.2. Comparison in large problem instances

The entire family of NFP-CM-VS models obtains lower terminating gaps than the baseline Improved NFP-CM
model in the evaluation of large problem instances. Moreover, our new family of MIP models doubles the cases in
which it can ﬁnd feasible solutions, as shown in table 3.

Current state-of-the-art MIP models evaluated herein are unable to either solve a large instance up to optimality or
obtain feasible solutions for all of them, as shown in table 3. NFP-CMnc and NFP-CM models obtain feasible solutions
for 10 of 11 large problem instances, whilst NFP-CM-VS does it for 9 cases, NFP-CM-V2 for 8, NFP-CM-VSnc for 7,
and the Improved NFP-CM for only 4.

The NFP-CMnc obtains the lowest terminating gap in 4 large problem instances, whilst NFP-CM-VS does it in 3

cases, NFP-CM-VS2 in 2, and NFP-CM in 1, as shown in table 3.

NFP-CM and NFP-CMnc models signiﬁcantly outperform the baseline Improved NFP-CM model in the large
problem instances, as shown in table 3. Table 3 also shows that Improved NFP-CM fails in obtaining feasible so-
lutions in most of instances and it outperform NFP-CM model in none large instance. Thus, the symmetry-breaking
proposed by the Improved NFP-CM is unable to provide consistent performance results in the large problems instances
in comparison with its results in the small ones.

NFP-CMnc obtains competitive performance results in the large problem instances regarding NFP-CM, despite
it have not been evaluated before, as shown in table 3. This conclusion is relevant because despite the introductory
paper of Cherri et al. [25] omitted the evaluation of NFP-CMnc in the large problem instances, our results show that
there is no a signiﬁcant diﬀerence in performance between NFP-CMnc and NFP-CM, both in small and large problem
instances, as shown in ﬁgure 9 and table 3.

5.3. Impact of valid cuts among three pieces

The valid cuts among three pieces implemented by our NFP-CM-VS model signiﬁcantly improve the performance
of the NFP-CM-VSnc model. This conclusion can be drawn by comparing the performance proﬁles shown in ﬁgure 9
and the termination gap values reported in table 3 for both former models. Looking at the columns of both aforemen-
tioned models in table 3, you can see that NFP-CM-VS obtains a lower or equal terminating gap than NFP-CM-VSnc
in all instances in which at least a feasible solution is found. Moreover, NFP-CM-VS ﬁnds feasible solutions for two
large instances more than NFP-CM-VSnc. Thus, these performance improvements can only be attributed to the single
diﬀerence between both former models: the valid cuts among three pieces deﬁned by inequalities (41).

5.4. Impact of technological advances and conﬁrmation of previous results

Our replication of all MIP models evaluated herein allows conﬁrming previous results and drawing some conclu-
sions on the impact of the technological advances both in hardware and MIP solvers regarding the results reported by
Cherri et al. [25] and Rodrigues et al. [73], regardless our experiments are based on Gurobi 9.5 (2022) instead of the
CPLEX 12.6 solver used by the former authors.

The Improved NFP-CM baseline model obtains a higher performance ratio than the NFP-CM and NFP-CMnc
models in the evaluation of small problem instances, as shown in ﬁgure 9. First, this conclusion allows conﬁrming in

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 21 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

a sound way that the Improved NFP-CM sets the current state-of-the-art of the problem, and thus, it sets our baseline
for comparison. We note that the Improved NFP-CM model introduced by Rodrigues et al. [73] was not evaluated in
the same set of problem instances than the NFP-CM model [25], such as done here for the ﬁrst time. On the contrary,
the Improved NFP-CM model was evaluated in a diﬀerent and more reduced set of instances, which limits the scope
of previous conclusions. However, we bridge this minor gap here by independently conﬁrming the achievements of
the family of NFP-CM models [25, 73] in a more sound way.

The Dighe1 instance is solved for the ﬁrst time up to the optimality by the NFP-CMnc, NFP-CM, NFP-CM-VSnc,
and NFP-CM-VS models. This conclusion can be drawn by looking the results reported for the Dighe1 instance in
table 2 and comparing them with the results reported in [25, table 1].

The advances in hardware and MIP solvers contribute to improve the performance of NFP-CMnc and NFP-CM
models. This conclusion can be drawn by looking the results reported in tables 2 and 3, and comparing them with
those reported in [25, tables 1-2]. For instance, NFP-CMnc and NFP-CM are able to solve for the ﬁrst time the
threep3, J1-10-20-3, fu, and Dighe1 instances. However, NFP-CM cannot solve the Shapes8 and threep3w9 instances
up to the optimality in our experiments, which we attribute to diﬀerences in B&C algorithms of the MIP solvers and
the implementation of some valid inequalities using SOS-1 type constraints, as detailed in table 1. On the other hand,
this technology improvement is much more noticeable in the case of the large problem instances reported in table 3,
in which NFP-CM signiﬁcantly reduce the terminating gap in all instances and it is able to obtain for the ﬁrst time a
feasible solution for the Trousers instance.

5.5. The new state of the art

Our NFP-CM-VS model sets the new state-of-the-art among the family of continuous MIP models for nesting and
provides a more consistent performance ratio than current state-of-the-art models, as shown in ﬁgure 9 and tables 2 and
3. Although NFP-CM-VS only obtains comparable results to that obtained by the NFP-CMnc and NFP-CM models in
terms of terminating gap in the evaluation of large problem instances, in which NFP-CMnc has the advantage of having
one third less constraints than NFP-CM-VS, which signiﬁcantly reduces the resolution of LP problems during the B&C
exploration, the performance ratios reported in ﬁgure 9 show that all improvements proposed in the formulation of our
NFP-CM-VS models improve the state-of-the-art and suggest new lines of improvement for the problem. Moreover,
NFP-CM-VS shows consistent performance results in the full range of problem instances evaluated herein, unlike the
Improved NFP-CM model whose performance signiﬁcantly decreases in the large problem instances.

6. Conclusions and future work

We have introduced a new family of continuous MIP models for irregular strip packing with two diﬀerent formu-
lations, abbreviated NFP-CM-VS and NFP-CM-VS2, which is based on a new convex decomposition of the feasible
regions between convex parts into vertical slices, together with a new family of valid inequalities, symmetry breakings,
and variable eliminations derived from the former geometric decomposition.

Our new family of MIP models outperform the state-of-the-art family of NFP-CM models introduced by Cherri
et al. [25] and Rodrigues et al. [73]. Our new NFP-CM-VS model signiﬁcantly and consistently sets the new state of the
art of the problem. We show that our new geometric decomposition based on vertical slices outperforms the symmetry-
breaking proposed by the Improved NFP-CM model [73], despite NFP-CM-VS tripling the number of constraints of
NFP-CM [25] instead of only doubling it as done by the Improved NFP-CM model. Likewise, we show that our new
family of valid cuts among three pieces signiﬁcantly contribute to the performance gain of our NFP-CM-VS model.

Another signiﬁcant contribution is the introduction of the ﬁrst conﬁrmatory and reproducible experimental survey
in this line of research, which is based on our software implementation of all models evaluated herein into a same Java
software library, together with a detailed reproducibility protocol and dataset provided as supplementary material to
allow the exact replication of all our models, experiments, and results.

We conﬁrm the previous achievements of the family of NFP-CM models [25], setting the outperformance of the
Improved NFP-CM model [73] on the former ones in a sound way by replicating all models from scratch and comparing
them in the same benchmark reported by Cherri et al. [25].

As forthcoming activities, we plan to study the proposal of any decomposition method or matheuristics that allows

improve the performance of our new family of MIP models for nesting.

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 22 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

Acknowledgements

We are grateful to Luiz Cherri, Ramón Álvarez-Valdés, and Antonio Martínez-Sykora for providing us the problem

instances used in their benchmarks, and to Alicia Lara-Clares by testing our reproducibility protocol.

A. Appendix A: Raw output data for all models

This appendix introduces all raw output data generated by our experiments not reported herein by lack of room.

B. Appendix B: The reproducible experiments on irregular strip-packing

This appendix introduces a detailed reproducibility protocol and dataset [50] providing our raw output data together

with a collection of software and data resources to allow the exact replication of all our experiments and results.

References
[1] Adamowicz, M., Albano, A., 1976a. Nesting two-dimensional shapes in rectangular modules. Comput. Aided Des. Appl. 8, 27–33.
[2] Adamowicz, M., Albano, A., 1976b. A solution of the rectangular Cutting-Stock problem. IEEE Trans. Syst. Man Cybern. SMC-6, 302–310.
[3] Agarwal, P.K., Flato, E., Halperin, D., 2002. Polygon decomposition for eﬃcient construction of Minkowski sums. Computational geometry:

theory and applications 21, 39–61.

[4] Al Theeb, N.A., Hayajneh, M.T., Jaradat, M.Y., 2021. New strategy to improve the dotted board model for solving two dimensional cutting

and packing problems. Computers & Industrial Engineering 159, 107467.

[5] Albano, A., Sapuppo, G., 1980. Optimal allocation of Two-Dimensional irregular shapes using heuristic search methods. Systems, Man and

Cybernetics, IEEE Transactions on 10, 242–248.

[6] Alvarez-Valdes, R., Martinez, A., Tamarit, J.M., 2013. A branch & bound algorithm for cutting and packing irregularly shaped pieces. Int. J.

Prod. Econ. 145, 463–477.

[7] Álvarez-Valdés, R., Parreño, F., Tamarit, J.M., 2009. A branch and bound algorithm for the strip packing problem. OR Spectrum. Quantitative

Approaches in Management 31, 431–459.

[8] Alves, C., Brás, P., Valério de Carvalho, J., Pinto, T., 2012. New constructive algorithms for leather nesting in the automotive industry.

Computers & operations research 39, 1487–1505.

[9] Amaro Júnior, B., Pinheiro, P.R., Coelho, P.V., 2017. A parallel biased Random-Key genetic algorithm with multiple populations applied to

irregular strip packing problems. Math. Probl. Eng. 2017.

[10] Annamalai Vasantha, G.V., Jagadeesan, A.P., Corney, J.R., Lynn, A., Agrawal, A., 2016. Crowdsourcing solutions to 2D irregular strip packing

problems from internet workers. Int. J. Prod. Res. 54, 4104–4125.

[11] Art, Jr, R.C., 1966. An approach to the two dimensional irregular cutting stock problem. Ph.D. thesis. Massachusetts Institute of Technology.
[12] Bennell, J.A., Oliveira, J.F., 2008. The geometry of nesting problems: A tutorial. Eur. J. Oper. Res. 184, 397–415.
[13] Bennell, J.A., Oliveira, J.F., 2009. A tutorial in irregular shape packing problems. J. Oper. Res. Soc. , S93–S105.
[14] Bennell, J.A., Oliveira, J.F., Wäscher, G., 2013. Cutting and packing. International Journal of Production Economics 145, 449–450.
[15] de Berg, M., Van Kreveld, M., Overmars, M., Schwarzköpf, O., 1997. Computational Geometry: Algorithms and Applications. Springer-

Verlag.

[16] Carravilla, M.A., Ribeiro, C., 2005. CP and MIP in the resolution of hard combinatorial problems: A case study with nesting problems, in:
Proceedings of the CSCLP 2005 Joint ERCIM/CoLogNET International Workshop on Constraint Solving and Constraint Logic Programming,
Citeseer, Uppsala, Sweden. pp. 113–127.

[17] Carravilla, M.A., Ribeiro, C., Oliveira, J.F., 2003. Solving nesting problems with non-convex polygons by constraint logic programming. Int.

Trans. Oper. Res. 10, 651–663.

[18] Cheok, B.T., Nee, A.Y.C., 1991. Algorithms for nesting of ship/oﬀshore structural plates. American Society of Mechanical Engineers, Design

Engineering Division (Publication) DE 32, 221–226.

[19] Chernov, N., Stoyan, Y., Romanova, T., 2010. Mathematical model and eﬃcient algorithms for object packing problem. Comput. Geom. 43,

535–553.

[20] Chernov, N., Stoyan, Y., Romanova, T., Pankratov, A., 2012. Phi-Functions for 2D Objects Formed by Line Segments and Circular Arcs.

Advances in Operations Research 2012.

[21] Cherri, L.H., Carravilla, M.A., Ribeiro, C., Toledo, F.M.B., 2019. Optimality in nesting problems: New constraint programming models and

a new global constraint for non-overlap. Operations Research Perspectives 6, 100125.

[22] Cherri, L.H., Carravilla, M.A., Toledo, F.M.B., 2016a. A MODEL-BASED HEURISTIC FOR THE IRREGULAR STRIP PACKING PROB-

LEM. Pesquisa Operacional 36, 447–468.

[23] Cherri, L.H., Cherri, A.C., Carravilla, M.A., Oliveira, J.F., Toledo, F.M.B., Vianna, A.C.G., 2018a. An innovative data structure to handle

the geometry of nesting problems. International Journal of Production Research 56, 7085–7102.

[24] Cherri, L.H., Cherri, A.C., Soler, E.M., 2018b. Mixed integer quadratically-constrained programming model to solve the irregular strip

packing problem with continuous rotations. J. Global Optimiz. 72, 89–107.

[25] Cherri, L.H., Mundim, L.R., Andretta, M., Toledo, F.M.B., Oliveira, J.F., Carravilla, M.A., 2016b. Robust mixed-integer linear programming

models for the irregular strip packing problem. European Journal of Operational Research 253, 570–583.

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 23 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

[26] Codato, G., Fischetti, M., 2006. Combinatorial Benders’ Cuts for Mixed-Integer Linear Programming. Operations research 54, 756–766.
[27] Conte, A., Grossi, R., Marino, A., 2020. Large-scale clique cover of real-world networks. Information and Computation 270, 104464.
[28] Cuninghame-Green, R., 1989. Geometry, shoemaking and the milk tray problem. New scientist 123, 50–53.
[29] Daniels, K., Li, Z., Milenkovic, V., 1994. Multiple containment methods. Technical Report Technical Report TR-12-94. Harvard Computer

Science Group.

[30] Dean, H.T., 2002. Minimizing waste in the 2-dimensional cutting stock problem. Ph.D. thesis. Department of Mechanical Engineering,

University of Canterbury. Christchurch, New Zealand.

[31] Dolan, E.D., Moré, J.J., 2002. Benchmarking optimization software with performance proﬁles. Mathematical Programming. A Publication

of the Mathematical Programming Society 91, 201–213.

[32] Dowsland, K.A., Dowsland, W.B., 1992. Packing problems. Eur. J. Oper. Res. 56, 2–14.
[33] Dowsland, K.A., Dowsland, W.B., 1995. Solution approaches to irregular nesting problems. Eur. J. Oper. Res. 84, 506–521.
[34] Dowsland, K.A., Vaid, S., Dowsland, W.B., 2002. An algorithm for polygon placement using a bottom-left strategy. European Journal of

Operational Research 141, 371–381.

[35] Dyckhoﬀ, H., 1990. A typology of cutting and packing problems. Eur. J. Oper. Res. 44, 145–159.
[36] Elamvazuthi, I., Kamaruddin, S., Azmi, M.S., 2009. Automation of nesting and cutting processes of leather furniture production: a case study.

International Journal of Mechanical & Mechatronics Engineering IJMME 9.

[37] Elkeran, A., 2013. A new approach for sheet nesting problem using guided cuckoo search and pairwise clustering. Eur. J. Oper. Res. 231,

757–769.

[38] Fernández, J., Cánovas, L., Pelegrín, B., 2000. Algorithms for the decomposition of a polygon into convex polygons. European Journal of

Operational Research 121, 330–342.

[39] Fischetti, M., Luzzi, I., 2009. Mixed-integer programming models for nesting problems. Journal of Heuristics 15, 201–226.
[40] Fowler, R.J., Paterson, M.S., Tanimoto, S.L., 1981. Optimal packing and covering in the plane are NP-complete.

Inf. Process. Lett. 12,

133–137.

[41] Gilmore, P.C., Gomory, R.E., 1965. Multistage cutting stock problems of two and more dimensions. Oper. Res. 13, 94–120.
[42] Gomes, A.M., Oliveira, J.F., 2002. A 2-exchange heuristic for nesting problems. Eur. J. Oper. Res. 141, 359–370.
[43] Greene, D.H., 1983. The decomposition of polygons into convex parts, in: Preparata, F. (Ed.), Computational Geometry. JAI Press, Greenwich,

Connecticut (USA).. volume 1 of Adv. Comput. Res., pp. 235–259.

[44] Han, W., Bennell, J.A., Zhao, X., Song, X., 2013. Construction heuristics for two-dimensional irregular shape bin packing with guillotine

constraints. Eur. J. Oper. Res. 230, 495–504.

[45] Heistermann, J., Lengauer, T., 1995. The nesting problem in the leather manufacturing industry. Ann. Oper. Res. .
[46] Hopper, E., Turton, B.C.H., 2001. A review of the application of Meta-Heuristic algorithms to 2D strip packing problems. Artiﬁcial Intelli-

gence Review 16, 257–300.

[47] Iori, M., de Lima, V.L., Martello, S., Miyazawa, F.K., Monaci, M., 2021. Exact solution techniques for two-dimensional cutting and packing.

European Journal of Operational Research 289, 399–415.

[48] Jones, D.R., 2014. A fully general, exact algorithm for nesting irregular shapes. J. Global Optimiz. 59, 367–404.
[49] Kallrath, J., 2009. Cutting circles and polygons from area-minimizing rectangles. Journal of Global Optimization 43, 299–328.
[50] Lastra-Díaz, J.J., Ortuño, M.T., 2022. Reproducibility dataset for a new mixed-integer programming model for irregular strip packing based

on vertical slices. Mendeley Data, V1, doi:10.17632/m8nzsk5c9v.1. http://dx.doi.org/10.17632/m8nzsk5c9v.1.

[51] Leao, A.A.S., Toledo, F.M.B., 2021. Enhanced solution for the irregular strip packing problem: valid inequalities and branching priorities,

in: LIII Simpósio Brasileiro de Pesquisa Operacional Joao Pessoa, pp. 1–12.

[52] Leao, A.A.S., Toledo, F.M.B., Oliveira, J.F., Carravilla, M.A., 2016. A semi-continuous MIP model for the irregular strip packing problem.

International Journal of Production Research 54, 712–721.

[53] Leao, A.A.S., Toledo, F.M.B., Oliveira, J.F., Carravilla, M.A., Álvarez-Valdés, R., 2020. Irregular packing problems: A review of mathemat-

ical models. European Journal of Operational Research 282, 803–822.

[54] Li, Z., 1994. Compaction algorithms for non-convex polygons and their applications. Ph.D. thesis. Harvard University. http://nrs.

harvard.edu/urn-3:HUL.InstRepos:25619464.

[55] Li, Z., Milenkovic, V., 1993. A compaction algorithm for non-convex polygons and its application, in: Proceedings of the Ninth Annual

Symposium on Computational Geometry, ACM, New York, NY, USA. pp. 153–162.

[56] Li, Z., Milenkovic, V., 1995. Compaction and separation algorithms for non-convex polygons and their applications. Eur. J. Oper. Res. 84,

539–561.

[57] Lodi, A., Martello, S., Vigo, D., 2002. Recent advances on two-dimensional bin packing problems. Discrete Appl. Math. 123, 379–396.
[58] Milenkovic, V., Daniels, K., Li, Z., 1991. Automatic marker making, in: Proceedings of the Third Canadian Conference on Computational

Geometry, nereida.deioc.ull.es. pp. 243–246.
[59] Moore, R.E., 1966. Interval analysis. Prentice Hall.
[60] Moore, R.E., Kearfott, R.B., Cloud, M.J., 2009.

Introduction to INTERVAL ANALYSIS. volume 2. Society for Industrial and Applied

Mathematics (SIAM).

[61] Mundim, L.R., Andretta, M., Carravilla, M.A., Oliveira, J.F., 2018. A general heuristic for two-dimensional nesting problems with limited-size

containers. Int. J. Prod. Res. 56, 709–732.

[62] Mundim, L.R., Andretta, M., de Queiroz, T.A., 2017. A biased random key genetic algorithm for open dimension nesting problems using

no-ﬁt raster. Expert Syst. Appl. 81, 358–371.

[63] Pankratov, A., Romanova, T., Shekhovtsov, S., Grebennik, I., Pankratova, J., 2020. Packing Irregular Polygons using Quasi Phi-functions, in:

2020 10th International Conference on Advanced Computer Information Technologies (ACIT), pp. 1–5.

[64] Peralta, J., Andretta, M., Oliveira, J.F., 2018. SOLVING IRREGULAR STRIP PACKING PROBLEMS WITH FREE ROTATIONS USING

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 24 of 25

A new mixed-integer programming model for irregular strip packing based on vertical slices with a reproducible survey

SEPARATION LINES. Pesqui. Oper. 38, 195–214.

[65] Pinheiro, P.R., Amaro Júnior, B., Saraiva, R.D., 2016. A random-key genetic algorithm for solving the nesting problem. Int. J. Comput. Integr.

Manuf. 29, 1159–1165.

[66] Puri, A., 2013. Eﬃcacy of Pattern Making Software in Product Development. International Journal of Advanced Quality Management 1,

21–39.

[67] Ribeiro, C., Carravilla, M.A., 2004. A global constraint for nesting problems, in: Integration of AI and OR Techniques in Constraint Pro-

gramming for Combinatorial Optimization Problems, Springer Berlin Heidelberg. pp. 256–270.

[68] Ribeiro, C., Carravilla, M.A., 2009. A global constraint for nesting problems. Artiﬁcial Intelligence Review 30, 99.
[69] Ribeiro, C., Carravilla, M.A., Oliveira, J.F., 1999. Applying constraint logic programming to the resolution of nesting problems. Pesquisa

Operacional 19, 239–247.

[70] Riﬀ, M.C., Bonnaire, X., Neveu, B., 2009. A revision of recent approaches for two-dimensional strip-packing problems. Engineering appli-

cations of artiﬁcial intelligence 22, 823–827.

[71] Rocha, P., Gomes, A.M., Rodrigues, R., Toledo, F.M.B., Andretta, M., 2016. Constraint Aggregation in Non-linear Programming Models for

Nesting Problems, in: Computational Management Science, Springer International Publishing. pp. 175–180.

[72] Rocha, P., Rodrigues, R., Gomes, A.M., Toledo, F.M.B., Andretta, M., 2014. Circle Covering Representation for Nesting problems with

continuous rotations. IFAC Proceedings Volumes. Proc. of the 19th IFAC World Congress 47, 5235–5240.

[73] Rodrigues, M.O., Cherri, L.H., Mundim, L.R., 2017. MIP models for the irregular strip packing problem: new symmetry breaking constraints.

ITM Web of Conferences 14, 00005.

[74] Rodrigues, M.O., Toledo, F.M.B., 2017. A clique covering MIP model for the irregular strip packing problem. Comput. Oper. Res. 87,

221–234.

[75] Romanova, T., Stoyan, Y., Pankratov, A., Litvinchev, I., Marmolejo, J.A., 2020. Decomposition Algorithm for Irregular Placement Problems,

in: Intelligent Computing and Optimization, Springer International Publishing. pp. 214–221.

[76] Santoro, M.C., Lemos, F.K., 2015. Irregular packing: MILP model based on a polygonal enclosure. Ann. Oper. Res. 235, 693–707.
[77] Sato, A.K., Martins, T.C., Gomes, A.M., Tsuzuki, M.S.G., 2019. Raster penetration map applied to the irregular packing problem. European

Journal of Operational Research 279, 657–671.

[78] Sato, A.K., Martins, T.d.C., Tsuzuki, M.d.S.G., 2016a. A pairwise exact placement algorithm for the irregular nesting problem. International

Journal of Computer Integrated Manufacturing 29, 1177–1189.

[79] Sato, A.K., de Sales Guerra Tsuzuki, M., de Castro Martins, T., Gomes, A.M., 2016b. Study of the grid size impact on a raster based strip

packing problem solution. IFAC-PapersOnLine 49, 143–148.

[80] Sawaya, N.W., Grossmann, I.E., 2005. A cutting plane method for solving linear generalized disjunctive programming problems. Computers

& chemical engineering 29, 1891–1913.

[81] Rodrigues de Souza, L., Andretta, M., 2020. Modelo de programaçao estocástica para um problema de corte de itens irregulares, in: LII

Simpósio Brasileiro de Oesquisa Operacional.

[82] Rodrigues de Souza, L., Andretta, M., 2022. A branch-and-cut algorithm for the irregular strip packing problem with uncertain demands.

International transactions in operational research: a journal of The International Federation of Operational Research Societies .

[83] Stoyan, Y., Pankratov, A., Romanova, T., 2016a. Cutting and packing problems for irregular objects with continuous rotations: mathematical

modelling and non-linear optimization. The Journal of the Operational Research Society 67, 786–800.

[84] Stoyan, Y., Pankratov, A., Romanova, T., 2016b. Quasi-phi-functions and optimal packing of ellipses. Journal of Global Optimization 65,

283–307.

[85] Stoyan, Y., Pankratov, A., Romanova, T., 2017. Placement Problems for Irregular Objects: Mathematical Modeling, Optimization and Ap-
plications, in: Butenko, S., Pardalos, P.M., Shylo, V. (Eds.), Optimization Methods and Applications : In Honor of Ivan V. Sergienko’s 80th
Birthday. Springer International Publishing, Cham, pp. 521–559.

[86] Stoyan, Y., Romanova, T., 2013. Mathematical Models of Placement Optimisation: Two- and Three-Dimensional Problems and Applications,
in: Fasano, G., Pintér, J.D. (Eds.), Modeling and Optimization in Space Engineering. Springer New York, New York, NY, pp. 363–388.
[87] Stoyan, Y., Romanova, T., Pankratov, A., Chugay, A., 2015. Optimized Object Packings Using Quasi-Phi-Functions, in: Fasano, G., Pintér,

J.D. (Eds.), Optimized Packings with Applications. Springer International Publishing, Cham, pp. 265–293.

[88] Stoyan, Y.G., Novozhilova, M.V., Kartashov, A.V., 1996. Mathematical model and method of searching for a local extremum for the non-

convex oriented polygons allocation problem. European Journal of Operational Research 92, 193–210.

[89] Stoyan, Y.G., Zlotnik, M.V., Chugay, A.M., 2012. Solving an optimization packing problem of circles and non-convex polygons with rotations

into a multiply connected region. The Journal of the Operational Research Society 63, 379–391.

[90] Sweeney, P.E., Paternoster, E.R., 1992. Cutting and packing problems: A categorized, Application-Orientated research bibliography. J. Oper.

Res. Soc. 43, 691–706.

[91] Toledo, F.M.B., Carravilla, M.A., Ribeiro, C., Oliveira, J.F., Gomes, A.M., 2013. The Dotted-Board model: A new MIP model for nesting

irregular shapes. Int. J. Prod. Econ. 145, 478–487.

[92] Wang, A., Hanselman, C.L., Gounaris, C.E., 2018. A customized branch-and-bound approach for irregular shape nesting. J. Global Optimiz.

71, 935–955.

[93] Wang, P.Y., Wäscher, G., 2002. Cutting and packing. European Journal of Operational Research 141, 239–240.
[94] Wäscher, G., Haußner, H., Schumann, H., 2007. An improved typology of cutting and packing problems. Eur. J. Oper. Res. 183, 1109–1130.
[95] Whelan, P.F., Batchelor, B.G., 1993. Automated packing systems: Review of industrial implementations. Mach. Vis. Appl. .

Lastra-Díaz&Ortuño: Preprint submitted to Elsevier

Page 25 of 25

