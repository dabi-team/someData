Industrial Requirements for Supporting
AI-Enhanced Model-Driven Engineering

Johan Bergelin1 and Per Erik Strandberg2

1Mälardalen University, Västerås, Sweden
2Westermo Network Technologies AB, Västerås, Sweden

2
2
0
2

g
u
A
9
2

]
E
S
.
s
c
[

1
v
1
2
4
3
1
.
8
0
2
2
:
v
i
X
r
a

Accepted to the 4’th Workshop on Artiﬁcial Intelligence and Model-driven Engineering (MDE Intelligence), 2022

Abstract

There is an increasing interest in research on the combi-
nation of AI techniques and methods with MDE. How-
ever, there is a gap between AI and MDE practices, as
well as between researchers and practitioners. This paper
tackles this gap by reporting on industrial requirements
in this ﬁeld. In the AIDOaRt research project, practition-
ers and researchers collaborate on AI-augmented automa-
tion supporting modeling, coding, testing, monitoring,
and continuous development in cyber-physical systems.
The project speciﬁcally lies at the intersection of indus-
try and academia collaboration with several industrial use
cases. Through a process of elicitation and reﬁnement,
78 high-level requirements were deﬁned, and generalized
into 30 generic requirements by the AIDOaRt partners.
The main contribution of this paper is the set of generic
requirements from the project for enhancing the devel-
opment of cyber-physical systems with artiﬁcial intelli-
gence, DevOps, and model-driven engineering, identi-
fying the hot spots of industry needs in the interactions
of MDE and AI. Future work will reﬁne, implement and
evaluate solutions toward these requirements in industry
contexts.
Keywords: Model-driven engineering, Artiﬁcial intelli-
gence, Requirements, Cyber-physical systems

1

Introduction

Model-driven engineering (MDE) has been adopted and
applied in industry for quite some time [16]. Recently, a
paper by Bucchiarone et al. discusses the future of mod-
eling [4]. In their paper it is identiﬁed that a large area
of potential for MDE improvement and maturity is Arti-
ﬁcial intelligence (AI). They argue that applications such
as recommender systems or modeling assistance utilizing
AI contains considerable potential. Similarly Cabot et al.
[5] identify the potential improvements of implementing
AI for modeling, reasoning that even a small amount of
intelligence integrated into an existing process can boost

the effectiveness by large amounts. However as noted by
Cabot et al. [5], it is not trivial to implement MDE with
integrated AI and several hurdles need to be overcome,
and perhaps the largest issue for technical advances is the
lack of available high-quality training data.

However, the literature is limited in reporting on the
needs and challenges from an industry and practitioner
perspective. Existing works mostly regard academic con-
tributions or consider fundamental techniques or princi-
ples, often extending already mature technology. Garousi
et al. performed a literature review on the challenges in
industry and academia collaboration [10], and identiﬁed
several collaboration challenges, e.g. results in academia
that are not applicable to industry, different interests and
objectives, different perceptions on what solutions and
outcomes are useful, etc. They also provide a set of best
practices, of which the most important one is to base re-
search on real-world problems.

AIDOaRt (AI-augmented automation supporting mod-
elling, coding, testing, monitoring and continuous devel-
opment in cyber-physical systems, aidoart.eu) is a Euro-
pean research project where many partners deﬁne, imple-
ment and evaluate solutions for AI-powered software de-
velopment processes for cyber-physical systems (CPS).
In particular the project aims to ﬁnd potential solutions
and beneﬁcial interactions between the three domains of
AI, MDE, and DevOps. The conceptual architecture is
vizualized in Figure 1. The project strives to provide a
framework containing a set of various capabilities tack-
ling identiﬁed industrial challenges, speciﬁcally target-
ing solutions that combine two or more of the central do-
mains of AI, MDE and DevOps. Partly the project will
also report on the measured impact of these solutions in
industrial contexts.

In the context of AIDOaRt, several high-level require-
ments have been extracted from industrial case studies
by several companies, as well as a set of generic require-
ments that can be thought of as an abstraction, aiming to
capture common aspects and challenges. The central con-

1

 
 
 
 
 
 
ware and software and often act in an environment they
interact with [8].

In recent years, much research has come out of the in-
tersections of AI, MDE and DevOps, e.g. Combemale
and Wimmer present a vision for model-based DevOps
practices [6]. Further interest in applications such as pre-
sented in [14] is rising, where MDE aims to improve deep
learning data set requirements using UML. From the lit-
erature it seems that MDE and AI can have positive inter-
actions to tackle several observed challenges in the indus-
trial setting, and as previously mentioned AI is viewed as
a fundamental enabler for future MDE maturity [4]. The
AIDOaRt project and its related activities in part aim to
deliver such solutions to investigate and evaluate the ap-
plicability and results in industrial settings.

AIDOaRt is a three year EU (ECSEL-JU) project
with more than 30 partners and more than 3000 person
months, aiming at improving the continuous development
of CPS with a wide range of use cases in domains such as
railway, automotive, restaurants, etc. By combining prin-
ciples from AI, DevOps and MDE, a model-based frame-
work is developed by the partners. The project strives
to enhance the DevOps and software development life-
cycle by including AI and ML techniques, as well as sup-
port monitoring of both historic and real-time data. A set
of deliverables are used throughout the project to docu-
ment and communicate results. The topic of this paper
overlaps with the ﬁrst deliverable D1.1: “Use cases and
requirements speciﬁcation.” Since the deliverable is un-
available for the public audience, we limit our reporting
to the generic requirements for legal and ethical reasons,
abstracting partner-speciﬁc details.

3 Eliciting Generic Industry Requirements

The AIDOaRt project is evaluated via 15 industrial case
studies, in particular towards a set of requirements reﬁned
from original input from the partners. The elicitation pro-
cess is illustrated in Figure 2. First (See A in Figure 2),
the industrial use case providers deﬁned 78 high-level re-
quirements. The high-level requirements had a unique
identiﬁer, a deﬁnition in natural language, a type (func-
tional, performance, usability, reliability, security, main-
tainability or portability), priority (ﬁve-graded scale from
lowest to highest), links to application domains (MDE,
AI, DevOps), a rationale in natural language, comments
in natural language, the current fulﬁllment level of the re-
quirement for the partner, as well as the date for when
the requirement is to be fulﬁlled. The initial high-level
requirements were use case dependant, extracted via pro-
cesses internal to each use case provider, and coupled
with that particular partner. Next (B), internal ﬁltering
of the requirements grouped them into the ﬁve applica-
tion dimensions of AIDOaRt: Requirements Engineering
(RE), Modeling (Mod.), Coding (Code), Testing (Test),
and Monitoring (Mon.). Then (C), the ﬁltered require-

Figure 1: Conceptual architecture of AIDOaRt from [7].

tribution of this paper is the set of generic requirements
from the industrial partners in the AIDOaRt project (see
Table 1). We are interested in discussing the implica-
tions of these requirements for a sub-set of the AIDOaRt
project, speciﬁcally the intersection of AI and MDE iden-
tiﬁed as the most attractive combination of the key do-
mains during the requirements elicitation activities.

2 Background

An AI system can be described as an autonomous
decision-maker striving for some goal in an environment
and often includes a learning (or Machine Learning, ML)
aspect such that the system improves its decision-making
when having more data [12]. MDE can be described as
an approach where a model is the primary artifact of the
development process [3], often with automatic code gen-
eration, which encompasses the other activities within
software engineering (SE) [1]. Also continuous practices
such as DevOps can be described as a set of practices
used by organizations while striving to develop, deploy
and get feedback in fast cycles [17]. Furthermore, with
CPS, software engineering practices are given a unique
set of challenges in that these systems both have hard-

2

Figure 2: A ﬂow chart for the requirements elicitation and reﬁnement process.

ments were analyzed for logical and semantical coher-
ence between partners, and some were further reﬁned to
align the common understanding. Once the requirements
were stable and ﬁltered, a working group for each appli-
cation dimension was created based on interest from the
project partners. The working groups generalized the ﬁl-
tered requirements in its dimension. Feedback from the
use case owners provided clarity and reﬁnement on re-
quirements not matched to any generic requirement un-
til all requirements had a link to at least one generic re-
quirement. The working groups then extended the initial
generic requirements. Finally, an additional review phase
conﬁrmed the consistency and overall quality resulting in
30 generic requirements (D). Two generic requirements
had sub-requirements, these have been somewhat sim-
pliﬁed in this paper, and one requirement (Mod.08) was
created in the Mod working group, and kept among the
generic requirements for its importance, despite not be-
ing linked to any of the high-level requirements directly.

To manage this process the project utilized model-
based requirements engineering (MBRE) services with
Modelio SaaS. Prior experiences with this tool in EU
projects have been positive [15]. From the MBRE ac-
tivities traceability links and relations were deﬁned be-
tween the 78 high-level requirements (not the generic re-
quirements) and project dimensions. Figure 3 relates the
requirements related to AI/ML to the ﬁve application di-
mensions (RE: Requirements Engineering, Mod: Model-
ing, Code: Coding, Test: Testing and Mon: Monitoring).
The ﬁgure aims to illustrate the hot spots in the project
regarding AI, visualized with circle sizes, and it is clear
that AI/ML in combination with Modeling is of interest to
the industrial partners. The 30 industrial generic require-
ments are presented in Table 1, where they are grouped by
application dimension. The number of speciﬁc require-
ments linked to the generic requirements is indicated in
the N column. E.g., the most relevant requirement (in
terms of instantiations) is Mod.04: “The system shall ver-
ify models with semi-automatic model synthesis.” It is
worth noting that a high-level requirement can be linked
to one or more generic requirements, therefore the sum
of all links (N) is greater than the sum of the high-level

requirements (78).

4 Discussion

In this section, we discuss the implications of the generic
requirements. We focus on research on modeling and im-
plications for practitioners with respect to AI/ML.

Compared to previous work on the intersection of AI
and MDE [2, 13], we present observations from industrial
settings. Battina [2] describes a vision for how a model-
driven framework can incorporate AI and DevOps prac-
tices to meet challenges observed in CPS development.
Mussbacher et al. [13] provide a framework for modeling
assistance utilizing MDE, where they observe a need for
such assistance due to the increasing complexity in mod-
eling activities, reﬂected in Mod.04 and Mod.06. From
the literature, it is clear that the authors identify a need or
potential for the collaboration of MDE and AI techniques
and present potential means of addressing these aspects.
MDE, as mentioned by Bucchiarone et al. [4], has seen
a lot of success and progress to this point. They men-
tion that MDE improves both informal modeling and low-
code development, increasing collaboration and inclusion
of non-experts. Further, they identify that model-based
systems engineering (MBSE) has aided signiﬁcantly in
the engineering practices of developing CPS systems,
speciﬁcally reliable systems. Further, they argue that AI
is among the most important open challenges to address
when it comes to MDE, stating that it cannot be denied
that its advances in recent years have drastically changed
many processes in software. Introducing AI with model-
ing methods and tools is a topic that recently has started
to show promising results, however the real-world appli-
cation is still lacking and is reﬂected in the requirements
in Table 1.

Our set of requirements has a strong industry focus,
and represents requirements created mainly through in-
dustry practitioners in the context of CPS, reporting the
needs directly from the industry, a challenge often ob-
served from industry-academia collaboration [10]. A
subset of our requirements also explicitly targets the do-
main of AI and MDE, and as far as we can tell, no pre-
vious publication mentions practitioners’ needs in terms

3

Use caserequirementsFilteredrequirementsstable?Filter requirementstowards applicationdimensionsUse case ownerfeedbackNoYesGeneralize togenericrequirementsAll  requirementsgrouped?Use case ownerfeedbackNoYesExtend genericrequirementsAdditional reviewphaseADCBcally test case generation for models via AI techniques,
speciﬁcally on high-level models. The monitoring re-
quirements (Mon in Table 1) are the most numerous and
seem to indicate a wide set of needs. The more prevalent
requirements all point to a need to improve the coverage
of data collection (Mon.1.1 and Mon.1.2), and the largest
requirement not related to data collection (Mon.2.8) re-
gards predictions of future behavior based on observa-
tions, presumably via AI methods and techniques which
ﬁts well with the highlighted need of data collection.

Overall, ethical aspects of applied AI are a hot topic,
and we partially cover it in previous work [18]. Jobin et
al. [11] found that transparency and justice/fairness were
top ethical principles in guidelines for ethical AI [11].
The AIDOaRt project strives for AI approaches that are
beneﬁcial, safe and responsible [7]. Furthermore, the
concepts of accountability and explainability are high-
lighted in the conceptual architecture of AIDOaRt (in
Figure 1). However, only one generic requirement par-
tially covers an ethical challenge in that an AI ought to
be able to motivate its actions (Mon.6). This falls under
the most prevalent principle of transparency in the classi-
ﬁcation by Jobin et al. Future research could explore how,
and how well, AIDOaRt complied with ethical principles.

5 Conclusion and Future Work

In this paper, we report on the industry needs and hot
spots for integrating AI techniques and methods for
MDE. Previous work has identiﬁed that MDE processes
could be improved or integrated with AI to meet spe-
ciﬁc challenges in the increasing maturity and complex-
ity of MDE. We present our ﬁndings via a set of generic
requirements extracted from industrial partners via the
AIDOaRt project, and discuss what implications this has
on the research. Speciﬁcally, we identify that industry has
a need for utilizing AI to improve veriﬁcation activities,
preferably utilizing some level of automation.

Future work could explore how well these require-
ments are covered in previous work, explore potential
gaps in them, and if they can support work by other
groups of practitioners or researchers. Additionally, the
AIDOaRt project will develop and evaluate solutions for
the identiﬁed challenges in industrial settings, further
aiming to bridge the gap between industry and academia
via real-world challenges.

Acknowledgments

This work was funded by the AIDOaRt project, an EC-
SEL Joint Undertaking (JU) under grant agreement No.
101007350.
Author Contributions Methodology and Investigation:
JB, PES, and AIDOaRt partners. Writing and Reviewing:
JB, and PES. Supervision: PES.

Figure 3: Relationship between the 66 AI/ML related
(out of 78 total) high level requirements towards the ﬁve
application dimensions.

of industry requirements. Thanks to the layer or general-
ization (and anonymization), we can share requirements
that otherwise would have remained hidden under corpo-
rate secrecy.

For academia these requirements could be used as a
“sanity check” to position their solutions in terms of re-
ported industry needs. Further it could open for discus-
sions and workshops between academia and industry, tied
as the most observed best practice along with basing re-
search on real-world problems, in the review by Garousi
et al. [9]. A successful outcome from the reported re-
quirements is increased collaboration with industry and
academia towards the same goals via a shared vision.

Figure 3 and Table 1 (in particular requirements anno-
tated with Mod), seems to indicate that industry practi-
tioners see AI as a candidate approach for improving the
modeling of CPS, consistent with the academic literature.
Further the requirements highlight the need for solutions
dealing with models at higher levels of abstraction, often
regarding formulation or veriﬁcation of models. Indeed it
seems that from industry AI for modeling is of particular
interest, and the more signiﬁcant requirements (Mod.01,
Mod.02, Mod.04, Mod.06) all involve AI techniques or
methods to some extent. In addition to utilizing AI, there
is an interest in involving automation in the processes.
We observe that the requirements align with previously
reported AI opportunities for modeling [5, 4]. E.g., Buc-
chiarone et al. [4] suggest that modeling bots could as-
sist in identifying issues or give advice to modelers. The
generic requirements could be interpreted as target areas
for such bots in industry.

Apart from the implication of MDE and AI the require-
ments presented in Table 1 provide additional insights
into industrial needs in the development of CPS. Require-
ments related to requirements engineering (RE in Ta-
ble 1) seem to indicate the need for interpretation of semi-
structured language along with suggestions for practition-
ers and consistency veriﬁcation. Requirements related to
coding practices (Code in Table 1) seem to foresee ben-
eﬁts from AI methods to both reﬁne and abstract speciﬁ-
cations and implementations respectively. Requirements
for testing (Test in Table 1) in a similar fashion as Model-
ing seems to be centered around veriﬁcation and speciﬁ-

4

[11] A. Jobin, M. Ienca, and E. Vayena. The global land-
scape of ai ethics guidelines. Nature Machine Intel-
ligence, 1(9):389–399, 2019.

[12] S. Legg and M. Hutter. A collection of deﬁnitions
IOS Press: Frontiers in Artiﬁcial

of intelligence.
Intelligence and applications, 157:17, 2007.

[13] G. Mussbacher, B. Combemale, S. Abrahão,
N. Bencomo, L. Burgueño, G. Engels, J. Kienzle,
T. Kühn, S. Mosser, H. Sahraoui, et al. Towards
an assessment grid for intelligent modeling assis-
tance. In Proceedings of the 23rd ACM/IEEE Inter-
national Conference on Model Driven Engineering
Languages and Systems: Companion Proceedings,
pages 1–10, 2020.

[14] B. Ries, N. Guelﬁ, and B. Jahic.

An MDE
method for improving deep learning dataset require-
In Pro-
ments engineering using alloy and uml.
ceedings of the 9th International Conference on
Model-Driven Engineering and Software Develop-
ment. SCITEPRESS, 2021.

[15] A. Sadovykh, D. Truscan, and H. Bruneliere. Ap-
plying model-based requirements engineering in
three large european collaborative projects: An ex-
perience report. arXiv preprint arXiv:2105.03119,
2021.

[16] D. C. Schmidt.

Computer-IEEE Computer Society-,
2006.

Model-driven engineering.
39(2):25,

[17] M. Shahin, M. A. Babar, and L. Zhu. Continuous
Integration, Delivery and Deployment: A System-
atic Review on Approaches, Tools, Challenges and
Practices. IEEE Access, 5:3909–3943, 2017.

[18] P. E. Strandberg, M. Frasheri, and E. P. Enoiu. Ethi-
cal AI-Powered Regression Test Selection. In Inter-
national Conference On Artiﬁcial Intelligence Test-
ing. IEEE, 2021.

References

[1] D. Akdur, V. Garousi, and O. Demirörs. A survey on
modeling and model-driven engineering practices in
the embedded software industry. Journal of Systems
Architecture, 91:62–82, 2018.

[2] D. S. Battina. Ai-augmented automation for devops,
a model-based framework for continuous develop-
ment in cyber-physical systems. International Jour-
nal of Creative Research Thoughts (IJCRT), ISSN,
pages 2320–2882, 2016.

[3] M. Brambilla, J. Cabot, and M. Wimmer. Model-
driven software engineering in practice. Synthesis
lectures on software engineering, 3(1):1–207, 2017.

[4] A. Bucchiarone,

F. Ciccozzi, L. Lambers,
A. Pierantonio, M. Tichy, M. Tisi, A. Wort-
mann, and V. Zaytsev. What is the future of
modeling? IEEE software, 38(2):119–127, 2021.

[5] J. Cabot, R. Clarisó, M. Brambilla, and S. Gérard.
Cognifying model-driven software engineering. In
Federation of international conferences on software
technologies: applications and foundations, pages
154–160. Springer, 2017.

[6] B. Combemale and M. Wimmer.

Towards a
model-based devops for cyber-physical systems.
In International Workshop on Software Engineer-
ing Aspects of Continuous Development and New
Paradigms of Software Production and Deployment,
pages 84–94. Springer, 2019.

[7] R. Eramo, V. Muttillo, L. Berardinelli, H. Brune-
liere, A. Gomez, A. Bagnato, A. Sadovykh, and
A. Cicchetti. AIDOaRt: AI-augmented Automation
for DevOps, a Model-based Framework for Contin-
uous Development in Cyber-Physical Systems. In
Euromicro Conferenece on Digital Systems Design,
2021.

[8] V. Garousi, M. Felderer, Ç. M. Karapıçak, and
U. Yılmaz. Testing embedded software: A survey
of the literature. Information and Software Technol-
ogy, 104:14–45, 2018.

[9] V. Garousi and M. V. Mäntylä. A systematic liter-
ature review of literature reviews in software test-
ing. Elsevier Information and Software Technology,
80:195–216, 2016.

[10] V. Garousi, K. Petersen, and B. Ozkan. Challenges
and best practices in industry-academia collabora-
tions in software engineering: A systematic liter-
ature review. Elsevier Information and Software
Technology, 79:106–127, 2016.

5

Table 1: Generic requirements extracted from the 78 high-level requirements in the AIDOaRt project covering AI,
DevOps, and MDE. The requirements have been slightly rephrased for anonymization and generalization. The second
column, N, relates to the number of high-level requirements related to each generic requirement.

Id
RE.1
RE.2
RE.3
RE.4
Mod.01
Mod.02
Mod.03
Mod.04
Mod.05
Mod.06
Mod.07
Mod.08
Mod.09

Mod.10

Mod.11
Code.1
Code.2
Code.3
Test.1
Test.2
Test.3
Test.4
Test.5
Test.6
Mon.1

Mon.1.1
Mon.1.2
Mon.1.3
Mon.1.4
Mon.1.5
Mon.1.6
Mon.1.7

Mon.2

Mon.2.1
Mon.2.2
Mon.2.3
Mon.2.4
Mon.2.5
Mon.2.6
Mon.2.7
Mon.2.8
Mon.2.9

Mon.3
Mon.4
Mon.5
Mon.6

N Requirement
2
1
2
2
6
5
2
8
3
6
2
-
1

The system shall translate requirements from semi-structured language to formal language.
The system shall reﬁne requirements expressed in formal language from analysis results.
The system shall produce suggestions or prescriptions for the requirements or systems engineer.
The system shall verify consistency of requirements from analysis results.
The system shall verify high-level models with AI techniques.
The system shall generate tests using formal models, automated reasoning and/or AI methods.
The system shall identify system failures using AI-based models.
The system shall verify models with semi-automatic model synthesis.
The system shall abstract models with AI-based approaches.
The system shall provide easy conﬁguration via AI-based methods.
The system shall represent AI with a Model-based approach.
The system shall perform retrospective analysis of model quality using AI-augmented methods.
The system shall extend standards modeling languages to support aspect-oriented system develop-
ment.
The system shall deploy a solution on the cloud as a set of corresponding services with execution
traceability.
The system shall integrate DevOps workﬂows with CI/conﬁguration models.
The system shall write abstractions of implementation with AI methods.
The system shall write reﬁnement of speciﬁcation with AI methods.
The system shall import/export variables/procedures between code and models.
The system shall generate test cases for high-level models with AI techniques.
The system shall perform automatic execution of test cases.
The system shall perform automatic veriﬁcation of system architectures.
The system shall perform automated evaluation of testing results.
The system shall report or ﬁx the problems detected in the testing phase.
The system shall integrate and analyze the testing phase into the DevOps pipeline.
The system shall access different artifacts.
The system shall access off-line data.
The system shall access on-line data.
The system shall access system logs and execution traces.
The system shall access system states such as resource usages during monitoring.
The system shall access trafﬁc between nodes.
The system shall access hardware input/output.
The system shall access Documents expressed in natural language.

The system shall support monitoring for many purposes.

The system shall monitor with the purpose of identifying violations to pre-deﬁned requirements.
The system shall monitor for the purpose of identifying deviations, anomalies or security events.
The system shall monitor for the purpose of identifying clusters of anomalies of some sense.
The system shall monitor for the purpose of identifying (unwanted) trends or drifts.
The system shall monitor for the purpose of identifying deviations between a system and a model.
The system shall monitor for the purpose of identifying root-causes to anomalies/deviations.
The system shall monitor for the purpose of minimizing downtime or other inefﬁciencies/waste.
The system shall provide predictions of future (unwanted) behaviours based on observed features.
The system shall monitor for the purpose of tracking system usage or user activities.

The system shall discriminate between levels of automation during monitoring.
The system shall produce artifacts for re-use and further training.
The system shall provide human-in-the-loop functionality supporting heterogeneous data sources.
The system shall motivate its actions during monitoring.

6

3

1
1
1
1
7
1
4
2
2
1
-
7
7
4
3
2
1
1
-
2
3
3
2
3
1
3
5
1
1
1
1
1

