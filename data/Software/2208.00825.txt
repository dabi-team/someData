Springer Nature 2021 LATEX template

2
2
0
2

g
u
A
1

]
E
S
.
s
c
[

1
v
5
2
8
0
0
.
8
0
2
2
:
v
i
X
r
a

How Do Requirements Evolve During
Elicitation? An Empirical Study Combining
Interviews and App Store Analysis

Alessio Ferrari1*, Paola Spoletini2* and Sourav Debnath2

1*Institute of Information Science and Technologies (ISTI),
National Research Council (CNR), Via G. Moruzzi 1, Pisa,
56126, Italy.
2Department of Software Engineering and Game Development,
Kennesaw State University, 1100 South Marietta Pkwy, Marietta,
30060, GA, USA.

*Corresponding author(s). E-mail(s): alessio.ferrari@isti.cnr.it;
pspoleti@kennesaw.edu;
Contributing authors: sdebnath@students.kennesaw.edu;

Abstract

Requirements are elicited from the customer and other stakeholders
through an iterative process of interviews, prototyping, and other inter-
active sessions. Then, requirements can be further extended, based on
the analysis of the features of competing products available on the mar-
ket. Understanding how this process takes place can help to identify the
contribution of the diﬀerent elicitation phases, thereby allowing require-
ments analysts to better distribute their resources. In this work, we
empirically study in which way requirements get transformed from initial
ideas into documented needs, and then evolve based on the inspiration
coming from similar products. To this end, we select 30 subjects that
act as requirements analysts, and we perform interview-based elicitation
sessions with a ﬁctional customer. After the sessions, the analysts pro-
duce a ﬁrst set of requirements for the system. Then, they are required
to search similar products in the app stores, and extend the require-
ments, inspired by the identiﬁed apps. The requirements documented
at each step are evaluated, to assess to which extent and in which way
the initial idea evolved throughout the process. Our results show that

1

 
 
 
 
 
 
Springer Nature 2021 LATEX template

2

Requirements Evolution during Elicitation

only between 30% and 38% of the requirements produced after the inter-
views include content that can be fully traced to initial customer’s ideas.
The rest of the content is dedicated to new requirements, and up to
21% of it belongs to completely novel topics. Furthermore, up to 42%
of the requirements inspired by the app stores cover additional fea-
tures compared to the ones identiﬁed after the interviews. The results
empirically show that requirements are not elicited in strict sense, but
actually co-created through interviews, with analysts playing a crucial
role in the process. In addition, we show evidence that app store-inspired
elicitation can be particularly beneﬁcial to complete the requirements.

Keywords: requirements engineering, requirements elicitation, interviews,
app store, user stories, app store-inspired elicitation

1 Introduction

Requirements are elicited from the customer and other stakeholders through an
iterative process of interviews, prototyping, and other interactive sessions [1–
4]. The iterations transform the initial ideas of the customer into more explicit
needs, normally expressed in the form of a requirements document to be used
for system speciﬁcation. Then, the analysis of competing products in the mar-
ket [5–9]—typically retrieved from app stores [9]—as well as the collection of
feedback from users [10–13], can lead to further updates of the requirements,
bug ﬁxing and product enhancement. Throughout the elicitation process,
the initial customer’s ideas can go through a radical transformation. Rele-
vant needs may have remained unexpressed, others may have been discarded
through early negotiation, and some requirements may be introduced to mimic
successful features of existing products. Understanding how this process takes
place can help to properly allocate resources for the elicitation activities, and
also address possible communication problems typically occurring during the
early elicitation phases [14–16].

Previous literature in requirements engineering (RE) individually studied
the diﬀerent elicitation phases and supporting techniques. Inquisitive elicita-
tion strategies, such as interviews and focus groups, are recognised as extremely
common in industrial practice [3, 4]. Some researchers studied the impact
of domain knowledge [17, 18], communication issues [16, 19, 20] and other
factors [21–23] on the success of these strategies. Concerning requirements
elicitation through app store analysis, the survey by Al-Subaihin et al. [9]
highlighted that 51% of mobile app developers frequently perform product
maintenance based on user’s public feedback in the app stores, and 56% elicit
requirements by browsing similar apps. In the ﬁeld of app store analysis, a large
set of work is dedicated to the development of automatic tools, often based
on natural language processing (NLP), to support these tasks [8, 10, 13, 24].
Despite the vast literature, however, it is unclear what is the actual contribu-
tion of the diﬀerent elicitation activities to the ﬁnal content of the requirements

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

3

document. Furthermore, the recent survey by Dabrowski et al. [25], highlighted
that—except for the study by Al-Subaihin et al. [9]—there is limited evidence
of the practical utility of app store analysis for RE and software engineering
activities.

In this work, we perform an exploratory study of descriptive nature to
understand in which way requirements get transformed from initial ideas into
documented needs, and then further evolve based on the analysis of existing
similar products available on the market in general, and in the app store in the
speciﬁc. The study focuses on software solutions that can have a mobile version,
or include a relevant mobile app-oriented component, so that comparison with
products in the app store market can be possible. The study consists of two
phases. In Phase I, which we call interview-based elicitation, we investigate the
diﬀerence between customer ideas and documented requirements after a set of
interview sessions. In Phase II, which we call app store-inspired elicitation, we
compare the requirements produced as output of Phase I with additional ones
created by analysts after taking inspiration from similar products identiﬁed in
the app stores.

To collect data for the study, we recruit 58 subjects that will act as require-
ments analysts. In the interview-based elicitation phase, the analysts perform
a set of elicitation sessions with a ﬁctional customer. The ﬁctional customer
is required to study a set of about 50 user stories for a system, which are
regarded as the initial customer ideas for the experiment. Then, each analyst
performs two requirements elicitation interview sessions with the customer,
who is required to answer based on the user stories, and on novel ideas that can
be triggered during the conversation. The sessions are separated by a period
of 2 weeks, in which the analyst is working on the data collected in the ﬁrst
interview through notes, diagrams, or mockups. After the elicitation sessions,
each analyst documents the requirements into 50 to 60 user stories.

Then, the app store-inspired elicitation phase takes place. The analysts are
required to imagine that the initial idea needs to be evolved to reach a wider
market, and thus additional requirements are to be added. To take inspiration
for additional features, they are required to look into the app stores, e.g., Apple
App Store and Google Play, and identify further requirements by analysing
ﬁve similar products of their choice. After this analysis, they need to document
the additional requirements with 20 user stories, and to explain why certain
apps have been chosen as inspiration for the additional requirements.

The produced user stories from a sample of 30 subjects are compared with
the original ones by two researchers, to assess to which extent and in which
way the initial requirements evolved throughout the interactive sessions. A
comparison is also carried out between the user stories initially produced by
the analysts, and those added after app store-inspired elicitation. In the com-
parison of user stories, we also consider diﬀerences in the user story roles, i.e.,
the actors explicitly mentioned in the user stories. Our results quantitatively
show that there is a substantial gap between initial ideas and documented

Springer Nature 2021 LATEX template

4

Requirements Evolution during Elicitation

requirements, and that searching for similar apps is also crucial to identify
novel features and eventually enhance the product.

More speciﬁcally, we provide the following main ﬁndings, in relation to

interview-based elicitation:
• Only between 30% and 38% of the user stories produced after interview-
based elicitation include content that was already present in the initial ones;
• Most of the user stories produced—speciﬁcally between 54% and 63%—are
reﬁnements of the initial ideas, while between 12% and 20% are related to
completely novel ideas;

• Most of the user story roles considered—between 58% and 72%—are the
same as the ones initially planned, but between 18% and 29% are entirely
novel roles;

• The relevance given to certain requirement categories is diﬀerent between

initial ideas and documented needs;

• The original user story roles are mostly preserved in the analysts’ user
stories, but the distribution of the analysts’ stories among roles diﬀers;
• Analysts introduce non-functional requirements, which were not initially
considered by the customer, especially concerning security and privacy.

In addition, we provide the following ﬁndings in relation to app store-

inspired elicitation:
• Between 28% and 42% of the user stories inspired by the app stores cover
entirely novel topics with respect to the ones written after the interviews;

• Between 8% and 17% novel roles are discovered;
• There is an increasing attention to the “user”, i.e., the target subject who
will be using the software, and usability requirements, rather than to the
initial ideas of the customer, i.e., the subject commissioning the initial
development.

This study contributes to theory in RE, as it empirically shows that: 1) in
interview-based elicitation, requirements are not elicited but co-created by
stakeholders and analysts; 2) interviews and app store analysis play com-
plementary roles in requirements deﬁnition; 3) app store analysis provides a
relevant contribution in practice. This last point addresses the limited evi-
dence about the practical utility of app store analysis observed by the survey
of Dabrowski et al. [25].

The data of our study are shared in a replication package [26] made

available at: https://doi.org/10.5281/zenodo.6475039.

This paper is an extension of a previous conference contribution [27]. The
previous manuscript was focused solely on the evolution of requirements dur-
ing the interview sessions. The current one, instead, includes also an analysis
on the contribution of app store-inspired elicitation to the ﬁnal requirements.
More speciﬁcally, the current paper provides the following additional content:
i) an extended description of the design of the study, including data collec-
tion and analysis for app store-inspired elicitation; ii) corresponding results

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

5

and discussion related to app store-inspired elicitation; iii) an extended related
work section; iv) additional statistical tests for the data of the previous contri-
bution. The formatting and presentation of data, ﬁgures and original content
has also been revised.

The remainder of the paper is organised as follows. Section 2 summarizes
the related work. Section 3 describes the adopted methodology, Section 4 and 5
presents the results of our analysis and Section 6 discusses their implications.
Section 7 describes the threats to the validity of our results and how they have
been mitigated and Section 8 concludes the paper.

2 Related Work

Our work focuses on the evolution of requirements during elicitation. In the
following, we report related work on requirements evolution in relation to early
interview-based elicitation, and in relation to later phases, including app store-
inspired elicitation. As the creativity of the analyst can inﬂuence the ﬁnal
requirements document, we also report related work on creativity in require-
ments engineering (RE). Finally, we discuss our contribution with respect to
the literature in these research areas.

Early Requirements Evolution

Requirements evolution is a well-recognized phenomenon that can have crit-
ical eﬀects on software systems [28–30]. A few studies in the literature focus
on requirements evolution during the early stages, towards the production of
a ﬁrst requirements document. Among them, Zowghi and Gervasi [31] ana-
lyze how the initial incomplete knowledge about a system evolves and identify
consistency, completeness, and correctness (the “three C”) as the driving fac-
tors. The main idea behind this conclusion is that the goal of an analyst is
to produce a consistent, complete and consequently correct set of require-
ments. Thus, the analysts keep working using the collected knowledge and
their expertise trying to get closer to the three Cs at every step of the process.
Grubb and Chechik [30, 32] focus on the early stage of requirements evolution,
but they look at the modeling phase. In particular, they propose to use goal
model analysis to help stakeholders to answer what if questions to support
the evolution of a system considering diﬀerent scenarios, as well as the cus-
tomer in understanding trade-oﬀs among diﬀerent decisions. In their approach,
the authors augment goal models with the capability of explicitly modeling
time to provide a more useful analysis for the stakeholders. Still within the
ﬁeld of model-driven RE, Ali et. al. [33] identify in “assumptions” one of the
main reasons behind requirements evolution. Indeed, assumptions might be
or can become inaccurate or incorrect. Once a problem with an assumption
is identiﬁed, requirements need to evolve consequently. The authors develop
a system to monitor the assumptions and evolve the model of the systems
every time they are violated. Other authors have looked into the concept of
pre-requirements [34], intended as information available prior to requirement

Springer Nature 2021 LATEX template

6

Requirements Evolution during Elicitation

speciﬁcation—-including system concepts, user expectations, the environment
of the system—-and their tracing with expressed needs. Studies in this ﬁeld,
and in particular Hayes et al. [34] speciﬁcally focus on automatic tracing by
means of cluster analysis.

Another stream of works on early requirements elicitation is concerned with
empirical studies on interviews and focus groups. These are the most common
techniques used by companies, as shown by the NaPiRE survey [3], and by the
recent study by Paolmares et al. [4]. Hadar et al. [17] show the double-sided
impact of the domain knowledge of the analyst on the interview process. On
the one hand domain knowledge can facilitate the creation of a shared under-
standing, but on the other hand it can lead to tunnel vision, with the analyst
discarding relevant information. Niknas and Berry [18] show that domain igno-
rance can play a complementary role in requirements elicitation. By including
a subject who is domain ignorant together with a software engineering expert
in a requirements focus group, the process of idea generation appears to be
more eﬀective. Other studies on requirements elicitation interviews are focused
on communication aspects. Among them, Ferrari et al. [19] study the role of
ambiguity, while Bano et al. [16] present a list of typical communication mis-
takes committed by novel requirements analysts, which can have an impact on
the resulting requirements document.

Late Requirements Evolution

The term “requirements evolution” often refers to the evolution of require-
ments once the system is deployed, and a wide body of work exists in the
area. In particular, a set of studies consider evolution of requirements based
on the analysis of similar products, considering in particular app stores. Fu
et al. [35] acknowledge that a market-wide analysis across the entire app
store can allow developers to ﬁnd undiscovered requirements. In this line of
research, Sarro et al. [5] empirically shows that features migrate through the
app store, passing from one product to another, and suggest that identify-
ing those features that have strong migratory tendency can lead to identify
undiscovered requirements. Other works are concerned with the development
of recommender systems, e.g., [6–8, 36]. Among them, Chen et al. [6] recom-
mend software features for mobile apps, based on the comparison of the user
interface (UI) of an existing app with the UIs of similar ones. Liu et al. [7],
instead leverages textual data in terms of app feature descriptions, to support
feature recommendation. Jiang et al. [8] extend descriptions with API names,
to better inform the recommendation system. Finally, the recent work of Liu
et al. [36] combines UI information and textual descriptions of apps. Besides
the ﬁeld of app store analysis, the topic of requirements elicitation based on
similar products has been also studied in software product line engineering.
The majority of the works in the area focuses on the automatic identiﬁcation
of product features from existing documents—brochures or requirements—by
means of natural language processing (NLP) techniques [37–39]. A literature

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

7

review on similarity-based analysis of software applications is presented by
Auch et al. [40].

Another well-studied factor of late requirements evolution is user feed-
back [11, 41], in the form of app reviews, Tweets or other media. Carre˜no and
Winbladh [41] created a system to automatically extract topics from user feed-
back and generate new requirements for future versions of the app. Feedback
in the form of app reviews is analysed by a stream of works from Maalej and
his team (e.g., [10, 42]). Along the same line of research, Guzman et al. [43]
proposes to use the information mined from Twitter to guide the evolution of
requirements. Additional similar approaches are discussed by Khan et al. [44]
and by Morales-Ramirez et al.[45].

Creativity in RE

Creativity plays an important role in many RE activities, including the require-
ments evolution process [46–48]. According to Sternberg, creativity can be
described as the ability to produce work that is both novel and appropriate [49].
Nguyen [50] states that creativity can be attributed to ﬁve factors: product,
process, domain, people, and context. To analyze the impact of creativity in
discovering new requirements, Maiden et al. [51] performed a study consisting
of a series of creative workshops to discover new requirements for an Air Traﬃc
Management System. This work provides empirical evidence of the impact of
creativity and creative processes in identifying new requirements. Inspired by
these seminal contributions on creativity and RE, the CreaRE workshop was
established1, and it is currently at its 10th edition, indicating the interest of
the community in the topic. Several techniques have been experimented in the
literature; among them, the EPMcreate technique [52], theoretical frameworks
for understanding creativity in RE [50], platforms to support collaboration
for distributed teams [53], toolboxes for selecting the appropriate creativity
technique [54, 55], and the use of combination of goal modeling and creativity
techniques [56, 57].

2.1 Contribution

With respect to the literature on early requirements evolution, our work is
among the ﬁrst ones that considers requirements elicitation performed with
traditional interviews, which are extremely common in practice [3, 4, 22]. The
closest work to ours is the contribution of Hayes et al. [34], focusing on pre-
requirements information. Their concept of pre-requirement is analogous to our
notion of “initial idea”. However, their goal is to aggregate and automatically
cluster pre-requirements from multiple stakeholders, and support traceability.
Instead, in our paper we want to evaluate how the initial ideas get transformed
through the elicitation and documentation process.

Compared to work on late requirements evolution, most of the works
focuses on automatic tools for app store mining, supporting feature extraction

1https://creare.iese.de

Springer Nature 2021 LATEX template

8

Requirements Evolution during Elicitation

or app review analysis. Instead, in this paper we consider a manual approach
for app store-inspired elicitation, and we measure the impact with respect to
existing requirements. Our paper also diﬀers from most of the existing works
because we do not consider the evolution of requirements after a product has
been developed. Instead, we study the extension of existing requirements based
on a market analysis performed before releasing the product.

Compared to work on creativity our study also diﬀers from the literature.
Instead of providing a novel technique to stimulate creativity, it gives quanti-
tative evidence on the impact of early elicitation and documentation activities.
In particular, it shows that (a) creativity takes place as a natural phenomenon
without introducing speciﬁc triggering techniques; (b) a quantitative evalua-
tion is possible, and can be used to compare diﬀerent creativity techniques for
requirements elicitation.

3 Research Design

3.1 Research Questions

The overarching objective of this research is to explore in which way require-
ments evolve from ideas to expressed needs. More speciﬁcally, we want to
ﬁrst understand what is the diﬀerence between initial ideas and user stories
documented after initial interactions with a customer. Then, we want to under-
stand and what is the diﬀerence between these user stories and those that
come out after an analysis of similar products in the market. This way, we
can understand how diﬀerent strategies of requirements elicitation contribute
to the deﬁnition of a product. Two main research questions, with associated
sub-questions, are considered:
• RQ1: What is the diﬀerence between the initial customer ideas and the
requirements documented by an analyst after customer-analyst interview
sessions?

– RQ1.1: How large is the diﬀerence in terms of documented requirements
and roles with respect to initial ideas? With this question we want to
quantitatively evaluate how diﬀerent are the user stories with respect to
initial customer ideas. This gives a numerical indication of how much is
the contribution of the elicitation sessions to documented requirements.
– RQ1.2: What is the relevance given to the diﬀerent categories of require-
ments and roles with respect to initial ideas? The question aims to
understand whether there is a diﬀerence in terms of relevance given to
categories or requirements with respect to initial customer ideas. With the
term “relevance” we arguably intend the percentage of the stories dedi-
cated to a certain category or role2. In other terms, we want to understand

2A single requirement could be practically more relevant than others. However, here we consider
relevance of categories—and not single requirements—in relation to other categories. Our usage
of the term ‘relevance’ assumes that more user stories in a category implies that the analyst
considered that category more important than others.

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

9

Fig. 1 Steps of the experiment.

whether the elicitation sessions gave more prominence to certain aspects
with respect to others, compared to initial ideas.

– RQ1.3: What are the emerging categories and roles? This question aims
to understand whether there are typical categories of user stories and
roles that were not originally present in the ideas of the customer, and
therefore what is the actual contribution of the elicitation process in terms
of content.

• RQ2: What is the additional contribution of requirements produced after an

analysis of products available from the app stores?

– RQ2.1: How large is the diﬀerence in terms of covered requirements cat-
egories and roles with respect to the requirements documented after the
interview sessions? This question aims to quantitatively evaluate how
much is the contribution given by the analysis of products from the
app stores, and if the additional requirements introduced cover diﬀerent
categories with respect to the ones documented in the previous phase.
– RQ2.2: What is the relevance given to the diﬀerent categories of require-
ments and roles with respect to the requirements documented after the
interview sessions? This question investigates what are the speciﬁc
requirements categories and roles considered in the additional require-
ments, and whether their distributions are diﬀerent, when compared with
the previously documented requirements. In other terms, we want to
understand if the focus of the analysts shifted in this second phase.

– RQ2.3: What are the additional categories and roles? This question aims
to identify whether there are categories and roles that are common across
analysts, and that emerged in this speciﬁc phase. This allows us to
understand what is the contribution of app store-inspired elicitation.

Product DescriptionOriginal User Stories1. Preparation2. Interview3. Requirements Analysis4. Follow-up Interview5. Requirements DocumentationAnalystCustomerAnalyst User StoriesFollow-up Questions8. ComparisonAnalyst User Stories (EXT)6. Analysis of App Stores9. ComparisonPHASE I - RQ1: What is the difference between the initial customer ideas and thosedocumented by an analyst after customer-analyst interview sessions?PHASE II - RQ2: What is the additional contribution of requirements produced after an analysis of products available from the app stores?CUSTOMER IDEADOCUMENTED REQSEXTENDED REQSResearchers7. Requirements ExtensionSpringer Nature 2021 LATEX template

10

Requirements Evolution during Elicitation

3.2 Data Collection

To answer the questions, we perform an experiment with one ﬁctional cus-
tomer (3rd author of the current paper), and a set of 58 diﬀerent student
analysts recruited from Kennesaw State University. In particular, the analysts
were graduate students enrolled in the ﬁrst or second semester of the MSc
in Software Engineering and, at the time of the experiment, were all taking
a course on Requirements Engineering. In that course, they have been intro-
duced to elicitation techniques and user stories using very standard teaching
material which also included examples from very common systems such as an
event ticket store and a bookstore. During the ﬁrst semesters of the program,
students have usually taken, or are taking, an introductory course on software
engineering and a course on project management. Elective specialized courses
(e.g., User Interaction Engineering and courses on Privacy) are in general taken
later in the program.

The steps of the experiment (approved, together with the recruitment pro-
cess, by the Institutional Review Board of Kennesaw State University) are
described in the following. Please refer to Fig. 1 for an overview of the steps.
Overall, the study is composed of two phases. Phase I, which we call interview-
based elicitation, is associated to RQ1 and includes all the steps that go from
initial customer ideas until documented requirements. Phase II, called app
store-inspired elicitation, is associated to RQ2, and includes the steps that lead
to an extension of the requirements based on the analysis of app stores.

Phase I - Analyst and Customer Steps

1. Preparation Analysts are given a brief description of a product to develop
and are asked to prepare questions for a customer that they will have to inter-
view to elicit the products’ requirements. The product is a system for the
management of a summer camp. The brief description has an initial part that
describes the company’s current practice followed by a set of brieﬂy described
needs about (1) managing the information, registration, and activities of the
participants, (2) giving the participants’ guardians the opportunity to regis-
ter and follow their children, (3) managing the employees’ performance and
schedule, (4) communicating with parents and employees, and (5) managing
facilities.
The ﬁctional customer is required to study a set of about 50 user stories for
the system, which are regarded as the initial customer ideas for the experi-
ment. The initial user stories are taken from the dataset by Dalpiaz [58], ﬁle
g21.badcamp.txt. The use of the same customer for all the interviews is in
line with similar experiments, such as [16] and [59].

2. Interview Each analyst performs a 15 minutes interview with the cus-
tomer, possibly asking additional questions with respect to the ones that they
prepared. The ﬁctional customer answers their questions based on the set of
user stories that describe the product, and that are not shown to the analysts.
Overall, the customer is required to stick to the content of the user stories as
much as possible. However, he is allowed to answer freely when he does not

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

11

ﬁnd a reasonable answer in the user story document, to keep the interview as
realistic as possible, and capture novel ideas that emerge in the dialogue. The
analysts are required to record their interviews, and take notes.

3. Requirements Analysis Based on the recording and their notes, the
analysts have to: (a) perform an initial analysis of the requirements, and based
on this analysis (b) produce additional questions for the customer to be asked
in a follow-up interview. The initial analysis can be performed with the support
of a graphical prototype, use cases, or written form. Analysts can adopt the
method they ﬁnd more suitable.

4. Follow-up Interview Then, they perform a follow-up interview with
the customer, which also lasts 15 minutes, to ask the additional questions
prepared. During the interview, they can use the graphical prototype, the use
cases, or any material produced as a support to ask questions to the customers.
In practice, they can show the material to the customer and discuss based on
the material.

5. Requirements Documentation After the second interview, they are
required to write down from 50 to 60 user stories for the system. We constrain
the number of user stories between 50 and 60 to be consistent with the number
of user stories in the original set and, thus, to better compare and analyze
the collected data. About 50 user stories are also the typical number in the
dataset by Dalpiaz [58], which we deem representative of user story sets used
for research purposes.

Phase II - Analyst and Customer Steps

6. Analysis of App Stores Each analyst starts from the user stories that
they developed in the previous phase. They are now asked to produce an
enhanced set of user stories, which take into account possible competing prod-
ucts available on the market, as commonly done by app developers [9]. To this
end, the analysts are required to perform an informal market analysis based
on the app stores. In particular, they are required to:
• Select at least 5 mobile apps from Google Play or the Apple App Store that
are in some way related to the developed product (for example apps for
summer camps, apps for trekking, or anything that they consider related).
• Try out the apps to have an idea of their features when compared with their

product.

• Go through the app reviews to identify desired features, and additional

requirements that may be appropriate also for their product.

No automated tool, except for the default app store search engines, was
provided for the market analysis task. The analysts were free to browse the
app stores following their intuition, ability and preferred strategy.

7. Requirements Extension Based on the analysis of the app stores, the
analysts are required to list the selected apps and their links, together with a
brief description that 1. outlines the main features of the product, 2. explains
in which way the product is related to the original one, and why they have

Springer Nature 2021 LATEX template

12

Requirements Evolution during Elicitation

chosen it. Furthermore, they are asked to add 20 user stories to the original
list, based on the analysis of the app stores.

Phase I - Researchers’ Steps

8. Comparison with Initial Ideas Among the 58 participants, some did
not consent to use their work for publication. In addition, as the analysis has
been performed manually, to make it manageable and consistent, we reduced
the number of analyzed analysts to 30 which is a number that still allowed us
to obtain signiﬁcant results. We randomly selected them and their work has
been inspected by two researchers (2nd and 3rd author) to identify:
• User stories that express content that was already entirely present in the

initial set of user stories (marked as “existing”, E).

• User stories that express content that is novel with respect to the initial set
of user stories, but that belongs to one of the existing high-level categories
of the initial set (marked as “reﬁnement” R).

• User stories that express content that is novel, and belonging to a novel

category not initially present (marked as “new” N).
• The name of novel categories of user stories introduced.
• Recurrent themes in R and N stories.
• Roles that were used also in the original stories (Eρ).
• Roles that represented a reﬁnement of roles used in the original stories (Rρ).
• Roles that were novel and never considered in the original stories (Nρ).

This process is carried out by means of a template spreadsheet that is used
to annotate the user stories. Given a list of user stories produced by one of
the analysts, a researcher went through the list, and marked each user story
with E, R, or N. For E and R, the researcher was asked to mark the high-level
original category to which the user story belonged. The high-level original cat-
egories were extracted according to the Validity Procedure, reported later in
this section, and are Customers, Facilities, Personnel, Camp, and Communi-
cation. Whenever a user story was marked with N, the researcher was asked to
report the name of the new category identiﬁed. An excerpt of the data analysis
for one of the user story documents is reported in Fig. 2. It should be noticed
that, to make the annotation task practically feasible, the evaluation was car-
ried out considering high-level, domain-speciﬁc categories of user stories and
not by linking individual user stories with original ones. This was considered
hardly feasible, since single user stories could be traced to multiple ones, or
to subsets of existing ones. This ﬁne-grained task would have led to major
disagreements between annotators, thus hampering the validity of the results.
Subsequently, the roles used in the stories were extracted and marked as
Eρ, Rρ or Nρ. For the case of Eρ and Rρ roles, the researcher also indicated
the corresponding role in the original story. For Nρ, the role was added to the
list of roles.

Validity Procedure. To produce the data analysis scheme presented in Fig. 2,
we needed to identify the original categories—i.e., a categorisation for the

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

13

Fig. 2 Extract of a compiled spreadsheet.

original user stories—and interview categories—i.e., the names of the novel
categories emerging from the user stories produced after interviews. These
latter are the possible values of cells under the column “Interview Category” in
Fig. 2. To identify these categories, a validity procedure was set-up, comprising
the following steps.
• Identiﬁcation of original categories: The initial set of user stories used
as preparation material for the interviewee has been analyzed by the three
authors independently to identify the high-level categories emerging from the
original user stories, referred in the following as original categories. These
categories are: Customers, Facilities, Personnel, Camp, and Communication,
and are deﬁned in more detail in Sect. 4.2.1.

• Validation of original categories: To validate the original categories,
each researcher independently used them to label a set of 107 user stories
sampled from diﬀerent analysts. If a user story did not belong to any of the
original categories it was marked with “N” to indicate a new category, and a
preliminary name was provided. After the labeling process, the researchers
met in a 30 minutes meeting to reconcile the disagreements. For 9 of the
user stories (about 8.5% of the total), they either assigned diﬀerent labels
or they were not sure which label to assign and wanted to discuss the user
story in the meeting.

• Identiﬁcation of interview categories: The researchers met in a 1 hour
meeting to agree on the names of the new categories emerging from the data,
referred in the following as interview categories. As one of the researchers
also played the role of the customer in the interviews, he gave additional
insights which helped to name the new categories. When further input was
needed, the researchers also referred to the recordings of the interviews.
After the meeting, the spreadsheet model used for the comparison procedure
was produced, and it is shown in Fig. 2.

USER STORYCustomersFacilitiesPersonnelCampCommunicationInterview CategoryAs the Admin, I want the interface for this app to be simple to use, so that there is minimal time required to start using it.N - UsabilityAs an employee, I want this app to easily reschedule my week, so that if fellow employee wishes to swap shifts or needs to be covered I can quickly and seamlessly do so.RAs the Admin, I want to be able to send alerts parents regarding their children, so that if one needs immediate attention, I am able to contact the parents quickly.EAs the Admin, I want this app to run on any phone platform, so that employees with either an Android or iPhone can use it.N - PortabilityAs the Admin, I want this app to allow students to have usernames so that counselors and other campers can tag someone and highlight what is going on in real time.ERSpringer Nature 2021 LATEX template

14

Requirements Evolution during Elicitation

• Consolidation of the schema: Using the spreadsheet model the 2nd and
3rd authors independently labeled more than 100 user stories and then met
to reconcile. In this activity, novel interview categories were also introduced.
The disagreement on the category to assign to the user stories was minimal
(less than 4% of the cases) and was mostly related to the name assigned
by the researchers to new interview categories. The 1st author analyzed the
spreadsheet model and approved the consolidated schema.

• Application of the Schema: The schema was applied to the whole set of
user stories by the 2nd author to carry out the comparison activity. In this
activity, the author could use the original categories, the interview categories
identiﬁed in the previous steps, or add further interview categories. The user
stories that raised doubts (about 2%) were marked as “to be discussed”.
• Final Reconciliation: After the analysis a ﬁnal meeting was held between
2nd and 3rd author, to consolidate the names of additional interview cate-
gories and resolve doubts. This meeting was broken over two days for a total
of more than 6 hours.

The analysis of the original roles did not require a similar eﬀort, as the
original user stories clearly identiﬁed three well-separated roles, namely Admin-
istrator, Worker and Parent. For the new roles emerging from interviews, the
user stories also clearly identiﬁed role names, and these were discussed and
conﬁrmed in the ﬁnal meetings.

Phase II - Researchers’ Steps

9. Comparison between Interview-based Elicitation and App Store-
inspired Elicitation The additional user stories of the 30 analysts already
considered in Step 8 are evaluated by two researchers (2nd and 3rd author) to
identify, for each analyst:
• The user stories that express content that belonged to novel categories not
considered in the previous phase by the speciﬁc analyst (referred in the
following as “app-inspired”, A).

• Roles that were novel with respect to those previously considered by the

speciﬁc analyst (Aρ).

This process is supported by a template spreadsheet that is used to anno-
tate the user stories. An example is reported in Fig. 3. For each list of user
stories belonging to an analyst, a researcher went through the list, and assigned
a category to each user story. The category could be selected among the ﬁve
original ones, and also within the whole set of categories already identiﬁed in
the user stories of all the analysts in the previous phase, i.e., all the inter-
view categories. If an appropriate category was not present in the list, the
researcher could add it in an additional column (“App-inspired Category”, in
Fig. 3). Since the researchers could chose among all the categories—including
original ones—they could also select categories that were not considered by
the speciﬁc analyst in the initial phase. Therefore, to determine whether a user
story could be marked as A, we automatically extracted the list of categories

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

15

Fig. 3 Extract of a compiled spreadsheet for the second phase.

already present in the interview-based user stories of the speciﬁc analyst. A
user story produced in this second phase was considered as A if its category
did not appear in the extracted list. This way, even though a category was
already considered by some other analyst, or was part of the original set, it
would be counted as “app-inspired” for the speciﬁc analyst.

After this analysis, the roles were extracted and marked as Aρ, with the

same rationale and approach used for the marking of user stories.

Validity Procedure. The alignment between researchers in terms of cate-
gories of user stories was already achieved in the previous step. In this step,
we needed to ensure that the newly introduced categories, referred in the fol-
lowing as app-inspired categories, were uniform and agreed upon. Therefore,
the 2nd and 3rd authors independently annotated half of the complete list
of user stories produced by the 30 analysts, around 300 user stories for each
author. Then, they cross-checked each other’s work, to identify disagreements
in assigning labels. In total, they discussed 7% of the user stories, for which
disagreement was observed. This reconciliation meeting lasted one hour and
20 minutes. The names of the new categories introduced, which form the app-
inspired categories, were homogenised and consolidated in another meeting
that lasted around 3 hours. The consolidated set was ﬁnally assessed by the
1st author.

To summarise, in both Phase I and II, the researchers categorised each indi-
vidual user story. In Phase I, the categories could be original ones, and novel
ones emerging from interview-based elicitation (interview categories). In Phase
II, the categories could be original categories, interview categories, and novel
ones emerged during app store-inspired elicitation (app-inspired categories).
In Phase I, researchers were also asked to indicate whether a user story in an
original category was something novel for that speciﬁc category (marked as

USER STORYCustomersFacilitiesPersonnelCampCommunicationInterview  CategoryApp-inspired CategoryAs a camping enthusiast, I can post pictures and reviews of my experiences at the camping venues I visit so that I can share my experience with other camping enthusiastsXAs a camping enthusiast, I cwant the mobile app to be more user friendly than the website so that I can go through tha application process from anywhereUsabiltiyAs a camping enthusiast, I can input a road trip destination and identify camping attractions to stay at along the route so that I can identify places to stay that don’t take me too far out of my wayMaps and DirectionsAs a camping enthusiast, I can access guides for camping setup and other helpful reference information that I might need when I am out in the wilderness so that I can solve problems I encounter while campingTrainingSpringer Nature 2021 LATEX template

16

Requirements Evolution during Elicitation

R), or something already existing in that category (marked as E). This dis-
tinction between E and R was not adopted in Phase II, were only the category
was speciﬁed. At this stage, it would not be practical to have such a ﬁne-
grained comparison, considering all the interview categories, plus the original
categories—for a total of 25 categories.

3.3 Data Analysis

Data analysis is carried out based on the results of the comparison activi-
ties, and on a thematic analysis of the selected apps and associated rationales
provided by analysts.

To answer RQ1.1 and RQ2.1, we perform a quantitative statistical anal-
ysis, as these questions are speciﬁcally concerned with measures of diﬀerences.
We thus consider the following study variables, oriented to give a quanti-
tative representation of the concepts of initial customer ideas, documented
requirements, and extended requirements, as well as their diﬀerences.

The dependent variables of the ﬁrst phase of the study are:

• Conservation rate: rate of produced user stories that include content that
can be traced directly to the original set of user stories. More formally, given
a set of user stories produced by a certain analyst, let e be the number of
user stories that are marked as E by the researchers for some of the original
categories, let T be the total number of user stories for the analyst, the
conservation rate c is deﬁned as c = e/T .

• Reﬁnement rate: rate of produced user stories including content that can
be mapped to the original categories, but that provide novel content within
one or more of those categories. Formally, the reﬁnement rate r is r = en/T ,
where en is the number of user stories marked as R.

• Novelty rate: rate of produced user stories including content that is novel,
and cannot be traced to existing categories. Formally, the novelty rate is
v = n/T , where n is the number of user stories marked as N. These user
stories belong to interview categories.

To understand the rates, consider the following case. An analyst wrote 50
user stories: 12 of them can be mapped to the original categories and do not
add content with respect to the original user stories (marked as E); 30 can be
mapped to the original categories, e.g., Communication, but also add novel
content, e.g., related to social media (marked as R); 8 introduce entirely new
categories (marked as N), e.g., Company Information or Usability. In this case,
the conservation rate is 24%, the reﬁnement rate is 60%, and the novelty rate
is 16%.

For the roles, we have analogous variables, Role Conservation, Reﬁnement
and Novelty Rate, deﬁned respectively as: cρ = eρ/Tρ, rρ = enρ/Tρ, and
vρ = nρ/Tρ, where:

1. Tρ is the number of roles identiﬁed by the analyst;

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

17

2. eρ, enρ, nρ are the roles that can be traced to the initial roles, the roles that
express a reﬁnement of the original ones, and the new roles, respectively.

Other dependent variables are those related to the second phase of the
study, in which the analysts took inspiration from the app stores to produce
additional user stories:
• App Store Novelty rate: rate of user stories, produced after the analysis
of similar apps, which belong to novel categories introduced in this phase
by the analyst. Formally, the app store novelty rate is vApp = a/S, where
a is the number of user stories belonging to entirely novel categories for
the speciﬁc analyst, and S is the total number of user stories produced
in this second phase by the analyst. This rate indicates to what extent
the additional activity helped the analysts in identifying novel features not
explored in the previous phases. Consider for example the following scenario.
The user stories that the analyst X deﬁnes after the interviews belong to 4
out of 5 original categories and to interview category “Usability”. After the
analysis of the apps, X deﬁnes 20 user stories. 16 of them belong to the 4
original categories already used and to “Usability”. The other user stories
belong to the remaining original category, and to the category “Availability”,
which was introduced already by other analysts in the Phase I. In this case,
vApp is 20% as there are 4 out of 20 user stories belonging to categories that
X did not explore in Phase I.

• App Store Reﬁnement rate: this rate represents the rate of user stories
that belong to the same categories already used by the analyst. Formally, this
rate is rApp = o/S, where o indicates the number of user stories belonging to
existing categories used by the speciﬁc analyst3. This rate indicates to what
extent the additional activity helped in reﬁning the features identiﬁed in the
previous phase. In the previous example, rApp is 80%, as 16 out of 20 user
stories belong to categories already considered by the analyst in Phase I.

It should be noticed that in this phase we have no conservation rate, as
we are not comparing with existing user stories. Concerning roles, we consider
the app store role novelty rate as vApp
ρ = aρ/Sρ, where aρ is the number of
new roles introduced in this phase for the speciﬁc analyst and Sρ is the total
number of roles used by the analyst in the whole set of user stories. We do
not consider other rates for roles, as we want to focus solely additional proﬁles
introduced after app store-inspired elicitation.

Based on these rate variables, we want to see the interval, for which we
can state that, for a conﬁdence level of 0.95 (α = 0.05), the rate variable Y is
comprised between a certain lower bound LY and a certain upper bound UY .
This can be achieved by identifying the conﬁdence interval of the mean of the
sample of each rate variable Y —or the conﬁdence interval of its median, when
the data are not normally distributed. To test the normality assumption, we

3In some limited cases, user stories can belong to more than one category. So, while in principle

rApp = 1 − vApp, in some cases rApp + vApp > 1.

Springer Nature 2021 LATEX template

18

Requirements Evolution during Elicitation

use the Shapiro-Wilk Test. When the assumption is met, we apply the one
sample t-test. In the other cases, we apply the percentile method.

The labeling procedure and theme extraction performed by the 2nd and
3rd authors (Step 8 and 9 in Data Collection) produced additional information
that can help to answer RQ1.2, RQ1.3, as well as RQ2.2 and RQ2.3. Indeed,
these questions are concerned with the categories of user stories and roles, and
their evolution in the diﬀerent steps.

In particular, we are interested in analyzing the following indicators, with

associated analysis.
• Categories and Roles Frequency: frequency of user stories belonging to
each category and role, considered as a proxy to evaluate their relevance.

– To answer RQ1.2, we compare the frequency in the original user stories,
and the frequency in the user stories produced in Phase I. This comparison
will be performed based on the original categories, and we will use one
sample t-test, or Wilkoxon—if normality assumptions are not satisﬁed—
with α = 0.05, to evaluate the diﬀerences. The goal will be to identify
whether there is a diﬀerence between the original frequencies and the ones
observed in the data produced after interviews. Additional statistics will
also be provided to complement statistical tests.

– To answer RQ2.2, we compare the frequencies in the user stories produced
in Phase I with the frequencies in the user stories produced in Phase II by
the same analysts. The comparison will be performed considering original,
interview, and app-inspired categories and roles. We will use paired t-test,
or Wilkoxon—if normality assumptions are not satisﬁed—with α = 0.05,
to evaluate the diﬀerences. The goal is to understand whether there is a
diﬀerence between the distributions of the diﬀerent categories in Phase
I and in Phase II. This helps to understand if the focus of the analysts
changed in the two phases. Additional statistics will also be provided to
complement statistical tests.

• Emerging Categories and Roles: speciﬁc names and associated frequen-
cies of interview categories and roles (to answer RQ1.3) and app-inspired
categories and roles (to answer RQ2.3).

Given the exploratory nature of the study, we do not make an explicit
deﬁnition of all the variables involved, and all the hypotheses tested throughout
the evaluation, which would suggest a conﬁrmatory study design. Instead, in
the following results sections, we will focus on presenting multiple statistics
to provide evidence of the evolution of requirements throughout the diﬀerent
elicitation phases.

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

19

Fig. 4 Boxplots of the diﬀerent rates (cf. Sect. 3.3 for deﬁnitions): conservation = conser-
vation rate; reﬁnement = reﬁnement rate; novelty = novelty rate. The non-overlapping
notches indicate that the diﬀerence between the median of the rates is signiﬁcant for a con-
ﬁdence level of 95%. From the ﬁgure, we observe that most of the user stories produced are
reﬁnements, followed by existing user stories and by novel ones.

4 RQ1: Interview-based Elicitation—Execution

and Results

In this section, we report the results of the activities related to interview-based
elicitation, evaluating the conﬁdence intervals for the diﬀerent rates (RQ1.1),
the variations in terms of distributions of categories and roles with respect to
initial ideas (RQ1.2), and the novel categories and roles introduced by the
analysts (RQ1.3).

4.1 RQ1.1: How large is the diﬀerence in terms of

documented requirements and roles with respect to
initial ideas?

In Fig. 6 and Fig. 7, we report the plots of the values of the diﬀerent rates for
each analyst. Instead, the boxplots in Fig. 4 and 5 give an overview of the dis-
tribution of the rates. We see that in general the highest values are observed
for the reﬁnement rate, followed by the conservation rate and by the novelty
rate. Conversely, for roles, conservation rate dominates over novelty and reﬁne-
ment ones. Looking at Fig. 6 and Fig. 7, we intuitively see that variations for

0.00.20.40.60.8conservationrefinementnoveltySpringer Nature 2021 LATEX template

20

Requirements Evolution during Elicitation

Fig. 5 Boxplots of the diﬀerent rates. (cf. Sect. 3.3 for deﬁnitions): role cons. = role
conservation rate; role ref. = role reﬁnement rate; role nov. = role novelty rate. The non-
overlapping notches between role conservation and the other two rates indicate that the
diﬀerence between the median is signiﬁcant, with a conﬁdence level of 95%. Instead, the
diﬀerence between role reﬁnement and novelty is not signiﬁcant. From the ﬁgure, we also
observe that most of the roles belong to the initial set (role cons. is the highest), while novel
ones or reﬁnements are less frequent.

Fig. 6 Relative percentage of the diﬀerent rates for each analyst.

each rate are quite high from an analyst to the other. This suggests that each
individual analyst produces diﬀerent user stories in terms of content, and thus,
depending on the analyst, diﬀerent systems may be developed. In some cases,
analysts lean more towards the reﬁnement of user stories in the existing cate-
gories, while in others focus on completely novel features, as one can observe,
e.g., for analysts 7 and 16. In other cases, e.g., analysts 2 or 12, the elicitation
process tends to be more conservative, with less space for creativity.

0.00.20.40.60.81.0role cons.role ref.role nov.Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

21

Fig. 7 Relative percentage the diﬀerent role rates for each analyst.

Rate

Method

p-value
(Shapiro-Wilk)
0.40
0.36
0.08
0.03
2.247e-06
0.005
Table 1 Results of the tests performed to identify the upper (H) and lower (L) bounds of
the diﬀerent rates.

Normality
(Shapiro-Wilk)
Pass
Pass
Pass
Fail
Fail
Fail

Conservation (c)
Reﬁnement (r)
Novelty (v)
Role Cons. (cρ)
Role Ref. (rρ)
Role Nov. (vρ)

t-test
t-test
t-test
bootstrap
bootstrap
bootstrap

0.30
0.54
0.12
0.58
0.06
0.18

0.38
0.62
0.20
0.72
0.17
0.29

H

L

In Table 1, we answer RQ1 by identifying the conﬁdence intervals for each

rate variable.

Based on the tests results, the following statements can be given, for a

conﬁdence level of 95%:
• The conservation rate c is between 30% and 38%, meaning that between
30% and 38% of the produced user stories (i.e, roughly up to 19 out of 50)
can be fully traced to user stories belonging to the initial ideas.

• The reﬁnement rate r is between 54% and 62%, meaning that between 54%
and 62% of the produced user stories (i.e, roughly up to 31 out of 50) are
reﬁnements of initial ideas. Speciﬁcally, they belong to categories of features
already conceived by the customer, but provide novel content.

• The novelty rate n is between 12% and 20%, meaning that between 12% and
20% of the produced user stories (i.e, roughly up to 10 out of 50) identify
entirely novel categories of features, which did not belong to the initial ideas.
• The role conservation rate cρ is between 58% and 72%, meaning that between
58% and 72% of the roles used in the produced user stories match with the
initial roles identiﬁed by the customer.

• The role reﬁnement rate rρ is between 6% and 17%, meaning that between
6% and 17% of the roles used in the produced user stories are reﬁnements
of the initial roles.

• The role novelty rate nρ is between 18% and 29%, meaning that between
18% and 29% of the roles are entirely novel with respect to the initial ones.

Springer Nature 2021 LATEX template

22

Requirements Evolution during Elicitation

4.2 RQ1.2: What is the relevance given to the categories
of requirements and roles with respect to initial ideas?

To answer RQ1.2, we analyze how the relevance given to each category and
each role change in the analysts’ stories with respect to the original ones. We
remark that, with the term “relevance” we arguably intend the fraction of the
stories dedicated to a certain category or role. This analysis will allow us to
identify what is important for the analysts and to reﬂect on the meaning of
these preferences.

4.2.1 Analysis of Categories

Through the process described in Section 3.2, the researchers identiﬁed 5
diﬀerent categories:
• Administrative procedure related to customers (labeled as cus-
tomers): this category includes features such as registration to a camp,
creation of new campers and parents proﬁles, modiﬁcation, and elimination
of proﬁles.

• Management of facilities (facilities): this category includes the tracking
of the facilities’ status both in terms of usage and maintenance needs and
the management of the inventory.

• Administrative procedure related to personnel (personnel ): This cat-
egory includes features related to assigning tasks to workers and evaluating
them. In its more general interpretation, it can also include the ability to
create and modify personnel proﬁles and other administrative needs.

• Individual camp management (camp): This category includes fea-
tures such as scheduling activities within a speciﬁc camp, managing its
participants, and dealing with additional planning details.

• Communication (communication): This category includes everything
related to communication from one-to-one messaging and broadcasting to a
speciﬁc category of users to posting information online and in social media.

Initial Categories Distribution

In the original stories, and, thus, in the mind of the ﬁctional customer, great
relevance is given to the administrative activities on the customer side (i.e.,
stories belonging to customers), such as “As a camp administrator, I want to
be able to add campers so that I can keep track of each individual camper”.
In particular, 64.2% of the total number of stories belong to this category, and
the remaining is distributed among the other categories as follows: 5.7% belong
to facilities, 9.4% to personnel, 7.6% to camp, and 15.1% to communication.

Categories Distribution in the Analysts’ Stories

The category distribution of the analysts’ stories is diﬀerent with respect to
the original stories. Indeed, looking at Table 2, we observe that the mean of
the percentage of stories belonging to customers is lower than half of the one

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

23

Category
customer
facilities
personnel
camp
communication

Mean
26.3%
8.0%
15.6%
9.9%
32.0%

Std. Dev. Min Max
6.0% 54.7%
0.0% 18.0%
2.0% 30.0%
0.0% 30.1%
9.6% 48.2%

9.4%
5.2%
7.5%
8.0%
10.6%

Original
64.2%
5.7%
9.4%
7.6%
15.1%

Table 2 Descriptive statistics for the category distributions in the participants user
stories, and the percentage in the original user stories.

Fig. 8 Box plots of the distributions for each category, measured as the percentage of user
stories in the category. The black asterisks * represent the percentage in the original set.
The ﬁgure shows higher interest in communication-related user stories with respect to the
original set, and much less interest in customer-related user stories.

Category
customer
facilities
personnel
camp
communication

Exp. µ Obs. µ Norm. Test
t-test
64.15
wilcox V = 435
5.66
t-test
9.43
wilcox V = 406
7.55
t-test
15.09

26.34
8.04
15.60
9.91
31.95

Pass
Fail
Pass
Fail
Pass

t = 16.586

t = 11.467

Test Statistic
t = 15.263

p-value
2.14e-15
2.69e-06
2.71e-12
3.99e-06
2.44e-16

Table 3 Statistical tests to compare the mean of the distribution of the diﬀerent
categories (Obs. µ) with respect with the one in the original set (Exp. µ).

in the original stories, while the mean of communication is double of the value
for the original stories.

The box plots in Fig. 8, in which the black asterisks represent the percent-
age for each category in the original stories, show that the relevance given to
facilities, personnel, and camp of the original stories is comparable with the
one given by the analysts. Instead, for customers and communication there are

010203040506070customerfacilitiespersonnelcampcommunication*****Springer Nature 2021 LATEX template

24

Requirements Evolution during Elicitation

Role
Administrator
Worker
Parent
New Role

14.8%
12.3%
9.2%
13.4%
Table 4 Descriptive statistics for the role distributions in the participants user stories,
and the percentage in the original user stories.

Std. Dev. Min Max
11.3% 83.3%
0.0% 62.8%
0.0% 32.0%
0.0% 54.0%

Original
66.0%
94.3%
24.5%
0.0%

Mean
41.9%
27.4%
16.9%
13.8%

strong diﬀerences. This suggests that the analysts focused their attention on
aspects that were not the original focus of their customer. Table 3 reports the
statistical tests to assess whether there is a diﬀerence between the means of the
distribution and the relevance in the original user stories. The tests show that
the diﬀerences between observed mean (Obs µ) and expected one (Exp. µ) are
signiﬁcant in all the cases for α = 0.05. The tests are all one-sample tests. We
use the t-test when the normality assumption is fulﬁlled, and Wilcoxon Signed
Rank in the other cases. It is rather striking to observe that the decrease of
relevance for the customer category is about 59% (i.e., 37.81).

4.2.2 Analysis of Roles

Similar considerations can be done about the perspective considered in imag-
ining the system, and, thus, the roles used in the user stories. In the original
set of user stories, there are three roles: camp administrator, parent, and camp
worker.

Initial Roles Distribution

The majority of stories is dedicated to the camp administrator (66.0% of the
user stories), followed by the parents of the participants (24.5%) and the camp
worker (9.4%). This also helped the preparation of the ﬁctional customer who
was acting as the camp administrator as he had most of the available stories
looking at the system to be developed from his perspective.

Roles Distribution in the Analysts’ Stories

The analysts had only the chance to talk with the administrator and, never-
theless, 30% of them in their stories were dedicated to other roles, and only
16.67% of them had more than half of the stories focused on the administrator.
Table 4 shows the descriptive statistics for the distribution of the analysts’
user stories among the diﬀerent roles. It is interesting to observe that the
mean for camp workers is much higher than the one on parents. This could
be connected to the decreasing attention to the category customers in the
analysts’ requirements. Notice that, while all the analysts considered the role
of camp administrator, two of them did not consider the role of camp workers,
and four did not consider the role of parents.

As shown in the box plots in Fig. 9, in which the black asterisks represent
the percentage for each role in the original stories, only the outlier focused
more on the camp administrator role than the original stories. Similarly, the

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

25

Fig. 9 Box plots of user story distribution for each role, measured as the percentage of user
stories that used that role. The asterisks * are the number of user stories for the speciﬁc role
in the original set. The ﬁgure shows higher interest in the role of Workers with respect to
the original set, and much less interest in the Administrator role, which is also the customer
that has been interviewed.

Role
Administrator
Worker
Parent

Exp. µ Obs. µ Norm. Test
t-test
66.04
t-test
9.43
t-test
24.53

Pass
Pass
Pass
Table 5 Statistical tests to compare the percentage of the user stories in the diﬀerent
roles (Obs. µ) with respect with the one in the original set (Exp. µ).

Test Statistic
t = 15.496
t = 12.226
t = 10.075

p-value
1.45e-15
5.75e-13
5.57e-11

41.94
27.38
16.92

relevance given to the parents’ perspective is in general much smaller than in
the original stories.

The impact of new roles is limited (mean of 13.8%). All the analysts con-
sidered at least 2 of the original roles, and 80% of them considered all the 3
original roles. However, the relevance given to the perspectives and roles in the
analysts’ user stories is considerably diﬀerent than in the original ones. This
is conﬁrmed by the statistical tests in Table 5, which show that the the per-
centage of the original stories for each role is signiﬁcantly diﬀerent from the
one observed in our data.

4.3 RQ1.3: What are the emerging categories and roles?

To answer RQ1.3, we analyze the new categories and new roles, their recurrence
among analysts, and their weight within the set of stories of the analysts who
included them. This analysis provides insight on what is generated by the
analysts’ expertise, background, preparation, and analysis.

020406080AdministratorWorkerParentNew****Springer Nature 2021 LATEX template

26

Requirements Evolution during Elicitation

Category
Security/Privacy
Data Agg/Analysis
Advertisement
Portability
Usability
Company Information
Search/Filter

Mean
4.8%
3.9%
2.7%
4.2%
6.9%
4.0%
3.1%

Std. Dev. Min Max
1.8% 10.0%
1.9% 7.8%
1.7% 4.0%
2.0% 8.3%
2.0% 20.0%
1.8% 11.9%
1.7% 6.1%

2.9%
2.1%
1.1%
2.0%
2.7%
3.6%
2.0%

Table 6 Descriptive statistics summarizing the impact of the most recurrent emerging
categories. The percentages are computed with respect to the total number of user stories
of an analyst. Mean, Std. Dev., Min and Max of these percentages consider only those
analysts who actually wrote user stories belonging to the speciﬁc category.

4.3.1 Analysis of New Categories

In their stories, every analyst included new categories up to a maximum of
8 with a mean of 3.73. In total, they introduced 20 new categories, reported
in Fig. 10. Among them, 4 have been used by a single analyst but were very
speciﬁc and could not map over any other existing or newly created categories.

Fig. 10 Distribution of the novel categories that emerged after interview-based elicitation.
The histogram reports the number of analysts who considered the speciﬁc category.

Table 6 reports descriptive statistics on new categories. The more recurrent
new category, used by 53% of the analysts, is Security/Privacy. The impact on
the total of user stories in this category varies from 1.79%, one story, to 10%,
5 stories. An example of such a story is “As an employee, I want this app to
not have access to my personal phone data so that what I have on there stays
private”.

The second more recurrent new category is Data Aggregation/Analysis.
This category collect all the features that aim at aggregating and analyzing
information at company-level. An example is “As a business owner, I want to
be able to analyze the data that is entered into the system so that I can see

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

27

trends in the information that I receive.”. The mean usage is 3.9% (2 stories)
with std. dev. 2.1% as the relevance given varies from 1.9% to 7.8%.

Notice that there is a fundamental diﬀerence between this category and
the previous one. “Security/Privacy” includes nonfunctional requirements
that many of the analysts decided to investigate during their conversation
with the customer, while “Data Aggregation/Analysis” includes functional
requirements that describe global operations at a company level.

The third more recurrent new category is Advertisement, used once or twice
by almost a third of the analysts. This category includes the functionalities
that the analysts identiﬁed to advertise the camps to potential guests and their
parents. An example is “As a camp administrator, I want to have the ability
to advertise scheduled activities so that potential camp attendees and their
guardians will know what activities are upcoming”.

Among the other nonfunctional requirements categories that emerged in
the analysis are Usability and Portability, which have both been considered by
8 participants (26.7% of the total). An example that belongs to the Usability
category is “As an employee, I wish for this app to be simple to use so that
our older staﬀers can still use it”. Notice that, when present, usability is highly
considered with an average of 6.9% of the stories. Portability has a lower impact
on the stories of the analysts who use it (4.2%). An example in this category
is “As a camp administrator, I want users to be able to use the system on all
platforms so that no users are excluded from seeing what the campsites have
to oﬀer.”.

The functionalities related to publishing and accessing to general infor-
mation about the companies (e.g., its contact information) were not present
in the original user stories and have been collected in the category Company
Information. This category has also been considered by 7 participants.

In synthesis, we observe that new categories emerged for every analyst and
some of them are highly predominant both in terms of number of analysts who
considered them and in impact on the stories of the analysts who considered
them. The new categories are almost equally divided into new functionalities
and nonfunctional requirements.

4.3.2 Analysis of New Roles

Diﬀerently from the case of categories, not all the analysts added new roles to
their stories, but still a large number did it (22 analysts over 30). 6 new roles
emerged from the analysis, namely, in order of frequency, attendee (16), visi-
tor (8), user (7)4, consultant (3), system administrator (2), and investor (1).
Table 7 reports descriptive statistics on new roles (excluding system adminis-
trators and investors that appear just once in the stories of 2 and 1 analysts,
respectively). The most frequent among these roles, attendee, refers to the
children participating in the camps and thus assumes that they all will have
access to the system—while this was not possible in the original system’s idea.

4User can be regarded as a collective, abstract role.

Springer Nature 2021 LATEX template

28

Requirements Evolution during Elicitation

Category Mean
15.8%
Attendee
7.1%
Visitor
14.2%
User
4.7%
Consultant

Std. Dev. Min Max
7.4% 38.0%
1.8% 11.9%
3.4% 35.9%
2.0% 8.0%

8.4%
4.0%
12.0%
3.1%

Table 7 Descriptive statistics summarizing the impact of the most recurrent emerging
roles. The percentages are computed with respect to the total number of user stories of an
analyst. Mean, Std. Dev., Min and Max of these percentages consider only those
analysts who actually wrote user stories belonging to the speciﬁc role.

When used, this role has a high impact with a mean of 15.8% (standard devia-
tion of 8.4%), meaning that analysts who introduced this role, used it in 15.8%
of their stories. Notice that the analyst who used it more dedicated 38% of
the stories to this role, which represented the most frequent role in the ana-
lyst’s set. Summarizing, we observe that many analysts consider additional
roles with respect to the ones in the original set.

5 RQ2: App-Store Inspired Elicitation—

Execution and Results

In this section, we report the results of the activities related to app store-
inspired elicitation, evaluating the conﬁdence intervals for the diﬀerent rates
(RQ2.1), the variations in terms of distributions of categories and roles with
respect to the previous phase (RQ2.2), and the novel categories and roles
introduced (RQ2.3).

5.1 RQ2.1: How large is the diﬀerence in terms of
covered requirements categories and roles with
respect to the requirements documented after the
interview sessions?

Fig. 11 reports the relative percentages of app store novelty and app store
reﬁnement rates for each analyst. We see that again there are several diﬀerences
between analysts, with some of them (e.g., 2, 15) including a large percentage
of novel categories, and some of them (e.g., 7, 9), sticking to the original ones.
However, we notice all analysts included at least some novel categories in
their user stories. For the role novelty rate, shown in Fig. 12, we see an even
higher variability in the results, with some analysts (13, 15, 17) introducing
diﬀerent roles, and the majority of them (17 subjects out of 30) keeping the
originally identiﬁed ones. Fig. 13 reports the boxplots of the rates, further
highlighting the high variance of the app store role novelty rate. The non-
overlapping notches indicate that the diﬀerence between the medians of the
rates is signiﬁcant for a conﬁdence level of 95%.

Table 8 reports the results of the tests performed to identify upper and
lower bounds of the diﬀerent rates. From the tests, we conclude the following,
with a conﬁdence level of 95%:

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

29

Normality
(Shapiro-Wilk)
Pass
Fail
Fail

p-value
(Shapiro-Wilk)
0.068
0.01739
1.319e-05

Method

L

t-test
bootstrap
bootstrap

0.28
0.68
0.08

H

0.42
0.87
0.17

Rate

Novelty (vApp)
Reﬁnement (rApp)
Role Nov. (vApp

)

ρ

Table 8 Results of the tests performed to identify the upper (H) and lower (L) bounds of
the diﬀerent app store-related rates.

Fig. 11 Relative percentage of app store novelty and reﬁnement rates.

Fig. 12 App store role novelty rate for each analyst, expressed as percentage.

• The app store novelty rate vApp is between 28% and 42%. This means that
up to 42% of the user stories produced after the analysis of similar apps
(i.e., roughly up to 8 out of 20) belong to categories that were not identiﬁed
by the analyst after the ﬁrst phases of elicitation.

• The app store reﬁnement rate rApp is between 68% and 87%, meaning that
the majority of the user stories produced after the analysis of similar apps
(i.e., roughly up to 17 out of 20) are reﬁnements of ideas already identiﬁed
during the previous elicitation activities.

• The app store role novelty rate vApp

is between 8% and 17%, meaning that
few additional roles are identiﬁed after app store-inspired elicitation by the
individual analysts, but still a non-negligible number.

ρ

5.2 RQ2.2: What is the relevance given to the diﬀerent
categories of requirements and roles with respect to
the requirements documented after the interview
sessions?

To answer this RQ, we ﬁrst look at the relevance of the categories by group,
and then we look at the variation of single speciﬁc categories. The same will
be done for roles.

Springer Nature 2021 LATEX template

30

Requirements Evolution during Elicitation

Fig. 13 Boxplots of the diﬀerent app store-related rates. (cf. Sect. 3.3 for deﬁnitions): app
store nov. = app store novelty rate; app store ref. = app store reﬁnement rate; app store
role nov. = app store role novelty rate. The ﬁgure shows that most of the user stories belong
to categories already considered (app store ref. is higher than app store nov.). Furthermore,
the novel roles are generally more limited with respect to those already discovered—app
store role nov. is below 0.3.

5.3 Analysis of Categories

To facilitate the analysis, we group the categories into three groups, namely:
Original, i.e., the set of categories that were part of the initial ideas; Interview-
based, i.e., the categories that emerged after interview-based elicitation; App
store-inspired, i.e., the categories that emerged after app store-inspired elic-
itation. Fig. 14 shows the boxplots of the distribution of the three category
groups (abbreviated as Original-CAT, Interview-CAT and App-CAT) in the
two phases, identiﬁed as Ph-I and Ph-II. From the plot, we clearly see that the
original categories received substantially less attention in Ph-II. Conversely,
more relevance was given to categories in the Interview-based group. Over-
all, the novel categories belonging to the App group received less attention
than the others, but still a non-negligible rate of user stories (mean 14%) was
dedicated to them.

The statistical tests reported in Table 9 show that the diﬀerence between
the means of Original-CAT Ph-I and Original-CAT Ph-II, and Interview-CAT
Ph-I and Interview-CAT Ph-II, are statistically signiﬁcant for α = 0.05. Sim-
ilarly, the variation from zero within the App category is also statistically
signiﬁcant. Therefore, we can conclude that in the diﬀerent elicitation phases

0.00.20.40.60.81.0app store nov.app store ref.app store role nov.Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

31

Fig. 14 Boxplots that represent the fraction of user stories in each category group for
the diﬀerent phases, identiﬁed as Ph-I and P-II. The category groups are: Original-CAT
= initial set of categories; Interview-CAT = new categories introduced in the interview
phase; App-CAT = new categories introduced after the app store-inspired phase. The
boxplots show that the original categories still dominate in Phase II. However there is less
attention to them with respect to Phase I (Original-CAT Ph-I is lower than Original-CAT
Ph-II), and increased attention to categories introduced in the interview phase (Interview-
CAT Ph-II is higher than Interview CAT Ph-I). Categories introduced in Phase II (i.e.,
App-CAT Ph. II) are the less frequent in Phase II, and do not obviously exist in Phase I.

0

0.71
0.31
0.14

Ph-I µ Ph-II µ Norm. Test
Group
Original-CAT
0.92
Interview-CAT 0.16
App-CAT

t-test (paired) mean = -0.21
t-test (paired) mean = 0.14
mean = 0.14
wilcox
Table 9 Results of the statistical tests to verify whether the diﬀerence between the means
of the distributions of the category groups in Phase I (Ph-I µ) and Phase II (Ph-II µ) is
signiﬁcant. Norm. = result of the normality test with Shapiro-Wilk; Test = applied test,
based on the results of Norm.; Diﬀerence = mean diﬀerence; Test Statistic = value of
the test statistic for the applied test.

Test Stat.
t = -4.9181
t = 4.5758
V = 300

p-value
3.185e-05
8.232e-05
1.88e-05

Pass
Pass
Fail

Diﬀerence

the analysts give relevance to diﬀerent category groups. More speciﬁcally, we
see: a mean decrease of 0.21 for the group Original, which is 23% of the mean
in Phase I (0.92); a mean increase of 0.14 for the group Interview, which is
45% of the mean in Phase II (0.31). Furthermore 14% of the user stories in
Phase II consider novel categories (group App, mean = 0.14).

To look into the single categories, we consider, for each analyst, their indi-
vidual rate of user stories in a certain category during Phase I and during

0.00.20.40.60.81.01.2Original−CAT Ph−IOriginal−CAT Ph−IIInterview−CAT Ph−IInterview−CAT Ph−IIApp−CAT Ph−IApp−CAT Ph−IISpringer Nature 2021 LATEX template

32

Requirements Evolution during Elicitation

Fig. 15 Boxplots of the diﬀerence between the rate of user stories after interviews, and
after app store-inspired elicitation for each category. The boxplot shows the decrease of the
original categories, i.e., the ﬁve ones reported at the bottom of the plot, with the exception
of Communication (Comm.).

Phase II. Then we compute the absolute diﬀerence, to check whether some vari-
ation occurred in that category. The boxplots of the diﬀerences are reported
in Fig. 15. We see that there are several categories with a limited number of
data points, indicating that only a part of the analysts focused on certain cat-
egories in any of the phases (e.g., Filtering Feedback or Legal Reqs). On the
other hand, we also see that for some categories for which there is suﬃcient
data, some interesting variations occur. In particular, most of the Original
categories, namely Customer, Facilities, Workers and Camp tend to decrease.
Conversely, the relevance of Communication increases. In the other categories,
interesting increments are observed for Search/Filter and Usability, while the
relevance of Security/Privacy and Advertisement decreases.

Fig. 16 provides a diﬀerent perspective, indicating the absolute number
of analysts focusing on a certain category in Phase I and in Phase II. The
diagram shows that some more analysts dedicated attention to features that
were marginally considered before, such as Live-chat, Settings, and Availability,
while some topics are abandoned by part of the analysts in this phase, as,
e.g., Ticket System or Filtering Feedback, either because they were considered
completely addressed by the previously written requirements, or because these
aspects did not appear as relevant in the retrieved apps.

lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll−0.20.00.20.4CustomerFacilitiesWorkersCampComm.AdvertisementArch/ImplAvailabilityCalendarCompany InformationData Agg/analysisAestheticEquipment TrackingFiltering FeedbackLegal ReqsLive−chatPerformancePortabilityScalabilitySearch/FilterSecurity/PrivacySettingsTask TrackingTicket SystemUsabilityNewSpringer Nature 2021 LATEX template

Requirements Evolution during Elicitation

33

Fig. 16 Number of analysts who considered each interview category in Phase I and in
Phase II.

Ph-I µ Ph-II µ Norm. Test
Group
Original
0.86
Interview 0.14

0.74
0.28

Fail
Fail

wilcox (paired) mean = -0.12 V = 284
V = 111
wilcox (paired) mean = 0.14

Diﬀerence

Test Statistic

p-value
0.07
0.037

Table 10 Results of the statistical tests to verify whether there is a diﬀerence between
the means of the distribution of the role groups in Phase I (Ph-I µ) and Phase (Ph-II µ).
Norm. = result of the normality test with Shapiro-Wilk; Test = applied test, based on
the results of Norm.; Diﬀerence = mean diﬀerence; Test Statistic = value of the test
statistic for the applied test.

5.4 Analysis of Roles

Concerning roles, Fig. 17 reports the diﬀerence between groups of roles in terms
of rate of user stories dedicated to role groups in Phase I and Phase II. The
grouping is analogous to the one already considered for user story categories.
We do not report the boxplot for novel roles introduced after app store-inspired
elicitation, since solely three subjects out of 30 introduced novel roles. From the
ﬁgure, we see that the relevance of the original roles decreased, in favour of the
roles identiﬁed after interview-based elicitation. The statistical tests reported
in Table 10 show that the diﬀerence between the groups is signiﬁcant for
α = 0.5 for Interview-CAT roles. Therefore, there is a statistically signiﬁcant
variation in terms of relevance given to novel roles already identiﬁed in the
interview phase. More speciﬁcally, interview roles increase by 100% (the mean
diﬀerence is 0.14, and the value in Phase I was 0.14). Instead, the mean decrease
of 0.12 observed in terms of user stories dedicated to roles of the original set
is not signiﬁcant (p-value = 0.07).

Concerning the relevance of speciﬁc roles, we can qualitatively observe
some variations in Fig. 18. The ﬁgure reports the distribution of the diﬀerence
between Phase I and Phase II of the fraction of user stories belonging to a

Springer Nature 2021 LATEX template

34

Requirements Evolution during Elicitation

Fig. 17 Boxplots of the fraction of user stories after interviews (Ph-I) and after app store-
inspired elicitation (Ph-II), considering diﬀerent role groups, i.e., those in the original set
(Original-Roles), and those identiﬁed after interviews (Interview-Roles). Original-Roles-
Ph-I/Original-Roles-Ph-II = fraction of user stories using roles in the original set, in
Ph-I and Ph-II, respectively; Interview Roles-Ph-I/Interview-Roles-Ph-II = fraction
of user stories using roles introduced after interviews, in Ph-I and Ph-II, respectively. In
a few cases, the fraction is higher than 1.0 because certain user stories were dedicated to
more than one role. The ﬁgure indicates that in both Phase I and II, more user stories are
dedicated to original roles, and fewer to new roles identiﬁed after interviews. Furthermore,
in Phase II, we see that user stories dedicated to original roles decrease, in favour of those
dedicated to new roles.

certain role. We consider solely the most frequent roles. We see that the role
of Admin and Worker decreased, while some increase is observed for the other
roles. In particular, the generic role of User, intended as app user, received
more attention, together with Attendee and Parent. Overall, the app store
analysis allowed the analysts to focus more on the user-side of the business,
rather than on the internal view, represented by Admin and Worker roles.

5.5 RQ2.3: What are the emerging categories and roles?

After app-store driven requirements elicitation, 80% of the analysts introduced
storied that did not belong to any of the previously identiﬁed categories and we
have grouped these storied into 16 novel categories. In Fig. 19, we report the
histogram of these categories, considering the number of analysts that wrote
at least one user story in the speciﬁc category.

0.00.20.40.60.81.01.2Original−Roles Ph−IOriginal−Roles Ph−IIInterview−Roles Ph−IInterview−Roles Ph−IISpringer Nature 2021 LATEX template

Requirements Evolution during Elicitation

35

Fig. 18 Boxplots of the diﬀerence between the fraction of user stories after app store-
inspired elicitation (Phase II) and after interviews (Phase I), considering the diﬀerent roles.
The plot reports only the most common roles. The boxplots below 0 (Admin, Worker )
indicate a decrease of relevance for that role in Phase II. The boxplots above 0 (Attendee,
User ) indicate an increase of relevance, as a greater fraction of user stories is dedicated to
these roles.

The most frequently used category, used by almost half of the analysts (13
out of 30), is Maps and Directions, which contains all the stories related to the
identiﬁcation of positions on a map (e.g., for camp, event, individual), or to
get directions. An example is “As a visitor, I want to be able to look for the
event location using the application so that I do not have to drive through the
campground looking for the best site available.”

Other frequently used new categories are Payment/Discounts and Train-
ing/Tutorials, both used by 20% of the analysts. They are both categories that
introduce new functionalities in the system: Payment/Discounts groups func-
tionalities related to acquiring and using coupons, or understanding the costs
of camps and activities (e.g., “As a site user, I can add promotion code for the
camp so that I can get discount on camp event”); Training/Tutorials includes
educational functionalities to train both the staﬀ and the participants on the
use of the app and on camp activities (e.g., “As a site user, I should see tuto-
rial guide on how to book for app and how to use the system so it will help
me to understand how to ﬁnd camp events and make booking.”).

−0.4−0.20.00.20.40.6AdminWorkerParentAttendeeUserVisitorSpringer Nature 2021 LATEX template

36

Requirements Evolution during Elicitation

Fig. 19 Number of analysts using each novel category introduced in Phase II.

Maps/Directions
Payment/Discount
Personalization
Training/Tutorials

Mean
11.71%
6.99%
8.98%
5.63%

Std. Dev. Min Max
4.00% 31.82%
4.55% 31.82%
5.26% 21.05%
4.55% 21.05%

7.75%
3.68%
3.54%
1.39%

Table 11 Descriptive statistics summarizing the impact of the most recurrent novel
categories emerging from Phase II. Mean, Std. Dev., Min and Max consider the percent
rate of user stories in a certain category with respect to the total number of user stories
produced in Phase II. Mean, Std. Dev., Min and Max of these percentages consider
only those analysts who actually wrote user stories belonging to the speciﬁc category.

Finally, 5 analysts included stories to introduce the possibility to person-
alise the user experience in diﬀerent ways. We have grouped these functionali-
ties under Personalization. The descriptive statistics of these 4 more frequent
categories are reported in Table 11.

Concerning roles, we have already observed that the role novelty rate is not
negligible, meaning that individual analysts considered novel roles. However,
most of these roles were already introduced by other analysts already in Phase
I, and the number of entirely novel roles is limited to four (Outdoorsman,
Camping enthusiast, Developer, and Tourist). Furthermore, only three analysts
identiﬁed novel roles. Given these results, we cannot make relevant conclusions
concerning the qualitative contribution of app store-driven elicitation towards
the discovery of novel roles.

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

37

6 Discussion

The analysis of the data collected in our study suggests the presence of inter-
esting patterns in the analysts’ behavior that empirically conﬁrm the intuition
that requirements are not only elicited but co-created through the interview
process. Then, requirements are substantially extended when the analyst looks
at similar products in the market. Overall, our analysis shows that through-
out the elicitation process there is an evolution of the original idea. While this
evolution might be partially driven by the three Cs [31], our data show that
it does not only go in the direction of completing the existing information,
but often changes the focus of the requirements and the roles, adds new func-
tionalities that were not part of the initial ideas, and introduces nonfunctional
requirements. In the following, we answer the RQs and we provide observations
in relation to existing literature. Our study contributes to theory in RE, and
it is mainly oriented to researchers. In the following, we use the ⇒ symbol to
highlight take-away messages to trigger future studies of the RE community.

RQ1.1 There is a substantial diﬀerence between initial customer’s ideas
and the requirements documented after requirements elicitation inter-
view sessions. Up to 63% of the documented requirements are dedicated
to reﬁnement of initial ideas, and up to 20% to entirely novel features.
Involved roles are generally preserved, but up to 29% of the requirements
cover novel roles.

Observations. These data quantitatively show the paramount contribu-
tion of the interview-based elicitation to the ﬁnal content of the requirements
document. In particular, this process mostly focuses on reﬁning initial ideas.
Existing literature have provided theoretical
frameworks towards under-
standing requirements elicitation [31, 60]. Other studies have focused on
interviews [22], showing the role of domain knowledge [17, 18], communication
skills [21], and possible mistakes [16]. This is the ﬁrst study that quantitatively
provides evidence on the role of interview-based requirements elicitation, and
its impact on documented requirements. It shows that evolution of require-
ments starts right after their expression, and that a relevant number of features
that were not initially conceived are introduced, even after two short inter-
views. This evolution has been enabled by the interview process, as dialogue
is a primary trigger to establish a common understanding [61], and also facili-
tates creativity. On the other hand, we argue that a crucial role was played by
the usage of diagrams and mock-ups, which the analysts could use to support
early analysis and to show ideas to the customer, as suggested by common
practice [61]. Finally, the background, preliminary research, and creativity of
the analyst can have contributed to this result. From our study, we do not
know which of these diﬀerent factors contributed the most to the ﬁnal content
of the requirements.

⇒ Future research should focus on measuring what are the actual factors
that impacted the most on early requirements evolution, whether dialogue,

Springer Nature 2021 LATEX template

38

Requirements Evolution during Elicitation

diagrams and prototypes, background, or creativity potential of the involved
subjects.

RQ1.2 The relevance given to speciﬁc requirements categories substan-
tially shifts between initial customer’s ideas and documented require-
ments. Less relevance is given to customer-related requirements, with a
decrease of about 59%, in favour of other categories and roles.

Observations. In our study, there were three main roles associated to
requirements, which were in general maintained in the analysts’ user stories.
However, while in the original speciﬁcation (and thus in the mind of the cus-
tomer) the dominant perspective was the one of the administrator—i.e., the
ﬁctional customer—, the majority of the analysts re-balanced the focus among
diﬀerent perspectives and introduced also additional ones. This is very inter-
esting especially because the analysts only spoke with the administrator. This
suggests that stakeholder identiﬁcation, a crucial phase of requirements elic-
itation [62], is second nature to the analysts. This, however, can also create
issues when certain potential system users are not consulted. Identifying the
relevant users is not suﬃcient, as these need also to be interviewed to make
sure to correctly represent their perspective.

At this regard, it is curious to observe that the majority of the analysts
considered the perspective of the camps’ participants and imagined them as
users of the system. Camps are usually available for a large range of ages
including young children who most likely will not own a mobile device and so
will not be a direct user of the system. When analysts are not knowledgeable
of the domain or do not prepare enough [16], they might include requirements
that are inappropriate for the context.

This adds to the conclusion of Hadar et al. [17], who observed that domain
knowledge helps to direct the requirements elicitation process, but also makes
it diﬃcult to listen to customers. Here we see that not only some customer’s
needs may be neglected, but some additional requirements may be intro-
duced that are not appropriate for the context. This observation highlights
the importance of validating requirements with the system’s stakeholders to
gather their feedback also during elicitation and the early stages of modeling
and speciﬁcation [63]. It also highlights that systematic processes need to be
established for validation, as unstructured meetings are not suﬃcient to ensure
that requirements are correctly collected, i.e., all requirements are collected,
and no unwanted requirements are introduced.

⇒ Analysts might include requirements derived from their domain experi-
ence, and exclude relevant ones. Systematic validation of the requirements need
to be enforced to ensure that all relevant requirements are collected, and novel
requirements are agreed upon. Future research should focus on estimating the
impact of requirements validation on the ﬁnal requirements document.

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

39

RQ1.3 Several novel categories of requirements emerge during the elicita-
tion process. Requirements related to privacy and security, as well as other
non-functional aspects, such as advertisement, portability and usability
are common to a relevant number of analysts (i.e., from 8 to 16, out of 30
analysts). Dominant functional aspects are related to data aggregation,
information access, and introduction of features inspired by the software
engineering process.

Observations. A considerable part of the new requirements introduced by
the analysts are nonfunctional requirements (e.g., privacy, usability, porta-
bility, scalability) and this could be a sign of the analysts’ maturity and
competence—also acquired through their university courses. We argue that
analysts’ training and expertise could drive them to ask questions related to
nonfunctional aspects, which could be initially overlooked by the customer, but
that are recognised to be vital to the success of the product [64, 65]. Indeed,
as shown by Pitts and Browne [59], expert analysts use their belief structure
for the construction of mental lists of topics they want to cover in the elici-
tation process and, among them, are nonfunctional requirements that require
expertise and so are often not mentioned by the customers. Therefore, we can
conclude that analysts contribute with the elicitation and documentation of
nonfunctional requirements, which are not considered by the customer.

Analysts also introduce functional features that come from their back-
ground as computer scientists. Ticket systems, search and ﬁltering features,
setting options, and support for data aggregation and analysis, are typically
used by software engineers and system administrators. These are somehow
“ported” by analysts from the software engineering domain to the speciﬁc
application domain. In other terms, the analysts look at the product as it was
going to be used by someone who has a software engineering mindset. The
design of systems according to the viewpoint of computer scientists, with the
consequent shaping of the world in terms of software engineering practices and
principles, has been theorised by Baricco in his essay “The Game” [66]. In our
experiment, we observe this theory in action, and we are not aware of other
studies in RE in which this aspect emerged.

⇒ Further research is needed to answer the question: To what extent soft-
ware engineering practices and principles shape the functionalities supported
by software products?

RQ2.1 There is a substantial diﬀerence between the requirements doc-
umented after interview sessions, and those documented after app store-
inspired elicitation. Up to 42% of the requirements belong to categories
that were not previously considered by the analyst, and up to 17% novel
roles can be introduced.

Observations. App-store inspired elicitation clearly leads to additional
requirements evolution, and allows analysts to discover novel features that were

Springer Nature 2021 LATEX template

40

Requirements Evolution during Elicitation

not considered in the previous phase. Its contribution to the ﬁnal set of require-
ments is therefore strongly relevant, and the analysis of similar products in
the market should be a mandatory step in requirements elicitation. App store-
inspired elicitation is frequently practiced by app developers, to check what is
the position of their product in the market, and also to feed the process of idea
generation during the product concept phase [9]. While previous work focused
on supporting this activity with automated recommendation tools (see, e.g., [6–
8]), this is the ﬁrst work that quantitatively shows how much is the additional
contribution to documented requirements given by browsing similar products.
Furthermore, the recent survey by Dabrowski et al. [25] has observed that lim-
ited evidence is available to show that mining the app store is actually useful
for software engineering. Our work provides this missing evidence, also show-
ing how much this can be useful. In the many development contexts in which
app stores are not available (e.g., enterprise software, business, embedded soft-
ware), diﬀerent forms of market analysis should be practiced, to get inspiration
from similar products. Studies on natural language processing (NLP) tools
to support these tasks have been performed—e.g., based on the analysis of
brochures of competing products [37] or online descriptions [39, 67]—and could
provide a valid alternative to support market analysis in these contexts.

In our evaluation, we did not speciﬁcally analyse what are the app
store browsing and selection strategies that contributed the most to the
observed requirements evolution. Future research should investigate these
aspects, to devise practical strategies of analysts, which can in turn inform the
development of recommender systems.

⇒ It should be also noted that, in this study, app store-inspired elicitation
comes after interviews, and we do not know what could be the results if the
two phases were swapped, or if just app store-inspired elicitation was carried
out. Future studies are needed with a within-subjects crossover design (to
compare order eﬀects), and with a between-subjects design (to compare the
two elicitation styles in parallel), to clarify these aspects.

RQ2.2 The relevance given to speciﬁc requirements categories shifts
between previously documented requirements and additional ones intro-
duced after app store-inspired elicitation. The categories that were part
of the initial ideas still dominate on average (71% of requirements), but
become less relevant by 23%. More relevance (increase by 45%) is given
to categories that were introduced after interview-based elicitation, and
in particular to usability aspects. A similar behaviour is observed also for
roles, with an increase of requirements dedicated to roles introduced after
interview-based elicitation (100% increase), and in particular the generic
“user”, and a decrease of attention towards customer-related roles (20%).

Observations. The app store-inspired elicitation activity helps analysts to
reﬁne features that were developed during interview-based elicitation, and
leads to further evolution of the requirements. The visualisation of realised

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

41

products, and the interaction with them—we recall that analysts were asked
to download and try the products—helps to better focus on usability aspects,
and to understand what could be the possible usability needs of future users.
App store-inspired elicitation helps to put more emphasis on the generic role
of “user”, rather than on the needs of the customer, thereby expanding also
the potential public of the product itself. Furthermore, requirements concern-
ing communication, already well elaborated in the previous phases, become
even more important now. Many apps are actually focused on communication,
information sharing and social media-related aspects and this could have trig-
gered higher attention on this topic. It is also interesting to notice that security
and privacy features, introduced after interview-based elicitation, becomes less
relevant in this phase. This suggests that these types of requirements are not
triggered by the app browsing activity, despite their relevance for app devel-
opment recognised by the abundance of research in the area, e.g., concerning
privacy policies [68, 69].

Apparently, the introduction of security and privacy requirements is strictly
a contribution of the analysts’ competence, as it was not initially triggered by
the customer, and it is not emphasised further by app store-inspired elicitation.
It is also interesting to contrast the answer to RQ2.2 with the results of
RQ2.1. Indeed, RQ2.1 focuses on the novelty rate for speciﬁc analysts—i.e.,
a user story was considered as A if its category was novel for the analyst.
However, the category could also be identiﬁed previously by other analysts.
Instead, RQ2.2 considers aggregate data, i.e., the contribution of the speciﬁc
analyst to the whole set of novel categories. RQ2.1 shows that the novelty rate
is surprisingly high, while RQ2.2 shows that the greater increase concerns cat-
egories that were already identiﬁed by some analysts in the previous phase.
This means that categories are discovered during app store-inspired elicita-
tion, but a substantial part of them were already discovered by other analysts
through interviews.

⇒ Therefore, interview-based elicitation or app store-inspired elicitation
frequently lead to categories in the same set. One elicitation approach or the
other can be more appropriate, depending on the analyst’s attitude, to discover
certain requirements categories. This reinforces the need to apply both the
approaches to produce a complete requirements document.

RQ2.3 Novel categories of requirements are produced after app store-
inspired elicitation. In particular, the review of apps enabled the intro-
duction of functional features not considered before, and related to maps
and direction, payment options, and personalisation.

Observations. Besides communication-related and social media aspects, one
of the crucial features of mobile apps is geo-localisation. Aspects related to
maps and directions are therefore naturally triggered by browsing apps. As
noticed by one of the respondents of the survey of Al-Subaihin et al. [9], users

Springer Nature 2021 LATEX template

42

Requirements Evolution during Elicitation

have been accustomed to a set of features that become de facto a must for a
new project, and geo-localisation related features are among these ones.

Browsing the market also increases attention to market-related issues, and
in particular payment options. Looking at the diﬀerent payment plans made
available by apps, and considering the feedback of users at this regard, can
highly help the analysts to design an appropriate business model for their
product.

⇒ The presence of payment-related aspects in the novel requirements is
particularly interesting, as business models of mobile apps are still an emerging
research area [70]. Out results show that browsing similar apps does not only
help to validate initial ideas, but can also help to plan for a proﬁtable business.

7 Threats to Validity

Construct Validity

The main constructs of
ideas”, and “documented
interest are “initial
requirements”—after interview-based, and after app store-inspired elicitation.
The construct of “initial ideas” is a somewhat vague concept, which is strictly
related to the notion of pre-requirements introduced by Hayes et al. [34]. We
reify the intuitive meaning of this concept through a form that is well deﬁned
in the literature, and that can make it comparable with the construct of “doc-
umented requirements”, namely user stories. In analysing initial ideas—and
their counterpart, documented requirements—through the user story repre-
sentation, we consider multiple rate variables that are related to subjective
evaluations. We mitigate subjectivity threats through the triangulation process
described in Sect. 3.2.

The list of user stories that was used to reify initial ideas was written before-
hand by other authors, and not by our ﬁctional customer. In other terms, what
we actually use is his understanding of the ideas of someone else, which is not
the construct we are interested in. However, even in real contexts, the subject
who speaks with a requirement analyst is often someone who has collected dif-
ferent ideas from other subjects. Furthermore, if we would ask our customer
to write down user stories for his own initial ideas, the act of writing would
be a further bias, as the documented ideas would not be “initial” anymore.
Given these limitations, also due to the complexity of the considered problem,
we argue that our design represents an acceptable trade-oﬀ between construct
validity and potential bias that could be introduced with a diﬀerent design.

In relation to construct validity, it should be noticed that we consider the
contribution of app store-driven elicitation only in the form of extension of
the documented requirements. Indeed, the analysts could not modify the user
stories they previously wrote, but only add further ones. We made this choice
to have a more manageable design. Our conclusions about the contribution of
app store-driven elicitation therefore do not apply to edit or deletion operations
that could realistically occur.

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

43

We also notice that the extension of requirements after app store analysis
is performed before the software is developed. This is a realistic assumption,
as the survey of Al-Subaihin et al. [9] that 65% of developers browse the app
stores with the purpose of validating the app’s idea.

A ﬁnal threat to construct validity concerns the indication given to ana-
lysts on the number of user stories to be produced in the two phases (50
to 60, and 20, respectively). This was due to the need to obtain comparable
samples—also considering the number of original user stories—so as to facili-
tate statistical analysis. It should be noted that the numbers were given as an
indication, and not as a strict upper or lower thresholds, and analysts actually
produced user stories in the neighborhood of the indicated values. We acknowl-
edge that some analysts could have added user stories to reach the suggested
numbers. Nevertheless, even in these cases, we argue that the observed rates
and categories are still representative of the main point of attention of the
analysts during requirements documentation—i.e., original ideas, novel ideas,
or app-store inspired ideas—which is what our study wants to investigate.

Internal Validity

The initial user stories were studied by the ﬁctional customer, and represent
his interpretation of these initial ideas, which cannot be considered entirely
faithful. Furthermore, given the repetition of interviews involving the same
customer, a learning bias could not be entirely avoided. These elements could
lead to a partial discrepancy between the user stories and what the customer
communicated to the analysts during the interviews. However, the ﬁctional
customer is a trained research assistant and was asked to provide uniform
interviews to the diﬀerent analysts. He was asked to stick as much as possible
to the initial user stories, while limiting further elaboration to the questions
asked by analysts, as it would happen in a real setting. We believe that this
is a suﬃcient countermeasure in the adopted context to guarantee uniform
treatments to all analysts.

The choice of the customer as one of the two researchers who performed the
analysis of the user stories might create bias, as well as asymmetry between the
results of the two researchers performing the analysis. However, the validity
procedure for the analysis includes many reconciliation moments which had
the goal of mitigating these threats.

One additional threat aﬀects the app store-inspired phase. Speciﬁcally, it is
not possible to ensure that the user stories produced after this second phase are
entirely due to the app store searches. Indeed, the analysts could have included
content that was derived from additional reﬂections on previous activities,
or could have extended the requirements simply based on their intuition and
experience. To mitigate this threat, we asked analysts to explicitly report the
selected similar apps from which they took inspiration, and to explain why
these were relevant, and what features could be adapted to their context.
We believe that this exercise enabled them to better focus on the features of

Springer Nature 2021 LATEX template

44

Requirements Evolution during Elicitation

similar apps, therefore making them the dominant driver for the extension of
the requirements.

External Validity

Given that this research is a laboratory experiment, intended as a study ori-
ented to identify the relationship between several variables or alternatives under
examination [71], external validity is inherently limited. A limited number of
user stories was used compared to a real system, and a single system was
considered which is not necessarily representative of all types of systems.
In particular, our experimental setting is representative of systems that can
have a mobile version, or include a relevant mobile app-oriented component,
so that comparison with products in the app store market can be possible.
Other systems—e.g., enterprise, business, embedded, etc.—do not have an app
store, and comparison with similar, or competing products need to use dif-
ferent strategies [37, 67]. We also acknowledge that diﬀerent results could be
obtained with another type of system, even if this has a mobile app compo-
nent. However, our quantitative results should be read as indicators of a trend,
and not interpreted as absolute values. Future families of experiments, possi-
bly including diﬀerent app-oriented systems, will be carried out to consolidate
our ﬁndings.

Given the constrained nature of experiments, diﬀerent results may be
obtained in a more realistic setting. However, in a realistic setting some vari-
ables could hardly be controlled (e.g., type of system, amount of user stories
produced), especially if we wish to guarantee uniform treatments, and statis-
tical signiﬁcance. Diﬀerently from a realistic setting, our study did not include
a requirements validation step, in which elicited requirements are conﬁrmed
or rejected by the stakeholders. This was driven by the need to focus on the
impact of analysts’ contributions to the requirements. In future studies, we
plan to focus on the impact of requirements validation, so that a more com-
plete picture can be provided. We used students instead of professionals in
our experiment, as it is common and widely accepted in software engineering
research [72–74]. Most of the involved participants also work as professional
developers or analysts.

The length of the interview might be limited with respect to the size of the
system. However, this choice is in line with similar studies having a comparable
setting (e.g., [16, 20]) and, in addition, we performed two 15 minutes interviews,
that given the preparation of the interviewee and the notwithstanding the
limitations of the experimental context, can be considered suﬃcient to deliver
complete information about the chosen system.

The use of a single stakeholder to present the point of view of diﬀerent
roles also represents a threat for our study and we acknowledge that diﬀerent
results could have been obtained if multiple stakeholders were interviewed.

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

45

Conclusion Validity

Conclusion validity concerns the statistical analysis of results. We veriﬁed
the assumptions of normality before applying parametric tests, and numer-
ical evidence has been provided. Non-parametric tests were used when the
assumptions could not be quantitatively veriﬁed. A residual threat concerns
the multiple comparison problem [75]. Indeed, in our study we perform mul-
tiple related tests on the same data, and we acknowledge that some observed
diﬀerences could be due to chance. However, this possibility is limited for those
cases in which the p-value is particularly low, i.e., Table 3, 5, and 9, while
it is present for Table 10—a Bonferroni correction would lead to α = 0.025,
which would lead to inconclusive results for both rows of the table.

8 Conclusion

Requirements start from unexpressed ideas to be transformed into documented
needs, and eventually realised into (satisﬁed by) speciﬁcations and products.
Understanding the evolution of requirements at their early stages can con-
tribute to understand what are the most appropriate elicitation strategies to
adopt. In this paper, we study early requirements evolution, when they pass
from initial customer ideas into documented needs, and then are extended
through the analysis of similar products from the app stores. To this end, we
perform a laboratory experiment involving 30 subjects, and we quantitatively
and qualitatively evaluate this evolution. Our study shows that the elicitation
and documentation process can be regarded as a co-creation activity involv-
ing the contribution of analysts and customers alike. The analyst’s creativity
becomes then central when analysing similar products to take inspiration from
them. The process does not only complete the initial ideas, but often changes
the relevance given to speciﬁc requirements and roles, adds new functionalities,
and introduces nonfunctional requirements. Our work contributes to theory
in RE, and should be regarded as an empirically grounded starting point to
better understand the transition from ideas into products. Furthermore, our
work is also the ﬁrst one in which traditional interview-based elicitation and
app store-inspired elicitation are combined, showing how these provide com-
plementary contributions to the ﬁnal content of the requirements document.
Finally, our work is also the ﬁrst one that provides quantitative evidence of
how much app store mining can be useful for RE, thus addressing part of the
limitations observed by Dabrowski et al. [25] concerning the limited evidence
of practical utility of this practice.

It is worth remarking that an experiment as inherent limitations [71] that
hamper generalisation of the results. While the speciﬁc quantitative results
observed may be diﬀerent in real contexts, the main messages of our study
remain valid: 1. in interview-based elicitation, requirements are not elicited
but co-created by stakeholders and analysts; 2. interviews and app store analy-
sis play complementary roles in requirements deﬁnition; 3. app store analysis
provides a relevant contribution in practice.

Springer Nature 2021 LATEX template

46

Requirements Evolution during Elicitation

At this stage, we looked into the elicitation and documentation process as
a black box, and did not investigate the impact of the diﬀerent means (mock-
ups, prototypes) used for the analysis, and their relationship with the results.
Future work oriented to unpack this black-box will address this issue. Fur-
thermore, our work focused on quantitative analysis, and did not investigate
the types of apps selected by the analysts, the strategies adopted to identify
them, or the viewpoints of participants of advantages and disadvantages of the
diﬀerent elicitation techniques. These aspects will be studied in future work.
Finally, we also aim to observe the further evolution of the requirements into
the actual products developed, to have a complete trace of their transforma-
tion. This study can serve as a baseline to support future automated software
engineering methods oriented to manage requirements evolution.

Acknowledgments. This work was partially supported by National MIUR-
PRIN 2020TL3X8X project T-LADIES (Typeful Language Adaptation for
Dynamic, Interacting and Evolving Systems) and by the National Science
Foundation under grant CCF-1718377.

References

[1] Zowghi, D., Coulin, C.: In: Aurum, A., Wohlin, C. (eds.) Require-
ments elicitation: A survey of techniques, approaches, and tools, pp.
19–46. Springer, Berlin, Heidelberg (2005). https://doi.org/10.1007/
3-540-28244-0 2

[2] Dieste, O., Juristo, N.: Systematic review and aggregation of empir-
ical studies on elicitation techniques. IEEE Transactions on Software
Engineering 37(2), 283–304 (2010)

[3] Fern´andez, D.M., Wagner, S., Kalinowski, M., Felderer, M., Mafra, P.,
Vetr`o, A., Conte, T., Christiansson, M.-T., Greer, D., Lassenius, C., et
al.: Naming the pain in requirements engineering. Empirical Software
Engineering 22(5), 2298–2338 (2017)

[4] Palomares, C., Franch, X., Quer, C., Chatzipetrou, P., L´opez, L.,
Gorschek, T.: The state-of-practice in requirements elicitation: An
extended interview study at 12 companies. Requirements Engineering
26(2), 273–299 (2021). https://doi.org/10.1007/s00766-020-00345-x

[5] Sarro, F., Al-Subaihin, A.A., Harman, M., Jia, Y., Martin, W., Zhang, Y.:
Feature lifecycles as they spread, migrate, remain, and die in app stores.
In: 2015 IEEE 23rd International Requirements Engineering Conference
(RE), pp. 76–85 (2015). IEEE

[6] Chen, X., Zou, Q., Fan, B., Zheng, Z., Luo, X.: Recommending soft-
ware features for mobile applications based on user interface comparison.
Requirements Engineering 24(4), 545–559 (2019)

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

47

[7] Liu, Y., Liu, L., Liu, H., Li, S.: Information recommendation based
on domain knowledge in app descriptions for improving the quality of
requirements. IEEE Access 7, 9501–9514 (2019)

[8] Jiang, H., Zhang, J., Li, X., Ren, Z., Lo, D., Wu, X., Luo, Z.: Recom-
mending new features from mobile app descriptions. ACM Transactions
on Software Engineering and Methodology (TOSEM) 28(4), 1–29 (2019)

[9] Al-Subaihin, A.A., Sarro, F., Black, S., Capra, L., Harman, M.: App store
eﬀects on software engineering practices. IEEE Transactions on Software
Engineering 47(2), 300–319 (2019)

[10] Maalej, W., Kurtanovi´c, Z., Nabil, H., Stanik, C.: On the automatic
classiﬁcation of app reviews. Requirements Engineering 21(3), 311–331
(2016)

[11] Martin, W., Sarro, F., Jia, Y., Zhang, Y., Harman, M.: A survey of app
store analysis for software engineering. IEEE Transactions on Software
Engineering 43(9), 817–847 (2016)

[12] Jha, N., Mahmoud, A.: Mining non-functional requirements from app

store reviews. Empirical Software Engineering 24(6), 3659–3695 (2019)

[13] Wang, C., Daneva, M., van Sinderen, M., Liang, P.: A systematic map-
ping study on crowdsourced requirements engineering using user feedback.
Journal of Software: Evolution and Process 31(10), 2199 (2019)

[14] Ferrari, A., Spoletini, P., Donati, B., Zowghi, D., Gnesi, S.: Interview
review: Detecting latent ambiguities to improve the requirements elicita-
tion process. In: 2017 IEEE 25th International Requirements Engineering
Conference (RE), pp. 400–405 (2017). IEEE

[15] Salger, F.: Requirements reviews revisited: Residual challenges and open
research questions. In: 2013 21st IEEE International Requirements Engi-
neering Conference (RE), pp. 250–255 (2013). IEEE

[16] Bano, M., Zowghi, D., Ferrari, A., Spoletini, P., Donati, B.: Teaching
requirements elicitation interviews: An empirical study of learning from
mistakes. Requirements Engineering 24(3), 259–289 (2019)

[17] Hadar, I., Soﬀer, P., Kenzi, K.: The role of domain knowledge in
requirements elicitation via interviews: An exploratory study. Require-
ments Engineering 19(2), 143–159 (2014). https://doi.org/10.1007/
s00766-012-0163-2

[18] Niknafs, A., Berry, D.M.: The impact of domain knowledge on
requirements engineering activities. Empirical

the eﬀectiveness of

Springer Nature 2021 LATEX template

48

Requirements Evolution during Elicitation

Software Engineering 22(1), 80–133 (2017). https://doi.org/10.1007/
s10664-015-9416-2

[19] Ferrari, A., Spoletini, P., Gnesi, S.: Ambiguity and tacit knowledge
in requirements elicitation interviews. Requirements Engineering 21(3),
333–355 (2016)

[20] Ferrari, A., Spoletini, P., Bano, M., Zowghi, D.: SaPeer and Revers-
eSaPeer: Teaching requirements elicitation interviews with role-playing
and role reversal. Requirements Engineering 25(4), 417–438 (2020)

[21] Coughlan, J., Macredie, R.D.: Eﬀective communication in requirements
elicitation: A comparison of methodologies. Requirements Engineering
7(2), 47–60 (2002)

[22] Davis, A., Dieste, O., Hickey, A., Juristo, N., Moreno, A.M.: Eﬀectiveness
of requirements elicitation techniques: Empirical results derived from a
systematic review. In: 14th IEEE International Requirements Engineer-
ing Conference (RE’06), pp. 179–188 (2006). https://doi.org/10.1109/RE.
2006.17

[23] Distanont, A., Haapasalo, H., Vaananen, M., Lehto, J., et al.: The
engagement between knowledge transfer and requirements engineering.
International Journal of Management, Knowledge and Learning 1(2),
131–156 (2012)

[24] Zhao, L., Alhoshan, W., Ferrari, A., Letsholo, K.J., Ajagbe, M.A.,
Chioasca, E.-V., Batista-Navarro, R.T.: Natural language processing for
requirements engineering: A systematic mapping study. ACM Computing
Surveys (CSUR) 54(3), 1–41 (2021)

[25] Dabrowski, J., Letier, E., Perini, A., Susi, A.: Analysing app reviews for
software engineering: A systematic literature review. Empirical Software
Engineering 27(2), 1–63 (2022)

[26] Ferrari, A., Spoletini, P., Debnath, S.: Replication Package - How Do
Requirements Evolve During Elicitation? An Empirical Study Combin-
ing Interviews and App Store Analysis. https://doi.org/10.5281/zenodo.
6475039

[27] Debnath, S., Spoletini, P., Ferrari, A.: From ideas to expressed needs:
An empirical study on the evolution of requirements during elicitation.
In: 29th IEEE International Requirements Engineering Conference, RE
2021, Notre Dame, IN, USA, September 20-24, 2021, pp. 233–244 (2021).
https://doi.org/10.1109/RE51729.2021.00028

[28] Harker, S.D.P., Eason, K.D., Dobson, J.E.: The change and evolution of

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

49

requirements as a challenge to the practice of software engineering. In:
[1993] Proceedings of the IEEE International Symposium on Require-
ments Engineering, pp. 266–272 (1993). https://doi.org/10.1109/ISRE.
1993.324847

[29] Crowne, M.: Why software product startups fail and what to do about it.
evolution of software product development in startup companies. In: IEEE
International Engineering Management Conference, pp. 338–343 (2002).
https://doi.org/10.1109/IEMC.2002.1038454

[30] Grubb, A.M., Chechik, M.: Looking into the crystal ball: Requirements
evolution over time. In: 2016 IEEE 24th International Requirements Engi-
neering Conference (RE), pp. 86–95 (2016). https://doi.org/10.1109/RE.
2016.45. IEEE

[31] Zowghi, D., Gervasi, V.: On the interplay between consistency, com-
pleteness, and correctness in requirements evolution. Information and
Software Technology 45(14), 993–1009 (2003). https://doi.org/10.1016/
S0950-5849(03)00100-9

[32] Grubb, A.M., Chechik, M.: Formal reasoning for analyzing goal models
that evolve over time. Requirements Engineering 26(3), 423–457 (2021)

[33] Ali, R., Dalpiaz, F., Giorgini, P., Silva Souza, V.: Requirements evolution:
From assumptions to reality, vol. 81, pp. 372–382 (2011). https://doi.org/
10.1007/978-3-642-21759-3 27

[34] Hayes, J.H., Antoniol, G., Gu´eh´eneuc, Y.-G.: Prereqir: Recovering pre-
requirements via cluster analysis. In: 2008 15th Working Conference on
Reverse Engineering, pp. 165–174 (2008). IEEE

[35] Fu, B., Lin, J., Li, L., Faloutsos, C., Hong, J., Sadeh, N.: Why people
hate your app: Making sense of user feedback in a mobile app store.
In: Proceedings of the 19th ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining, pp. 1276–1284 (2013)

[36] Liu, H., Wang, Y., Liu, Y., Gao, S.: Supporting features updating of apps
by analyzing similar products in app stores. Information Sciences 580,
129–151 (2021)

[37] Ferrari, A., Spagnolo, G.O., Dell’Orletta, F.: Mining commonalities and
variabilities from natural language documents. In: Proceedings of the 17th
International Software Product Line Conference, pp. 116–120 (2013)

[38] Li, Y., Schulze, S., Saake, G.: Reverse engineering variability from natural
language documents: A systematic literature review. In: Proceedings of

Springer Nature 2021 LATEX template

50

Requirements Evolution during Elicitation

the 21st International Systems and Software Product Line Conference-
Volume A, pp. 133–142 (2017)

[39] Davril, J.-M., Delfosse, E., Hariri, N., Acher, M., Cleland-Huang, J., Hey-
mans, P.: Feature model extraction from large collections of informal
product descriptions. In: Proceedings of the 2013 9th Joint Meeting on
Foundations of Software Engineering, pp. 290–300 (2013)

[40] Auch, M., Weber, M., Mandl, P., Wolﬀ, C.: Similarity-based analyses on
software applications: A systematic literature review. Journal of Systems
and Software 168, 110669 (2020)

[41] Carre˜no, L.V.G., Winbladh, K.: Analysis of user comments: An approach
for software requirements evolution. In: 2013 35th International Confer-
ence on Software Engineering (ICSE), pp. 582–591 (2013). https://doi.
org/10.1109/ICSE.2013.6606604

[42] Pagano, D., Maalej, W.: User feedback in the appstore: An empiri-
cal study. In: 2013 21st IEEE International Requirements Engineering
Conference (RE), pp. 125–134 (2013). IEEE

[43] Guzman, E., Ibrahim, M., Glinz, M.: A little bird told me: Mining tweets
for requirements and software evolution. In: 2017 IEEE 25th International
Requirements Engineering Conference (RE), pp. 11–20 (2017). https://
doi.org/10.1109/RE.2017.88

[44] Khan, J., Liu, L., Wen, L., Ali, R.: Crowd intelligence in requirements
engineering: Current status and future directions, pp. 245–261 (2019).
https://doi.org/10.1007/978-3-030-15538-4 18

[45] Morales-Ramirez, I., Kifetew, F.M., Perini, A.: Speech-acts based analysis
for requirements discovery from online discussions. Information Systems
86, 94–112 (2019). https://doi.org/10.1016/j.is.2018.08.003

[46] Robertson, J.: Requirements analysts must also be inventors. IEEE

Software 22(1), 48 (2005). https://doi.org/10.1109/MS.2005.16

[47] Lemos, J., Alves, C., Duboc, L., Rodrigues, G.: A systematic map-
ping study on creativity in requirements engineering. Proceedings of
the ACM Symposium on Applied Computing (2012). https://doi.org/10.
1145/2245276.2231945

[48] Maiden, N., Jones, S., Pitts, I.K., Neill, R., Zachos, K., Milne, A.: Require-
ments engineering as creative problem solving: A research agenda for idea
ﬁnding, pp. 57–66 (2010). https://doi.org/10.1109/RE.2010.16

[49] Sternberg, R.J.: Handbook of Creativity. Cambridge University Press,

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

51

Cambridge, UK (1999)

[50] Nguyen, L., Shanks, G.: A framework for understanding creativity in
requirements engineering. Information and Software Technology 51(3),
655–662 (2009). https://doi.org/10.1016/j.infsof.2008.09.002

[51] Maiden, N., Robertson, S.: Integrating creativity into requirements pro-
cesses: Experiences with an air traﬃc management system. In: 13th
IEEE International Conference on Requirements Engineering (RE’05),
pp. 105–114 (2005). https://doi.org/10.1109/RE.2005.34

[52] Herrmann, A., Mich, L., Berry, D.M.: Creativity techniques for require-
ments elicitation: Comparing four-step epmcreate-based processes. In:
2018 IEEE 7th International Workshop on Empirical Requirements Engi-
neering (EmpiRE), pp. 1–7 (2018). https://doi.org/10.1109/EmpiRE.
2018.00008

[53] Mahaux, M., Nguyen, L., Gotel, O., Mich, L., Mavin, A., Schmid, K.: Col-
laborative creativity in requirements engineering: Analysis and practical
advice. In: IEEE 7th International Conference on Research Challenges in
Information Science (RCIS) (2013). https://doi.org/10.1109/RCIS.2013.
6577678

[54] Grube, P.P., Schmid, K.: Selecting creativity techniques for innovative
requirements engineering. In: 2008 Third International Workshop on
Multimedia and Enjoyable Requirements Engineering - Beyond Mere
Descriptions and with More Fun and Games, pp. 32–36 (2008). https:
//doi.org/10.1109/MERE.2008.6

[55] Svensson, R.B., Taghavianfar, M.: Selecting creativity techniques for cre-
ative requirements: An evaluation of four techniques using creativity
workshops. In: 2015 IEEE 23rd International Requirements Engineer-
ing Conference (RE), pp. 66–75 (2015). https://doi.org/10.1109/RE.2015.
7320409

[56] Horkoﬀ, J., Maiden, N., Lockerbie, J.: Creativity and goal modeling for
software requirements engineering. C&C ’15, pp. 165–168. ACM, New
York, NY (2015). https://doi.org/10.1145/2757226.2764544

[57] Horkoﬀ, J., Maiden, N.A.M.: Creative leaf: A creative iStar modeling tool.
In: Proceedings of the Ninth International I* Workshop. CEUR Work-
shop Proceedings, vol. 1674, pp. 25–30. CEUR-WS.org, Sun Site Central
Europe (2016)

[58] Dalpiaz, F.: Requirements Data Sets (user Stories). http://dx.doi.org/10.

17632/7zbk8zsd8y.1

Springer Nature 2021 LATEX template

52

Requirements Evolution during Elicitation

[59] Pitts, M., Browne, G.: Stopping behavior of systems analysts during
information requirements elicitation. Journal of Management Informa-
tion Systems 21, 203–226 (2004). https://doi.org/10.1080/07421222.2004.
11045795

[60] Gervasi, V., Gacitua, R., Rounceﬁeld, M., Sawyer, P., Kof, L., Ma,
L., Piwek, P., De Roeck, A., Willis, A., Yang, H., et al.: Unpacking
tacit knowledge for requirements engineering. In: Managing Requirements
Knowledge, pp. 23–47. Springer, Berlin Heidelberg (2013)

[61] Sutcliﬀe, A., Sawyer, P.: Requirements elicitation: Towards the unknown
unknowns. In: 2013 21st IEEE International Requirements Engineering
Conference (RE), pp. 92–104 (2013). https://doi.org/10.1109/RE.2013.
6636709

[62] Pacheco, C., Garcia, I.: A systematic literature review of stakeholder iden-
tiﬁcation methods in requirements elicitation. Journal of Systems and
Software 85(9), 2171–2181 (2012). https://doi.org/10.1016/j.jss.2012.04.
075

[63] Leite, J.C.S.P., Freeman, P.A.: Requirements validation through view-
point resolution. IEEE Transactions on Software Engineering 17(12),
1253–1269 (1991)

[64] Glinz, M.: On non-functional requirements. In: 15th IEEE International
Requirements Engineering Conference (RE 2007), pp. 21–26 (2007). IEEE

[65] Chung, L., Nixon, B.A., Yu, E., Mylopoulos, J.: Non-functional Require-
ments in Software Engineering vol. 5, (2012). Springer Science & Business
Media

[66] Baricco, A.: The Game, (2019). Einaudi Editore

[67] Dumitru, H., Gibiec, M., Hariri, N., Cleland-Huang, J., Mobasher, B.,
Castro-Herrera, C., Mirakhorli, M.: On-demand feature recommenda-
tions derived from mining public product descriptions. In: Proceedings of
the 33rd International Conference on Software Engineering, pp. 181–190
(2011)

[68] Slavin, R., Wang, X., Hosseini, M.B., Hester, J., Krishnan, R., Bhatia,
J., Breaux, T.D., Niu, J.: Toward a framework for detecting privacy pol-
icy violations in android application code. In: Proceedings of the 38th
International Conference on Software Engineering, pp. 25–36 (2016)

[69] Hatamian, M.: Engineering privacy in smartphone apps: A technical
guideline catalog for app developers. IEEE Access 8, 35429–35445 (2020)

Springer Nature 2021 LATEX template

Requirements Evolution during Elicitation

53

[70] Cristofaro, M.: E-business evolution: An analysis of mobile applications’
business models. Technology Analysis & Strategic Management 32(1),
88–103 (2020)

[71] Stol, K.-J., Fitzgerald, B.: The ABC of software engineering research.
ACM Transactions on Software Engineering and Methodology (TOSEM)
27(3), 1–51 (2018)

[72] Svahnberg, M., Aurum, A., Wohlin, C.: Using students as subjects-an
empirical evaluation. In: Proceedings of the Second ACM-IEEE Interna-
tional Symposium on Empirical Software Engineering and Measurement,
pp. 288–290 (2008)

[73] Falessi, D., Juristo, N., Wohlin, C., Turhan, B., M¨unch, J., Jedlitschka, A.,
Oivo, M.: Empirical software engineering experts on the use of students
and professionals in experiments. Empirical Software Engineering 23(1),
452–489 (2018)

[74] Salman, I., Misirli, A.T., Juristo, N.: Are students representatives of
professionals in software engineering experiments? In: 2015 IEEE/ACM
37th IEEE International Conference on Software Engineering, vol. 1, pp.
666–676 (2015). IEEE

[75] Abdi, H., et al.: Bonferroni and Sid´ak corrections for multiple compar-
isons. Encyclopedia of Measurement and Statistics 3, 103–107 (2007)

