Thermodynamic modeling with uncertainty quantification using the modified 

quasichemical model in quadruplet approximation: Implementation into 

PyCalphad and ESPEI 

Jorge Paz Soldan Palma,a Rushi Gong,a Brandon J. Bocklund,a,b Richard Otis,c Max Poschmann,d 

Markus Piro,d Tatiana G. Levitskaia,e Shenyang Hu,e Nathan Smith,a Yi Wang,a Hojong Kim,a  Zi-

Kui Liu,a and Shun-Li Shang,a,* 

a Department of Materials Science and Engineering, The Pennsylvania State University, University 

Park, PA 16802, USA 

b Lawrence Livermore National Laboratory, Livermore, CA 94550, USA 

c  Engineering  and  Science  Directorate,  Jet  Propulsion  Laboratory,  California  Institute  of 

Technology, Pasadena, CA 91109, USA 

d Faculty of Energy Systems and Nuclear Science, Ontario Tech University, Oshawa, ON, Canada 

e Pacific Northwest National Laboratory, PO Box 999, Richland, WA 99352, USA 

*Corresponding author. E-mail address: sus26@psu.edu 

1 

 
 
 
 
 
 
Abstract:  

The  modified  quasichemical  model  in  the  quadruplet  approximation  (MQMQA)  considers  the 

first-  and  the  second-nearest-neighbor  coordination  and  interactions,  particularly  useful  in 

describing short-range ordering in complex liquids such as molten salts, slag in metal processing, 

and electrolytic solutions. The present work implements the MQMQA into the Python based open-

source  software  PyCalphad  for  thermodynamic  calculations.  This  endeavor  facilitates  the 

development of  MQMQA-based thermodynamic  database  with  uncertainty  quantification (UQ) 

using  the  open-source  software  ESPEI. A  new  database  structure  based  on  Extensible  Markup 

Language (XML) is proposed for ESPEI evaluation of MQMQA model parameters. Using the KF-

NiF2  system  as  an  example,  we  demonstrate  the  successful  implementation  of  MQMQA  in 

PyCalphad through thermodynamic calculations of Gibbs energy, equilibrium quadruplet fractions, 

and  phase  diagram,  as  well  as  database  development  with  UQ  using  ESPEI.  The  present 

implementation  offers  an  open-source  capability  for  performing  CALPHAD  modeling  for 

complex liquids with short-range ordering using MQMQA.  

2 

 
 
 
 
1 

Introduction 

Computational  thermodynamics  via  the  CALPHAD  modeling  approach  [1–3]  is  a  key 

methodology to understand, predict, and optimize materials in terms of thermodynamic properties 

of  individual  phases  −  the  building  blocks  for  the  materials  of  interest  [4,5].  For  example, 

thermodynamics is needed to understand critical features of molten salts used in the Molten Salt 

Reactors  (MSRs)  [6],  optimize  fuel  composition,  and  define  safety  margins  in  order  to  fulfill 

multiple requirements of molten salts such as i) low-melting temperature to decrease the risk of 

freezing and precipitation, ii) low vapor pressure at operating temperatures, iii) high heat capacity 

to store more energy, iv) thermodynamic stability, v) good solubility of fissile and fertile isotopes 

(e.g., 233U, 235U, 238U, and/or 239Pu), and vi) superior corrosion resistance [7,8].  

Thermodynamic  description  of  complex  liquids  of  molten  salts  is  based  mainly  on  the  two-

sublattice  ionic  liquid  model  [9]  or  the  modified  quasichemical  model  (MQM)  [10,11].  In  the 

CALPHAD community, the ionic model is implemented in software tools such as Thermo-Calc 

[12],  FactSage  [13],  Pandat  [14],  OpenCalphad  [15],  and  PyCalphad/ESPEI  [16,17];  while  the 

MQM  and  especially  the  MQM  in  the  quadruplet  approximation  (MQMQA)  models  are 

implemented  mainly  in  FactSage  [13]  and Thermochimica  [18].  Furthermore, there  are several 

formats for thermodynamic databases including the TDB format developed by the Scientific Group 

Thermodata Europe (SGTE) consortium as shown for its molten salts database [19], which can be 

read by all software packages, and the DAT format used by FactSage [13] and Thermochimica 

[18]. The different database formats make it difficult to examine and update models and molten 

salts databases by the whole CALPHAD community.  

3 

 
 
 
In  the  present  work,  the  MQMQA  is  implemented  in  the  Python-based  open-source  software 

packages of PyCalphad [16] and ESPEI [17], making the MQMQA more accessible to the broad 

community. PyCalphad [16] is a Python library for designing thermodynamic models, calculating 

phase diagrams, and investigating phase equilibria using the CALPHAD method. ESPEI [17] is 

designed  for  evaluating  model  parameters  with  PyCalphad  as  the  computational  engine.  The 

present  implementation  takes  the  benefits  of  PyCalphad  and  ESPEI,  such  as  i)  the  prevalent 

scientific Python language ecosystem, ii) high throughput CALPHAD modeling based on Markov 

Chain  Monte  Carlo  (MCMC)  optimization,  and  iii)  uncertainty  quantification  (UQ)  for  both 

models and model parameters.  In addition to the capacity to read thermodynamic databases in the 

DAT format, the present work develops a new Extensible Markup Language (XML) format which 

is platform independent and programming language independent. 

2  MQMQA and its Implementation  

2.1  MQMQA  

In the MQMQA, two sublattices are introduced to account for the first nearest neighbors (FNN) 

and  the  second  nearest  neighbors  (SNN)  interactions  in  a  solution  with  quadruplets  of  four 

constituents  [11,20].  In  molten  salt  systems,  the  two  sublattices  separate  the  cations  from  the 

anions with two cations and two anions.  Figure 1 visualizes a quadruplet (A,B)(X,Y) in a two-

dimensional lattice labeled based on their chemistry [21] with three different categories, i.e., the 

unary quadruplets [A2X2, B2X2, A2Y2, and B2Y2], the binary quadruplets [ABX2 ABY2, A2XY, 

and B2XY], and the  reciprocal  quadruplet  [ABXY].  The SNN  coordination number is  a model 

parameter related to the short-range ordering (SRO) [11]. With the SNN coordination number of 

4 

 
 
 
A in the [ABXY] reciprocal quadruplet denoted by 𝑍AB:XY

A

, the condition of charge neutrality for 

this quadruplet is maintained as follows, 

𝑞A
A
𝑍AB:XY

+

𝑞B
B
𝑍AB:XY

=

𝑞X
X
𝑍AB:XY

+

𝑞Y
Y
𝑍AB:XY

Eq. 1 

where 𝑞𝑖 is the charges of ion 𝑖 (= 𝐴, 𝐵, 𝑋, 𝑜𝑟 𝑌). 

The Gibbs energy of liquid as a function of temperature (T) and composition (x) can be written as  

𝐺𝐿𝑖𝑞𝑢𝑖𝑑 = 𝐺𝑠𝑢𝑟𝑓𝑎𝑐𝑒 − 𝑇𝑆𝑐𝑜𝑛𝑓 + 𝐺𝑒𝑥𝑐𝑒𝑠𝑠 

Eq. 2 

where 𝐺𝑠𝑢𝑟𝑓𝑎𝑐𝑒 represents  the  reference  surface  energy, 𝑆𝑐𝑜𝑛𝑓 the  configurational  entropy,  and 

𝐺𝑒𝑥𝑐𝑒𝑠𝑠 the excess Gibbs energy of liquid. 𝐺𝑠𝑢𝑟𝑓𝑎𝑐𝑒 is expressed as,  

𝐺𝑠𝑢𝑟𝑓𝑎𝑐𝑒 = ∑ ∑ ∑ ∑ 𝑋𝑖𝑗:𝑚𝑛
𝑗=A,B
𝑗≥𝑖

𝑛=X,Y
𝑛≥𝑚

𝑚=X,Y

𝑖=A,B

𝑜
𝐺𝑖𝑗:𝑚𝑛

Eq. 3 

where 𝑋𝑖𝑗:𝑚𝑛 and 𝐺𝑖𝑗:𝑚𝑛

𝑜

 are the mole fraction and the Gibbs energy per mole of  the quadruplet 

[𝑖𝑗𝑚𝑛], respectively [11]. The configurational entropy is approximately represented by, 

−𝑆𝑐𝑜𝑛𝑓/𝑅 = ∑ 𝑋𝑖𝑙𝑛𝑋𝑖

+ ∑ 𝑋𝑚𝑙𝑛𝑋𝑚

𝑖=A,B

𝑚=X,Y

+ ∑ ∑ 𝑋𝑖:𝑚 ln (
𝑚=X,Y

𝑖=A,B

𝑋𝑖:𝑚
𝑌𝑖𝑌𝑚

)

Eq. 4 

+ ∑ ∑ ∑ ∑ 𝑋𝑖𝑗:𝑚𝑛
𝑚=X,Y

𝑖=A,B

𝑗=A,B
𝑗≥𝑖

𝑛=X,Y
𝑛≥𝑚

ln

𝑋𝑖𝑗:𝑚𝑛
𝑒1 𝑋𝑖:𝑛
𝑒1 𝑋𝑗:𝑚
𝑒1
𝑒1 𝑋𝑗:𝑛
𝑓𝑋𝑖:𝑚
𝑒2
𝑒2𝑌𝑛
𝑒2𝑌𝑚
𝑒2𝑌𝑗
𝑌𝑖

(

)

where 𝑋𝑖 is the mole fraction of species 𝑖, 𝑋𝑖:𝑚 the mole fraction of the pair 𝑖: 𝑚, and 𝑅 the gas 

constant. The third term in the right side of Eq. 4 represents the contribution from the FNN, where 

𝑌𝑖 is the coordination equivalent site fraction and can be calculated as follows, 

5 

 
 
 
 
  
 
  
 
 
𝑌𝑖 =

𝑍𝑖𝑋𝑖
∑ 𝑍𝑗𝑋𝑗

𝑗

Eq. 5 

Note that the third and the fourth term of Eq. 4 are based on two different derivations from Pelton 

[11]. The original formalism [21], which is labeled as SUBG in the software FactSage, kept ζ (a 

parameter that relates how many quadruplets emanate from a specific pair) as a constant value. 

However, the new formalism derived by Lambotte and Chartrand [22], denominated as SUBQ in 

FactSage, allows ζ to be a function of composition. This change results in a modified coordination 

equivalent site fraction, Fi,  

𝐹𝑖 = ∑ 𝑋𝑖:𝑚
𝑚

Eq. 6 

and  replaces  the  Yi  term  in  Eq.  4.  These  two  different  formalisms  affect  the  last  term  in  the 

configurational  entropy  expression  in  Eq.  4  as  well.  The  last  term  in  Eq.  4  represents  the 

contribution from the SNN, where 𝑓 is a factor/coefficient that equals to 1 for unary quadruplets, 

2 for binary quadruplets, and 4 for reciprocal quadruplets. Note that the exponents 𝑒1 and 𝑒2 in the 

denominator of the 4th term in Eq. 4 correspond to the symbols SUBG and SUBQ used by FactSage 

[13], with 𝑒1 = 1 and 𝑒2 = 1 for the case of  SUBG;  and 𝑒1 = 0.75 and 𝑒2 = 0.5 for SUBQ. The 

modified  expression  in  SUBQ  gives  a  more  accurate  approximation  of  the  quadruplet 

concentration when a negative value (such as -100 kJ per charge equivalent) for exchange reactions 

in quadruplets is applied in the model [21,22]   

The  excess  Gibbs  energy  𝐺𝑒𝑥𝑐𝑒𝑠𝑠  relates  to  the  formation  Gibbs  energy  of  the  quadruplet, 

𝑒𝑥

∆𝑔𝑞𝑢𝑎𝑑𝑟𝑢𝑝𝑙𝑒𝑡

. For example, the following reaction forms quadruplets,  

6 

 
 
 
 
 
(A2X2) + (B2X2) = 2(ABX2) 

Eq. 7 

where ∆𝑔AB:X2

𝑒𝑥

 of this equation indicates the Gibbs energy change when forming the quadruplet 

[ABX2]. If ∆𝑔AB:X2

𝑒𝑥 = 0, the ideal random mixing occurs. If ∆𝑔AB:X2

𝑒𝑥 < 0, the reaction of Eq. 7 

moves to the right, and the SRO with the [ABX2] SNN pairs is predominant [11]. Considering 

multicomponent systems, Pelton [11] indicated the necessity to describe multicomponent systems 

with appropriate interaction parameters and taking into account what chemical groups the elements 

of interest would belong to. In this case the variables 𝜉𝑖𝑗:𝑋2

 and 𝜒12:𝑋2

 are introduced to the excess 

Gibbs energy expression, where the 𝜉𝑖𝑗:𝑋2

 is defined as follows, 

𝜉𝑖𝑗:𝑋2 = 𝑌𝑖 + ∑ 𝑌𝑘

𝑘

Eq. 8 

where 𝑘 is  the  component  in  the 𝑖-𝑗-𝑘 system  with 𝑗 being  the  asymmetrical  component.  The 

𝜒12:𝑋2is defined as follows, 

∆𝜒12:X2 =

∑

A=1,𝑘

∑

A=12,𝑘,𝑙

∑
∑

B=1,𝑘

B=12,𝑘,𝑙

(𝑋AB:X2 + ∑

𝑌≠𝑋
(𝑋AB:X2 + ∑

𝑌≠𝑋

0.5𝑋AB:XY)

0.5𝑋AB:XY)

Eq. 9 

where 𝑙 is the component in the 𝑖-𝑗-𝑙 system with 𝑖 being the asymmetrical component. It should 

be noted that the terms regarding reciprocal quadruplets in Eq. 9 are only considered in the SUBQ 

category to improve interpolation contributions from the reciprocal quadruplets.  

Through  this  approach  by  Pelton  [11],  one  can  study  the  interpolation  effects  based  on  the 

symmetrical and asymmetrical components in sub-ternary systems. By considering these variables, 

the expression of ∆𝑔AB:X2

𝑒𝑥

 is obtained as follows 

7 

 
 
 
 
∆𝑔AB:X2

𝑒𝑥 = ∆𝑔𝑜 + ∑ 𝜒AB:X2

𝑖

𝑗
𝜒BA:X2

𝑖𝑗
𝑔AB:X2

Eq. 10 

(𝑖+𝑗≥1)

+ ∑ 𝜒AB:X2

𝑖

𝑗
𝜒BA:X2

[∑

(𝑖≥0)
(𝑗≥0)
(𝑘≥1)

𝑙

𝑋𝑙:X

𝑖𝑗𝑘
𝑔AB(𝑙):X2
𝑌X

(1 − 𝜉AB:X2 − 𝜉BA:X2)

𝑘−1

𝑖𝑗𝑘
𝑔AB(𝑚):X2

𝑋𝑚:X

𝑌X𝜉BA:X2

(1 −

𝑘−1

)

𝑋B:X
𝑌X𝜉BA:X2

𝑖𝑗𝑘
𝑔AB(𝑛):X2

𝑋𝑛:X

𝑌X𝜉AB:X2

(1 −

𝑋A:X
𝑌X𝜉AB:X2

𝑘−1

)

+ ∑ 𝑌Y(1 − 𝑌X)𝑘−1

𝑌≠𝑋

+ ∑

𝑚

+ ∑

𝑛

where the first two terms in the right side are binary expressions and the rest terms describe ternary 

interactions with symmetrical and asymmetrical considerations for the components being mixed. 

The first of the three ternary interactions represents the scenario when either component k is the 

asymmetrical component or when all components are symmetrical. The second term is when the 

species B is the asymmetrical component in the system. The third term is when the species A is 

the  asymmetrical  component  in  the  system.  The  final  term  represents  a  reciprocal  ternary 

interaction parameter to describe the interaction between [AB:X2] quadruplet when component Y 

is present. 

2.2 

Implementation of MQMQA into PyCalphad and ESPEI 

Figure 2 shows the flowchart regarding the implementation of MQMQA into PyCalphad, where 

the new features of the present efforts are highlighted by green and the pre-existing features are 

highlighted by blue. The first step of implementation is reading in the database in different formats, 

i.e., the DAT file in the FactSage/ChemSage format [13,18], or the TDB format in Thermo-Calc 

8 

 
 
 
[12], OpenCalphad [15], Pandat [14], and PyCalphad/ESPEI [16,17], or the XML format proposed 

in the present work. 

To  support  a  unified,  on-disk  representation  of  CALPHAD-type  databases  that  avoids 

implementing software-specific extensions to the de facto standard TDB and DAT formats, we 

propose a new database format using XML. Unlike the existing domain specific languages used in 

CALPHAD databases that require each software tool to develop bespoke implementations of non-

standard,  ad  hoc  syntaxes,  XML  is  a  well-established,  standardized  markup  language  that  is 

human-  and  machine-readable.  Virtually  all  programming  languages  have  XML  parsers 

implemented in their standard libraries or in common third-party libraries. To describe the domain-

specific aspects, we use a declarative Relax NG-based schema [23] that uses XML syntax. The 

XML parser for PyCalphad is implemented as a separate plugin package called “PyCalphad-xml” 

[24], that provides function handles that are used by PyCalphad database objects to read, write, 

and validate XML databases using the Relax NG schema provided by the PyCalphad-xml package.  

The second step of implementation is to perform equilibrium calculations (cf., Figure 2) using the 

MQMQA  and  any  other  models  for  specific  phases.  Since  ESPEI  uses  PyCalphad  as  its 

computational  engine,  the  implementation  of  MQMQA  into  PyCalphad  makes  it  possible  for 

ESPEI to perform CALPHAD modeling using MQMQA. UQ of model parameters and MCMC 

for database development are then straightforward; see brief discussion in Sec. 1 as well as the 

discussion in the literature [16,17]. 

9 

 
 
 
 
 
3  Demonstration of Equilibrium Calculations using PyCalphad 

Using the NiF2-KF database modeled by Ocadiz-Flores et al. [25] in terms of MQMQA and the 

FactSage  software,  we  validate  the  implementation  of  MQMQA  in  PyCalphad  [16,26]  by 

performing equilibrium calculations. For the convenience of users, there is also a Jupyter Notebook 

as Supplemental Material to demonstrate the details of calculations.  

Figure 3 shows the calculated Gibbs energy, entropy, and enthalpy of NiF2-KF at 1600 K, which 

is in the liquid phase region using MQMQA in terms of PyCalphad. For the purpose of comparison, 

the Gibbs energies are calculated using PyCalphad [16], Thermochimica [18], and FactSage [13]. 

Figure 3 shows that the calculated results of Gibbs energy, entropy, and enthalpy from PyCalphad 

agree  well  with 

those  from  Thermochimica  and  FactSage, 

indicating 

the  successful 

implementation of MQMQA into PyCalphad. Figure 4 shows the Gibbs energy surface of NiF2-

KF liquid at 1600 K by sampling of the internal degrees of freedom (quadruplet fractions in the 

present  case)  [27].  It  presents  the  overall  surface  at  each  composition  consists  of  different 

configurations of quadruplet fractions and the respective energies that belong to them.  

Figure  5  is  the  calculated  pseudobinary  phase  diagram  of  KF-NiF2  in  comparison  with 

experimental data used to model this system by Ocadiz-Flores et al. [25]. In addition, the calculated 

KF-NiF2 phase diagram  by both  PyCalphad and  Thermochimica  is  shown in  the Supplemental 

Figure S1. It is seen that the phase diagram is correctly reproduced by PyCalphad and is in a good 

agreement with experimental data and the predictions by Thermochimica (c.f., Figure 5 and the 

Supplemental Figure S1). Figure 6 shows the calculated quadruplet fractions as a function of NiF2 

mole fraction, x(NiF2), at 1600 K for the three quadruplets of [K2F2], [Ni2F2], and [KNiF2] in the 

10 

 
 
 
NiF2-KF system. The overall distribution of the [KNiF2] quadruplet skews toward x(NiF2) = 0.38, 

which  relates  to  the  composition  with  the  maximum  SRO  (x(NiF2)  =  0.333)  based  on  the 

coordination numbers chosen in MQMQA.  

4  Demonstration of thermodynamic modeling with UQ using ESPEI  

Once  the  user  provides  (i)  a  thermodynamic  database  with  estimated  values  of  the  adjustable 

parameters  and  (ii)  input  datasets  describing  thermochemical  and  phase  boundary  data,  model 

parameters  in  the  database  can  be  simultaneously  optimized  using  the  MCMC  method  as 

implemented in ESPEI [17]. The statistical distributions of the model parameters are evaluated 

from the samples during MCMC optimization based on the Metropolis criteria [17]. In the present 

work, the excess Gibbs energy of liquid (i.e., ∆𝑔AB:X2

𝑒𝑥

 in Eq. 10) were chosen as model parameters 

and  remodeled  to  quantify  uncertainty  using  a  95%  uncertainty  interval  (or  Bayesian  credible 

intervals containing 95% of the invariant samples). During the CALPHAD modeling process by 

ESPEI/PyCalphad, the Markov chain values can be tracked and the MCMC steps were performed 

until all model parameters converged. Note that 8 chains were selected for each model parameter 

with a total of 800 MCMC iterations performed. The Supplemental Material includes a Jupyter 

Notebook for the details of CALPHAD modeling with UQ. 

Similarly  to  those  in  Sec.  3,  the  KF-NiF2  system  modelled  by  Ocadiz-Flores  et  al.  [25]  were 

selected for demonstration; where the input datasets in the JavaScript Object Notation (JSON) files 

with  phase  boundary  data  were  used  as  constraints  during  the  modeling  process,  see  the 

experimental  data  in  Figure  5  represented  by  symbols  or  the  JSON  files  provided  in  the 

Supplementary Material. Figure 7 shows the evolution of Markov chains during MCMC iterations 

11 

 
 
 
indicated by the log-probability changes for all the chains as a function of iteration. After around 

20 MCMC iterations, the chains are roughly converged to the similar log-probabilities around -

1.48×103, indicating the convergence of MCMC optimization of model parameters. After a total 

of 800 MCMC steps, the modelled parameters values as well as the initial parameters by Ocadiz-

Flores et al. [25] are listed in Table 1; showing no significant change after the present MCMC 

interactions  since  the  present  work  is  only  for  the  purposes  of  demonstration  and  the  initial 

parameters were already modelled by Ocadiz-Flores et al. [25].  

The  uncertainty  of  thermodynamic  properties  can  be  quantified  using  the  UQ  method  after 

CALPHAD  modeling  by  MCMC  [28].  UQ  relies  on  PyCalphad  for  predicting  thermodynamic 

properties  of  interest  and  ESPEI  for  Bayesian  samples  to  leverage  the  distribution  of  model 

parameters and estimate uncertainties based on the estimated Gaussian distribution of input data 

[28]. For the purpose of simplicity, only the results in last MCMC step were used for the present 

UQ study. Note that more MCMC steps cannot improve the UQ results after the convergence of 

MCMC.  As  an  example,  Figure  8  shows  the  uncertainty  of  phase  fractions  as  a  function  of 

temperature with x(NiF2) = 0.32 for the KF-NiF2 system. The plot presents two different invariant 

reactions (KF+NiK2F4 → liquid and NiK2F4 → NiKF3 + liquid) and two two-phase regions (KF + 

NiK2F4 and  NiKF3 + liquid)  before  complete  melting  of  the  system.  It  shows  that  the  eutectic 

reaction of 1075 K has the lowest uncertainty of the invariant reactions, and the liquid + NiKF3 

region has the highest uncertainty based on the shaded region plotted. These results are expected 

since the experimental data for liquidus are more scattered than the measured invariant reactions 

at  1075  K  (see  experimental  data  points  shown  in  Figure  5).  Figure  8  also  shows  that  the 

uncertainties  of  phase  fraction  increase  from  1200  K  to  1400  K,  where  the  peritectic  reaction 

12 

 
 
“NiK2F4→ NiKF3 + liquid” occurs (see also the phase diagram in Figure 5), and then, the NiKF3 

+ liquid two-phase region appears. The shadow regions of NiKF3 and liquid phase indicate that 

the liquidus temperature is with uncertainties from 1300 K to 1400 K at x(NiF2) = 0.32. These 

uncertainty results are expected since data scattering occurs in different experiments [25,29,30] 

when measuring these invariant reaction and liquidus.  

As  another  example,  Figure  9  displays  the  uncertainty  of  the  Ni  activity  as  a  function  of 

composition x(Ni) at 1800 K. The uncertainties of the activity with x(Ni) = 0.15 - 0.25 are large. 

There is no experimental data of activity of Ni at 1800 K. However, the model parameters were 

optimized based on phase boundary data shown in Figure 5, where more scattered experimental 

data points are found in the range of x(Ni) = 0.16 - 0.22 (i.e., x(NiF2) around 0.38 to 0.6). It results 

in larger uncertainty of model parameters in this composition range, leading to larger uncertainty 

of activity calculated from the MCMC process. These results (Figure 8 and Figure 9) demonstrate 

application of UQ to study phase equilibria and thermodynamic properties of solutions modeled 

with MQMQA for the first time.  

5  Summary 

In the present work the modified quasichemical model in the quadruplet approximation (MQMQA) 

is implemented into the Python-based open-source software PyCalphad. It is now possible to use 

the  open-source  software  ESPEI  for  database  development  using  MQMQA  with  uncertainty 

quantification  (UQ). A  new  database  format  based  on  Extensible  Markup  Language  (XML)  is 

proposed to efficiently represent MQMQA models. Using the KF-NiF2 system as an example, the 

capacities of the implemented MQMQA to perform equilibrium thermodynamic calculations and 

13 

 
 
 
develop  new  UQ-enabled  databases  are  demonstrated. The  present  predictions  agree  well  with 

experiments  and  calculated  results  available  in  the  literature,  indicating  the  successful 

implementation  of  MQMQA  into  PyCalphad/ESPEI.  The  present  implementation  makes  the 

MQMQA more accessible to the broad community. 

6  Acknowledgements  

The authors at Penn State acknowledge the financial support by the U.S. Department of Energy 

(DOE) via Award No. DE-NE0008945. Part of this work was performed under the auspices of the 

U.S.  DOE  at  Lawrence  Livermore  National  Laboratory  under  Contract  No.  DE-AC52–

07NA27344. Part of this work was carried out at the Jet Propulsion Laboratory (JPL), California 

Institute of Technology, under a contract with the National Aeronautics and Space Administration 

(80NM0018D0004). Partial support from the Caltech/JPL Innovative Software Initiative program 

is  also  acknowledged.  B.B.  acknowledges  support  from  a  NASA  Space  Technology  Research 

Fellowship (NSTRF 80NSSC18K1168). 

14 

 
 
 
 
 
 
References: 
[1]  H.L.  Lukas,  S.G.  Fries,  B.  Sundman,  Computational  Thermodynamics:  The  CALPHAD 

Method, Cambridge University Press, 2007. 

[2]  N.  Saunders,  A.P.  Miodownik,  CALPHAD  (Calculation  of  Phase  Diagrams):  A 

[4] 

[3] 

Comprehensive Guide, Pergamon, Oxford; New York, 1998. 
Z.-K. Liu, First-Principles Calculations and CALPHAD Modeling of Thermodynamics, J. 
Phase Equilibria Diffus. 30 (2009) 517–534. https://doi.org/10.1007/s11669-009-9570-6. 
Z.  Liu,  Perspective  on  Materials  Genome®,  Chinese  Sci.  Bull.  59  (2014)  1619–1623. 
https://doi.org/10.1007/s11434-013-0072-x. 
L.  Kaufman,  J.  Ågren,  CALPHAD,  first  and  second  generation  –  Birth  of  the  materials 
genome, Scr. Mater. 70 (2014) 3–6. https://doi.org/10.1016/j.scriptamat.2012.12.003. 
[6]  Molten  Salt  Chemistry  Workshop,  Oak  Ridge  National  Laboratory,  2017. 

[5] 

https://www.ornl.gov/content/molten-salt-chemistry-workshop. 

[7]  O.  Beneš,  R.J.M.  Konings,  Thermodynamic  Calculations  of  Molten-Salt  Reactor  Fuel 
Systems, in: Molten Salts Chem., Elsevier, 2013: pp. 49–78. https://doi.org/10.1016/B978-
0-12-398538-5.00004-4. 

[8]  A.E. Danon, O. Muránsky, I. Karatchevtseva, Z. Zhang, Z.J. Li, N. Scales, J.J. Kruzic, L. 
Edwards, Molten salt corrosion (FLiNaK) of a Ni–Mo–Cr alloy and its welds for application 
in  energy-generation  and  energy-storage  systems,  Corros.  Sci.  164  (2020)  108306. 
https://doi.org/10.1016/j.corsci.2019.108306. 

[9]  M. Hillert, B. Jansson, B. Sundman, J. Ågren, A two-sublattice model for molten solutions 
ionization,  Metall.  Trans.  A.  16  (1985)  261–266. 

tendency  for 

with  different 
https://doi.org/10.1007/BF02815307. 

[10]  T.M. Besmann, J. Schorne-Pinto, Developing Practical Models of Complex Salts for Molten 
Salt Reactors, Thermo. 1 (2021) 168–178. https://doi.org/10.3390/thermo1020012. 
[11]  A.D. Pelton, Phase Diagrams and Thermodynamic Modeling of Solutions, Elsevier, 2019. 

https://doi.org/10.1016/C2013-0-19504-9. 

[12]  J.-O. Andersson, T. Helander, L. Höglund, P. Shi, B. Sundman, Thermo-Calc & DICTRA: 
(2002)  273–312. 

science,  Calphad.  26 

for  materials 

tools 

Computational 
https://doi.org/10.1016/S0364-5916(02)00037-8. 

[13]  C.W. Bale, E. Bélisle, P. Chartrand, S.A. Decterov, G. Eriksson, K. Hack, I.-H. Jung, Y.-B. 
Kang,  J.  Melançon,  A.D.  Pelton,  C.  Robelin,  S.  Petersen,  FactSage  thermochemical 
software  and  databases  —  recent  developments,  Calphad.  33  (2009)  295–311. 
https://doi.org/10.1016/j.calphad.2008.09.009. 

[14]  W.  Cao,  S.-L.  Chen,  F.  Zhang,  K.  Wu,  Y.  Yang,  Y.A.  Chang,  R.  Schmid-Fetzer,  W.A. 
Oates, PANDAT software with PanEngine, PanOptimizer and PanPrecipitation for multi-
component  phase  diagram  calculation  and  materials  property  simulation,  Calphad.  33 
(2009) 328–342. https://doi.org/10.1016/j.calphad.2008.08.004. 

[15]  B. Sundman, U.R. Kattner, M. Palumbo, S.G. Fries, OpenCalphad - a free thermodynamic 
software, Integr. Mater. Manuf. Innov. 4 (2015) 1–15. https://doi.org/10.1186/S40192-014-
0029-1/FIGURES/5. 

[16]  R.A.  Otis,  Z.-K.  Liu,  pycalphad:  CALPHAD-based  Computational  Thermodynamics  in 

Python, J. Open Res. Softw. 5 (2017) 1. https://doi.org/10.5334/jors.140. 

[17]  B. Bocklund, R. Otis, A. Egorov, A. Obaied, I. Roslyakova, Z.-K. Liu, ESPEI for efficient 
thermodynamic  database  development,  modification,  and  uncertainty  quantification: 

15 

 
to 
application 
https://doi.org/10.1557/mrc.2019.59. 

Cu–Mg, 

MRS 

Commun. 

9 

(2019) 

618–627. 

[18]  M.H.A.  Piro,  S.  Simunovic,  T.M.  Besmann,  B.J.  Lewis,  W.T.  Thompson,  The 
thermochemistry  library  Thermochimica,  Comput.  Mater.  Sci.  67  (2013)  266–272. 
https://doi.org/10.1016/j.commatsci.2012.09.011. 

[19]  Scientific  Group  Thermodata  Europe 

(SGTE),  Molten  Salts  Database, 

(n.d.). 

https://www.sgte.net/en/sgte-molten-salt-database-salt. 

[20]  M.  Poschmann,  P.  Bajpai,  B.W.N.  Fitzpatrick,  M.H.A.  Piro,  Recent  developments  for 
102341. 

in  Thermochimica,  Calphad. 

(2021) 

salt 

75 

molten 
https://doi.org/10.1016/j.calphad.2021.102341. 

systems 

[21]  A.D. Pelton, P. Chartrand, G. Eriksson, The modified quasi-chemical model: Part IV. Two-
sublattice quadruplet approximation, Metall. Mater. Trans. A Phys. Metall. Mater. Sci. 32 
(2001) 1409–1416. 

[22]  G.  Lambotte,  P.  Chartrand,  Thermodynamic  optimization  of  the  (Na2O  +  SiO2  +  NaF  + 
SiF4)  reciprocal  system  using  the  Modified  Quasichemical  Model  in  the  Quadruplet 
Approximation, J. Chem. Thermodyn. 43 (2011) 1678–1699. 
[23]  RELAX NG, (n.d.). https://relaxng.org/ (accessed April 19, 2022). 
[24]  pycalphad-xml,  (n.d.).  https://github.com/pycalphad/pycalphad-xml  (accessed  April  24, 

2022). 

[25]  J.A. Ocadiz-Flores, E. Capelli, P.E. Raison, R.J.M. Konings, A.L. Smith, Thermodynamic 
assessment of the LiF-NiF2, NaF-NiF2 and KF-NiF2 systems, J. Chem. Thermodyn. 121 
(2018) 17–26. https://doi.org/10.1016/j.jct.2018.01.023. 

[26]  https://pycalphad.org, n.d. 
[27]  R.  Otis,  M.  Emelianenko,  Z.-K.  Liu,  An  improved  sampling  strategy  for  global  energy 
minimization  of  multi-component  systems,  Comput.  Mater.  Sci.  130  (2017)  282–291. 
https://doi.org/10.1016/j.commatsci.2017.01.019. 

[28]  N.H.  Paulson,  B.J.  Bocklund,  R.A.  Otis,  Z.-K.  Liu,  M.  Stan,  Quantified  uncertainty  in 
thermodynamic  modeling  for  materials  design,  Acta  Mater.  174  (2019)  9–15. 
https://doi.org/10.1016/j.actamat.2019.05.017. 

[29]  V.T. Kalinnikov, D.V. Makarov, V.I. Skiba, E.L. Tikhomirova, Phase Diagrams of the NaF-

NiF2 and KF-NiF2 Systems, Russ. J. Inorg. Chem. 44 (1999) 1116–1117. 

[30]  G. Wagner, D. Balz, Berichte der Bunsengesellschaft für physikalische Chemie, 56 (1952) 

574–579. 

16 

 
 
 
 
Figures and Figure Captions: 

Figure 1. Examples of three categories of quadruplets: (a) A2X2 unary quadruplet, (b) ABX2 binary 

quadruplet, and (c) ABXY reciprocal quadruplet. This figure is reproduced based on Pelton et al.’s 

work [21]. 

17 

 
 
 
 
Figure 2. Flowchart that describes the implementation of MQMQA into the PyCalphad software 
[16].  

18 

 
 
 
 
Figure 3. Calculated results of (a) Gibbs energy, (b) enthalpy, and (c) entropy of the liquid phase 
in the KF-NiF2 system as a function of x(NiF2) at 1600 K. The solid red circles are the results 
calculated by PyCalphad, the blue open squares by Thermochimica, and the green open triangles 
by FactSage. These calculations are all based on Ocadiz-Flores’ database [25]. 

19 

 
 
 
 
 
Figure 4. Gibbs energy surface of the liquid phase in the KF-NiF2 system at 1600 K calculated 
using PyCalphad from Ocadiz-Flores’ database [25]. 

20 

 
 
 
 
 
 
Figure 5. Calculated KF-NiF2 phase diagram by PyCalphad using Ocadiz-Flores’ database [25] in 
comparison with experimental data points (the symbols) summarized by Ocadiz-Flores et al. [25]. 

21 

 
 
 
 
 
Figure 6. Quadruplet fractions as a function of x(NiF2) at 1600 K in the liquid phase using Ocadiz-
Flores’s database [25] and calculated by PyCalphad.  

22 

 
 
 
 
 
Figure 7. Convergence of chains in first 50 MCMC iterations and 800 iterations were used for 
MCMC. The y-axis label of ‘- lnprop’ represents the logarithm of the probability with a negative 
sign to make the value positive.  

23 

 
 
 
 
 
 
 
Figure 8. Uncertainties of phase fractions as a function of temperature in the KF-NiF2 system with 
x(NiF2)  =  0.32  predicted  after  the  MCMC.  The  shaded  area  represents  the  95%  high  density 
interval (HDI).  

24 

 
 
 
 
 
 
 
 
Figure 9. Uncertainties of activity of Ni, ACR(NI), as a function of composition x(Ni) in the KF-
NiF2  system  at  1800  K  predicted  after  the  MCMC.  The  shaded  area  represents  the  95%  high 
density interval (HDI). 

25 

 
 
 
 
 
Tables 

Table 1. Gibbs energy parameters of liquid in the KF-NiF2 system after 800 MCMC iterations, 
compared with the initial values from Ocadiz-Flores et al. [25]. 
Parameter values 

Reference 

𝑒𝑥
∆𝑔KNi:F2

= −17062.4 − 13654.3𝜒NiK/F2 

This work after 800 MCMC iterations 

𝑒𝑥
∆𝑔KNi:F2

= −17573 − 15899𝜒NiK/F2 

Ocadiz-Flores et al. [25] 

26 

 
 
 
 
 
 
Supplemental Material  

Note that the files in the following Supplemental Tables can be found also in: 
https://doi.org/10.5281/zenodo.6471272  

Figure  S1.  Predicted  phase  diagrams  of  the  KF-NiF2  system  by  PyCalphad  (symbols)  and 
Thermochimica (lines) in terms of the MQMQA and the database developed by Ocadiz-Flores, et 
al. [25]. 

27 

 
 
 
 
 
 
 
 
 
 
Table S1. List of folder and file names.  
Folder or file name 
pycalphad 

Notes 
A folder with Jupyter notebook example and files for using PyCalphad 
for equilibrium calculations. 
A folder with Jupyter notebook example and files for using ESPEI for 
modeling optimization. 
File with instruction for installation of PyCalphad/ESPEI 

ESPEI 

Installation.md 

Table S2. Explanation of the Jupyter notebook “MQMQA-DEMO.ipynb” in folder “pycalphad”. 
Item 
Purpose 

Comments and notes 
To perform equilibrium calculations for system modelled with MQMQA using 
PyCalphad, including phase diagrams, Gibbs energy, etc. 
Ocadiz_combined.dat 

Input files 

MSTDB_test.dat 

Output files 

MSTDB.xml 

KF-NiF2  database  from  Ocadiz-Flores  et  al., 
DOI: 10.1016/j.jct.2018.01.023 
MSTDB  from  T.  Besmann  et  al.,  DOI: 
10.1016/j.jnucmat.2022.153631 
MSTDB in XML format. 

Table S3. Explanation of the Jupyter notebook “MCMC-DEMO.ipynb” in folder “ESPEI”. 
Item 
Purpose 

Comments and notes 
To perform optimization for systems with MQMQA using ESPEI, where the 
databases are in XML format.  
input_data 

Input files 

Output files 

Subfolder containing experimental data of KF-NiF2 
summarized  by  Ocadiz-Flores  et  al.,  DOI: 
10.1016/j.jct.2018.01.023. 
Setting file for EPSEI running in yaml format. 

ESPEI_demo.yaml 
Ocadiz_combined.dat  KF-NiF2  database  from  Ocadiz-Flores  et  al.,  DOI: 
10.1016/j.jct.2018.01.023. 
Ocadiz_combined.xml  Ocadiz_combined.dat  converted  into  XML  format. 
Note  that  the  adjustable  parameters  (starting  from 
VV)  should  be  set  before  running  MCMC;  see 
details in https://espei.org.  
JSON  file  to  specify  models  of  phases  in  the 
database. 
Output database after MCMC optimization. 
File recording probability of chains during MCMC. 
Trace file for MCMC. 

MCMC_demo.xml 
lnprob_demo.npy 
trace_demo.npy 

Phases.json 

28 

 
 
 
 
 
 
 
