Noname manuscript No.
(will be inserted by the editor)

Envelopes and Waves: Safe Multivehicle Collision
Avoidance for Horizontal Non-deterministic Turns

Yanni Kouskoulas · T. J. Machado · Daniel Genin · Aurora Schmidt ·
Ivan Papusha · Joshua Brul´e

2
2
0
2

y
a
M
0
1

]

O
L
.
s
c
[

1
v
3
3
8
4
0
.
5
0
2
2
:
v
i
X
r
a

the date of receipt and acceptance should be inserted later

Abstract We present an approach to analyzing the
safety of asynchronous, independent, non-deterministic,
turn-to-bearing horizontal maneuvers for two vehicles.
Future turn rates, ﬁnal bearings, and continuously vary-
ing ground speeds throughout the encounter are un-
known but restricted to known ranges. We develop a
library of formal proofs about turning kinematics, and
apply the library to create a formally veriﬁed timing
computation. Additionally, we create a technique that
evaluates future collision possibilities that is based on
waves of position possibilities and relies on the timing
computation. The result either determines that the en-
counter will be collision-free, or computes a safe overap-
proximation for when and where collisions may occur.

1 Introduction

Autonomous and semi-autonomous systems that con-
trol ground vehicles, boats, and aircraft all need to rea-

This research was partially funded under the sponsorship of
the Federal Aviation Administration Traﬃc Alert & Collision
Avoidance System (TCAS) Program Oﬃce (PO) AJM-42 un-
der contract number DTFAWA-11-C-00074 as well as inter-
nal funds from the Johns Hopkins University Applied Physics
Laboratory.

Y. Kouskoulas
No Aﬃliation
E-mail: yxkous@gmail.com

T. J. Machado
New Mexico State University
E-mail: tjm@nmsu.edu

D. Genin · A. Schmidt · I. Papusha · J. Brul´e
Johns Hopkins University Applied Physics Laboratory
11100 Johns Hopkins Rd, Laurel, MD 20723, USA
E-mail: daniel.genin@jhuapl.edu

son about horizontal turns in order to create plans for
future motion that meet system objectives.

We are speciﬁcally motivated by aircraft collision
avoidance maneuvers that combine vertical and hor-
izontal advice to ensure multi-aircraft encounters are
safely separated. These maneuvers advise aircraft to
turn at the same time they change vertical velocity—
the objective being to keep the aircraft separated in
altitude during periods when their positions might co-
incide horizontally. This requires correctly computing
the time interval that describes when in the future both
aircraft might come into horizontal conﬂict.

This paper develops a formalization of non-deter-
ministic turn-to-bearing motion, where a vehicle turns
following a circular arc until reaching a certain bearing,
and then follows a straight path thereafter. Turn-to-
bearing motion is the building block for Dubins trajec-
tories used in many diﬀerent techniques in the literature
(see Section 2), but here we consider that the parame-
ters that describe our future path are non-deterministic
and uncertain at the beginning of the turn.

The formalization is embodied in a library of proofs
that are detailed descriptions of these kinematics, and
are machine-checked to guarantee correctness. Each the-
orem in this paper corresponds to a proof in the for-
malization.1 We believe that the library can serve as a
foundation for formal reasoning about horizontal turns
in the Coq proof assistant, supporting the development
of insight and correct reasoning for a wide variety of
path planning and collision avoidance algorithms. Fur-
thermore, we hope that it helps guarantee a high level of
correctness and robustness for robotic systems’ horizon-
tal motion, and that it provides the basis for certiﬁca-

1 Coq proofs are at https://bitbucket.org/ykouskoulas/ottb-

foundation-proofs.

 
 
 
 
 
 
2

Y. Kouskoulas, et al.

tion artifacts (i.e., proofs) that can be used to establish
system algorithm and software correctness.

We develop an approach to evaluating collision pos-
sibilities during an encounter. We apply the library to
develop and formally verify an exact pointwise timing
computation, use it to create a sound approximation of
the timing over an area, and quantify the timing com-
putation over the reachable area of future motion.

This paper is an extension of [13], which presents the
novel contributions of the original work, but also new
ideas. The contributions of the original work are: the
development of a Coq library for reasoning about non-
deterministic Dubins-style paths; an additional Coq li-
brary deﬁning a variety of two-argument arctangent
functions with diﬀerent branch cuts that are each sensi-
tive to the quadrant and sign of their arguments; a new
expression for computing the appropriate angle neces-
sary for connecting Dubins paths to a destination way-
point2; and formally veriﬁed expressions of the timing
constraints of uncertain turn-to-bearing motion. The
contributions that are unique to this extension are: de-
velopment of novel, sound approximations for the loca-
tion of a vehicle within the reachable area using waves
as moving boundaries; and a simple, eﬃcient, piecewise
approach to calculating the range of possible collision
times between two vehicles each of which followings
turn-to-bearing kinematics. It also improves the pre-
sentation of conjectures from the original paper that
enhance ease of comprehension for readers who want to
use the equations in practical applications.

The rest of this paper is organized as follows: Sec-
tion 2 considers prior work in formalizing horizontal
motion and analyzing potential collisions; Section 3 de-
scribes the details of our library and how we formal-
ized non-deterministic, turn-to-bearing paths in Coq;
Section 4 applies the library to derive exact, formally
veriﬁed solutions for the timing of intersecting turns
at a given point. The rest of the sections present new
ideas that were not in the original paper: Section 5 de-
velops a strategy for quantifying the collision timing
computations over all points in the conﬂict area, pro-
viding a bookkeeping framework for managing the so-
lution to diﬀerent pieces of the exact timing equations
separately; Section 6 develops formally veriﬁed approx-
imations to the timing equations that are appropriate
for quantiﬁcation within their polygonal region; Section
7 presents a method for quantifying the timing equa-
tions over each piece of the domain, devising a sound
solution for collision timing between two turning vehi-
cles; and ﬁnally Section 8 discusses our conclusions and
future work.

2 There exist alternate expressions for this angle, but to our

knowledge, the formulation in this paper is new.

2 Literature Review

A number of eﬀorts have gone on to formalize horizontal
motion and prove properties about it, but all have char-
acteristics that distinguish them from our work. For in-
stance, [10] develops an approach for maneuvering and
coordinating vehicles following Dubins paths utilizing
Kripke models which is veriﬁed via a model checker,
but does not incorporate non-determinism in the turn-
ing models, and does not consider timing characteristics
of the turns. Examples such as [2] use diﬀerential dy-
namic logic with KeYmaera X to model collision avoid-
ance in automobiles with skidding, but unlike our work
they are concerned mainly with geometric properties of
paths and do not consider timing. The work in [19] is an
excellent treatment of collision avoidance in a wide vari-
ety of uncertain turning scenarios for ground robots. It
assumes obstacles characterized by maximum velocity
bounds, is not focused on timing analysis, and is not tai-
lored for use in mixed vertical and horizontal collision
avoidance. We develop a new expression for calculating
allowable tangents to a turn; an alternate solution to
this problem is reported in [21].

In [25], authors develop an algorithm for safe trajec-
tories for robots and dynamic obstacles following con-
stant speed trajectories with an upper and lower bounds
on curvature, which encompasses turn-to-bearing ma-
neuvers we consider. However, it uses a rather coarse
approximation of the collision region in the velocity ob-
stacle space, taking a union of all reachable regions over
a time window, where we show how to compute a much
tighter conﬂict region approximation over time. This
has the advantage of allowing greater maneuverability
which is particularly important in adversarial scenarios.
Closely related to this work is [22], which considers
curved, horizontal aircraft avoidance maneuvers, but
without combining them with vertical maneuvers; and
[9], which considers vertical maneuvers, but with straight
line horizontal kinematics, and does not allow combi-
nation with horizontal maneuvers.

Also closely related to this work is [11], which an-
alyzes vertical maneuvers, but contains timing param-
eters that can be set to ensure safety for simultane-
ous horizontal maneuvers. Our timing computation can
be used to set parameters that safely compose turn-to-
bearing horizontal maneuvers with arbitrary bounded-
acceleration vertical maneuvers.

Dubins paths, constructed of circular arc segments
and straight lines, are used to model horizontal motion
in many path planning and collision avoidance algo-
rithms, such as [5,8, 17,18,24,26]. These examples are
not formally veriﬁed, and although some are created
with aircraft in mind, they are not designed for timing

Safe collision avoidance for horizontal turns

3

analysis or adversarial collision avoidance assumptions
in our work.

Many years of work have gone into the tools and
libraries that we used for our development, including
the Coq proof assistant [1] and the Coquelicot exten-
sions for its real library [3]. Our libraries are intended
to contribute to this toolbox.

3 Reasoning Foundations for Turn-to-bearing
Maneuvers

The ﬁrst step in reasoning about the safety of turn-to-
bearing maneuvers is to formalize the deﬁnition of a
turn-to-bearing trajectory in a manner suitable for use
in the Coq proof assistant. We consider the mathemat-
ical deﬁnition of turn-to-bearing kinematics, a library
interface, and the formalization of geometric properties
that are necessary for our safety analysis.

3.1 Non-deterministic Turn-to-Bearing Kinematics

We deﬁne non-deterministic one-turn-to-bearing mo-
tion as a set of trajectories representing a range of fu-
ture motion possibilities that might be followed by the
vehicle. We characterize this motion with a tuple that
represents the set of future trajectories that are possi-
ble (x0, y0, θ0, rα, rβ, θα, θβ, sα, sβ) where: (x0, y0) and
θ0 are initial position and orientation of the vehicle;
rα, rβ, θα, θβ are bounds on the ﬁxed turn radius and
cumulative change in orientation after completing the
circular turn, respectively; and sα, sβ are bounds on the
speed throughout the encounter, which unlike the other
parameters is assumed to vary continuously as a func-
tion of time. We adopt the convention of using positive
radii and bearing oﬀsets to represent counterclockwise
(left) turns, and negative radii and bearing oﬀsets to
represent clockwise (right) turns. Left turns are repre-
sented by 0 < rα ≤ rβ and 0 < θα < θβ < 2π, while
right turns by rα ≤ rβ < 0 and −2π < θα < θβ < 0.
In all cases, we assume 0 < sα ≤ sβ. Realizing a
speciﬁc future trajectory requires drawing from this
sample space. Each trajectory has parameters r, θc, s(t)
satisfying the constraint predicate χ(r, θc, s) = θc ∈
[θα, θβ] ∧ r ∈ [rα, rβ] ∧ (∀u, s(u) ∈ [sα, sβ]) which rep-
resents a path with initial turn that we model using a
circular arc of radius r, followed by a linear path tan-
gent to the turn whose bearing is oﬀset by θc from
θ0. The path is traversed with continuously varying
speed s(t). Figure 1a plots a visualization of the turn-to-
bearing envelope for (x0, y0, θ0, rα, rβ, θα, θβ, sα, sβ) =
(0, 0, 0, 3.22, 6.89, 2.41, 3.62, 1, 2), while Fig. 1b shows
example trajectories consistent with that envelope.

(a) Shaded area is reachable in the future.

(b) Paths show two possible trajectories.

Fig. 1: Visualizing turn-to-bearing motion.

Components of the vehicle’s trajectory for these kine-

matics are given by

Jx(t) =






(cid:16) d(t)

(cid:17)

r sin
r + θ0
(d(t) − rθc) cos(θc + θ0)

− r sin(θ0) + x0

+ r sin(θc + θ0) − r sin(θ0) + x0

Jy(t) =






(cid:16) d(t)

(cid:17)

−r cos
r + θ0
(d(t) − rθc) sin(θc + θ0)

+ r cos(θ0) + y0

− r cos(θc + θ0) + r cos(θ0) + y0

d(t) ≤ rθc

d(t) > rθc

(1)

d(t) ≤ rθc

d(t) > rθc

(2)

for overall trajectory J(t) = Jx(t)ˆx + Jy(t)ˆy. The dis-
tance traveled on the path is related to speed during
the trajectory in the usual way, d(t) = (cid:82) t

0 s(γ)dγ.

-20-15-10-5510-55101520-20-15-10-5510-551015204

3.2 Library Interface

The library we have developed is organized around the
representation of a path in R2 and a predicate

path segment(D, fx(d), fy(d), (x0, y0), (x1, y1))

(3)

(cid:113)

(f (cid:48)

x(α))2 + (f (cid:48)

which, when true, asserts: that fx(d) and fy(d) are pa-
rameterized functions describing the x and y positions
of the path in the coordinate plane; that the result-
ing path is continuous and integrable; and that fx(d)
and fy(d) are parameterized by the path distance, i.e.
(cid:82) d
y(α))2dα = d; that (fx(0), fy(0)) =
0
(x0, y0); and that (fx(D), fy(D)) = (x1, y1). Parame-
terizing our path representation by path distance cre-
ates a canonical representation of the geometry for each
path, isolating it from timing considerations associated
with variations in speed during the maneuver. This al-
lows us to analyze each aspect separately and combine
them in the end.

Note that although the turn-to-bearing paths in the
library deﬁne a starting and ending point separated by
distance D, the paths continue indeﬁnitely.

The library also contains piecewise functions pa-
rameterizing the x and y positions for turn-to-bearing
paths Hx(r, θ0, x0, θc, rtp, d) and Hy(r, θ0, y0, θc, rtp, d),
meant to be used with the path segment predicate. The
functions are equivalent to Eqs. (1) and (2), diﬀering
only in that they are parameterized by distance d in-
stead of time t. The functions are curried before be-
ing used in path segment, instantiated with starting
point (x0, y0), initial orientation θ0, the turn radius r,
and the angular oﬀset for the ﬁnal bearing θc. They
also require an argument named rtp, which must be a
proof object showing that 0 < rθc < 2π|r|, ensuring
the signs of r and θc to be identical, and enforcing an
upper bound on θc. The ﬁles ttyp.v and tdyn.v deﬁne
the path segment predicate, the parameterized turn-to-
bearing paths, and prove lemmas about path continuity,
diﬀerentiability, and path-length parameterization of
Hx and Hy so they can be used with the path segment
predicate. Along with the parameterization, the library
contains predicates straight and turning which indicate
whether the parameters describing a path reach the ﬁ-
nal destination point while traveling in a straight line,
or turning on a circular arc, respectively.

The rest of the library includes trigonometric deﬁni-
tions and identities that are missing from the Coq stan-
dard library (atan2.v, strt.v and strt2.v ), lemmas that
help the user introduce turn-to-bearing path segment
predicates into the context (tlens.v ), lemmas that de-
rive consequences and mathematical relationships from
turn-to-bearing path segment assumptions (tlens.v ), lem-
mas about timing intervals (ttim.v ), and theorems about

Y. Kouskoulas, et al.

the computation of timing properties based on path-
length (dtlen.v ). The size of the development is signiﬁ-
cant, around 40k lines of proof scripts.

Because Coq allows expression in a higher order
logic, it permits quantiﬁcation over any variable. This
means we can hold the starting and ending points of
the path ﬁxed and quantify over the other parameters
to reason about waypoints, or ﬁx ranges of parameters
and quantify over the radii and angles to reason about
ranges of non-deterministic possibilities in turn radius
and ﬁnal bearing.

In this paper, for clarity, we present lemmas from
the library in a standard position and orientation such
that (x0, y0) = (0, 0), θ0 = 0, and (x1, y1) = (x, y). To
analyze intersecting paths that are oriented and posi-
tioned arbitrarily with respect to one another, the more
general form can be recovered by assuming that

x = (x1 − x0) cos(θ0) + (y1 − y0) sin(θ0)
y = −(x1 − x0) sin(θ0) + (y1 − y0) cos(θ0)

(4)

(5)

The library itself contains the translations and rota-
tions to allow full generality when working with more
than one path.

3.3 Trigonometric Properties

Geometric intuition which might seem simple does not
always translate naturally to formal analysis in a prov-
ing environment.

First we needed to encode in our proving environ-
ment a basic understanding of the way circular turns
may be combined with straight paths that exit the turns
on a tangent. There are two tangent lines to a circle,
anchored at orientations θ1 and θ2, which arrive at any
particular point (x, y) outside the circle (see Fig. 2).
One of the tangents is not useful because for counter-
clockwise turns, it always results in a path with a dis-
continuous derivative. This is geometrically obvious to
a human by inspection, but somewhat challenging to
formalize in Coq.

Using a chord lemma from geometry we can infer
that a vehicle approaching (x, y) from a circular turn
will do so at an angle of θm = 2 atan2(y, x) and that the
radius required to reach it will be rm = (x2 + y2)/(2y),
see Fig. 3. We ﬁnd that decreasing the radius of the turn
decreases the angle, while increasing it makes (x, y) un-
reachable via a tangent line. Thus θm deﬁnes an upper
bound on the approach angle. From inspection, we can
see that the angle of the second tangent exceeds this
boundary.

In order to formalize this geometric intuition, we
deﬁne a function which given the orientation θ of the

Safe collision avoidance for horizontal turns

5

κ(θ1) = θ1 + 2nπ

(x, y)

κ(θ2) = θ2 + 2(m + 1)π

(a) Angle of each line segment is κ

(b) Discontinuous κ2; κ(cid:48) = 0 points are tangent

Fig. 2: If we parameterize positions on a circular path
using the vehicle orientation θ associated with the tan-
gent, then κ(θ) (shaded) is the angle of the line con-
necting the point on the circle to a point (x, y) outside
the circle.

vehicle on a turning path of radius r would return the
angle from the vehicle to the point (x, y),

κ(θ) = atan

(cid:18) y − r(1 − cos(θ))
x − r sin(θ)

(cid:19)

.

(6)

Both by construction, and by the periodicity of sin and
cos, we note that κ is periodic with period 2π. For the
remainder of this section we will restrict the domain
of κ to (0, 2π) for r > 0, and (−2π, 0) for r < 0. As
illustrated in Fig. 2b, the function κ is not continuous
for all values of the destination point (x, y).

θm(x1, y1)

(x1, y1)

θm(x2, y2)

(x2, y2)

Fig. 3: Two example points illustrating the geometric
intuition for rm and θm using circular arcs that connect
them with the origin. Each arc has a radius of rm, and
a tangent of θm at its end, where each parameter is
calculated with the coordinates of the ﬁnal point.

upon which (x, y) yields a continuous function.

κ2(θ) = atan2

κ3(θ) = atan2

(cid:0)y − r(1 − cos(θ)), x − r sin(θ)(cid:1)
(cid:0) − (y − r(1 − cos(θ))),

− (x − r sin(θ))(cid:1) + π

κ4(θ) = atan2

(cid:0) − (x − r sin(θ)),

y − r(1 − cos(θ))(cid:1) + π/2

(7)

(8)

(9)

Henceforth, when we refer to properties of κ, we are
choosing a variant with the branch cut oriented so that
there is no discontinuity for the given destination point
(x, y).

When κ is continuous, we show that the unique
maximum and minimum values κ(θ1) and κ(θ2) corre-
spond to the angles of the correct and incorrect tangent
lines respectively (for r > 0, if r < 0 the maxima and
minima are reversed). We prove that κ(θ) = θm
2 implies
that θ = 0 or θ = θm. Since κ takes on the value θm
2 , it
must be that κ(θ1) ≥ θm

2 ≥ κ(θ2).
Our choice of domain ensures that 0 is not between
θ1 and θ2, so we can use the Intermediate Value The-
orem to show that θm is in-between θ1 and θ2 in the
domain. Because θm is a limiting value of the approach
angle, we can eliminate θ2, which is always outside of
the allowable range, leaving θ1 as the angle of approach
that ensures path continuity.

We deﬁne a series of functions based on a two-ar-
gument arctangent and diﬀerent branch cuts, which
have distinct, overlapping, and complementary domains

We calculate extremal values of κ, θ1 and θ2, by
setting the derivative of κ to zero, and solving for the
argument. Fortunately, each variant of the κ function

-10-55x24681012y123456θ-3-2-1123κ-4-224x2468y6

Y. Kouskoulas, et al.

for which the destination point (x, y) yields a continu-
ous function has the same derivative

κ(cid:48)(θ) =

r((2r − y) tan2(θ/2) − 2x tan(θ/2) + y)
D(θ)

,

(10)

for θ /∈ {0, π}. The sign of the denominator

D(θ) = 2(1 − cos(θ))/ sin2(θ)

· (cid:0)(y − r(1 − cos(θ)))2 + (x − r sin(θ))2(cid:1)

(11)

is always positive, and so the sign of κ(cid:48) is directly re-
lated to the sign of the quadratic function in the nu-
merator; the task of calculating the maximum and min-
imum is reduced to the problem of solving a quadratic
in tan(θ/2). The solution associated with the maximum
value of κ is given in Eq. (14).

Reasoning about the continuity of the κ variants,
handling their derivatives as the angle crosses the branch
cut, and ordering of roots and angles to establish what
“in-between” means in an angular domain that is a
clock system is contained within the ﬁle strt.v and its
corresponding documentation.

3.4 Turn-to-Bearing Path Properties

Parameters for turn-to-bearing trajectories must be se-
lected in a way that the radius and angle of departure
from the turn lead from the starting point to the end-
ing point, and so that the distance is consistent with
the path. In this section, we state basic results about
paths, and select a few proofs about which we provide
some details in order to give a ﬂavor of the reasoning
in the library.

We can construct a turn-to-bearing trajectory by
ﬁrst choosing an angle of approach θ for a point (x, y),
and then computing the turn radius required to arrive
there with that orientation. The angle of approach is
constrained because of the initial position and angle of
the aircraft and the required kinematics. Fig. 4a shows
the initial position of an aircraft and for a series of ex-
ample reachable points, plots shows the angular extent
of feasible approaches using pie slice-shaped circular
segments; an example path is shown to illustrate one
possibility to reach one of the points. Fig. 4b graphi-
cally plots, for the lower left point, Eq. 13, i.e. what r
must be for each allowable choice of θ at that point.

Theorem 1 (Turn-to-bearing dependent radius)
A vehicle following a turn-to-bearing trajectory can ap-
proach point (x, y) with a chosen angle θ when

(0 < θm ∧ (θm/2 < θ ≤ θm ∨ −2π < θ < θm/2 − 2π))∨
(θm < 0 ∧ (θm ≤ θ < θm/2 ∨ θm/2 + 2π < θ < 2π))

(a) Approaches for diﬀerent points.

(b) r vs. θ for a single point (−0.8, 0.2).

Fig. 4: Relationship between allowable angle of ap-
proach and required radius to achieve that angle.
Choosing angular ranges of approach also entails a turn
direction; left turns are marked with violet and right
turns marked with green.

using radius

R(x, y, θ) =

x sin(θ) − y cos(θ)
1 − cos(θ)

.

(12)

(13)

Similarly, we can also construct a turn-to-bearing
trajectory by ﬁrst choosing a turn radius r, and then
computing the angle of approach that the radius entails
when we arrive at (x, y). The choice of radius is con-
strained if the target point is on the same side as the
direction of the turn, because the turn must be rapid
enough to orient the aircraft in the direction of the tar-
get point before it has passed it.

Theorem 2 (Turn-to-bearing dependent approach
angle) A vehicle following a turn-to-bearing trajectory
can approach point (x, y) using a turn with chosen ra-

-1.5-1.0-0.50.51.01.5-0.50.51.01.52.0-6-4-2246-2-112Safe collision avoidance for horizontal turns

7

dius r when

(cid:18)

0 < y ∧ r ≤

(cid:19)

x2 + y2
2y

∨ (y = 0 ∧ x < 0) ∨

(cid:18)

y < 0 ∧

x2 + y2
2y

(cid:19)

≤ r

and the angle of approach is

x−

√

x2−(2r−y)y
(2r−y)

(cid:19)

+ P 2r − y (cid:54)= 0

(cid:18)

Θ(x, y, r) =




2 atan
2 atan (cid:0) y
2x
π sign(r)

(cid:1)

2r − y = 0 ∧ x > 0

2r − y = 0 ∧ x ≤ 0

(14)

(a) Varying r for a single (x, y).

where P = P (x, y, r) is a phase correction given by

P (x, y, r) =





0

(0 < r ∧ ((0 < x ∧ 0 < y) ∨ x ≤ 0 ∧ 2r < y))

∨(r < 0 ∧ ((x < 0 ∧ y < 0) ∨ y < 2r))

2π

0 < r ∧ (0 ≤ x ∧ y < 0 ∨ x < 0 ∧ y < 2r))

−2π r < 0 ∧ (0 ≤ x ∧ 0 < y ∨ x < 0 ∧ 2r < y).

It is not surprising that for ﬁxed (x, y), the ﬁrst
piece of Θ(x, y, r) is not diﬀerentiable or even always
deﬁned at r = rm. What is surprising is that even if we
deﬁne the endpoint to ensure the value of the function
is ﬁnite, its rate of change is unbounded at the end of
the interval. We initially expected that we could simply
extend our θ1 curve to create a function with a continu-
ous derivative, but in the end had to settle for creating
a piecewise continuous function using the limiting value
at the cutoﬀ point, which turned out to be enough for
our purposes. This is illustrated in Fig. 5, and made for-
malizing the relationship between the length of circular
arc path segments and the rest of the turn-to-bearing
kinematics a longer process than we had expected.

This geometry appears in a variety of contexts, in-
cluding [21, p. 15], which has another expression that
may be used to solve for the angle. We leave it to the
interested reader to show the equivalence between the
result we have proved, and alternate formulations. We
also found a remarkable simpliﬁcation for the tangent
path length:

Theorem 3 (Straight path segment expression)
For a turn-to-bearing trajectory given by (r, Θ(x, y, r)),
that starts at the origin with θ0 = 0 and passes through
(x, y), the square of the distance traveled on a straight
line before we arrive at (x, y) is given by

(x − r sin(Θ(x, y, r)))2 + (y − r(1 − cos(Θ(x, y, r))))2

= x2 − (2r − y)y.

(15)

(b) Varying r for a sequence of points.

Fig. 5: Plot of the ﬁrst piece of Θ(x, y, r) from Eq. (14)

4 Reasoning about the Timing of Intersecting
Turns

This section describes the application of our turn-to-
bearing Coq library to formalize and formally verify an
exact, non-trivial timing property of these trajectories.
Having formalized turn-to-bearing paths, we need
to reason about when (timing) and where (geometry)
collisions might occur. The geometry of the reachable
envelope for a turn is bounded by edges that are com-
binations of circular arcs and straight lines; the inter-
section of these areas can be computed in a straightfor-
ward manner. In other words, it is straightforward to
overapproximate the conﬂict area as shown in Fig. 6.

In general, a collision can occur if there exists a
point such that both aircraft can reach that point at
the same time. This section considers the theorems and
equations necessary to compute the earliest and latest
possible times that aircraft can be at a given point.
Intuitively, the possible locations of an aircraft are con-
tained within an area that moves over time, a propa-
gating wave within the reachable envelope with a lead-

0123456r0.51.01.52.02.5θ1(x,y,r)Approachanglefory=8,x=50.00.10.20.30.4r0.00.51.01.52.02.53.0θ1(x,y,r)Approachanglefory={0.5,1,1.5,...,5},x=18

Y. Kouskoulas, et al.

ing and lagging edge. This wave of position possibilities
can be computed via piecewise equations. Although it
is intractable to exhaustively search over all points for
the exact collision times, these theorems will permit us
to calculate a sound overapproximation for collisions in
later sections.

single vehicle at a point p are then given by

te(p) = inf I(p)
tl(p) = sup I(p).

(17)

(18)

To determine whether a collision between two air-
craft is possible, we must look at the earliest and latest
arrival times for each aircraft at each point in its reach-
able envelope. To organize this analysis, we ﬁrst deﬁne
four logical predicates that express whether the earli-
est and latest arrival time at point p in the reachable
area occur when the other vehicle may also be located
at that point. Each time variable t in the subsequent
equations has a subscript indicating whether the time is
the earliest possible (e) or latest possible (l) time of ar-
rival, and a superscript indicating which aircraft timing
is referenced, i for intruder or o for ownship.

Fig. 6: A two-aircraft encounter. Dashed lines show
the edges of the reachable area for each aircraft over all
time, i.e. all possible future positions throughout the
entire encounter. The intersection of reachable areas—
outlined in red—is an overapproximation of the conﬂict
area, containing all possible future collisions.

4.1 Pointwise Collision Timing

We deﬁne the reachable envelope

E = {p | ∃ (θc, r, s, u), χ(r, θc, s) ∧ u > 0 ∧ J(u) = p}

(16)

for a vehicle to be the set of points that are reachable
over the range of possible future trajectories. For any
point in the reachable envelope p ∈ E, there is a set
of trajectories T (p) = {J(·) | ∃ (θc, r, s, u), χ(r, θc, s) ∧
u > 0 ∧ J(u) = p} that can reach that point. Each
trajectory J ∈ T (p) corresponds with a diﬀerent choice
of radius and ﬁnal bearing (which determine the path),
and future ground speed s(t). Figs. 7a and b illustrate
two diﬀerent points in the reachable envelope of the
ownship from Fig. 1 and possible paths taken from the
family of trajectories that could reach each point.

There is a corresponding set of arrival times I(p) =
{ta | J ∈ T (p) ∧ J(ta) = p} at which a vehicle can ar-
rive at p. The earliest and latest arrival times for a

W i
W i
W o
W o

e(p) = to
l (p) = to
e (p) = ti
l (p) = ti

e(p) ≤ ti
e(p) ≤ ti
e(p) ≤ to
e(p) ≤ to

e(p) ≤ to
l(p) ≤ to
e(p) ≤ ti
l (p) ≤ ti

l (p)
l (p)
l(p)
l(p)

(19)

(20)

(21)

(22)

We combine these to deﬁne two predicates to evaluate
safety, one using the earliest arrival time, and the other
using the latest arrival time,

We(p) = W i
Wl(p) = W i

e(p) ∨ W o
l (p) ∨ W o

e (p)
l (p)

(23)

(24)

For two aircraft we deﬁne a conﬂict area C = Eo ∩Ei to
reﬂect the geometry of the intersection of future paths
without timing considerations. We prove:

Theorem 4 (Leading Lagging Equivalence) For
all points p ∈ C, the predicates We(p) = Wl(p) are
equal, so we can drop the subscript.

Theorem 5 (Pointwise Safety) W (p) correctly es-
tablishes safety at point p: when it is true, there exist
circumstances that lead to collision at p, and when it is
not there are no circumstances that lead to collision at
p.

Theorem 6 (Collision Timing) For each point p ∈
C ∧ W (p), a collision may only occur in the time in-
terval [max (cid:0)ti
l (p)(cid:1)], and under
e(p)(cid:1) , min (cid:0)ti
the assumptions, no collision may occur outside this
time interval.

e(p), to

l(p), to

We can directly relate timing of a trajectory be-
tween two points to the range of path lengths for diﬀer-
ent possible paths connecting the points. The earliest
arrival time to reach a point p, te(p) is achieved by the
trajectory following the shortest path and the highest

-15-10-5510-551015Safe collision avoidance for horizontal turns

9

(a)

(b)

Fig. 7: Paths from the set of possible turn-to-bearing trajectories that reach two example points in space. The
edges of the reachable envelope for a non-deterministic left turn are shown as a set of dashed lines; any point in
the reachable envelope is reachable via these kinematics.

sβ

ground speed, i.e. inf I(p) = dmin(p)
, where dmin(p) is
the length of the shortest path from the starting point
to p. The latest arrival time tl(p) is achieved by the
trajectory following the longest path with the slowest
ground speed, i.e. sup I(p) = dmax(p)
, where dmax(p) is
the length of longest path from the starting point to
p. In this way, we convert the problem of computing
collision timing into a problem computing the range of
possible path lengths between two points.

sα

4.2 Path Length Properties

We can deﬁne a function that computes the length
of the path for a deterministic, left-turning turn-to-
bearing trajectory starting from the origin with orien-
tation θ0 = 0, passing through (x, y) with orientation
θ, using a turn of radius r:

L(x, y, θ, r) = rθ + (cid:107)(x, y) − r(sin θ, 1 − cos θ)(cid:107) .

(25)

As discussed in Sec 3.4, turn-to-bearing kinematics con-
strain the parameters for L, i.e., its arguments cannot
all be chosen independently. Assume we ﬁx the point we
wish to reach, (x, y). We can independently choose the
angle of approach θ to the ﬁnal point, and that deter-
mines the turn radius of the maneuver. Alternatively,
we can choose the radius of the turn, and compute the
angle of approach to the point.

A central insight here is that for paths with the same
starting and ending points, the path with a larger angle
of approach will have a larger radius; and the path with
a larger radius will be longer. More precisely:

Theorem 7 (Approach angle orders turn-to-bear-
ing path radii) Given two turn-to-bearing paths, (r1, θ1)
and (r2, θ2) that pass through the same point (x, y), if

θ1 > θ2 > 0, then the radius of the ﬁrst path r1 is longer
than the radius of the second path r2, i.e. r1 > r2:

(θ1 > θ2 > 0) → R(x, y, θ1) > R(x, y, θ2)

(26)

Theorem 8 (Radius orders turn-to-bearing path
lengths) Given two turn-to-bearing paths, (r1, θ1) and
(r2, θ2) that pass through the same point (x, y), if r1 >
r2 > 0, then the ﬁrst path length L1 is greater than the
second path length L2, i.e. L1 > L2:

(r1 > r2 > 0) →

L(x, y, Θ(x, y, r1), r1) > L(x, y, Θ(x, y, r2), r2)

(27)

4.2.1 Maximum and minimum path lengths

At each point in the reachable area, we can use the or-
dering of path lengths implied by Thms. 7 and 8 to ﬁnd
the minimum and maximum length path possible for
uncertain turn-to-bearing motion constrained by non-
deterministic bounds.

Theorem 9 (Minimum bearing-constrained path
length) For turn-to-bearing kinematics, given inter-
val constraints on ﬁnal bearing [θα, θβ] and turn radius
[rα, rβ] where 0 < rα and 0 < θα, and a reachable point
(x, y), the minimum path length is given by Eq. (28).

Theorem 10 (Maximum bearing-constrained path
length) For turn-to-bearing kinematics, given inter-
val constraints on ﬁnal bearing [θα, θβ] and turn radius
[rα, rβ] where 0 < rα and 0 < θα, and a reachable point
(x, y), the maximum path length is given by Eq. (29).

-20-15-10-5510-55101520-20-15-10-5510-5510152010

dmin(x, y) =

dmax(x, y) =









L(x, y, Θ(x, y, rα), rα)
L(x, y, θα, R(x, y, θα))

θα ≤ Θ(x, y, rα) ≤ θβ
(x2 + y2 > 2rαy ∧ (0 ≤ y(rα ≤ rm ∨ y = 0) ∧ θα < θm)∨

L(x, y, θm, rm)

(y < 0 ∧ θm < 0)) ∧ Θ(x, y, rα) < θα
rα ≤ rm ≤ rβ ∧ θm ≤ max(θα, Θ(x, y, rα))

L(x, y, Θ(x, y, rβ), rβ) x2 + y2 > 2rβ y ∧ Θ(x, y, rβ) ≤ θβ
L(x, y, θβ , R(x, y, θβ))
L(x, y, θm, rm)

(x2 + y2 > 2rβ y ∧ θβ < Θ(x, y, rβ)) ∨ (rα ≤ rm ≤ rβ ∧ θβ < θm)
rα ≤ rm ≤ rβ ∧ θm ≤ θβ

Y. Kouskoulas, et al.

(28)

(29)

4.2.2 Right and uncertain turns

So far we have looked only at left turns, where the circle
that deﬁnes our turn radius is positioned to the left of
the vehicle, and the change in bearing is a relative an-
gle in radians, positive according to the usual counter-
clockwise convention. For non-deterministic left turns,
0 < rα ≤ rβ and 0 ≤ θα ≤ θβ.

We can handle other types of turns via symmetry.
For right turns, we choose the convention of identifying
turning trajectories using radii with negative numbers,
and giving relative bearing with negative numbers as
well. We describe non-deterministic right turns using
parameters such that rα ≤ rβ < 0 and θα ≤ θβ < 0.
For this convention, the path length for right turns is
given by:

Lright(x, y, θ, r) = L(x, −y, −θ, −r).

(30)

The function that determines the maximum and mini-
mum distance for right turns is related to that for left
turns in the following way:

dright(x, y, θα, θβ, rα, rβ) =

d(x, −y, −θβ, −θα, −rβ, −rα)

(31)

for both minimum and maximum distance.

We can compute the distances associated with non-
deterministic forward motion that might include either
a left or a right turn, by requiring rβ < 0 < rα and
θα ≤ 0 ≤ θβ. The distance function then relates to the
left and right distance functions:

deither(x, y, θα, θβ, rα, rβ) =




d(x, y, 0, θβ, rα, ∞)
dright(x, y, θα, 0, −∞, rβ)

x

y > 0

y < 0

y = 0

(32)

4.3 Exact Timing Wavefront

The observations in Thms. 9–10 allow us to subdivide
the reachable envelope into diﬀerent areas, using a piece-
wise function to describe the timing. Figs. 8 and 9 il-
lustrate, for a single vehicle and a particular choice of

parameters, the diﬀerent strategies that maximize and
minimize path length, and the areas associated with
each strategy. The bounding areas that enclose uniform
strategies are shown with dashed lines that illustrate
the limits where each strategy is appropriate for ﬁnding
minimum and maximum length. For turns with diﬀer-
ent parameters, these shapes change accordingly.

This means that if we want to ﬁnd the shortest and
longest paths to a point, we ﬁrst consider paths with
the smallest and greatest radii, rα and rβ. Figs. 8a and
9a illustrate individual trajectories that have minimum
and maximum length for our example maneuver, con-
structed by using the minimum and maximum radii al-
lowed. For some points, the most extreme turns could
not produce trajectories that arrive at p, because the
ﬁnal bearings required by such trajectories are outside
the parameters set for the motion, or because the points
are inside the turning circle. Figs. 8b and 9b illustrate
individual trajectories that have minimum and max-
imum length for our example maneuver in this case.
These are constructed by choosing radii that lead to
most extreme values of bearing, so that the trajectory
both reaches p, and does so with an orientation that is
allowed by the parameters of our turn. Finally, there
are points in the reachable envelope that are reachable
as part of the initial turn. For these points, this ini-
tial turn is the maximum-length path. If the bearing at
point p is outside the allowable range, then this is also
the minimum-length path. Figs. 8c and 9c illustrate in-
dividual trajectories that have minimum and maximum
length for our example maneuver, which must be con-
structed as circular arcs.

In Fig. 10 we use the parameters of our example
maneuver in Fig. 1, combining all of the results from
Thms. 9–10 together into a single contour plot of the
earliest and latest times to reach each point in the
reachable envelope. The contour lines plotted in Figs.
10a and b can be thought of as the outer and inner
boundaries (respectively) of the irregular annulus at the
instant corresponding to the value of the contour. As
time progresses, this annulus expands, so we can treat
this like a propagating wave, an area that moves over

Safe collision avoidance for horizontal turns

11

(a) r = rα

(b) θc = θα

(c) r = rm ∧ θm ≤ θc

Fig. 8: Strategies described by Eq. (28) to ﬁnd the minimum distance turn-to-bearing trajectory from the origin
to a particular point for each of three possible regions. Example trajectories illustrate the strategy for a single
point indicated in each region.

(a) r = rβ

(b) θc = θβ

(c) r = rm ∧ θm ≤ θc

Fig. 9: Strategies described by Eq. (29) to ﬁnd the maximum length turn-to-bearing trajectory from the origin to
a particular point when the point is in each of three possible regions. Example trajectories illustrate the strategy
for a single point indicated in each region.

(a) Minimum time to arrive, te(p).

(b) Maximum time to arrive, tl(p).

Fig. 10: Contour plot describing timing for a left turn with parameters used in Fig. 1. Each (x, y) position in the
Cartesian plane is associated with a time to arrive at that position starting from (0, 0) with orientation θ0 = 0,
following turn-to-bearing kinematics.

-20-15-10-5510-55101520-20-15-10-5510-55101520-20-15-10-5510-55101520-20-15-10-5510-55101520-20-15-10-5510-55101520-20-15-10-5510-55101520-20-15-10-5510-55101520-20-15-10-5510-551015201020304012

Y. Kouskoulas, et al.

time and encompasses all the possible positions that
the vehicle may be in at each future moment.

The contours of equal timing for the minimum and
maximum arrival times represent the shape of the lead-
ing and trailing edge of this wave, respectively. In ad-
dition to modeling and analyzing ranges of possibili-
ties for turn-to-bearing kinematics, we will ﬁnd that
adding non-determinism also allows us to evaluate tim-
ing safety for small perturbations of turn-to-bearing—
types of motion whose combination of trajectory and
speed is suﬃciently close, but not exactly the same.

The theorems and equations within this section give
exact, formally veriﬁed expressions that describe how
to compute collision timing parameters te(p) and tl(p)
for two turning vehicles. Backed up by Thm. 6, these
parameters describe the earliest and latest times that
the vehicles may collide at a given point p that is in the
conﬂict area C.

The next three sections that follow develop the me-
chanics for quantifying these calculations over all the
points p in C. Quantifying the timing computation over
the points in C is an important, practical step because
it provides a parameter that can be used to fully char-
acterize encounter timing.

5 Quantifying collision timing computations
over the conﬂict area

In this section, we develop an overall approach to quan-
tifying the timing computations over the conﬂict area.
We will describe the objective and intuition behind the
quantiﬁcation step, discuss the problems we encounter
in more detail, and then create a framework for solv-
ing it. The following two sections ﬁll in the remaining
details of how we executed the approach.

To form some intuition about our algorithm, recall
the example two-aircraft encounter (Fig. 6) where both
aircraft follow uncertain turn-to-bearing trajectories.
Dashed lines show the edges of the reachable envelopes
Eo and Ei that contain the positions of each aircraft
during the encounter, and illustrate how the conﬂict
area C, outlined in red, is found by taking the intersec-
tion of the envelopes. We observe that the earliest and
latest times can be computed by appropriately track-
ing the propagating timing wavefronts. To see how this
works, refer to Fig. 11, which shows a series of snap-
shots of the future of the encounter from Fig. 6 (at times
t = 8, 16, and 24) with shaded areas showing the set of
possible positions in which each aircraft can be found
at that moment. These moving areas are precisely the
waves of possible positions described in Sec. 4.3. Their
front and back edges are deﬁned by the level sets of the

timing computation, i.e. the contours of Fig. 10. Our
objective is to solve for the time interval during which
these propagating regions overlap.

Writing down the expression for timing parameters
that span the entire encounter is straightforward. Recall
from Thm. 6 that the earliest and latest collision times
possible in an area C are given by
max (cid:0)ti

(33)

te =

e(p), to

inf
p∈C∧W (p)

tl = sup

p∈C∧W (p)

min (cid:0)ti

l(p), to

(34)

e(p)(cid:1)
l (p)(cid:1)

From the relationship between the timing of a tra-
jectory at a point and the range of possible path lengths
to arrive at that point, it suﬃces to analyze the path
lengths (quantiﬁed over the conﬂict region), instead of
considering timing directly (Sec. 4.1).

However, it is not obvious how to solve for te and tl
over every point in a region by using the minimum and
maximum path lengths because there are a number of
problems. The ﬁrst problem we encounter is that our
path length expressions in Eqs. (28) and (29) are piece-
wise, so we need some strategy for treating each piece
separately. The second problem is that the domain over
which the path length expressions apply is not convex
and thus makes optimization more challenging. Fig. 12
illustrates this with several examples of conﬂict areas C
with diﬀerent initial conditions. The conﬂict areas over
which we need to quantify our timing calculation are
neither convex nor necessarily simply connected. The
framework we develop in this section will address the
ﬁrst two problems directly. The third problem is that
the parameters x and y over which we are quantify-
ing are in multiple places in the path length expres-
sions, sometimes sprinkled within and between nested
layers of transcendental functions. And it is not obvious
how to enforce appropriate constraints on the domain
of x and y. The straightforward approach of sampling of
the conﬂict region and checking appropriate constraints
would be both unsound (i.e. might indicate safety at
times when collisions are possible) and computation-
ally expensive. We discuss this problem further at the
end of the section, and present a solution in Sections 6
and 7 that is sound and computationally eﬃcient.

To address the ﬁrst two problems above, we divide
the reachable envelope (domain) into diﬀerent areas, ac-
cording to the expressions that compute the minimum
and maximum length paths, and then subdivide these
pieces further to account for the conﬂict area and the
motion possibilities of the other vehicle. The result is
a covering of polygons where each is convex, and con-
tains only a single uniform path length expression cor-
responding to earliest and latest timing for each vehicle
at each point within the domain.

Safe collision avoidance for horizontal turns

13

(a) t = 8

(b) t = 16

(c) t = 24

Fig. 11: Timing for a single scenario where two vehicles will make simultaneous, independent, non-deterministic
turns with diﬀerent turn-to-bearing assumptions. The reachable areas for the vehicles are shown at the moments
in time indicated. The instantaneous reachable area is a propagating wave that moves outwards over time, encom-
passing the all possible positions that the vehicle may be located at each moment.

(a)

(b)

(c)

Fig. 12: Geometry of three diﬀerent scenarios where two vehicles will make simultaneous, independent, non-
deterministic turns with diﬀerent turn-to-bearing assumptions. The blue and yellow shading shows the reachable
areas for the vehicles quantiﬁed over all time; it is equivalent to the union of instantaneous reachable areas shown in
Fig. 11 for each future moment. The conﬂict area, where collisions might occur, is the intersection of the reachable
areas, shaded in red.

First, we create a sound overapproximation for the
geometry of the conﬂict area using a set of convex polyg-
onal sets in which the four diﬀerent expressions for
the timing computation (i.e. front and back edges of
the waves for both vehicles) each belong to only one
piece of the timing equations, Eqs. (28) and (29). For
each vehicle with reachable envelope E, we create par-
titions using the domains {Dj} of the timing equa-
tions matching the parameters of its kinematics, i.e.
Fj = {Dj ∩ E, E \ Dj}. Then we create a reﬁned parti-
tion R of the Fj domains that satisﬁes ∀j, R ≤ Fj. Here
the ≤ operator applied to partitions indicates that the
left hand side partition is a reﬁnement of the right hand
side. Fig. 13 shows what R looks like for the maneuver
in Fig. 1.

We then ﬁnd a partition P , satisfying P ≤ (Ri ∩Eo)
and P ≤ (Ro ∩ Ei), that reﬁnes the partitions produced
by the intersection of the reachable area partitions with
the conﬂict area C. To create a sound polygonal overap-
proximation for this ﬁnal partition P , we can follow the
procedure above using polygonal approximations that
describe each of the domains in the timing equation.
In doing this, we relax the requirement that the sets
subdividing the reachable area be partitions, allowing
polygonal sets used for the initial part of the turn to
overlap to ensure convexity. We describe these approx-
imations and the adjustments they require in the next
subsection.

For each polygon, we create a sound approximation
of the edges of the two position waves within it using
expressions that are circular or linear, so that we have

-15-10-5510-551015-15-10-5510-551015-15-10-5510-551015-55101551015-10-5510-4-2246810-10-5510-4-224681014

Y. Kouskoulas, et al.

F

G

E

D

B

C

A

Fig. 13: A plot of four trajectories, with initial posi-
tion p0 = (0, 0) at the origin, and initial orientation
θ0 = 0 along the x-axis. These correspond to the lim-
iting radii and bearings allowed for a non-deterministic
left turn with [θα, θβ] = [2.41, 3.62], and [rmin, rmax] =
[3.22, 6.89]. All radii and bearings in between these lim-
its are also possible.

an analytically tractable approach to solving for their
overlap time. The circular edge approximations are like
the edges of circular ripples that result from dropping
a pebble in a pond. They have the form

(x − x0)2 + (y − y0)2 = (st + c)2

(35)

where s is the speed of propagation of the wavefront in
the plane, c determines the timing of its initiation, and
(x0, y0) is the point at which the wavefront originates.
The linear edge approximations are more like the
straight edges of waves one might ﬁnd sweeping across
the open ocean. They have the form

x cos φ + y sin φ = (st + c)

(36)

Region
A
B
C
D
E
F
G

Back Edge

Front Edge
Circular (28) 8c Circular (29) 9c
Linear (28) 8b
Circular (29) 9c
Circular (28) 8a Circular (29) 9c
Linear (29) 9b
Linear (28) 8b
Linear (28) 8b
Circular (29) 9a
Circular (28) 8a Circular (29) 9a
Circular (28) 8a

Linear (29) 9b

Table 1: Each region has a combination of edge shapes
that describe the front and back edges of the waves.

about because the timing expression is no longer piece-
wise inside each polygon. Table 1 shows which edge ap-
proximations we use for each part of the timing equa-
tions, referring to both a ﬁgure showing the domain,
and the expression for the function’s value being ap-
proximated.

Whenever these waves overlap, it means there ex-
ist trajectories that bring both aircraft into those posi-
tions at that moment, and thus create a collision. We
can consider the timing intervals of each polygon in-
dependently, which gives us some localization of where
the collision may occur during that interval, or we can
combine them together. The supremum and inﬁmum of
the union of the time intervals of wave intersection for
each polygonal domain is a sound overapproximation of
te and tl, giving us the time interval in which collisions
may occur during the encounter.

Using appropriate approximations and the approach
we describe, we can analytically solve for the intersec-
tion of these envelopes and waves in an eﬃcient manner,
eliminating the quantiﬁcation over time, and can estab-
lish the future safety of diﬀerent horizontal maneuvers
in unbounded time. In eﬀect, our analysis allows us to
ask and accurately answer: “If the aircraft ﬁnd them-
selves in this conﬁguration and the pilots restrict them-
selves to these turns, bearings, and speed limits during
the encounter, can we guarantee they deﬁnitively do
not collide?” Section 7 describes how we solve for the
timing interval during which the waves overlap using
these approximations.

where c is the constant determining its position at spe-
ciﬁc times, and φ is the direction of propagation.

The purpose of creating these partitions and ap-
proximations is to break apart the conﬂict area C into
polygonal regions, so the timing expressions are no longer
piecewise in each polygon. Once these polygons are ob-
tained, we can form polynomial—and in some cases,
linear—optimization problems to ﬁnd the collision in-
terval.

These tailor-made approximations and reﬁnements
are each individually easier and more accurate to reason

6 Sound Approximation of Collision Timing
Equations

This section develops an approximation for path length
whose accuracy can be controlled that allows analytical
solution for and eﬃcient computation of collision timing
under non-deterministic, turn-to-bearing motion. Be-
cause of the approximation’s simpler form, we will be
able to use it to develop a solution for collision timing
that is quantiﬁed over the envelope of future positions
possible for that maneuver in each polygonal domain.

-20-15-10-5510-55101520Safe collision avoidance for horizontal turns

15

6.1 Fixed-radius turn-to-bearing approximation

Points in the shaded area in Fig. 8a (or Fig. 9a) are
reachable by left-turning paths whose radii span the
full range of non-deterministic possibilities. The short-
est (or longest) path to a point in the shaded area is the
one with the minimum (or maximum) radius rα(or rβ),
so the function that expresses that bound matches the
path length for vehicles that turn at exactly that ra-
dius, and leave at an appropriate tangent to reach the
desired point. The expression is given by the second
piece of Eq. (28) (or (29)).

Fig. 14 is a contour plot where the color indicates
the path length. Each path follows a circular arc of a
particular radius, and then leaves the turn at a tangent
to reach the destination point following a straight path
thereafter. The plot has a cut, a discontinuity on the
positive x-axis. The level sets of path length for these
pieces is a circle involute, which we will approximate in
a limited area using a circular arc.

Fig. 14: Trajectory length for ﬁxed-radius turn-to-
bearing motion, for left turns with r = 4. Level sets
of length are circle involutes.

We know that the shortest path between two points
in a Cartesian plane is a line segment between those
points. We can use this to create both an underapprox-
imation of the shortest path and an overapproximation
of the longest path for this region.

Consider a turn-to-bearing path starting from the
origin, traveling in a circular arc, leaving the arc at
a tangent at point T , and traveling in a straight line
thereafter to reach (x, y). The length of the line seg-
ment from the origin to (x, y) is a lower bound for the
path distance, since the true path does not follow a
straight line to reach (x, y). For an upper bound, we
can use the length of a path that follows the circular
arc but continues past T to another point U on the arc,
and then follows a straight (non-tangent) line from U to
(x, y). This is longer than the turn-to-bearing path, be-
cause both paths stay together until point T , and from
that point the turn-to-bearing path follows a straight
line to (x, y). Every path that diverges at or after the
tangent point must thus be longer. Figs. 15a and 15b
illustrate this strategy.

The domain of Figs. 8a and 9a is nearly a polygonal
boundary, but not quite. We create a polygonal domain
for our approximation of path distance in the second
pieces of Eqs. 28 and 29 for a vehicle starting at the
origin using simple linear boundaries. We deﬁne an area

S = {(x, y) | y ≥ 0 ∧ atan(y, x) ≤ φ2}

This area is equivalent to a domain

GR

v (x, y) =y ≥ 0 ∧ (cos(φ2)y ≤ sin(φ2)x)

(38)

(39)

This wedge-shaped domain can be rotated and trans-
lated to allow us to approximate other parts of the cir-
cle. If we want to adjust it so that the initial bearing
is 2φ1, we can translate the domain so the vertex is at
(r sin(φ1), r(1 − cos(φ1)), and rotate it so the clockwise-
most linear boundary is tangent to the circle at that
point.

6.2 Fixed-bearing turn-to-bearing approximation

We prove:

Theorem 11 For left turn-to-bearing motion with 0 <
φ2 < 2π, the length of a path starting from the ori-
gin initially oriented in the direction of the positive x-
axis and arriving at a point (x, y) following one-turn-
to-bearing motion with a ﬁxed radius is bounded by

(cid:112)

x2 + y2 ≤ L(x, y, Θ(x, y, r), r) ≤

rφ2 +

(cid:113)

(x − wx)2 + (y − wy)2

(37)

where wx = r sin(φ2) and wy = r(1 − cos(φ2)).

There are a range of possible turn-to-bearing trajec-
tories that reach from the origin to each point in the
shaded area in Fig. 8b. The minimum path length for
each point–given by the second piece of Eq. (28) – corre-
sponds uniformly to a trajectory of whose ﬁnal bearing
θβ is at the end of the allowable range, and the radius
that achieves that bearing, which varies depending on
the point.

Turn-to-bearing trajectories reaching shaded points
in Fig. 9b have a similar property. The maximum pos-
sible path length to reach these points—given by the

-40-2002040-40-20020402040608016

Y. Kouskoulas, et al.

(a) Path length underapproximation

(b) Path length overapproximation

Fig. 15: Turn-to-bearing paths (in blue) have length approximated by the length of the yellow paths. Path length
for yellow paths can be expressed as functions of the length of their linear components, leading to contour plots
with circular level sets. This approximation is valid within the domain indicated by the shaded wedge, whose angle
in the approximating equations is φ2.

second piece of Eq. (29)—also corresponds uniformly
to trajectories of ﬁxed ﬁnal bearing (this time θα) at
the other end of the allowable range, and the radius
that achieves that bearing, which diﬀers depending on
the point.

The level set of path length in the plane for these
pieces is a line. Thus the boundary of the area that con-
tains the non-deterministic possibilities of our motion
is a linear wave, an isoline in the plane with a ﬁxed
orientation that is moving over time.

Fig. 16 shows the exact length of the turn-to-bearing
path reaching each each point in the plane of motion
when those paths are constrained to end with uniform
orientation. There is only one such path that reaches
each point for a particular choice of bearing, and each
point is colored according to the path length. We do not
consider paths that end during the initial turn unless
their bearing matches the motion we are analyzing, so
although some points to the right of this wedge are
traversed by these paths, the paths are circular at that
stage, and their lengths are not shown in this ﬁgure.
Points on the left side of the wedge are not reachable
or traversable by this type of motion. For this section,
each contour is linear and this type of motion does not
require an approximation to express the path lengths
at each point. We prove:

Theorem 12 For left turn-to-bearing motion, path dis-
tance starting from the origin with orientation 0 (fac-
ing the direction of the positive x-axis) and arriving at
a point (x, y) with orientation θ is given by

L(x, y, θ, R(x, y, θ)) =
(cid:19)

(cid:19)

(cid:18)

(cid:18)

x

cot

θ − 1

+ y

cot

(cid:18) θ
2

(cid:19)

(cid:18) θ
2

−

cos (θ)
1 − cos(θ)

θ

(cid:19) (40)

Fig. 16: Trajectory length for ﬁxed-bearing turn-to-
bearing motion, for left turns with ﬁnal bearing θ = 2.4.
Level sets of length are lines.

The key insight here is that for each region, the angle θ
required to ﬁnd the minimum or maximum path length
is constant, and thus the expression for path distance
has the form of a plane wave as given by Eq. (36). A
plot of path lengths produce linear level sets, which can
be interpreted as a linear wavefront in the plane.

The domains of the second pieces of Eqs. (28) and
(29) are each convex, open sets with linear boundaries.

0.00.20.40.60.81.01.21.40.00.20.40.60.81.00.00.20.40.60.81.01.21.40.00.20.40.60.81.0-40-200204001020304020406080Safe collision avoidance for horizontal turns

They need no approximation to ensure convexity and
can be subdivided into convex polygons to localize the
timing of potential future collisions within them.

6.3 Turning approximation

Each turn-to-bearing maneuver begins with a turn that
follows a circular arc. There is only one path that leads
from the origin to each of the points in the shaded area
in Fig. 8c, so that path is the shortest length path pos-
sible. The path length is given by the third piece of
Eq. (28). The domain of Fig. 9c is a superset of Fig. 8c,
where some of the points have more than one way to
approach them. The longest possible path to reach each
of these points also follows a circular arc, given by the
same expression shown in the second piece of Eq. (29).
The level set of path length for these pieces is a
cardioid, which we will approximate using a circular
wave.

Fig. 17: Trajectory length for a left-turning circular
arc. Level sets of length are cardioids.

Fig. 17 shows the lengths of turn-to-bearing paths
starting at the origin as shown, reaching each point in
the plane of motion, when each path is following a cir-
cular arc from beginning to end.

The key insight here is that if we examine the length
of circular paths that end at points whose location is at
a constant angle in the plane (and thus have a constant
ﬁnal orientation), we can create a function that has
the form of a circular wavefront that matches the path
lengths along that ray. We prove:

Lemma 1 (Circular path length) The length of a
left-turning circular path equals the distance from the

origin scaled by a factor of sinc(x) = sin(x)/x:

rmθm =

(cid:112)x2 + y2
sinc( θm
2 )

.

17

(41)

If we solve the implicit equation of a circle for the ra-
dius, we will ﬁnd that it is proportional to (cid:112)x2 + y2.
We are using the radius to compute the path lengths,
so the bounds will have this term in them as well. Be-
cause sinc(·) decreases monotonically over the interval
(0, π), we know that a circular function that matches
one angle is a lower bound for angles with the same
radii above it.

We deﬁne an area

S = {(x, y) | ∃ r ∈ [r1, r2], θ ∈ [θ1, θ2],

x = r sin(θ) ∧ y = r(1 − cos(θ))}

(42)

whose boundary is limited by circular turning arcs with
diﬀerent radii and straight lines radiating from the start-
ing point at diﬀerent angles, as shown in Fig. 18a. We
can create circular wavefronts centered at the origin
that match the path lengths at the straight edges, and
serve as upper and lower bounds for all of the points
within the shaded area.

These boundaries deﬁne a closed region, and the
reachable area of circular turning motion can be tiled
by these sets. In Thm. 13, we prove upper and lower
bounds for path length in this type of region.

Theorem 13 For left turn-to-bearing motion with 0 <
θ1 < θm < θ2 < 2π, the length of a path starting from
the origin initially oriented in the direction of the pos-
itive x-axis and arriving at a point (x, y) following a
circular arc is bounded by

(cid:112)x2 + y2
sinc (cid:0) θ1

2

(cid:1) ≤ L(x, y, θm, rm) ≤

(cid:112)x2 + y2
(cid:1) .
sinc (cid:0) θ2

2

(43)

The partition has elements of the form of S, but
with diﬀerent parameters r1, r2, θ1, and θ2. Elements
have curved boundaries and are not convex, so we create
a polygonal overapproximation of these elements which
serves as the domain. Fig. 18b shows this approximation
in the ﬁrst quadrant, where the region is deﬁned by

GC(x, y) = (cos(θ1/2)(y − νy) ≥ sin(θ1/2)(x − νx)∧

cos(θ2/2)(y − ιy) ≤ sin(θ2/2)(x − ιx)∧
(ιx − νx)(y − νy) ≤ (ιy − νy)(x − νx)∧
cos(θ1)(y − υy) ≥ sin(θ1)(x − υx)∧
cos(θ2)(y − ωy) ≥ sin(θ2)(x − ωx)) ,

(44)

-20-10010200102030402040608018

Y. Kouskoulas, et al.

(a)

(b)

Fig. 18: Boundaries of a pixel that can be used to tile the reachable area for motion in a circular turn.

where

(νx, νy) = r1(sin(θ1), (1 − cos(θ1)))
(ιx, ιy) = r1(sin(θ2), (1 − cos(θ2)))
(υx, υy) = r2(sin(θ1), (1 − cos(θ1)))
(ωx, ωy) = r2(sin(θ2), (1 − cos(θ2))).

When this approximation is used instead of a parti-
tion for reﬁnement, the other areas that also are part of
the reﬁnement may be duplicated twice, and need to be
evaluated with more than one wavefront combination.
This approximation can be used to safely represent
positions for the highly non-linear area at the beginning
of the circular turn.

7 Sound Solution for Collision Timing between
Two Turning Vehicles

In Secs. 5 and 6, we showed how to subdivide the reach-
able region of turn-to-bearing maneuvers into a cover-
ing with polygonal regions. Recall that the polygonal
regions are sound overapproximations of reﬁnements of
the conﬂict area C, the region where two vehicles could
both potentially reach.

In each of these polygonal regions, the vehicle loca-
tion over time is bounded by the region, which is ﬁxed in
time, and linear or circular curve segments that prop-
agate in time. These boundaries move and form the
front and back edges of propagating waves—the front
edge bounds the location of the vehicle in the longest
paths that could be followed for a given time and the
back edge bounds the location by the shortest paths
that could be followed.

Guaranteeing the absence of collisions now equates
to ensuring that, for each of these polygonal regions,

there are no locations simultaneously contained by the
front and back edges of the waves of position possibili-
ties for both vehicles at the same time.

We represent each region as a polygon, which is an
intersection of ﬁnitely many half-planes. A compact no-
tation for the region is
P = (cid:8)x ∈ R2 | Ax ≤ b(cid:9)

(45)

where x = (cid:2)x y(cid:3)T
the region be bounded.

∈ R2 and b ∈ Rk. We do not require

The overlap property Evaluating timing for positions
to overlap is necessary to establish collision possibili-
ties. This was ﬁrst discussed for individual points in
Thm. 6. A necessary condition for there to be an over-
lap between the time that ownship and intruder are in a
particular point in x, y space is that the waves that con-
strain where each vehicle is must overlap at that point
for some time t. If there exists a point and time that is
within the polygon and within the wavefronts of both
the ownship and the intruder at a common time, then
a collision is possible at that place and future time.

In Sec. 4.1, Eqs. (17) and (18) deﬁne the earliest and
latest times that the vehicle could reach point p. Our
objective is to compute over the polygonal region, de-
ﬁned in (45), the earliest and latest times where the in-
tersections of the ownship and intruder waves can meet.
The intersection of the ownship and intruder waves
form another wave, a set of points at each instant in
time that for that future instant might produce a col-
lision. We will call the wave resulting from the inter-
section the conﬂict wave. Since the over- and under-
approximations for vehicle locations are sound in the
polygonal region of interest, if the conﬂict wave inter-
sects any part of our polygon, then that denotes a po-

0.00.20.40.60.81.00.00.20.40.60.81.00.30.40.50.60.70.80.40.50.60.70.80.91.0Safe collision avoidance for horizontal turns

19

tential collision. The overall earliest and latest times for
collision in this region will be denoted te(P) and tl(P).

7.1 The case with purely linear wavefronts

We ﬁrst treat the case where the front and back edges
of both ownship and intruder position waves are all de-
scribed with the linear boundary given in Eq. (40). This
case happens in region D (see Fig. 13 and Table 1). The
front and back of the linear edges are formed using the
upper and lower bounds on the vehicle speed, sβ and
sα. Each “wavefront” is deﬁned by a tangent and a ve-
locity of propagation. The ownship front wave is
(cid:2)f o

= so

(46)

(cid:21)

(cid:3)

1 f o
2

βt,

(cid:20)x
y

and the ownship back wave is
(cid:2)bo

= so

(cid:21)

(cid:3)

1 bo
2

αt.

(cid:20)x
y

(47)

The intruder’s front wave, which starts at point q =
(cid:2)q1 q2

(cid:3)T
, is
(cid:18)(cid:20)x
y

(cid:3)

(cid:2)f i

1 f i
2

(cid:21)

(cid:19)

− q

= si

βt,

and the intruder back wave is
(cid:2)bi

= si

− q

(cid:19)

(cid:21)

(cid:3)

1 bi
2

αt.

(cid:18)(cid:20)x
y

To relate these coeﬃcients to those in Eq. (40), we

deﬁne

f o
1 = cot (θα/2)θα − 1

f o
2 = cot (θα/2) −

cos (θα)
1 − cos θα

θα

bo
1 = cot (θβ/2)θβ − 1

bo
2 = cot (θβ/2) −

cos (θβ)
1 − cos θβ

θβ

(50)

(51)

(52)

(53)

where the θα and θβ parameters correspond to the bounds
on angle that apply to this particular ownship reﬁne-
ment. We then do the same for the intruder front and
back wave coeﬃcients.

We now write the full set of constraints over the
search space of feasible, x, y, and t. The joint set of
constraints are:
(cid:3)
(cid:2)f o

(54)

(cid:21)

≤ so
βt

1 f o
2

(cid:20)x
y
(cid:21)
(cid:20)x
y
(cid:19)

(cid:2)bo

1 bo
2

(cid:3)

(cid:2)f i

1 f i
2

(cid:3)

(cid:2)bi

1 bi
2

(cid:3)

(cid:21)

(cid:21)

(cid:18)(cid:20)x
y
(cid:18)(cid:20)x
y

− q

(cid:19)

− q

≥ so
αt

≤ si

βt

≥ si

αt

Ax − b ≤ 0.

(48)

(49)

(55)

(56)

(57)

(58)

With purely aﬃne inequality constraints, the problem
of ﬁnding the earliest and latest times of a potential col-
lision can be solved by minimizing or maximizing t over
these constraints. For example, te(P) is the solution to
the optimization problem

minimize t
subject to (54)–(58),

t ≥ 0,

(59)

over the variables x, y, and t. If the problem (59) is
infeasible, then collision is not possible in P. Similarly,
we can ﬁnd tl(P) by forming a maximization problem.

7.2 Case including only circular wavefronts

We now consider the cases where the front and back
waves of ownship and intruder involve only circular
waves. These would correspond to intersections of poly-
gons where both the ownship and the intruder are in
regions A, C or F (see Fig. 13 and Table 1). As described
in Sec. 6, these turning sections are also subdivided (or
tiled) into smaller regions and then overapproximated
as polygons (Fig. 18b).

The timing bounds for these circular wavefronts are

given in Thm. 13, Eq. (43). They have the form
(x − x0)2 + (y − y0)2 = (vt + c0)2

(60)

where v is the speed of propagation of the wavefront in
the plane, c0 determines the timing of its initiation, and
(x0, y0) is the point at which the wavefront originates.
We note that the front and back waves may have dif-
ferent parameters, x0, y0, and c0, and will be denoted
with subscript f for the front wave and with b for the
back wave.

With appropriate coeﬃcients for the ownship and
intruder front and back wave edges, the constraints for
a collision become the following.
f )2
βt + co
(x − xo
b)2
αt + co
(x − xo
f )2
βt + ci
(x − xi
αt + ci
b)2
(x − xi
Ax − b ≤ 0

f )2 + (y − yo
b)2 + (y − yo
f )2 + (y − yi
b)2 + (y − yi

f )2 ≤ (so
b )2 ≥ (so
f )2 ≤ (si
b)2 ≥ (si

(65)

(61)

(62)

(63)

(64)

The four constraints (61)–(64) are quadratic in the de-
cision variables x, y, and t, but they are not convex
constraints. In fact, only the linear case results in a
convex linear program. All other cases can be solved,
in general, using polynomial optimization. Exact algo-
rithms based on the Cylindrical Algebraic Decomposi-
tion (CAD) [4], such as [6,16], as well as approximation
techniques involving moments [15], or sums-of-squares
and semideﬁnite relaxations [23, 20] can be used to de-
termine the timing boundaries on each region.

20

Y. Kouskoulas, et al.

7.3 Visualizing the solutions of wave intersections

Using informal, geometric, and CAD-inspired arguments,
we present an approach to evaluating collision safety
and solving for collision timing. We leave it as future
work to formalize this proof. In Fig. 11 we saw that at
each future moment in time, each vehicle has an area in
which it will be found, encompassing the uncertainty in
its motion between the present and that moment. This
area is a propagating wave of position possibilities that
changes shape and moves forward as time progresses. It
is bounded by the curves that deﬁne the reachable area,
and irregularly-shaped front and back edges that move
orthogonally to the reachable area boundaries, expand-
ing over time. We use the path distance approximations
from Sec. 6 to represent the front and back edges of the
wave. Each encounter has two waves and four diﬀer-
ent edges, i.e. the leading and trailing edges of the area
describing the possible positions for each vehicle.

C: ti

e < to

e < to

l < ti
l

B: to

e < ti

e < to

l < ti
l

D: ti

e < to

e < ti

l < to
l

E: ti

l < to
e

Intruder

A: to

l < ti
e

Ownship

Fig. 19: Loci of intersections between leading and trail-
ing edges of circular wavefronts are plotted together for
a speciﬁc, example geometry. The loci impose an order-
ing of earliest and latest arrival times for each vehicle
for the points in each region of the plane.

In the previous section, we created a covering of
convex polygons, each with a positional wave whose
edges (level sets of path length) are represented by sim-
ple polynomials of at most order two. This breaks the
problem up into a set of simpler problems. In this sec-
tion, we will focus on the problem of solving for wave
intersection within one polygonal region.

For now, we eliminate the polygonal boundaries so
that we can more clearly see the geometry and timing of
overlap of diﬀerent position possibility waves. Later we
will add the polygonal boundaries back into the prob-
lem.

In Sec. 4.1 we developed the overlap criteria for
pointwise collision, namely that the time intervals when
two vehicles might arrive at a point must overlap for
there to be a collision. We can now apply that criteria
to the geometry of uncertain position waves.

One key insight is that we can order the arrival of
wave edges at each point by creating loci of the moving
edges of the position waves. Each locus is a curve con-
sisting of all the points of intersection over time between
two diﬀerent position wave edges, one from each vehi-
cle. The loci divide the horizontal plane into regions
that identify the order the earliest arrival and latest
departure times for each vehicle at each point in the
region.

We consider an example encounter shown in Fig. 19
between two aircraft whose positions are localized by
annuli whose outer and inner curves are expanding cir-
cular waves. The green curve is the locus of the two
leading edges; the blue curve is the locus between trail-
ing edges; the cyan curves are the loci of one leading
and one trailing edge from each vehicle. Points labeled
with vehicle designations mark the center of the circu-
lar waves. The regions are labeled and the ordering for
points in each region imposed by the annuli are indi-
cated.

In regions A and E of Fig. 19, there is no possibility
of collision; the conﬂict wave never enters these regions.
For regions B, C, and D, we can choose any point, and
identify the earliest and latest times that the vehicles
can collide at that point by looking at the ordering, and
calculating the beginning and ending of the collision
timing interval using Eqs. (17)–(18) and Eqs. (28)–(29).
The intersection of the position waves for two ve-
hicles is an area that moves over time and represents
where collisions may occur at each moment; we call
this the conﬂict wave. Fig. 20 shows the conﬂict wave
for our example geometry at diﬀerent snapshots in time
by shading the area of overlap between the areas of po-
sition possibilities. Our position wave edges, and thus
the loci are based on the circular edge approximations
from Section 6, so the shaded conﬂict waves are also ap-
proximations. This approach also works if one or more
of the position-wave edges is a linear boundary.

With a visual understanding of conﬂict waves, we
can reintroduce the convex polygonal boundaries we
created for our approximations.

To compute the earliest or latest time that a colli-
sion is possible, we do not need to evaluate every single

-10-505101520-10-505101520Safe collision avoidance for horizontal turns

21

point in a polygonal area; we can compute earliest and
latest collision times, i.e. Eq. (33)–(34), by looking at
the timing of the collision wave with respect to a ﬁnite
set of points that we call critical points.

This approach corresponds to something akin to
Cylindrical Algebraic Decomposition, which can be used
to ﬁnd extrema of polynomials on sets whose bound-
aries are polynomial equations and inequalities. CAD
can be applied algorithmically, using techniques such
as [6], however the order of decomposition is often im-
portant, and it may be necessary to ensure that the
polynomial coeﬃcients are rational.

7.3.1 Computing the earliest conﬂict time

To ﬁnd the earliest possible collision time (and the lo-
cation of that potential collision) we need to evaluate
when and where the collision wave ﬁrst touches the
area of the polygon. Fig. 21, uses the example geometry
from the previous section, adding a triangle to repre-
sent the convex polygon that deﬁnes the boundary of
this area, and plotting the critical points for computing
te in red. One of these critical points will represent the
point where the earliest possible collision may occur.

Each panel illustrates a type of critical point by
moving the triangle to show a geometry and earliest mo-
ment at which that critical point is the ﬁrst one in the
polygon that comes in contact with the conﬂict wave.
Fig. 21a shows that there is a special case of a critical
point that is not on the edges of the polygon at the loca-
tion of the point where the leading wavefronts of each of
the vehicles ﬁrst touch, if that point is in the collision
area. This is where the conﬂict wave ﬁrst “appears.”
Fig. 21b shows that the vertices of the polygon are also
critical points–this is a consequence of the convexity of
the polygon and front edge of the conﬂict wave. Fig.
21c shows that points where the loci intersect the edges
of the polygon are also critical points and may be the
earliest locations at which the conﬂict wave comes into
contact with the polygon. Fig. 21d shows that points
on a segment of the polygon that are tangent to the
leading wavefront are also critical points.

Critical points can be identiﬁed automatically, and
once this is done, evaluation of the earliest time of col-
lision is a matter of evaluating the earliest time of colli-
sion for each point that contacts the conﬂict wave, and
choosing the minimum time overall.

7.3.2 Computing the latest conﬂict time

To ﬁnd the latest possible collision time (after which
there can be no further possibility of collision) and lo-
cation, we need to calculate when and where the conﬂict

(a) Conﬂict wave at t = 6.1

(b) Conﬂict wave at t = 10.5

(c) Conﬂict wave at t = 14.9

(d) Conﬂict wave at t = 19.3

Fig. 20: Using the example geometry, we plot areas
in which the aircraft can collide at diﬀerent instants in
time–the conﬂict wave.

-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-50510152022

Y. Kouskoulas, et al.

wave last touches the area of the polygon. Fig. 22 uses
the example geometry from the previous section, again
adding a triangle to represent the convex polygonal that
deﬁnes the domain of our approximations, and plotting
critical points in red. One of these critical points will be
the point where the latest possible collision may occur.

(a) Conﬂict wave at t = 19.3

(b) Conﬂict wave at t = 14.9

(c) Conﬂict wave at t = 10.5

(d) Conﬂict wave at t = 6.1

Fig. 21: Types of critical points for computing te

(a) Conﬂict wave at t = 19.3

(b) Conﬂict wave at t = 14.9

Fig. 22: Types of critical points for computing tl

As before, each subﬁgure illustrates a type of crit-
ical point by moving the triangle to show a geometry
and timing where that critical point is the last one the
polygon comes into contact with, before the conﬂict
waves moves away entirely. The types of critical points
used in computing tl are a subset of the types used for
computing te. Fig. 22a shows that the vertices of the
polygon are critical points. Fig. 22b shows that points
where the loci intersect the line segments that make up
the polygon are also critical points. In some cases, the
polygon that contains the approximation is open, i.e.
the edges do not create a closed circuit. In these cases,
the polygonal boundary has rays at the end of it ex-
tending to inﬁnity. We use the angles of these rays to
identify a range of angular directions by which we can
approach inﬁnity and still remain in the polygon. We

-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520-10-505101520Safe collision avoidance for horizontal turns

23

then consider the angular position of the loci in the limit
as we approach inﬁnity, and the ordering of arrival and
departure times at each angle as we approach inﬁnity.
By comparing these angular intervals, we can identify
angular intervals and angular points in the region of
validity where collisions may or may not occur. If a col-
lision may not occur, then we can safely guarantee that
tl must have some ﬁnite value. If there exist angular
directions where a collision may occur, then we cannot
guarantee safety, there can be collisions that occur in
unbounded time. In this case, these angles indicate that
there is no upper bound to the interval in which colli-
sions may occur; we can say the latest collision time is
at inﬁnity.

Once all critical points are identiﬁed, evaluation of
the latest collision time is a matter of evaluating the
latest collision time for each point that contacts the
conﬂict wave, and choosing the maximum time overall.
If we have an unbounded region with a latest collision
time that is also unbounded, then the correct latest
collision time is inﬁnity.

8 Future Work

There are many ways to improve on this work, some of
which we have begun to explore.

The most straightforward continuation of this work
is to move it closer to practical application. To this
end, we have implemented the algorithm in the Ju-
lia language to compute horizontal conﬂict intervals
and plan to synthesize a safety controller that uses
it based on [14]. We are also developing a formaliza-
tion and proofs of correctness speciﬁcally for the con-
troller synthesis, which would allow us to extract a
correct-by-construction controller implementation. We
have started to experiment with the calculation in a
few diﬀerent simulations: to evaluate the safety of ma-
neuvers made by autonomous boats; and also as part of
a mixed vertical/horizontal collision avoidance system
for aircraft, computing horizontal conﬂict intervals for
[12].

Another enhancement would be to explore the trade-
oﬀ in our approximations between accuracy and com-
putational eﬃciency. The calculations and maneuvers
based on them are provably safe, but coarse approxi-
mations lead to maneuvers that are more conservative
and might restrict the system unnecessarily, and tight
approximations increase the computational burden. We
feel that the approximations we have described strike
a good balance, but diﬀerent applications may require
more accuracy or more computational speed from the
analysis. The approach in this paper could be used to
adjust the ﬁneness/coarseness of the covering polygons

and thus set the tradeoﬀ according to requirements of
a particular application.

To make the system more useful in application, we
have experimented with representing position uncer-
tainty in the vehicles – which could represent sensor
error or unexpected variations in future trajectories –
by expanding polygons to contain shapes created by
convolving a circular disk with each of the position
waves, and by extension, the envelopes and collision
waves. This can be done with minimal additional com-
putational eﬀort, but needs further proof and formal
veriﬁcation.

In addition, we are pursuing methods for constrain-
ing the learned policies of safe neural network con-
trollers using the safety predicates from this work, such
as in [7]. The safety predicates developed here may be
used to guide the training of such networks, verify the
correctness of the network policies, and could someday
be used directly in the optimization of such neural con-
trollers.

While the model developed in this work applies only
to turn-to-bearing kinematics, due to the non-determinism
that we incorporate there is a family of trajectories that
are also encompassed by these proofs. The extension
representing position uncertainty allows additional ﬂex-
ibility. Future research could include characterizing this
family of trajectories.

9 Conclusion

In this work, we have created a formally veriﬁed library
that describes uncertain turn-to-bearing kinematics and
allows us to reason about the timing of such maneuvers
without approximation. The representation allows non-
determinism in all turn parameters by quantifying over
state variables.

We have applied the library to compute timing in-
tervals during which the intersecting turns of two ve-
hicles might collide. These timing computations can be
used to determine whether two aircraft will ever travel
close enough to each other (under the range of assumed
kinematics) to be in horizontal conﬂict, and, if so, what
the earliest and latest times of the horizontal conﬂict
can be. By combining horizontal conﬂict timing with
reasoning about the vertical separation of aircraft, we
can ensure that the aircraft are not simultaneously in
horizontal and vertical conﬂict and guarantee the ab-
sence of collisions. To ﬁnd the horizontal conﬂict time
range, we ﬁrst developed expressions of time intervals
without approximation, for a given point accounting
for non-deterministic horizontal maneuvers for each air-
craft. We then applied the library to create approxima-

24

Y. Kouskoulas, et al.

13. Kouskoulas, Y., Machado, T.J., Genin, D.: Formally ver-
iﬁed timing computation for non-deterministic horizontal
turns during aircraft collision avoidance maneuvers. In:
M.H. ter Beek, D. Nickovic (eds.) Formal Methods for In-
dustrial Critical Systems - 25th International Conference,
FMICS 2020, Vienna, Austria, September 2-3, 2020, Pro-
ceedings, Lecture Notes in Computer Science, vol. 12327,
pp. 113–129. Springer (2020)

14. Kouskoulas, Y., Schmidt, A., Jeannin, J.B., Genin, D.,
Lopez, J.: Provably safe controller synthesis using safety
proofs as building blocks.
In: IEEE 7th International
Conference on Software Engineering Research and Inno-
vation, CONISOFT 2019, October 23-25, 2019, Mexico
City, Mexico, pp. 26–35 (2019)

15. Lasserre, J.B.: Global optimization with polynomials and
the problem of moments. SIAM Journal on optimization
11(3), 796–817 (2001)

16. LaValle, S.M.: Planning algorithms. Cambridge Univer-

sity Press (2006)

17. Ma, X., Castanon, D.A.: Receding horizon planning for
Dubins traveling salesman problems. In: Proceedings of
the 45th IEEE Conference on Decision and Control, pp.
5453–5458 (2006)

18. McGee, T.G., Hedrick, J.K.: Path planning and control
for multiple point surveillance by an unmanned aircraft in
wind. In: 2006 American Control Conference, pp. 4261–
4266 (2006)

19. Mitsch, S., Ghorbal, K., Vogelbacher, D., Platzer, A.:
Formal veriﬁcation of obstacle avoidance and navigation
of ground robots. I. J. Robotics Res. 36(12), 1312–1340
(2017).

20. Parrilo, P.A.: Semideﬁnite programming relaxations for
semialgebraic problems. Mathematical programming
96(2), 293–320 (2003)

21. Platzer, A.: Diﬀerential hybrid games. ACM Trans. Com-

put. Log. 18(3), 19:1–19:44 (2017).

22. Platzer, A., Clarke, E.M.: Formal veriﬁcation of curved
ﬂight collision avoidance maneuvers: A case study.
In:
A. Cavalcanti, D. Dams (eds.) FM, LNCS, vol. 5850, pp.
547–562. Springer (2009).

23. Prajna, S., Papachristodoulou, A., Parrilo, P.A.: Intro-
ducing SOSTOOLS: a general purpose sum of squares
programming solver.
In: IEEE Conference on Decision
and Control, vol. 1, pp. 741–746 (2002)

24. Song, X., Hu, S.: 2d path planning with Dubins-path-
based A(cid:63) algorithm for a ﬁxed-wing UAV. In: 3rd IEEE
International Conference on Control Science and Systems
Engineering (ICCSSE), Beijing, China, pp. 69–73 (2017)
25. Wu, A., How, J.: Guaranteed inﬁnite horizon avoidance
of unpredictable, dynamically constrained obstacles. Au-
tonomous Robots 32(3), 227–242 (2012)

26. Zhao, Z., Yang, J., Niu, Y., Zhang, y., Shen, L.: A hi-
erarchical cooperative mission planning mechanism for
multiple unmanned aerial vehicles. Electronics 8, 443
(2019).

tions of the position waves that are useful for calcu-
lating the intersection between two position waves in
subregions of the envelope in which collisions may oc-
cur. Finally, we showed a method for tiling and ﬁtting
sound polygonal approximations of each subregion, re-
sulting in computationally eﬃcient methods for solving
for the earliest and latest horizontal conﬂict times.

References

1. The Coq proof assistant. https://coq.inria.fr (2020).

Accessed: May 24, 2020

2. Abhishek, A., Sood, H., Jeannin, J.B.: Formal veriﬁcation
of braking while swerving in automobiles. In: Proceed-
ings of the 23rd International Conference on Hybrid Sys-
tems: Computation and Control, HSCC ’20. Association
for Computing Machinery, New York, NY, USA (2020)
3. Boldo, S., Lelay, C., Melquiond, G.: Coquelicot: A user-
friendly library of real analysis for Coq. Mathematics in
Computer Science 9(1), 41–62 (2015)

4. Collins, G.E.: Quantiﬁer elimination for real closed ﬁelds
by cylindrical algebraic decompostion. In: Automata the-
ory and formal languages, pp. 134–183. Springer (1975)
5. Cons, M.S., Shima, T., Domshlak, C.: Integrating task
and motion planning for unmanned aerial vehicles. Un-
manned Systems 02(01), 19–38 (2014).

6. Fotiou, I.A., Rostalski, P., Parrilo, P.A., Morari, M.:
Parametric optimization and optimal control using alge-
braic geometry methods. International Journal of Control
79(11), 1340–1358 (2006)

7. Genin, D., Papusha, I., Brul´e, J., Young, T., Mullins, G.,
Kouskoulas, Y., Wu, R., Schmidt, A.: Formal veriﬁca-
tion of neural network controllers for collision-free ﬂight.
In: 14th International Workshop on Numerical Software
Veriﬁcation (NSV) (2021)

8. Isaiah, P., Shima, T.: A task and motion planning al-
gorithm for the dubins travelling salesperson problem.
IFAC Proceedings Volumes 47(3), 9816–9821 (2014).
19th IFAC World Congress

9. Jeannin, J., Ghorbal, K., Kouskoulas, Y., Schmidt, A.,
Gardner, R., Mitsch, S., Platzer, A.: A formally veriﬁed
hybrid system for safe advisories in the next-generation
airborne collision avoidance system. STTT 19(6), 717–
741 (2017).

10. Jeyaraman, S., Tsourdos, A., ˙Zbikowski, R., White, B.A.:
Formal techniques for the modelling and validation of
a co-operating uav team that uses dubins set for path
planning. Proceedings of the 2005, American Control
Conference, 2005. 7, 4690–4695 (2005)

11. Kouskoulas, Y., Genin, D., Schmidt, A., Jeannin, J.:
for non-
Formally veriﬁed safe vertical maneuvers
In:
deterministic, accelerating aircraft dynamics.
M. Ayala-Rinc´on, C.A. Mu˜noz (eds.) Interactive Theo-
rem Proving - 8th International Conference, ITP 2017,
Bras´ılia, Brazil, September 26-29, 2017, Proceedings, pp.
336–353. Springer (2017)

12. Kouskoulas, Y., Genin, D., Schmidt, A., Jeannin, J.:
for non-
Formally veriﬁed safe vertical maneuvers
deterministic, accelerating aircraft dynamics.
In:
M. Ayala-Rinc´on, C.A. Mu˜noz (eds.) Interactive Theo-
rem Proving - 8th International Conference, ITP 2017,
Bras´ılia, Brazil, September 26-29, 2017, Proceedings, Lec-
ture Notes in Computer Science, vol. 10499, pp. 336–353.
Springer (2017)

