2
2
0
2

p
e
S
3
1

]
L
D
.
s
c
[

2
v
9
8
4
5
1
.
5
0
2
2
:
v
i
X
r
a

Computational Reproducibility Within Prognostics and Health
Management

Tim von Hahn, Chris K. Mechefske

Department of Mechanical and Materials Engineering
Queen’s University, Kingston, Canada
t.vonhahn@queensu.ca
chris.mechefske@queensu.ca

ABSTRACT

Scientiﬁc research frequently involves the use of computa-
tional tools and methods. Providing thorough documenta-
tion, open-source code, and data – the creation of repro-
ducible computational research – helps others understand a
researcher’s work. Here, we explore computational repro-
ducibility, broadly, and from within the ﬁeld of prognostics
and health management (PHM). The adoption of reproducible
computational research practices remains low across scien-
tiﬁc disciplines and within PHM. Our text mining of more
than 300 articles, from publications engaged in PHM re-
search, showed that fewer than 1% of researchers made both
their code and data available to others. Although challenges
remain, there are also clear opportunities, and personal ben-
eﬁts, for engaging in reproducible computational research.
Highlighting an opportunity, we introduce an open-source
software tool, called PyPHM, to assist PHM researchers in
accessing and preprocessing common industrial datasets.

1. INTRODUCTION

An article about computational science [...] is merely adver-
tising of the scholarship. The actual scholarship is the com-
plete software development environment and the complete set
of instructions which generated the ﬁgures.

The above statement, provocatively expressed by Buckheit
and Donoho (Buckheit & Donoho, 1995) paraphrases the
thoughts of Jon Claebout. Claebout, a geophysicist, be-
came an early advocate for reproducible computational re-
search. Simply put, reproducible computational research is
performed when “all details of the computation — code and
data — are made conveniently available to others.” (Donoho,
Maleki, Rahman, Shahram, & Stodden, 2008)

Claebout’s advocacy, in the early 1990s, came at a time

von Hahn et al. This is an open-access article distributed under the terms of
the Creative Commons Attribution 4.0 International License, which permits
unrestricted use, distribution, and reproduction in any medium, provided the
original author and source are credited.

when computation was ascending as a means of conduct-
ing scientiﬁc research. Researchers were wrestling with how
these new tools affected the dissemination of ideas. Today,
computational research is ubiquitous across a multitude of
ﬁelds. In addition, the paradigms of the internet, immense
computational power, massive data, and open-source soft-
ware, have enabled tremendous scientiﬁc advances. Yet, cre-
ating and encouraging reproducible computational research
remains a challenge (Ince, Hatton, & Graham-Cumming,
2012), (“Trouble at the lab”, 2013).

Prognostics and health management (PHM) “is an enabling
technology used to maintain the reliable, efﬁcient, economic
and safe operation of engineering equipment, systems and
structures.” (Hu, Miao, Si, Pan, & Zio, 2022) PHM practi-
tioners build these technologies with the same computational
tools used across the breadth of modern science. As such, the
ﬁeld encounters similar challenges surrounding reproducible
computational research.

The work presented here explores the topic of reproducible
computational research from within the context of PHM. We
ask four questions:

1. What does reproducible computational research look

like? We present a practical example from PHM.

2. What

is the state of reproducible computational re-
search? We look at ﬁndings from the broader scientiﬁc
community and discuss our own ﬁndings from within
PHM.

3. What are the beneﬁts to conducting reproducible compu-
tational research? We discuss the underappreciated per-
sonal beneﬁts of conducting reproducible computational
research. Namely, performing computationally repro-
ducible research yields greater exposure of one’s work,
stronger career opportunities, and increased personal sat-
isfaction.

4. What are the challenges and opportunities for repro-
ducible computational research? We segment the chal-

1

 
 
 
 
 
 
ANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

lenges and opportunities into three categories – expe-
rience, motivation, and resources. We discuss them
broadly and from within PHM.

In addition, we introduce an open-source software package,
called PyPHM1, to assist PHM practitioners in accessing
and understanding public domain datasets and creating repro-
ducible data workﬂows. Other ﬁelds have similar software
packages, and we note that there is need of one within PHM.
As such, we invite others to assist in this endeavor.

Isaac Newton wrote to his fellow scientist, Robert Hooke, that
“if I have seen further, it is by standing on the shoulders of gi-
ants.” Newton then passed on his ideas through his published
writings and texts. However, for future generations to stand
on our shoulders we should pass on more than writings. The
data and the code are also needed.

2. EXAMPLE OF REPRODUCIBLE COMPUTATIONAL

RESEARCH

PHM methods can be categorized into physics based and
data-driven methods. Work that uses the physics of failure,
to produce a PHM application, may require the code to be
available if other researchers are to reproduce it. However,
in a data-driven approach, both the code and data are needed
to reproduce the work. The data-driven approach will be the
focus in this section.

Figure 1, as an example, shows the simpliﬁed steps used to
create a machine learning model for detecting tool wear on a
CNC machine. The ﬁgure, combined with Table 1, highlights
some considerations for making the work computationally re-
producible.

Figure 1. The simpliﬁed steps in creating a tool wear de-
tection and prediction model for metal machining on a CNC
machine.

Table 1, below, illustrates the complexities of reproducible
computational research. Modern data-driven research con-
tains intricate data preprocessing steps, feature engineering,
and a complicated selection of parameters. Rarely can the

1PyPHM is publicly available on GitHub: https://github.com/tvhahn/PyPHM

details of this computational workﬂow be fully conveyed in
a research paper. Consequently, the code, data, and addi-
tional documentation are needed to access this tacit knowl-
edge. Unfortunately, many researchers only document their
work through published papers.

3. STATE OF REPRODUCIBLE COMPUTATIONAL RE-

SEARCH

The National Academies of Sciences, Engineering, and
Medicine detailed the state of computational reproducibility
in science in their 2019 report (National Academies of Sci-
ences, Engineering, and Medicine and others, 2019). Their
work showed that the lack of computational reproducibility is
still a concern across science. For example, a study in compu-
tational physics demonstrated that only 6% of articles, from
307 surveyed, make the data and code available (Stodden,
Krafczyk, & Bhaskar, 2018).

Within the AI research domain, Gunderson et al. (Gundersen,
Gil, & Aha, 2018) found that fewer than 6% of articles (out
of a sample of 400) provided access to their code, and fewer
than 30% used a dataset that was publicly available. Franc¸ois
Chollet, the creator of Keras, a popular deep learning library,
laments that many deep learning papers today are “often op-
timized for peer review in both style and content in ways
that actively hurt clarity of explanation and reliability of re-
sults.” (Chollet, 2021) Unfortunately, this “optimization”, as
expressed by Chollet, does not encourage computational re-
producibility.

Does computational reproducibility fair better within PHM?
Astfalck et al.
surveyed 50 PHM papers between 2000
and 2014, focusing on papers building data-driven prognos-
tic models (Astfalck, Hodkiewicz, Keating, Cripps, & Pecht,
2016). Only eight of the papers (16%) utilized open-source
or readily available datasets, and only one paper (2%) had the
code available for inspection.

We too sought an understanding of computational repro-
ducibility within PHM. As such, we text mined approxi-
mately 375 articles from three venues. The venues – Ener-
gies, Mechanical Signals and Systems Processing (MSSP),
and the PHM Conference – all feature work, to varying de-
grees, from within the PHM domain.

In the text mining process we searched for keywords and con-
text that indicated whether the data or code, used in the re-
search, was publicly available. As a comparison, we also text
mined 100 computer science and electrical engineering arti-
cles from arXiv, an open-access archive of scholarly articles.
All the articles, from across the four venues, were randomly
sampled and drawn between the years of 2015 and 2021.

Figure 2 demonstrates the text mining process for a single
publication venue. The process was implemented in Python
using open-source libraries. The interested reader is encour-

2

ANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

Table 1. Creating a tool wear detection and prediction model for a CNC machine and the considerations for computational
reproducibility.

Step Description

Considerations for Computational Reproducibility
Electrical current data is collected from the spindle motor on a CNC
machine. Operators record when the tools are changed due to wear.
Considerations:

1

2

3

4

5

6

7

Data Collection

• Documentation for equipment setup and collection methodology required
• Meta-data for describing properties of dataset (e.g., collection frequency; time of collec-

tion; time when tools are changed; etc.) need to be provided
• Data should be stored on online repository accessible to public

Data Preprocessing

The raw current data is broken-up into segments. Considerations:

• Code and description provided showing how data is broken-up.

Data Splits

The data is split into training, validation, and testing data sets.
Considerations:

• Data splits must be done before any scaling, feature engineering, or model training
• Code and description of data split methodology should be provided

Feature Engineering
and Data Scaling

Feature engineering is conducted on the data splits. The features are then
scaled. Considerations:

• Code and parameters used for feature engineer and scaling are made available

Model Construction
and Training

Evaluation

Model is constructed and trained on the data that has been feature
engineered/scaled. Considerations:

• The architecture and design decisions should be documented and made available
• Parameters used in model training should be recorded
• Hardware used is speciﬁed

The model performance is evaluated. Considerations:

• Metrics used to evaluate are documented
• Final model saved and made available to others
• Code for data visualizations is provided

Discussion of work is documented. Considerations:

Documentation

• Paper should be made available, either as open-access, or as a preprint
• Code for reproducing the results should be made available on GitHub, Gitlab, or another

repository.

• Software dependencies clearly deﬁned

aged to visit the project page2 and inspect the code of this text
mining process.

Figure 2. The steps used in the text mining process.

2This work, and our future text mining research, is being conducted in
the open and is available on GitHub: https://github.com/tvhahn/arxiv-code-
search

In the ﬁrst step, as illustrated in Figure 2, web-scraping was
used to build an index of all the papers published, at a spec-
iﬁed venue, during a certain period. The web-scraping li-
braries Beautiful Soup and Selenium were used. From there,
100 to 150 articles were randomly selected. The pdfs of the
articles were then downloaded with a script, or manually, de-
pending on the publication venue.

In step four, the raw text from the pdfs were extracted using
pdfminer.six. Regular expressions (regex) were implemented
using Python’s standard library to search for keywords and
short phrases, as shown in step ﬁve. Table 2 demonstrates
several regular expressions, amongst many, that were used in
the keyword search. If a keyword match was found then the
paragraph containing the keyword was saved into a csv ﬁle.

Finally, each paragraph in the csv ﬁle was manually labelled
to designate if the paragraph provided indication of public
data or code. The results were then aggregated across each
unique article.

3

Randomly select 100 ar�cles12Create index of all ar�clesthrough web scrapingDownload ar�cle pdfs manually or with script34Convert pdfs toraw text5Useregextoiden�fyparagraphscontainingkeywords6Save as csv ﬁleCSV7Manually labelparagraphsANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

Table 2. A sample of keywords and phrases, along with the
regex code, used in the text mining process.

Keywords
“used
dataset”
“open-
source”
“code
available”

Regex Code

\b(used )(?:\ W+\w+){0,5}?\W+(dataset)\b

\b(open−source|open source)\b

\b(code )(?:\ W+\w+){0,9}?\W+(available)

From the results of the text mining, as shown in Figure 3, 21%
of the technical papers from the PHM Conference provided
public access to their data or code. However, only 4% of
the articles sampled from the PHM Conference, as shown in
Figure 4, provide access to the code used in their research. In
general, we observed that data is much more likely to be made
publicly available than the code, regardless of the publication
venue. The distributions from the other publication venues
are found in Figure 7 in the Appendix.

Figure 3. Percentage of articles, from various publications,
that provide public access to their data or code. The articles
were randomly sampled from 2015 to 2021. The sample size
(e.g. n=150) for each publication venue is shown below its
name.

Our text mining effort is ongoing as we seek a broader under-
standing of computational reproducibility within PHM and
beyond, and we will further document these results in future
publications. For now, we believe this observational study
corroborates the evidence from Astfalck et al.; that is, the
ﬁeld of PHM suffers from similar issues of computational re-
producibility as in other disciplines.

4. PERSONAL BENEFITS OF REPRODUCIBLE COMPU-

TATIONAL RESEARCH

We observe that many commentators, when discussing com-
putational reproducibility, appeal to the reader’s sense of al-

Figure 4. The distribution of data and code availability from
papers published at the PHM Conferences, between 2015 and
2021. 150 articles were randomly sampled to obtain the re-
sults.

truism and morality. “Reproducibility is a cornerstone of the
scientiﬁc method” (Gundersen et al., 2018) and therefore, it
should be honored. In fact, we too strongly appealed to the
reader’s sense of “rightness” in the introduction.

However, in this section, we highlight several beneﬁts of
computationally reproducible work that are less discussed.
Rather than appealing to a sense of altruism, these appeal
to the individual’s self-interest. Namely, reproducible com-
putational research can lead to increased exposure of a re-
searcher’s work, better career opportunities, and a greater
sense of satisfaction.

4.1. Increased Exposure

Reproducible computational research, by its nature, requires
work to be open and transparent. Most often, this necessi-
tates that the code, data, and text are made freely available
on the internet. Fortunately, this additional effort does not go
unrewarded.

A signiﬁcant amount of research has shown that freely re-
leasing the code, data, and published text (either through a
preprint or open-access article) leads to increased citations
(Frachtenberg, 2022; Dorch et al., 2015; Henneken & Acco-
mazzi, 2011; Piwowar & Vision, 2013; Piwowar et al., 2007;
Colavizza et al., 2020; Fu & Hughey, 2019; Christensen et al.,
2019). In some domains, the increase was 2-fold (Wahlquist
et al., 2018). Including the code and data, alongside scientiﬁc
articles, is a clear and obvious way to produce differentiated
research.

4

arXiv(n=100)PHM Conf.(n=150)MSSP(n=100)Energies(n=124)45%21%8%6%Data and Code Availablility for DifferentPublications (articles from 2015-2021)Data and Code NotPublicly AvailableOnly DataPublicly AvailableOnly CodePublicly AvailableBoth Data and CodePublicly Available79%17%3%1%PHM Conf. Data and Code Availablility(articles from 2015-2021)ANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

4.2. Career Opportunities

STEM (science, technology, engineering, and mathematics)
occupations are “projected to grow over two times faster than
the total for all occupations in [this] decade,” according to
the U.S. Bureau of Labor Statistics. Computer related occu-
pations will produce most of this growth (Zilberman & Ice,
2021). Researchers engaged in computational science will
stand to beneﬁt as their skills are increasingly in demand.

In this competitive job market, employers have begun to ac-
cept alternate credentials, as opposed to a traditional uni-
versity degrees. Candidates can be hired through an inten-
sive bootcamp program or enter a company as an apprentice.
Competency can also be demonstrated through a real-world
portfolio of work (Rainie & Anderson, 2017).

Creating computationally reproducible research requires the
full body of work to be accessible and understandable. There-
fore, not only does reproducible computational research help
the scientiﬁc community, but it also creates a strong body of
work for an individual’s portfolio, thus enhancing their op-
portunities for employment.

4.3. Satisfaction

The phenomenon of open-source software (OSS) consistently
raises one question: why do individuals dedicate enormous
amounts of their time for little economic beneﬁt? Intrinsic
motivation – a sense of internal satisfaction – is seen as a
strong driver for individuals to contribute to OSS (Hars &
Ou, n.d.), (Bitzer, Schrettl, & Schr¨oder, 2007).

The act of producing reproducible research is like that of
open-source software development. One’s work, through the
code, data, and documents, is given to the world with no ex-
pectation of reward. Yet, the act of creating the work, and
then selﬂessly sharing it with others, is internally satisfying.
From the personal experience of the authors, this is one bene-
ﬁt of reproducible computational research that should not be
ignored.

5. CHALLENGES AND OPPORTUNITIES

As discussed above, there are challenges in creating repro-
ducible computational research. We have split these chal-
lenges, and subsequent opportunities, into three categories,
as shown in Figure 5.

The ﬁrst challenge concerns expertise. Creating reproducible
computational research requires a specialized skillset that
is generally covered in less depth by university curricula
(National Academies of Sciences, Engineering, and Medicine
and others, 2019). The skillset may include the use of version
control, for both code and data; knowledge of containeriza-
tion; or expertise in Linux, to name a few examples.

Education efforts are being made to improve computational

Figure 5. The three categories of challenges and opportunities
for reproducible computational research.

researcher’s expertise.
Software Carpentry, a volunteer
run organization, has been offering training since 1998 to
improve the computational skillset of researchers (Wilson,
2014). Topics of computational reproducibility have been
added to the curriculum, from medicine to computer science,
at multiple universities (An introduction to the foundations
of neuro data science, n.d.; Reproducible and Collaborative
Data Science, n.d.; Principles, Statistical and Computational
Tools for Reproducible Data Science, 2017). However, we
are unaware of any courses or training speciﬁc to PHM. This
is an area of opportunity.

The second challenge concerns that of motivation. Repro-
ducible computational research requires extra effort. Unfor-
tunately, the extra effort, combined with the pressure to pub-
lish and lack of recognition, creates an impediment to re-
producibility (National Academies of Sciences, Engineering,
and Medicine and others, 2019). As discussed in Section
4, we believe that a wider recognition towards the beneﬁts
of reproducible computational research can help motivate re-
searchers. Funding organizations, and academic journals, are
also encouraging researchers to consider computational re-
producibility (Stodden, Guo, & Ma, 2013).

Likewise, PHM speciﬁc conferences and journals should in-
clude measures to encourage computational reproducibility.
As an example of this encouragement, a measure of com-
putational reproducibility can be integrated into the peer re-
view process. Speciﬁc recognition can also be given to pa-
pers that demonstrate computational reproducibility. Overall,
a broader discussion on how to improve computational repro-
ducibility is warranted.

Finally, the lack of domain speciﬁc resources, either in tool-
ing or publicly available datasets, can impede computational
reproducibility. The computational workﬂow, within a spe-
ciﬁc ﬁeld, may be similar across a variety of research projects.
Thus, software tools can be created to standardize these work-

5

ExpertiseMotivationResourcesChallenges:•Specialized skillsetOpportunities:•Increase education and trainingChallenges:•Extra effort •Lack of recognitionOpportunities:•Recognize benefits•Further promotionChallenges:•Lack of datasets•Lack of software toolingOpportunities:•Create and share datasets•Build domain specific toolingANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

ﬂows. The standardization allows researchers to better grasp
and more quickly reproduce each other’s work and avoids a
myriad of ad-hoc approaches. The standardization also en-
ables researchers to spend more time on higher-value tasks,
such as developing novel algorithms, as opposed to prepro-
cessing data. The software can also be coupled with open-
source datasets to facilitate the comparison of results between
research groups.

Table 3, below, lists several open-source software packages
that are speciﬁc to certain domains. These software packages
assist researchers in accessing datasets and reproducing com-
putational workﬂows. The software, and their documenta-
tion, also assists in educating researchers on domain speciﬁc
problems, techniques, and methods, and demonstrate how to
implement solutions in a reproducible manner.

Table 3. List of well-known scientiﬁc software packages,
from a variety of domains, that are used to enhance computa-
tional reproducibility.

Software Name
fMRIPrep
(Esteban et al.,
2019)

Domain

Neuroimaging

medicaltorch
(Perone et al.,
2018)

astroML
(Vanderplas et
al., 2012)

torchvision
(Paszke et al.,
2019)

Natural
Language
Toolkit (NLTK)
(Bird et al.,
2009)

Medical
imaging

Astronomy and
astrophysics

Computer
vision

Natural
language
processing

Description
Preprocessing pipeline
for functional-MRI
data
General package for
accessing medical
imaging datasets and
standardize
preprocessing methods
Machine learning tools
and data for astronomy
and astrophysics
Popular datasets,
model architectures,
and image
transformations for
computer vision.
Open-source modules,
datasets, and tutorials
supporting research
and development in
natural language
processing

As an example of this software, consider torchvision. The
software allows researchers to download common computer
vision datasets, apply well recognized preprocessing tech-
niques in a standardized way, and even load already trained
deep learning models. Various tutorials and examples are
available to help individuals understand the functionality of
the software package.

Within PHM, there is a noted lack of high-quality, and large,
datasets (Zhao et al., 2019), (Wang, Taylor, & Rees, 2021).
The lack of these datasets may be due to the proprietary na-
ture of industrial data or the poor understanding of their need
within the PHM research community. We encourage others
to freely share their PHM datasets.

The ﬁeld of PHM, to the knowledge of the authors, also lacks

Figure 6. Class hierarchy for the PyPHM software package.
The PyPHM base class implements functionality that extends
across all datasets. The dataset classes implement function-
ality for individual datasets (the UC-Berkeley milling dataset
and the Airbus helicopter dataset are shown). Finally, indi-
vidual data preparation workﬂows are implemented for each
dataset. Different preparation methods can be implemented,
with each method mimicking a common workﬂow demon-
strated by others.

an open-source software package, like those found in Table 3.
Such a tool would enable the easy access to PHM datasets and
the implementation of computational workﬂows. We see this
as an opportunity, and as such, we have begun the process of
building such a software tool, discussed below.

6. AN OPEN-SOURCE SOFTWARE TOOL FOR PHM

DATASETS

Furthermore, users must

Currently, PHM datasets are spread-out across the inter-
net and require users to both ﬁnd the data and then man-
ually download it.
implement
their own data preprocessing steps, which can be a time-
consuming endeavor. The open-source software tool being
developed, called PyPHM, will enable PHM practitioners to
easily source, download, and preprocess publicly available
PHM datasets in only a few lines of code. Researchers can
use the preprocessed data from PyPHM, for example, for fea-
ture engineering or machine learning experiments.

Figure 6 illustrates the class hierarchy of the PyPHM software
package. Speciﬁc datasets are accessible by their own class
(beneath the base PyPHM class). The dataset class allows
the downloading and extraction of the dataset, along with
general preprocessing methods. Finally, simple data prepro-
cessing methods, such as windowing, are constructed in their
own preprocessing method classes. PyPHM is implemented
in Python and relies on common open-source libraries like
NumPy (Harris et al., 2020) and SciPy (Virtanen et al., 2020).

Currently, there are three datasets implemented in PyPHM:
the UC-Berkeley Milling Dataset (Agogino & Goebel, 2007),
the IMS Bearing Dataset (Lee, Qiu, Yu, Lin, et al., 2007),
and the Airbus Helicopter Accelerometer Dataset (Garcia,
Michau, Ducoffe, Gupta, & Fink, 2021). More will be im-
plemented in the future.

PyPHM seeks to be a domain speciﬁc resource, within PHM,
that can assist researchers in conducting reproducible compu-

6

Preprocessing Method ClassesDataset ClassesPyPHM Base ClassPyPHMMillingDataLoadMillPrepMethodAMillPrepMethodBAirbusDataLoadAirbusPrepMethodAANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

tational research. We highlight three challenges, as noted in
Section 5, that PyPHM seeks to speciﬁcally addresses.

1. Challenge of expertise: PyPHM abstracts away the com-
plexity of downloading, manipulating, and preprocessing
PHM datasets. Thus, a broader audience can engage with
PHM datasets, and do so in a way that can be readily re-
produced by others. In addition, PyPHM is built upon
common open-source tooling.
Individuals can educate
themselves on these tools, from a PHM context, through
PyPHM’s documentation and examples.

2. Challenge of extra effort: PyPHM allows individuals to
quickly implement a standardized workﬂow that other re-
searchers have used. This saves time, reduces effort, and
prevents the implementation of ad-hoc workﬂows that
are difﬁcult for others to reproduce.

3. Challenge due to lack of data: Currently, PHM datasets
are dispersed across the internet. PyPHM can act as an
index for these PHM datasets and a central location to
access them. PyPHM can also help individuals share and
explore under-utilized PHM datasets once more datasets
are added.

PyPHM is in active development. We welcome feedback and
contributions to this nascent open-source software project.

7. CONCLUSION

Computation is used across the breadth of science, and cer-
tainly within PHM. However, creating reproducible compu-
tational research remains a challenge due to the expertise re-
quired, motivational challenges, and lack of domain speciﬁc
resources. Our survey of more than 300 articles, from pub-
lications engaged in PHM research, demonstrates that most
researchers within PHM do not provide access to their data
or code.

Despite these challenges,
there are clear motivations and
opportunities for improving reproducible computational re-
search. In this work, we have highlighted three of the per-
sonal beneﬁts of conducting reproducible computational re-
search. Namely, creating reproducible computational re-
search can increase a researcher’s exposure, improve career
opportunities, and increase one’s sense of satisfaction.

Furthermore, we have identiﬁed a need for an open-source
software package to assist PHM researchers in accessing and
preprocessing common PHM datasets. As such, we have cre-
ated PyPHM, and we encourage others to assist in our efforts,
either through contributions or suggestions.

REFERENCES

Agogino, A., & Goebel, K.

nasa ames prognostics data repository.

(2007). Milling data set.
Mof-

Retrieved from https://

fett Field, CA.
ti.arc.nasa.gov/tech/dash/groups/
pcoe/prognostic-data-repository/
Astfalck, L., Hodkiewicz, M., Keating, A., Cripps, E., &
Pecht, M. (2016). A modelling ecosystem for prognos-
tics. In Annual conference of the phm society (Vol. 8).
Bird, S., Klein, E., & Loper, E. (2009). Natural Language
Processing with Python: Analyzing Text with the Natu-
ral Language Toolkit. O’Reilly Media, Inc.

Bitzer, J., Schrettl, W., & Schr¨oder, P. J. (2007). Intrinsic mo-
tivation in open source software development. Journal
of comparative economics, 35(1), 160–169.

Buckheit, J. B., & Donoho, D. L. (1995). Wavelab and re-
producible research. In Wavelets and statistics (pp. 55–
81). Springer.

Chollet, F. (2021). Deep learning with python. Simon and

Schuster.

Christensen, G., Dafoe, A., Miguel, E., Moore, D. A., &
Rose, A. K.
(2019). A study of the impact of data
sharing on article citations using journal policies as a
natural experiment. PLoS One, 14(12), e0225883.
Colavizza, G., Hrynaszkiewicz, I., Staden, I., Whitaker, K.,
& McGillivray, B. (2020). The citation advantage of
linking publications to research data. PloS one, 15(4),
e0230416.

Donoho, D. L., Maleki, A., Rahman, I. U., Shahram, M., &
Stodden, V. (2008). Reproducible research in compu-
tational harmonic analysis. Computing in Science &
Engineering, 11(1), 8–18.

Dorch, B. F., Drachen, T. M., & Ellegaard, O. (2015). The
data sharing advantage in astrophysics. Proceedings
of the International Astronomical Union, 11(A29A),
172–175.

Esteban, O., Markiewicz, C. J., Blair, R. W., Moodie, C. A.,
Isik, A. I., Erramuzpe, A., . . . others (2019). fmriprep:
a robust preprocessing pipeline for functional mri. Na-
ture methods, 16(1), 111–116.

Frachtenberg, E. (2022). Research artifacts and citations in
computer systems papers. PeerJ Computer Science, 8,
e887.

Fu, D. Y., & Hughey, J. J. (2019). Meta-research: Releasing a
preprint is associated with more attention and citations
for the peer-reviewed article. Elife, 8, e52646.
Garcia, G. R., Michau, G., Ducoffe, M., Gupta, J. S., & Fink,
O. (2021). Temporal signals to images: Monitoring the
condition of industrial assets with deep learning image
processing algorithms. Proceedings of the Institution
of Mechanical Engineers, Part O: Journal of Risk and
Reliability, 1748006X21994446.

Gundersen, O. E., Gil, Y., & Aha, D. W. (2018). On repro-
ducible ai: Towards reproducible research, open sci-
ence, and digital scholarship in ai publications. AI mag-
azine, 39(3), 56–68.

Harris, C. R., Millman, K. J., van der Walt, S. J.,

7

ANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

. . .
Gommers, R., Virtanen, P., Cournapeau, D.,
Oliphant, T. E.
(2020, September). Array pro-
gramming with NumPy. Nature, 585(7825), 357–
Retrieved from https://doi.org/10
362.
.1038/s41586-020-2649-2
doi: 10.1038/
s41586-020-2649-2

Hars, A., & Ou, S.

(n.d.). Working for free?–motivations
of participating in open source projects; 2001. In 34th
annual hawaii international conference on system sci-
ences (hicss-34), hava´ı (pp. 25–39).

Henneken, E. A., & Accomazzi, A. (2011). Linking to data-
effect on citation rates in astronomy. arXiv preprint
arXiv:1111.3618.

Hu, Y., Miao, X., Si, Y., Pan, E., & Zio, E. (2022). Prognos-
tics and health management: A review from the per-
spectives of design, development and decision. Relia-
bility Engineering & System Safety, 217, 108063.
Ince, D. C., Hatton, L., & Graham-Cumming, J. (2012). The
case for open computer programs. Nature, 482(7386),
485–488.

An introduction to the foundations of neuro data sci-
(n.d.). McGill University. Retrieved from

ence.
https://neurodatascience.github.io/
QLS612-Overview/

Lee, J., Qiu, H., Yu, G., Lin, J., et al. (2007). Bearing data set.
IMS, University of Cincinnati, NASA Ames Prognostics
Data Repository, Rexnord Technical Services.

National Academies of Sciences, Engineering, and Medicine
and others. (2019). Reproducibility and replicability in
science.

Paszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J.,
Chanan, G., . . . Chintala, S.
(2019). Pytorch: An
imperative style, high-performance deep learning
library. In H. Wallach, H. Larochelle, A. Beygelzimer,
F. d'Alch´e-Buc, E. Fox, & R. Garnett (Eds.), Advances
information processing systems 32 (pp.
in neural
8024–8035).
Retrieved
Curran Associates,
from http://papers.neurips.cc/paper/
9015-pytorch-an-imperative-style
-high-performance-deep-learning
-library.pdf

Inc.

Perone, C. S., cclauss, Saravia, E., Ballester, P. L.,
(2018). medicaltorch: An open-
& MohitTare.
source pytorch medical imaging framework. GitHub.
Retrieved from https://doi.org/10.5281/
zenodo.1495335 doi: 10.5281/zenodo.1495335

Piwowar, H. A., Day, R. S., & Fridsma, D. B. (2007). Shar-
ing detailed research data is associated with increased
citation rate. PloS one, 2(3), e308.

Piwowar, H. A., & Vision, T. J. (2013). Data reuse and the

open data citation advantage. PeerJ, 1, e175.

Principles, statistical and computational tools for repro-
ducible data science. (2017, Oct). Harvard University.
Retrieved from https://pll.harvard.edu/

course/principles-statistical-and
-computational-tools-reproducible
-data-science

Rainie, L., & Anderson, J. (2017). The future of jobs and

jobs training. Pew Research Center.
Reproducible and collaborative data science.
versity of California, Berkeley.
https://berkeley-stat159-f17.github
.io/stat159-f17/

(n.d.). Uni-
Retrieved from

Stodden, V., Guo, P., & Ma, Z. (2013). Toward reproducible
computational research: an empirical analysis of data
and code policy adoption by journals. PloS one, 8(6),
e67111.

Stodden, V., Krafczyk, M. S., & Bhaskar, A. (2018). Enabling
the veriﬁcation of computational results: An empirical
In Pro-
evaluation of computational reproducibility.
ceedings of the ﬁrst international workshop on prac-
tical reproducible evaluation of computer systems (pp.
1–5).
Trouble at the lab.

The Economist. Re-
trieved from https://www.economist.com/
briefing/2013/10/18/trouble-at-the
-lab

(2013, Oct).

Vanderplas, J., Connolly, A., Ivezi´c, ˇZ., & Gray, A. (2012,
Introduction to astroml: Machine learning for
oct.).
astrophysics. In Conference on intelligent data under-
standing (cidu) (p. 47 -54). doi: 10.1109/CIDU.2012
.6382200

Virtanen, P., Gommers, R., Oliphant, T. E., Haberland, M.,
Reddy, T., Cournapeau, D., . . . SciPy 1.0 Contributors
(2020). SciPy 1.0: Fundamental Algorithms for Scien-
tiﬁc Computing in Python. Nature Methods, 17, 261–
272. doi: 10.1038/s41592-019-0686-2

Wahlquist, A. E., Muhammad, L. N., Herbert, T. L., Ramakr-
ishnan, V., & Nietert, P. J. (2018). Dissemination of
novel biostatistics methods: Impact of programming
code availability and other characteristics on article ci-
tations. PloS one, 13(8), e0201590.

Wang, W., Taylor, J., & Rees, R. J. (2021). Recent advance-
ment of deep learning applications to machine condi-
tion monitoring part 1: A critical review. Acoustics
Australia, 1–13.

Wilson, G.

(2014). Software carpentry:

lessons learned.

F1000Research, 3.

Zhao, R., Yan, R., Chen, Z., Mao, K., Wang, P., & Gao,
R. X.
(2019). Deep learning and its applications to
machine health monitoring. Mechanical Systems and
Signal Processing, 115, 213–237.

Zilberman, A., & Ice, L.

(2021). Why computer occupa-
tions are behind strong stem employment growth in the
2019–29 decade. Computer, 4(5,164.6), 11–5.

8

ANNUAL CONFERENCE OF THE PROGNOSTICS AND HEALTH MANAGEMENT SOCIETY 2022

APPENDIX

Figure 7. The distribution of data and code availability from papers at the arXiv, MSSP, and Energies venues. Articles were
sampled between 2015 and 2021.

9

Data and Code NotPublicly AvailableOnly DataPublicly AvailableOnly CodePublicly AvailableBoth Data and CodePublicly Available55%24%17%4%arXiv Data and Code Availablility(articles from 2015-2021)Data and Code NotPublicly AvailableOnly DataPublicly AvailableOnly CodePublicly AvailableBoth Data and CodePublicly Available92%7%0%1%MSSP Data and Code Availablility(articles from 2015-2021)Data and Code NotPublicly AvailableOnly DataPublicly AvailableOnly CodePublicly AvailableBoth Data and CodePublicly Available94%4%2%0%Energies Data and Code Availablility(articles from 2015-2021)