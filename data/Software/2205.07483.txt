Three-loop topology analysis of neutral B-meson
mixing with tapir

TTP22-033, P3H-22-053

2
2
0
2

y
a
M
6
1

]
h
p
-
p
e
h
[

1
v
3
8
4
7
0
.
5
0
2
2
:
v
i
X
r
a

Marvin Gerlach
Institut f¨ur Theoretische Teilchenphysik, Karlsruhe Institute of Technology (KIT),
Wolfgang-Gaede-Straße 1, 76128 Karlsruhe, Germany

E-mail: gerlach.marvin@protonmail.com

Abstract. Modern advances in particle physics depend strongly on the usage of reliable
computer programs.
In this context two issues become important: The usage of powerful
algorithms to handle the amount of evaluated data properly, and a software architecture capable
to overcome the problems of maintainability and extendability. We present our approach to such
a computer program, called tapir. This tool assists computations in perturbative quantum
ﬁeld theory in many ways. Such calculations often involve the evaluation of a large amount
of Feynman diagrams with multiple loops. tapir helps in reducing the number of diagrams,
and the resulting integrals thereof, by identifying and minimizing their topological structure.
We will focus on a three-loop calculation which is needed for the next-to-next-to leading order
predictions of neutral B-meson systems. We show how tapir can be utilized for this kind of
calculation.

1. Introduction
The outstanding experimental eﬀort of recent years led to an unreached precision in ﬂavor
observables. Among the most prominent ones is the mixing of neutral meson states such as the
Bs and Bd. We take in this work only Bs into account, the extension to Bd is straightforward.
A more elaborate overview for this topic is given in e.g. Ref. [1].

Bs can oscillate in its antiparticle state Bs via box diagrams. Therefore, the mass eigenstates
diﬀer from the ﬂavor eigenstates. A few observables for this ﬂavor oscillation process are of
particular interest in connection to precision tests of the Standard Model. They can be derived
from the transition amplitude from one ﬂavor eigenstate to another, which we denote as

−i(2π)4δ(4) (pi − pj) Σs

ij =

(cid:104)i| iT |j(cid:105)
2MBs

.

(1)

i and j describe either a particle state Bs or an antiparticle state Bs. MBs is the average mass
of the meson.

Especially the oﬀ-diagonal elements of this amplitude are interesting for the mixing due to

the connection to the mass and decay width matrix:

M s

Σs

12 =
12 = i (Σs
Γs

21)∗

12 + (Σs
2
12 − (Σs

≡ Disp(Σs
12) ,
21)∗) ≡ 2Abs(Σs

12) .

(2)

In order to compute these oﬀ-diagonal matrix elements, it is hence necessary to evaluate the
dispersive and the absorptive part of the process Bs → Bs. They correspond to the real and

 
 
 
 
 
 
imaginary part of the scattering amplitude where the CKM matrix elements are factored out.
According to the optical theorem, only virtual particles contribute to Γs
12 which can be produced
on-shell. For M s
12 exists no such restriction. Hence, Γs
12 is straightforward to compute when
connected to the calculation of the discontinuity of the complex plane, and with it to Cutkosky’s
cutting rules [2].
From M s

12 we are able to compute three physical observables: The mass diﬀerence

12 and Γs

between heavy (H) and light (L) mass eigenstates,

the decay width diﬀerence,

and the CP asymmetry

∆Ms = M s

H − M s

L = 2|M s

12| ,

∆Γs = Γs

L − Γs

H ≈ 2|Γs

12| ,

as
fs = Im

(cid:19)

.

(cid:18) Γs
12
M s
12

(3)

(4)

(5)

as
fs is a measure of CP breaking in the mixing by quantifying how much the mass eigenstates
diﬀer from the CP eigenstates.

∆Γs is computed in an eﬀective ﬁeld theory with the eﬀective interaction Hamiltonian H∆B=1:

Γs

12 =

1
2MBs

(cid:18)

Abs

i (cid:104)Bs|

(cid:90)

d4x H∆B=1(x)H∆B=1(0) |Bs(cid:105)

(cid:19)

.

(6)

For H∆B=1 we choose the basis of Ref. [3] which is closed under renormalization when
It also has the advantage of preventing traces including γ5. The
including QCD eﬀects.
numerically most relevant eﬀective operators are the so-called current-current operators. Taking
only those into account, we have

H∆B=1 =

4GF√
2

(cid:88)

q1,q2

Vq1bV ∗

q2s (Cq1q2

1 P q1q2

1 + Cq1q2

2 P q1q2

2

The sum iterates over q1, q2 ∈ {u, c}. The operators are given by

P q1q2
1
P q1q2
2

= (s T aγµPL q2) (q1 T aγµPL b) ,
= (s γµPL q2) (q1 γµPL b) ,

) .

(7)

(8)

with PL = (1 − γ5)/2.

Equation (6) can be even further simpliﬁed by using the heavy quark expansion (HQE). This
is an operator product expansion around the small parameter Λ/mb. It translates the non-local
hadronic matrix element of eq. (6) to local operator insertions with new Wilson coeﬃcients H
and ˜HS. We hence get

Γs

12 =

G2
F m2
b
24πMBs

(cid:16)

(cid:17)
H (cid:104)Bs| Q |Bs(cid:105) + ˜HS (cid:104)Bs| ˜QS |Bs(cid:105)

,

with

Q = 4 (si γµPL bi) (sj γµPL bj) ,

˜QS = 4 (si PL bj) (sj PL bi) .

(9)

(10)

Corrections to eq. (6) including only current-current operators are currently known up to
s) [8, 9]. To complete the missing NNLO

O(αs) [4, 5, 6, 7] and only partially known to O(α2
contributions, diagrams as in ﬁg. 1 have to be considered.

Figure 1. Sample diagrams which contribute at NNLO to ∆Γs within the eﬀective ∆B = 1
theory.

2. Diagram and topology analysis
Analyzing the diagrams of ﬁg. 1 gives a hint which problems may occur.
In order to allow
for one-particle reducible diagrams (diagram 1), we have to use the options “notadpoles” and
“onshell” of qgraf [10] during diagram generation. Unfortunately, “onshell” also discards
diagram 2. Therefore, we deﬁne a second diagram class where only the option “offshell” is
speciﬁed. We then use a special diagram ﬁlter of tapir [11] to remove the unwanted diagrams.
We do this by specifying the following in the config ﬁle:

* tapir . filter e x t e r n a l _ s e l f _ e n e r g y _ b r i d g e : false

This ﬁlter excludes all diagrams whose external legs have self-energy corrections. Flavor mixing
of the self-energy, as in diagram 2, is explicitly not eﬀected.

qgraf generates O(4500) three-loop diagrams for the ﬁrst diagram class. Unfortunately,
qgraf can only distinguish between interactions with diﬀerent particles, i.e. P cc
2 cannot
be diﬀerentiated. The separation is ﬁrst applied if symbolic graph representations (dia/edia)
are generated. Then, tapir iterates over all possible interaction combinations as stated in the
vrtx ﬁle. Thus, the number of diagrams increases to O(17000) if all current-current operators
of eq. (8) are regarded. The second class starts with O(3000) diagrams generated by qgraf, but
reduces to O(2000) when applying the described diagram ﬁlter. The actual number of remaining
diagrams of the second class with distinguished operators is O(8000).

1 and P cc

A further simpliﬁcation concerns the speciﬁc kinematics of the process b(q1)s(q2) →
s(q3)b(q4). Since we match the results of two eﬀective ﬁeld theories to get H and ˜HS, the result
must not depend on the kinematics of the external particles. Thus, we can choose the three-
momenta of the s-quarks as (cid:126)q2 = (cid:126)q3 = 0. In the limit ms → 0, this kinematic is topologically
equal to diagrams where the external s-lines are removed. We can make use of this in tapir
with

* tapir . external_momentum q2 :0
* tapir . external_momentum q3 :0

The external momenta are labeled according to the order of how the external particles were
declared in qgraf.dat. Additionally, we specify that the b- and c-quarks are massive:

* tapir . mass fb : M1
* tapir . mass fc : M2

After specifying a prop and vrtx ﬁle with all symbolic Feynman rules, we analyze and

minimize the occurring topologies. We call tapir with the following command line options:

$ / path / to / tapir -c class1 . conf -q qlist .3 -m -t class1 . top -k 8

The “-c” argument speciﬁes the config ﬁle. The argument of “-q” deﬁnes the qgraf output ﬁle
that was generated using the style ﬁle which comes with tapir. “-m” minimizes the topologies
of the diagrams and tries to map them onto each other. The option “-t” outputs the remaining

topologies as a topsel ﬁle. This ﬁle format was adopted from q2e and exp [12, 13, 14] and
serves as the standard format for graph topologies around tapir. The last command line option
“-k” demands tapir to use 8 cores for parallel evaluation. The execution per diagram class
takes O(10 s) on a modern desktop PC.

3. Topology minimization
The implemented minimization starts with extracting the topological features of each diagram.
This includes the connections of the underlying graph, i.e. which vertices are connected by which
edge. It also takes the edge coloring into account, i.e. the mass of the propagating particle. This
information is then encoded in a label which is unique for a given Feynman graph topology:
the Nickel index [15]. With this index at hand it is straightforward to identify a priori diﬀerent
graphs, by using it as a hash function and comparing the generated hashes. This procedure
enables a minimization in a highly parallelized manner.

The two diagram classes deﬁned above lead minimized to O(1000) and O(400) remaining
topologies, respectively. In the next step we want to combine both topology sets, and reduce
them even further. For this purpose, we create a new config ﬁle with the following entries:

* tapir . t opo _ ign ore_br idges
* tapir . t o p o _ r e m o v e _ d u p l i c a t e _ l i n e s

Here, we use a set of destructive topology ﬁlters, i.e. they change the graph topology, but
do not aﬀect the underlying integral families. The option “tapir.topo ignore bridges”
removes lines from a topology which do not carry a loop momentum, so-called bridges.
“tapir.topo remove duplicate lines” removes lines which have the exact same momentum
and mass as another line.

As a next step, we want to use the topological information to build symbolic integral families.
For this, we generate a FORM [16] ﬁle that combines the scalar loop-dependent factors to a
topology function. This topology ﬁle can be embedded in a FORM-based setup, as it is common
for multi-loop calculations. Before including this ﬁle, some kind of tensor reduction has to be
applied to the symbolic expressions of the diagrams generated by tapir. The generation of the
topology ﬁle can be varied by several options. For our case, we may use

* tapir . t o p o _ c o m p l e t e _ m o m e n t u m _ p r o d u c t s

to replace numerator functions of the integral family by a standard propagator function. For
example,
it may happen that the product q.k cannot be expressed through the remaining
propagators. Thus, q.k would be part of the integral family. The presented option replaces
the product with

1
2
The combination q + k is then replaced by an ancillary momentum P1, and 1/(−P 2
in the integral family. The minus sign is used for convenience.

(cid:0)(q + k)2 − q2 − k2(cid:1) .

q.k =

(11)

1 )n is included

We ﬁnally can call tapir once again with

$ / path / to / tapir -c combine . conf -i class12 . top -m -t final . top -f include / -k 8

- pf

This time, we read a concatenation of the previously created topsel ﬁles. One has to
make sure that the topologies of the diﬀerent classes can be distinguished using the option
“tapir.topology name” beforehand. The option “-f” creates a folder with the topology ﬁles
in addition to a topology list ﬁle containing all integral family deﬁnitions in a Mathematica
readable format. The latter can be used as input for reduction programs like FIRE [17].

Additionally, we use the option “-pf” which usually performs a partial fraction decomposition
of the ﬁnal integral families. Thus, we ensure to get only integral families with linear independent
denominator functions. This is a necessary pre-condition for integration-by-parts algorithms.
The combination of both diagram classes with the mentioned topology ﬁlters results in O(900)
topologies. It turns out, the partial fraction decomposition does not apply since the options
topo ignore bridges and topo remove duplicate lines already remove all occurring linear
dependencies in the integral families. Nevertheless, using “-pf” is always a good precaution.

The remaining O(900) topologies are the result of only a coarse minimization. A program
like exp can map the diagrams on even less topologies. Thus, our naive minimization procedure
can be regarded as a relatively fast “pre-ﬁltering”.

The generated topology ﬁles, e.g. for the topology of diagram 4 in ﬁg. 1, have the following

form:

* Reducible numerator momentum replacements
id p3 = - p4 - q1 ;
id p1 = p4 - p5 + p6 ;
id p2 = p4 - p5 + p6 + q1 ;
id P1 = p5 + p6 ;
id P2 = p4 + p6 ;
id P3 = p5 + q1 ;
. sort

* Numerator momentum product replacements
id p6 . q1 = - p1 . p1 /2 + p2 . p2 /2 - p3 . p3 /2 + p4 . p4 /2 + p5 . q1 ;
id p4 . q1 = p3 . p3 /2 - p4 . p4 /2 - q1 . q1 /2;
id p4 . p5 = - p1 . p1 /2 + p4 . p4 /2 + p4 . p6 + p5 . p5 /2 - p5 . p6 + p6 . p6 /2;
id p5 . p6 = ( P1 . P1 - p5 . p5 - p6 . p6 ) /2;
id p4 . p6 = ( P2 . P2 - p4 . p4 - p6 . p6 ) /2;
id p5 . q1 = ( P3 . P3 - p5 . p5 - q1 . q1 ) /2;
. sort

* Define massive propagators
id p2 . p2 = -1/ s2m1 + M1 ^2;
id p4 . p4 = -1/ s4m1 + M1 ^2;
id p5 . p5 = -1/ s5m2 + M2 ^2;
id p6 . p6 = -1/ s6m2 + M2 ^2;
. sort

* Combine to scalar topology function
id s6m2 ^ n0 ? * s5m2 ^ n1 ? * s4m1 ^ n2 ? * s2m1 ^ n3 ? * 1/ p1 . p1 ^ n4 ? * 1/ p3 . p3 ^ n5 ? * 1/ P1 .

P1 ^ n6 ? * 1/ P2 . P2 ^ n7 ? * 1/ P3 . P3 ^ n8 ? =
( -1) ^ n4 * ( -1) ^ n5 * ( -1) ^ n6 * ( -1) ^ n7 * ( -1) ^ n8 *
DB1TopoN NLOdr 3l4 3 80 ( n0 , n1 , n2 , n3 , n4 , n5 , n6 , n7 , n8 ) ;

. sort

Herewith a tensor reduced, symbolic diagram is straightforwardly replaced by an integral

family in FORM. The corresponding topology list entry is given by

{ " DB1Top oNNLOdr3 l43 8 0 " , { M2 ^2 - p6 ^2 , M2 ^2 - p5 ^2 , M1 ^2 - p4 ^2 , M1 ^2 - ( p4 - p5

+ p6 + q1 ) ^2 , -( p4 - p5 + p6 ) ^2 , -( p4 + q1 ) ^2 , -( p5 + p6 ) ^2 , -( p4 + p6 ) ^2 ,
-( p5 + q1 ) ^2} , { p4 , p5 , p6 }}

which is in the form of

{ " Family name " , List of denominators , List of loop momenta }

4. Conclusion
We have shown how the program tapir can be used to simplify Feynman graph topologies
and how they can be expressed as symbolic integral families. We have considered the example
of Bs − Bs mixing at three-loop order. The program was already used in similar two-loop
calculations [18, 19].

The program and an extensive documentation are freely available at the gitlab page:

https://gitlab.com/F.Herren/tapir.

Acknowledgments
I thank Matthias Steinhauser for careful proofreading of this article. I also want to thank Florian
Herren and Martin Lang for the good collaborative work on tapir.

This research was supported by the Deutsche Forschungsgemeinschaft (DFG, German
Research Foundation) under grant 396021762 — TRR 257 “Particle Physics Phenomenology
after the Higgs Discovery”.

References
[1] Buras A J 2020 Gauge Theory of Weak Decays: The Standard Model and the Expedition to New Physics

Summits (Cambridge University Press)

[2] Cutkosky R E 1960 Journal of Mathematical Physics 1 429–433
[3] Chetyrkin K G, Misiak M and Munz M 1998 Nucl. Phys. B 520 279–297 (Preprint hep-ph/9711280)
[4] Beneke M, Buchalla G, Greub C, Lenz A and Nierste U 1999 Phys. Lett. B 459 631–640 (Preprint

hep-ph/9808385)

[5] Ciuchini M, Franco E, Lubicz V, Mescia F and Tarantino C 2003 JHEP 08 031 (Preprint hep-ph/0308029)
[6] Beneke M, Buchalla G, Lenz A and Nierste U 2003 Phys. Lett. B 576 173–183 (Preprint hep-ph/0307344)
[7] Lenz A and Nierste U 2007 JHEP 06 072 (Preprint hep-ph/0612167)
[8] Asatrian H M, Hovhannisyan A, Nierste U and Yeghiazaryan A 2017 JHEP 10 191 (Preprint hep-ph/1709.

02160)

[9] Asatrian H M, Asatryan H H, Hovhannisyan A, Nierste U, Tumasyan S and Yeghiazaryan A 2020 Phys. Rev.

D 102 033007 (Preprint hep-ph/2006.13227)
[10] Nogueira P 1993 J. Comput. Phys. 105 279–289
[11] Gerlach M, Herren F and Lang M 2022 (Preprint hep-ph/2201.05618)
[12] Harlander R, Seidensticker T and Steinhauser M 1998 Phys. Lett. B 426 125–132 (Preprint hep-ph/9712228)
[13] Seidensticker T 1999 Automatic application of successive asymptotic expansions of Feynman diagrams
6th International Workshop on New Computing Techniques in Physics Research: Software Engineering,
Artiﬁcial Intelligence Neural Nets, Genetic Algorithms, Symbolic Algebra, Automatic Calculation (Preprint
hep-ph/9905298)

[14] Harlander R, Seidensticker T and Steinhauser M 1997 q2e/exp URL http://sfb-tr9.ttp.kit.edu/

software/html/q2eexp.html

[15] Nickel B, Meiron D and Baker G A J 1977 University of Guelph Report
[16] Ruijl B, Ueda T and Vermaseren J 2017 (Preprint hep-ph/1707.06453)
[17] Smirnov A V and Chukharev F S 2020 Comput. Phys. Commun. 247 106877 (Preprint hep-ph/1901.07808)
[18] Gerlach M, Nierste U, Shtabovenko V and Steinhauser M 2021 JHEP 07 043 (Preprint hep-ph/2106.05979)
[19] Gerlach M, Nierste U, Shtabovenko V and Steinhauser M 2022 JHEP 04 006 (Preprint hep-ph/2202.12305)

