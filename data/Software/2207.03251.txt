Rapid Communication

An Open-Source Data Acquisition System for
Laboratory and Industrial Scale Applications

Konstantin Niehaus1 and Andreas Westhoﬀ1
1German Aerospace Center, Bunsenstraße 10, D-37073 G¨ottingen, Germany

E-mail: konstantin.niehaus@dlr.de

Abstract. We introduce a cost-eﬃcient, and open-source measurement system
for measuring and monitoring indoor air quality, aerosol concentration, dust
contamination, and comfort-relevant quantities. The system allows to access
these quantities simultaneously at multiple sites. The software architecture is
described along with the hardware set-up including an overview of the supported
measurement transducers so far. The system allows ﬂexible adaptation on
laboratory-scales as well as on large-scales like aircraft cabins, vehicles, buildings,
and passenger compartments in general.

Submitted to: Meas. Sci. Technol.

2
2
0
2

l
u
J

7

]
t
e
d
-
s
n
i
.
s
c
i
s
y
h
p
[

1
v
1
5
2
3
0
.
7
0
2
2
:
v
i
X
r
a

 
 
 
 
 
 
Open-Source Measurement System

2

Keywords: data acquisition, open-source,
measurement system, internet of things

low-cost

and temporal measurement of
humidity and CO2 concentration.

i.e.

temperature,

1. Introduction

There is a plethora of measurement systems for the
examination of air properties, e.g. humidity, aerosol-
concentration, thermal comfort, or air quality. How-
ever, many of such systems support just one measure-
ment quantity, are closed-source, cost intensive, or not
extensible [1, 2, 3]. In addition, the use of costly mea-
surement equipment is an impediment for measure-
ments on large-scales, where a large number of sensors
is needed. This is especially true not only for the re-
search community, but also for a wider public. Citizen
and open science projects aim to reduce barriers, to
open ﬁndings to a wider audience [4] and to allow the
reproduction of experiments for a reasonable balance of
costs and beneﬁts. Examples of ongoing projects are
monitoring drinking water quality [5], light pollution
[6], or air quality [7]. These topics are of vital interest
since they inﬂuence our everyday life. This also applies
to indoor air-quality, especially against the background
of the SARS-CoV-2 pandemic. To investigate ventila-
tion concepts inside buildings, the interior of vehicles,
and aircraft cabins under realistic environmental con-
ditions, a portable measurement system is needed. To
meet the requirements of measurement application in
the afore listed environments, we developed an open
and cost-eﬀective multi-sensor measurement platform.
We utilize this system in a wide range of experimen-
tal facilities, which vary in their physical dimensions,
operational conditions, number of sensors and sensor
types. For instance, we use the system:

- To assess the risk of

infection during the
rise of the pathogen SARS-CoV-2 in 2020. This
was achieved by studying the aerosol propagation
in aircraft cabins [8]. The system’s ﬂexible design
and low power consumption enabled online in-ﬂight
measurements on notebooks driven solely by power
banks in airplane passenger compartments of an Airbus
A320, a Boeing B737 and a Boeing B787. The use
of over 70 optical particle-matter sensors enabled the
estimation of infection risk derived from the aerosol
concentration and dynamics of artiﬁcal saliva in the
vicinity of passenger faces.
Investigations of aerosol
distributions in a generic classroom-conﬁguration [9]
and the simulation of human respiration in trains [10]
were also conducted using this system.

- To quantify passenger comfort in compartments
resembling aircrafts [11] and trains [12] with the
objective to investigate novel ventilation concepts.
Therefore, we use our measurement system to quantify
energy eﬃciency, air quality, and passenger comfort.
These multidimensional quantities require the spatial

- To investigate the latent and sensible heat
transfer in mixed convection with phase transition
it is of utmost importance to measure the water
vapor content of humid air precisely [13]. Here, the
system’s API aids the control of temperatures, ﬂow
rates and humidity and also records measurement
values.
Additionally, we use the measurement
system’s support of high accuracy dew-point mirrors
to automatically calibrate capacitive humidity-sensors.
In the following we introduce the system’s
hardware and software architecture as well as the
software interface.

2. System architecture

Several open-source and open-hardware based mea-
surement systems have been proposed in the past.
Most of these systems require manufacturing of printed
circuit boards (PCB) [1] and a pre-calibration [2].
Oftentimes, systems are split into multiple hardware
systems, where one or more are responsible for mea-
surement data acquisition and others for the human-
machine interface (HMI) [3]. Software on more than
two diﬀerent systems increases the initial installation
In the following, we
and system maintenance eﬀort.
present a well-proven system architecture that requires
only a single host device that communicates with dig-
ital transducers via standard hardware and software
interfaces. The main objective is to provide a software
and hardware solution with minimal eﬀort to procure,
install, and operate.

2.1. Software requirements

The source code and hardware description of the pre-
sented systems are available in a public repository [14].
Both, our in-house code and third-party software
packages are open-source and suited for commercial
and scientiﬁc applications. A sensor device supported
by this system must use an open communication
protocol and have a public command-set to evaluate
Peripherals
its readings and operational status.
and wiring are standard, readily available parts or
feature an open design of the PCB used.
The
broad accessibility of spare parts or the ability to
manufacture them yourself contributes to reduced
downtime.
a browser-based data
visualization and control interface makes the system
The scope of application ranges
easy to use.
laboratory-scale experimental set-ups to
from small
This
large set-ups with a variety of
scalability also allows
the same evaluation code
implemented in the proof-of-concept phase to be
used and applied at industrial scale. The support

In addition,

sensors.

Open-Source Measurement System

3

of a well-deﬁned application programming-interface
(API) ensures the integration of the present system
into higher-level measurement environments or into
specialized visualization frameworks. Furthermore, an
open API oﬀers the option to control one or more
copies of this system remotely. This guarantees easy
integration into production chains, where the measured
values need to be automatically converted into control
units.

Table 1: Measurement transducers including accessi-
ble measurement quantities (Qty.), maximum measure-
ment frequencies fmax, average accuracies, and mea-
surement ranges. Quantities are temperature (T ), rela-
tive humidity (ϕ), volume-ﬂow rate ( ˙V ), absolute pres-
sure (P ), diﬀerential pressure (p), CO2 concentration
in air (cco2), dew-point temperature Tdp, and volt-
age U . v represents the current measurement value.
A full list can be found in the repository [14].

2.2. Hardware set-up

A sketch of the hardware set-up is depicted in
Figure 1. Here, a Unix -based single-board computer,
a notebook, or a complete desktop computer work as
a host system for the data-acquisition system (DAQ,
top right). Device communication is realized via
USB and proven standard converters to connect to
RS232 and RS485. These two serial bus standards
are common in industrial grade measurement devices.
Most low cost measurement transducers rely on Inter
Integrated Circuit (I2C) and Serial Peripheral Interface
(SPI). The system provides these interfaces via an
FT232H breakout board by Future Technology Devices
International Limited (FTDI). Both interfaces require
a diﬀerent wiring concept to support a large number
I2C is based on a bus architecture and
of sensors.
multiplexing is required whenever there are sensors
that respond to identical bus addresses. This results
in a standard data acquisition unit consisting of an
eight-channel multiplexer (TCA9548A) and a USB-
to-I2C converter. If there is no electrical current limit,
up to 64 sensors of the same type are supported via a
single I2C measurement unit. Due to the bandwidth
limit of I2C, the polling rate decreases with increasing
In contrast to I2C, SPI requires one
sensor counts.
digital output pin per sensor. Hence, by using a digital
multiplexer, up to 16 SPI sensors can be connected
to a single USB port. This is tested using a 4-wire
Pt100 temperature measurement box with a digital
multiplexer, an FT232H, and 16 MAX31865 (4-
wire set-up) by Maxim Integrated on a single PCB
(see [14] for layout). The system is able to detect
whether a measurement unit is conﬁgured for SPI
or I2C communication.
Plug and play operation
is
supported by an automated sensor detection.
The measurement quantities, average measurement
accuracies and maximum sampling frequencies of the
supported measurement devices are listed in Table 1.
It lists only devices and measurement ranges used in
referred applications. However, the list of supported
devices is extensive and growing rapidly.
Proven
probes and sensor systems will be updated in the
project documentation [14].

Sensor

SHT85

ADS1015
MAX31865
SFM3000
BME280

SDP810-128

fmax

0.5 Hz

128 Hz
1 Hz
15 Hz
1 Hz
1 Hz
1 Hz
0.5 Hz

SCD30

0.5 Hz

S8000

0.1 Hz

SMGAir2

30 Hz

Qty. Accuracy Range

T
ϕ
V
T
˙V
T
P
ϕ
p
T
cco2

T
ϕ
Tdp
T
T
P
˙V

0 - 80 °C
0 - 80 %
±6.1 V
-200 - 500 °C
±200 slm
0 - 65 °C
30 - 110 kPa
20 - 80 %
± 125 Pa
-40 - 85 °C

±0.2 K
±1.5 %
±0.25 %
±0.1 K
±0.015v
±0.5 K
±0.1 kPa
±3 %
±3 %
±2 K
±30 ppm 0.4 - 10 kppm
+0.03v
±0.6 K
±3 %
±0.1 K
±0.1 K
±1 K
±0.02v
±0.02v

0 - 50 °C
0 - 95 %
-40 - 125 °C
-40 - 90 °C
4 - 80 °C
-0.8 - 10 bar
depending
on nozzle

2.3. Software and API

structure is

The web-interface and the sensor drivers are installed
inside sandboxed docker containers. An overview
of
listed in Figure 2 with the
its
implemented in this project, highlighted
containers,
in gray.
the
The instances of the web server,
relational time-series database TimescaleDB, data-
acquisition workers and the graphical user interface
The
are
containers communicate via standardized interfaces,
which facilitates the maintenance in case a single
container has to be replaced or modiﬁed. Besides
conﬁguration adjustments,
the database and the
nginx web-server are imported from their respective
repository. Operational states are represented in two
ways and are accessible via HTTP.

separated for better maintainability.

The ﬁrst provides a graphical user interface (GUI)
to start and stop measurements, to connect new de-
vices, to display real-time data, to visualize results,
and to download measurement values. The second pro-
vides an API, which includes and extends the informa-
tion and control capabilities of the GUI in a machine
readable fashion. The communication with a RESTful
API is supported by all state-of-the-art programming
languages. This ensures seamless integration to com-

Open-Source Measurement System

4

SHT85

SCD30

SFM3000

BME280

BOB-09056

FT232H

I2C

I2C

USB

DAQ

SPI

RS232/485

SDP810

ADS1015

NAU7802

SPS30

MAX31865

SMGAir2

S8000 Remote

Figure 1: Interface and measurement transducer overview: A DAQ device receives measurement results via the
communication interfaces SPI, I2C, RS232 and RS485. Before being passed to the DAQ the signals of the SPI
and the I2C are connected to USB via a FT232H integrated circuit. A multiplexer enables the system to host
more than one transducer with the same I2C bus address. SPI sensors can be connected to the digital outputs
of the FT232H.

Operational host system

Client

Container

Webserver

Device Controller

Interfaces

Database

HMI

GUI

API

M2M

MQTT

Figure 2: Software architecture: hosting operational
system with a container framework, nginx web-server,
measurement-device controller, django based interface
framework, and a PostgresSQL time-series database.
Client server communication: HMI via a webinterface
and M2M communication via web API or MQTT.

plement an existing set-up.
In addition, a Message
Queuing Telemetry Transport (MQTT) client is used
to enable monitoring of data via applications common
to the Internet of Things (IOT), such as Grafana or
Node-RED. 3a displays the submenu for live data mon-
itoring. Further, real-time computation of statistical
quantities i.e. the average measurement value of a sen-
sor set is supported. 3b reveals the submenu of the cus-
tomizable visualization of the probe time-series. The
GUI supports an automatic sensor initialization.
In
addition, the export to ascii and binary based ﬁle for-
mats is supported via the web interface or the API.

The system stores known sensors identiﬁed via
unique identiﬁcation numbers in a database. This

(a) Data monitoring

(b) Raw data visualization

Figure 3: Web based GUI for monitorinig and
controlling.

numbers link to additional information like: calibration
data, displaying settings, or sensor positions. Each
sensor has its own optimized initialization routine to
ensure stable operational conditions. The initialization
runs before each start of a measurement.
Each
measurement unit runs in its own thread to obtain
measurement values in parallel. This also increases
the system stability, since connection losses or device
failures only aﬀect a single device and have no impact
on the system’s integrity. The system has been tested

Open-Source Measurement System

5

and Michelle Wong. Performance of a Low-Cost Sensor
Community Air Monitoring Network in Imperial County.
Sensors, 20(11):3031, May 2020.

Corsica ﬁnal

risk assessment

report:
[8] Netherlands Aerospace Center.
for aerosol
Quantitative microbial
transmission of
sars-cov-2 in aircraft cabins based
on measurement and simulations. Technical report,
Netherlands Aerospace Centre NLR, June 2021.
[9] Pascal Lange, Andreas Westhoﬀ, Andreas Kohl, and Axel
M¨uller. Experimental study of the indoor aerosol-
dynamics for a low-momentum ventilation system with
an air puriﬁer unit. SSRN, pages 1–43, February 2022.
This manuscript was submitted to Journal of Aerosol
Science and is currently under review. This is a pre-print
version at SSRN.

[10] Andreas Kohl, Pascal Lange, and Daniel Schmeling. Exper-
imental simulation of the human respiration. In Notes on
Numerical Fluid Mechanics and Multidisciplinary De-
sign, pages 472–482. Springer International Publishing,
July 2021.

[11] Pascal Lange, Daniel Schmeling, Tobias Dehne, Axel
Dannhauer, Felix Werner, and Ingo Gores. New long-
range cabin mock-up enabling the simulation of ﬂight
In
cases my means of tempered fuselage elements.
Aerospace Europe Conference - AEC2020, February
2020.

[12] Daniel Schmeling, Tim Berlitz, Thorsten Tielkes, Tobias
Dehne, and Marcel J¨ackle. Demonstrator f¨ur Innovatio-
nen im Reisendenkomfort und Klimatisierung - DIRK (in
German). In 18. Internationale Schienenfahrzeugtagung
Dresden, pages 1–3, September 2021.

[13] Konstantin Niehaus, Andreas Westhoﬀ, and Claus Wagner.
Characterization of a mixed convection cell designed for
In New Results
phase transition studies in moist air.
in Numerical and Experimental Fluid Mechanics XIII,
pages 483–493. Springer International Publishing, July
2021.

[14] Konstantin Niehaus.

Mobile measurement

system

https://doi.org/10.5281/zenodo.6471388, April 2022.

temporarily shut down.

against disruptive factors like increased vibration,
high temperature gradient, or strong electromagnetic
interference, where sensors often become unresponsive,
or
In these cases the
system attempts to reinitialize missing sensors and
resumes measurements after successful reconnection.
Critical parts of the software have been written using
test-driven development to ensure that readings are
retrieved, converted and stored correctly.

3. Conclusion and future development

We introduced a versatile and compact measurement
system. Features of the system are a modular and
easily extensible hardware and software architecture
and an open-source and open-hardware approach.
Support of high precision sensors together with low
priced measurement transducers allows for applications
ranging from low budget citizen science projects to
complex systems i.e.
loops in
fundamental research. The system has proven itself
stable and ﬂexible in a variety of applications. Future
work is dedicated to allow for wireless sensor data
transmission and to support TCP/IP measurement
devices. We cordially invite readers to participate in
the development and testing of the system.

precision control

References

[1] F.J. Ferrero Mart´ın, M. Valledor Llopis, J.C. Campo
Rodr´ıguez, J.R. Blanco Gonz´alez, and J. Men´endez
Blanco. Low-cost open-source multifunction data acqui-
sition system for accurate measurements. Measurement,
55:265–271, September 2014.

[2] James P. Grinias, Jason T. Whitﬁeld, Erik D. Guetschow,
and Robert T. Kennedy. An inexpensive, open-source
USB Arduino data acquisition device for chemical
instrumentation.
Journal of Chemical Education,
93(7):1316–1319, June 2016.

[3] Luis J. Claros-Marﬁl, J. Francisco Padial, and Benito
Lauret. A new and inexpensive open source data
acquisition and controller for solar research: Application
to a water-ﬂow glazing. Renewable Energy, 92:450–461,
July 2016.

[4] Michael J. O’Grady, Conor Muldoon, Dominic Carr, Jie
Wan, Barnard Kroon, and Gregory M. P. O’Hare.
Intelligent sensing for citizen science. Mobile Networks
and Applications, 21(2):375–385, January 2016.
[5] Stijn Brouwer, Paul van der Wielen, Merijn Schriks,
Maarten Claassen, and Jos Frijns. Public participation
in science: The future and value of citizen science in the
drinking water research. Water, 10(3):284, March 2018.
[6] Christopher C. M. Kyba, Janna M. Wagner, Helga U.
Kuechly, Constance E. Walker, Christopher D. Elvidge,
Fabio Falchi, Thomas Ruhtz, J¨urgen Fischer, and
Franz H¨olker. Citizen science provides valuable data
for monitoring global night sky luminance. Scientiﬁc
Reports, 3(1), May 2013.

[7] Paul English, Heather Amato, Esther Bejarano, Graeme
Carvlin, Humberto Lugo, Michael Jerrett, Galatea King,
Daniel Madrigal, Dan Meltzer, Amanda Northcross, Luis
Olmedo, Edmund Seto, Christian Torres, Alexa Wilkie,

