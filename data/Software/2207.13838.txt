2
2
0
2

p
e
S
9
1

]
E
H
.
h
p
-
o
r
t
s
a
[

2
v
8
3
8
3
1
.
7
0
2
2
:
v
i
X
r
a

MNRAS 000, 1–29 (2022)

Preprint 20 September 2022

Compiled using MNRAS LATEX style ﬁle v3.0

Cosmic Ray Interstellar Propagation Tool using Itô Calculus
(criptic): software for simultaneous calculation of cosmic ray
transport and observational signatures

1, Matt L. Sampson 1
Mark R. Krumholz
1Research School of Astronomy and Astrophysics, Australian National University, Canberra ACT 2601 Australia
2ARC Centre of Excellence for Astronomy in Three Dimensions (ASTRO-3D), Canberra ACT 2601 Australia

1,2(cid:63), Roland M. Crocker

Accepted XXX. Received YYY; in original form ZZZ

ABSTRACT
We present criptic, the Cosmic Ray Interstellar Propagation Tool using Itô Calcu-
lus, a new open-source software package to simulate the propagation of cosmic rays
through the interstellar medium and to calculate the resulting observable non-thermal
emission. Criptic solves the Fokker-Planck equation describing transport of cosmic
rays on scales larger than that on which their pitch angles become approximately
isotropic, and couples this to a rich and accurate treatment of the microphysical pro-
PeV lose energy and
cesses by which cosmic rays in the energy range
produce emission. Criptic is deliberately agnostic as to both the cosmic ray trans-
port model and the state of the background plasma through which cosmic rays travel.
It can solve problems where cosmic rays stream, diﬀuse, or perform arbitrary com-
binations of both, and the coeﬃcients describing these transport processes can be
arbitrary functions of the background plasma state, the properties of the cosmic rays
themselves, and local integrals of the cosmic ray ﬁeld itself (e.g., the local cosmic ray
pressure or pressure gradient). The code is parallelised using a hybrid OpenMP-MPI
paradigm, allowing rapid calculations exploiting multiple cores and nodes on modern
supercomputers. Here we describe the numerical methods used in the code, our treat-
ment of the microphysical processes, and the set of code tests and validations we have
performed.

MeV to

∼

∼

Key words:
thermal

cosmic rays — methods: numerical — radiation mechanisms: non-

1 INTRODUCTION

The last few years have seen an explosion of interest in
cosmic rays (CRs) from two distinct angles. The star-
and galaxy-formation communities have engaged in intense
study of CRs as a form of stellar feedback in star and galaxy
formation (e.g., Enßlin et al. 2007; Socrates et al. 2008; Uh-
lig et al. 2012; Salem & Bryan 2014; Girichidis et al. 2016;
Wiener et al. 2017; Chan et al. 2019; Hopkins et al. 2020;
Crocker et al. 2021a,b), while the high-energy astrophysics
community has paid increasing attention to star-forming
galaxies and the CRs within them as important sources at
both radio and γ-ray wavelengths (e.g., Thompson et al.
2006; Lacki et al. 2010; Lacki & Thompson 2010; Yoast-
Hull et al. 2016; Peretti et al. 2019; Krumholz et al. 2020;
Roth et al. 2021; Werhahn et al. 2021a,b; Hopkins et al.
2022). However, studies in both of these areas are hampered

(cid:63) E-mail: mark.krumholz@anu.edu.au (MRK)

© 2022 The Authors

by our lack of understanding of the fundamental plasma
processes by which CRs couple to the background gas in
galaxies through which they propagate. While most plasma
physics models predict that CRs should be self-conﬁned at
relatively low energy and conﬁned by extrinsic turbulence at
high energy (e.g., Zweibel 2017, and references therein), the
energy at which this transition occurs, and the normalisa-
tion and energy-dependence of the rate of transport in each
of these two regimes, remains fundamentally uncertain (and
likely dependent on the environment), and simple models
have proven challenging to reconcile with observational con-
straints (e.g., Hopkins et al. 2021a,b). Until we gain a better
understanding of how CRs couple to the gas in galaxies, it
will be diﬃcult to make deﬁnitive statements about either
the role of CRs in regulating galaxy formation or the con-
tribution of star-forming galaxies to the non-thermal sky.

One promising avenue for progress in this area is mak-
ing detailed comparisons between the predictions made by
diﬀerent CR transport models and observations of galaxies’

 
 
 
 
 
 
2 Krumholz, Crocker, & Sampson

non-thermal emission. During their transport through gas,
CRs suﬀer repeated collisions with the molecules, atoms,
and nuclei they encounter. Low-energy CRs ionise the gas,
altering its chemistry. High-energy CRs collide directly with
gas nuclei, producing sprays of unstable secondary particles
that decay almost immediately into ﬁnal-state particles, in-
cluding γ-ray photons, neutrinos, and relativistic electrons
and positrons. The γ-rays and neutrinos are (in principle)
directly observable, while the electrons and positrons go on
to produce their own radiative signatures at radio and γ-ray
wavelengths. These signatures hold open the possibility of
distinguishing between CR transport models, because dif-
ferent models predict diﬀerent behaviours as a function of
CR energy and galactic environment, which in turn manifest
as changes in galaxies’ non-thermal spectra (e.g., Krumholz
et al. 2020; Crocker et al. 2021a; Ambrosone et al. 2022).

Our observational knowledge of these signatures will
expand radically in the next few years as new instru-
ments come online. The Cherenkov Telescope Array (CTA;
Cherenkov Telescope Array Consortium et al. 2019) will be
able to see γ-ray sources an order of magnitude fainter, and
with an order of magnitude better resolution, than current
instruments. The radio sky, and the galaxies that populate
it, will be increasingly-well revealed by the Square Kilome-
tre Array (SKA) and its pathﬁnders. Finally, the upgrade of
the South Polar IceCube neutrino telescope and the commis-
sioning of the KM3NeT neutrino telescope will signiﬁcantly
improve our knowledge of the neutrino sky. This overall im-
provement in instrumentation will grant us the ability to
directly probe the CR populations of star-forming galaxies
with unprecedented depth and precision. This will, in turn,
illuminate our understanding of CR transport.

However, there are a limited range of software tools ca-
pable of predicting the diverse signals that will be observ-
able by the next generation of telescopes. Until very recently,
CR-hydrodyamics simulations followed only a single CR en-
ergy bin; the most recent generation of simulations include a
few distinct CR energies (e.g., Armillotta et al. 2021, 2022;
Girichidis et al. 2022; Hopkins et al. 2022), but the compu-
tational cost of following multiple energies in the context of
a fully self-consistent CR-hydrodynamics calculation means
that these simulations achieve very limited spectral resolu-
tion in the observable signatures they predict, and rely on
highly-simpliﬁed treatments of the microphysical interaction
between CRs and their environment (e.g., treating pp col-
lisional losses as continuous, ignoring Klein-Nishina eﬀects
when calculating inverse Compton scattering). Fluid treat-
ments that involve integration over broad bins in CR energy
also necessarily have diﬃculty in treating sharp spectral fea-
tures, for example sharp changes between streaming and dif-
fusion at particular CR energies. Moreover, all of these meth-
ods have thus far proven too expensive to use in carrying
out an extensive parameter study of how emission changes
as one makes diﬀering assumptions about the microphysics
of CR interactions with the background plasma.

Conversely, a range of tools exist to predict CR ob-
servables using detailed microphysics, but generally only
for highly-simpliﬁed, time-independent background plasma
states. The most prominent of these is galprop (Strong
& Moskalenko 1998), but other examples include picard
(Kissmann 2014), dragon (Evoli et al. 2017), and crpropa
(Merten et al. 2017). These codes generally oﬀer a much

more detailed treatment of microphysics than is achieved in
the CR-hydrodynamics simulations, and thus a correspond-
ingly better prediction of observables, but at the price that
they are not very ﬂexible in terms of the assumed model of
CR propagation, or in terms of the way that the background
gas is described. Thus for example it would not be straight-
forward to use one of these tools to post-process a full 3D
simulation and predict the observable, CR-driven emission
from it. Nor for example can these codes easily handle a sit-
uation where the transport of CRs switches from primarily
streaming to primarily diﬀusion as a function of CR energy.
This situation motivates us to introduce Cosmic Ray
Interstellar Propagation Tool using Itô Calculus (criptic),
a new software tool for the purpose of calculating CR trans-
port and observable emission. Criptic attempts to balance
the advantages of the dedicated CR propagation codes –
high-accuracy microphysics, high spectral resolution, accu-
rate treatment of secondary particles, relatively high speed
– with those of the CR-hydrodynamics codes – complex,
multi-phase gas backgrounds, with CR propagation proper-
ties that vary depending on the gas state. Of course it also
has disadvantages, in that its complexity level and compu-
tational cost are higher than for galprop and similar soft-
ware, and it does not achieve the full consistency between
CR propagation and hydrodynamic evolution that comes
from solving CRs and hydrodynamics together. Nonethe-
less, criptic is unique in that it oﬀers the ability to make
realistic predictions for CR-driven emission at high spec-
tral resolution and high physical accuracy from 3D simu-
lations of a complex, multi-phase galactic gas ecosystem.
In this regard the intended use of criptic for CRs is analo-
gous to that of tools such as RadMC-3D (Dullemond 2012)
or Powderday (Narayanan et al. 2021) for photons: while
these tools are too expensive to use in real time as part of
a self-consistent radiation-hydrodynamics calculation, they
oﬀer much more realistic predictions of observable emission
than would be possible using radiation-hydrodynamics sim-
ulations alone.

The remainder of this paper is laid out as follows. In
Section 2 we describe the basic system of equations that
criptic solves, and in Section 3 we describe the numerical
method by which we solve them. We present validation tests
in Section 4, and summarise and discuss future prospects in
Section 5.

2 PHYSICAL MODEL

2.1 Formulation of the problem

Criptic is intended to simulate the transport of CRs on
scales signiﬁcantly larger than the CR mean free path to
pitch angle scattering. It therefore solves the Fokker-Planck
Equation (FPE) for the evolution of the pitch angle-averaged
CR distribution function f (x, p) as a function of position x
and the (magnitude of the) CR momentum p; future exten-
sions may also include explicit evolution of the pitch angle
distribution, but are beyond the scope of the present paper.
We solve a separate FPE for each species of CR tracked in a
simulation. The equation we solve is (Skilling 1975; Zweibel

MNRAS 000, 1–29 (2022)

2017)

∂f
∂t

=

∂
∂xi

(cid:18)

Kij

(cid:19)

∂f
∂xj

+

1
p2

(cid:18)

p2Kpp

(cid:19)

∂f
∂p

∂
∂p
(cid:21)

−

−

∂
∂xi
1
p2

∂
∂p

(cid:1) f

(cid:0)p3ui

(cid:20) ∂
∂
∂p3
∂p3
(cid:0)p2 ˙pctsf (cid:1) − Lf + S,

+

(cid:20) ∂
∂xi

(cid:21)

(cid:0)p3ui

(cid:1) f

(1)

where we have added extra terms describing losses to the
original transport equation derived by Skilling (1975); note
that in this equation, although by assumption f depends
only on the magnitude of CR momentum p, it still describes
the number of CRs per unit volume in momentum space,
i.e., the number of CRs with momentum from p to p + dp is
4πp2f dp rather than f dp. Here and throughout Section 2,
we adopt the convention that italic indices (i, j) go from
1 to 3 and Greek indices (α, β) go from 1 to 4, and we
make use of the Einstein summation convention whereby
repeated indicates are understood to be summed over. The
quantities appearing in this equation are the spatial diﬀusion
tensor K, the momentum diﬀusion coeﬃcient1 Kpp, the total
(streaming plus advection) velocity of the CRs u, the rate
at which the magnitude of the CR momentum decreases
due to continuous processes ˙pcts (those where the change in
momentum per interaction is small), the catastrophic loss
term L (describing processes that destroy CRs completely
or cause large changes in their momenta), and the source
function S. In general these quantities are functions of the
properties of the background plasma at position x, the CR
momentum p, and the CR distribution f at that point in
space – for example, the direction of CR streaming may
depend on the gradient of f – in which case the problem is
non-linear. The background plasma is threaded by a large-
scale magnetic ﬁeld B, where large-scale here means that B
is averaged on scales much larger than the CR isotropisation
scale.

Before proceeding further, we pause to explain our for-
mulation of the continuous and catastrophic loss terms. We
approximate continuous loss processes as causing a contin-
uous decrease in the momentum of each CR particle at a
rate ˙pcts. This corresponds to advection in momentum space
at a velocity − ˙pcts ˆrp, where ˆrp is a radial (in momentum
space) unit vector. The term we have included in the equa-
tion 1 is simply the divergence of − ˙pctsf ˆrp. By contrast,
the term −Lf we introduce for catastrophic losses corre-
sponds to direct removal of CRs from the population, at a
rate proportional to the number density of CRs at a given
position; in equation 1, L is the probability per unit time
of such a loss. If the loss process represents a discrete jump
in momentum rather than complete destruction, there will
also be corresponding source term S ∝ −Lf . We describe in
Section 2.3 the full set of microphysical processes we include
and their mathematical representation in terms of continu-
ous loss terms, catastrophic loss terms, and source terms.

1 Note that the subscript pp here indicates diﬀusion in momen-
tum space, and should not be confused with proton-proton col-
lisions; to avoid confusion, we will generically refer to proton in-
teractions in general as nuclear inelastic collisions, so that pp is
used only to indicate the momentum direction in phase space.

MNRAS 000, 1–29 (2022)

CRIPTIC

3

2.2 From Fokker-Plank to stochastic diﬀerential

equation

Our basic approach to solving equation 1 is to transform it
from a PDE to a stochastic diﬀerential equation (SDE). This
part of our treatment is similar to the methods proposed by
Kopp et al. (2012) and Merten et al. (2017). To simplify
the problem of transforming the FPE into a SDE, we will
always work in a local coordinate system deﬁned relative to
the magnetic ﬁeld. We therefore set up a TNB coordinate
frame deﬁned by the unit vectors
B
|B|
(cid:0)ˆt · ∇(cid:1) ˆt
k
ˆb = ˆt × ˆn.
(4)
Here ˆt, ˆn, ˆb, and k are the tangent vector, normal vec-
tor, binormal vector, and curvature of the local magnetic
ﬁeld. We therefore adopt the convention in equation 1 that
indices i = (1, 2, 3) correspond to the (ˆt, ˆn, ˆb) directions,
respectively. In our chosen frame the diﬀusion tensor K is
diagonal, with elements

ˆt =

ˆn =

(2)

(3)

Kij =






K(cid:107),
K⊥,
0,

i = j = 1
i = j = 2 or i = j = 3
otherwise.

(5)

Note that we explicitly allow for the possibility of diﬀusion
perpendicular to ﬁeld lines, with diﬀusion coeﬃcient K⊥,
and in this respect our equation diﬀers from that given by
Skilling (1975) or Zweibel (2017). Our reason for including
this term is that the scale on which B is measured is not
assumed to be smaller that the turbulent dissipation scale,
and thus there may be turbulent ﬂuctuations in the mag-
netic ﬁeld on top of the large-scale guide ﬁeld B; this will
often be the case in galactic or cosmological simulations,
for example, where the simulation resolution is insuﬃcient
to resolve the magnetic dissipation scale. Thus we wish to
leave open the possibility that, while CRs do not diﬀuse
perpendicular to magnetic ﬁeld lines (to leading order), the
ﬁeld lines themselves can wander perpendicular to the large-
scale guide ﬁeld, and this will induce an eﬀective diﬀusion in
the CRs perpendicular to the large-scale guide ﬁeld (Beattie
et al. 2022; Sampson et al. 2022).

In order to transform equation 1 into an SDE, we must

ﬁrst recast it in standard Fokker-Planck form
∂f
1
2
∂t

∂2
∂qα∂qβ

(Dαβf ) ,

(Aαf ) +

∂
∂qα

= −

(6)

where A is the drift vector, D is the diﬀusion tensor (which
must be symmetric), and q is the vector of phase-space
variables upon which f depends, which we take to be q =
(x1, x2, x3, p). In order to do so, we make a change of vari-
ables from f (x, p) to
˜f (x, p) = 4πp2f (x, p),
(7)
i.e., ˜f represents the probability density per radial distance
in momentum space, while f is the probability density per
unit volume in momentum space. The advantage of this
change is that, unlike f itself, ˜f is invariant under a steady
ﬂow of CRs in momentum space.2 With this change of

2 Note that this step is omitted in the derivation given by Kopp

4 Krumholz, Crocker, & Sampson

variables, and making some further algebraic simpliﬁcation,
equation 1 becomes

∂ ˜f
∂t

=

(cid:16)

(cid:17)
Kij ˜f

+

∂2
∂p2

(cid:17)
(cid:16)
Kpp ˜f

∂2
∂xi∂xj
∂
∂xi
∂
∂p

−

−

(cid:20)(cid:18) ∂Kij
∂xj
(cid:20)(cid:18) ∂Kpp
∂p

+ ui +

(cid:19)

(cid:21)
˜f

p
3

∂ui
∂p

+ 2

Kpp
p

−

p
3

∂ui
∂xi

(cid:19)

(cid:21)
˜f

− ˙pcts

− L ˜f + ˜S,

(8)

where ˜S = 4πp2S is the rate per unit volume per unit linear
momentum at which new CRs are injected.3 For computa-
tional purposes it is convenient to explicitly write out the
total velocity u = v + wˆt, where v is the advection velocity
of the background gas and wˆt is the streaming velocity of
the CRs along the ﬁeld, in the frame comoving with the gas.
Doing so, equation 8 becomes

∂ ˜f
∂t

=

(cid:17)
(cid:16)
Kij ˜f

+

∂2
∂p2

(cid:17)
(cid:16)
Kpp ˜f

∂2
∂xi∂xj
∂
∂xi
∂
∂p

−

−

(cid:26)(cid:20) ∂Kij
∂xj
(cid:26)(cid:20) ∂Kpp
∂p

(cid:18)

+ vi +

w +

(cid:19)

(cid:21)

(cid:27)
˜f

ˆti

p
3

∂w
∂p

+ 2

Kpp
p

− ˙pcts

(cid:18) ∂vi
∂xi

+

dw
dxi

ˆti + w

(cid:19)(cid:21)

(cid:27)
˜f

dˆti
dxi

−

p
3
− L ˜f + ˜S.

(9)

Ignoring the catastrophic loss and source terms for the
moment, equation 9 corresponds to equation 6 with drift
vector

Aα =






∂w
∂p ,

∂K(cid:107)
+ vα + w + p
∂xα
3
∂K⊥
+ vα,
∂xα
∂Kpp
∂p + 2
− p
3

p Kpp − ˙pcts
(cid:16) ∂vi
+ ∂w
∂xi
∂xi

ˆti + w ∂ˆti
∂xi

α = 1
α = 2 or 3

(10)

(cid:17)

, α = 4

and diﬀusion tensor

Dαβ =






α = β = 1
α = β = 2 or 3

2K(cid:107),
2K⊥,
2Kpp, α = β = 4
0,

α (cid:54)= β

.

(11)

Note that, in writing out the components of the drift vector
and diﬀusion tensor, we have made use of the fact that Kij
is diagonal in our chosen coordinate system.

The Itô SDE corresponding to equation 8 is (Gardiner

2009, section 6.1)

dqα(t) = Aα(q, t) dt + dαβ(q, t) dWβ(t),

where

dγαdγβ = Dαβ

(12)

(13)

et al. (2012) and Merten et al. (2017), and as a result their equa-
tions for the momentum distribution are not correct. However,
since none of the tests reported in their papers consider CR mo-
mentum evolution, the problem does not manifest in the pub-
lished results.
3 By contrast, S is the injection rate per unit volume in space
per unit volume in momentum space.

and dW(t) is a four-dimensional Wiener process. Since D
is diagonal
in our chosen coordinate frame, we trivially
have dαβ = (cid:112)Dαβ, so d is diagonal as well. For nota-
tional convenience we deﬁne the vector of diﬀusion coeﬃ-
cients κ = (2K(cid:107), 2K⊥, 2K⊥, 2Kpp), i.e., κ is just the vector
of diagonal elements of d, so the SDE becomes

dqα(t) = Aα(q, t) dt +

(cid:16)(cid:112)κ(q, t) dW

(cid:17)

α

.

(14)

We refer to κ as the diﬀusion vector from this point forward,
keeping in mind that it in fact just the vector of eigenvalues
of a rank-2 tensor.

2.3 Microphysical processes: losses, secondaries,

and observables

2.3.1 Formalism
The continuous and catastrophic loss terms ˙pcts and L ˜f can
represent a range of microphysical interactions between CRs
and their environment. In turn, the catastrophic loss terms
generally have corresponding source terms ˜S that represent
either new particles produced in the interaction, or existing
CRs jumping discontinuously from a higher to a lower mo-
mentum; we will generically write these source terms in the
form

˜Ss(p) =

(cid:90)

(cid:88)

s(cid:48)

Ls(cid:48) (p(cid:48))ξs,s(cid:48) (p(cid:48))

(cid:19)

(cid:18) dφ
dp

s,s(cid:48)

(p(cid:48)) ˜fs(cid:48) (p(cid:48)) dp(cid:48), (15)

where ˜Ss(p) is the source function for members of species s
with momentum p, the sum runs over all species s(cid:48), Ls(cid:48) (p(cid:48))
is the catastrophic loss rate for members of species s(cid:48) with
momentum p(cid:48), ξs,s(cid:48) (p(cid:48)) is the mean multiplicity for pro-
duction of species s by the loss of members of species s(cid:48)
with momentum p(cid:48),4 dφ/dps,s(cid:48) (p(cid:48)) is the distribution of mo-
menta p for members of species s produced by the loss of
a member of species s(cid:48) with momentum p(cid:48) (normalised so
(cid:82) (dφ/dp)s,s(cid:48) (p(cid:48)) dp = 1 for all p(cid:48)), and ˜fs(cid:48) (p(cid:48)) is the CR
distribution function for members of species s(cid:48) evaluated at
momentum p(cid:48). In the discussion that follows, we will charac-
terise the source functions for secondaries in terms of their
values for the multiplicity ξ and the momentum redistri-
bution function dφ/dp. We generically refer to members of
species s(cid:48) as primaries, even if they were themselves pro-
duced by another, earlier collision. Similarly, we refer to
members of species s – whose appearance is described by
˜Ss – as secondaries, even if they are, in fact, just the initial
CR particle after it has been scattered to lower energy.

In addition to computing the loss and source terms, it
is also of interest to predict the observable emission from
CRs. We write the rate of speciﬁc radiative emission per
cosmic ray particle as dΨ/d(cid:15), where (cid:15) is the photon energy.
We also calculate the CR ionisation rate via an analogous
expression, since this is of interest for astrochemistry.

Diﬀerent loss processes apply to diﬀerent CR species,
and neither our species list nor the set of processes we in-
clude are exhaustive; for example, at present criptic does
not treat heavy CR nuclei or the spallation losses they suﬀer.

4 That is, ξs,s(cid:48) (p(cid:48)) = 2 means that, on average, a loss of one
particle of species s(cid:48) with momentum p(cid:48) leads to the production
of two particles of species s.

MNRAS 000, 1–29 (2022)

Both the particle and process list may be expanded in future
releases. At present the code tracks CR protons, electrons,
and positrons, and it includes accurate treatments of all sig-
niﬁcant loss processes for those species at energies from ≈ 1
MeV to ≈ 1 PeV propagating through typical ISM condi-
tions; on the low-energy end this limit is imposed by adopt-
ing the relativistic limit when computing electron radiative
losses (our treatment of collisional processes is valid down to
≈ 0.1 MeV), while on the high-energy side it is limited by the
availability of tabulated or analytically-approximated cross
sections. Below we describe all the processes we include, and
the methods we use to compute them; we summarise our ﬁ-
nal expressions for all processes in Table 1. Note that we do
not require an explicit additional term to represent stream-
ing losses, as is required in hydrodynamic treatments of CRs,
because in the FPE such losses are automatically included
in the ∇ · (wˆt) term in the drift vector.

The remainder of this section describes the various loss
processes we include, and how we treat them. To help pro-
vide intuition for this discussion, we plot the various loss
rates as a function of CR proton, electron, and positron
energy for three example environments in Figure 1; here
the catastrophic loss rate is L, and we deﬁne the equiv-
alent continuous loss rate as ˙pcts/p for a CR packet of
momentum p. Our example environments are representa-
tive of (i) a diﬀuse ionised region (H+, ﬁrst column), (ii)
a medium density neutral atomic region (H i, second col-
umn), and (iii) a dense molecular region (H2, third column).
These regions are characterised by, respectively, total den-
sities of H nuclei nH = 10−3, 1, and 103 cm−3, magnetic
ﬁeld strengths B = 1, 7, and 20 µG, and dilute blackbody
radiation ﬁelds, in addition to the cosmic microwave back-
ground, with temperature TBB = 5000, 5000, and 10 K,
and dilution factors WBB = 10−13, 10−13, and 1; we ex-
plain TBB and WBB in more detail below. The H+ region is
composed of fully ionised H and singly-ionised He with As-
plund et al. (2009) protosolar abundances; if we deﬁne Xs
as the number of members of a particular species s per H
nucleon in the background gas, the H+ region has XH+ = 1,
XHe+ = 0.0955, and Xe = 1.0955; the atomic region has
XH0 = 0.99, XH+ = 0.01, XHe0 = 0.0955, and Xe = 0.01;
and the molecular region has XH2 = 0.5, XHe0 = 0.0955,
and Xe = 10−7.

2.3.2 Nuclear inelastic scattering

CR protons with kinetic energies above a threshold value
Tπ = (2 + mπ/2mp)mπc2 can scatter inelastically oﬀ nuclei
in the ISM, producing secondary particles, most commonly
π mesons; here mp = 0.9383 GeV c−2 and mπ = 0.2797 GeV
c−2 are the rest masses of the proton and π0, respectively.
In the process, the CR proton retains, on average, only a
fraction ηin ≈ 1/2 of its initial energy, which makes this a
catastrophic loss process. We approximate the total cross
section for nuclear inelastic scattering using the analytic ﬁt-
ting formula proposed by Kafexhiu et al. (2014), which is
well-calibrated against both collider experiments and parti-

MNRAS 000, 1–29 (2022)

CRIPTIC

5

cle physics simulations:

σnuc = (cid:15)nucσpp ≈ (cid:15)nuc

1 −

(cid:34)

(cid:19)1.9(cid:35)3

×

(cid:18) T
Tπ

(cid:20)

30.7 − 0.96 log

(cid:19)

(cid:18) T
Tπ

+ 0.18 log2

(cid:19)(cid:21)

(cid:18) Tπ
T

mb,(16)

where σpp is the inelastic cross section for pp collisions, T =
(γ − 1)mpc2 is the kinetic energy of the incident proton in
the frame of the ISM, γ = (1 + p2/m2
pc4)1/2 is the proton
Lorentz factor, and (cid:15)nuc is the “nuclear enhancement factor”
that represents the increase in the cross section relative to a
pure H gas due to the presence of heavier nuclei. We compute
the (cid:15)nuc from Kafexhiu et al.’s equation 24, evaluated using
the ISM elemental abundances provided by Draine (2011,
their Table 1.4), and for a beam of CR protons alone. Note
that the cross section drops to zero nearly discontinuously
near T = Tπ, as is clear from the top row of Figure 1.

For protosolar abundances (Asplund et al. 2009), the
mean gas mass per H nucleon is µHmH, where mH is the
hydrogen mass and µH = 1.4, and thus we can write the
catastrophic loss rate for nuclear inelastic collisions as

Lnuc = σnucv

ρ
µHmH

,

(17)

where ρ is the total gas density, mH is the hydrogen mass,
and v = c(cid:112)1 − γ−2 is the proton velocity. Assuming each
loss results in the CR proton surviving but having its kinetic
energy reduced by a factor of ηin = 2, we can write the
corresponding source function (equation 15) for “secondary”
protons as having a multiplicity ξp,p = 1 and a momentum
redistribution function

φnuc,p→p(p|p(cid:48)) = δ (cid:2)T (p) − ηinT (p(cid:48))(cid:3) ,

(18)

where T (p) is the kinetic energy of a proton with momentum
p.

Inelastic collisions also produce both γ-rays (mainly via
the decay of π0 mesons) and secondary CR positrons and
electrons (mainly via the decays of π+ and π− mesons). We
compute the γ-ray emission using the parameterisation pro-
vided by Kafexhiu et al. (2014), which gives the diﬀerential
cross-section for production of photons of energy (cid:15) by CR
protons of kinetic energy T . This yields an emitted speciﬁc
power per CR proton

dΨ
d(cid:15)

=

fnuc
(cid:15)

Amax(T )F (T, (cid:15))v

ρ
µHmH

,

(19)

where (cid:15) is the photon energy, and Amax(T ) and F (T, (cid:15)) are
parameterised functions of the CR kinetic energy T given
by equations 11 and 12 of Kafexhiu et al. (2014).

To compute the source functions for CR electrons and
positrons, we neglect the sub-dominant contribution from η
and more massive mesons, and focus on that from π±. We
compute the cross-sections for production of these products
following Yang et al. (2018); near the production threshold,
and T < 2 GeV, we use an interpolated cross section taken
from the tabulated values shown in Yang et al.’s ﬁgure 4,

6 Krumholz, Crocker, & Sampson

Loss process

Nuclear inelastic scattering

Ionisation
Coulomb
Synchrotron
Bremsstrahlung
Inverse Compton
Positron annihilation

Aﬀects

p

p, e+, e−
p, e+, e−
e+, e−
e+, e−
e+, e−
e+

˙pcts

-

equation 22
equation 33
equation 39
equation 48
equation 59
-

L

ξ

dφ/dp

dΨ/d(cid:15)

equation 17

-
-
-
equation 45
equation 61
equation 69

1 (p)
σπ± /σnuc (e±)
-
-
-
1 (e+, e−)
1 (e+, e−)
-

equation 18 (p)
equation 21 (e+, e−)
-
-
-
equation 46
equation 63
-

equation 19

-
-
equation 40
equation 49
equation 64
equation 72

Table 1. Summary of loss processes included. Entries give the process name and the types of particles aﬀected, followed by the equation
or expression we use for the various terms – ˙pcts, L, ξ, φ, and dΨ/d(cid:15) – that describe the rate of continuous momentum loss, the rate
of catastrophic loss, the secondary multiplicity, the secondary momentum distribution, and the speciﬁc power radiated per CR primary,
respectively. For secondary multiplicities and momentum distributions, we indicate the type of secondary particle in parentheses. A
blank entry indicates that the process does not produce the indicated eﬀect, e.g., nuclear inelastic scattering does not produce continuous
momentum loss.

Figure 1. Loss rates due to all of the processes included in criptic, as a function of CR kinetic energy T . For catastrophic losses (dashed
lines) we show the catastrophic loss rate L, while for continuous processes (solid lines) the loss rate we how is computed as Lcts = ˙pcts/p.
Colours indicate diﬀerent loss processes, as shown in the legend. The top row is for protons, the bottom for positrons; electrons are
identical to positrons except that positron annihilation (brown dashed line) does not apply. Columns show, from left to right, loss rates
in low-density ionised gas (H+), moderate density atomic gas (H i), and dense molecular gas (H2); see main text for exact properties of
the gas in each of these regions.

while at larger energies we follow them in adopting5

σπ± (p) = (cid:104)nπ± (cid:105)σnuc,

(cid:104)nπ± (cid:105) = 0.78 w−1/4(w−2)3/4−

1
6

.

±

1
3
(20)

Here (cid:104)nπ± (cid:105) is the energy-dependent multiplicity of produc-
tion of π± and w =
s/mpc2 = [2(1 + T /mpc2)]1/2 is the
ratio of the center of mass energy to the proton rest mass.

√

5 Note that in this expression we use σnuc, rather that fully
adopting Yang et al.’s approach of using σin but then separately
accounting for the contribution of heavier nuclei to pion pro-
duction using the approach of Kafexhiu (2016); our approach
amounts to assuming that heavier nuclei produce the same ra-
tio of π+ to π− and the same pion energy distribution as H.
The error associated with this approximation is negligible except
at energies (cid:46) 0.1 GeV, where other processes are generally more
important in any event.

Decays of π± then produce ﬁnal state e±, with the distribu-
tion of electron / positron momenta given by

dφnuc,p→e±
dp

∝

dEe±
dp

(cid:90)

fe(xe± )fπ(xπ± ) dEπ± .

(21)

Here xπ± = Eπ± /Ep is the energy of the pion created
in the collision normalised to the initial proton energy,
xe± = Ee± /Eπ± is the energy of the electron or positron
normalised to the pion energy, and fπ(x) and fe(x) are the
distributions of the normalised energies given by equations
(6) and (36) of Kelner et al. (2006), respectively. Thus our
ﬁnal expression for the e± source functions, in terms of equa-
tion 15, is that the multiplicity function ξe±,p = σπ± /σnuc,
and the momentum redistribution function is given by equa-
tion 21. Note that we do not at present follow ﬁnal state
neutrinos, although it would be a straightforward extension
to the existing code to do so.

MNRAS 000, 1–29 (2022)

2.3.3 Ionisation

At the energies with which we are concerned, ionisation of
the background gas is a continuous loss mechanism for all
CR particles.6 We can generically write the resulting rate of
momentum loss for a CR of species s(cid:48) as
ρ
µHmH

v
dT /dp

XsLs(cid:48),s,ion,

˙pcts,ion =

(22)

(cid:88)

s

where T and p are the kinetic energy and momentum of the
CR particle undergoing loss, the sum runs over all species
s with which the CR can interact, Xs is the abundance of
that species per H nucleon, and Ls(cid:48),s is the loss function for
that species, given by

Ls(cid:48),s,ion =

(cid:90) Ws(cid:48),s,max

0

(W + Is)

dσs(cid:48),s,ion
dW

dW.

Here Is is the ionisation potential of species s, W is the
kinetic energy of the ejected electron, Ws(cid:48),s,max is the maxi-
mum ejected electron kinetic energy allowed by kinematics,
and dσs(cid:48),s,ion/dW is the diﬀerential cross section for ejection
of electrons with kinetic energy W by collisions between CRs
of species s(cid:48) and targets of species s. We include H, H2 and
He as target species, since these overwhelmingly dominate
the ionisation losses; however, note that it is trivial to extend
the formalism we describe below to include other targets.

We follow Ivlev et al. (2021) in taking our diﬀerential
cross sections for ionisation by CR protons from the semi-
analytic model of Rudd et al. (1992), which gives

dσp,s,ion
dw

= σ0

(cid:18) R
Is

(cid:19)2 F1,s(Tp) + F2,s(Tp)w

(1 + w)3

,

(24)

where w = W/Is, σ0 = 4πa2
0Ns, a0 is the Bohr radius, Ns
is the number of electrons in the outer shell of the target
species, R = 13.6 eV is the Rydberg energy, Tp is the proton
kinetic energy, and F1,s and F2,s are empirical ﬁtting func-
tions given by equations 43 and 44 of Rudd et al., which
depend on Tp and the properties of the target species, but
not on W . The maximum energy allowed by kinematics is
Wp,s,max = 4(me/mp)Tp − Is, and inserting this and equa-
tion 24 into equation 23, the loss function is

Lp,s,ion = σ0Is

(cid:19)2 (cid:20)

F2,s(t) log (1 + wp,s,max) +

(cid:18) R
Is

(F1,s(t) − F2,s(t))

wp,s,max
1 + wp,s,max

(cid:21)

,

(25)

where wp,s,max = 4t − 1 and t = (me/mp)(Tp/Is). The total

6 Our assertion that electron ionisation losses can be treated as
continuous diﬀers from the conclusions of Ivlev et al. (2021), who
argue that ionisation losses for electrons must be treated as catas-
trophic. The diﬀerence is the energy range of interest: while their
computations follow electrons down to
keV energies, we are lim-
ited to (cid:38) 1 MeV by our use of relativistic expressions for radia-
tive loss rates. Calculations using the cross sections given below
show that, for a 1 MeV electron, ionising collisions that change
the energy of a CR electron by more than 10% account for only
10−5 of all collisions, and are collectively responsible for
2.8
only 8.9% of the total energy loss rate; both these ﬁgures de-
crease as we go to higher electron energies. For this reason, we
treat electron ionisation losses as continuous.

×

∼

MNRAS 000, 1–29 (2022)

(23)

dσe,s,ion
dw

= σ0

ionisation cross section is
(cid:18) R
Is

σp,s,ion = σ0

(cid:19)2 (cid:20)

F2,s(t)

CRIPTIC

7

wp,s,max
2(1 + wp,s,max)2 +

F1,s(t)

wp,s,max(2 + wp,s,max)
2(1 + wp,s,max)2

(cid:21)

.

(26)

Note from Figure 1 that there is a clear inﬂection in the
proton loss function near 1 GeV, where protons transition
from sub-relativistic to relativistic.

Similarly, we take our diﬀerential cross sections for ejec-
tion of electrons of energy W by CR electrons of energy Te
from the RBEQ model of Kim et al. (2000, their equation 19,
modiﬁed as per the description of the BEQ approximation
in their text),

α4
t + β2

(cid:0)β2
2i(cid:48)
s
(cid:18) 1

+

1 + w

(cid:32)

1
(1 + w)2 +

(cid:26) Qs − 2
t + 1

(2 − Qs)

(cid:18) Qs

(1 + w)3 +

Qs
(t − w)3

(cid:1) ×

us + β2
is
(cid:19) 1 + 2t(cid:48)
1
t − w

(1 + t(cid:48)/2)2 +

(27)

(cid:33)

+

2

i(cid:48)
s
(1 + t(cid:48)/2)2

1
(t − w)2 +
(cid:19) (cid:20)
β2
t
1 − β2
t

log

− β2

t − log(2i(cid:48)
s)

(cid:21)(cid:27)

,

where α is the ﬁne structure constant and Qs and Us are the
dimensionless dipole strength and mean outer shell electron
kinetic energy for the target species; we take these latter two
quantities from Table 1 of Kim & Rudd (1994). In the ex-
pression above, primes indicate quantities normalised to the
electron rest energy (i.e., t(cid:48) = Te/mec2, i(cid:48)
s = Is/mec2), lower
case indicates quantities normalised to the ionisation poten-
tial (i.e., t = Te/Is), and β’s indicate the β factor corre-
sponding to a particular energy (i.e., βt = [1−1/(t(cid:48)+1)2]1/2).
The maximum ejected electron energy normalised to the ion-
isation potential is we,s,max = (t − 1)/2, and inserting this
and equation 27 into equation 23 gives

Le,s,ion = Isσ0fion (gion,1 + gion,2)

where

fion =

2i(cid:48)
s

gion,1 =

α4
t + β2

(cid:0)β2

us + β2
is

(cid:1) ,

Qs − 2
t + 1

(cid:18)

log

2
t + 1

+ t log

2t
t + 1

(cid:19) 1 + 2t(cid:48)

(1 + t(cid:48)/2)2 +
(cid:19)(cid:35)
(cid:18) t − 1
2

(cid:34)

(2 − Qs)

log

(1 + t)2
4t

+

2

i(cid:48)
s
(1 + t(cid:48)/2)2

Qs

(t − 1)2
2t(t + 1)

(cid:20)

log

β2
t
1 − β2
t

− β2

t − log(2i(cid:48)
s)

(cid:21)

,

(28)

(29)

(30)

+

(31)

gion,2 =
Qs
2

(cid:18)

1 −

1
t2
(cid:34)

(2 − Qs)

1 −

(cid:19) (cid:20)

log

β2
t
1 − β2
t

− β2

t − log(2i(cid:48)
s)

(cid:21)

+

1
t

−

ln t
t + 1

1 + 2t(cid:48)
(1 + t(cid:48)/2)2 +

2

i(cid:48)
s
(1 + t(cid:48)/2)2

t − 1
2

(cid:35)

.

The total ionisation cross section is

σe,s,ion = σ0fiongion,2

(32)

8 Krumholz, Crocker, & Sampson

At the (cid:38) 1 MeV energies with which we are concerned,
positrons have almost exactly the same total ionisation cross
sections as electrons (e.g., Knudsen et al. 1990), and it is
therefore reasonable to assume similarly-identical diﬀeren-
tial cross sections. However, there is one subtlety: for elec-
trons the kinematic limit we,s,max = (t − 1)/2 is a result of
the incident and ejected electrons being identical particles,
so it is not possible to say which is the “primary” CR electron
and which is the “secondary”, ejected electron. The value of
we,s,max for electrons amounts to treating whichever elec-
tron has lower energy as the secondary. For positrons, the
incident and ejected particles are distinguishable, so it is not
obvious what to choose for we+,s,max. Fortunately this choice
makes relatively little diﬀerence for (cid:38) 1 MeV energies, since
losses are dominated by collisions that eject electrons with
w (cid:28) wmax; we therefore adopt the same kinematic limit for
positrons as for electrons, and thus the same loss function,
but warn that this approach would not be valid at lower
energies.

In addition to the calculating losses, criptic reports the
total ionisation rate for each target species. For a CR packet
of species s(cid:48), the rate per primary CR at which ionisations of
background species s occurs is ζs = σs(cid:48),s,ionvCR, where vCR
is the CR velocity, and σs(cid:48),s,ion is the total ionisation cross
section, given by equation 26 for protons and equation 32
for electrons and positrons.

2.3.4 Coulomb losses

In an ionised medium, all CRs lose energy via Coulomb
interactions with the surrounding electrons. As with ioni-
sation, this process is well-approximated as continuous at
the energies with which we are concerned. We take our loss
rates from Gould (1972), interpolating smoothly between
the expressions provided for the classical limit, β < α (where
β = v/c is the CR velocity normalised to c and α is the ﬁne
structure constant), the non-relativistic limit, α < β (cid:28) 1,
and the ultrarelativistic limit, 1 − β (cid:28) 1; these transitions
are visible in the loss rates plotted in Figure 1, at least for
protons. Our expressions are generically of the form

˙pcts,Coul =

(cid:18) dECR
dp

(cid:19)−1 e2ω2
p

v

Bstop,

where ECR is the CR energy,

ωp =

(cid:114) 4πnee2
me

(33)

(34)

is the plasma frequency, me is the electron mass, ne is free
electron density, and Bstop is the stopping number, which is
a function of ECR with a diﬀerent functional form for dif-
ferent CR particle types. For protons, interpolating between
Gould’s three cases gives

where ΓC = 0.5615 is a numerical constant. The equivalent
expression for electrons is

Be−,stop = ln

(cid:34) (cid:112)2δ(γ − 1)βmec2
(cid:126)ωp

(cid:35)

+

1
2

(cid:34)

ln

1 +

(cid:18) ΓC β
α

(cid:19)2(cid:35)

(cid:19)

ln (1 − δ) +

(cid:21)

δ
1 − δ

+

+

1
2
δ2
4

(cid:20)(cid:18)

1 +

(cid:18) γ − 1
γ

2γ − 1
γ2
(cid:19)2

,

(36)

and for positrons is

Be+,stop = ln

(cid:34) (cid:112)2δ(γ − 1)βmec2
(cid:126)ωp

(cid:35)

+

1
2

(cid:34)

ln

1 +

(cid:18) ΓC β
α

(cid:19)2(cid:35)

+

δ2
4
(cid:34)

δ
8

(cid:18) γ − 1
γ
(cid:19) (cid:34)

(cid:18) γ − 1
γ + 1

+ δ

−

δ
2

(cid:19)2 (cid:34)

(cid:18) γ − 1
γ + 1

1
2

+

1
γ

+

(cid:18) γ − 1
γ

(cid:19)2 (cid:18) 2δ
3

−

δ2
2

(cid:19)(cid:35)

3
2γ2 −
(cid:35)

(cid:19)2

−

γ2 − 1
2γ2

γ + 2
γ

−

γ2 − 1
γ2

δ +

(cid:18) γ − 1
γ

(cid:19)2 δ2
3

(cid:35)

.

(37)

Here γ is the CR Lorentz factor, and δ is a ﬁtting parameter
for which we adopt the recommended value δ = 1/2.

2.3.5 Synchrotron radiation

Synchrotron radiation is a continuous loss mechanism for CR
electrons and positrons.7 The rate of energy loss is given by
the usual loss formula for an isotropic distribution of pitch
angles (e.g., Blumenthal & Gould 1970),
(cid:18) dE
dt

σT cβ2γ2UB,

= −

(38)

4
3

(cid:19)

sync

where β = v/c, σT is the Thomson cross section, and UB is
the magnetic energy density. We therefore have

˙pcts,sync =

4
3

σT cβ2γ2UB

(cid:18) dEe±
dp

(cid:19)−1

.

(39)

The corresponding time- and direction-averaged speciﬁc
power that an observer sees per CR electron or positron
is

dΨ
d(cid:15)

=

√

3e3Bh
mec2

(cid:90) π

0

sin α

ν
νc,⊥

(cid:90) ∞

ν/(νc,⊥ sin α)

K5/3(ξ) dξ dα,

(40)

where ν = (cid:15)/h is the photon frequency and νc,⊥ =
3eBγ2/4πmec is the cutoﬀ frequency for CRs with a pitch
angle α = π/2, and K5/3(ξ) is the modiﬁed Bessel func-
tion of order 5/3. Note that synchrotron radiation is not
isotropic with respect to the local magnetic ﬁeld; the quan-
tity we compute here is the mean power radiated over 4π
sr. Similarly, we do not at present compute the polarised
intensity that would be seen by an observer in a particular
direction.

Bp,stop = ln

(cid:18) 2γmec2β2
(cid:126)ωp

(cid:19)

+

1
2

(cid:34)

ln

1 +

(cid:18) ΓC β
α

(cid:19)2(cid:35)

−

β2
2

, (35)

7 In suﬃciently strong magnetic ﬁelds synchrotron losses can be
signiﬁcant for protons as well, but at present we do not include
these. It would be straightforward to do so in the future, however.

MNRAS 000, 1–29 (2022)

2.3.6 Bremsstrahlung

function by

CRIPTIC

9

Bremsstrahlung is a catastrophic loss process for electrons
and positrons, since, at least in the relativistic regime,
energy loss is dominated by photons whose energies are
a signiﬁcant fraction of the CR energy. We adopt the
bremsstrahlung diﬀerential cross sections given by Blumen-
thal & Gould (1970),

dσe±,s,br
d(cid:15)

=

αr2
e
(cid:15)

(cid:40)(cid:34)

1 +

(cid:18) Ee± − (cid:15)
Ee±

(cid:19)2(cid:35)

φ1(∆) −

2
3

Ee± − (cid:15)
Ee±

φ2(∆),

(41)

where (cid:15) is the energy of the photon, Ee± is the total (rest
plus kinetic) energy of the CR electron or positron, α is the
ﬁne structure constant, re is the classical electron radius,

∆ =

(cid:15)mec2
4αZEe± (Ee± − (cid:15))

,

(42)

is the screening factor, Z is the nuclear charge, and φ1 and
φ2 are the screening functions. For species s consisting of
unshielded charges (free protons, electrons, and He nuclei),

φ1 = φ2 = −4Z 2

(cid:20)

ln (2αZ∆) +

(cid:21)

,

1
2

(43)

while for shielded nuclei (H, He, and He+), we use the tabu-
lated screening functions provided by Blumenthal & Gould.
The functional form of the diﬀerential cross section re-
quires some care in our numerical treatment; the most ob-
vious approach is to integrate the diﬀerential cross section
to compute a total cross section, and set the catastrophic
loss rate to be proportional to it. The problem is that, as a
result of the 1/(cid:15) dependence, the total cross section is loga-
rithmically divergent, even though the total energy loss rate
is ﬁnite. To handle this situation, we divide bremsstrahlung
losses into a catastrophic component, representing losses due
to photons with energies larger than fcat = 1/10 of the CR
kinetic energy, and a continuous part, accounting for losses
due to lower-energy photons. For the catastrophic part the
cross section is

σe±,s,br−cat =

(cid:90) T

e±

fcatT

e±

dσe,s,br
d(cid:15)

d(cid:15),

(44)

where Te± = Ee± − mec2 is the CR kinetic energy; the
corresponding catastrophic loss rate

Lbr =

ρ
µHmH

v

(cid:88)

s

Xsσe±,s,br−cat,

(45)

where v is the CR velocity, ρ is the gas density, and Xs is
again the abundance of species s per H nucleon. The mo-
mentum distribution function for the scattered CRs is
(cid:18) dσe±,s,br
d(cid:15)

dTe±
dp

dφbr
dp

(46)

(cid:88)

Xs

∝

(cid:19)

,

(cid:15)=T

e± (p(cid:48))−T

e± (p)

s

where the diﬀerential cross section dσe±,s,br/d(cid:15) is evalu-
ated at a photon energy (cid:15) corresponding to the diﬀerent
between the initial, Te± (p(cid:48)), and ﬁnal, Te± (p), CR kinetic
energies, and, following our catastrophic-continuous divi-
sion, we set the catastrophic loss cross section to zero if
Te± (p) < f Te± (p(cid:48)).

For the continuous part of the losses, we deﬁne a loss

MNRAS 000, 1–29 (2022)

Le±,s,br =

(cid:90) fcatT

e±

0

(cid:15)

dσe±,s,br
d(cid:15)

d(cid:15),

(47)

analogously to the ionisation loss function introduced in Sec-
tion 2.3.3. The corresponding loss rate is

˙pcts,br =
(cid:41)

v
dTe± /dp

ρ
µHmH

(cid:88)

s

XsLs(cid:48),s,br.

(48)

We show the continuous and catastrophic loss rates in
Figure 1. Note that the continuous loss rate drops sharply
at energies Te± (cid:38) 0.1 GeV for the H i- and H2-dominated
regions, but that a similar transition does not occur for the
catastrophic loss rate. This is a direct result of the behaviour
of atomic shielding, which is is signiﬁcant when ∆ (cid:28) 1. Ex-
amining equation 42, we see that ∆ (cid:28) 1 when αEe± (cid:29) mec2
and Ee± (cid:29) (cid:15) are both satisﬁed. The former condition is met
only when Te± (cid:38) 0.1 GeV, while the latter is met only for the
continuous part of the loss rate, which is why we see shield-
ing eﬀects only for continuous losses at high energy. Also
note that the bremsstrahlung loss rate, while it drops at
Te± (cid:38) 0.1 GeV, eventually stabilises and becomes constant
at yet higher energy. This is as direct result of the ionisa-
tion fraction being non-zero even in H i- and H2-dominated
regions; at suﬃciently high energy, the continuous loss rate
becomes dominated by the residual population of free pro-
tons and electrons, which are unaﬀected by shielding.

Finally, the speciﬁc power radiated by bremsstrahlung

photons per CR primary is

dΨ
d(cid:15)

=

ρ
µHmH

(cid:88)

v(cid:15)

Xs

s

dσe±,s,br
d(cid:15)

.

(49)

Note that this includes photon emission at all energies; we
separate catastrophic and continuous losses for the purposes
of calculating CR propagation, but there is no need to sep-
arate them when computing photon emission.

2.3.7 Inverse Compton scattering

Inverse Compton (IC) scattering of electrons and positrons
can be either a continuous or catastrophic loss process de-
pending on the initial CR Lorentz factor γ and initial photon
energy (cid:15)(cid:48). In the Thomson limit, which applies when

Γ((cid:15)(cid:48), γ) ≡

4γ(cid:15)(cid:48)
mec2 (cid:28) 1,

(50)

continuous loss is a good approximation, while in the Klein-
Nishina regime, Γ (cid:38) 1, the CR typically loses a substan-
tial fraction of its energy with each scattering (Blumenthal
& Gould 1970). Criptic must be able to operate in both
regimes, since, for example, we wish to be able to model
both ∼GeV CRs interacting with CMB photons (Γ ∼ 10−6)
and ∼ 10 TeV CRs interacting with visible or UV photons
(Γ ∼ 103). We therefore make use of the general Klein-
Nishina expression for the cross section, rather than the
simpliﬁed Thomson cross section. In this general case, the
diﬀerential rate at which IC scattering produces photons of
energy (cid:15) is (Jones 1968; Blumenthal & Gould 1970)

d ˙N
d(cid:15)

=

2πr2
ec
γ2

(cid:90) ∞

0

1
(cid:15)(cid:48)

dN (cid:48)
d(cid:15)(cid:48) S((cid:15), (cid:15)(cid:48), γ) d(cid:15)(cid:48),

(51)

10 Krumholz, Crocker, & Sampson

where re is the classical electron radius, dN (cid:48)/d(cid:15)(cid:48) is the spe-
ciﬁc number density of the photons being scattered, and

S((cid:15), (cid:15)(cid:48), γ) =






2q ln q + (1 + 2q)(1 − q) +

[Γ((cid:15)(cid:48),γ)q]2
1+Γq

1
2

(1 − q),

0,

0 < q < 1
otherwise

(52)

where q = (cid:15)/[Γ((cid:15)(cid:48), γ)(γmec2 − (cid:15))]. Here S is a dimension-
less function describing the shape of the Klein-Nishina cross
section.

To proceed further, we assume that the radiation
ﬁeld with which CRs are interacting can be described
as a sum of dilute blackbodies, characterised by a tem-
perature TBB and a dilution factor WBB; the CMB has
WBB = 1, TBB = 2.73 K, while the starlight ﬁeld of the
Milky Way is well-approximated by three components with
(WBB, TBB/K) = (7 × 10−13, 3000), (1.7 × 10−13, 4000), (1 ×
10−14, 7500) (Mathis et al. 1983; Draine 2011). The corre-
sponding photon number density for each component is

8π
(hc)3

(cid:15)(cid:48)2
e(cid:15)(cid:48)/kB TBB − 1

dN (cid:48)
d(cid:15)(cid:48) = WBB
At this point it is convenient to deﬁne non-dimensional ver-
sions of the initial photon energy (cid:15)(cid:48), the ﬁnal photon energy
(cid:15), and the blackbody temperature; we therefore deﬁne

(53)

.

x =

(cid:15)(cid:48)
kBTBB

y =

(cid:15)
γmec2

ΓBB =

4γkBTBB
mec2

.

(54)

With these deﬁnitions, we can rewrite equation 51 for a sin-
gle component of the radiation ﬁeld as

d ˙N
dy

=

(cid:19)

α3
8πγ3

(cid:18) c
re

WBBΓ2

BB

dFIC
dy

,

where α is the ﬁne structure constant,

dFIC
dy

≡

(cid:90) ∞

xmin

x
ex − 1

S(y, x, γ) dx,

(55)

(56)

describes the diﬀerential scattering rate in normalised pho-
ton energy units, xmin = y/[ΓBB(1 − y)] is the minimum
normalised initial photon energy that can produce a scat-
tered photon with normalised energy y (i.e., the minimum
value of x for which q < 1), and S(y, x, γ) is given by equa-
tion 52, but with the substitution Γ((cid:15)(cid:48), γ) → xΓBB and
q → y/[ΓBBx(1 − y)]. The total scattering rate and energy
loss rate due to a single radiation ﬁeld component are then

˙N =

˙E =

α3
8πγ3
α3
8πγ2

(cid:19)

(cid:19)

(cid:18) c
re
(cid:18) c
re

WBBΓ2

e,BB

(cid:90) 1

0

WBBmec2Γ2

e,BB

dFIC
dy
(cid:90) 1

0

dy

(57)

y

dFIC
dy

dy. (58)

In the integrals above, the parts of the integrands at
y (cid:28) 1 are well-approximated as continuous loss, while
those from y near unity correspond to losses that should
be treated catastrophically. Following our approach with
bremmstrahlung, we handle this by somewhat arbitrarily
placing the boundary between the continuous at catas-
trophic regimes at y = fcat = 1/10, and we therefore set
the continuous loss rate to
(cid:18) dTe±
dp

(cid:19)−1 α3
8πγ2

mec2 (cid:88)

Wi,BBΓ2

˙pcts,IC =

(cid:18) c
re

(cid:19)

i

i,BBGIC(Γi,BB),

where we have deﬁned

GIC(Γi,BB) ≡

(cid:90) fcat

0

y

dFIC
dy

dy.

(59)

(60)

The sum in equation 59 runs over all the components of
the radiation ﬁeld, and Γi,BB and Wi,BB are the values that
apply to the ith component. Similarly, the catastrophic loss
rate is

α3
8πγ3

(cid:18) c
re

(cid:19) (cid:88)

i

LIC =

where

Wi,BBΓ2

i,BBFIC(Γi,BB),

(61)

FIC(Γi,BB) ≡

(cid:90) 1

fcat

dFIC
dy

dy.

(62)

In the limit ΓBB → 0, the functions FIC and GIC have the
property that GIC → (π4/135)Γ2
BB and FIC/GIC → 0, so
the continuous loss rate approaches the usual expression
for the Thomson limit, and the catastrophic loss rate be-
comes negligible in comparison. On the other hand, in the
limit ΓBB → ∞, we have GIC/FIC → 0, and catastrophic
losses dominate. This behaviour is visible in Figure 1, where
we see continuous losses being dominant at low CR energy
and giving way to catastrophic losses at higher energy; also
note that, in the H+ and H i regions, there are two dis-
tinct peaks of catastrophic loss, one at higher energy arising
from the cosmic microwave background photon ﬁeld with
TBB = 2.73 K and one at lower energy from the starlight
ﬁeld with TBB = 5000 K.

For the part of IC losses that we treat as catastrophic,
since electrons and positrons are conserved, the multiplicity
ξe±,e± = 1. Consistent with our division between continu-
ous and catastrophic losses, the momentum redistribution
function is

dφIC
dp

=

1
Ee±

dEe±
dp

(cid:80)

i Wi,BBΓ2
(cid:80)

i,BBΘ(y − fcat) dFi,IC
dy
i,BBFIC(Γi,BB)

i Wi,BBΓ2
where y = 1−Ee± (p(cid:48))/Ee± (p), and the purpose of the Heav-
iside step function Θ(y−fcat) is to enforce our approach that
we only treat as catastrophic interactions that cause the CR
energy to change by more than fcat = 10% at a time. Finally,
the speciﬁc radiated power per CR primary is

,

(63)

dΨ
d(cid:15)

=

(cid:19)

α3
8πγ3

(cid:18) c
re

(cid:88)

y

Wi,BBΓ2

i,BB

i

dFi,IC
dy

,

(64)

where in this expression we do not include the step function
because the observable emitted power includes both contin-
uous and catastrophic losses.

2.3.8 Positron annihilation

The ﬁnal (catastrophic) loss process we include is positron
annihilation with electrons in the background gas. For the
relativistic energies with which we are concerned, positro-
nium formation is unimportant compared to direct annihi-
lation, and Coulomb corrections to the annihilation cross
section are small (see the review by Prantzos et al. 2011),
so the catastrophic loss rate is well-approximated by

Lannih = σdv

ρ
µemH

,

(65)

MNRAS 000, 1–29 (2022)

where v is the CR positron velocity, µemH is the mean mass
per electron (µe = 1.17 for Asplund et al. 2009 abundances),
and σd is the Dirac (1930) cross section, which for a CR
positron with Lorentz factor γ is given by

σd =

(cid:34)

πr2
e
γ + 1

γ2 + 4γ + 1
γ2 − 1

(cid:16)

ln

γ +

(cid:112)

γ2 − 1

(cid:17)

−

N =

(cid:35)

.

γ + 3
(cid:112)γ2 − 1

(66)

The energy-dependence of the cross section is visible in Fig-
ure 1.

We obtain the speciﬁc radiated power per CR positron
by ﬁrst transforming to the centre of mass frame of the
electron-positron collision, which has Lorentz factor
γ rel-
ative to the lab frame deﬁned by the background gas. In this
frame, the electron and positron both have energy ECM =
√
γmec2 and momentum pCM = (γ−1)mec, so each annihila-
γmec2, and
tion produces two photons with energy (cid:15)CM =
an angular distribution (Peskin & Schroeder 1995, equation
5.106)

√

√

dp
dµCM

∝

2 + γ + (γ − 1)µ2

CM − 2 (cid:2)γ + (1 − γ)µ2

CM

γ + (1 − γ)µ2

CM

(cid:3)−1

(67)

where µCM is the cosine of the angle between the direc-
tion of collision and the direction of the emitted photons.
The corresponding angle measured in the lab frame is µ =
(µCM + βCM)/(1 + βCMµCM), where βCM = (cid:112)1 − 1/γ is
the normalised velocity of the centre of mass frame, and the
corresponding photon energy measured in the lab frame is

(cid:15) =

√

(cid:15)CM
γ(1 − βCMµ)

(cid:104)
γ + (cid:112)γ (γ − 1)µCM

(cid:105)

=

mec2

(68)

Thus the energy distribution of the photons produced must
be proportional to (dµCM/d(cid:15))(dp/dµCM).

While this functional form describes the distribution of
CR energies that would be measured by observers in the
lab frame isotropically distributed around the direction of
the collision, we must of course obtain the same energy dis-
tribution for the situation of interest to us, where a single
observer at rest measures the photon energy distribution
emitted by an isotropic collection of annihilating positrons
averaged over all 4π sr. We can therefore write the quantity
of interest to us, the rate per unit energy per CR positron
emitted by an isotropic positron population as measured in
the observer frame, as
d ˙N
d(cid:15)

dFpos
dy

2L
mec2

(69)

=

,

where we have deﬁned y = (cid:15)/mec2 as the ratio of pho-
ton energy to electron rest energy, the function dFpos/dy
describes the energy distribution of the received photons,
and we adopt the normalisation (cid:82) (dFpos/dy) dy = 1, so
that the total photon production rate integrated over all
i.e., every positron that annihilates pro-
energies is 2L,
duces two photons. Since the energy distribution function
dFpos/dy ∝ (dµCM/d(cid:15))(dp/dµCM), it is straightforward to
work out its functional form:

dFpos
dy

= N −1

(cid:20) y4 − 4y3 + 2γ(1 + 3γ)y2 − 4γ2(1 + γ)y + 2γ2
y2(y − 2γ)2

(cid:21)

,

(70)

CRIPTIC

11

with y± = γ ± g and g ≡ (cid:112)γ(γ − 1). The normalisation
factor N required to ensure unit integral over this energy
range is

(cid:19)

(cid:18)

·

g
γ

3 −

− 4γ + 4g

2
γ
(cid:8)3gγ − gγ2 − 4gγ3 − γ (cid:2)1 + γ (cid:0)4γ2 − γ − 4(cid:1)(cid:3) +
(cid:2)(3 − 10γ)γ + g − 6gγ + 6gγ2 + 8gγ3(cid:3) tanh−1 g
γ
(cid:27)

2γ3(1 + 4γ) sinh−1 g
√
γ

.

+

(71)

We can now write down our ﬁnal expression for the

speciﬁc power per CR primary,
(cid:18) ρ

(cid:19)

y

dFpos
dy

.

µemH

dΨ
d(cid:15)

= 2σdv

(72)

However, we caution that this expression only includes emis-
sion from positron losses “in ﬂight”, which likely represent
only a minority of total positron annihilations, with the bal-
ance occurring due to the formation of positronium after
positrons have dropped to near-thermal energies via other
loss processes (Prantzos et al. 2011). We do not include a
treatment of positronium formation or the resulting emis-
sion in criptic, though it would be straightforward to ap-
ply such a model to the output of a criptic calculation,
since criptic records the location and time at which each
CR packet drops below the minimum momentum threshold
at which we cease to follow it.

3 NUMERICAL METHOD

We can obtain solutions to the FPE, equation 8, by solving
the corresponding SDE, equation 14, to obtain the trajecto-
ries through phase space q(t) for a large number of sample
CR packets, including extra steps to account for losses and
sources. The phase space distribution of those packets at any
time t then provides an estimate of the phase space density
˜f (q) at that time. Each sample packet is characterised by a
phase-space position (x, p), a weight Υ indicating the num-
ber of individual particles it represents, and the mass m and
charge Ze of the particles that comprise it; each packet rep-
resents only a single species, but a computation may include
an arbitrary number of species, each with its own distribu-
tion function ˜f and corresponding sample packets.

Criptic advances the sample packets through a series
of time steps ∆t. The procedure for updating from time t(n)
at the end of the nth time step to time t(n+1) = t(n) + ∆t(n)
has four parts, which we describe in detail in the subsequent
sections:

(i) If the diﬀusion vector, drift vector, or loss rate depends
on the CR distribution function ˜f (i.e., if the problem is non-
linear), estimate the required functions of ˜f at the position
of each packet (Section 3.1).

(ii) If any CR sources are present, inject new packets (Sec-

tion 3.2).

(iii) Advance all packets to time t(n+1) using an Euler-
Maruyama (EM) update; in the process determine the next
time step ∆t(n+1) (Section 3.3).

where dFpos/dy is non-zero only for energies y ∈ (y−, y+)

(iv) Check for production of secondaries during the time

MNRAS 000, 1–29 (2022)

12 Krumholz, Crocker, & Sampson

step, which are treated stochastically; if any secondary pack-
ets are produced during the time step, update them to time
t(n+1) as well, iterating until no packets remain (Section 3.4).

We ﬁrst describe the operations of each of these steps in
serial, and then how we modify the procedure for parallel
computation in Section 3.5. We describe some general fea-
tures of the criptic implementation in Section 3.6.

3.1 Step 1: reconstructing the distribution

function

In a non-linear problem, the drift vector A or diﬀusion vec-
tor κ depend on the CR distribution function ˜f itself, so
the ﬁrst step in an advance is to reconstruct the distribution
function seen by each sample packet so that these non-linear
dependencies can be evaluated; in a linear problem we skip
this step, as it is computationally expensive. As we discuss
below, criptic is largely agnostic about the particular form
of the non-linearity, and can accommodate a wide range of
CR propagation models. However, it is not computation-
ally practical to allow arbitrary functional dependence on
˜f . We therefore limit the type of non-linearity we allow to
what is by far the most common case. This, namely, is that
the agent responsible for generating the non-linearity is reso-
nant interactions between CRs and waves in the background
plasma, and the waves are themselves generated by the CRs
via the streaming instability. This constrains the functional
form of the non-linear dependence on ˜f , because CRs with
a particular momentum p can only resonantly interact with
waves whose wavelength is smaller than the CR gyroradius
rg. When dealing with multiple CR species, this condition
is most conveniently expressed in terms of the CR rigidity
R = pc/|Z|e, where Z is the CR charge in units of the ele-
mentary charge e. The gyroradius rg = R/B, where B is the
local magnetic ﬁeld strength and, since this is ﬁxed at any
given position, the condition for resonant interaction then
implies that CRs of rigidity R can experience non-linear in-
teractions with other CRs whose rigidity satisﬁes R(cid:48) > R.
Given this consideration, we restrict criptic to computing
non-linear eﬀects that can be described in terms of a depen-
dence of the propagation or loss rates for a CR of rigidity R
only on integrals of ˜f over particles with rigidities R(cid:48) > R.
Other dependenies will be considered in future expansions.
With this physical picture in mind, criptic estimates
the CR number density nR(cid:48)>R, pressure PR(cid:48)>R, and (ki-
netic) energy density UR(cid:48)>R, and the gradients of these
quantities at the position of each packet, considering only
the contributions from CRs with rigidity greater than or
equal to that of the packet being considered; we will drop
the R(cid:48) > R subscript from this point forward for brevity. For
a packet with momentum p and charge Ze, these quantities
are (Zweibel 2017)



 =





n
P
U

(cid:90) ∞

(cid:88)

s

pZs/Z





1
vsp(cid:48)
Ts


 ˜fs dp(cid:48)

(73)

where the sum runs over all CR species, Zse is the charge on
species s, ˜fs is distribution function for species s evaluated
at position x, and vs and Ts are the velocity and kinetic
energy of a CR of species s with momentum p(cid:48); note that
these functions depend on species s because they depend on

the particle mass. Thus n, P , and U are simply integrals of ˜f
over momentum, evaluated with diﬀerent weights – 1 for n,
vsp for P , and Ts for U .8 The expressions for the gradients
are completely analogous, simply replacing ˜f with ∇ ˜f in
equation 73.

We evaluate these integrals by approximating them
with Gaussian kernel density estimates; for each packet we
deﬁne a bandwidth tensor H (computed as we describe be-
low), and approximate the integrals above as





n
P
U



 =

(cid:88)

s,i

KH(x − xsi)ΥsiΘsi





1
vsipsi
Tsi





(74)

where the sum runs over all species s and all packets i be-
longing to that species, Υsi, xsi, psi, vsi, and Tsi are the
weight, position, momentum, velocity, and kinetic energy of
packet i of species s, Θsi is unity for psi > p(Zs/Z) and zero
otherwise, and

KH(x) =

(cid:114)

1
8π3 det H

(cid:18)

exp

−

1
2

(cid:19)

xTH−1x

(75)

is the usual three-dimensional Gaussian kernel. The analo-
gous expression for the gradients of these quantities are





∇n
∇P
∇U


 = −H−1

∇

(cid:88)

s,i

(x−xsi)KH∇ (x−xsi)ΥsiΘsi







 .

1
vsipsi
Tsi
(76)

Note that the bandwidth H∇ used to estimate the gradi-
ent is not the same as that used to estimate the quantities
themselves, as discussed below.

We evaluate the sums in equation 74 using an order
N ln N algorithm based on a kd-tree decomposition. Our
procedure is as follows. First, we sort the packets into a
balanced kd-tree, and for each node in the tree we record
the sum of the weights (cid:80) Υ and squared weights (cid:80) Υ2 for
all packets contained in that node. Once the tree has been
constructed, the next step is to determine the bandwidth
tensor H for each packet. There is a vast body of literature
on optimal methods for bandwidth selection, but the over-
riding constraint for us is that we require a method that op-
erates quickly and without requiring global communication
(for distributed memory calculations); the latter constraint
rules out methods such as cross-validation or multi-stage
plug-in selectors.

Instead, we make use of the tree structure itself to make
an estimate of the local bandwidth, by choosing the band-
width that brings a target number of neighbours Nngb,target
within the kernel; our default value for this parameter is
1024, but users can choose alternate values. We deﬁne the
eﬀective neighbour number for each node of the tree as
Nngb,node = ((cid:80) Υ)2/ (cid:80) Υ2, and for each packet we start
at the leaf of the tree that contains it, and climb the tree
until we reach a node for which Nngb,node ≥ Nngb,target (or
the root of the tree). At this point, we set the bandwidths H
and H∇ for the packet by applying the optimal normal scale

8 Extensions of criptic to compute other quantities that are de-
ﬁned by similar weighted integrals over ˜f are trivial to implement
if required, and simply require supplying the weight function for
that quantity.

MNRAS 000, 1–29 (2022)

bandwidth selectors (García-Portugués 2022, equations 3.17
and 3.18),

H =

H∇ =

(cid:19)2/7

(cid:19)2/9

(cid:18) 4
5
(cid:18) 4
7

N −2/7

ngb,nodeΣ

N −2/9

ngb,nodeΣ,

(77)

(78)

CRIPTIC

13

in sampling the distribution function, and the optimal choice
is necessarily problem-dependent. When only a single source
is present, we trivially have Npacket = ˙N dt. In the more gen-
eral case where multiple sources are present, we assign each
source a weight

Υs = ˙N

(cid:90) dfsamp

dp

dp,

(80)

(81)

where Σ is the covariance matrix for the points in the node.
Once we have selected a bandwidth for each packet, we
use the tree to evaluate equation 74 and equation 76. We
defer details of the algorithm to Appendix A.

and then

Npacket,i =

Υs,i
j Υs,j

(cid:80)

˙Npacket ∆t(n)

3.2 Step 2: injecting packets

The second step in our algorithm is that each CR source
present in the simulation volume adds new CR packets; in
terms of equation 8, this represents the source term ˜S. A
source is characterised by its position xs at the start of the
time step, the ﬁrst two derivatives of its position ˙xs and ¨xs,
the species of CRs it produces, the total rate ˙N at which
it produces CRs (measured as particles injected per unit
time), and the momentum distribution df /dp of those par-
ticles, where we normalise df /dp to have unit integral. Our
current implementation uses sources with truncated power-
law distributions in momentum df /dp ∝ pq over the interval
(p0, p1), but extension to alternative functional forms of the
momentum distribution is trivial.

When we inject packets, we assign each packet an in-
jection time ti drawn from a uniform distribution from t(n)
to t(n) + ∆t(n), and an injection position xi = xs + ˙xs(ti −
t(n)) + ¨xs(ti − t(n))2/2. Assigning packet momenta requires
some subtlety, because the naive approach – drawing mo-
menta from df /dp – is very computationally ineﬃcient. For
most realistic sources the momentum distribution is very
steep, df /dp ∼ p−2.2, and so if every injected packet repre-
sents an equal fraction of the CR population, then a very
large number of packets are needed to capture the behaviour
at high momenta.

For this reason, we do not draw momenta from df /dp,
but instead from an alternative distribution dfsamp/dp that
is generally ﬂatter; our default choice is dfsamp/dp ∝ p−1,
corresponding to a uniform distribution in log p, but users
can alter this. To compensate for under-sampling low-p
packets compared to their true numbers, we increase the
weight of those packets we do draw. Speciﬁcally, during a
time step in which we draw a total of Npacket CR packets to
represent the CRs injected by the given source, we set the
weight of each packet we inject to

Υ =

˙N ∆t(n)
Npacket

(cid:18) df /dp

dfsamp/dp

(cid:19)

,

(79)

where df /dp and dfsamp/dp are both evaluated at the mo-
mentum p of the newly-drawn packet. The factor in paren-
theses ensures that the momentum distribution function of
the injected packets, weighted by the packet weights Υ, fol-
lows df /dp.

The number of packets Npacket injected by each source
is set by a user-speciﬁed packet injection rate ˙Npacket, which
speciﬁes the number of primary CR packets injected per
unit time by all sources in the calculation; this choice deter-
mines the trade-oﬀ between computational cost and ﬁdelity

MNRAS 000, 1–29 (2022)

packets for source i, where the sum runs over all sources
present. This ensures that the total number of packets in-
jected is ˙Npacket dt, and that the total momentum distribu-
tion of all packets injected is distributed as dfsamp/dp.

Once packets have been injected, we reconstruct the
number density n, pressure P , and energy density U at their
phase space locations using the procedure described in Sec-
tion 3.1, exactly as for the packets that already exist at the
start of the time step.

3.3 Step 3: advancing packets

Consider a sample CR packet that starts a time step with
phase space position q(∗) and weight Υ(∗), and let t∗ be the
time at which the packet starts the step; for packets that
existed at the start of the time step t∗ = t(n) and similarly
for q(∗) and weight Υ(∗), while for newly-created packets
t(∗) = ti, where ti is the time at which that packet was in-
jected, and the phase space position q and weight Υ corre-
spond to those with which the packet was injected. We must
advance the packet to time t(n+1) through a series of sub-
steps. We begin each sub-step by computing the drift and
diﬀusion vectors A and κ, and the sum of the catastrophic
loss rates due to all processes L, given the current properties
and phase space position of the packet; if the distribution
function ˜f or quantities derived from it are required, we use
the reconstructed value obtained in Step 1. From these, we
compute a series of time step constraints associated with
spatial drift, spatial diﬀusion, momentum drift, momentum
diﬀusion, and catastrophic loss:

∆tx−drift =

∆tx−diﬀ =

∆tp−drift =

∆tp−diﬀ =

∆tloss =

(cid:112)A2

∆x
1 + A2
∆x2
max(K(cid:107), K⊥)

2 + A2
3

p
|A4|
p2
Kpp
1
L

(82)

(83)

(84)

(85)

(86)

Here ∆x is the smaller of (i) a user-speciﬁed length scale
that describes the structure of the background gas through
which the CR packets move (and thus the size scale on which
A and κ might be expected to vary) and (ii) the square root
of the geometric mean of the eigenvalues of the bandwidth
tensor H, which describes the typical size of the kernel used

14 Krumholz, Crocker, & Sampson

to estimate ˜f . We then set the overall time step to

(cid:32)

∆t = min

t(n+1) − t(∗),

(87)

∆t−1

x−drift + ∆t−1

C
p−drift + ∆t−1
x−diﬀ + ∆t−1

p−diﬀ + ∆t−1

loss

(cid:33)

,

where C is a user-speciﬁed tolerance with a default value of
0.25; note that the sub-step size ∆t ≤ ∆t(n).

Once the time step has been set, we ﬁrst update the

packet weight via

Υ(†) = Υ(∗)e−L ∆t,

(88)

where (†) indicates the state after the update, and we next
update the momentum through a standard EM step (Gar-
diner 2009),
p(†) = p(∗) + A4∆t + η(cid:112)Kpp∆t,

(89)

where η is a random variable drawn from a distribution with
unit mean and zero variance. At this point we check for cre-
ation of secondaries, a procedure we describe in Section 3.4,
and we delete packets for which p or Υ/Υi, where Υi is
the packet weight at injection, fall below user-speciﬁed tol-
erances; this is to limit the use of computational resources
following packets that represent either a negligible number
of particles or that have fallen to energies below those in
which we are interested.

The ﬁnal step is to compute the new spatial position,

√

(90)

κi∆t,

i + Ai∆t + ηi

which we also do through an EM update,
i = x(∗)
x(†)
where η is a vector of three independent random variables
with unit mean and zero variance. However, there is a sub-
tle diﬃculty in implementing this expression: the positions
here are written in the local TNB basis, which is not the
same at every position in space. In principle we could han-
dle this issue simply by evaluating the TNB basis vectors in
our ﬁxed coordinate system at the start of every sub-step,
using the equation above to compute the displacement of the
CR packet along these basis vectors, and then transforming
these displacements into our ﬁxed coordinate system. How-
ever, due to the ﬁrst-order nature of the EM scheme,9 this
approach leads to considerable numerical drift of packets
across ﬁeld lines. We therefore follow Merten et al. (2017) in
circumventing this problem by dividing each EM step into
a series of sub-steps during each of which we recompute the
TNB basis vectors, carrying out those sub-steps using an
adaptive, higher-order method that provides vastly better
ﬁeld-line tracing.

Speciﬁcally, let ξ be the position in the ﬁxed frame of
the simulations, and deﬁne an eﬀective “velocity” in the local
TNB frame by

˙xi = A(v=0)
i

∆t + ηi

(cid:114) κi
∆t

,

(91)

where the superscript (v = 0) indicates the drift vector A

9 Higher-order schemes such as the Milstein algorithm (Gardiner
2009) are unfortunately not usable for our problem, due to the
potentially complex dependence of the diﬀusion coeﬃcients on
position.

evaluated with the advection velocity v set to zero; we sep-
arate out the advection velocity because it is not deﬁned
relative to the TNB basis. We then carry out a Runge-Kutta-
Fehlberg 4th-5th order (RKF45; Fehlberg 1970) update of
the position in the ﬁxed frame ξ by setting the derivative at
each stage of the RKF45 update to
˙ξ = ˙x1ˆt + ˙x2 ˆn + ˙x3 ˆb + v,
where the basis vectors ˆt, ˆn, and ˆb are recomputed at every
stage, taking into account how the TNB basis vectors change
as the packet moves. If the ﬁeld does not vary in space, then
the basis does not change, and equation 92 reduces to the
standard EM update. As is usual with the RKF45 update, at
the same time we compute the update, we can also compute
an error estimate; if that error estimate exceeds some spec-
iﬁed tolerance, we divide the RKF45 time step ∆t into two
sub-steps of size ∆t/2, repeating the subdivision recursively
as necessary until the error estimate drops below a speciﬁed
tolerance. In this way we ensure that packets follow ﬁeld
lines accurately.

(92)

At this point we have updated all packet variables for
the sub-step ∆t. We repeat this process until each packet is
advanced to the ﬁnal time t(n+1).

3.4 Step 4: catastrophic losses and secondaries

One of the steps in the advance procedure described in Sec-
tion 3.3 is to create secondary packets, where secondary here
is used to mean any packet created from another packet,
rather than from a source or present in the initial condi-
tions. As described in Section 2.3, the source function de-
scribing the secondaries created by some catastrophic loss
process i can be characterised in terms of the loss rate Li
for the process, the multiplicity function ξi,s that describes
the multiplicity of secondaries of species s for that process,
and the momentum distribution function φi,s for those sec-
ondaries. Note that Li, ξi,s, and φi,s are all functions of the
momentum p(cid:48) of the CRs undergoing loss, but in the discus-
sion below we do not write out this functional dependence
explicitly for compactness.

Now consider a time step of length ∆t during which a
CR packet of statistical weight Υ experiences a total loss
rate from all processes L = (cid:80)
i Li. As a result, the weight of
the primary packet is reduced to Υe−L∆t. The total number
of secondaries of species s created by loss process i in the
course of this evolution is

Υi,s,sec = ξi,s

(cid:16)

1 − e−L∆t(cid:17)

Υ.

Li
L

(93)

A naive implementation of secondary production would
be to create secondaries with this weight every time step.
However, doing so would quickly make the calculation im-
possibly expensive due to the rapid proliferation of packets.
We therefore instead set a probability pi,s,sec ≤ 1 that each
packet spawns a secondary of species s via loss process i dur-
ing each sub-step of its advance (Section 3.3), and increase
the statistical weight of the secondaries by a factor 1/pi,s,sec
to compensate, so that the expected statistical weight has
the correct value. To be precise, for any secondaries we do
create, we assign them a weight
1 − e−L∆t(cid:17)
(cid:16)

(94)

Υi,s =

Υ

ξi,s
pi,s,sec

Li
L

MNRAS 000, 1–29 (2022)

If a secondary is created, we assign its initial position to be
the same as that of its parent at the start of the sub-step,
and we assign its initial momentum by drawing from the
momentum redistribution function φi,s.

We set the secondary creation probability pi,s,sec for
each process and species to a value proportional to the ex-
pected secondary creation rate ξi,sLi. We then normalise the
probability as follows:

pi,s,sec = fsec

(cid:80)

Liξi,s
(cid:80)

j Lj

s(cid:48) ξj,s(cid:48)

1 − e−L∆t(cid:17)
(cid:16)

,

(95)

where the sums in the denominator run over all processes j
and secondary species s(cid:48), and fsec is a user-settable dimen-
sionless parameter that functions analogously to ˙Npacket in
that it parameterises the trade-oﬀ between ﬁdelity and com-
putational cost in tracking secondaries. With this choice, the
weight assigned to each secondary created then reduces to

Υi,s =

(cid:80)

j Lj

(cid:80)

s(cid:48) ξj,s(cid:48)

fsecL

Υ.

(96)

To understand the meaning of the parameter fsec, ﬁrst
note that the expected number of secondaries created during
a time step, summing over all loss processes and all species,
is

(cid:104)Nsec(cid:105)1 =

(cid:88)

i,s

pi,s,sec = fsec

(cid:16)

1 − e−L∆t(cid:17)

.

(97)

After N such steps the expected number of secondaries cre-
ated is (cid:104)Nsec(cid:105) = N (cid:104)Nsec(cid:105)1, and the weight of the original
packet will have been reduced by a factor e−N L∆t. Thus
if we let Υi and Υf be the initial and ﬁnal weights of the
packet undergoing losses, and adopt the limit of small time
steps, L∆t (cid:28) 1, then we can write the expected number of
secondaries created as

(cid:104)Nsec(cid:105) = fsec ln

Υi
Υf

.

(98)

Thus we see that fsec determines the mean number of sec-
ondary packets created per e-folding of the primary packet
weight; a value of fsec = 1 corresponds to creating an
average of one secondary per e-folding, while a value of
fsec = 1/ ln 10 ≈ 0.434 corresponds to creating one sec-
ondary per factor of 10 reduction in the weight of the pri-
mary. We choose the latter as our default, but the optimal
choice likely varies from problem to problem, depending on
how much loss the primary particles suﬀer.

3.5 Parallelism

Criptic is parallelised using a hybrid MPI-openMP model.
Within a single MPI rank, it uses openMP threads to carry
out the advance for all the packets owned by that rank. This
involves two synchronisation points: one at the end of the
step when we compute the next time step, and one after
calculating any non-linear terms in the drift and diﬀusion
vectors prior, since this calculation must be completed prior
to moving any packets.

The MPI parallelism has two parts. The ﬁrst is a step
to distribute the packets across ranks to maintain load bal-
ance. For this purpose we use the PANDA algorithm de-
scribed by Patwary et al. (2016); brieﬂy summarising here,
the algorithm constructs a global kd-tree and uses it to par-
tition packets between ranks based on their spatial position.

MNRAS 000, 1–29 (2022)

CRIPTIC

15

Construction of a kd-tree requires two steps at each level
of partition: choosing a dimension along which to divide the
packets, and then choosing a point in that dimension to par-
tition the data. The ﬁrst step is straightforward to carry out
in parallel: the ranks compute the variance of positions in
each dimension, and since this involves only summation op-
erations, parallelising is straightforward. We choose to split
along the dimension of maximum variance. The second step,
choosing a partition point, requires more care, since it is ex-
pensive to ﬁnd the median point – the traditional choice for
the partition – in a distributed memory parallel calculation.
Instead, we ﬁnd the median approximately by selecting a
set of sample points from all ranks to mark the edges of a
histogram, and counting how many points on each rank fall
into the various histogram bins. The counts can then be re-
duced in parallel, allowing us to approximate the value of
the median. This process repeats recursively at each level of
the tree, until the desired level of leaves are created. Each
leaf is assigned to an MPI rank, and the packets within each
leaf are then sent to that rank. In practice, since the tree
changes little from time step to time step, during most time
steps the boundaries of leaves move little, and thus little data
need be communicated to maintain load balance. Once the
leaves of the global tree have been assigned to MPI ranks,
we construct local kd-trees below those leaves, exactly as we
do in a non-parallel calculation.

The second part of MPI parallelism is to carry out
kernel density estimation in parallel when packets are dis-
tributed across ranks. As with the remainder of the tree al-
gorithm we use for the kernel density computation, we defer
details to Appendix A.

3.6

Implementation notes

Criptic is written in C++, based on the C++17 standard;
we have avoided C++20 features to ensure compatibility
with somewhat older compilers. A key aspect of the design
is to maximise user ﬂexibility in specifying (1) the initial
conditions, (2) the properties of the background gas and
radiation ﬁeld through which CRs propagate, and (3) the
underlying plasma physical model that describes CR prop-
agation. While ﬂexibility in initial conditions is standard in
simulation codes, ﬂexibility in the background gas state and
propagation model is more challenging.

In criptic, we achieve this using C++ classes. The
state of the background gas is deﬁned by a pure virtual in-
terface class, which can be specialised by a user to describe
an arbitrary gas distribution. We provide specialisations for
some standard cases, for example where the gas distribu-
tion is speciﬁed in terms of an analytic function, a static
Cartesian grid, or a series of snapshots in time that are each
stored on Cartesian grids but, given this ﬂexibility, users can
implement their own classes to describe arbitrary time- and
position-dependent magnetic ﬁelds, gas densities, ionisation
states, compositions, and background radiation ﬁelds.

We take a similar approach to CR propagation. In prac-
tice, CR propagation in criptic is deﬁned using a pure vir-
tual interface class Propagation, which deﬁnes the call oper-
ator Propagation::() as a pure virtual function that takes
as input the spatial position x, the time t, the properties
of the CR packet (type of particle, momentum, etc.), the
properties of the background gas (total density, ion density,

16 Krumholz, Crocker, & Sampson

composition, magnetic ﬁeld, etc.), and the CR ﬁeld quan-
tities n, P , and U and their gradients. This function must
return all of the quantities that appear in the drift vector
A (equation 10) and the diﬀusion tensor D (equation 11):
the parallel diﬀusion coeﬃcient K(cid:107) and its spatial gradi-
ent ∇K(cid:107), the perpendicular diﬀusion coeﬃcient K⊥ and its
spatial gradient ∇K⊥, the momentum diﬀusion coeﬃcient
Kpp and its derivative with respect to momentum ∂Kpp/∂p,
and the streaming speed w and its spatial gradient ∇w and
derivative with respect to momentum ∂w/∂p.

To deﬁne a CR propagation model, the user deﬁnes a
class derived from Propagation that provides an implemen-
tation of the call operator and computes the required out-
puts from the provided inputs; the implementation of this
function is entirely up to the user, and thus, for example, CR
propagation can include arbitrary combinations of stream-
ing and diﬀusion, which can depend in arbitrary ways on
position, time, CR properties, gas properties, and the ﬁeld
quantities n, P , and U and their gradients. As with the
gas properties, we provide implementations for some stan-
dard cases – for example, a model where the CR diﬀusion
coeﬃcient is a powerlaw function of CR momentum, and
where CRs stream down ﬁeld lines at the ion Alfvén speed –
but users are not limited to these choices. The only restric-
tions are that, in its current form, criptic cannot capture
CR propagation coeﬃcients that depend on something other
than the provided inputs listed above, or where CR propaga-
tion is not describable by the pitch angle-averaged Fokker-
Planck equation (e.g., because the pitch angle distribution
is not close to isotropic).

One implication of this ﬂexibility is that criptic can
be run using exactly the same interstellar gas and radiation
ﬁeld distributions, and CR propagation models, as standard
CR propagation codes such as Galprop (Strong et al. 2007).

4 CODE TESTS

Here we describe the various validation tests to which we
have subjected criptic.

4.1 Transport tests

Our ﬁrst batch of tests evaluates criptic’s performance in
simulating CR transport, including the step of reconstruct-
ing the CR ﬁeld where necessary because transport rates
depend non-linearly on it. For all the tests in this section,
we disable all catastrophic and continuous loss terms, so we
are testing the transport parts of the code only. In these tests
we will characterise the performance of the code in terms of
its L1 error; we do not experiment with varying the num-
ber of packets explicitly, but below we show that the errors
we obtain are generally consistent with Poisson noise, and
thus in general we expect the error to depend on number of
packets used in a given simulation as L1

err ∝ N −1/2
packet.

4.1.1 Anisotropic diﬀusion

Our ﬁrst test is to validate criptic’s treatment of diﬀusion,
including anistropy and momentum-dependence of the dif-
fusion coeﬃcients. We consider a uniform region containing
gas at rest, threaded by a uniform magnetic ﬁeld in the ˆx

direction. The CR diﬀusion coeﬃcients parallel and perpen-
dicular to the ﬁeld have a ﬁxed ratio χ and vary as powerlaws
in the CR momentum, i.e.,
(cid:19)q

K((cid:107),⊥) = (χ, 1) · K0

,

(99)

(cid:18) p
p0

where χ, K0, p0, and q are constants. There is no momentum
diﬀusion or streaming. The domain is initially empty of CRs,
but at t = 0 a point source of CR protons turns on at the
origin. The source is monochromatic, and is characterised by
its luminosity L and by the momentum p0 of the protons it
injects. For this problem setup, the Fokker-Planck equation
reduces to

∂ ˜f
∂t

(cid:18)

= K

χ

∂2 ˜f
∂x2 +

∂2 ˜f
∂y2 +

∂2 ˜f
∂z2

(cid:19)

+

L
T

δ (r) δ (p − p0) Θ(t),

(100)

where r = (x, y, z), K ≡ K0(p/mpc)q, Θ(x) is the Heaviside
step function, and



(cid:115)

T = mpc2



1 +

(cid:19)2

(cid:18) p0
mpc



− 1



(101)

is the kinetic energy of the injected protons.
Making the change of variable x =

√

χx(cid:48) reduces this

problem to a constant-coeﬃcient diﬀusion equation

∂ ˜f
∂t

= K

(cid:18) ∂2 ˜f

∂x(cid:48)2 +

∂2 ˜f
∂y2 +

∂2 ˜f
∂z2

(cid:19)

+

1
√
χ

L
T

δ (cid:0)r(cid:48)(cid:1) δ(p − p0)Θ(t),

(102)

where r(cid:48) = (x(cid:48), y, z); note the extra factor of 1/
χ in the
ﬁnal term, which arises from the change of variable. The
Green’s function for the spatial distribution of the CRs is
then

√

G(r(cid:48), t) =

1

(4πKt)3/2 e−r(cid:48)2/4Kt,

(103)

where r(cid:48) = |r(cid:48)|, so for the case our case of a source that
turns on at t = 0, the solution for the spatial distribution
for t > 0 is

˜f (r(cid:48), t) =

(cid:90) t

1
√
χ

L
T

δ(p − p0)G(r(cid:48), t(cid:48)) dt(cid:48)

0
1
√
χ

L
T

1

(cid:19)

(cid:18) r(cid:48)
√
2

=

4πKr(cid:48) erfc
The corresponding CR energy density is simply UCR =
T (cid:82) f (r(cid:48), t) dp.

δ (p − p0) .(104)

Kt

We test criptic by simulating this problem using K⊥ =
1028(p/mpc)1/2 cm2 s−1 and χ = 4, with three sources pro-
ducing CRs with kinetic energy T = 1, 10, and 100 GeV;
each source has luminosity L = 1038 erg s−1; since the CRs
from the diﬀerent sources do not interact, the solution equa-
tion 104 applies independently to the CRs produced by each
source. We run the simulation for t = 2×109 s using a packet
injection rate 10−3 s−1, so that there are 2 × 106 CR packets
at the end of the simulation. We show the results in Figure 2
and Figure 3.

As the plots show, criptic recovers the exact solution
to very high precision, covering ≈ 8 orders of magnitude in
CR energy density; errors in the solution are consistent with
expectations from Poisson statistics given the ﬁnite number

MNRAS 000, 1–29 (2022)

CRIPTIC

17

strates that it is anistropic by a 4 : 1 ratio, exactly as ex-
pected.

4.1.2 Variable diﬀusion

Our next test investigates criptic’s performance when the
diﬀusion coeﬃcient is non-constant. We simulate the trans-
port of CRs with an isotropic diﬀusion coeﬃcient, but one
that varies as a powerlaw in both space and time:

K = K(cid:107) = K⊥ = K0

(cid:18) r
r0

(cid:19)qr (cid:18) t
t0

(cid:19)qt

.

(106)

There is no streaming in this test, and the background gas is
at rest. No sources are present, and all CRs have momentum
p0. For this setup the FPE is
∂ ˜f
∂2 ˜f
∂z2
∂t

∂2 ˜f
∂y2 +

∂x2 +

(cid:18) ∂2f

(107)

= K

(cid:19)

,

and one can verify by substitution that the system admits
a similarity solution for the spatial distribution

˜f (r, t) = NCRδ(p − p0)

3(2 − qr)

4πr3

0Γ

6
qr −2
(cid:16) qr −5
qr −2

(cid:17) [(qt + 1)η]3/(2−qr )

(cid:19)3 qt+1
qr −2

(cid:34)

exp

−

(cid:18) t
t0

(qt + 1)η
(qr − 2)2

(cid:18) r
r0

(cid:19)2−qr (cid:18) t
t0

(cid:19)−qt−1(cid:35)

(108)
,

where Γ(x) is the Γ function, η ≡ r2
0/K0t0, and NCR is the
total number of CRs. The energy density UCR = T (cid:82) ˜f dp,
where T is the kinetic energy corresponding to CR momen-
tum p0.

For our test we set K0 = 4 × 1028 cm2 s−1, r0 = 1018
cm, t0 = 108 s, qr = −1/2, and qt = 1. We initialise the
simulation with 2.5 × 105 CR packets with a total energy of
E0 = NCRT = 1048 erg; the initial radial distribution of the
packets follow the exact solution, equation 108, evaluated at
t = t0. We then use criptic to advance the system to time
t = 2t0.

We show the results in Figure 4. The ﬁgure shows that
criptic recovers the exact solution to very high accuracy;
errors are consistent with Poisson sampling, and are no
larger in the ﬁnal time step than in the initial setup. The
L1 error at the ﬁnal time, deﬁned by

L1

err =

(cid:90)

4π
E0

is below 1%.

|UCR,exact − UCR,sim| r2dr,

(109)

4.1.3 Oscillating ﬁeld loop

Our next test checks the ability of the code to trace diﬀusion
along curved, moving ﬁeld lines. In this test, we place a single
CR source with CR luminosity L = 1038 s−1 at x = r0 = 1
pc, y = z = 0 at time t = 0. The magnetic ﬁeld consists
of loops around the z-axis, so B = B0 ˆφ, where ˆφ is the
φ unit vector in an (r, φ, θ) cylindrical coordinate system.
CRs diﬀuse with zero perpendicular diﬀusion, and parallel
diﬀusion described by a coeﬃcient K(cid:107) = 1028 cm2 s−1. The
FPE governing the system then reduces to

∂ ˜f
∂t

=

K(cid:107)
r2
0

∂2f
∂s2 +

L
T

δ(s)δ(p − p0),

(110)

Figure 2. Energy density UCR as a function of eﬀective ra-
dius r(cid:48) in the anisotropic diﬀusion test (Section 4.1.1). Solid lines
show the exact solution computed from equation 104 for the three
sources producing CRs of energy (T = 1, 10, and 100 GeV; blue,
orange, and green), while circles show the criptic result; for clar-
ity we plot only every other bin. Error bars indicate the 90%
conﬁdence interval derived from the number of CRs in the bin,
assuming the CRs number counts are Poisson-distributed.

Figure 3. Projected energy density (cid:82) UCR dz in the anisotropic
diﬀusion test (Section 4.1.1), where energy density is computed
only for CRs with energies T = 1 GeV. Colour shows the projected
102 eV cm−3 pc, and white points
energy density from 10−1
show the positions of individual CR packets in regions where the
CR energy density falls below this level.

−

of CR packets used in the simulation. The L1 error, deﬁned
by

L1

err =

(cid:90)

4π
Lt

|UCR,exact − UCR,sim|r(cid:48)2 dr(cid:48),

(105)

where UCR,exact and UCR,sim correspond to the exact and
simulation solutions shown in Figure 2 (using the bins shown
to compute UCR,sim), is below 1% for all three sources. Vi-
sual inspection of the projected CR distribution also demon-

MNRAS 000, 1–29 (2022)

0102030r0=px2/χ+y2+z2[pc]10−510−310−1101UCR[eVcm−3]Exact1GeV(sim,90%CI)10GeV(sim,90%CI)100GeV(sim,90%CI)−20−1001020x[pc]−20−1001020y[pc]−1.0−0.50.00.51.01.52.0logRUCRdz[eVcm−3pc]18 Krumholz, Crocker, & Sampson

Figure 4. Results of the variable diﬀusion coeﬃcient test de-
scribed in Section 4.1.2. We show the CR energy density UCR in
the initial condition (blue) at t = t0 and in the ﬁnal simulation
snapshots at t = 2t0 (orange). Solid lines show the exact solution
given by equation 108, while circles show the criptic results, with
error bars to indicate the 90% conﬁdence interval assuming the
number of CR packets in each radial bin is Poisson-distributed.

Figure 5. Results for the oscillating loop diﬀusion test (Sec-
tion 4.1.3). The ﬁgure shows the CR energy density per unit an-
gle dECR/dφ, normalised by the total CR energy injected
t. The
solid line is the exact solution, and points show the numerical so-
lution computed with criptic; as in previous tests, the points
include error bars showing the 90% conﬁdence interval from Pois-
son statistics, but for this test the error bars are for the most part
comparable to the sizes of the plot markers and thus are hidden.

L

where T = 1 GeV is the energy of a single CR, p0 is the
corresponding CR momentum, and s = 2πr0φ is the position
along the current loop, with the source located at s = φ = 0.
The FPE in this case is equivalent to one-dimensional
diﬀusion in a periodic domain (−πr0, πr0). This problem
may be solved by standard Fourier methods, and the exact
solution for a point source located at φ = 0 that begins
injecting CRs at t = 0 is that the CR energy per unit angle
along the loop is

dECR
dφ

=

Lt
2π

(cid:34)

1 − 2

tdiﬀ
t

∞
(cid:88)

n=1

cos(nφ)
n2

(cid:16)
e−n2t/tdiff − 1

(cid:17)

(cid:35)

,

(111)

where tdiﬀ = r2
0/K(cid:107) = 9.55×108 s is the characteristic diﬀu-
sion timescale. To add a complication to this test, both the
source and the background gas perform simple harmonic os-
cillation in the x direction, with amplitude r0 and angular
frequency (cid:36) = 4π/tdiﬀ ; this allows us to test how well CRs
follow ﬁeld lines when the ﬁeld lines are attached to a ﬂuid
that is accelerating, and where the direction of the accelera-
tion can be both perpendicular and parallel to the ﬁeld line.
The exact solution is still given by equation 111, provided
that we deﬁne φ relative to the time-dependent centre of
the loop, since advection should move all the CR packets
together.

We simulate the system for a time t = 4tdiﬀ using a
packet injection rate 3 × 10−4 s−1, so over the course of the
simulation 3.81 × 105 packets are injected into the domain,
and the loop performs eight full periods of oscillation. This
test therefore evaluates not only how well CRs follow curved
ﬁeld lines, but how well they do so when the ﬁeld lines and
the gas to which they are anchored are moving at arbitrary,
time-variable angles relative to the ﬁeld direction.

Figure 5 shows the comparison between the criptic nu-
merical solution and the exact solution given by equa-

tion 111. Clearly the agreement is very good. Deﬁning the
L1 error by

L1

err =

1
Lt

(cid:90) (cid:12)
(cid:12)
(cid:12)
(cid:12)

dECR,exact
dφ

−

dECR,sim
dφ

(cid:12)
(cid:12)
(cid:12)
(cid:12)

dφ,

(112)

we ﬁnd that the error is < 1%. We also check quantitatively
how well the CR packets remain conﬁned to the ﬁeld line
to which they are attached, by examining the standard de-
viation of CR packet radial coordinates at the end of the
simulation, σr. We ﬁnd that σr/r0 ≈ 5.7 × 10−6, so over
4 diﬀusion times and 8 oscillations periods, numerical diﬀu-
sion causes CR packets to drift across ﬁeld lines by less than
1 part in 105.

4.1.4 Momentum diﬀusion

Our next test evaluates the ability of the code to handle
momentum diﬀusion, or, equivalently, second-order Fermi
acceleration. For this test we turn on a single source of CRs
at t = 0 at the origin, which injects CRs with luminosity L =
1038 erg s−1. All injected CRs have a momentum of exactly
p0 = 1 GeV/c. There is no spatial diﬀusion or streaming,
but CRs diﬀuse in momentum with a diﬀusion coeﬃcient
Kpp, which we set implicitly by setting the diﬀusion time at
momentum p0 to tdiﬀ = 1 Myr. The corresponding diﬀusion
coeﬃcient is Kpp = p2
0/tdiﬀ , and the corresponding FPE is
(cid:18) 2
p

(cid:20) ∂2 ˜f
∂p2 −

δ(r)δ(p − p0),

(cid:19)(cid:21)
˜f

∂ ˜f
∂t

= Kpp

∂
∂p

(113)

L
T

+

where T is the kinetic energy corresponding to momentum
p0. Using the change of variables ˜f (cid:48) = p ˜f reduces the prob-
lem to a 1D diﬀusion equation, subject to the boundary
condition ˜f (cid:48) = 0 at p = 0, which can be solved by standard
Green’s function methods. The exact solution for the CR

MNRAS 000, 1–29 (2022)

012345r[pc]10−410−2100102104UCR[eVcm−3]ExactInitial(sim,90%CI)Final(sim,90%CI)−202φ[rad]0.000.050.100.150.200.250.30(Lt)−1dECR/dφ[rad−1]ExactSim(90%CI)CRIPTIC

19

Figure 6. Results for the momentum diﬀusion test (Sec-
tion 4.1.4). The plot show the CR momentum distribution
dnCR/dp at the end of the simulation. The solid line shows the
exact solution, equation 114, while points show the criptic re-
sult. Error bars on the points show the 90% conﬁdence interval,
computed assuming the number of CRs in each bin is Poisson-
distributed.

Figure 7. Results for the non-linear diﬀusion test (Section 4.1.5).
The plot shows the CR energy density UCR at times t = t0 (“Ini-
tial”, blue) and t = 3t0 (“Final”, orange). Lines show the exact
solution given by equation 117, while circles with error bars show
the solution computed by criptic; errors indicate the 90% conﬁ-
dence interval derived by assuming the number of CR packets in
each bin is drawn from a Poisson distribution.

momentum distribution is

dnCR
dp

=

(cid:34)(cid:114)

L
T

2
π

t
σp
(cid:32)

p
p0
(cid:18) p−p0
2σp

−
e

(cid:19)2

(cid:18) p+p0
2σp

−

− e

No sources are present. Such a system admits a similarity
solution (Pattle 1959)

(cid:19)2 (cid:33)

+

p + p0
σp

erfc

(cid:19)

(cid:18) p + p0√
2σp

+

UCR =

ECR,tot√
πr3
0

Γ

Γ

(cid:16) 1

2

q + 5
(cid:16) 1

q + 1

(cid:17)

(cid:17)

(cid:34)

1 −

(cid:18) r
rout

(cid:19)2(cid:35) (cid:18) t
t0

(cid:19)−3/(3q+2)

,

|p − p0|
σp

erfc

(cid:18) |p − p0|
√
2σp

(cid:19)

(cid:21)

− 1

,

(114)

where ECR,tot is the total CR energy in the system,

where σ2

p = 2Kppt.

We simulate this problem with criptic using a packet
injection rate of 10−7 s−1, running to time t = tdiﬀ = 1 Myr,
so there are 3.16 × 106 CR packets present at the end of the
simulation. We compare the exact and numerical solutions
in Figure 6. The Figure shows very good agreement between
the exact and numerical results. Quantitatively, the L1 error,
deﬁned for this problem as

L1

err =

1
(L/T )t

(cid:90) (cid:12)
(cid:12)
(cid:12)
(cid:12)

dnCR,exact
dp

−

dnCR,sim
dp

(cid:12)
(cid:12)
(cid:12)
(cid:12)

dp,

(115)

is < 1%.

4.1.5 Non-linear diﬀusion

All of our tests thus far have been for problems where the
diﬀusion coeﬃcient does not depend on the CR ﬁeld, and
thus which can be solved without the reconstruction step
in our algorithm. We now consider a problem where recon-
struction is required. We consider a system where diﬀusion is
isotropic, and the diﬀusion coeﬃcient is a powerlaw function
of the CR energy density:

K(cid:107) = K⊥ = K = K0

(cid:18) UCR
UCR,0

(cid:19)q

.

MNRAS 000, 1–29 (2022)

(116)

(117)

(118)

(119)

(120)

rout = r0

(cid:19)1/(3q+2)

,

(cid:18) t
t0

and r0 and t0 are given by

r3
0 =

ECR,tot
UCR,0

π−3/2

Γ

Γ

t0 =

qr2
0
2(3q + 2)K0

.

(cid:16) 1

2

q + 5
(cid:16) 1

q + 1

(cid:17)

(cid:17)

Note that the system has the property that UCR = 0 exactly
at r ≥ rout, so this problem represents a severe test of our
method, since the exact solution has a sharp cutoﬀ in the
CR energy density.

For our test with criptic, we set the total CR energy
to ECR,tot = 1046 erg, adopt index q = 1, and specify UCR,0
and K0 implicitly by setting r0 = 1 pc and t0 = 107 s. We
initialise the distribution of CR packets to the analytic so-
lution at t = t0, using a total of 105 CR packets, and evolve
the system to t = 3t0. We show the results of this test in
Figure 7. We ﬁnd that the agreement between the numer-
ical and exact solutions is very good. At smaller radii the
match is almost perfect, and criptic recovers the location
of the sharp edge of the exact solution with only a very small
amount of numerical blurring. Deﬁning the L1 error for this

02468p[GeV/c]105010521054dnCR/dp[(GeV/c)−1]ExactSim(90%CI)0.00.51.01.5r[pc]100101102UCR[eVcm−3]ExactInitial(sim,90%CI)Final(sim,90%CI)20 Krumholz, Crocker, & Sampson

4.1.6 Streaming and streaming losses

Our next test checks the ability of the code to handle stream-
ing down CR pressure gradients, together with the associ-
ated adiabatic changes in CR momentum when the diver-
gence of the streaming velocity is non-zero. For this test we
consider a fully ionised medium at rest with a powerlaw dis-
tribution of density and a “split monopole” magnetic ﬁeld.
The density and magnetic ﬁeld as a function of position are
(cid:18) r
r0
(cid:16) r0
r

B = B0

ρ = ρ0

sgn(z)ˆr,

(122)

(123)

(cid:19)kρ

(cid:17)2

where r is the distance from the origin. For this test we use
r0 = 1 pc, ρ0 = 2.34 × 10−24 g cm−3, kρ = −2, and B0 = 10
µG. The simulation begins with no CRs, but we place a
point source of CRs with luminosity L = 1038 erg s−1 at the
origin, where it injects CRs with initial energy T = 1 GeV.10
For the CR transport model in this set, we let CRs stream
down the CR pressure gradient at the ion Alfvén velocity,

w =

√

B
4πρ

sgn (−∇PCR · B) .

(124)

In this test the CR pressure gradient always points to
the origin, and thus CRs should always stream away from
the origin at the streaming speed

w = vA0

(cid:19)−2−kρ/2

,

(cid:18) r
r0

(125)

√

4πρ0. Individual CRs therefore obey an
where vA0 = B0/
equation of motion dr/dt = w which, for a CR injected at
t = tinj, has the solution

Figure 8. Reconstruction of the CR energy density UCR (top)
and its radial derivative dUCR/dr (bottom) at the initial time
in the non-linear diﬀusion test (Section 4.1.5). Black lines show
the exact solution as a function of radius r, solid blue lines show
the median value of the criptic CR packets, computed in 30
radial radial bins, and blue and orange bands show the 25th -
75th percentile range (50% conﬁdence interval) and 5th - 95th
percentile range (90% CI), respectively, in the same bins.

test as

L1

err =

(cid:90)

4π
ECR,tot

|UCR,exact − UCR,sim|r(cid:48)2 dr(cid:48),

(121)

r(t − tinj) = r0

3 +

(cid:20)(cid:18)

(cid:21)1/(3+kρ/2)

kρ
2

(cid:19) vA0t
r0

(126)

we ﬁnd L1

err = 2.4%.

To understand the quality of the solution, it is helpful to
examine the reconstructed CR energy density and its deriva-
tive, which are used to construct the diﬀusion coeﬃcient and
its spatial derivative. We show these reconstructions for the
initial time in Figure 8; results are qualitatively similar at
later times. We see that our kernel density estimation al-
gorithm reconstructs the CR energy density with very high
accuracy; the median is so close to the exact solution that
the line showing it is nearly invisible in the ﬁgure, hidden
behind the exact solution, and the 50th and 90th percentile
ranges lie within ≈ 10% and ≈ 20% of the exact solution
except at large radii.

The derivative, which is inherently harder to recon-
struct, shows a larger range, and deviates from the exact
solution at both small radii, where the number of CR pack-
ets is small due to the small volume, and at the edge of the
distribution; nonetheless, the median agrees very well with
the exact value over most of the radial range. Errors are most
signiﬁcant at the largest radii, where the exact solution goes
to zero exactly, a feature that is necessarily blurred some-
what in criptic’s reconstruction due to the ﬁnite size of the
kernel. It is this eﬀect that is responsible for the sharp edge
of the exact solution expanding very slightly too quickly in
the criptic simulation. Nonetheless, the overall error is very
small.

for times t (cid:29) tinj. Moreover, the momentum of individual
CRs evolves with radius due to adiabatic cooling as

dp
dr

=

(cid:18) dr
dt

(cid:19)−1 dp
dt

= −

p
3w

∇ · w,

(127)

which has the solution that a CR injected with momentum
pinj at radius rinj has momentum

p = pinj

(cid:19)−kρ/6

(cid:18) r
rinj

once it reaches radius r.

(128)

We simulate the system for 109 s using a packet injec-
tion rate of 10−4 s−1, so that by the end of the simulation
there are 105 packets. We show the criptic results in com-
parison to the exact solutions for CR packet position versus
age and momentum versus radius in Figure 9. We again see
excellent agreement between criptic and the exact solution,
indicating the code successfully reconstructs the direction of

10 To avoid CRs near the origin requiring inﬁnitely small time
steps, we ﬂatten the density and magnetic ﬁeld proﬁles at very
small radii, and make the CR source slightly extended. Speciﬁ-
cally, we adopt a ﬂattening radius rﬂat = 10−3r0 and evaluate the
density and magnetic ﬁeld using max(r, rﬂat) rather than simply
r; we likewise inject CRs at a random radius uniformly distributed
from 0 to rﬂat, rather than exactly at r = 0.

MNRAS 000, 1–29 (2022)

101102UCR[eVcm−3]ExactSim(median)50%CI90%CI0.000.250.500.751.00r[pc]−500−2500250dUCR/dr[eVcm−3pc−1]CRIPTIC

21

Figure 10. Number density of CRs with momentum > p in
the reconstruction test described in Section 4.1.7. Solid lines
show the median value of nCR(> p) computed by criptic in
25 logarithmically-spaced bins of p, evaluated at 5 diﬀerent radii
(as indicated by the colours). Shaded bands around the medians
show the ranges within which 50% and 90% of the reconstructed
values fall. Dashed lines show the exact solution (equation 130).

4.1.7 Number density computation

Our ﬁnal transport test evaluates criptic’s ability to recon-
struct the CR ﬁeld in a more realistic problem where there
is a continuous distribution of CR positions and momenta.
In this problem we place a source of CR protons at the ori-
gin, which injects CRs at a speciﬁc rate d ˙nsrc/dp ∝ pq over
a momentum range from p0 to p1. The CRs then diﬀuse
isotropically away from the source with a constant diﬀusion
coeﬃcient K. The exact solution for the CR distribution is
then just given by equation 104 with the (L/T )δ(p − p0) re-
placed by d ˙nsrc/dp, and we can immediately write down the
expected number density of CRs at any given radius r and
time t with momentum > p for any p ∈ (p0, p1),

(cid:19)

Kt

erfc

(cid:18) r
√
2

˙nsrc

nCR(> p) =

1
4πKr

1 − (p/p1)q+1
1 − (p0/p1)q+1 , (130)
where ˙nsrc is the total CR injection rate integrated over all
momenta. The test is to compare this exact value for the CR
number density to the value reconstructed by criptic, given
by equation 74. We run the test using a diﬀusion coeﬃcient
K = 1028 cm2 s−1 and a source with total energy injection
rate L = 1038 erg s−1, with p0 = 1 GeV/c, p1 = 103 GeV/c,
and q = −2.2, for a time, t = 109 s. We use a packet injection
rate 10−4 s−1 for the test.

We compare the exact and reconstructed CR number
densities in Figure 10, which shows nCR(> p) computed
in 25 logarithmically-spaced bins in p, evaluated at radii
Kt, and
r/rdiﬀ = 0.2, 0.5, 1.0, 2.0, and 3.5, where rdiﬀ =
for each radial bin we consider CR packets whose radii are
within 5% of the target value. Solid lines show the median
reconstructed value of nCR(> p) for packets in that bin,
and shaded bands show the ranges within which 50% and
90% of the packet values fall. We see that the median recon-
structed value of nCR(> p) is in almost perfect agreement
with the exact result except at the highest values of p, where

√

−

Figure 9. Solutions for the streaming problem (Section 4.1.6). In
the top panel we show CR packet radial position r versus packet
age tpacket = t
tinj, and in the bottom we show CR packet
momentum p as a function of radius. In both panels, solid lines
are the exact solutions given by equation 126 and equation 128,
respectively, and circles with error bars are the numerical solu-
tions computed by criptic, averaged over bins in age (top) and
radius (bottom). Error bars show the 5th to 95th percentile range
in each bin.

the CR pressure gradient and correctly computes the rate
of adiabatic cooling caused by the non-uniform streaming
speed. Quantitatively, we deﬁne the radial position and mo-
mentum error for each CR packet by

er =

r
rexact

− 1

ep =

p
pexact

− 1,

(129)

where rexact and pexact are the exact solutions given by equa-
tion 126 and equation 128. We ﬁnd that the mean values of
er and ep are 0.37% and 0.40%, respectively, with variances
1.5% and 4.6%; the errors are therefore small, and in fact
the variance in ep is an overestimate of the true error be-
cause it is mostly a result of the dependence of p on the
initial injection radius rinj, which is randomly varied by a
small amount for numerical reasons as discussed above.

MNRAS 000, 1–29 (2022)

0204060tpacket[yr]0.000.010.020.030.040.05r[pc]ExactSim(90%CI)0.000.020.04r[pc]0.500.751.001.251.501.75p[GeVc−1]ExactSim(90%CI)0123logp[GeV/c]−14−12−10−8−6logpnCR(>p)[cm−3GeV/c]r/rdiﬀ0.20.51.02.03.5ExactSim(median)Sim(50%CI)Sim(90%CI)22 Krumholz, Crocker, & Sampson

Figure 11. Distribution of exact (horizontal axis) and criptic-
computed (vertical axis) values of nCR(> p), the number density
of CRs with momentum > p. The blue solid line shows the me-
dian, while shaded regions indicate the range into which 50% and
90% of the reconstructed values fall; the black dashed line is the
1 : 1 line, corresponding to perfect agreement.

the ﬁnite number of sample packets causes deviation, and at
r/rdiﬀ = 0.2, where the simulation median is ∼ 10% below
the true value due to the ﬁnite size of the smoothing kernel,
which blurs out the sharp peak at small radii visible in, e.g.,
Figure 2. The other clear trend is that the 50 and 90 per-
cent ranges expand at larger radii, simply because our ﬁnite
number of packets leads to larger Poisson errors.

To make a quantitative analysis of the error, for each
CR packet we evaluate the exact value of nCR,exact(> p)
at its position from equation 130, and we place the pack-
ets in 40 bins of nCR,exact(> p). For each bin, we examine
the distribution of criptic-reconstructed number densities,
nCR,sim(> p), in that bin, and compute the median and
the 50% and 90% conﬁdence intervals of this distribution.
We plot the median and conﬁdence intervals as a function
of nCR,exact(> p) in Figure 11. We see the same patterns
that were visible in Figure 10, i.e., agreement is excellent
over most of the range of nCR,exact(> p), but there are de-
viations at both the highest values, where the smoothing
kernel blurs out the very sharp peak around the source, and
the lowest values, where the ﬁnite number of CR packets
in the simulation leads to errors in reconstructing very low
density regions. However, over 5 decades in nCR(> p), from
10−13 − 10−8 cm−3, the error is very small: averaged over
this range, the median value diﬀers from the exact one by
only 0.005 dex, and the 50% range is only 0.16 dex wide.

4.2 Microphysics tests

Our second set of tests evaluates the performance of our
code in simulating the microphysical processes that govern
CR loss and secondary production, and the radiation spectra
produced thereby. In only some of these cases is an exact
analytic solution available, and, where it is not, we compare
to expected physical behaviour and limiting cases.

4.2.1 Proton diﬀusion with collisional loss

Our ﬁrst test of microphysics evaluates our treatment of pro-
ton catastrophic losses, and the coupling between them and
transport. To this end, we repeat the anisotropic diﬀusion
experiment described in Section 4.1.1, but including losses
due to CR proton inelastic scattering due to a background
gas of constant density ρ, and using a source that injects a
continuous momentum distribution of CR protons at a rate
per unit momentum d ˙nsrc/dp; we disable all other loss mech-
anisms for the purposes of this test. Considering only pri-
mary protons (i.e., those that have not yet been scattered),
the FPE that governs this system is

∂ ˜f
∂t

(cid:18)

= K

χ

∂2 ˜f
∂x2 +

∂2 ˜f
∂y2 +

∂2 ˜f
∂z2

(cid:19)

+

d ˙nsrc
dp

δ(r) − σnucv

,

ρ
µHmH
(131)

where K is the perpendicular diﬀusion coeﬃcient, χ is the
ratio of parallel and perpendicular coeﬃcients (with the
magnetic ﬁeld oriented in the ˆx direction), and σnuc and
v are the nuclear inelastic cross section and particle veloc-
ity as a function of particle momentum p. The system can
be solved exactly by making the same change of variable
χx(cid:48) and r(cid:48)2 = x(cid:48)2 + y2 + z2 as in Section 4.1.1 to
x =
transform the problem to a standard diﬀusion equation with
a loss term, and then writing down the Green’s function in-
cluding the loss term. Since the loss rate is independent of
position and time, this is simply

√

G(r(cid:48), t) =

1

(4πKt)3/2 exp

(cid:18)

−

r(cid:48)2
4Kt

−

t
tloss

(cid:19)

,

(132)

where tloss = µHmH/σnucvρ is the loss timescale. The exact
solution (again, considering only the primary proton popu-
lation), is

˜f (r(cid:48), p, t) =

(cid:90) t

0

√

χ

d ˙nsrc
dp

G(r(cid:48), t(cid:48)) dt(cid:48)

=

d ˙nsrc
dp

1
√
χKr(cid:48)

8π

(cid:20)

e−r(cid:48)/rloss erfc

(cid:18) r(cid:48)

2rdiﬀ

−

rdiﬀ
rloss

(cid:19)

+

er(cid:48)/rloss erfc

(cid:18) r(cid:48)

2rdiﬀ

(cid:19)(cid:21)

,

+

rdiﬀ
rloss

(133)

where we have deﬁned r2

loss = Ktloss and r2

diﬀ = Kt.

We run the test using a momentum-dependent diﬀusion
coeﬃcient K = 1028(p/mpc)1/2 cm2 s−1 and anisotropy pa-
rameter χ = 4. The central CR source produces CR pro-
tons with a momentum distribution d ˙nsrc/dp ∝ pq with
q = −2.2 over a momentum range from p0 = 0.1 GeV/c
to p1 = 105 GeV/c, with a total luminosity L = 1038 erg
s−1. The CRs propagate through a uniform background gas
of density ρ = 2.34 × 10−21 g cm−3, and we run the simula-
tion for t = 2×1012 s, using a packet injection rate Γ = 10−6
s−1, so there are 2 × 106 packets present at the end of the
simulation. Given this setup, we have rdiﬀ = 45.8(p/mpc)1/2
pc, and rloss/rdiﬀ ≈ 0.5 at momenta far above the pion pro-
duction threshold, pth = 0.78 GeV/c; thus we have selected
parameters so that losses are relatively important over most
of the momentum range of the test, but become unimportant
(rloss → ∞) at the lowest CR momenta.

We show the radial distribution of CR number den-
sity for a range of sample momenta in Figure 12, com-
paring the simulation results to the exact solution given

MNRAS 000, 1–29 (2022)

−16−14−12−10−8−6lognCR(>p)exact[cm−3]−16−14−12−10−8−6lognCR(>p)sim[cm−3]1:1Median50%CI90%CICRIPTIC

23

(cid:16)

(cid:17)
w ˜f

+

∂
∂p

(cid:17)
(cid:16)
˙pcts ˜f

+

d ˙nsrc
dp

,

(135)

system is
∂ ˜f
∂t

= −

∂
∂x

where ˙pcts is the rate of momentum loss due to synchrotron
and inverse Compton radiation. Since the loss rate is inde-
pendent of position, the spatial and momentum parts of the
system are separable, and there is a one-to-one relationship
between the position x and the time t = x/w for which
CRs have been subject to loss processes. Over this time, a
CR injected with momentum pi will have been reduced to
momentum p given implicitly by t = − (cid:82) p
dp(cid:48)/ ˙pcts(p(cid:48)). If we
pi
further adopt the ultrarelativistic limit γ (cid:29) 1 and p ≈ γmec
and assume that we are far from the Klein-Nishina regime,
then ˙pcts ∝ p2, and we can evaluate the integral analytically;
from equation 39 and equation 59, we have

γ =

γi
1 + γi(t/tloss)

,

(136)

where for convenience we have expressed the momentum in
terms of the Lorentz factor γ, and

tloss =

3mec
4σT (UB + UR)

,

(137)

where UB and UR are the energy densities of the magnetic
ﬁeld and radiation ﬁeld, respectively. This in turn allows us
to write down the solution to the Fokker-Planck equation,
(cid:19)2 (cid:18) γ

(cid:18) 1

(cid:19)q

˜f (x, γ, t) =

˙n0
γ0

1 − ξγ

1 − ξγ

(138)

for ξ < t/tloss and γ ∈ [γ0/(1 + ξγ0), γ1/(1 + ξγ1)], and 0
otherwise, where here γ = p/mec is the Lorentz factor in the
ultrarelativistic limit and ξ ≡ x/wtloss is the dimensionless
distance. Integrating over x, the momentum distribution of
all electrons with γ > γ0 is

dnCR
dγ

=

˙n0tloss
γ0

(cid:19)

(cid:18) γq−1
q + 1

(cid:2)(1 − ξmaxγ)−q−1 − 1(cid:3) ,

(139)

where ξmax = min(t/tloss, γ−1 − γ−1
1 ); for 1 (cid:28) γ (cid:28) γ1 and
t → ∞, this gives the classical “cooled synchrotron” dn/dp ∝
pq−1, i.e., the spectral index is the injection index minus one.
We carry out this test with a source with total luminos-
ity 1038 erg s−1, which injects CR electrons with a powerlaw
momentum distribution characterised by q = −2.2 at mo-
menta from p0 = 10−2 GeV/c to p1 = 103 GeV/c. The elec-
trons stream at w = 100 km s−1, and we set the energy den-
sities in the background magnetic ﬁeld and radiation ﬁeld
to UB = UR = 50 eV cm−3; this corresponds to a mag-
netic ﬁeld B = 44.87 µG, a blackbody radiation temperature
TBB = 10.144 K (for dilution factor WBB = 1), and a loss
time tloss = 6.09 Gyr. We run the simulation for 10−3tloss,
using a packet injection rate 10−8 s−1. We show the results
in Figure 13; the upper panel shows the CR spectrum inte-
grated over all positions compared to the analytic solution
given by equation 139, while the lower panel shows the dis-
tribution function evaluated at selected positions, compared
to the analytic solution given by equation 138.

As Figure 13 shows, criptic reproduces the exact so-
lutions very well. Quantitatively, we deﬁne the L1 error for
the integrated spectrum for this problem by

L1

err =

1
ln(γ1/γ0)

(cid:90) ln γ1

ln γ0

(cid:12)
(cid:12)
(cid:12)
(cid:12)

log10

(dnCR/dγ)sim
(dnCR/dγ)exact

(cid:12)
(cid:12)
(cid:12)
(cid:12)

d ln γ, (140)

Figure 12. CR proton number density per unit momentum,
dnCR/dp, as a function of eﬀective radius r(cid:48) in the anisotropic dif-
fusion with loss test problem (Section 4.2.1). We show dnCR/dp
evaluated in ﬁve sample momentum bins, each 0.2 dex wide, span-
ning from the minimum to the maximum momenta present in
the problem; note that our plotted values of dnCR/dp have been
scaled by p3 in order to make it easier to display such a wide
range of momenta on the same plot. Points with error bars show
criptic simulation results, with the error bar indicating the Pois-
son uncertainty on the mean value in each bin due to the ﬁnite
number of packets. Solid lines show the exact solutions given by
equation 133, while dashed lines show the solutions we would
expect to ﬁnd if we were to disable losses (equation 133 with
rloss

).

→ ∞

by equation 133; for comparison we also show the solution
that would be expected in the absence of losses, i.e., setting
rloss = ∞ in equation 133. We ﬁnd that criptic recovers
the correct exact solution, including momentum-dependent
loss rates, to the level expected from Poisson statistics. We
deﬁne the L1 error norm for this problem by

(cid:82) ∞
0

(cid:82) p1
p0

L1

err =

| ˜fsim − ˜fexact| 4πr(cid:48)2pq dp dr(cid:48)
d ˙nsrc
dp pq dp

t (cid:82) p1
p0

,

(134)

where ˜fsim are the simulation results and ˜fexact is the exact
solution. Note the weight factor of pq in this integral is in-
cluded to ensure that all momenta are weighted equally in
computing the error estimate, so the integrand in the de-
nominator is independent of p. Deﬁned this way, we ﬁnd
that the L1 error in our criptic solution is 2.0%.

4.2.2 Electron streaming with synchrotron and inverse

Compton loss

Our second test evaluates our implementation of syn-
chrotron and inverse Compton losses for electrons. We place
a point source of CR electrons with a powerlaw momen-
tum distribution d ˙nsrc/dp = ( ˙n0/p0)(p/mec)q over the range
(p0, p1) in a medium with a uniform magnetic ﬁeld B = B ˆx
and a uniform radiation ﬁeld with dilution factor WBB and
blackbody temperature TBB. The electrons stream in the +x
direction at constant speed w, while suﬀering synchrotron
and inverse Compton losses. All other loss processes are dis-
abled, as is diﬀusion. The Fokker-Planck equation for this

MNRAS 000, 1–29 (2022)

101102103104r0=px2/χ+y2+z2[pc]10−1710−1510−1310−1110−910−7p3(dnCR/dp)[(GeV/c)2cm−3]p[GeV/c]10−0.9±0.1100.5±0.1101.9±0.1103.3±0.1104.9±0.1ExactSimNopp24 Krumholz, Crocker, & Sampson

Figure 13. Results of the electron streaming with losses test. In
the top panel we show the compensated CR spectrum integrated
over all space, γ2(dnCR/dγ) at the end of the simulation. Filled
circles show the numerical results evaluated in 30 logarithmically-
spaced bins of Lorentz factor γ, the solid line shows the exact
solution (equation 139), the dashed grey line shows the distribu-
tion of CRs injected by the source, and the open circles are the
results of our test in the Klein-Nishina regime (see main text).
In the lower panel, we show momentum distributions evaluated
at ﬁve sample positions given by the dimensionless position vari-
able ξ indicated in the legend. As in the top panel, ﬁlled circles
are the criptic numerical solution, solid lines are exact solutions
(equation 138), the grey dashed line is the injected spectrum, and
the open circles are the results of running the simulation in the
Klein-Nishina regime rather than the Thomson regime.

so the error is the mean logarithmic deviation between the
exact and simulated spectra; note that we use this deﬁnition
because the steep nature of the spectrum means that, if we
do not measure the deviation logarithmically, the error norm
is dominated by the parts of the spectrum at low γ, where we
simply have the original spectrum. Using this deﬁnition, we
ﬁnd L1
err = 0.012 dex for the solution shown in Figure 13.
We can also deﬁne the L1 error at a given dimensionless
position ξ analogously, simply by replacing dnCR/dγ by ˜f ,
and replacing γ1 with γ1/(1 + ξγ1) in the upper integration
err = 0.026 dex at ξ = 10−5 to 0.01
limit; doing so we ﬁnd L1
dex at ξ = 10−3; the error is largest at 10−5 because this
is sampled by the fewest packets. Nonetheless, even at this
small value of ξ, the agreement with the exact solution is
clearly very good.

Although we do not have exact solution for it, we can
also slightly modify this test to verify that criptic behaves
as expected qualitatively in the Klein-Nishina regime. To do
so, we change the background magnetic ﬁeld to B = 4.487 ×
10−9 µG and the radiation ﬁeld to TBB = 1.0144 × 105 K

with WBB = 2×10−16; this has the eﬀect of setting UR = 100
eV cm−3 and UB = 5 × 10−19 eV cm−3 ≈ 0. Thus the total
magnetic plus radiation energy density is unchanged from
the original version of the test, and in the Thomson limit
we should recover exactly the same solution. However, while
for our previous value of TBB the momentum range (p0, p1)
for the injected CRs corresponded to log ΓBB = −6.9 to
−1.9, with the higher value of TBB we now have log ΓBB =
−2.9 to 2.1. Consequently ΓBB = 1 occurs in the middle
of the injected momentum range, at p = 7.5 GeV/c (γ =
1.5 × 104), and we therefore expect Klein-Nishina eﬀects to
become signiﬁcant at momenta approaching this value.

The open circles in Figure 13 show the results of the
test in the Klein-Nishina regime. The qualitative result is
as expected: for γ (cid:28) 1.5 × 104, we are in the limit ΓBB (cid:28)
1, and the solution matches the Thomson case. For γ (cid:29)
1.5 × 104, on the other hand, the rate of energy loss scales
as dE/dt ∝ ln γ (Blumenthal & Gould 1970), so the loss
timescale obeys tloss ∝ γ/ ln γ, rather than tloss ∝ 1/γ as
in the Thomson regime. Thus losses become increasingly
unimportant at high γ, and the spectrum approaches the
injected spectrum rather than the Thomson limit solution.

4.2.3 A thick target

Our ﬁnal microphysical test is to simulate a thick target
with all microphysical processes enabled, and with a source
injecting both primary protons and electrons. In this test
criptic is performing a calculation similar to that carried
out by other authors who treat CR microphysics but do not
include transport, or include it only in a simpliﬁed param-
eterised way such as by analytically specifying a loss time
or calorimetry fraction (e.g., Yoast-Hull et al. 2014; Peretti
et al. 2019; Roth et al. 2021). Our goal is to show that crip-
tic, though not optimised for this type of calculation (since
it is possible to obtain the answer much more eﬃciently if
one is uninterested in a detailed treatment of spatial trans-
port), nonetheless recovers CR and emitted γ-ray spectra
similar to those that have been reported in the literature.

For this test we disable spatial transport and momen-
tum diﬀusion, and we consider an environment such as might
be found in a starburst galaxy: a uniform medium of molec-
ular hydrogen characterised by number density nH = 103
H nuclei cm−3, an ionisation fraction by mass χ = 10−4, a
magnetic ﬁeld strength B = 0.3 mG, and two radiation ﬁelds
both with WBB = 1, one with TBB = 2.73 K (the CMB) and
one with TBB = 20 K (representing a reprocessed dust radia-
tion ﬁeld). We place two sources in the medium. One injects
protons with a momentum distribution dn/dp ∝ p−2.2 over
a range in kinetic energy T = [10−3, 106] GeV, and has to-
tal luminosity L = 3 × 1042 erg s−1, corresponding roughly
to the luminosity expected for a galaxy with a star forma-
tion rate of ≈ 100 M(cid:12) yr−1, assuming 1 SN per 100 M(cid:12) of
stars formed, a total energy of 1051 erg per SN, with ≈ 10%
of that taking the form of CRs. The other source injects
electrons with the same spectrum, but a total luminosity a
factor of 10 smaller. We run the simulation for 0.5 Myr using
a primary packet injection rate Γinj = 2 × 10−7 s−1; this is
longer than the loss time at all energies for the background
environment, so by this time the system settles to steady
state. At the end of the simulation, there are approximately
4.3 × 106 CR packets present.

MNRAS 000, 1–29 (2022)

105210541056γ2(dnCR/dγ)ExactSimSim-KNInjected102103104105106γ103510361037γ2(d2nCR/dγdx)[cm−1]logξ−5.0−4.5−4.0−3.5−3.0CRIPTIC

25

tional contribution from secondary electrons. All other pro-
cesses are subdominant. Note that the wavy structure in
the inverse Compton and bremmstrahlung spectra at high
energy is real, and reﬂects the modulation imposed by the
fact that we have two blackbody radiation ﬁelds at diﬀer-
ent temperatures present. On the other hand, the some-
what spiky contribution from positron annihilation (which
includes only the Doppler-boosted 511 keV photons, not the
inverse Compton, bremmstrahlung, or synchrotron contri-
butions from positrons) is a result of the relatively small
number of positron packets present in the calculation, which
causes some numerical noise. However, since this component
is subdominant by ≈ 2 dex, this has no noticeable eﬀect on
the total spectrum. In general, our result is qualitatively
consistent with the results of other thick target calculations
of starburst γ-ray and radio spectra.

5 DISCUSSION AND CONCLUSION

We conclude by discussing applications of criptic, as well
as the limitations of the current code and our plans for future
expansions.

5.1 Applications

Criptic can be used to solve a wide range of problems in
CR transport. In Sampson et al. (2022), we have already
applied it to the problem of determining an eﬀective trans-
port theory for CRs that stream through a turbulent plasma.
This application exploits criptic’s ability to model trans-
port through an arbitrary, time-dependent background – in
this case the output of an MHD turbulence simulation.

In future work we intend to use criptic to post-process
MHD simulations of Milky Way-like galactic discs (e.g.,
Wibking & Krumholz 2022), in order to compare the results
produced by diﬀerent CR transport models with observable
quantities such as the γ-ray spectral index as a function
of height above the galactic plane. We also intend to post-
process CR hydrodynamics simulations in order to predict
detailed observables from them.

Astrochemistry and the link between it and high-
energy phenomena represents another immediate applica-
tion. There has been considerable debate about the CR ion-
isation rate in starburst galaxies (e.g., Papadopoulos 2010;
Bisbas et al. 2015; Narayanan & Krumholz 2017) and in the
Milky Way Central Molecular Zone (Ginsburg et al. 2016;
Oka et al. 2019; Tanaka et al. 2021), but thus far this discus-
sion has focused on molecular indicators, and has not taken
advantage of constraints oﬀered by high-energy tracers such
as γ-ray emission. However, the CRs that drive ionisation
and those that produce γ-rays are ultimately part of the
same population, albeit at somewhat diﬀerent energies. Ef-
forts to combine constraints on the low-energy population
that drives ionisation and the high-energy population that
drives γ-ray emission have thus far been very limited (e.g.,
Armillotta et al. 2022), but criptic’s ability to simulate the
full CR energy range should greatly facilitate these eﬀorts.

Figure 14. Steady-state CR spectra in the thick target prob-
lem. For each species we plot T 2 dnCR/dT , where dnCR/dT is
the number of individual CR particles in a particular energy bin.
Diﬀerent colours indicate primary protons, primary electrons, sec-
ondary electrons, and (secondary) positrons, as indicated in the
legend. The dashed black line labelled T −2.2 shows the shape of
the injection spectrum.

We show the resulting steady-state CR spectra in Fig-
ure 14. The result is in accord with what we would expect:
the proton spectrum has a slope that is very slightly shal-
lower than the injection spectrum at high energies, reﬂect-
ing the slight increase in pp cross section with energy. This
continues to ≈ 1 GeV, and below this energy the spectrum
dies oﬀ quickly, reﬂecting the strong ionisation losses that
low-energy CRs suﬀer in a starburst environment (c.f. Fig-
ure 1); indeed, each second the CR protons ionise a total of
6.0 × 1050 H2 molecules and 7.2 × 1049 He atoms.11 The pri-
mary electron spectrum is both lower in absolute value and
substantially steeper, with a slope closer to −3.2 at high en-
ergy, as a result of the quadratic dependence of synchrotron
and inverse Compton losses on CR energy. It too falls oﬀ
below ≈ 1 GeV due to ionisation losses – the total ionisa-
tion rate produced by electrons and positrons is 6.8 × 1050
s−1 and 8.7 × 1049 s−1 for H2 and He, respectively. Finally,
the secondary electron and positron spectra are nearly iden-
tical, and are lower still, reﬂecting the relatively large value
we have chosen for the primary electron / proton ratio in
this test.

We show the γ-ray emission that criptic predicts for
this system in Figure 15. We ﬁnd that nuclear inelastic scat-
tering dominates at high energies, with a sharp cutoﬀ just
below 106 GeV reﬂecting the cutoﬀ in the injection spectrum
that we apply there. This gives rise to the usual bump at
≈ 1 GeV in the spectral energy distribution. Bremsstrahlung
and inverse Compton emission from primary electrons sig-
niﬁcantly contribute to the total emission at energies be-
low ≈ 1 GeV. In the radio, we see a dominant contribu-
tion from primary electron synchrotron, with a ≈ 10% addi-

11 Note that these should be understood as primary ionisations,
since we do not track electrons with energies (cid:46) 1 MeV, which
overwhelmingly dominate secondary ionisations.

MNRAS 000, 1–29 (2022)

−20246logT[GeV]10511052105310541055T2dnCR/dT[GeV]pPrime−Sece−e+T−2.226 Krumholz, Crocker, & Sampson

Figure 15. Emitted γ-ray spectra produced in the thick target test. The black solid line shows the total spectrum produced by all
particles and processes, and the blue solid line shows the contribution from nuclear inelastic scattering. Dashed and dot-dashed lines in
diﬀerent colours show emission by primary and secondary electrons and positrons, respectively, with the colour indicating the emission
process – bremsstrahlung, inverse Compton, and synchrotron.

5.2 Limitations and expansion plans

No simulation code can ever capture all of physics, and that
is certainly true of criptic. It is therefore worth conclud-
ing pointing out some limitations of the current code, and
some plans for future expansion to remedy at least some of
these limitations. One limitation is that criptic is a post-
processing code, and therefore does not allow for calculation
of the back-reaction on the ﬂow due to CR pressure forces
or heating. In this regard, it is analogous to Monte Carlo
post-processing radiative transfer codes, which can be used
to predict detailed spectra, but do not allow self-consistent
calculation of how a ﬂow reacts to radiation forces. To the
extent that a calculation using criptic predicts a CR ﬁeld
where CR forces are important (or, analogously, a Monte
Carlo calculation predicts a dynamically-important radia-
tion pressure force), the correct way to proceed is to evolve
the system with a code that self-consistently includes those
forces, and then use a post-processing tool like criptic to
calculate the observable emission at much higher resolution
that would be possible from the self-consistent calculation
alone. Beyond this limit to the overall criptic methodology,
though, we here identify three other limitations that are ripe
for improvement in future releases.

First, criptic does not yet include all of the CR species
or loss processes for which observational constraints exist.
Since we have focused on radiative and astrochemical sig-
natures from galaxies, and particularly radiative signatures
that are observable from beyond the Milky way, in this ﬁrst
release we have included the species that dominate these.
However, direct in situ measurements exist for a range of
heavier CR nuclei, most prominently He, B, and C. We in-

tend to include these species in a future release. We will
also add anti-protons and the process of positron annihila-
tion via positronium formation, which do produce radiative
signatures that are observable in the Galaxy, if not from
external galaxies. Finally, we have focused on CRs in the
∼ 1 MeV−1 PeV range in typical galactic environments, and
have not included loss processes that become dominant out-
side this range or in highly-magnetised environments such
as around active galactic nuclei. At low energies the main
omitted process is charge exchange (e.g., Schultz et al. 2008),
while at the high energy end it is photo-hadronic interactions
(e.g., Mücke et al. 1999); photon-photon scattering can also
become a signiﬁcant loss process for high-energy photons in
strong radiation environments, and is not yet included. In
highly-magnetised environment, we should also include syn-
chrotron losses for protons. The modular nature of the code
makes addition of such processes straightforward, and these
too may be included in future releases.

Second, at present criptic solves the Fokker-Planck
equation in the spatial and momentum directions, but not in
pitch angle; it is therefore valid only on scales large enough
that the local CR pitch angle distribution has become ap-
proximately isotropic. This limits applications to ultra-high
energy CRs, and potentially to environments where CR
scattering is very strongly suppressed since, in both these
regimes, the mean free path that CRs travel before becoming
isotropised can be large. Fortunately our Itô calculus-based
formulation of the problem is readily extensible to include
the pitch angle dimension as well, and we intend to include
an option to solve problems in the anisotropic regime in fu-
ture releases.

Third, criptic does not yet predict neutrino emission.

MNRAS 000, 1–29 (2022)

10−1510−14(cid:15)[GeV]10401042(cid:15)2dL/d(cid:15)[GeVs−1]10−310−1101103105(cid:15)[GeV]TotalNucInelBrem(pri)IC(pri)Sync(pri)Brem(sec)IC(sec)Sync(sec)Pos(sec)10−1100101ν[GHz]1013101510171019ν[GHz]This is a straightforward extension to the existing code, since
the main process responsible for producing neutrinos – nu-
clear inelastic collisions leading to charged pion production
– is already included via calculation of secondary electrons
and positrons. The limitation is rather that existing neu-
trino observatories are limited to very high energy neutri-
nos, where the point raised above applies, i.e., it is unclear
that one can assume pitch angle isotropisation for the CRs
that drive the observable neutrino emission. Extension to
neutrinos is therefore likely to wait until after the extension
to follow diﬀusion in pitch angle is complete.

Finally, we note that criptic is released under an open
source license. Users are encouraged to contribute their own
expansions, which can be incorporated into future releases.

DATA AVAILABILITY

available

Criptic is
from https://bitbucket.org/
krumholz/criptic/src/master/ under an open source
license. The setup ﬁles and analysis scripts required to
reproduce all the test problems described in this paper are
included in the repository. An introduction and users’ guide
is available at https://criptic.readthedocs.io/.

ACKNOWLEDGEMENTS

We thank I. Kafexhiu for assistance with cross section cal-
culations, and C. Federrath for assistance in developing
an interface for criptic to read flash simulations. Crip-
tic and its associated support software use the following
software packages: Astropy12 (Astropy Collaboration et al.
2013, 2018), Numpy (Harris et al. 2020), Matplotlib (Hunter
2007), GNU Scientiﬁc Library (Galassi et al. 2009), PCG
(O’Neill 2014). This research was undertaken with the assis-
tance of resources and services from the National Computa-
tional Infrastructure (NCI), award jh2, which is supported
by the Australian Government. This research was funded
by the Australian Research Council through its Discovery
Projects funding scheme, award DP190101258.

REFERENCES

Ambrosone A., Chianese M., Fiorillo D. F. G., Marinelli A., Miele

G., 2022, arXiv e-prints, p. arXiv:2203.03642

Armillotta L., Ostriker E. C., Jiang Y.-F., 2021, ApJ, 922, 11
Armillotta L., Ostriker E. C., Jiang Y.-F., 2022, ApJ, 929, 170
Asplund M., Grevesse N., Sauval A. J., Scott P., 2009, ARA&A,

47, 481

Astropy Collaboration et al., 2013, A&A, 558, A33
Astropy Collaboration et al., 2018, AJ, 156, 123
Beattie J. R., Krumholz M. R., Federrath C., Sampson M.,
Crocker R. M., 2022, arXiv e-prints, p. arXiv:2203.13952
Bisbas T. G., Papadopoulos P. P., Viti S., 2015, ApJ, 803, 37
Blumenthal G. R., Gould R. J., 1970, Reviews of Modern Physics,

42, 237

Chan T. K., Kereš D., Hopkins P. F., Quataert E., Su K. Y.,
Hayward C. C., Faucher-Giguère C. A., 2019, MNRAS, 488,
3716

12 http://www.astropy.org

MNRAS 000, 1–29 (2022)

CRIPTIC

27

Cherenkov Telescope Array Consortium et al., 2019, Science with
the Cherenkov Telescope Array. World Scientiﬁc Publishing:
Signapore, doi:10.1142/10986

Crocker R. M., Krumholz M. R., Thompson T. A., 2021a, MN-

RAS, 502, 1312

Crocker R. M., Krumholz M. R., Thompson T. A., 2021b, MN-

RAS, 503, 2651

Dirac P. A. M., 1930, Mathematical Proceedings of the Cambridge

Philosophical Society, 26, 361

Draine B. T., 2011, Physics of the Interstellar and Intergalactic

Medium. Princeton University Press: Princeton, NJ

Dullemond C. P., 2012, Astrophysics Source Code Library, p. 2015
Enßlin T. A., Pfrommer C., Springel V., Jubelgas M., 2007, A&A,

473, 41

Evoli C., Gaggero D., Vittino A., Di Bernardo G., Di Mauro M.,
Ligorini A., Ullio P., Grasso D., 2017, J. Cosmology Astropart.
Phys., 2017, 015

Fehlberg E., 1970, Computing, 6, 61
Galassi M., Davies J., Theiler J., Gough B., Jungman G., Alken
P., Booth M., Rossi F., 2009, GNU Scientiﬁc Library Refer-
ence Manual. 3rd ed. edn

García-Portugués E., 2022, Notes for Nonparametric Statistics.

https://bookdown.org/egarpor/NP-UC3M/

Gardiner C., 2009, Stochastic Methods: A Handbook for the Nat-

ural and Physical Sciences, 4 edn. Springer, Berlin

Ginsburg A., et al., 2016, A&A, 586, A50
Girichidis P., et al., 2016, ApJ, 816, L19
Girichidis P., Pfrommer C., Pakmor R., Springel V., 2022, MN-

RAS, 510, 3917

Gould R. J., 1972, Physica, 60, 145
Harris C. R., et al., 2020, Nature, 585, 357
Hopkins P. F., et al., 2020, MNRAS, 492, 3465
Hopkins P. F., Squire J., Butsky I. S., Ji S., 2021a, arXiv e-prints,

p. arXiv:2112.02153

Hopkins P. F., Chan T. K., Squire J., Quataert E., Ji S., Kereš

D., Faucher-Giguère C.-A., 2021b, MNRAS, 501, 3663

Hopkins P. F., Butsky I. S., Panopoulou G. V., Ji S., Quataert E.,
Faucher-Giguere C.-A., Keres D., 2022, MNRAS in review, p.
arXiv:2109.09762

Hunter J. D., 2007, Computing in Science & Engineering, 9, 90
Ivlev A. V., Silsbee K., Padovani M., Galli D., 2021, ApJ, 909,

107

Jones F. C., 1968, Physical Review, 167, 1159
Kafexhiu E., 2016, Phys. Rev. C, 94, 064603
Kafexhiu E., Aharonian F., Taylor A. M., Vila G. S., 2014, Phys.

Rev. D, 90, 123014

Kelner S. R., Aharonian F. A., Bugayov V. V., 2006, Phys.

Rev. D, 74, 034018

Kim Y.-K., Rudd M. E., 1994, Phys. Rev. A, 50, 3954
Kim Y.-K., Santos J. P., Parente F., 2000, Phys. Rev. A, 62,

052710

Kissmann R., 2014, Astroparticle Physics, 55, 37
Knudsen H., Brun-Nielsen L., Charlton M., Poulsen M. R., 1990,
Journal of Physics B Atomic Molecular Physics, 23, 3955
Kopp A., Büsching I., Strauss R. D., Potgieter M. S., 2012, Com-

puter Physics Communications, 183, 530

Krumholz M. R., Crocker R. M., Xu S., Lazarian A., Rosevear

M. T., Bedwell-Wilson J., 2020, MNRAS, 493, 2817

Lacki B. C., Thompson T. A., 2010, ApJ, 717, 196
Lacki B. C., Thompson T. A., Quataert E., 2010, ApJ, 717, 1
Mathis J. S., Mezger P. G., Panagia N., 1983, A&A, 128, 212
Merten L., Becker Tjus J., Fichtner H., Eichmann B., Sigl G.,

2017, J. Cosmology Astropart. Phys., 2017, 046

Mücke A., Rachen J. P., Engel R., Protheroe R. J., Stanev T.,

1999, Publ. Astron. Soc. Australia, 16, 160

Narayanan D., Krumholz M. R., 2017, MNRAS, 467, 50
Narayanan D., et al., 2021, ApJS, 252, 12
O’Neill M. E., 2014, Technical Report HMC-CS-2014-0905, PCG:

28 Krumholz, Crocker, & Sampson

A Family of Simple Fast Space-Eﬃcient Statistically Good
Algorithms for Random Number Generation. Harvey Mudd
College, Claremont, CA

Oka T., Geballe T. R., Goto M., Usuda T., Benjamin McCall J.,

Indriolo N., 2019, ApJ, 883, 54

Papadopoulos P. P., 2010, ApJ, 720, 226
Pattle R. E., 1959, Q.~J.~Mech.~App.~Math., 12, 407
Patwary M. M. A.,
et
arXiv:1607.08220

arXiv

2016,

al.,

e-prints, p.

Peretti E., Blasi P., Aharonian F., Morlino G., 2019, MNRAS,

487, 168

Peskin M. E., Schroeder D. V., 1995, An Introduction to Quantum

Field Theory. Addison-Wesley

Prantzos N., et al., 2011, Reviews of Modern Physics, 83, 1001
Roth M. A., Krumholz M. R., Crocker R. M., Celli S., 2021,

Nature, 597, 341

Rudd M. E., Kim Y. K., Madison D. H., Gay T. J., 1992, Reviews

of Modern Physics, 64, 441

Salem M., Bryan G. L., 2014, MNRAS, 437, 3312
Sampson M. L., Beattie J. R., Krumholz M. R., Crocker
R. M., Federrath C., Seta A., 2022, arXiv e-prints, p.
arXiv:2205.08174

Schultz D. R., Krstic P. S., Lee T. G., Raymond J. C., 2008, ApJ,

678, 950

Skilling J., 1975, MNRAS, 172, 557
Socrates A., Davis S. W., Ramirez-Ruiz E., 2008, ApJ, 687, 202
Strong A. W., Moskalenko I. V., 1998, ApJ, 509, 212
Strong A. W., Moskalenko I. V., Ptuskin V. S., 2007, Annual

Review of Nuclear and Particle Science, 57, 285
Tanaka K., Nagai M., Kamegai K., 2021, ApJ, 915, 79
Thompson T. A., Quataert E., Waxman E., Murray N., Martin

C. L., 2006, ApJ, 645, 186

Uhlig M., Pfrommer C., Sharma M., Nath B. B., Enßlin T. A.,

Springel V., 2012, MNRAS, 423, 2374

Werhahn M., Pfrommer C., Girichidis P., Winner G., 2021a, MN-

RAS, 505, 3295

Werhahn M., Pfrommer C., Girichidis P., 2021b, MNRAS, 508,

4072

Wibking B. D., Krumholz M. R., 2022, MNRAS in review, p.

arXiv:2105.04136

Wiener J., Pfrommer C., Oh S. P., 2017, MNRAS, 467, 906
Yang R.-z., Kafexhiu E., Aharonian F., 2018, A&A, 615, A108
Yoast-Hull T. M., Gallagher J. S. I., Zweibel E. G., Everett J. E.,

2014, ApJ, 780, 137

Yoast-Hull T. M., Gallagher J. S., Zweibel E. G., 2016, MNRAS,

457, L29

Zweibel E. G., 2017, Physics of Plasmas, 24, 055402

APPENDIX A: DETAILS OF THE TREE
ALGORITHM

Here we describe the algorithm we use to evaluate equa-
tion 74 to reconstruct integrals over the CR distribution
function and their gradients. For convenience, we rewrite
this equation here as

q =

(cid:88)

s,i

g(xsi)ΘsiΥsiwsi

(A1)

where q is one of the quantities – n, P , or U – on the left
hand side of equation 74, w is a corresponding quantity com-
puted from the properties of each CR packet – 1, vsipsi,
and Tsi, and g(xsi) = KH (x − xsi). We shall refer to the
quantities q appearing on the left hand as ﬁeld quantities,
and the quantities w appearing on the right hand side as
ﬁeld weights. Note that the contribution from each packet

is therefore the product of a purely geometric term g(xsi)
that depends only on packet position, a step indicator Θsi
that depends only on the relative rigidities of the packet for
which the ﬁeld quantity is being computed and the packets
contributing to it, and a term Υsiwsi that depends only on
other properties of the contributing packet. Our algorithm is
based on this decomposition. Further note that equation 76,
describing the gradients of ﬁeld quantities, can be written
in a completely analogous fashion, simply by changing the
geometric term to g(xsi) = −H−1
∇ (x − xsi) KH∆ (x − xsi).
We can therefore apply the same algorithm to gradients of
ﬁeld quantities, with only very minor modiﬁcations that we
discuss below.

Given this discussion, we ﬁrst describe how we construct
the kd-tree in Appendix A1, the algorithm we use to evaluate
equation 74 in non-distributed memory calculations in Ap-
pendix A2, and then the extension to the distributed mem-
ory case in Appendix A3.

A1 Building the kd-tree

We construct a balanced kd-tree by standard methods, and
assign each leaf a bandwidth tensor H as described in Sec-
tion 3.1. We then carry out an additional step: for each leaf L
in the tree, we compute qRn = (cid:80)
s,i∈L Θ(Rs,i − Rn)Υsiwsi
for a series of rigidities Rn uniformly spaced in logarithm
from the largest to the smallest packet rigidity present in
the volume. In words, this sum represents the total maxi-
mum possible contribution that the packets in the leaf could
make to a ﬁeld quantity q for a CR with rigidity Rn.

Once we have evaluated these sums for every leaf, we
recursively compute the corresponding sums for every other
node in the tree, by simply summing the results from that
node’s two children. In this way, for every node in the tree we
record the maximum possible contribution qRn that packets
contained in that node could make to the ﬁeld quantities of
packets with rigidities > Rn.

A2 Shared memory

We evaluate equation A1 for all packets in the tree by pro-
cessing one leaf at a time, using a separate OpenMP thread
for each leaf. For each CR packet in the leaf, we compute
its rigidity R and ﬁnd the corresponding rigidities Rn that
bracket it, i.e., we ﬁnd n such that Rn < R < Rn+1. The
algorithm we apply relies on the nodeList: a list of all the
non-leaf nodes of the tree we have examined so far, along
with, for each node a central estimate qnode and an error
enode for the contribution that packets contained in that
node make to the ﬁeld quantities. The central estimates and
errors have the property that the true contribution of the
packets in each tree node, deﬁned by equation A1 evaluated
for the packets within the node, lies strictly in the range
(qnode − enode, qnode + enode).

(1) Start the algorithm by adding the root node of the
tree to nodeList. For each CR packet in the leaf whose ﬁeld
quantities are being computed, evaluate the minimum and
maximum possible contributions qmin and qmax to the ﬁeld
quantities made by packets contained within the root node;
the minimum is simply given by qmin = min(g(x))qRn+1 ,
and the maximum by qmax = max(g(x))qRn , where here the

MNRAS 000, 1–29 (2022)

CRIPTIC

29

send an MPI request to all the ranks that contribute to
eext, and request that they evaluate their contribution to the
target packets; they do so using the same algorithm as given
in Section A2, but rather than starting from the root node
of the tree, they start from the roots of their own local trees,
i.e., evaluating only their own contributions. Once they have
computed these contributions with suﬃcient accuracy that
the total estimate will be below the tolerance, they send
these estimates back to the rank that made the request. This
rank then sums the contributions from all external ranks to
arrive at a ﬁnal estimate for the ﬁeld quantities.

This paper has been typeset from a TEX/LATEX ﬁle prepared by
the author.

minimum and maximum of g are evaluated over the bound-
ing box of the node. In words, we ﬁnd the minimum possible
contribution qmin by assuming that all the packets in the
node are at the location x that makes the geometric factor
g(x) as small as possible, and that the target packet is at
the largest possible rigidity, Rn+1; similarly, the maximum
possible contribution arises if all the packets in the node are
at the location where g(x) has its maximum, and the target
packet is at its smallest possible rigidity, Rn. We can then
take qnode = (qmin + qmax)/2 and enode = (qmax − qmin)/2.
We add these quantities to nodeList.

(2) Evaluate the sum of qnode and enode over all the
nodes in nodeList and all packets in the leaf we are pro-
cessing. Deﬁne the maximum possible relative error for each
packet in the leaf by RE = (cid:80) enode/((cid:80) qnode − (cid:80) enode),
where the maximum is over all packets; the true value of q
is guaranteed to diﬀer from (cid:80) qnode by at most a factor of
RE for the packet with the largest error. If RE is below a
user-speciﬁed tolerance for all packets in the leaf, terminate
iteration and set q = (cid:80) qnode.

(3) If the RE exceeds the tolerance for any packet in
the leaf, search through nodeList and ﬁnd the node that
makes the largest contribution to RE for the packet with
the largest total RE. We then “open” this node by removing
it from nodeList, and replacing it with its two children. If
those children are not leaves, we compute qnode and enode
for them exactly as for the root node in step 1. If they are
leaves, we compute qnode for them by evaluating the sum
in equation A1 directly for the packets those leaves contain,
and setting the corresponding error enode to zero.

(4) Go back to step 2, and repeat until RE is below the

tolerance for all packets.

When applying this algorithm to the gradients of ﬁeld
quantities, in nodeList we have not only estimates of ﬁeld
quantities qnode, but estimates of their gradients ∇qnode,
and the corresponding uncertainties enode and ∇enode. Since
∇q is a vector quantity, we deﬁne the relative error as
RE = | (cid:80) ∇enode|hmax/((cid:80) qnode − (cid:80) enode), where hmax is
the largest eigenvalue of the bandwidth tensor H.

A3 Distributed memory

As described in Section 3.5, in a distributed memory paral-
lel calculation, on each rank we have a tree, some of whose
nodes may have children that reside on a diﬀerent MPI rank.
It is therefore possible that, ﬁnding the node that makes
the largest contribution to the relative errors (step 3 in Sec-
tion A2), we will ﬁnd that node cannot be opened because its
children are only available on another MPI rank. If this oc-
curs, we remove the node from the node list and do not add
any children, but we record the MPI rank on which those
children live, and we keep track of the total central estimate
qext and uncertainty eext contributed by such “external”
nodes, and we deﬁne the relative error to include their con-
tributions: RE = ((cid:80) enode +eext)/((cid:80) qnode −(cid:80) enode −eext),
and similarly for gradients. We distinguish this from the “lo-
cal” relative error REloc = (cid:80) enode/((cid:80) qnode − (cid:80) enode).

If at any point while iterating, we reach a state where
REloc is below our target tolerance for all packets, but RE
exceeds our tolerance for at least some of them, we conclude
that we cannot complete those packets without access to the
information contained on other MPI ranks. We therefore

MNRAS 000, 1–29 (2022)

