Springer Nature 2021 LATEX template

2
2
0
2

r
a

M
4
1

]
I

A
.
s
c
[

1
v
6
4
1
8
0
.
3
0
2
2
:
v
i
X
r
a

The Design and Implementation of a Broadly Applicable
Algorithm for Optimizing Intra-Day Surgical Scheduling

Jin Xie1†, Teng Zhang2†, Jose Blanchet2, Peter Glynn2, Matthew Randolph5
and David Scheinker2,3,4*

1*Institute for Computational and Mathematical Engineering, Stanford University, Via
Ortega, Stanford, 94305, CA, USA.
2*Department of Management Science and Engineering, Stanford University, Via Ortega,
Stanford, 94305, CA, USA.
3*Clinical Excellence Research Center, Stanford University School of Medicine, Campus
Drive, Stanford, 94305, CA, USA.
4*Department of Pediatrics, Stanford University School of Medicine, Welch Rd, Palo Alto,
94304, CA, USA.
5*Lucile Packard Children’s Hospital, Stanford University, Welch Rd, Palo Alto, 94304,
CA, USA.

*Corresponding author(s). E-mail(s): dscheink@stanford.edu;
Contributing authors: jinnyxie@stanford.edu; tengz@stanford.edu;
jose.blanchet@stanford.edu; glynn@stanford.edu; mrandolph@stanfordchildrens.org;
†These authors contributed equally to this work.

Abstract

Surgical scheduling optimization is an active area of research. However, few algorithms to optimize
surgical scheduling are implemented and see sustained use. An algorithm is more likely to be imple-
mented, if it allows for surgeon autonomy, i.e., requires only limited scheduling centralization, and
functions in the limited technical infrastructure of widely used electronic medical records (EMRs). In
order for an algorithm to see sustained use it must be compatible with changes to hospital capacity,
patient volumes, and scheduling practices. To meet these objectives, we developed the BEDS (better
elective day of surgery) algorithm, a greedy heuristic for smoothing unit-speciﬁc surgical admissions
across days. We implemented BEDS in the EMR of a large pediatric academic medical center.
The use of BEDS was associated with a reduction in the variability in the number of admis-
sions. BEDS is freely available as a dashboard in Tableau, a commercial software used by
numerous hospitals. BEDS is readily implementable with the limited tools available to most
hospitals, does not require reductions to surgeon autonomy or centralized scheduling, and is
compatible with changes to hospital capacity or patient volumes. We present a general algo-
rithmic framework from which BEDS is derived based on a particular choice of objective and
constraints. We argue that algorithms generated by this framework retain many of the desirable
characteristics of BEDS while being compatible with a wide range of objectives and constraints.

Keywords: surgical scheduling, bed demand, management science, simulation

1

 
 
 
 
 
 
2

Article Title

Springer Nature 2021 LATEX template

1 Introduction

Aggregated annual expenditures on surgical ser-
vices in the United States, those including the
direct cost of surgery and post-surgical hospi-
talization, are estimated at close to $1 trillion.
This ﬁgure amounts to about a quarter of the
total health care costs in the U.S., which in
turn are nearly 50% higher on a per capita basis
than those of any other country [11]. The surgi-
cal environment is often the most expensive and
highly resourced in the hospital, with one esti-
mate putting the sum of direct costs, wages and
beneﬁts, and surgical supplies of one minute of
operating room time at $36 [5]. Delays in access
to recovery beds in the post anesthesia care unit,
the intensive care unit, or the acute care unit are
associated with adverse patient outcomes, surgi-
cal cancellations and delays, and higher spending.
Improvements to the eﬃciency of surgical ser-
vices and post-surgical recovery have the potential
to meaningfully impact United States healthcare
quality and expenditures.

At most US hospitals, the majority of surgi-
cal procedures are electively scheduled and oﬀer
an opportunity to smooth demand through bet-
ter scheduling (although procedure-urgency mix
varies across hospitals). For most US hospi-
tals, surgical scheduling is a largely decentral-
ized process in which each surgical service (e.g.
neurosurgery or orthopedic surgery) is assigned
“blocks” of operating room time (e.g., two rooms
7am-5pm every Monday and Wednesday). Each
block is then assigned to each surgeon in each ser-
vice, e.g., a particular surgeon may have a room
every Monday and Wednesday, or are used for the
entire service, e.g., a Wednesday room may be
reserved for urgent orthopedics procedures to be
performed by whichever surgeon is available. Elec-
tive procedures are scheduled when a surgeon sees
a patient in clinic and determines whether surgery
is necessary and how soon it should occur. The
clinic visit may be weeks to months in advance of
surgery. In most hospitals, only a minority of pro-
cedures are emergent, ideally initiated within an
hour of a patient’s arrival, or urgent, ideally per-
formed within 24-48 hours of a determination of
the need for surgery.

Hospital managers and schedulers face four
common challenges to optimizing operating room

and postoperative bed utilization. The ﬁrst is vari-
ation in scheduling lead times. Patients requiring
urgent or emergent procedures arrive randomly
and patients requiring elective procedures have
diﬀerent clinical needs and preferences for when to
have the procedure. In the United States, where
elective surgery is relatively proﬁtable, hospitals
face ﬁnancial pressure to accommodate patient
preferences. The second challenge is that surgical
services and individual surgeons enjoy signiﬁcant
autonomy, limiting the decision making power of
any central scheduler and creating challenges for
implementing centralized optimized scheduling.
Typically, each surgical service, e.g,. orthopedics,
is allocated operating room time in blocks that are
then assigned to individual surgeons within the
service. Each surgeon enjoys signiﬁcant discretion
in how to use their blocks, which allows them to
prioritize patients based on clinical acuity, accom-
modate patient preference, and attend to other
professional commitments. However, this ﬂexibil-
ity may also create perverse incentives that may
lead to ineﬃcient use of OR time. For example, if
a surgeon plans to attend a conference, she may
make informal arrangements to swap blocks with
other surgeons or, if she does not bare the costs
of low OR utilization, may leave her block unused
on the oﬀ chance she does not attend the confer-
ence. The third, closely related, challenge is that
surgeons and operating rooms are non-fungible
and subject to frequent changes in availability. A
large institution may have to deal with the res-
ignation or hiring of one or more surgeons per
month and at any given time one or more operat-
ing rooms may be closed for repairs or upgrades.
New surgeons bring their own patient mix and
may require access to diﬀerent resources and oper-
ating room blocks. Approaches to scheduling opti-
mization that incorporate surgeon-speciﬁc proﬁles
(e.g., average patient post-operative length of
stay) and operating room characteristics (e.g.,
only some operating rooms are suitable for cardiac
surgery) may require relatively frequent updat-
ing corresponding to such changes. The fourth
challenge is that most hospitals have limited tech-
nical infrastructure and expertise to implement or
update sophisticated scheduling algorithms. EPIC
and Cerner, the two largest US electronic medi-
cal record (EMR) vendors, account for over 65%
of patient beds in the US but oﬀer tools to oper-
ationalize only a few simple machine learning

Springer Nature 2021 LATEX template

Article Title

3

algorithms, no functionality to implement opti-
mization algorithms such as dynamic program-
ming, and limited or no functionality to automate
the import of optimized schedules generated exter-
nally. Eﬀorts to optimize scheduling often rely
on extracting data from the EMR, processing it
externally to generate optimal schedules, and a
manual process to modify the schedule to match
the one produced through optimization.

Two principled approaches to optimizing oper-
ating room and postoperative bed utilization are
to change the block schedule or to change how
surgeries are scheduled into a ﬁxed block schedule.
Each presents challenges associated with complex
constraints and changes to surgical demand and
hospital resources, and relatively few have been
implemented [14].

The

surgical block schedule

coordinates
the availability of numerous stakeholders and
resources and, in some institutions, may remain
largely unchanged for decades. There have been a
few successful examples of the use of operations
methodology, simulation and integer program-
ming, to redesign the block schedule of a major
hospital to reduce wait times for non-elective
cases and smooth the demand for postoperative
beds; see [17, 18]. These projects required detailed
models representing the hospitals at which the
work took place. They utilized analytical resources
beyond those available to the hospital. These stud-
ies document a number of signiﬁcant practical
barriers involved in changing block schedules and
the sustained leadership required to make the
appropriate changes in block scheduling; including
altering surgeon research and clinical schedules.
Non-stationarity in the surgical volumes add to
the practical considerations discussed in [17, 18]
with regard to the time required to implement
changes in blocks. Both works describe the diﬃ-
culty of evaluating the impact of the interventions
presented as a result of signiﬁcant variations in
surgical volume and changes in surgical case mix.
The policy described in [18] is updated every cou-
ple of years to account for the changes in volume
as well as the availability of surgeons, operating
rooms, and patient characteristics.

Coordinating surgical scheduling into a ﬁxed
block schedule faces similarly complex challenges.
Surgeons usually enjoy signiﬁcant independence in
scheduling cases into their assigned blocks. This
allows surgeons to prioritize patients based on

clinical urgency and diﬃculty. A surgeon may
decide that for some elective cases it is safe to
wait months while others should be completed
in days; a surgeon may prefer performing diﬃ-
cult cases early in the morning; or a patient may
require concurrent procedures from more than one
surgeon requiring that surgeon schedules be coor-
dinated. A few operations-based approaches to
surgical scheduling, using machine learning, opti-
mization, and simulation, have been developed
and deployed [7]. Signiﬁcant eﬀort is required to
generate detailed models that capture the idiosyn-
cratic constraints of the institutions where the
work is performed, develop specialized software
to deploy the scheduling algorithms, and secure
the cooperation of surgeons whose incentives may
not be fully aligned with the overall eﬃciency
of the system [7]. The work in [15] documents
how the combination of complex constraints and
non-stationary system characteristics led to the
suspension of the use of the algorithm designed
in [7]. In particular, the institution opened new
operating rooms, opened new recovery beds, and
repurposed existing operating rooms and recovery
beds far faster than the tool could be updated and
redeployed.

Institutions seeking to improve surgical block
allocation or optimize scheduling have to develop
models that incorporate their operational con-
straints, develop internal analytics expertise or
partner with an external vendor, and over-
come political and change-management barriers to
deployment. Furthermore, they must be able to do
so suﬃciently quickly to update or redesign the
models as their volumes or resources change. This
may explain why, among the few papers report-
ing an optimization model implemented at a single
institution, we found no publications documenting
the successful reproduction of the work at other
institutions.

1.1 Contribution

We develop the BEDS (Better Elective Day of
Surgery) algorithm, a simple heuristic for inter-
day surgical scheduling. We show that it has the
following desirable properties:

1. Compatible with a common surgical scheduling

workﬂow

2. Requires as input a minimal set of routinely

collected data

4

Article Title

Springer Nature 2021 LATEX template

3. Produces interpretable recommendations
4. Does not require signiﬁcant reductions to sur-

geon autonomy or centralized scheduling

5. Is compatible with changes to demand, capac-
ity, and operations such as surgeon vacations,
illness, or joining/leaving the hospital work-
force; long-term changes in surgical volumes;
the opening or closing of new operating rooms
and post-procedural beds; and the introduction
of intra-day scheduling optimization

6. The implementation of BEDS at an academic
medical center was associated with reduced
variability in the daily number of post-surgical
admissions

7. It is readily implementable in the limited tech-

nical capabilities of modern EMRs

8. A free version is available for use on Tableau
Server, a commercial software widely used by
hospitals in the US.

We also present the BEDS framework, of which
the BEDS algorithm is one application. We think
of the BEDS framework as a structured formalism
that can be use to guide the design of algorithms
that retain many of the desirable characteristics of
BEDS while being compatible with a wide range
of objectives and constraints. Algorithms derived
from the BEDS framework are readily imple-
mentable for surgical scheduling and may serve
as benchmarks for more sophisticated scheduling
algorithms.

The rest of the paper is organized as follows.
We provide a review of the literature on surgical
scheduling in Section 2. We discuss the technical
challenges involved in surgical scheduling under
non-stationary settings in Section 3. We describe
the BEDS algorithm in detail in Section 4. In
order to test and validate the BEDS algorithm and
inform our hospital’s decision to potentially adopt
BEDS, we constructed a discrete event simulation
model based on historical data, which is described
in Section 5. The validation results of the simula-
tion model are described in Section 6. The results
of implementation at the hospital are discussed in
Section 7. We present the general BEDS frame-
work in 8. Final considerations and conclusions are
given in Section 9. Technical details such as data
processing and data structure architectures for our
validation, testing and simulations are provided in
the appendix Section A.

2 Literature Review

Surgical scheduling has been an active research
area for decades [8, 13, 19]. Traditionally, the sur-
gical operating room (OR) scheduling problem has
been studied with operating room time as the sin-
gle resource to be allocated and a single objective
such as minimizing overtime, maximizing oper-
ating room utilization, and minimizing patient
wait time, etc. However, surgical patients do not
interact with the hospital only through the OR.
Patients require many resources including post-
operative units such as the post anaesthesia care
unit (PACU), intensive care unit (ICU), and acute
care unit or ward. Surgical planning with consid-
eration of downstream unit demand has attracted
signiﬁcant attention in recent years.

Two lines of research relate to our work in
designing surgical scheduling that consider post-
procedural units. One stream of work relies on
the idea of directly adding the post-procedural
unit capacity as constraints of the mathemat-
ical problem for OR-centered optimization, see
[16] for a comprehensive review of recent devel-
opments along this line of research. Another type
of work adopts the idea of using the performance
metrics of downstream units as the objective func-
tion of the surgical scheduling optimization. Our
work falls into the second category, for which we
provider a closer review of the literature.

We summarize the related literature together
with our work in Table 1 as a comparison. All
papers propose a solution to the problem of min-
imizing variability in the post-op units as the
objective by optimizing surgical schedules, and are
based on the surgical block system. We categorize
by two diﬀerent settings: master surgery schedule
(MaSS), in which the assignment of blocks to ser-
vices is optimized, and advance schedule (AdS),
in which scheduling procedures into ﬁxed blocks
is optimized. For each publication we show its
post-op unit considered, the modeling objective
and method, information needed to implement the
proposed method and whether the solution had
been implemented in a hospital at the time of
publication.

In the master surgery schedule (MaSS) liter-
[2] proposes using length of stay (LOS)
ature,
distributions to calculate the distribution of the
patient census given patient volume, then directly

Springer Nature 2021 LATEX template

Article Title

5

d
e
t
r
o
p
e
R

n
o
i
t
a
t
n
e
m
e
l
p
m

I

y
r
a
n
o
i
t
a
t
s
-
n
o
N

s
t
u
p
n
I

Y

Y

Y

e
m
u
l
o
v

t
n
e
i
t
a
p

d
e
t
c
e
p
x
e

e
m
u
l
o
v

t
n
e
i
t
a
p

d
e
t
c
e
p
x
e

e
m
u
l
o
v

t
n
e
i
t
a
p

d
e
t
c
e
p
x
e

e
m
u
l
o
v

t
n
e
i
t
a
p

d
e
t
c
e
p
x
e

,
g
n
i
p
u
o
r
g

e
n
i
l

e
c
i
v
r
e
s

e
m
u
l
o
v

t
n
e
i
t
a
p

d
e
t
c
e
p
x
e

e
m
u
l
o
v

t
n
e
i
t
a
p

d
e
t
c
e
p
x
e

,
n
o
i
t
c
n
u
f

t
s
o
c

n
o
i
t
a
z
i
l
i
t
u
R
O

e
m
u
l
o
v

s
e
s
a
c

y
c
n
e
g
r
e
m
e

,
n
o
i
t
u
b
i
r
t
s
i
d

e
r
u
d
e
c
o
r
p

,
n
o
i
t
c
n
u
f

t
s
o
c

t
n
e
i
t
a
p

y
t
i
l
i
b
a
l
i
a
v
a

s
d
e
b

p
o
-
t
s
o
p

y
t
i
l
i
b
a
l
i
a
v
a
m
o
o
r
R
O

,
n
o
i
t
u
b
i
r
t
s
i
d

e
r
u
d
e
c
o
r
p

t
s
i
l

t
i
a
w
t
n
e
i
t
a
p

P
I
M

g
n
i
l
e
d
o
M

d
o
h
t
e

M

P
I
M

e
v
i
t
c
e
j
b
O

)
e
c
n
a
i
r
a
v

s
u
s
n
e
c
(

n
i
m

P
I
M

)
e
g
r
a
h
c
s
i
d

-

n
o
i
s
s
i

m
d
a

d
e
t
c
e
p
x
e
(

n
i
m

g
n
i
e
u
e
u
Q

P
I
M

P
I
M

P
I
M

P
I
M

P
S
C
C

)
s
u
s
n
e
c

d
e
b

k
a
e
p

d
e
c
u
d
e
r
(

x
a
m

:
s
e
v
i
t
c
e
j
b
o

d
e
t
h
g
i
e
w
e
l
p
i
t
l
u
m

)
s
u
s
n
e
c

d
e
b

x
a
m

(

n
i
m

)
|
d
a
o
l

t
e
g
r
a
t

-

d
a
o
l

d
e
l
u
d
e
h
c
s
|
(

n
i
m

d
r
a

W

)
e
c
n
a
i
r
a
v

n
o
i
t
a
z
i
l
i
t
u

d
e
b
(

n
i
m

)
n
o
i
t
a
z
i
l
i
t
u

d
e
b

k
a
e
p
(

n
i
m

d
r
a

W

)
s
e
i
r
e
g
r
u
s

e
l
u
d
e
h
c
s

f
o

r
e
b
m
u
n
(

x
a
m

,
)
e
c
n
a
i
r
a
v

n
o
i
t
a
z
i
l
i
t
u

d
e
b
(

n
i
m

:
s
e
v
i
t
c
e
j
b
o

d
e
t
h
g
i
e
w
e
l
p
i
t
l
u
m

,
)
e
z
i
s

t
s
i
l

t
i
a
w
(

n
i
m

:
s
e
v
i
t
c
e
j
b
o

d
e
t
h
g
i
e
w
e
l
p
i
t
l
u
m

)
t
s
o
c

d
e
t
a
l
e
r
-
t
n
e
i
t
a
p
(

n
i
m

)
e
m

i
t
r
e
d
n
u
/
e
m

i
t
r
e
v
o
R
O
(

n
i
m

:
s
e
v
i
t
c
e
j
b
o

d
e
t
h
g
i
e
w
e
l
p
i
t
l
u
m

)
y
t
i
c
a
p
a
c
-
r
e
v
o
U
C
I
(

n
i
m

d
r
a

W

U
C

I

P
I

)
e
m

i
t

g
n
i
h
s
i
n
ﬁ
(

n
i
m

U
C
A
P

)
y
c
n
a
p
u
c
c
o
U
C
A
P
(

n
i
m

p
O
-
t
s
o
P

t
i
n
U

d
r
a

W

U
C

I

d
r
a

W

d
r
a

W

n
o
i
t
a
c
i
l
b
u
P

g
n
i
t
t
e
S

]
2
[

]
2
1
[

]
8
1
[

]
6
[

]
3
[

]
1
[

]
4
[

]
9
[

]
7
[

r
e
t
s
a
m

y
r
e
g
r
u
s

e
l
u
d
e
h
c
s

e
c
n
a
v
d
a

e
l
u
d
e
h
c
s

Y

c
i
t
s
i
r
u
e
h

)
e
c
n
a
i
r
a
v

n
o
i
s
s
i

m
d
a
(

n
i
m

,

U
C
I

d
r
a

W

S
D
E
B

.

n
a
e
m
e
h
t

r
o
f

t
s
a
c
e
r
o
f

t
n
i
o
p

a

n
a
e
m
e
w

,
”
d
e
t
c
e
p
x
e
“

y
B

.
s
r
e
p
a
p

d
e
t
a
l
e
r

f
o

n
o
s
i
r
a
p
m
o
C

1

e
l
b
a
T

6

Article Title

Springer Nature 2021 LATEX template

minimize the variance within a mixed integer pro-
gram. Based on this idea, follow up work instead
uses only certain statistics, such as the expected
census, other than the entire distribution. Objec-
tives such as the minimization of the peak census
are also considered in [3, 6, 12, 18].

In the AdS literature, [1] provides a queuing
theory-based method of estimating the optimal
daily number of admissions accommodating a
lower number of staﬀed beds during the weekends,
and then solving a mixed integer programming
(MIP) problem with the objective minimizing the
diﬀerence between scheduled load and target load.
A key assumption underlying this queuing theory
analysis is stationarity, which does not necessarily
hold in many applications. Other work, including
[4, 9], consider the stochasticity of LOS and sur-
gical duration, and add the post-op units perfor-
mance metric into the weighted objective function.
Via diﬀerent choices of institutional objectives and
constraints, [4] formulates the scheduling problem
as a two-stage MIP and [9] formulates the problem
as a chance-constrained stochastic program. Our
method, compared to these methods, is simple
enough that we do not need to solve any math-
ematical programming problem and thus easy
to implement and incorporate into the current
system that hospitals are deploying.

3 Scheduling Challenges in
Highly Connected and
Non-stationary
Environments

In order to motivate the scheduling heuristic that
we introduce in the next section, we describe
in this section the challenges that arise in ﬁnd-
ing a desirable scheduling policy from a practical
perspective.

In general, the resource management of an
operating room (OR) is a decentralized yet highly
inter-connected process. As a result, most exist-
ing works propose a centralized approach, which is
usually realized by a large mathematical program-
ming problem that incorporates all surgeon/ser-
vices and independent stakeholders in the system
(as in Table 1). When modeling a system with
multiple resources and stakeholders, like the hos-
pital or other medical institutions, researchers are

inclined to integrate as much information as pos-
sible so that the optimal solution produced by the
optimization model can achieve comparable per-
formance as in real-world systems. As we can see
in Table 1, to generate a good advance scheduling
policy, complicated mathematical optimization
problems are constructed with complex objective
functions and integrated constraints that require
signiﬁcant implementation eﬀorts. For example,
[18] reports the following challenge when imple-
menting a MIP (Mixed Integer Programming)-
based block scheduling optimizer at the Mas-
sachusetts General Hospital (MGH). The authors
found that some scheduled times produced by the
integer programming program were actually infea-
sible in the real-world system due to constraints
not initially incorporated by the model such as
surgeon unavailability due to academic, admin-
istrative or clinical reasons. As a result, several
rounds of iteration and negotiation with surgi-
cal leadership were required as part of 6-month
eﬀort to incorporate additional constraints into
the model or change surgeon schedules.

Hospitals routinely experience changes in their
surgical workforce, changes to the physical oper-
ating room space and changes to patient volume
and type. In [15, 17, 18], such changes, includ-
ing changes in volume and the opening of new
operating rooms, are described as part of the rea-
son why it was diﬃcult to evaluate the impact
of the interventions. At the same time, in mathe-
matical optimization, especially integer program-
ming models (which are the models adopted by
most works in Table 1), when the objective or
a constraint changes, the original solution may
no longer be optimal or feasible [18]. Maintaining
such models requires frequent updates when, for
example, a new surgeon is hired, a new building/u-
nit is opened, the number of operating or recovery
rooms changes, a surgeon’s schedule changes, a
surgeon’s block or clinic schedule changes, etc.
If updating the algorithm and the tool through
which it is deployed requires signiﬁcant eﬀort, it
may fall out of use as was the case in [7].

As reported in [18], a more serious problem
arises when there is no feasible solution of the
mathematical program after new constraints are
introduced. In this case, the researchers have to
make signiﬁcant eﬀorts based on institutional-
speciﬁc needs to deal with the trade-oﬀ between

Springer Nature 2021 LATEX template

Article Title

7

optimizing the institutional goal and mathemat-
ical soundness of the algorithm. Compared to
robust optimization methods applied in surgical
scheduling problems as in [10], the approach we
propose in the next section is easier to implement
at the hospital, since it does not require a ﬁxed
time horizon for an oﬄine optimization problem or
batch scheduling of the the patients in implemen-
tation. The method we propose is an online heuris-
tic that is applied each time a patient is scheduled.
Meanwhile, as pointed out in [10], robust opti-
mization methods can be over-conservative in
its application to surgical scheduling problems,
which might lead to signiﬁcant surgical delays in
practice.

4 BEDS Algorithm

We propose the BEDS (Better Elective Day of
Surgery) algorithm 1. At the institution stud-
ied, the objective was to minimize the maximum
total number of daily admissions while minimiz-
ing patient wait time for surgery. We designed
BEDS to embed in a common surgical scheduling
workﬂow. A surgeon examines a patient in clinic,
recommends a type of surgery, and estimates how
soon it should be performed. The patient then
works with a scheduler to choose a day of surgery.
BEDS performs a greedy-search among the fea-
sible surgical days to minimize current post-op
admissions and patient wait time. The only data
required are: clinically acceptable wait time for the
procedure, surgeon availability, patient availabil-
ity, estimated procedure duration, and occupancy
data for the post-operative unit.

Only a small set of input data are required for

implementation (Tables 2, 3, and 4).

Note that the greedy recommendation step
of the algorithm is modular; the logic may be
modiﬁed without perturbing the remainder of the
algorithm. In the general BEDS framework the
recommendation is modiﬁable based on the objec-
tives or constraints of the institution or surgeon
where it is to be deployed. For example, how much
patient preferences shape the process may be mod-
iﬁed by the institution by having the algorithm
return the n top-ranked days to be oﬀered to the
patient to choose from.

Many US hospitals use tableau (While speciﬁc
numbers were not available, Tableau advertises
that all of the top 20 US News & World Report

ranked hospitals do). We have created a tableau
workbook, available on Github (https://github.
com/tengz-sudo/BEDS Tableau), for other hos-
pitals to deploy BEDS on their tableau server.
Below, as shown in Figure 1, is an example of
the user interface when the recommendation is
set to present all feasible days color-coded by the
number of admissions. When a patient comes to
the clinic, the scheduler uses BEDS to choose the
patient’s primary surgeon, target post-procedure
unit, and to ﬁlter out days on which the sur-
geon lack suﬃcient time for the case. The diﬀerent
colors on the heat map represent the number
of patients already scheduled to be admitted to
the target unit on the same day (green - fewest
patients). The scheduler can then work with the
patient to ﬁnd a suitable “green” day. A diﬀer-
ent choice of objective and ranking would require
only a modiﬁcation to the deﬁnition of the color
coding.

Algorithm 1 BEDS
For each day d in the scheduling horizon D,
require:

1. For each surgeon j, their number of available

hours hd,j.

2. For each post-op unit u, the number of patients

nd,u scheduled to be admitted.

for patient i being scheduled for a procedure do

Determine that:

1. Surgeon j that will perform the proce-

dure.

2. Scheduled procedure duration, gi.
3. Clinical and institutional window of
availability for the procedure, [Li, Ri].
4. Patient’s window of availability for the
procedure, [li, ri].
5. The unit ui to which the patient will
be admitted after the procedure.

Based on the above:

1. The candidate dates Di are those within
the windows of availability on which the
surgeon has suﬃcient time, i.e., hd,j ≥ gi.
2. Greedy recommendation Of the days
d ∈ Di that achieves the minimal nd,u,
return the earliest.
3. Update hdi,j, ndi,u, and hd.

end

8

Article Title

Springer Nature 2021 LATEX template

Column
Date
Surgeon ID
Available Hours

Value
2015-02-08
1
5.5

Table 2 The header of the surgeon hour data.

Column
Date
Unit
Number of Scheduled Patients

Value
2015-02-08
PCUs
3

Table 3 The header of the unit occupancy data.

Value
Column
Primary CSN
1
Primary Surgeon ID 1
Available Window
Surgery Duration
Post-op Unit

[2015-02-01, 2015-02-07]
2.5
PCUs

Table 4 The header of the patient availability data. The
column ’Primary CSN’ is a unique ID for each patient
visit to the hospital.

In the use case at our institution, BEDS was
designed to help schedulers avoid inadvertently
selecting a day for which many patients requir-
ing admission to the same unit have already been
scheduled. As an example, we show real histori-
cal data for patients scheduled in March and June
of 2019 for procedures after which they required
admission to the pediatric intensive care unit
(PICU) (Table 5). Each was scheduled for a date
for which six surgical admissions had already been
scheduled for the PICU, despite the surgeon hav-
ing availability on days with signiﬁcantly fewer
scheduled cases (Figure 4 left). Predictably, on the
days the patients were admitted the total number
of admissions to the pediatric ICU was signiﬁ-
cantly higher than on other days when the surgeon
was available (Figure 4 left).

5 Simulation Model

In order to build an overall evaluation tool to ana-
lyze the impact of diﬀerent scheduling policies on
the patient ﬂow, we build a discrete event simu-
lation (DES) model. The simulation model allows
us to combine diﬀerent data resources like the
midnight census data, procedure data, and staﬀ

availability data, etc. It generates a discrete event
queue representing the patient ﬂow under speciﬁc
scheduling logistic. Each event in the queue is a
representation of the admission, transfer between
units, or discharge of a patient who visits the hos-
pital (summarized in Table 7). For the scope of
units in the simulation, our model focuses on pedi-
atric areas (acute care and ICU areas). In this
section, we elaborate on the high-level design and
mechanism of our discrete event simulation model
(summerized in Figure 2) with more details given
in Section A.1.

To use the simulation model, it is required that
the user provides the midnight census data as well
as the procedure record data of their medical insti-
tution as inputs. The midnight census data are
records of all the patients staying in the hospital
overnight with an assigned bed at midnight. The
procedure record data are records of every surgery
that happen at the hospital (This includes the
time, duration, type, who performed the surgery
and in which operating room), see Section A.1.1.
The user has an option of either providing surgeon
availability data or choosing a built-in function
that generates surgeon availability from the data
procedure record. We summarize the inputs of the
model in Table 2, 3 and 4.

The major steps of simulation is summarized

as follows:
• Step 1: Feed the input data midnight cen-
sus, procedure record and surgeon availability (if
applicable) to the pre-processor and generate
the data patient proﬁle and surgeon availability
(if not provided). Each row of the data patient
proﬁle summarizes the trajectory of one patient
visit in the hospital, see Table 17 in Section
A.1.1.

• Step 2: Use the patient proﬁle and surgeon
availability data to generate the discrete event
queue under the scheduling logic encoded in the
Scheduler.

• Step 3: Output the simulated event series and
generate the simulated hospital record data for
further data analysis.

6 Simulation Results

In this section, we present the results of simulat-
ing the patient ﬂow at the Lucile Packard Stanford
Children’s Hospital (LPCH) from January 2019 to

Springer Nature 2021 LATEX template

Article Title

9

Fig. 1 In this ﬁgure, we show a calendar heatmap in Tableau, which is our user interface of the scheduling tool. The heat
map is a simple, color coded calendar. Using the heatmap as a guide, schedulers will select a few days that have a low
number of surgery admissions to propose to the patient. The schedulers will then contact the patient to conﬁrm a date of
surgery. The main function of BEDS is the heatmap to visualize the best and worst days to schedule patients for surgery
based on the number of currently scheduled surgical patients with the same in-hospital postoperative recovery destination.
The color of the block of a speciﬁc day represents the number of surgical admits already scheduled for that day. The color
code of the number of surgical admits is at the bottom right. In each block of a speciﬁc day, the date is marked on the block
in white and the number of remaining hours a surgeon has for that day is marked in black.

Primary CSN Surgery Request Date
1
2

2019-03-11
2019-06-28

Surgery Date Assumed Available Window of Patient
[2019-03-12, 2019-04-12]
2019-03-27
[2019-06-29, 2019-07-22]
2019-07-10

Table 5 Examples for the Scheduling Heuristic.

Required
Data Inputs
Yes
midnight census
procedure record
Yes
surgeon availability No

Table 6 Data inputs for the simulation model.

March 2021 using the simulation model described
in Section 5. We model the outcome of implement-
ing BEDS at the hospital with two experiments,
as described in Table 8. In both experiments,
we apply BEDS to schedule all elective surgical
patients to be admitted to the pediatric intensive
care units (PICUs) or acute care units (PCUs).
We include all the patient records with arrival
times from 2018-01-01 to 2018-12-31 as a one-
year warm-up period for the simulation system
since the occupancy of patients admitted dur-
ing the warm-up period can aﬀect the scheduling
of the patients admitted afterwards. We include
the warm-up period in the simulation system in
order to obtain a valid initialization of the sys-
tem. Otherwise, those patients who are already
scheduled for surgery in the real hospital system

would not be captured in the simulation system.
For data pre-processing, we exclude patients and
records with important missing information as
described in Section A.1.1. As a result, 99.8% of
the total 334274 records in the midnight census
data are included and none of the total 5558 sur-
gical patients to be admitted to PICUs or PCUs
in the record during the period of simulation is
excluded in data pre-processing.

In the ﬁrst experiment, the scheduler of the
simulation model is set to the ‘BEDS’ mode on
2020-07-27, as in the real world implementation.
Before that, the scheduler assigns patients to their
original scheduled time in the hospital record. This
experiment tests whether our simulation model
reproduces historical hospital data and models the
outcome of scheduling policies.

We compare the daily elective surgical admis-
sions into PICUs and PCUs in historical and
simulated data in Figure 4 and Figure 5. As a
result, we conclude that the simulation model is
capable of reproducing historical data in the hos-
pital record during 2019.1.1 to 2020.7.26 before

10

Article Title

Springer Nature 2021 LATEX template

Fig. 2 In this ﬁgure, we show two example patients for whom the BEDS scheduling heuristic can be helpful for scheduling
his/her admission to a day with less scheduled admissions in the patient’s available window. Each patient was scheduled for
a date on which six surgical admissions had already been scheduled for the PICU, despite the surgeon having availability
on days with signiﬁcantly fewer scheduled cases (as in (a) and (c)). The ﬁrst patient requested a schedule for his admission
to the hospital on 2019-03-11 and was scheduled to a day (2019-03-27) on which six surgical patients have already been
scheduled to be admitted. The second patient requested a schedule for his admission to the hospital on 2019-06-28 and
was scheduled to a day (2019-07-10) on which six surgical admissions have already been scheduled. For the both of them,
there are days within their available window, as the days marked on the x-axis, when their surgeons are available, as the
orange bar indicates, and there are less than six surgical admissions scheduled. Predictably, on the days the patients were
admitted, the total number of admissions to the pediatric ICU was signiﬁcantly higher than on other days when the surgeon
was available (as in (b) and (d)).

Event Name

Meaning

Next Event

TRANSFER IN

ARRIVAL

elective surgical patient request schedule
/outpatient visit
patient transfer into some unit

TRANSFER IN
READY TO TRANSFER patient ready to transfer out from some unit TRANSFER IN
patient discharge from the hospital
DISCHARGE

READY TO TRANSFER

Table 7 Events considered in the simulation. The simulator generates the next event based on the current event type
and follows historical data or a random time generator bounded in given time interval.

the BEDS implementation. And during the period
of 2020.7.27 to 2021.3.31, after the BEDS imple-
mentation, there are discrepancies between the
actual data in the hospital record and simu-
lated data. The simulation environment may be

optimistic when estimating the real-world perfor-
mance of BEDS. In real-world deployment, the
actual performance could be less signiﬁcant than
the simulated one due to implementation details
like human execution errors of hospital schedulers
executing the scheduling logic, deviations from the

(a)(b)(c)(d)Springer Nature 2021 LATEX template

Article Title

11

Fig. 3 In this ﬁgure, we show the discrete event simulation (DES) model outline. As in the three modules on the left, we
ﬁrst collect the procedure data, the census data, and the surgeon availability data (if applicable) and feed all of them into
the data pre-processor. Then the data pre-processor combines all the diﬀerent data resources and reorganize them to two
data frames: the patients data and the surgeon availability data. Then, the data frames are fed to a scheduler module and
a priority queue is generated by a processor module as in the box in the middle. In the end, an event writer records the
information of the event queue in the simulated data as the output of the model.

2020-07-27
2019-01-01

Experiment BEDS Start Date BEDS Units
1
2

PICUs and PCUs
PICUs and PCUs
Table 8 Experiment setups in the simulation model for
demonstrating the outcome of the implementation of
BEDS. In each experiment, elective surgical patients to be
admitted to one of the location in ’BEDS Units’ are
scheduled by the BEDS algorithm after the ’BEDS Start
Date’.

assumptions on patient available windows and sur-
geon availability (as explained in detail in Section
A.1.2), and missing data in the hospital records.
The distribution of the diﬀerence between the sim-
ulated scheduled time and original time in record
is in Figure 6.

In the second experiment, we simulate the
potential outcome of
implementing BEDS at
LPCH at the beginning of 2019. The result was
presented to the administrative team of LPCH
and they decided to adopt BEDS as their schedul-
ing policy after reviewing the simulated outcome.
According to the simulation results summarized
in Table 9, the implementation of BEDS in 2019
could have reduced the coeﬃcient of variation
(the standard deviation divided by the mean) of
the daily elective surgical admission by 35.2%
in PICUs and by 26.0% in PCUs in that year.
The hospital had a surgical level loading goal of
decreasing the percentage of the days with less
than two or more than ﬁve daily elective surgical
admissions in PICUs. According to the simulation
results, if BEDS had been implemented in 2019,
the total number of days with less than two or

more than ﬁve daily elective surgical admissions
in PICUs would have been reduced from 120 to 77
in 2019.

PICUs
Mean
CoV
90% Quantile/Median
PCUs
Mean
CoV
90% Quantile/Median

Historical BEDS Simulated
1.946
2.034
0.488
0.754
2.0
1.5
Historical BEDS Simulated
3.893
3.916
0.427
0.577
1.5
1.75
Table 9 Comparison of the historical data and simulated
results with BEDS implemented in 2019 for daily elective
surgical admissions in PICUs and PCUs.

7 Implementation in Hospital

The BEDS algorithm was incorporated into the
scheduling system of the Stanford children’s hospi-
tal on 2020-07-27 for all elective surgical patients
that were known, at the time of scheduling, to be
cases that would require further admission to the
pediatric intensive care units (PICUs) or acute
care units (PCUs).

The implementation of BEDS required buy-in
from various stakeholders throughout the health
system. A team of surgeons, schedulers, informa-
tion services representatives, and peri-operative
leadership ﬁnalized a design for the tool that did
not require a signiﬁcant change to the existing
surgery scheduling process. BEDS was built over

12

Article Title

Springer Nature 2021 LATEX template

Fig. 4 Comparison of the number of daily elective surgical patient admissions into PICUs in actual and simulated data in
2019.1 - 2021.3. The actual historical data is as the blue line and the simulated data is as the orange line. Before the BEDS
implementation on 2020.7.27, the simulated patient ﬂow reproduces the actual historical data.

a six-month period directly in EPIC, Stanford’s
electronic medical record system.

When a patient is identiﬁed by the surgeon as
needing surgery in clinic, the surgeon will contact
their scheduler with details about the procedure,
urgency of the case, and expected postoperative
recovery unit. The scheduler will open the sur-
gical scheduling ﬂowsheet in EPIC and begin to
ﬁll in the necessary information from the surgeon.
Schedulers will input the postoperative unit and
a possible future date for surgery in the schedul-
ing ﬂowsheet. This will automatically populate a
calendar heatmap in EPIC that will show dates
two weeks prior to the reference date and a month
post the reference date. Using the heatmap as a
guide, schedulers will select a few days that have
a low number of surgery admissions to propose to
the patient. The schedulers will then contact the
patient to conﬁrm a date of surgery.

The main function of BEDS is the heatmap
to visualize the best and worst days to sched-
ule patients for surgery based on the number
of currently scheduled surgical patients with the
same in-hospital postoperative recovery destina-
tion. The BEDS heatmap also works for schedul-
ing outpatient surgeries, cases that do not require
a hospital bed post-operation. BEDS is used by

all surgical services, with the exception of Cardi-
ology, to schedule elective surgical cases. Design of
the functionality and features of BEDS required
input from stakeholders throughout the patient
journey, especially the end users (i.e. the surgery
schedulers). Challenges with leveling the number
of hospital beds needed for surgery patients were
handled by the operating room teams on the day
of surgery. With BEDS giving visibility to future
hospital bed needs, level loading challenges are
now solved at the time of scheduling the surgical
case. BEDS has been designed so the ranges for
the colors within the heatmap can be changed if
adjustments need to be made as surgical volumes
grow.

To demonstrate the impact of implementing
BEDS at the Stanford Children’s Hospital, we
present a comparison between the period of 2020-8
to 2021-3 after BEDS and the same months in the
previous year (2019-8 to 2020-3) before BEDS in
Table 10, 11 and Figure 9. We compare the same
months during the year to accommodate seasonal-
ity issues. We compare the histogram, the mean,
the coeﬃcient of variation, the median, the 90%
quantile, and the 90% quantile - median ratio of
the number of daily elective surgical admissions in
PICUs and PCUs before and after BEDS.

Springer Nature 2021 LATEX template

Article Title

13

Fig. 5 Comparison of the histogram of the number of daily elective surgical patient admissions into PICUs in historical
and simulated data in 2019.1 - 2021.3. We show the histogram of three diﬀerent periods: 2019.1.1 - 2019.12.31 (a), 2020.1.1 -
2020.7.26 (b) before BEDS implementation, and 2020.07.27 - 2021.3.31 (c) after BEDS implementation. The actual historical
data is as the blue bars and the simulated data is as the orange bars.

Fig. 6 Diﬀerence (by days) between rescheduled time and original time in record for patients rescheduled in the simulation
model in PICUs during 2020.7.27 - 2021.3.31 after BEDS implementation.

We notice that the volume of the patient ﬂow
at the Stanford Children’s Hospital has been ﬂuc-
tuating in 2020 due to the outbreak of COVID-19
and other changes at the hospital, as reﬂected
in Figure 10. Hence, to compare diﬀerent peri-
ods before and after BEDS, we focus on a metric
that is not proportional to the volume of the
patient ﬂow: the 90% quantile to median ratio of
the daily elective surgical admission (QMRA). As
in Table 10, the QMRA in PICUs dropped from
2.0 (2019.8-12) to 1.5 (2020.8-12) and from 3.0

(2020.1-3) to 2.0 (2021.1-3) after BEDS implemen-
tation. In PCUs, the QMRA changed from 1.500
(2019.8-12) to 2.333 (2020.8-12) and dropped from
2.333 (2020.1-3) to 2.000 (2021.1-3) after BEDS
implementation. As the result shows, it took a
warm-up period in PCUs for BEDS to start to
take eﬀect.

The daily admissions of elective surgical
patients on diﬀerent weekdays follow diﬀerent pat-
terns due to the arrangement of the block schedule
of the surgeons, as described in Section 1. Hence,

(a)(b)(c)14

Article Title

Springer Nature 2021 LATEX template

Fig. 7 Comparison of the number of daily elective surgical admission in historical data (blue line) and simulated data with
BEDS (orange line) in 2019 in PICUs (a) and PCUs (b).

Fig. 8 Comparison of the histogram of daily elective surgical admission in historical data (blue bar) and simulated data
with BEDS (orange bar) in 2019 in PICUs (a) and PCUs (b).

we partition the weekdays into ﬁve groups and
compare the QMRA in each group before (2019.8
- 2020.3) and after (2020.8 - 2021.3) BEDS as
in Table 12 and Table 13. Within the two peri-
ods that we are comparing, there are in total
n = 34 weeks. As a result, in PICUs, the QMRA
dropped on Mondays, Tuesdays, and Thursdays,
which are the three weekdays with the highest
ratios before BEDS. And no weekday has a QMRA
higher than 2.0 after BEDS. Similarly, in PCUs,
the QMRA dropped on Mondays, Tuesdays and
Wednesdays, which are the three weekdays with
the highest ratios before BEDS. We propose a one-
sided hypothesis test for the size of the change of

the QMRA after BEDS. For the distribution of the
test statistics, we estimate it by non-parametric
bootstrapping with m = 100, 000 samples. The
results are summarized in Table 12 and Table 13.
For PICUs, the null hypothesis is that the change
of the QMRA in the post-BEDS period (2020.8.1
- 2021.3.31) compared with the same time dur-
ing the previous year before BEDS (2019.8.1 -
2020.3.31) is less than 0.25. For PICUs, the p-
value of the hypothesis test is 0.0778 on Thursdays
and 0.0807 on Mondays. This means that there
is signiﬁcant evidence that we can safely reject
the null hypothesis . Therefore there is evidence
that there is a signiﬁcant improvement of the

(a)(b)(a)(b)Springer Nature 2021 LATEX template

Article Title

15

Periods
BEDS
Mean
CoV
Median
90% Quantile
90% Quantile - Median Ratio

2019.8-12
before
2.018
0.744
2.0
4.0
2.0

2020.8-12
after
1.569
0.693
2.0
3.0
1.5

2020.1-3
before
1.375
0.828
1.0
3.0
3.0

2021.1-3
after
1.594
0.681
1.5
3.0
2.0

Table 10 Comparison of the number of daily elective surgical admissions to PICUs between periods during the same
time of year before and after the implementation of BEDS.

Periods
BEDS
Mean
CoV
Median
90% Quantile
90% Quantile - Median Ratio

2019.8-12
before
3.688
0.538
4.0
6.0
1.500

2020.8-12
after
3.532
0.623
3.0
7.0
2.333

2020.1-3
before
3.415
0.695
3.0
7.0
2.333

2021.1-3
after
4.688
0.478
4.0
8.0
2.000

Table 11 Comparison of the number of daily elective surgical admissions to PCUs between periods during the same time
of year before and after the implementation of BEDS.

QMRA corresponding to a drop more than 25%
on Thursdays and Mondays after BEDS. For the
other weekdays, there is no evidence of a sig-
niﬁcant change of the QMRA. Overall, noticing
that Thursdays and Mondays are the two week-
days with the highest QMRA before BEDS, BEDS
improved the patient ﬂow on the two most con-
jested weekdays in PICUs. For PCUs, the null
hypothesis is that the change of the QMRA in
the post-BEDS period (2020.8.1 - 2021.3.31) com-
pared with the same time during the previous
year before BEDS (2019.8.1 - 2020.3.31) is less
than 0.1. For PCUs, the p-value of the hypothesis
test is 0.342 on Tuesdays and 0.410 on Mondays.
Hence there is no evidence of a signiﬁcant change
of the QMRA after BEDS in PCUs. In conclusion,
based on these results, overall, BEDS improves the
performance on these metrics.

8 BEDS Framework

The BEDS algorithm can be seen as one particular
instance of a general BEDS framework 2 designed
to produce algorithms with several desirable prop-
erties. The most important such property is that
any algorithm generated by the BEDS frame-
work is compatible with a very common surgical
scheduling workﬂow: a surgeon examines a patient

in clinic, recommends a type of surgery, and esti-
mates how soon it should be performed. The
patient then works with a scheduler to choose a
day of surgery. Based on the constraints and objec-
tives of the institution, the BEDS framework can
be used to produce an algorithm to help the sched-
uler choose which dates to oﬀer the patient. The
only data required are the same as those for the
BEDS algorithm (clinically acceptable wait time
for the procedure, surgeon availability, patient
availability, estimated procedure duration, and
occupancy data for the post-operative unit), but
additional data may be used for more sophis-
ticated scheduling. We provide pseudo-code to
explain the BEDS framework.

The ranking algorithm chosen for the modiﬁ-
able step may be fully-interpretable or based on a
sophisticated optimization model. In either case,
the results may be used to generate a simple, color
coded calendar such as Figure 4. The amount of
choice patients have in scheduling their procedure
may be altered by modifying the parameter n and
oﬀering each patient a choice amongst the top
n-ranked days.

9 Discussion and Conclusions

We developed and deployed BEDS (better elective
day of surgery) a ﬂexible, interpretable algorithm

16

Article Title

Springer Nature 2021 LATEX template

90% Quantile to Median Ratio/Weekday Monday Tuesday Wednesday Thursday Friday
2019.8 - 2020.3
2020.8 - 2021.3
Direction of Change
p-value (Size of Change ≤ 0.25)

1.500
3.000
2.000
2.000
+
-
0.415
0.0807
Table 12 Comparison of the 90% quantile - mean ratio of the number of daily elective surgical admissions to PICUs
between periods during the same time of year before and after the implementation of BEDS.

3.700
1.500
-
0.0778

2.700
2.000
-
0.385

1.667
2.000
+
0.504

90% Quantile to Median Ratio/Weekday Monday Tuesday Wednesday Thursday Friday
2019.8 - 2020.3
2020.8 - 2021.3
Direction of Change
p-value (Size of Change ≤ 0.1)

1.429
2.233
1.667
2.000
+
-
0.708
0.410
Table 13 Comparison of the 90% quantile - mean ratio of the number of daily elective surgical admissions to PCUs
between periods during the same time of year before and after the implementation of BEDS.

1.750
1.925
+
0.710

1.914
1.711
-
0.547

2.000
1.400
-
0.342

9.1 Acknowledgments

We thank numerous members of the hospital
leadership for their partnership in implementing
BEDS. In particular, Dr. Rebecca Claure, Dr.
James Dunn, Patrick Kane, Ryan Bruvold, and
Derek Garnholz.

Declarations

The authors report no conﬂicts or external fund-
ing.

to assist in the selection of the day for which
a surgical procedure is to be scheduled. When
deployed at an academic medical center, the use
of BEDS over an 8 month period reduced vari-
ation in the number of daily elective surgical
admissions compared to the same 8 months in ear-
lier years. We showed that BEDS relies on very
few, commonly collected data points, oﬀers fully
interpretable recommendations, and is compati-
ble with implementation in the very technically
limited functionality commonly available in large
EMRs. We then introduced the BEDS frame-
work, a general algorithmic framework of which
BEDS is one application. The algorithms gener-
ated by the BEDS framework may retain many of
the desirable characteristics of BEDS while being
compatible with a wide range of objectives and
constraints.

The evaluation of the deployment of BEDS
should be interpreted in light of a signiﬁcant
limitation. The disruption caused by COVID-19
changed healthcare provision, especially elective
surgical care, in numerous ways for which we could
not control.

The BEDS algorithm is ready and available
for use by other institutions and freely available
for download as a Tableau workbook. The BEDS
framework may be useful for institutions seeking
to design a readily implementable approach to
improving scheduling or as a performance bench-
mark for researchers developing more sophisti-
cated scheduling algorithms.

Springer Nature 2021 LATEX template

Article Title

17

Algorithm 2 Algorithmic Framework: BEDS
For each day d in the scheduling horizon D,
require:

1. For each surgeon j, their number of available

hours hd,j.

2. For each post-op unit u, the number of patients

nd,u scheduled to be admitted.

3. Optional Additional characteristics of the

institution hd.

for patient i being scheduled for a procedure do

Determine that:

1. Maximum acceptable wait time for the
procedure.
2. Surgeon j that will perform the proce-
dure.
3. Scheduled procedure duration, gi.
4. Patient’s availability window for
procedure, [li, ri].
5. Unit ui to which the patient will be
admitted after the procedure.
6. Optional Additional patient characteris-
tics pi.

Based on the above:

1. The candidate dates Di are those within
the maximum acceptable wait time on which
the surgeon has suﬃcient time, i.e., hd,j ≥
gi.
2. (Modiﬁable ranking) Rank the days in
d ∈ Di based on an objective function and
constraints based on j, hd,j, gi, pi, and
[li, ri].
3. Return the n top-ranked candidate dates.
4. Update hdi,j, ndi,u, and hd.

end

Appendix A

As a background of the variability of the volume of
the demand at the hospital during diﬀerent peri-
ods we are comparing in Section 7, we present
statistics of the daily elective surgical patient
arrivals in PICUs as well as the lead time in each
month during 2019.1 - 2021.3 in Figure 11. As
in Figure 12, we calculate the auto-correlation of
the daily elective surgical admissions in PICUs on
weekdays and ﬁnd that the auto-correlation peaks
regularly for the lags of 5, 10 and 15 days, etc.
This phenomenon can be explained by the weekly
surgeon OR time block described in Section 1.

A.1 More on the simulation model

In this section, we will explain more details of the
simulation model.

A.1.1 Data inputs and pre-processing

Below, we show the headers of the data midnight
census, procedure record, and surgeon availability
in Table 14, 15 and 16 as examples of the inputs.
In addition, we point out in the column ’Required’
if each column in the headers is a required input
for using the discrete event simulation model. The
unrequired columns can be useful for either model
validation or follow-up analysis of the results and
are recommended during data collection. The col-
umn ’Primary CSN’ is an encoded patient-visit
ID. Each patient has a unique ID for each time
he/she visits the hospital.

With the data inputs in Table 6 provided, the
simulation system will ﬁrst pre-process them with
the following steps:
• Scope of Units: focus on Pediatric Areas (Acute

and ICU areas).

• Warm-up Period: We include a warm-up period
of one year. For example, if the goal is to sim-
ulate the patient ﬂow starting from 2018-01-01,
we include all patients in record who scheduled
their visit or arrived without appointment no
earlier than 2017-01-01 to warm up the model.
• Data Cleaning: we exclude the following types

of patients and records:

– patients with duplicate census record on the
same day or inconsecutive census records
during their stay,

– patients with overnight surgeries,
– surgery records missing the column ’Patient

in Room’ or ’Patient out of room’.

We re-organize the input data into two data
sets: patients and surgeon availability. The patient
proﬁle data contains the information on each
patient visit to the hospital, as shown in Table 17.
The surgeon availability data record the available
times of the surgeons, as in Table 16. When sur-
geon availability is not provided, the model has
a built-in function that infers surgeon availability
with the following logic: The surgeon is assumed
to be available at a speciﬁc date with a full block
size, for example, seven hours, if the total number
of hours of scheduled cases on record on the same

18

Article Title

Springer Nature 2021 LATEX template

Required Column
Yes
Yes
Yes
Yes
No
No
No
No

Value
1
Primary CSN
PICUs
Dept Abbrev
Eﬀective Date/Time
15-1-1 23:59:00
Hospital Admission Dt/Tm 15-1-1 0:10:00
Hospital Discharge Dt/Tm 15-1-2 14:10:00
Service
Admit Type
Admit Source

General Pediatrics
Elective
Home

Table 14 Midnight census data header. The column ‘Dept Abbrev’ is the location of the patient in record at midnight.
The date of one census record can be read from the column ‘Eﬀective Date/Time’.

Required Column
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No
No
No

Primary CSN
Primary Surgeon ID
Location
Originally Scheduled On
Originally Scheduled For
Patient in Room
Patient out of Room
Patient Class
Service
Primary Procedure ID

Value
2
3
MAIN OR
57-11-2 16:02:00
58-1-1 14:05:00
58-1-1 13:00:00
58-1-1 15:02:00
Outpatient Surgery
Otolaryngology
4

Table 15 Procedure record data header. The column ’Originally Scheduled On’ is the time the patient comes to the
hospital to schedule his/her visit. The column ’Originally Scheduled For’ is the time the patient’s surgery is scheduled for.
The two columns are used to calculate the patient’s lead days. The column ’Patient in Room’ records the time surgeries
start and ’Patient out of Room’ shows when surgeries end. The column ’Patient Class’ is a reference for inferring if the
patient is a elective patient or not. It is useful for identifying the surgical outpatients. More details in data-preprocessing.

Required Column
Yes
Yes
Yes
Yes

Date
Primary Surgeon ID 20
Service
Available Hours

Value
2001-01-01

Cardiology
3.2

Table 16 Surgeon availability data header. The column
’Available Hours’ is the number of hours a surgeon is
available for performing surgeries on a given day.

day exceeds a threshold, for example, three hours.
The threshold and full block size are inputs that
users can adjust by themselves.

A.1.2 Assumptions

We present here a list of assumptions we make
relative to the patient ﬂow and the hospital policy
when designing the simulation model.
• (Elective patients) A patient is an elective sur-
gical patient and can be rescheduled if he/she
satisﬁes one of the following criteria:

1. The patient is a surgical outpatient or surgi-

cal admit,

2. The patient’s lead time is no less than one

day.

• (Available window) For an elective surgical
patient whose arrival date is d1 and his/her
admission date is d2 (d2 > d1), the length of the
patient’s lead day is dl = d2 − d1. If the date
the patient originally receives his/her surgery is
d0, we assume that the available window for the
patient to receive surgery is [max(d1 + 1, d0 −
α ∗ dl), d0 + α ∗ dl]. Here, α is a scaling factor of
the patient’s availability window and is one by
default.

• (Reschedule by ﬁrst surgery) The timestamp
that a patient is scheduled to by BEDS only
depends on his/her ﬁrst surgery.

• Rescheduling a patients dose not change the list
of units the patient visits or the length of stay
in each unit.

Springer Nature 2021 LATEX template

Article Title

19

Primary CSN
Patient Class
Arrival Time
Admission Time
Available Window
Unit List
LOS List
In OR Times
Primary Surgeon ID 4

3
Surgery Admit
3018-02-22 12:51
3018-04-01 11:20
[3018-02-23 12:51, 3018-05-27 11:59]
[MAIN OR, PCUs]
[0 days 01:50, 4 days 00:00]
[3018-04-10 11:20]

Table 17 Patient proﬁle header. The column ‘Patient Class’ can take values as ’Surgical Outpatient’, ’Surgical Admit’,
’Surgical Inpatient’, or ’Medical Inpatient’. A patient classiﬁed to be ’Surgical Outpatient’ or ’Surgical Admit’ is an
elective surgical patient. The column ‘Arrival Time’ is the time a patient comes to schedule his/her visit or arrives at the
hospital without an appointment. The column ‘Admission Time’ is the time of a patient’s admission into the hospital.
The column ‘Available Window’ is the inferred period that a patient is available for surgery. The column ‘Unit List’ is a
list of the units that a patient visits during his/her stay in a timely order. The column ‘LOS List’ is his/her length of stay
in each unit. The column ‘In OR Times’ is a list of timestamps that a patient receives surgeries. The column ‘Primary
Surgeon ID’ records the ID of the primary surgeon of a patient’s ﬁrst surgery at the hospital.

A.1.3 Model Structure

We introduce more details on our discrete event
simulation (DES) model. Figure 2 shows the out-
line of the DES model. The model consists of three
major components:

1. Pre-processor: the processor prepares and re-
organizes the input midnight census data and
procedure record data into patients and surgeon
availability as described in A.1.1.

2. Scheduler (A module encoding the schedul-
ing logic): It is called every time a scheduling
request is made, and generates a speciﬁc sched-
uled time following a given scheduling rule.
Currently, the scheduler has two modes: his-
torical data and BEDS. The logic of BEDS is
encoded into the scheduler, so that the simu-
lator is able to generate the potential outcome
associated with implementing BEDS.

3. Event queue: It is a priority queue with time
being the index. In other words, the head of
the queue will always be the event that has the
earliest time. The idea of DES is implemented
utilizing this queue, where the simulator repet-
itively reads from the head of the event queue,
pops this event from the queue, generates the
next event following a given logic, and pushes
the new event into the queue. The event types
we consider are summarized in Table 7. Each
event is associated with a speciﬁc patient.

We present more results for the simulation
model validation in Section 6. For the ﬁrst exper-
iment in Section 6, the comparison of the mean,

coeﬃcient of variation, and the 90% quantile -
median ratio of daily elective surgical admission
in PICUs between historical data and simulated
data are in Figure 13.

References

[1] Bekker R, Koeleman PM (2011) Schedul-
ing admissions and reducing variability in
bed demand. Healthcare Management Sci-
ence 14(3):237

[2] Beli¨en J, Demeulemeester E (2007) Building
cyclic master surgery schedules with leveled
resulting bed occupancy. European Journal
of Operational Research 176(2):1185–1204

[3] Beli¨en J, Demeulemeester E, Cardoen B
(2009) A decision support system for cyclic
master
surgery scheduling with multiple
objectives. Journal of Scheduling 12(2):147–
161

[4] van den Broek d’Obrenan A, Ridder A, Rou-
bos D, et al (2020) Minimizing bed occu-
pancy variance by scheduling patients under
uncertainty. European Journal of Operational
Research 286(1):336–349

[5] Childers CP, Maggard-Gibbons M (2018)
Understanding costs of care in the operat-
ing room. JAMA surgery 153(4):e176,233–
e176,233

20

Article Title

of scheduling 19(5):493–525

[15] Scheinker D, Brandeau ML (2020) Imple-
menting analytics projects in a hospital: Suc-
cesses, failures, and opportunities. INFORMS
Journal on Applied Analytics 50(3):176–189

[16] Shehadeh K, Padman R (2020) Stochastic
optimization approaches for elective surgery
scheduling and downstream capacity plan-
ning: Models, challenges, and opportunities.
SSRN preprint

[17] Zenteno AC, Carnes T, Levi R, et al (2015)
Pooled open blocks shorten wait times for
nonelective surgical cases. Annals of Surgery
262(1):60–67

[18] Zenteno AC, Carnes T, Levi R, et al (2016)
Systematic or block allocation at a large
academic medical center. Annals of Surgery
264(6):973–981

[19] Zhu S, Fan W, Yang S, et al (2019) Operating
room planning and surgical case scheduling: a
review of literature. Journal of Combinatorial
Optimization 37(3):757–805

Springer Nature 2021 LATEX template

[6] Chow VS, Puterman ML, Salehirad N, et al
(2011) Reducing surgical ward congestion
through improved surgical scheduling and
uncapacitated simulation. Production and
Operations Management 20(3):418–430

[7] Fairley M, Scheinker D, Brandeau ML (2019)
Improving the eﬃciency of the operating
room environment with an optimization and
machine learning model. Healthcare Manage-
ment Science 22(4):756–767

[8] Guerriero F, Guido R (2011) Operational
research in the management of the operating
theatre: a survey. Healthcare Management
Science 14(1):89–114

[9] Jebali A, Diabat A (2017) A chance-
constrained operating room planning with
elective and emergency cases under down-
stream capacity constraints. Computers &
Industrial Engineering 114:329–344

[10] Neyshabouri S, Berg. BP (2017) Two-stage
robust optimization approach to elective
surgery and downstream capacity planning.
European Journal of Operational Research
260(1):21–40

[11] Papanicolas I, Woskie LR, Jha AK (2018)
in the United
and Other High-Income Coun-
https:
JAMA 319(10):1024–1039.
URL

Health Care Spending
States
tries.
//doi.org/10.1001/jama.2018.1150,
https://doi.org/10.1001/jama.2018.1150,
https://arxiv.org/abs/https://jamanetwork.
com/journals/jama/articlepdf/2674671/
jama papanicolas 2018 sc 180001.pdf

[12] Price C, Golden B, Harrington M, et al (2011)
Reducing boarding in a post-anesthesia care
unit. Production and Operations Manage-
ment 20(3):431–441

[13] Rahimi I, Gandomi AH (2020) A comprehen-
sive review and analysis of operating room
and surgery scheduling. Archives of Compu-
tational Methods in Engineering pp 1–22

[14] Samudra M, Van Riet C, Demeulemeester
E, et al (2016) Scheduling operating rooms:
achievements, challenges and pitfalls. Journal

Springer Nature 2021 LATEX template

Article Title

21

Fig. 9 Comparison between periods during the same time of year before and after the implementation of BEDS. We show
the number of daily elective surgical admission in 2019.8-12 (blue line) and 2020.8-12 (orange line) in PICUs in (a). We also
compare their histograms in (c). At the same time, we compare the number of daily elective surgical admission in 2020.1-3
(blue line) and 2021.1-3 (orange line) in PICUs in (b) and compare their histograms in (d). Similarly, for PCUs, we show
the number of daily elective surgical admission in 2019.8-12 (blue line) and 2020.8-12 (orange line) in PCUs in (e) and
compare their histograms in (g). Meanwhile, we compare the number of daily elective surgical admission in 2020.1-3 (blue
line) and 2021.1-3 (orange line) in PCUs in (f) and compare their histograms in (h).

(b)(a)(d)(c)(f)(e)(h)(g)22

Article Title

Springer Nature 2021 LATEX template

Fig. 10 Monthly elective surgical admissions in PICUs in 2019.1-2020.3.

Fig. 11 Arrivals and lead days of elective surgical PICUs patient in 2019-2021.3. For the period of 2019-2021.3, we show
the monthly mean of the daily arrivals of elective surgical PICUs patients (a), the coeﬃcient of variation of the daily arrivals
of elective surgical PICUs patients in every month (b), the monthly mean of the number of lead days of elective surgical
PICUs patients (c), and the standard deviation of the lead days of elective surgical PICUs patients in every month (d).

Fig. 12 Correlation of the daily elective surgical admissions in PICUs with neighboring days.

(a)(b)(c)(d)Springer Nature 2021 LATEX template

Article Title

23

Fig. 13 In this ﬁgure, we split the period of 2019.1 - 2021.3 into seven time intervals: 19.1-3, 19.4-7, 19.8-12, 20.1-3,
20.4-7.26 (before BEDS), and 20.7.27-12, 21.1-3 (after BEDS). We show the comparison of the mean (a), the coeﬃcient of
variation (b) and the 90% quantile - median ratio (c) of the number of daily elective surgical patient admissions into PICUs
in actual (blue bars) and simulated data (orange bars) during the seven periods mentioned above.

(c)(b)(a)