2
2
0
2

p
e
S
8
2

]

R
C
.
s
c
[

2
v
1
4
6
1
1
.
4
0
2
2
:
v
i
X
r
a

Cryptography Is Not Enough:
Real-time Location Spooﬁng of Authenticated GNSS Signals

Maryam Motallebighomi
Northeastern University

Harshad Sathaye
Northeastern University

Mridula Singh
CISPA Helmholtz Center for Information Security

Aanjhan Ranganathan
Northeastern University

Abstract

In this work, we analyze the security guarantees of cryp-
tographically protected GNSS signals and show the pos-
sibility of spooﬁng a receiver to an arbitrary location
without breaking any cryptographic operation. Due to
the increasing spooﬁng threats, Galileo and GPS are cur-
rently evaluating broadcast authentication techniques to
validate the integrity of navigation messages. Prior work
required an adversary to record the GNSS signals at the
intended spoofed location and relay them to the victim
receiver. Our attack demonstrates the ability of an adver-
sary to receive signals close to the victim receiver and in
real-time generate spooﬁng signals for an arbitrary loca-
tion without modifying the navigation message contents.
We exploit the essential common reception and transmis-
sion time method used to estimate pseudorange in GNSS
receivers, thereby rendering any cryptographic authen-
tication useless. We build a proof-of-concept real-time
spoofer capable of receiving authenticated GNSS signals
and generating spooﬁng signals for any arbitrary location
and motion without requiring any high-speed communi-
cation networks or modifying the message contents. Our
evaluations show that it is possible to spoof a victim re-
ceiver to locations as far as 4000 km away from the actual
location and with any dynamic motion path. This work
further highlights the fundamental limitations in secur-
ing a broadcast signaling-based localization system even
if all communications are cryptographically protected.

1

Introduction

Global Navigation Satellite Systems (GNSS) such as
Galileo [2], GPS [5], and GLONASS [3] are critical to a
wide variety of applications ranging from navigation and
tracking to modern communication and networking sys-
tems. It is well-known that civilian GNSS is vulnerable
to signal spooﬁng attacks with increasing spooﬁng inci-
dents observed in the wild [11]. In a GNSS spooﬁng at-

tack, an adversary transmits radio-frequency signals that
imitate legitimate satellite signals speciﬁcally crafted to
force a receiver to compute a false location. With the
widespread availability of low-cost software-deﬁned ra-
dio and public repositories [25], the cost to spoof GPS
signals has been signiﬁcantly lowered (less than $100).
Prior work has shown the possibility of changing the
course of autonomous aerial [38], terrestrial [12], and
aquatic [8] vehicles by simply spooﬁng GNSS signals.
Moreover, there are an increasing number of GPS sig-
nal interference and spooﬁng incidents [11] being re-
ported. For example, thousands of ships and GPS de-
vices in Shanghai were suspected to be affected by GPS
spooﬁng. It is also suspected that GPS spooﬁng resulted
in several boats transmitting signals indicating they were
sailing in circles off the California coast. In reality, they
were thousands of miles away.

The lack of message authentication is a major con-
tributing factor in generating fake satellite signals and
falsifying a receiver’s location. To this extent, sev-
eral countermeasures based on cryptographic authentica-
tion [46] to protect against attackers generating spooﬁng
signals are being proposed. For example, the recently
launched Galileo’s Open Service Navigation Message
Authentication (OSNMA) [15] authenticates the naviga-
tion message contents based on the TESLA protocol [40]
and one-way hash functions. As part of modernizing
next-generation GPS, the United States Department of
Defense is also exploring the use of Chips Message Ro-
bust Authentication (CHIMERA) [18]. Both Galileo’s
OSNMA and CHIMERA digitally sign the navigation
message contents and include the MAC within the mes-
sage itself. In addition, CHIMERA replaces parts of the
spreading code with unknown bits called markers which
are later revealed in a subsequent navigation message or
an out-of-band channel. The above countermeasures aim
to protect the integrity of the navigation message con-
tents. However, in GNSS, the user’s location is computed
based on both the navigation message contents and its

 
 
 
 
 
 
time of arrival.

This work analyzes the security guarantees of authen-
ticated GNSS signals and shows that an attacker can
spoof receivers to any location independent of the cryp-
tographic primitive implemented. Prior work [39, 43]
showed the possibility of relaying GNSS signals (mea-
coning attacks) across large distances and spooﬁng the
victim receiver’s location to the location from where the
legitimate signals were originally recorded. In contrast,
our attack does not require the attacker to capture legit-
imate signals at the location where the victim is to be
spoofed. We show how an adversary can spoof a vic-
tim receiver hundreds of kilometers away from its true
location by temporally manipulating satellite signals re-
ceived at the true location itself. Not only that, our at-
tacker setup can, in real-time, generate and spoof dy-
namic motion paths independent of the location of the
victim receiver. To the best of our knowledge, this is the
ﬁrst work that demonstrates the ability to spoof both ar-
bitrary static and dynamic GNSS locations in real-time
without modifying the contents of the navigation mes-
sage, thereby rendering any cryptographic authentica-
tion useless. Our real-time setup takes less than 24 ms 1
to generate spooﬁng signals from legitimate satellite sig-
nals, making the current delayed key-disclosure schemes
incapable of detecting the attack.

Speciﬁcally, our attack works as follows. First, we ex-
ploit the common reception time and common transmis-
sion time method that is fundamental to GNSS receiver
designs for estimating the pseudoranges, i.e., the distance
between a satellite and the receiver. The GNSS receivers
typically assign a minimum travel time to the satellite
signal arriving ﬁrst (reference signal) and compute the
pseudoranges based on the relative offsets of other sig-
nals to the reference signal. Our attack calculates the
necessary delays to introduce in each satellite signal to
achieve the required relative offsets corresponding to the
speciﬁc spoofed target location. This enables us to gen-
erate spooﬁng signals for any location or motion using
the signals received at the true location of the victim.
Second, it is necessary to generate the spooﬁng signals
without decoding the entire satellite navigation message.
Conventional receivers output navigation message con-
tents every 6 s, making it harder to circumvent the time-
binding of navigation message authentication primitives.
We designed our attacker to output the navigation mes-
sage bits (note there is no encryption but only authenti-
cation) as it gets decoded every 20 ms. Finally, the satel-
lites are continuously in motion, and thereby the delays
need to be constantly recomputed. Our attacker strategi-
cally chooses satellites to keep the re-computation time
infrequent.

We designed and developed a real-time location
spoofer using readily available software-deﬁned radio
platforms (less than $1500). Our setup can receive le-
gitimate GNSS signals and generate spooﬁng signals for
any arbitrary location and motion in real-time in about
317.4 µs processing delay. We sucessfully tested our
attack on a commercial receiver (ublox M8N) and a
software-deﬁned GNSS receiver (GNSS-SDR) and show
that it is possible to spoof a victim receiver to locations
almost 4000 km away from the actual location without
requiring any high-speed relay network or manipulating
the message contents. We demonstrated our real-time
setup in a video 2. As a proof of concept for spooﬁng
dynamic motion, we generate a 2.43 km dynamic mo-
tion path around a water reservoir 6 km away from the
true location (also the location where the legitimate sig-
nals were recorded).
It is important to note that even
though cryptographic signatures are transmitted as part
of the navigation messages, as of today, commercial re-
ceivers lack the necessary infrastructure to validate and
verify the transmitted signatures. Hence, in our proof-of-
concept attack, we show the feasibility of our proposed
attack on conventional GNSS signals without manipulat-
ing the message contents. We also evaluate the effect of
the attacker’s sampling rate, satellite constellation, and
orbital motion on the accuracy and performance of the
attack. Further, we show that with just two receivers
(and network connectivity) strategically placed around
the globe, an adversary can spoof a victim receiver to
any location in the world. Thus, through this work, we
further highlight the fundamental limitations in securing
a broadcast signaling-based localization system even if
all communications are cryptographically protected.

2 Background

2.1 GNSS Overview

Global Navigation Satellite Systems (GNSS) is an um-
brella term that refers to a satellite constellation provid-
ing positioning, navigation, and timing information to
receivers on the ground. USA’s GPS, Europe’s Galileo,
Russia’s GLONASS, and China’s Beidou are some satel-
lite navigation systems in operation today. GNSS com-
prises a constellation of satellites equipped with high-
precision atomic clocks that transmit “navigation mes-
sages” to the earth. Each satellite spreads the naviga-
tion messages using unique pseudorandom codes that are
publicly available. The receiver receives these navigation
messages and calculates the distance from the satellite
to the receiver based on the transmission time contained
within the navigation message and its time of arrival. The

120 ms to receive a bit, 317.485 µs of average processing time and

2A video demonstration of this attack is available at https://

4 ms for sending the bits to attacker’s transmitter

youtu.be/ylTpEsTCczs

2

receiver estimates its location using multilateration once
it estimates its distances to at least four satellites. The
fundamental operating principle of all GNSS is the same,
except they differ in the frequency of operation, preci-
sion, and availability of augmentation systems.

2.2 GNSS Spooﬁng Attacks

A GNSS signal spooﬁng attack is a physical-layer attack
in which an attacker transmits specially-crafted radio sig-
nals identical to legitimate satellite signals. The goal
of a signal spooﬁng attack is to force a victim receiver
to compute a false location and/or time. GPS, Galileo,
GLONASS, and Beidou are all vulnerable to spooﬁng
attacks (as of today) due to the lack of signal authenti-
cation and publicly available pseudorandom codes, sig-
nal modulation schemes, and data-frame formats. There
are commercial signal generations [6] available today
that can transmit multiple GNSS signals simultaneously.
Moreover, it is feasible to execute a signal spooﬁng at-
tack with less than $100 of hardware equipment due to
the availability of low-cost software-deﬁned radio plat-
forms [1] and open-source GPS signal generation soft-
ware [9]. The GNSS signal generators can transmit both
static and entire trajectories, e.g., an adversary can spoof
a stationary receiver to be in motion several kilometers
away from its actual location. In [49], the authors present
the fundamental requirements of executing a successful
GPS spooﬁng attack.

2.3 Cryptographic Countermeasures

Several cryptographic countermeasures [52] were pro-
posed as a means to prevent spooﬁng attacks. They can
be broadly classiﬁed into two types: i) Navigation mes-
sage authentication (NMA) and ii) Spreading Code Au-
thentication (SCA). In NMA scheme, navigation mes-
sages are authenticated using digital signatures [31, 22].
and in SCA, random symbols (watermarks) are punc-
tured in the public spreading sequence, which are later
veriﬁed by the receiver. The increasing GNSS spoof-
ing threat has forced GNSS operators to upgrade their
existing infrastructure. For example, Europe’s Galileo
has started testing its open service navigation message
authentication (OSNMA) and is available for public ac-
cess [15] as of Jan 30, 2022. Similarly, the US DoD is
exploring the use of chips message robust authentication
(Chimera) to improve the security of GPS, with several
tests being conducted recently [18].

Galileo OSNMA: Galileo’s OSNMA is based on an
adaption of the original
timed efﬁcient stream loss-
tolerant authentication (TESLA) protocol [40]. Specif-
ically, the navigation message is digitally signed, and the

message authentication code is included using a set of
40 reserved bits of the navigation message. The key to
verify the MAC is released after a delay, and the key it-
self can be veriﬁed using a previous key generated as
part of a one-way chain deﬁned in the TESLA protocol.
The root key is kept secret, and therefore an adversary
will not be able to generate the key-chain. The delay
ensures that the key used in the MAC generation pro-
cedure is not released until after the message and MAC
are already received. Since OSNMA is based on a de-
layed key disclosure scheme, loose time synchronization
at the receiver is critical and directly affects the scheme’s
effectiveness. To ensure the integrity of the navigation
data offered by the TESLA protocol, OSNMA-enabled
receivers verify the navigation data once the correspond-
ing TESLA chain key is released by the satellite. This re-
quires the receiver to be synchronized with a given accu-
racy to the Galileo system time. According to OSNMA
speciﬁcations [23, 15, 13], the receiver is required to be
i synchronization requirements at the receiver can range
from 18 sec to 5 min.

GPS Chimera: Chimera includes NMA and SCA [18]
modes of authentication. Speciﬁcally, Chimera replaces
some code chips with cryptographically generated mark-
ers and transmits the navigation messages. The positions
of the markers are also randomly chosen. The key used to
generate the markers and their positions is revealed to the
receiver after a certain time delay. Additionally, the nav-
igation message contents are also digitally signed, and
the MAC is included as part of the message itself. GPS
Chimera proposes two fundamental distribution mecha-
nisms: i) Fast channel mode and ii) slow-channel mode.
The fast-channel mode uses an out-of-band high band-
width network connection, while the slow-channel mode
utilizes the navigation message to communicate the key.
The Chimera epoch for the fast-channel mode is the time
duration over which a marker key is ﬁxed. The fast chan-
nel epoch is independent of the slow channel epoch and
is ≈6 seconds [14].
In slow channel mode, the digi-
tal signature is included in an extra page, which makes
the duration of the slow channel epoch around 3 min-
utes [14]. The US AirForce Research Laboratory is plan-
ning to launch Navigation Technology Satellite–3 (NTS-
3) in 2023 to test Chimera [27]. One of the modes of
operation of GPS Chimera, which will be tested in this
experiment, is “NMA-only.” The goal of these experi-
ments is to test the effectiveness of data-only authenti-
cation. In addition, the NMA-only mode is designed to
provide better tracking performance at the receivers [27].
This work analyzes the security guarantees of the
above-mentioned cryptographic measures to protect
against spooﬁng attacks. We note that these schemes
are in various testing phases and are not yet available

3

(e.g., Chimera’s fast channel mode) and is loosely syn-
chronized as required by the respective authentication
scheme. However, we assume that the victim receiver
does not implement other non-cryptographic spooﬁng
detection mechanisms, e.g., physical-layer-based spoof-
ing detection techniques [44, 51, 33].

3.2 Attack Overview

Before describing the attack, it is crucial to understand
how GNSS receivers determine their position by pro-
cessing the satellite signals. After pre-processing the re-
ceived signal, the receiver ﬁrst searches for visible satel-
lite messages by correlating its own replica of the pseu-
dorandom code corresponding to each satellite. Once a
satellite signal is detected, the receiver switches to track-
ing and demodulating the navigation message data for
that speciﬁc satellite. The decoded data estimates the re-
ceiver’s range or distance from each visible satellite. It is
important to note that the satellite clocks are in tight syn-
chronization while the receiver’s clock (not using atomic
clocks) contains errors and biases; therefore, we refer to
the estimated ranges as pseudoranges. The receiver re-
quires at least four pseudoranges to estimate its position.
To determine each pseudorange, the receiver needs the
satellite signal’s transmission and reception time. The
transmission time of each subframe is found in the nav-
igational message. However, estimating the reception
time of the signal [41] is a more involved process. As
shown in Figure 2a, signal transmission from the satel-
lites is synchronized. Since the transmitted signals travel
different distances, they arrive at the receiver with vary-
ing propagation delays (Figure 2b). Since the receiver
does not have a high-accuracy reference clock as the
satellites, the receiver uses the earliest arriving signal as
the reference and computes the relative time difference
of the remaining satellite signals. The result of this ap-
proach is not an absolute range for each satellite but a
pseudorange relative to the ﬁrst arriving reference satel-
lite. Absolute pseudoranges are then estimated assuming
a minimal travel time for the reference satellite based on
known satellite orbits and typical user altitudes (e.g., for
GPS, this is 65 to 85 ms). Such an estimation of pseu-
doranges is fundamental to all GNSS receivers, and we
exploit this design in our attack.

In a signal spooﬁng attack, an adversary can manip-
ulate position estimation by either modifying the con-
tent of the navigation messages or the propagation de-
lay. Since the message content is authenticated, we de-
sign our attack strategy to manipulate the reception time
estimation method used for the pseudorange estimation.
Suppose an adversary records and replays the GNSS sig-
nals as shown in prior work [47], i.e., delays all the satel-
lite signals by the same amount. In that case, the victim

Figure 1: An overview of the proposed attack scenario.
The attacker receives and re-transmits legitimate signals
with strategically applied delays that force the victim re-
ceiver to compute a fake position.

for broad public usage. Through this work, we aim to
raise awareness of the fundamental limitations of the pro-
posed architectures and drive the research community to
address these drawbacks in time for open public access.

3 Spooﬁng Locations Using Authenticated

GNSS Signals

3.1 Attacker and System Assumptions

The attacker’s overall goal is to manipulate the estimated
position at a victim receiver. For example, the attacker is
close to the victim receiver at location lA and intends to
spoof the receiver to a target location lT as shown in Fig-
ure 1. We assume that the attacker has access to all public
information, such as pseudorandom codes, signal modu-
lation schemes, and data-frame formats. The attacker can
receive legitimate GNSS signals, even if OSNMA and
Chimera are enabled, as the spreading codes are public
knowledge. Additionally, the attacker can transmit the
GNSS signal using the modulation and frame format ex-
pected at the victim receiver. Finally, we assume that the
attacker has sufﬁcient transmission power to overshadow
the legitimate signals3. We emphasize that the attacker
cannot modify the contents of the navigation message as
it would break the integrity, and the victim receiver will
detect the manipulation. Hence, in contrast to today’s
spooﬁng attacks, our adversary cannot generate naviga-
tion messages in advance.

We assume that the victim’s receiver is a standard
GNSS receiver, capable of decoding GNSS messages
and validating the authenticity of the message content
(e.g., Galileo OSNMA or GPS Chimera). The victim
receiver can access conﬁdential out-of-band information

3GPS’s signal strength on the ground is typically -127.5 dBm

4

Victim RxS1S2S3S4Spoofing signalSpoofed PositionlAlTAttackerFigure 2: A schematic describing the stages of the proposed attack based on manipulating the common reception time.
(a) GNSS satellite transmission time (b) relative time of arrival in attacker receiver (c) relative times at attacker TX
after attacker modiﬁcations (d) relative time of arrival in victim receiver.

receiver’s spoofed location is limited to where the adver-
sary recorded the signal.

Figure 3 shows how delaying just one of the satel-
lite signals moves the location estimated by the receiver,
and delaying all the satellite signals does not cause any
change to the actual location. Therefore, in our attack,
the adversary actively manipulates individual satellite
signals’ arrival time by introducing appropriate delays.
Given a set of satellite signals, our attacker continuously
calculates and applies appropriate delays to spoof the
victim to a speciﬁc location. It is important to note that
acquiring the legitimate signal and selecting delay values
for each satellite signal is time-constrained when using
OSNMA and Chimera. Recall that the victim considers
the navigation message invalid and discards them once
the keys for authentication are released. Furthermore,
the satellites are in continuous motion. Therefore, the
frequency of delay estimation directly impacts the satel-
lite signals selected for temporal manipulation, and the
achieved spoofed location accuracy. The key modules
that we design enable the attacker to overcome these
challenges by providing access to navigation messages
within the time constraints set by cryptographic coun-
termeasures. The following text describes our attacker
modules in more detail.

3.3 Key Components of the Attack

Our attack comprises of three key components as shown
in Figure 4:
i) NAVMSG streamer, ii) Delay Estima-
tor, and iii) Spooﬁng Signal Synthesizer. Recall that au-
thentication mechanisms like OSNMA and Chimera en-
force strict timing constraints, i.e., the receiver will dis-
card navigation messages arriving after the disclosure of
the key used to sign the message. To achieve this, the
NAVMSG streamer exploits the non-necessity of decod-
ing the entire content of the navigation messages as the
attack does not manipulate the navigation message data
in any way. The delay estimator module calculates the
necessary delays for each visible satellite signal to spoof

Figure 3: The effect of delay applied to a single satellite.
The magnitude and the direction of the shift depend on
the delayed satellite’s orientation relative to other non-
delayed satellites. If we apply the same delay to all satel-
lites, the obtained position will remain the same.

the victim receiver to a target location. The spooﬁng sig-
nal synthesizer module applies the delays computed by
the delay estimator module to the satellite signals for-
warded by the NAVMSG streamer. The spooﬁng signal
synthesizer carefully selects satellite signals to apply the
delays and combines them before spooﬁng the victim re-
ceiver during the synthesis process.

NAVMSG streamer. The NAVMSG streamer is re-
sponsible for detecting visible satellite navigation mes-
sages and streaming them to the spooﬁng signal syn-
thesizer in real-time. In conventional receiver designs,
the navigation message is output as a receiver observ-
able after the entire sub-frame is decoded, i.e., the sig-
nal has gone through the signal acquisition, demodu-
lating, and decoding process, which takes 6 s for GPS
and 30 s for Galileo [29]. In our attack, it is necessary
to detect and forward the navigation message signals as
fast as possible for temporal manipulation. The goal is
to hit the victim receiver with the spooﬁng signal be-
fore the revelation of the appropriate authentication key.

5

δ1δ2δ4tcβ1β4tc + δ1tc + δ2tc + δ4tc(b)(d)(c) Sat 1Sat 2Sat 3Sat 4(a)ttttAttacker Legitimate SignalsAttacker’s Signal2101Easting (km)30201001020Northing (km)Sat10Sat13Sat20Sat21Sat15Sat24True locationwe can estimate the distance of location lA and lT from
the satellite Si as:

(cid:113)

ri
A =

(xi

s − xA)2 + (yi

s − yA)2 + (zi

s − zA)2

(1)

(cid:113)

ri
T =

(xi

s − xT )2 + (yi

s − yT )2 + (zi

s − zT )2

Figure 4: A schematic representation of the entire signal
processing pipeline. The NAVMSG streamer provides
the required raw navigation bits, the delay estimator, and
the signal synthesizer module that computes and applies
the required delays.

We design the NAVMSG streamer to directly output the
navigation message symbol from the receiver’s tracking
stage. GNSS receivers perform correlation to identify
visible satellite signals and synchronize before decoding
the navigation message contents. Our design uses the
correlator output directly and streams the value as a sin-
gle navigation message bit to the spoofed signal synthe-
sizer. This process eliminates the delays caused by other
GNSS signal processing blocks.

With the method described above,

the NAVMSG
streamer can output a single navigation message bit
every 20 ms for GPS and every 8 ms for Galileo. GPS
messages have a bitrate of 50 bps and 125 bps for
Galileo. At this rate, a receiver needs 20 ms and 8 ms to
decode an individual navigation bit. Also, the NAVMSG
streamer separates each satellite signal using its unique
pseudorandom spreading codes to allow the spooﬁng
signal synthesizer to manipulate each satellite signal
the pseudo-
For civilian-GNSS signals,
temporally.
random spreading codes are publicly known, allowing
the possibility of acquiring each satellite’s signals
individually. If codes are not publicly available, signals
originating from the different satellites can be separated
using spatial methods like high gain antennas or antenna
arrays [53, 34, 16].

Delay Estimator. The delay estimator calculates the de-
lays to introduce in each satellite’s signal received by the
attacker at location lA such that when the spooﬁng sig-
nal is transmitted to the victim receiver, it computes the
spoofed target location lT . To do that, we require the
location coordinates {xi, yi, zi} of a satellite Si at time t,
which can be assumed to be public knowledge as it is
part of the navigation message. Using this information,

where lA(xA, yA, zA) and lT (xT , yT , zT ) denote location
coordinates for the attacker receiver and spoofed loca-
tion. To spoof the location lT , the attacker delays the sig-
nal originating from satellite Si and received at location
lA by ∆τ i
t .

∆τ i

t = (ri

T − ri

A − c ∗ tp)/c

(2)

where tp is the attacker’s processing delay in receiving
temporally manipulating, and
the legitimate signal,
transmitting it to the victim receiver. We note that tp
is constant for speciﬁc attacker hardware and is thus
known to the attacker. We emphasize that the calculated
delay is independent of the distance between attacker
and victim as these delays affect only the relative time
offsets as indicated in Figure 2. Since the satellites are
in continuous motion, the attacker needs to continuously
update the calculated delays, as it directly impacts the
victim’s obtained position and velocity. We present an
evaluation of how the victim’s estimated location is
affected and its factors in Section 5.

Spooﬁng Signal Synthesizer. The spooﬁng signal syn-
thesizer combines the individual satellite signals after ap-
plying the necessary delays computed by the delay esti-
In other words, the synthesizer gener-
mator module.
ates the spooﬁng signal to be transmitted to the victim
receiver for the attack. A key function of the spooﬁng
signal synthesizer is to comb through the available satel-
lite signals and select the best satellites to include in the
spooﬁng signal. As we will show in Section 5.3, the
choice of satellites plays a signiﬁcant role in the accu-
racy and performance of the spoofer. For instance, there
are more than six visible GNSS satellites at any given
time and location. However, using all the satellite sig-
nals will limit the maximum spoofable distance from the
true location lA. It is also important to choose a subset of
satellite signals that offer the lowest geometric dilution of
precision (GDOP). GDOP is the geometry of the visible
satellites in the sky and is low for a satellite constellation
that is more spread out in the sky. Remember that the ad-
versary knows the true location lA and the spoofed target
location (lT ) apriori and, therefore, the visible satellite
signals to manipulate temporally. Hence, the attacker can
also compute the best subset of satellites with the high-
est GDOP in advance and use it during the attack. The

6

Spoofing Signal SynthesizerAttacker’s combined signalSatellite 1 SignalSatellite 2 SignalSatellite 3 SignalSatellite n SignalDelay Block D1Delay Block D2Delay Block D3Delay Block DnLegitimate SignalsVictim ReceiverDelay EstimatorNAVMSG Streamer+signal synthesizer also takes care of sanitizing the cal-
culated delays. For instance, the attacker should avoid
transmission of the signal where estimated delay ∆τ i
t < 0.
If the calculated delay ∆τ i
t for some of the chosen satel-
lites is negative, the attacker picks the lowest negative
delay value and adds it to all the other delays. The up-
dated delay values will be as follows:

ˆ∆τ

i
t = ∆τ i

t + tc

(3)

where tc is the common code phase offset and is equal
to the lowest negative delay. Also, choosing the satel-
lites that are closer to the true location lA than to spoofed
target location lT will result in smaller values for tc. We
evaluate these parameters with real-world experiments in
Section 5.

4 Attacker Implementation

NAVMSG Streamer. As described in Section 3.3, it is
necessary to detect the presence of a satellite’s naviga-
tion message well within the time constraints set by the
message authentication scheme, which is 1.5 sec or 3 min
for GPS Chimera (based on the mode of operation) and
30 sec for Galileo. Commercial GPS receivers like uBlox
provide access to raw navigation messages. However, the
user has to wait for 6 s for GPS and 30 s for Galileo for
each navigation subframe, making it unsuitable for use
for our attack. In our work, we leveraged the design of
GNSS-SDR and implemented the NAVMSG streamer as
part of its telemetry decoder module. The telemetry de-
coder module provides access to raw navigation message
symbols directly at the correlator output after the receiver
detects the presence of a speciﬁc satellite. Addition-
ally, we timestamp the navigation symbols and stream
them to the spooﬁng signal synthesizer. Each NAVMSG
streamer message includes the navigation message, our
timestamp, and the corresponding satellite identiﬁcation
PRN. Furthermore, the NAVMSG streamer separates the
satellite signals before streaming them to the spooﬁng
signal synthesizer. Here, we note that prior work has
demonstrated the ability to separate satellite signals us-
ing directional antennas even if the pseudorandom codes
are kept secret.

Delay Estimator and Spooﬁng Signal Synthesizer.
The time delays to apply to each satellite signal are es-
timated based on the location where the attacker records
the legitimate signals, the target location to spoof, and
the satellite’s orbital status. The satellite orbital infor-
mation is typically public knowledge or predicted based
on the previously decoded navigation messages. The
method for calculating the required delays is described
in Section 3.3.

Figure 5: A ﬂowgraph showing the implementation of
our spooﬁng signal synthesizer. The desired pseudor-
anges and necessary signal parameters like carrier phase,
code phase delay and frequency are calculated using
satellite ephemeris and the target location. These calcu-
lated signal parameters are used to modulate the naviga-
tion bits received from the NAVMSG streamer and gen-
erate the spooﬁng signal.

The spooﬁng signal synthesizer accepts a location,
satellite ephemeris and received raw navigation bits and
generates the required spooﬁng signal. The architecture
of the signal synthesizer is depicted in Figure 5. Based on
the provided location and current satellite positions we
ﬁrst calculate the ranges to all the visible satellites. Next,
the calculated range is used to obtain the code phase de-
lay and the carrier phase measurements. The necessary
Doppler shift is calculated from rate of change of pseu-
dorange and the wavelength of carrier frequency. These
calculated parameters along with the PRN code is used
in modulation of the bits received from the NAVMSG
streamer. It is important to note that the signal synthe-
sizer is required to perform all these calculations period-
ically to account for the satellite’s motion over time

As shown in Figure 5, the spooﬁng signal synthesizer
was conﬁgured to accept calculated delays at run-time,
enabling complete control of the spooﬁng target location.
We elaborate on the importance of real-time delay ma-
nipulation in Section 3.3. The synthesizer receives the
satellite signals from the NAVMSG streamer and selects
a subset of the satellites, as shown in Figure 4. The es-
timated delays are applied to each satellite signal, com-
bined, and transmitted to the victim receiver.

5 Experimental Evaluation

In this section, we evaluate the performance of our at-
tack. First, we describe the evaluation setup and metrics
used to measure our attack performance. Then, we pro-
vide an example spooﬁng scenario that we tested using
the experimental setup for both GPS and Galileo signals.
Finally, we discuss the results of our experiments.

7

Target LocationSatellite EphemerisCalculating PseudorangesCalculating:• Codephase Delay• Doppler• Carrier phase• Signal strengthNav_bitsModulationIQ samplesFigure 6: Experimental setup showcasing the real-time
relay system: 1) Active GPS antenna with a 5V bias-tee,
2) NAVMSG streamer, 3) signal synthesizer and 4) ublox
M8N GNSS receiver

5.1 Experiment Setup

We test our attack on a commercial receiver (ublox M8N)
as well as GNSS-SDR [25]. GNSS-SDR is an open-
source software-deﬁned GNSS receiver based on GNU
Radio [4] capable of detecting, synchronizing, demodu-
lating, and decoding the navigation messages originating
from the constellations like GPS, Galileo, GLONASS,
and BeiDou. It can process raw GNSS signals from a ﬁle
source or from SDRs such as USRP [1] and enables us
to gain deep insights into the attack performance.

Figure 6 shows our setup that is capable of manipu-
lating live over-the-air GPS signals 4. An active GNSS
antenna feeds live GPS signals to GNSS-SDR that uses a
USRP B210 as its RF front-end. A streamer client con-
nects to GNSS-SDR and streams the decoded navigation
bits to another laptop that runs the signal synthesizer.
Based on the spoofed location, the signal synthesizer
modulates the received bits as described in Section 4. It
interfaces with another USRP B210 for transmission of
the generated signal. Finally, the signal is fed to a uBlox
GPS receiver. In addition to live over-the-air signals, we
also use a real-time GPS signal generator that generates
a continuous stream of IQ samples that are transmitted
using another SDR. Replacing the GNSS antenna with
a signal generator ensures repeatable simulation condi-
tions, provides complete control over the signal proper-
ties, and enabled us to investigate the effect of different
parameters on the effectiveness of our attack.

To validate our setup and to verify that the navigation
bits stay untouched throughout our attack, we compare
the bits received at the attacker and the bits received by
the victim receiver using the cross-correlation function
(Figure 7) for a single sub-frame (300 bits). It is impor-

4A video demonstration of this attack is available at https://

youtu.be/ylTpEsTCczs

8

Figure 7: Correlation coefﬁcient peak with a value of 300
showing that 300 bits of a single sub-frame received by
attacker and by the victim are same.

tant to note that the signal generation methods that we
used do not affect the feasibility of the attack on signals
with message authentication since the navigation mes-
sage contents remain untouched by the attacker.

5.2 Evaluation Scenarios

Based on the setup we described above, we show that
our attacker can generate spooﬁng signals for a target lo-
cation far away from the victim (and the attacker)’s true
location. We evaluated our attacker setup for both static
(stationary locations) and dynamic scenarios.

Static scenarios. For verifying the feasibility of our at-
tack on static scenarios, we picked spooﬁng locations
at various distances away from the receiver’s true loca-
tion. We evaluated the accuracy of the proposed attack
by measuring the offset between the spooﬁng location
and the obtained location at the victim receiver. We were
able to spoof the victim receivers (both ublox and GNSS-
SDR) to our arbitrary locations, proving the attack’s suc-
cess. The results of our experiments are shown in Fig-
ure 8. Speciﬁcally, we run the real-time experiments for
each location for 10 minutes continuously to prove the
stability of the obtained results, although the satellite’s
constellation keeps changing over time. We thoroughly
examine the impact of satellite orbital motion in sec-
tion 5.3. We once again emphasize that the contents of
the navigation messages remained unchanged through-
out the attack.

Dynamic motion scenario. We also evaluate the abil-
ity to generate spooﬁng signals that deceive the receiver
into believing it is in motion at an arbitrary location away
based on the legitimate signals received at the true loca-
tion. To spoof such a motion, the attacker has to manip-
ulate the physical layer properties of the spoofed signal
to reﬂect the updated position as per the desired trajec-
tory. As mentioned earlier, our implementation calcu-

1243Figure 8: Accuracy of the spoofed location as a function
of its distance from the attacker’s location. The offset is
the distance between the spoofed location and the actual
location calculated by the victim receiver.

lates pseudoranges, rate of change of pseudoranges, car-
rier phase, code phase delay and carrier frequency offsets
to replicate the Doppler shifts for the speciﬁed position.
To enable the dynamic motion, we use a sequence of
latitude and longitude values that reﬂect the target path
such that target speed = distance(pt , pt+1)/dt where pt
and pt+1 are sequential positions of the trajectory as a
real-time input to the signal synthesizer. The signal-
synthesizer then calculates the required parameters and
modulates the incoming bits to generate the necessary
spooﬁng signal.

To evaluate our strategy and its implementation, we
generate and transmit a signal that forces the target into
believing that it is moving at a speed of 1.98 m/s along
a pre-determined path which is 2.43 km and in an area
which is 5.5 km away from the victim’s original loca-
tion. In this experiment, we only assume that the victim
is within the radio range of the attacker and the victim
can be either stationary or can be moving. It is impor-
tant to note that, the attacker doesn’t need to have prior
knowledge of the victim’s true location for successful ex-
ecution of this dynamic motion scenario. Similar to the
static location spooﬁng, we do not manipulate the legit-
imate navigation message contents and achieve dynamic
motion by introducing appropriate temporal and Doppler
changes to the legitimate signals. Figure 9 shows a com-
parison of the spoofed trajectory and the received loca-
tion estimates

Proof-of-Concept Attack on Galileo Signals. For
testing the attack’s success against Galileo, we gener-
ated signals corresponding to location anonymized for
review using NCS TITAN GNSS simulator [7]. Then,
we conﬁgured the attacker to generate spooﬁng signals
for a location 100 km away. With knowing the satel-
lite ephemeris data, we calculated the delays in advance
for the spoofed location. The victim receivers were suc-

Figure 9: A comparison of spoofed trajectory and the
locations estimates of the victim receiver

cessfully spoofed to the desired location with an offset of
≈90 m. As we mentioned earlier, Galileo open service
navigation message authentication (OSNMA) has started
its test phase recently. But due to the limited availability
of the OSNMA signals in space [36], we implemented
our real-time setup based on GPS signals. Additionally,
powerful GPS simulators provide the required ﬂexibility
to investigate the different aspects of the attack.

5.3 Attack Performance Analysis

In this section, we assess and evaluate the factors that
impact the performance of the attack. Our main evalua-
tion metrics are the accuracy of the spoofed location esti-
mated by the target and coverage. We evaluate accuracy
as the difference in the location spoofed by the attacker
and the location estimated by the victim receiver. Cov-
erage is the furthest location an attacker can spoof the
victim receiver from where the legitimate signals were
received. The accuracy of the spoofed location, i.e., the
difference between the spoofed target location and the lo-
cation estimated by the victim receiver, depends on three
main factors: i) attacker’s sampling rate, ii) geometric di-
lution of precision (GDOP) of the spoofed satellites, and
iii) satellite’s orbital motion. We assume that the victim
receiver and the adversary are in close proximity.

Impact of Attacker’s Sampling Rate:
The funda-
mental premise of the attack is to introduce speciﬁc de-
lays to individual satellite signals. The delays are applied
by temporally shifting the raw signal samples (i.e., IQ
samples) appropriately. Thus, a direct factor that inﬂu-
ences the accuracy of the spoofed location is the ability
of the attacker to precisely achieve the needed sample
delay. The adversary will achieve the required delays
given a sufﬁcient sampling rate. We evaluate the effect
of sampling rate on the accuracy and present our results
in Figure 10. We observe that the accuracy of spoofed
target location increases with the sampling rate. For in-
stance, given a sampling rate of 4 MHz, every sample

9

Figure 10: The accuracy of the spoofed location varies
with the sampling rate. The sampling rate determines
the resolution and accuracy of the pseudorange.

Figure 11: Examples of satellite constellations with good
GDOP and bad GDOP. Geometrically more spread out
satellite constellation causes lower dilution of precision
than satellites grouped closer.

delay corresponds to a 75 m change in pseudorange.At
10 MHz sampling rate, the attacker can manipulate each
pseudorange value with a resolution of 30 m. The results
shown in Figure 10 are the ﬁnal offsets from the target
location as estimated by the victim receiver.

Effect of GDOP: An important factor that directly af-
fects the accuracy of the position estimates in any GNSS
is the constellation of satellites’ signals used to com-
pute the location. The accuracy depends on the number
of visible satellites and their elevations in the sky, i.e.,
the spread of satellites. The GDOP is low for a satel-
lite constellation spread apart and high for a constella-
tion with satellites clustered in a single direction. Fig-
ure 11 shows an example of constellations with good and
poor GDOP values. The same principle applies to the at-
tacker’s spooﬁng signals. While choosing the satellite
signals to manipulate temporally, it is essential to select
satellite signals that have a low GDOP. To determine the
best constellation for a receiver, we calculate the GDOP
of several constellations and choose a satellite constel-
lation with the appropriate GDOP. Figure 12 (b) shows
the effect of GDOP on the spoofed location accuracy for
four distinct sets of satellites with varying GDOP. The
results conﬁrm our hypothesis that selecting the correct
subset of satellites provides better control to the attacker
regarding spooﬁng positioning accuracy.

Impact of Satellite Orbital Motion:
Recall that the
pseudoranges are calculated based on the distance be-
tween the satellite and the receiver on the ground. The
satellite orbits are conﬁgured to have a certain number
of satellites visible to any part of the earth. For exam-
ple, GPS has its satellites orbit the earth along six orbital
planes, and Galileo’s satellites orbit the earth along three
orbital planes. As a result, the estimated pseudorange

changes over time with a rate dependent on the location
and time. Based on the satellite’s velocity and position in
the ephemeris data, the adversary can estimate the delay
update rate and the required delay. Figure 13 shows how
the GPS pseudorange changes over 30 minutes at the lo-
cation anonymized for review. Note the difference in the
rate of change of pseudorange for each satellite. Con-
sequently, the attacker’s choice of satellites directly im-
pacts how often the adversary needs to update the delay
calculation. Figure 12 (a) shows the drift in the estimated
location if the adversary does not recompute the delays,
given a set of satellite signals spoofed. For example, for
satellite sets 1 and 4, the drift in the spoofed target loca-
tion is less than 100 m even after 5 minutes. However,
for satellite sets 2 and 3, the location drifts more than
500 m within the ﬁrst minute. The estimated location
drifts faster when a high GDOP satellite set is spoofed.
High GDOP satellite sets are typically clustered together,
resulting in signiﬁcant pseudorange changes over time.
Thus, the choice of satellites plays a critical role in the
performance of the attack.

Satellite Signal Coverage:
In a typical GNSS spoof-
ing attack, the attacker can spoof its target to any lo-
cation on the earth as the attacker can generate nav-
igation messages for any satellite. However, crypto-
graphic signatures prevent the attacker from generating
navigation messages, limiting its spooﬁng capabilities.
Prior work [30] showed the feasibility of relaying sig-
nals over long distances and spooﬁng the victim’s loca-
tion to where the signals were originally received. First,
we evaluate the furthest distance an adversary can spoof a
victim, assuming proximity between the attacker and the
victim receiver. Given a set of satellites, the main factor
that affects the ability of an attacker to spoof a speciﬁc

10

Good GDOPBad GDOPFigure 12: The effect of satellite constellation geometry on the accuracy of spooﬁng. (a) Obtained location at victim
receiver drifts over time. (b) Overall error in the spooﬁng location for four sets with varying GDOP.

Figure 13: Delay corrections to maintain the spoofed lo-
cation. The satellite geometry and orbit determine the
required update rate for each satellite. Here, satellite 20
requires more aggressive corrections over time.

Figure 14: A comparison showing the number of com-
mon satellites between each region and the set of satel-
lites visible at the attacker’s location.

location is the coverage of the set. In other words, given a
victim receiver’s actual location, an attacker can generate
spooﬁng signals for any location provided there is a set
of overlapping satellites also visible at the spoofed target
location. We analyzed the possible locations an attacker
can spoof, assuming the true location is on the east coast
of the United States. We divided North America into
hexagons, each hexagon side measuring 1100 km. Then,
we selected locations on the edges of these hexagons
and determined the overlapping satellites between each
of these locations and our assumed true location. Our
results (Figure 14) indicate at least 7-8 common satel-
lites across North America at a given time. We used the
satellites received at the assumed true location and gener-
ated signals for one of the northwest cities of the United
States. We validated the coverage of the attack by suc-
cessfully spooﬁng to location ≈ 4000 km away from the
actual location.

Furthermore, we analyzed the feasibility of generating
spooﬁng signals to any arbitrary location in the world if
the attacker could place multiple receivers anywhere in
the world. Our analysis showed that with two receivers
positioned along the equator, as shown in Figure 15, we
could observe at least four overlapping satellites at vari-
ous corners of the world. This means that an attacker can
generate spooﬁng signals to most of the earth’s location
with two receivers carefully placed and connected to the
spoofer positioned close to the victim receiver.

6 Countermeasures

The direct protection of the time of arrival of the received
signal (and the consequent protection of the pseudorange
computation) cannot be completely ensured by using
only cryptographic solutions. These solutions, alongside
receiver-based techniques, can increase the resilience of

11

Se1 : {10,15,20,24} – GDOP – 5.6Se2 : {10,13,20,21} – GDOP – 20.02Se3 : {10,15,20,21} – GDOP – 19.74Se4 : {10,13,20,24} – GDOP – 4.48(a)(b)9 common visible satellites8 common visible satellites7 common visible satellites6 common visible satellitesAttacker’s capturing locationsignature and thwart such detection techniques.

Checking with Other Navigation and Positioning
Technologies: Auxiliary devices such as inertial mea-
surement unit (IMU) can help the target receiver to dis-
criminate against spooﬁng attacks. Additionally, the
GNSS receiver can compare the solution to the other po-
sition and navigation solutions obtained by mobile net-
works or WiFi stations. Therefore, based on the conﬁ-
dence region of the solutions, there is a high chance of
detecting the attack. It should be noted that these spoof-
ing detection techniques increase the hardware and soft-
ware complexity of receivers. The IMU sensors require
calibration before being used for positioning purposes.
In addition, alternative wireless location technologies,
such as cellular networks, do not usually provide posi-
tion solutions as accurate as GNSS solutions. Therefore,
they might not be very helpful if there is a small mis-
match between the fake and authentic position. Another
issue is the limited coverage of cellular networks, which
does not guarantee auxiliary positioning.

Auxiliary peak tracking:
In auxiliary peak tracking
[44], the receiver leverages the presence of authentic sig-
nals in addition to the attacker’s signals to detect spoof-
ing attacks. By overshadowing adversarial signals, an
attacker can bury the legitimate signal under the noise in
order to remove auxiliary peaks, so that the attack can re-
main undetected. Moreover, there are countermeasures
that use the successive interference cancellation tech-
nique to mitigate GPS spooﬁng attacks [45]. This so-
lution is speciﬁcally built for UAVs to recover from the
GPS spooﬁng attacks. However, it is limited to a low-
power overshadow attack.

Secret spreading codes:
Researchers have proposed
using partially unknown spreading codes, i.e., spreading
codes with hidden markers [42] that are disclosed in the
future. Techniques like these enable the receiver to au-
thenticate the received signals based on the unknown bits
of the spreading code that are revealed later. Such a cryp-
tographic countermeasure can limit the capabilities of an
attacker as the attacker is unaware of the exact spreading
code used by the legitimate signals. This makes it difﬁ-
cult for our attacker to separate and regenerate satellite
signals. However, it is possible to implement codeless
tracking techniques [19] that can enumerate codes at run-
time without waiting for the satellite to reveal the hidden
markers or the unknown part of the spreading code. Fur-
thermore, directional antennas and spatial multiplexing
techniques [50, 53] can be also be used to separate satel-
lite signals at the RF level. An attacker can then add
temporal shifts to these separated satellite signals and re-

Figure 15: Potential positions for NAVMSG streamers
that can provide worldwide coverage by providing raw
navigation bits from at least 20 satellites at any time.

GNSS receivers against spooﬁng attacks. In this section,
we discuss different types of countermeasures in GNSS
receivers and their impact on detecting our proposed at-
tacks.

Signal Power Monitoring: When multiple signals fol-
lowing a similar signal structure arrive simultaneously, a
typical wireless receiver will automatically start track-
ing and demodulating the stronger signal. This phe-
nomemon is refered to as the “capture effect“. GPS re-
ceivers are also affected similarly, as a result, they auto-
matically start tracking the stronger signals. In open sky
conditions, satellite movement and ionosphere variations
cause smooth changes in the received signal power [17].
if a GNSS receiver experiences a sudden
Therefore,
spike in the observed power, it can indicate the pres-
ence of the spooﬁng signal. Often, in a spooﬁng attack,
the attacker’s signals are strong enough to bury the le-
gitimate signals under the noise ﬂoor, preventing the re-
ceiver from tracking them. Thus a receiver design will
detect such an attack when a signal with a higher power
is suddenly injected by the attacker. However, we can de-
ter detection by incrementally changing transmit power
of the attack signal.

Angle-of-Arrival Monitoring:
In most attack scenar-
ios, an attacker is constrained by the number of attack
nodes and their locations. The attacker uses a single (or
fewer) attacker node to transmit counterfeit signals for
the different satellites. In authentic settings, signals are
transmitted from different satellites originating from dif-
ferent directions. Therefore, monitoring AoA can be em-
ployed to estimate the spatial signature of received sig-
nals and distinguish spatially correlated signals. In [32]
an antenna array structure is proposed to detect and mit-
igate spooﬁng signals based on their spatial correlation.
However, more research is needed to understand the pos-
sibility of using multiple antennas to create a false spatial

12

Attacker RX2Attacker RX176755487transmit them without spreading and modulation. The
one-way ranging implemented in GNSS systems proves
to be a fundamental ﬂaw in the design that makes the
system vulnerable to various signal spooﬁng attacks. As
shown in [48], with secure design and implementation, a
bidirectional ranging system can be use for secure local-
ization that has the potential to prevent distance manipu-
lation through signal spooﬁng.

7 Related Work

Contrary to popular belief, cryptographic solutions are
not always enough to safeguard a system. Especially,
satellite navigation systems that rely on one-way com-
munications. Several researchers in the past have demon-
strated the ineffectiveness of cryptographic solutions.
The works that comes closest to our proposed attack
are [28, 30]. [30] demonstrated the feasibility of the relay
attack on large distances.

In [28], the authors introduced the spreading code es-
timation replay (SCER) attacks where they statistically
estimate the current bit at the time of transmission based
on the previously received samples. However, the pro-
posed attacks have limitations in terms of locations that
the attacker can spoof. Moreover, this attack also has
limitations in terms of the complexity of estimating pa-
rameters like chip length and power level. This work
was followed by [21],where the authors worked on sys-
tem parameters to have a more effective SCER attack.
They also proposed a countermeasure against SCER at-
tack based on the assumption that the deployed strategy
by the attacker is known to the victim receiver.

Authors in [39] describe the threat landscape for cryp-
tographically secure and unsecure GNSS signal. They
also provide basic countermeasure to prevent such at-
tacks. In [54] the authors demonstrated that the GNSS
authentication techniques are vulnerable to distance de-
creasing attacks. Their proposed attack is focused on
misleading the secure ranging and distance-bounding.
Works like [24, 47] discuss various approaches to ex-
ecute replay attacks against cryptographically secured
GNSS signal.
[39] studied the GNSS vulnerability to
replay attacks. They evaluate the feasibility and ef-
fectiveness of replay/relay attacks against cryptographi-
cally secured GNSS. Researchers have also explored var-
ious application layer attacks on GPS receiver software
like [37], where the authors have used malicious GPS
measurements and navigation message contents to ex-
ploit software bugs.

In [47] the authors propose a delay control method that
is capable of delaying signals by an integer multiple of
the sampling period as well as a fractional multiple of
the sampling period. Their worked was more focused on
how to add the delays to the individual signals.

In [20] the authors focused on studying the self-
spooﬁng attacks on GNSS Signals with Message Au-
thentication. In self-spooﬁng, the GNSS receiving equip-
ment is under the control of the adversary. They showed
that the symbol unpredictability provided by the cryp-
tographic functions in NMA does not offer range as-
surance. There has been limited work on detecting se-
lective delay attacks. Most notably [26], where the au-
thors demonstrate an approach based on machine learn-
ing to detect a SCER attack using a set of features ex-
tracted from receiver search phase. Several other works
like [44, 35, 10] describe the use of physical layer charac-
teristics, multiple antennas and crowd-sourced networks
to provide spooﬁng attack detection.

8 Conclusion

In this work, we designed and developed an attack
that allows spooﬁng a victim receiver’s location or mo-
tion without modifying the legitimate signal’s navigation
message contents. Speciﬁcally, we demonstrated how an
attacker can temporally manipulate legitimate satellite
signals received at a victim’s true location in real-time
to generate signals that correspond to arbitrary locations
and motions far away from the victim’s actual position.
This is in contrast to prior work that required an attacker
to be present and record legitimate satellite signals at the
location they intend to spoof the victim’s receiver. Par-
ticularly, our evaluations of the attack on both a commer-
cial uBlox GNSS receiver and an open-source software-
deﬁned GNSS receiver (GNSS-SDR) show that it is in-
deed possible to spoof a victim receiver to locations more
than 4000 km away from the true location without the
need to modify the legitimate message contents or re-
quire high-speed communication networks.

We also demonstrated the ability to generate spooﬁng
signals that correspond to any arbitrary dynamic motion
independent of the attacker or victim receiver’s motion.
Finally, we analyzed the effect of factors like sampling
rate, satellite constellation, and orbits on accuracy of the
spoofed location and discussed the effectiveness of exist-
ing spooﬁng detection and mitigation techniques coun-
termeasures against the proposed attack.

References

[1] Ettus Research. https://www.ettus.com/products/.

[2] Galileo. https://galileognss.eu/.

[3] GLONASS.
glonass/.

https://www.glonass-iac.ru/en/about_

[4] GNU Radio. https://www.gnuradio.org/.

[5] GPS. https://www.gps.gov/.

[6] LabSat GPS Simulator. https://www.labsat.co.uk/.

13

[7] NCS TITAN GNSS Simulator.

https://www.ifen.com/

products/ncs-titan-gnss-simulator/.

[8] UT Austin Researchers Successfully Spoof an $80 million Yacht
https://news.utexas.edu/2013/07/29/

at Sea, 2013.
ut-austin-researchers-successfully-spoof-an-80-million-yacht-at-sea/.

[9] Software-Deﬁned GPS Signal Simulator, 2015.

https://

github.com/osqzss/gps-sdr-sim.

[10] Crowd-gps-sec: Leveraging crowdsourcing to detect and localize
gps spooﬁng attacks, author=Jansen, Kai and Sch¨afer, Matthias
and Moser, Daniel and Lenders, Vincent and P¨opper, Christina
In 2018 IEEE Symposium on Security and
and Schmitt, Jens.
Privacy (SP) (2018), IEEE, pp. 1018–1031.

[11] Ghost

ships,

crop
in

circles,
Shanghai,

and

soft

gold:

A
https:

GPS mystery
//www.technologyreview.com/s/614689/
ghost-ships-crop-circles-and-soft-gold-a-gps-mystery-in-shanghai/.

2019.

[12] How Hackers Can Take Over Your Car’s GPS, 2019. https:
//www.bloomberg.com/news/articles/2019-06-19/
threat-of-gps-spoofing-for-autonomous-cars-seen-as-overblown.

[13] Galileo OSNMA Information Note,

2021.

https:

//www.gsc-europa.eu/sites/default/files/sites/
all/files/Galileo_OSNMA_Info_Note.pdf.

[14] GPS Chimera Speciﬁcation, 2021. https://www.gps.gov/

governance/advisory/meetings/2021-12/scott.pdf.

[15] Guidelines for Test Phase v1.0, 2021.

https://www.

gsc-europa.eu/sites/default/files/sites/all/
files/Galileo_OSNMA_Receiver_Guidelines_for_
Test_Phase_v1.0.pdf.

[16] AKOS, D., ESTERHUIZEN, S., MITELMAN, A., PHELTS, R. E.,
AND ENGE, P. High gain antenna measurements and signal char-
acterization of the GPS satellites. In Proceedings of the 17th In-
ternational Technical Meeting of the Satellite Division of The In-
stitute of Navigation (ION GNSS 2004) (2004), pp. 1724–1731.

[17] AKOS, D. M. Who’s afraid of the spoofer? gps/gnss spooﬁng de-
tection via automatic gain control (agc). NAVIGATION, Journal
of the Institute of Navigation 59, 4 (2012), 281–290.

[18] ANDERSON, J. M., CARROLL, K. L., DEVILBISS, N. P.,
GILLIS, J. T., HINKS, J. C., O’HANLON, B. W., RUSHANAN,
J. J., SCOTT, L., AND YAZDI, R. A. Chips-message robust au-
thentication (Chimera) for GPS civilian signals. In Proceedings
of the 30th International Technical Meeting of The Satellite Di-
vision of the Institute of Navigation (ION GNSS+ 2017) (2017),
pp. 2388–2416.

[19] BORIO, D. Squaring and cross-correlation codeless tracking:
IET radar, sonar & navigation 5,

analysis and generalisation.
9 (2011), 958–969.

[20] CAPARRA, G., CECCATO, S., LAURENTI, N., AND CRAMER,
J. Feasibility and limitations of self-spooﬁng attacks on GNSS
signals with message authentication. In Proceedings of the 30th
International Technical Meeting of The Satellite Division of the
Institute of Navigation (ION GNSS+ 2017) (2017), pp. 3968–
3984.

[21] CAPARRA, G., LAURENTI, N.,

IOANNIDES, R. T., AND
CRISCI, M. Improving secure code estimate-replay attacks and
their detection on gnss signals. Proceedings of NAVITEC 2014
(2014).

[22] CURRAN, J. T., AND O’DRISCOLL, C. Message authentication

as an anti-spooﬁng mechanism. Working Paper (2017).

[24] FERN ´ANDEZ-HERN ´ANDEZ,

I., AND SECO-GRANADOS, G.
Galileo NMA signal unpredictability and anti-replay protection.
In 2016 International Conference on Localization and GNSS
(ICL-GNSS) (2016), IEEE, pp. 1–5.

[25] FERNANDEZ-PRADES, C., ARRIBAS, J., CLOSAS, P., AVILES,
C., AND ESTEVE, L. GNSS-SDR: An open source tool for re-
In Proceedings of the 24th Interna-
searchers and developers.
tional Technical Meeting of The Satellite Division of the Institute
of Navigation (ION GNSS 2011) (2011), pp. 780–794.

[26] GALLARDO, F., AND YUSTE, A. P. SCER Spooﬁng Attacks on
the Galileo Open Service and Machine Learning Techniques for
End-User Protection. IEEE Access 8 (2020), 85515–85532.

[27] HINKS, J., GILLIS, J. T., LOVERIDGE, P., MYER, G.,
RUSHANAN, J. J., STOYANOV, S., ET AL. Signal and Data
In Proceedings of the
Authentication Experiments on NTS-3.
34th International Technical Meeting of the Satellite Division of
The Institute of Navigation (ION GNSS+ 2021) (2021), pp. 3621–
3641.

[28] HUMPHREYS, T. E. Detection strategy for cryptographic GNSS
anti-spooﬁng. IEEE Transactions on Aerospace and Electronic
Systems 49, 2 (2013), 1073–1090.

[29] J. SANZ SUBIRANA, J. J. Z., AND HERNANDEZ-PAJARES, M.
Galileo Navigation Message, 2011. https://gssc.esa.int/
navipedia/index.php/Galileo_Navigation_Message.

[30] LENHART, M., SPANGHERO, M., AND PAPADIMITRATOS, P.
Relay/replay attacks on GNSS signals. In Proceedings of the 14th
ACM Conference on Security and Privacy in Wireless and Mobile
Networks (2021), pp. 380–382.

[31] MARGARIA, D., MOTELLA, B., ANGHILERI, M., FLOCH, J.-
J., FERNANDEZ-HERNANDEZ, I., AND PAONNI, M. Signal
structure-based authentication for civil GNSSs: Recent solutions
and perspectives. IEEE signal processing magazine 34, 5 (2017),
27–37.

[32] MCDOWELL, C. E. GPS spoofer and repeater mitigation system
using digital spatial nulling, July 31 2007. US Patent 7,250,903.

[33] MCMILIN, E., DE LORENZO, D. S., LEE, T., ENGE, P., ET AL.
GPS anti-jam: A simple method of single antenna null-steering
for aerial applications. In Proceedings of the ION 2015 Paciﬁc
PNT Meeting (2015).

[34] MERWE, J., BARTL, S. M., O’DRISCOLL, C., R ¨UGAMER, A.,
F ¨ORSTER, F., BERGLEZ, P., POPUGAEV, A., AND FELBER, W.
GNSS Sequence Extraction and Reuse for Navigation. In Pro-
ceedings of the 33rd International Technical Meeting of the Satel-
lite Division of The Institute of Navigation (ION GNSS+ 2020)
(2020), pp. 2731–2747.

[35] MONTGOMERY, P. Y. Receiver-autonomous spooﬁng detection:
Experimental results of a multi-antenna receiver defense against a
portable civil GPS spoofer. In Radionavigation Laboratory Con-
ference Proceedings (2011).

[36] NICOLA, M., MOTELLA, B., PINI, M., AND FALLETTI, E.
Galileo osnma public observation phase: Signal testing and vali-
dation. IEEE Access 10 (2022), 27960–27969.

[37] NIGHSWANDER, T., LEDVINA, B., DIAMOND, J., BRUMLEY,
R., AND BRUMLEY, D. GPS software attacks. In Proceedings
of the 2012 ACM conference on Computer and communications
security (2012), pp. 450–461.

[38] NOH, J., KWON, Y., SON, Y., SHIN, H., KIM, D., CHOI, J.,
AND KIM, Y. Tractor beam: Safe-hijacking of consumer drones
with adaptive GPS spooﬁng. ACM Transactions on Privacy and
Security (TOPS) (2019).

[23] FERN ´ANDEZ, I., RIJMEN, V., ASHUR, T., WALKER, P., SECO,
G., SIM ´ON, J., SARTO, C., BURKEY, D., AND POZZOBON,
O. Galileo Navigation Message Authentication Speciﬁcation for
Signal-In-Space Testing–v1. 0. European Commission 11 (2016).

[39] PAPADIMITRATOS, P., AND JOVANOVIC, A. Protection and fun-
In 2008 IEEE International
damental vulnerability of GNSS.
Workshop on Satellite and Space Communications (2008), IEEE,
pp. 167–171.

14

[40] PERRIG, A., CANETTI, R., TYGAR, J. D., AND SONG, D. The
TESLA broadcast authentication protocol. Rsa Cryptobytes 5, 2
(2002), 2–13.

[41] PINI, M., FALCO, G., AND PRESTI, L. L. Estimation of
satellite-user ranges through GNSS code phase measurements.
Global Navigation Satellite Systems: Signal, Theory and Appli-
cations (2012), 107–126.

[42] POLTRONIERI, A., CAPARRA, G., AND LAURENTI, N. Analy-
sis of the Chimera Time-Binding Scheme for Authenticating GPS
In 2018 9th ESA Workshop on Satellite NavigationTech-
L1C.
nologies and European Workshop on GNSS Signals and Signal
Processing (NAVITEC) (2018), IEEE, pp. 1–6.

[43] PSIAKI, M. L., AND HUMPHREYS, T. E. GNSS spooﬁng and

detection. Proceedings of the IEEE 104, 6 (2016), 1258–1270.

[44] RANGANATHAN, A.,

´OLAFSD ´OTTIR, H., AND CAPKUN, S.
SPREE: A spooﬁng resistant gps receiver. In Proceedings of the
22nd Annual International Conference on Mobile Computing and
Networking (2016), pp. 348–360.

[45] SATHAYE, H., LAMOUNTAIN, G., CLOSAS, P., AND RAN-
GANATHAN, A. SemperFi: Anti-Spooﬁng GPS Receiver for
In Network and Distributed Systems Security (NDSS)
UAVs.
Symposium 2022 (2022).

[46] SCOTT, L. Anti-spooﬁng & authenticated signal architectures
for civil navigation systems. In Proceedings of the 16th Interna-
tional Technical Meeting of the Satellite Division of The Institute
of Navigation (ION GPS/GNSS 2003) (2003), pp. 1543–1552.

[47] SHANG, S., LI, H., WEI, Y., AND LU, M. A Flexible Replay
Delay Control Method for GNSS Direct Meaconing Signal. In
Proceedings of the 2020 International Technical Meeting of The
Institute of Navigation (2020), pp. 992–1000.

[48] TIPPENHAUER, N. O., AND CAPKUN, S. Uwb-based secure
ranging and localization. Technical Report/ETH Zurich, Depart-
ment of Computer Science 586 (2012).

[49] TIPPENHAUER, N. O., P ¨OPPER, C., RASMUSSEN, K. B., AND
CAPKUN, S. On the requirements for successful GPS spooﬁng
attacks. In Proceedings of the 18th ACM conference on Computer
and communications security (2011).

[50] VAN DER MERWE, J. R., BARTL, S., O’DRISCOLL, C.,
R ¨UGAMER, A., F ¨ORSTER, F., BERGLEZ, P., POPUGAEV, A.,
AND FELBER, W. GNSS Sequence Extraction and Reuse for
Navigation. In Proceedings of the 33rd International Technical
Meeting of the Satellite Division of The Institute of Navigation
(ION GNSS+ 2020), Virtual, September 2020 (2020).

[51] WARNER, J. S., AND JOHNSTON, R. G. GPS spooﬁng counter-
measures. Homeland Security Journal 25, 2 (2003), 19–27.

[52] WESSON, K., ROTHLISBERGER, M., AND HUMPHREYS, T.
Practical cryptographic civil GPS signal authentication. NAVI-
GATION: Journal of the Institute of Navigation (2012).

[53] ZHANG, J., CUI, X., XU, H., ZHAO, S., AND LU, M. Efﬁcient
signal separation method based on antenna arrays for GNSS mea-
coning. Tsinghua Science and Technology 24, 2 (2018), 216–225.

[54] ZHANG, K., AND PAPADIMITRATOS, P.

On the effects
of distance-decreasing attacks on cryptographically protected
GNSS signals. In Proceedings of the 2019 International Techni-
cal Meeting of The Institute of Navigation (2019), pp. 363–372.

15

