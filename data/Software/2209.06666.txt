Draft version September 15, 2022
Typeset using LATEX twocolumn style in AASTeX631

Tackling the Unique Challenges of Low-frequency Solar Polarimetry with the Square Kilometre Array
Low Precursor: Pipeline Implementation

Devojyoti Kansabanik ,1 Apurba Bera ,2, 1 Divya Oberoi

,1 and Surajit Mondal

3

1National Centre for Radio Astrophysics, Tata Institute of Fundamental Research, Pune University Campus, Pune 411007, India
2Inter-University Centre for Astronomy and Astrophysics, Post Bag-4, Ganeshkhind, Pune 411007, India
3Center for Solar-Terrestrial Research, New Jersey Institute of Technology, 323 M L King Jr Boulevard, Newark, NJ 07102-1982, USA

Submitted to ApJ

ABSTRACT

The dynamics and the structure of the solar corona are determined by its magnetic ﬁeld. Mea-
suring coronal magnetic ﬁelds is, however, extremely hard. The polarization of the low-frequency
radio emissions is one of the few observational probes of magnetic ﬁelds in the mid and high corona.
Polarimetric calibration and imaging of the Sun at these frequencies is challenging. The brightness
temperature and degree of polarization of the low-frequency solar radio emissions can vary by several
orders of magnitude. These emissions also show dramatic spectral and temporal variations. Hence,
to study these radio emissions, one needs high dynamic range spectro-polarimetric snapshot imaging.
The Murchison Wideﬁeld Array (MWA), a Square Kilometre Array (SKA) precursor, is exceptionally
well-suited for this purpose. Calibration and imaging of solar data to extract this information are,
however, signiﬁcant challenges in themselves - requiring a deep understanding of the instrument, ca-
pable sophisticated algorithms, and their reliable implementation. To meet these challenges we have
developed an unsupervised and robust polarization calibration and imaging software pipeline. Here
we present the architecture and some implementation details of this pipeline. It delivers high-ﬁdelity
and high-dynamic-range full polarimetric solar radio images at high spectro-temporal resolutions. We
expect this pipeline to enable exciting new science with instruments like the MWA. We also hope
that by not requiring a signiﬁcant prior background in radio interferometric imaging, this pipeline
will encourage wider use of radio imaging data in the larger solar physics community. The algorithm
implemented here can easily be adapted for future arrays like the SKA.

Keywords: The Sun(1693), Solar physics(1476), Solar corona(1483), Solar coronal radio emission(1993),
Polarimetry(1278), Spectropolarimetry(1973), Radio interferometers(1345), Radio interfer-
ometry(1346), Calibration(2179)

1. INTRODUCTION

Solar phenomena span an enormous range of time
scales, from solar cycle to ﬂares and in terms of energy
from the most massive coronal mass ejections (CMEs)
to the barely discernible nanoﬂares. It is now well un-
derstood that the solar magnetic ﬁeld is the primary
driver of all of these phenomena. These magnetic ﬁelds
also couple the solar atmosphere to the solar interior.

Corresponding author: Devojyoti Kansabanik
dkansabanik@ncra.tifr.res.in, devojyoti96@gmail.com

Hence, to understand coronal physics and dynamics it
is essential to measure and understand the ever-evolving
coronal magnetic ﬁelds. Very recently, Yang et al. (2020)
have successfully demonstrated a method of measuring
the global coronal magnetic ﬁelds in the range 1.05–
1.35 R(cid:12) using near-infrared observations, where R(cid:12) is
the solar radius. Measuring coronal magnetic ﬁelds is
also a key objective for the Daniel K. Inouye Solar Tele-
scope (DKIST; Rast et al. 2021), though these measure-
ments are likely to remain limited to less than 1.5 R(cid:12).
The observed polarization properties of low-frequency
coronal radio emissions can serve as excellent probes

2
2
0
2

p
e
S
4
1

]

R
S
.
h
p
-
o
r
t
s
a
[

1
v
6
6
6
6
0
.
9
0
2
2
:
v
i
X
r
a

 
 
 
 
 
 
2

Kansabanik et al.

of coronal magnetic ﬁelds, even at middle and higher
coronal heights. This is because the magnetic ﬁeld af-
fects the polarization of radio emissions arising from the
coronal plasma (Alissandrakis & Gary 2021). Polariza-
tion observation also enables a detailed understanding
of the emission mechanism of these low-frequency coro-
nal radio emissions. Many successful examples exist in
the literature, though their numbers have been rather
small and these studies have remained limited to com-
paratively brighter and highly polarized emissions. Most
of these studies have relied on dynamic spectra, for in-
stance, studies of diﬀerent types of solar radio bursts by
McLean & Labrum (1985); Hariharan et al. (2014); Ku-
mari et al. (2017); Pulupa et al. (2020); Ramesh et al.
(2022) etc., and thermal emission from CME plasma by
Ramesh et al. (2021).
In only a handful of instances,
either the information of spatial location (e.g. Mercier
1990; Morosan et al. 2022) and/or spatial structure (e.g.
McCauley et al. 2019; Rahman et al. 2020) of the sources
are also available. Although, very faint circular polar-
ization of gyrosynchrotron emission from CME plasma
(Bastian et al. 2001) and quiet Sun thermal emission
(Sastry 2009) can be used to measure the magnetic ﬁeld
of CME and the quiet solar corona, detection of these
has not been reported yet.

High-ﬁdelity spectro-polarimetric solar imaging stud-
ies at low radio frequencies are very rare. Brightness
temperature (TB) of solar radio emission varies by as
much as about nine orders of magnitude, and their frac-
tional polarization can vary by about two orders of mag-
nitude (McLean & Labrum 1985; Kansabanik 2022).
These emissions can change drastically over short tem-
poral and spectral spans. Very often, faint emissions can
simultaneously be present with very bright emissions.
This imposes the need for high dynamic-range and high-
ﬁdelity polarimetric imaging over short temporal and
spectral spans. These challenging requirements along
with the technical and instrumental limitations at low
radio frequencies have severely limited polarimetric so-
lar radio imaging studies, despite their well-appreciated
importance.

High-ﬁdelity snapshot solar imaging with a radio in-
terferometer requires an interferometric array with a
dense distribution of antenna elements over a compara-
tively small footprint. This essential requirement is met
by one of the new technology instruments, the Murchi-
son Wideﬁeld Array (MWA; Lonsdale et al. 2009; Tin-
gay et al. 2013; Wayth et al. 2018), a Square Kilometre
Array (SKA) (Dewdney et al. 2009) precursor. The 128
antenna elements of the MWA are distributed over a re-
gion of up to 5 km diameter making it exceptionally well
suited for high-ﬁdelity imaging over short temporal and

spectral scales. Though the MWA data are intrinsically
capable of yielding high-ﬁdelity solar images, doing so
involves surmounting several challenges. Some of these
challenges are – issues due to the Sun being an excep-
tionally bright source, ionospheric eﬀects, issues arising
due to large data volumes, and the in-feasibility of the
usual approach to interferometric imaging. These is-
sues have successfully been dealt with in the robust cal-
ibration and total intensity imaging pipeline developed
by Mondal et al. (2019), christened Automated Imaging
Routine for Compact Arrays of the Radio Sun (AIR-
CARS). The high-ﬁdelity spectroscopic snapshot images
it delivers represent the state-of-the-art and have led
to several interesting results at low radio frequencies,
such as the discovery of quasi-periodic pulsations of so-
lar radio bursts (Mohan et al. 2019b,a; Mondal & Oberoi
2021), the discovery of Weak Impulsive Narrowband
Quiet Sun Emissions (WINQSEs; Mondal et al. 2020b;
Mondal 2021) and the measurement of plasma parame-
ters of CMEs using gyrosynchrotron emission from the
CME plasma (Mondal et al. 2020c).

AIRCARS was designed for total intensity imaging.
But unlocking the potential of low radio frequency solar
science requires polarimetric imaging, as argued at the
beginning of this section. An algorithm, Polarimetry us-
ing Automated Imaging Routine for the Compact Arrays
of the Radio Sun (P-AIRCARS), has been developed to
achieve this and been presented in Kansabanik et al.
(2022b) (Paper-I hereafter). In addition to providing the
functionality for polarimetric imaging, P-AIRCARS also
oﬀers several improvements over AIRCARS including a
modular architecture, an improved calibration strategy,
and more eﬃcient parallelization. This companion pa-
per describes the implementation and architecture of P-
AIRCARS.

We organize the paper as follows. We ﬁrst discuss
the design principles of P-AIRCARS in Section 2. We
brieﬂy describe the calibration algorithm in Section 3.
Section 4 describes the architecture of the pipeline. A
custom-developed ﬂagging module for P-AIRCARS is
described in Section 5. Section 6 describes the choices
of parameters for calibration and imaging followed by
salient features of P-AIRCARS in Section 7. We discuss
current limitations and future works in Section 9 and
ends with the conclusions in Section 10.

2. DESIGN PRINCIPLES OF P-AIRCARS

The MWA operates from 80 to 300 MHz with an in-
stantaneous bandwidth of 30.72 MHz, which can be split
into 24 course channels of 1.28 MHz each and distributed
across the entire band. At the MWA almost half of the
observed band is lost to instrumental artifacts.MWA

Implementation of P-AIRCARS

3

Figure 1. Schematic diagram of P-AIRCARS highlighting its main modules. – Two main modules of P-AIRCARS
are paircarstools and paircarstasks. CubiCal or its new implementation, QuartiCal, is an independent calibration software (Kenyon
et al. 2018; Sob et al. 2019), which has been customized and integrated with P-AIRCARS. paircarsdata and paircarsutils are
the two modules to make the P-AIRCARS user-friendly and provide MWA-speciﬁc information. Components of each of these
modules are described in Section 4.

solar observations are typically done with 10 kHz and
0.5 s resolution. Making images at this temporal and
spectral resolution over the useful part of the complete
band leads to approximately 370,000 images for an ob-
serving duration of 4 minutes.
In its next phase, the
MWA is expected to have twice as many antenna el-
ements, a much larger instantaneous bandwidth, and
higher time and frequency resolution. This will dramat-
ically increase the data volumes generated by the ar-
ray. The future SKA is expected to produce even larger
volumes of data. Performing the calibration and snap-
shot spectro-polarimetric imaging of such large volumes
of data manually is infeasible. One necessarily needs a
software pipeline, ideally with the following capabilities
:

1. The calibration and imaging algorithm and imple-

mentation must be robust.

2. It should be capable of unsupervised operation.

3. The algorithms it implements should be data-

driven and not rely on ad-hoc assumptions.

4. The software implementation should provide ef-
ﬁcient parallelization which scales well with the
available hardware resources.

While AIRCARS provided state-of-the-art total inten-
sity images, it did not meet the last two of the require-
ments stated above. AIRCARS made some ad-hoc as-
sumptions while choosing the calibration and imaging
parameters, and the calibration approach limited the
parallelization only to the frequency axis. Hence, adding
polarization calibration to the AIRCARS framework is
not suﬃcient. We take this opportunity of adding polari-
metric calibration to completely redesign the software
framework and calibration approach to overcome these
limitations in P-AIRCARS. In addition, P-AIRCARS
has also been developed to be deployable across a variety
of hardware environments – ranging from laptops and
workstations to high-performance computers (HPCs).
This makes it very ﬂexible.

Radio interferometric imaging inherently involves a
steep learning curve. The calibration and imaging pro-
cesses require making careful tuning of the algorithms

paircarstoolspaircarstasksCubiCal/ QuarticalpaircarsutilspaircarsdataTools to access MS, estimate selfcal and imaging parameters, perform a single selfcal round, etc. (Independent of solar constraints)Tasks to perform self-calibration, checks selfcal convergences, control parallelization, final imaging. (Tasks are written specifically for solar observations)Independent full Jones calibration module (Kenyon et al. 2018), optimized for P-AIRCARS. Some useful tools for plotting visibilities and images, monitoring progress remotely, customised tasks etc.Necessary data to run P-AIRCARS, e.g. MWA primary beam model, calibrator models, etc.P-AIRCARS4

Kansabanik et al.

involved, the choice of which determines the quality of
the ﬁnal images. This, in turn, requires the users to
develop a detailed understanding of the data and the
instrument involved. A consequence has been that solar
radio imaging has been the domain of a comparatively
small number of expert practitioners and has not found
widespread adoption in solar physics, as compared to
other wavebands. One of the objectives for P-AIRCARS
is to overcome this barrier, enable scientiﬁc results from
the new generation of much more capable radio instru-
mentation, and help radio analysis become mainstream.
To achieve this, P-AIRCARS has been designed to work
without requiring any radio interferometry-speciﬁc in-
put from the user. It makes initial choices for parame-
ters for calibration and imaging based on the data it is
operating on.

As a corollary of the above requirement, P-AIRCARS
is designed to be fault-tolerant, in the sense that when it
encounters issues, it makes smart decisions about updat-
ing the parameters for calibration and imaging based on
the nature of the issue faced. For a well-informed user,
P-AIRCARS allows complete ﬂexibility to tune the al-
gorithms as desired. The rest of the paper describes
the software framework, calibration, and parallelization
strategies adopted for P-AIRACRS following the design
principles described here.

where, Jis are the 2 × 2 Jones matrices representing the
antenna-dependent instrumental and atmospheric prop-
agation eﬀects, and Nij is the additive noise of the in-
strument.
It is standard practice in interferometry to
break Jis into multiple terms, each describing an instru-
mental and/or atmospheric propagation eﬀect. At low
radio frequencies, the ionospheric propagation eﬀect is
the only major atmospheric eﬀect. We decompose Jis
as:

Ji(ν, t, (cid:126)l) = Gi(t) Bi(ν) Kcross(ν, t) Di(ν, t)

× Ei(ν, t, (cid:126)l)

(2)

where, ν, t and (cid:126)l represent frequency, time, and direction
in the sky plane. These individual terms in Equation 2
for antenna i are:

1. Gi(t) : Product of time-dependent instrumental

and ionospheric gain.

2. Bi(ν) : Instrumental bandpass.

3. Kcross(ν, t): Phase diﬀerence between the recep-
tors for the two orthogonal polarization (X and Y,
in the case of MWA) for the reference antenna.
This is also referred to as the cross-hand phase.

3. BRIEF DESCRIPTION OF THE CALIBRATION

4. Ei(ν, t, (cid:126)l) : Direction dependent primary beam

ALGORITHM

model.

We have implemented a robust polarization cali-
bration algorithm (Kansabanik et al. 2022b) in P-
AIRCARS, developed based on the Measurement Equa-
tion framework (Hamaker et al. 1996; Hamaker, J. P.
2000). Being an aperture array instrument, the MWA
has a large ﬁeld of view (FoV), and high primary beam
sidelobes (Neben et al. 2015; Sokolowski et al. 2017; Line
et al. 2018). Hence, at the MWA, calibrator observations
during the daytime are contaminated by solar emissions.
Hence, P-AIRCARS implements a self-calibration-based
calibration algorithm, which uses some well-known prop-
erties of the low-frequency quiet solar emissions (Kans-
abanik et al. 2022b) along with the primary beam re-
sponse of the MWA antenna tiles (Sokolowski et al.
2017). This algorithm is described in detail in paper-I.
Here we describe it brieﬂy to place the implementation
details in context.

An interferometer measures the cross-correlations be-
tween its antenna pairs. The measured cross-correlation
(visibility), V (cid:48)
ij, between antennas i and j can be ex-
pressed in terms of its true value, Vij through the Mea-
surement Equation (Hamaker, J. P. 2000),

ij = Ji Vij J †
V (cid:48)

j + Nij

(1)

5. Di(ν, t) : Direction independent error on the pri-

mary beam model.

To obtain Vij from V (cid:48)

ij, each of these terms needs to
be estimated precisely and corrected for. They are esti-
mated in three major calibration steps:

1. Intensity self-calibration :

Intensity self-
calibration uses the unique array conﬁguration of
the MWA with a condensed core with a large num-
ber of antennas distributed over a comparatively
small array footprint. Gi(t)s are estimated and
corrected in this step (Mondal et al. 2019; Kansa-
banik 2022).

2. Bandpass self-calibration :

Bandpass self-
calibration estimates and corrects for Bi(ν)s over
each of the 1.28 MHz coarse channels. Data from
quiet solar times are used for this and the inte-
grated solar ﬂux density is assumed to remain con-
stant across a coarse channel. The inter-coarse
channel bandpass is corrected using an indepen-
dent robust method (Kansabanik et al. 2022a) to
determine an absolute ﬂux density scale.

Implementation of P-AIRCARS

5

3. Polarization calibration : This involves ﬁrst
correcting for Kcross(ν, t), Ei(ν, t, (cid:126)l) which are
estimated independently. Next the Dis are es-
timated and corrected using a perturbative self-
calibration-based algorithm described in Paper-I.

These three calibration steps form the three main pillars
of the full Jones calibration algorithm of P-AIRCARS.

4. ARCHITECTURE OF THE PIPELINE

P-AIRCARS architecture is highly modular.

It has
been written with ease of maintenance and adoption to
other interferometers with compact core conﬁgurations
in mind. A large fraction of the P-AIRCARS is written
in Python 3. Some of its core modules used for calibra-
tion and ﬂagging are written in C/C++. A schematic
diagram of P-AIRCARS describing all of its modules is
shown in Figure 1.

Two core modules of P-AIRCARS are paircarstools
and paircarstasks and are shown by black boxes in Fig-
ure 1. paircarstools contains functions and classes to
perform full polarization self-calibration for any radio
interferometric observation. Its functions do not impose
any constraint(s) speciﬁc to solar observation and/or
the interferometer used. The optimization speciﬁc to
solar observing is done by paircarstasks, which uses the
functionality provided by paircarstools to perform the
self-calibration tasks, as mentioned in Section 3. pair-
carstasks is written in a manner to remain independent
of the interferometer used. Some of the functions of pair-
carstasks make use of some well-known physical proper-
ties of the Sun.

The third module, CubiCal,

is an independent full
Jones calibration software suite developed by Kenyon
et al. (2018) and Sob et al. (2019). We adopted it in
P-AIRCARS with some customization. A newer version
of CubiCal, called QuartiCal1, has become available re-
cently, and its integration in P-AIRCARS is currently
underway. The paircarsutils module provides the utili-
ties for the deployment of P-AIRCARS across a range
of hardware and software architectures and its eﬃcient
parallelization. It is currently optimized for the use of
MWA data. The paircarsdata module provides a collec-
tion of information speciﬁc to the MWA (e.g. the MWA
beam shapes (Sokolowski et al. 2017)) and MWA obser-
vations (e.g. database of solar observations, calibration
database (Sokolowski et al. 2020)).

All functions of these modules can broadly be divided
into two major categories – Calibration block and Imag-
ing block. Instead of describing these modules function-

by-function, we present the workﬂows of these two major
Inter-
blocks in the Sections 4.1 and 4.2 respectively.
ested users can ﬁnd the details of these functions in the
P-AIRCARS documentation available online2.

4.1. Implementation of Calibration Block

The ﬁrst major block of the P-AIRCARS is the cal-
ibration block. Calibration is done in three steps as
discussed in Section 3. Each of these steps takes several
iterations to converge.
Intensity self-calibration takes
the maximum number of iterations to converge. Since
the antenna gains vary over time and frequency, in prin-
ciple, one should perform self-calibration for each times-
tamp and frequency channel independently. In the case
of standard astronomical observations, the sky model is
assumed to be constant over a much longer time and
frequency span, hence it is not necessary to make an in-
dependent source model for each neighboring time and
frequency slice. However, due to the intrinsic spectro-
temporal variability of solar emissions, one is forced
to make an independent source model for every time
and frequency slice during self-calibration. Performing
self-calibration for every time and frequency slice is ex-
tremely compute-intensive. As the calibration for each
of the time and frequency slices needs to be done in-
dependently, it can be cast in an embarrassingly paral-
lel framework. This is exactly what is implemented in
P-AIRCARS. The ﬂowchart of the calibration block is
shown in Figure 2.

To start the process of calibration, for datasets with
more than three 1.28 MHz coarse channels, three spec-
tral channels are chosen from three diﬀerent coarse chan-
nels spanning the entire bandwidth of the data. Else,
a spectral channel is chosen from each of the available
three or fewer coarse channels. Each of these spectral
channels is deﬁned as a “Reference frequency” (RF).
Next, a time slice, deﬁned as “Reference time” (RT),
is chosen for each of these RFs separately on which to
perform the calibration. These are referred to as “Refer-
ence Time and Frequency” (RTF) slices. Figure 3 shows
an example with four coarse channels with their bound-
aries marked by dashed magenta lines. RTFs are shown
by blue cells in this Figure. The criteria for choosing
RTFs are discussed in Section 4.1.3. The intensity self-
If calibrator obser-
calibration is performed at RTFs.
vations are available, P-AIRCARS ﬁrst applies the gain
solutions obtained from them. Otherwise, intensity self-
calibration is initiated on the raw data. The major steps
of the intensity calibration for RTFs are shown by the

1 https://pypi.org/project/quartical/

2 https://p-aircars.readthedocs.io/en/latest

6

Kansabanik et al.

Figure 2. Flowchart describing the calibration block of P-AIRCARS. Calibration blocks can be divided into four
major blocks. Calibration steps for the RTFs are shown inside the blue box. The dark grey box shows the diﬀerential intensity
self-calibration for a common timeslice for RFs. Intensity self-calibration for other times and frequencies are shown inside the
orange box. The green box and purple box show the bandpass and polarization self-calibration steps respectively.

blue box in Figure 2. The calibration process is initi-
ated using the highest time resolution available in the
data. If insuﬃcient data is deemed to be available for
calibration (e.g. due to low-signal-to-noise of the cali-
bration solutions), the temporal span of the data used
for calibration is progressively increased in an attempt
to arrive at reliable gain solutions. Care is taken to not
exceed the timespans over which solar emissions or iono-
spheric conditions are expected to evolve. The default
value of this maximum timespan is set to 10 s, though
the user has the ﬂexibility to change it. The intensity
self-calibrations of RTFs are done in parallel. Once this
is done the pipeline moves to the next stage, namely
bandpass self-calibration.

Sokolowski et al. (2020) demonstrated that the varia-
tion of phases across the 80–300 MHz band for the MWA
antenna tiles can be well modeled by a straight line and
that the phase variation across each 1.28 MHz coarse

channel is rather small. However, the variation of the
amplitude across a single 1.28 MHz coarse channel can-
not be modeled as a straight line. Hence, while it is rea-
sonable to interpolate the phases across the MWA band
using a linear model, this approach is not suitable for
the amplitude part of the antenna gain solutions. The
phase variations over a large bandwidth cause a signif-
icant frequency-dependent shift of the source from the
phase center. Small phase shifts can be corrected using
an image-based correction described in Section 4.1.5. To
avoid the problem of large phase shifts, the phase part
of the gain solutions are interpolated across the band,
while the amplitudes are held constant at unity. If the
RTs are the same for all RTFs, the phase part of the
gain solutions at RTFs are interpolated across frequency.
Otherwise, a common time slice is chosen for all RFs,
and a gain solution is obtained by diﬀerential intensity
self-calibration after applying the gain solution from the

Input MeasurementSetDetermining reference time and channelsIntensity self-calon reference time and channelsMore dataflagged?Maximum temporal width reached?Expand temporal width of dataYesNoPerform differentialintensity self-calfor a common timeApply interpolated phase solutionsNoYesSplit data on certain time frequency gridPerform differentialintensity self-calSpliting each coarse channels at band-pol reference time Perform bandpass calibrationApply bandpass solutions on each coarse channelPerform polarization calibrationEnd calibrationGain solutionforBPRT?Perform differentialintensityself-cal for BPRT NoYesImplementation of P-AIRCARS

7

ble and applied during imaging. The choice of RTF and
BPRT relies on identifying a time slice with a quiet solar
emission in the ﬂux density calibrated dynamic spectra.
We describe the process of ﬂux density calibration of the
dynamic spectra ﬁrst in Section 4.1.1, followed by the
details of the criteria for the choice of RTF and BPRT
in Sections 4.1.3 and 4.1.4 respectively.

4.1.1. Initial Flux-density Calibrated Dynamic Spectrum of

the Sun

The ﬂux density calibrated dynamic spectrum is made
using the method described by Oberoi et al. (2017). To
compute these dynamic spectra, we have used an im-
proved primary beam model for the MWA (Sokolowski
et al. 2017) along with the more precise estimation of
receiver temperatures (Ung et al. 2020). The results
from this are consistent with the independent and robust
image-based ﬂux density calibration method (Kansa-
banik et al. 2022a).

An example ﬂux density calibrated dynamic spectrum
is shown in the top panel of Figure 4. Two sample ﬂux
density calibrated images using the method Kansabanik
et al. (2022a) is shown in the bottom panel of Figure
4. To compare the TB from the dynamic spectrum with
those from the ﬂux calibrated TB images, one needs to
integrate over the radio Sun. We use the analytical ex-
pression given in Oberoi et al. (2017) to estimate the
size of the radio Sun over which to perform this integra-
tion. These are shown by blue circles in the bottom pan-
els of Figure 4. The ﬁrst timestamp, 06:12:50.25 UTC,
marked by a green point in the dynamic spectrum, has
a TB of 0.92 MK. The disc averaged TB obtained from
the image shown in the bottom left panel of Figure 4 is
0.7 MK. For the second timestamp, 06:13:06.25 UTC,
marked by a cyan point in the dynamic spectrum, has
TB of 18 MK. The corresponding disc averaged TB ob-
tained from the image shown in Figure 4 is 23 MK. The
values obtained from both, the images and the dynamic
spectrum, are similar. This gives us the conﬁdence that
the initial ﬂux density calibrated dynamic spectrum can
reliably be used to choose the BPRT.

4.1.2. Identifying Bad Data from the Dynamic Spectrum

for Solar Observations

Even though the MWA is situated in an exceptionally
low radio frequency interference (RFI) environment and
is a very stable instrument, occasionally the MWA data
does suﬀer from RFI and/or instrumental issues. It is
important to ensure that only healthy data is examined
while determining the BPRT and RTF. Sometimes, ac-
tive solar emissions can mimic bad data, making it hard
to identify bad data based on statistical characteristics
in the time and frequency plane. We use the fact that for

Figure 3. Time-frequency grid for parallel calibra-
tion. Blue blocks represent the RTFs. The underlying work-
ﬂow for these blue cells is shown by the blue block in Figure 2.
If RTs are not the same for all the RFs, the phase part of the
gain solutions are interpolated on a common timeslice shown
by the dark grey cells. Orange blocks represent the time and
frequency slices where diﬀerential intensity self-calibration is
performed. Bandpass and polarization calibrations are per-
formed at the same time and frequency slices for individual
coarse channels, which are marked by green. Pink dotted
lines demarcate the 1.28 MHz wide coarse channels.

RT for that RF, as shown by dark grey cells in Figure
3. The phase part of the gain solutions of this common
timeslice is interpolated across frequency.

Next, a time grid is deﬁned for each of the coarse chan-
nels for which the diﬀerential gain solutions are com-
puted. These grid points are shown by orange cells in
Figure 3. Diﬀerential self-calibrations are performed in
parallel as shown in the orange box in Figure 2. Simul-
taneously, bandpass and polarization calibration for a
single coarse channel is performed on a single timeslice
deﬁned as “band-pol reference time (BPRT)”. Bandpass
and polarization calibrations for a single coarse channel
are done sequentially, while they are done in parallel for
diﬀerent coarse channels. The criteria for the choice of
BPRT are discussed in Section 4.1.4. The BPRTs are
shown by the green boxes with purple borders in Figure
3, and bandpass and polarization calibration blocks are
marked in green and purple in Figure 2. If the gain solu-
tions are not available at BPRT, a diﬀerential intensity
self-calibration is performed at BPRT at RF.

Once all the calibrations are complete, this informa-
tion is compiled in a single calibration table spanning the
entire time and frequency range. Linearly interpolated
gain solutions are drawn from this ﬁnal calibration ta-

Time stamps Frequency Channels8

Kansabanik et al.

Figure 4. Comparison of the dynamic spectrum with the ﬂux calibrated brightness temperature maps. Top
panel: Dynamic spectrum obtained following the method developed by Oberoi et al. (2017). Bottom panel: Left image is
for 06:12:50.25 UTC and the right image is for 06:13:06.25 UTC. For 06:12:50.25 UTC, marked by a green dot, the average TB
obtained from the dynamic spectrum is 0.92 MK, which is close to the disc averaged value, 0.7 MK, obtained from the image.
For 06:13:06.25 UTC, marked by a cyan dot, the average TB obtained from the dynamic spectrum is 18 MK, which is also
similar to the disc averaged value, 23 MK, obtained from the image. The size of the disc is shown by the blue circles, which are
40 arcmins in size.

0.92 MK 06:12:17.7506:13:03.75 06:13:49.7506:14:47.2506:15:44.75Timestamps111.0113.8116.5119.2122.6125.3Frequency (MHz)246810121416Brightness temperature (MK)18 MK0.92 MKMean brightness temperature : 0.7 MK                   Mean brightness temperature : 23 MK    Implementation of P-AIRCARS

9

Figure 5. Demonstration of ﬂagging of the bad data based on solar dynamic spectrum. Top panel : It shows
the dynamic spectrum of averaged visibility amplitudes for long baselines (longest 10 % of the baselines) divided by average
mean visibility amplitudes of short baselines (< 20 m). The left panel shows the dynamic spectrum for XX polarization and
the right panel shows it for YY polarization. Middle panel : The visibility amplitude of a healthy time is plotted against the
uv-distance. Purple points represent XX polarization and grey points represent the YY polarization. Bottom panel : The
visibility amplitude of a bad timestamp, 01:25:33.75 UTC, is plotted against the uv-distance. This time is marked by the red
box in the top left panel. Purple points represent XX polarization and grey points represent the YY polarization.

050100150200250300350400Timestamps02468101214Spectral channelsXX polarization0.020.040.060.080.100.1201:25:33.75 UTC050100150200250300350400Timestamps02468101214Spectral channelsYY polarization0.00250.00500.00750.01000.01250.01500.017510

Kansabanik et al.

the MWA the amplitude distribution with uv-distance
for healthy active/quiet Sun emissions and bad data are
remarkably diﬀerent to identify the latter. For the quiet
Sun, the visibility distribution represents a disc of about
40 arcmins. It has been found that the compact sources
usually associated with active emissions are slightly re-
solved at MWA resolution (Mohan et al. 2019b; Mohan
2021a; Mondal & Oberoi 2021; Mohan 2021b). This
implies that the visibility distribution for these slightly
resolved sources must show a slow drop in amplitudes
with increasing baseline length. On the other hand, the
small footprint of the MWA and the fact that the RFI
sources are mostly far away imply that the entire array
tends to see the same RFI environment, and shows a rel-
atively constant visibility amplitudes distribution with
uv-distance.

Flux density, and hence the corresponding visibility
amplitudes, of the Sun, can vary by many orders of
magnitude (McLean & Labrum 1985; Kansabanik 2022).
The strength of the RFI also can vary by multiple or-
ders of magnitude. Hence, we deﬁne a quantity that is
insensitive to the magnitude of the visibility amplitudes
themselves but relies on their distribution as a function
of baseline length to identify bad data. This quantity is
the ratio of mean visibility amplitudes of long and short
baselines (< 20 m), ra. While the short baseline lengths
are always the same, P-AIRCARS uses the longest 10 %
of the baselines to calculate the mean visibility ampli-
tude for long baselines.

Figure 5 shows an example to illustrate the eﬃcacy
of this approach. The top panels show the dynamic
spectra of ra. The middle panels show the amplitude
distribution for a healthy time and frequency slice for
XX (left panel) and YY (right panel) polarization. The
bottom panels show the amplitude distribution for XX
(left panel) and YY (right panel) polarization for the
time slice 01:25:33.75 UTC. The diﬀerence between the
visibility distribution of the healthy and bad data is self-
evident. The data for only the XX polarization is bad.
The time and frequency spans for which this is the case
are identiﬁed with high contrast in the top left panel.
The data for the YY polarization for this time slice is
good, and hence it does not stand out in the ra dy-
namic spectrum. A numerical threshold of 5σ is used to
identify bad data in the median subtracted ra dynamic
spectra, where σ refers to the rms of the ra dynamic
spectra. This demonstrates the capability of ra dynamic
spectra to unambiguously and eﬃciently distinguish be-
tween healthy and bad data.

This method is eﬃcient at identifying the bad time
and frequency slices when the entire array faces some
issues. Situations, where RFI aﬀects only a small part

of the array, are rare at the MWA, and independent en-
gineering logs identify all known tiles and receivers with
technical issues. Hence this approach is quite adequate
to identify bad data in an automated and unsupervised
manner. Finer levels of identiﬁcation and ﬂagging of
bad data are carried out at later stages (Section 5).

4.1.3. Choice of Reference Time and Frequencies

The calibration solutions from the RT are applied to
all other timestamps as the initial gain solutions. Hence,
it is important to choose a timeslice that enables us to
determine gain solutions for each of the antenna tiles
with good signal-to-noise. An additional requirement
is that the image for this timeslice should also show
the quiet Sun disc with suﬃcient ﬁdelity so that it can
be used for alignment of solar images as discussed in
Section 4.1.5. For the current levels of imaging ﬁdelity
achievable with P-AIRCARS using MWA data, these
requirements are typically met when a compact source
with TB ≤ 107 K is present on the Sun. The presence
of much brighter sources makes it harder to image the
quiet Sun disc with suﬃcient ﬁdelity. The absence of
such a compact feature can limit the signal-to-noise of
the gain solutions.

Dirty images can be made for all of the time and fre-
quency slices. If prior gain solutions from a calibrator
observation are available, they are applied before this
imaging. Even when no prior gain solutions are avail-
able, the MWA is coherent enough to be able to proceed
with imaging, as has been demonstrated by Kansabanik
(2022).

The TB of the solar emission can vary drastically with
time, but it does not vary by a large amount over a sin-
gle coarse channel of 1.28 MHz. Hence, the rms noise of
the dirty images can vary across time due to changes in
solar ﬂux density, but it does not vary drastically across
frequency. An example dynamic spectrum of the rms
measured far away from the Sun is shown in Figure 6
which shows these characteristics. We have examined
several datasets and established that the temporal vari-
ations of the rms noise are largely independent of the
spectral channel over this small bandwidth.

At ﬁrst, time slices that meet the TB ≤ 107 K re-
quirement are identiﬁed from the ﬂux density calibrated
dynamic spectrum. There are often multiple timeslices
that meet this requirement. First dirty images are made
for every time slice meeting this requirement, for a single
arbitrarily chosen spectral slice. The time slice with the
highest imaging dynamic range is chosen to be the RT.
The RF channel is identiﬁed next by following a similar
procedure along the frequency axis for the chosen RT.

4.1.4. Choice of Band-pol Reference Time

Implementation of P-AIRCARS

11

the phase center of the radio image, which is set at the
center of the optical disc.

The region with more than 20σ detection signiﬁcance
is considered to be the solar disc, where σ is the rms
noise in the image measured close to the Sun. To avoid
the intensity weighting, we deﬁne a mask with all the
regions more than 20σ set to unity and the rest of the
image set to zero as shown in the middle panel of Fig-
ure 7. The center of mass of the masked region is cho-
sen to be the center of the solar radio disc marked by
the red circle. The phase center of the source model is
shifted to align with the blue circle. Using this aligned
source model, a few rounds of phase-only self-calibration
are performed. When this converges, the solar disc of
the ﬁnal image shown in the right panel of Figure 7
lies at the phase center of the image. The ﬁnal set of
self-calibration solutions is then applied to the entire
dataset, and bring it to a common phase center.

4.1.6. Flux Density Calibration

Another common limitation of any self-calibration-
based approach is the loss of information about the
absolute ﬂux density scale. At the MWA, when dedi-
cated calibrator observations are available with the same
spectral and attenuation conﬁguration as solar obser-
vation, an absolute ﬂux density scale is obtained from
the gain solution of the calibrator observations. When
no calibrator is available with the above-mentioned cri-
teria, P-AIRCARS does ﬂux density calibration using
an independent method developed by Kansabanik et al.
(2022a) and is included in the bandpass self-calibration
solutions.

4.2. Implementation of Imaging Block

Once calibration solutions spanning the time and fre-
quency ranges of interest are available, P-AIRCARS
proceeds to image. In addition to imaging, this block
also corrects the images for the instrumental primary
beam. The problem is essentially embarrassingly par-
allel, parallelization of the imaging block is straightfor-
ward. The key requirement here is to allow the user to
allocate a chosen fraction of resources to P-AIRCARS
and to make optimal use of these resources. This is
achieved using a custom-developed parallelization algo-
rithm described in Section 4.2.1. The ﬂowchart of the
entire imaging block is shown in Figure 8. The function-
ality in the blue box marked as ‘single imaging block’ is
executed in parallel for the diﬀerent time and frequency
slices and is described in Section 4.2.2.

4.2.1. Parallelization of Imaging Block

As mentioned in Section 2, the total number of im-
ages to be produced can be as many as 370, 000 for ob-

Figure 6. Dynamic spectrum of image rms. The spec-
tral and temporal span of the dynamic spectrum is 1.28 MHz
and 240 s respectively. There is signiﬁcant temporal varia-
tion in the image rms, while that along the spectral axis is
barely evident.

As the requirements for the bandpass and polariza-
tion calibration are diﬀerent from those for the initial
calibration, the criteria for the choice of BPRT are also
diﬀerent from those for the RTF. For reasons discussed
in detail by Kansabanik et al. (2022a,b), bandpass and
polarization calibration require data taken under quiet
solar conditions. The quiet solar time is identiﬁed in
the given data, using the ﬂux density calibrated dy-
namic spectrum obtained as described in section 4.1.1.
At ﬁrst, a 1.28 MHz frequency averaged time series is ob-
tained from the dynamic spectrum for a coarse channel.
The timestamps with TB varying between 105 − 106 K
are chosen to represent the quiet sun times. Among
these, the timestamp with the maximum DR obtained
from frequency averaged dirty images is selected as the
BPRT. The BPRT may be diﬀerent from the RTF cho-
sen for the intensity self-calibration, and also can be
diﬀerent for diﬀerent coarse channels, as indicated in
Figure 3.

4.1.5. Alignment of the Center of Solar Radio Disc

A common problem for any self-calibration-based ap-
proach is the loss of information about the absolute
phase. The images for the RTFs are aligned using
an image-plane-based method. Intensity self-calibration
ﬁrst performs phase-only self-calibration, followed by
amplitude-phase self-calibration (Mondal et al. 2019;
Kansabanik et al. 2022b). Once the phase-only intensity
self-calibration has converged, an image with the well-
demarcated solar disc is available (Left panel of Figure
7). The desired phase center of the solar disc is the
center of the optical solar disc. The blue circle marks

010203040Timestamps02468101214Spectral channels0.60.40.20.00.20.40.60.8rms (uncalibrated unit)12

Kansabanik et al.

Figure 7. Alignment of the solar radio disc center with the optical solar disc center. Left panel: Image after
phase-only self-calibration is shown. The center of the optical solar disc shown by the blue dot is not at the center of the radio
disc. Middle panel:
It shows the mask of the solar disc and the red dot represents the center of the radio disc. Right panel:
Final image after alignment. The center of the optical and radio disc coincide after the alignment.

Figure 8. Flowchart describing the imaging block of P-AIRCARS. A single imaging is shown inside the blue shaded
box.

Measurement setApply gain solutions on splited datasetPerform Stokes I,Q,U,VimagingCorrect the MWAprimary beamresponseDetermine DRLow DR ?YesPerformdifferentialcalibrationPerform flaggingon residualNoUser wantflagging?YesNoFinal image Cal/flag done?YesNoImaging instance available?Allimagingdone?FinishedYesNoYesNoSingle imaging blockSplit in time and frequency slicesImplementation of P-AIRCARS

13

servation with a 30.72 MHz bandwidth and 4 minutes
duration. The number of imaging threads required for
this task is much larger than the compute capacity avail-
able with most machines. Hence, a scalable mechanism
for their eﬃcient parallelization is required. Whenever,
the number of imaging jobs, Njob, is smaller than the
available CPU threads, Nthread, all jobs are spawned si-
multaneously. Each job is assigned n numbers of CPU
threads, where n is the closet integer of Nthread/Njob.
Otherwise, P-AIRCARS allocates three CPU threads for
each single imaging block. Hence, the Njob, which can
be spawned simultaneously, is given by:

Njob =

Nthread
3

(3)

. Diﬀerent imaging jobs may take diﬀerent run times.
Hence, to utilize the hardware resources eﬃciently, as
soon as one imaging job is done, a new one is spawned.
This process continues until all imaging jobs have been
spawned.

4.2.2. Single Imaging Block

The single imaging block makes the image of a sin-
gle time and frequency slice and is marked by the blue
shaded box in Figure 8. The imaging block oﬀers the
users the choice of using either WSClean (Oﬀringa et al.
2014) or CASA (McMullin et al. 2007), with the default
being set to WSClean.
Imaging parameters are deter-
mined from the data, as discussed in Section 6.2. Users
can choose to either do full polarimetric imaging or only
total intensity imaging.

First, the ﬁnal calibration solutions are applied to the
data. This is followed by a shallow deconvolution (10-
σ threshold) to ensure that no spurious emission gets
included in the source model. Despite the shallowness
of this deconvolution, it is suﬃcient to provide a good
check for imaging quality. The DR of these images is
compared with the minimum DR (DRmin) of the im-
ages made during the process of calibration. If the DR
of an image after shallow deconvolution is found to be
smaller than a pre-deﬁned fraction of DRmin, an ad-
ditional round of calibration is performed to account
for the diﬀerential antenna gain variations which might
have led to the drop in the DR. This pre-deﬁned value
is set to 10% by default.
If the user chooses to per-
form ﬂagging during the ﬁnal imaging, independent of
whether additional calibration is required or not, a single
round of ﬂagging is done on the residual visibilities us-
ing a custom-developed ﬂagging software, ankﬂag, which
is discussed in Section 5. Once the ﬂagging is done, a
deep deconvolution is performed. These images are then
corrected for the instrumental primary beam to arrive
at the ﬁnal images.

5. FLAGGER FOR P-AIRCARS

Radio Frequency Interference (RFI) is the name given
to the unwanted man-made radio signals which are inci-
dent on a radio telescope along with the cosmic signal.
The telescope records the superposition of the cosmic
signals and the RFI and the latter, when present, often
makes the dominant contribution.
It is important to
remove this contaminating signal from the data before
calibration and imaging. This process is usually referred
to as ﬂagging and often the quality of the ﬁnal images de-
pends upon the eﬃcacy of the ﬂagging approaches and
algorithms. Therefore, an automated calibration and
imaging pipeline for high dynamic range imaging must
include eﬃcient and eﬀective ways to identify and ﬂag
RFI. This is complicated partly by the fact that RFI
tends to span a large variety of spectral and temporal
characteristics, as well as signal strength. Some RFI
signals can be persistent and narrow-band, aﬀecting the
same spectral channels in all observing sessions. There
are also instances of impulsive RFI which manifest as
broadband contamination of the data, and there are also
RFI features that are localized in the time-frequency
plane or drift in frequency with time. For solar obser-
vations, bright solar emissions can also mimic such RFI
features in the time-frequency plane.

In our experience, it is possible to improve upon the
ﬂagging performance oﬀered by the in-built automated
RFI ﬂagging tasks in CASA (McMullin et al. 2007) (e.g.
“ﬂagdata”). Depending upon how it is setup, one ends
up either ﬂagging a signiﬁcant amount of good data or
leaving some low-level RFI unﬂagged. Visual inspection
to identify RFI aﬄicted data oﬀers better results, how-
ever, the large MWA data volumes make this approach
untenable. An independent ﬂagging module, ankﬂag,
has been included in P-AIRCARS to meet our RFI ﬂag-
ging needs.

Originally, ankﬂag was developed for an HI 21cm sur-
vey (Bera et al. 2019) with the upgraded Giant Metre-
wave Radio Telescope (uGMRT; Gupta et al. 2017), and
has been used for several previous studies (e.g., Das et al.
2019; Das et al. 2020; Mondal et al. 2020a; Das et al.
It has been found to be very eﬃcient for
2022, etc.).
ﬂagging low-level RFI for the MWA solar observations
and hence has been integrated in P-AIRCARS. ankﬂag
aims to provide a ﬂagging algorithm with an optimal
balance between over-ﬂagging and leaving RFI contam-
inated data unﬂagged, and capable of dealing with low-
level RFI which is diﬃcult to deal with using most com-
monly available ﬂaggers. ankﬂag is available as an inde-
pendent module in P-AIRCARS. It can be used for RFI
ﬂagging of interferometric data from any radio interfer-
ometric array.

14

Kansabanik et al.

Figure 9. Demonstration of ankﬂag on the MWA data. Flagging is done on a single time-frequency slice using uv-bin
mode. The left and right panels show the amplitudes of the residual visibilities against the uv-wavelength before and after
ﬂagging. Grey squares in the right-hand panel show the ﬂagged data.

5.1. Basic Algorithm of ankﬂag

ankﬂag identiﬁes bad or RFI-aﬀected data as outliers
to the Gaussian statistics which is assumed to represent
the input data. Given this assumption, ankﬂag works
best on model subtracted residual visibilities, and sep-
arately on the real and imaginary parts of the visibil-
ities, as the amplitudes of the visibilities do not fol-
low Gaussian statistics. Some of the basic algorithms
for calculating the statistics of the input data are taken
from the FLAGCAL (Prasad & Chengalur 2012), previ-
ously written for ﬂagging and calibration of the interfer-
ometric data from the Giant Metrewave Radio Telescope
(GMRT; Swarup 1991).

For any input data, a threshold for deﬁning outliers
is determined from the sample size assuming Gaussian
statistics for the data. The threshold for the outlier ex-
pressed as Xσ, is set such that the expected number
of elements outside the interval [µ − Xσ, µ + Xσ] is
less than 1, where, σ is the rms and µ, the mean of the
data. A user-deﬁned tolerance factor, f , is multiplied
by this threshold so that the eﬀective allowed range for
the data is [µ − f Xσ, µ + f Xσ]. Elements outside this
range are considered outliers and ﬂagged. f essentially
accounts for the fact that the statistics of the data gen-
erally deviate from exact Gaussian statistics, and hence
lead to over-ﬂagging data while trying to ﬂag very low-
level RFI. We have found that a value of f ranging from
1.7 to 1.9 works well for the MWA solar observations.

For outlier detection, instead of the mean−rms statis-
tics, the user can also choose to use the median−MAD
(median absolute deviation) statistics. When the latter
is used, the mean is replaced by the median, and the rms
is replaced by 1.48×MAD (which is the same as the rms

for a Gaussian distribution). The mean−rms statistics
can be easily biased by the outliers present in the data,
while the median−MAD statistics are far more robust
against the outliers. However, the latter is also compu-
tationally more expensive and consequently makes the
ﬂagger much slower. By default, P-AIRCARS conﬁg-
ures ankﬂag to use the median−MAD statistics.

ankﬂag has two modes of operation − baseline and
uvbin mode. Both of these modes are discussed below :

1. baseline mode:

In the baseline mode, visibil-
ities corresponding to each scan for every base-
line are examined separately in the ﬁrst step.
For every scan and every baseline, statistics are
calculated from the corresponding time-frequency
plane. Outlier visibilities are identiﬁed and ﬂagged
based on these statistics.
In the next step, de-
pending upon the choice of the user, statistics for
all scans and baselines are compared with one an-
other. This comparison is used to ﬁnd if for some
scans some of the baselines are signiﬁcantly worse
compared to the rest of the data. If found, these
particular scans are ﬂagged for these aﬀected base-
lines. A certain baseline, however, is not com-
pletely ﬂagged unless all scans corresponding to
that baseline are found to be bad. Since solar emis-
sion can show drastic variation in ﬂux density over
small durations and bandwidths, this mode is not
suitable for solar observation but has been used
successfully for other astronomical observations.

2. uvbin mode:

In the uvbin mode, all visibili-
ties are binned in a user-deﬁned number of two-
dimensional bins in the uv-plane, such that each

Implementation of P-AIRCARS

15

bin has approximately the same number of visi-
bilities. Visibilities in each bin are inspected sepa-
rately to identify and ﬂag outliers. The uvbin mode
is usually slower than the baseline mode and re-
lies on a good uv-coverage. Since the MWA has
a very good uv-coverage, this mode is ideal for
solar observations with the MWA and is used in
P-AIRCARS.

In both baseline and uvbin mode, each input polarization
is treated independently. ankﬂag is primarily written in
C, with a “wrapper” written in python to use it as an
independent python module. ankﬂag uses the GNU sci-
entiﬁc library (GSL, Galassi & Al 2018) for performing
algebraic and statistical tasks. Details of the tasks are
available online3.

5.2. Demonstration of ankﬂag

For this demonstration, we use ankﬂag in uvbin mode
on some example MWA solar data. The amplitudes of
the residual visibilities against uv-wavelength are shown
in Figure 9. The left and right panels show the data
before and after performing the ﬂagging respectively.
The grey square in the right-hand plot shows the bad
data, which are ﬂagged. A very small amount of good
data has been ﬂagged. This demonstrates the capability
of ankﬂag to selectively remove low-level RFI/bad data
without over-ﬂagging the good data.

6. CALIBRATION AND IMAGING PARAMETERS

For reasons discussed in Section 2, P-AIRCARS is de-
signed to determine the parameters for calibration and
imaging in an unsupervised manner. There are only two
high-level parameters that the user needs to specify to
guide the choices to be made by P-AIRCARS. These are
quality factor (QF) and robustness factor (RF). Both of
these parameters take three values : 0, 1, and 2. QF
relates to the choices impacting the ﬁnal image quality,
with a higher number corresponding to a better imaging
quality. Similarly, RF relates to choices made regard-
ing the convergence criteria and robustness of the self-
calibration. The ﬁnal choice of calibration parameters
depends upon the combination of QF and RF chosen,
while the ﬁnal imaging parameters depend only on the
choice of QF. In general, larger numbers for QF and RF
lead to larger computational loads and hence longer run
times.

6.1. Calibration Parameters

3 https://p-aircars.readthedocs.io/en/latest

Multiple diﬀerent parameters need to be speciﬁed for
calibration tasks. These include the solution interval
along the temporal axis (tinterval), the minimum ac-
ceptable signal-to-noise of the antenna gain solutions
(gmin,SNR), the shortest baselines to be used, and the
changes in DR (∆ DR) over the past few images, which
is used to deﬁne the convergence of the self-calibration
process. The length of the shortest baseline is chosen to
avoid any contributions from the Galactic diﬀuse emis-
sion as it is hard to model and can dominate the so-
lar signal. By default, P-AIRCARS excludes visibilities
below 3λ, which corresponds to ∼20 degree in angular
scale.

Some additional parameters also need to be speciﬁed
for the self-calibration process. During intensity self-
calibration, deconvolution thresholds are decreased in
steps with the self-calibration iterations. The start, stop
and increment values for these thresholds, thstart, thstop
and thstep respectively. These are speciﬁed in units of
image rms measured far away from the Sun, σ. We
deﬁne another quantity, the fractional residual ﬂux den-
sity, which is the ratio of disc integrated ﬂux densities
obtained from the residual and solar images from the
latest self-calibration iteration. Starting from thstart the
deconvolution threshold is lowered by thstep until it ei-
ther reaches thstop or the fractional residual ﬂux density,
fres, drops below some pre-deﬁned thresholds listed in
Table 1. If the imaging DR exceeds a pre-deﬁned thresh-
old, DRmax, the self-calibration process is stopped even
though it might not have converged. With the increas-
ing values of QF and RF, a ﬁner time and frequency
grid is used for calibration. The numerical values of all
of these parameters are chosen based on the combina-
tion of QF and RF chosen by the user, as listed in Table
1.

6.2. Imaging Parameters

Multiple diﬀerent parameters need to be speciﬁed for
imaging. These include – the size of the image, pixel size,
the uv-taper parameter, visibility weighting scheme, the
choice of scales for multiscale deconvolution, the de-
convolution threshold, the deconvolution gain, and the
choice of gridding scheme (whether or not to use w-
projection). P-AIRCARS is designed to provide default
values of each of these parameters. The expert user al-
ways has the ﬂexibility to override the defaults. The de-
fault values for the following parameters are estimated
from the data:

1. Pixel size: Assuming a circular point spread
function (PSF), the diameter of the PSF is com-
puted as, θ = 1.02 × λ
rad, where, λ is the
Bmax
wavelength of the observation in meter, and Bmax

16

Kansabanik et al.

QF RF thstart

thstep

thstop

gmin,SNR

∆ DR

tinterval (s)

0
0
0
1
1
1
2
2
2

0
1
2
0
1
2
0
1
2

9.0
9.0
9.0
10.0
10.0
10.0
11.0
11.0
11.0

1.0
1.0
1.0
0.5
0.5
0.5
0.25
0.25
0.25

6.0
6.5
7.9
6.0
6.5
7.0
6.5
7.0
7.0

2.5
3.0
3.5
3.5
4.0
4.0
4.0
4.5
4.5

25
22
20
20
18
15
18
15
12

30
20
15
15
10
7
10
7
5

DRmax

100
500
1000
1000
5000
10000
10000
50000
100000

fres

0.03
0.03
0.03
0.015
0.015
0.015
0.01
0.01
0.01

Table 1. Self-calibration parameters for diﬀerent combinations of QF and RF.

is the maximum baseline length in meter. Assum-
ing three pixels across its diameter provide a suﬃ-
cient oversampling, the pixel size is determined as
θpix = θ/3.

2. uv-taper: To choose the uv-taper, the visibilities
are divided into radial bins of width 5λ each. The
shortest uv-bin without any visibilities is used to
deﬁne the size of the tapering function.

The default values for the following parameters are

decided based on the choice of the QF:

1. Image size: Not only is the FoV of the MWA
chromatic, but it also depends on the pointing
direction. The average full width half maxi-
mum (FWHM) FoV of the MWA at 150 MHz
is 600 degree2. By the ﬁrst null of the primary
beam, the FoV increase to 3, 600 degree2 (Tingay
et al. 2013). For QF choices of 0, 1, and 2, P-
AIRCARS uses FoV corresponding to half of the
FWHM, FWHM, and up to the ﬁrst null respec-
tively. Assuming FoV scales as 1
ν , where, ν is the
observing frequency, image size is determined as,
imsizeν =
FoV150/ν, where F oV 150 is the FoV
at 150 MHz. The total number of pixels in the im-
age is then calculated as npix = imsizeν/θpix. For
numerical eﬃciency reasons, the nearest 2n not ex-
ceeding npix gives the number of pixels, where n
is an integer.

√

2. Deconvolution threshold: P-AIRCARS per-
forms deep deconvolution for higher QF. The de-
convolution is performed down to a pre-deﬁned
ﬂux-density deﬁned in terms of image rms. These
default thresholds are set to 7σ, 5σ, and 3σ for QF
values of 0, 1, and 2, respectively, where σ is the
rms measured far away from the Sun.

3. Deconvolution gain: As referred to CLEAN
gain, this parameter is set to 0.1, 0.05 and 0.01
for QF values of 0, 1 and 2 respectively.

4. w-projection: The Sun is the source with the
highest ﬂux density at MWA frequencies. This
implies that despite the large FoV of the instru-
ment, the dominant ﬂux density is concentrated
close to the phase center (Sun). This eﬀectively
reduces the imaging problem to a narrow FoV sit-
uation. Increasing values of QF improve the abil-
ity of P-AIRCARS to account for the artifacts due
to the presence of other sources. For a QF value of
0, P-AIRCARS does not use w-projection. For a
QF value of 1, P-AIRCARS ﬁrst examines the im-
age for the presence of any bright sources with ﬂux
density comparable to the Sun in the images made
during the calibration process. Only if one or more
such sources are found, P-AIRCARS uses the w-
projection. P-AIRCARS always uses w-projection
for a QF value of 2.

The default values for the following parameters are

independent of the data and QF values.

1. Image weight: The MWA has a very large num-
ber of small baselines. Hence, natural weighting
provides higher sensitivity for extended emission
at the cost of the resolution and increased PSF
sidelobes. To strike an optimal balance between
sensitivity and resolution, P-AIRCARS uses briggs
weighting (Briggs 1995). A parameter, called the
robustness parameter, selects the desired level be-
tween uniform and natural weighting. For WS-
Clean this parameter is set to a default value of 0.5
in P-AIRCARS. The corresponding default value
of the same parameter for CASA is 1.0.

2. Scales for multiscale deconvolution: P-
AIRCARS uses multiscale deconvolution (Corn-
well 2008; Rau & Cornwell 2011). The perfor-
mance of the multiscale deconvolution depends on
the choice of the size of the Gaussian scales. P-
AIRCARS uses Gaussian with scales correspond-
ing to number of pixels 0, 3, 6, ...., θ(cid:12)/θpix, where,

Implementation of P-AIRCARS

17

θ(cid:12) is the expected radius of the solar disc (Oberoi
et al. 2017).

7. P-AIRCARS FEATURES

This section brieﬂy highlights some salient features of

P-AIRCARS.

1. Modularity: As described in Section 4, P-
AIRCARS architecture is highly modular. This
not only makes it easy to maintain and upgrade,
but it also enables P-AIRCARS to oﬀer the pos-
sibility of using multiple diﬀerent radio interfero-
metric packages. The latter allows P-AIRCARS
to make an optimal choice for a given task (e.g.
use of CubiCal for calibration, ankﬂag for ﬂagging
and WSClean for imaging).

2. Ease of use: To facilitate the use by community
members with little or no prior experience in radio
interferometry, P-AIRCARS provides reasonable
defaults for all parameters. To allow more expe-
rienced users to explore the full range of options
oﬀered by the underlying packages, P-AIRCARS
provides the facility to overwrite the defaults for
the most commonly ﬁddled parameter.

3. Input validation: For P-AIRCARS to run suc-
cessfully, all of the inputs need to be consis-
tent and compatible with the data. To ensure
this, P-AIRCARS ﬁrst checks for this consistency
and compatibility before initiating processing. In
case some inconsistent or incompatible inputs are
found, their values are reset to the default values
and a warning is issued to the user.

4. Fault-tolerant: To be able to deal with a wide
variety of solar and instrumental conditions in an
unsupervised manner, P-AIRCARS has been de-
signed to be fault-tolerant. When it fails, it tries
to make data-driven decisions about updating the
relevant parameter values to overcome the source
of the problem.

5. Notiﬁcation over e-mail: Typical run-time for
P-AIRCARS for MWA data can run into days. To
make it convenient for the users to stay abreast
of its progress, P-AIRCARS can provide regular
notiﬁcations about its status to a user-speciﬁed
list of e-mail addresses.

6. Graphical User Interface: P-AIRCARS pro-
vides a Graphical User Interface (GUI) for speci-
fying values of input parameters. The top panel
of Figure 10 shows the GUI. The input ﬁelds
are named to be largely self-explanatory and the

GUI provides some additional useful information
as well. The GUI includes a ADVANCED INPUTS
section where the user can provide custom param-
eters, which is disabled by default. To enable this
section of the GUI, the user must ﬁrst uncheck the
Auto-calculate Parameters box. P-AIRCARS saves
a detailed log of the various processing steps and
also provides a graphical interface to easily view
it, as shown in the bottom panel of Figure 10.

8. P-AIRCARS REQUIREMENTS AND

PERFORMANCE

This section summarises the hardware and software
requirements for P-AIRCARS and provides some infor-
mation about its run-time for typical MWA data.

8.1. Hardware Requirements

P-AIRCARS is designed to be used on a wide variety
of hardware architectures, all the way from laptops and
workstations to HPCs. It uses a custom-designed paral-
lelization framework, which also does the scheduling for
non-HPC environments. P-AIRCARS has been tested
with a minimum conﬁguration of 8 CPU threads and 8
GB RAM, which is increasingly commonplace in com-
modity laptops. Though it has not yet been tested, P-
AIRCARS should be able to run with a smaller number
of CPU threads and RAM. We note that P-AIRCARS
is usually not limited by RAM as the memory footprint
for typical spectro-polarimetric snapshot imaging appli-
cations is quite small. The typical MWA data volume for
a 4-minute observing run is about 180 GB. P-AIRCARS
requires at least twice the disc space occupied by the
data to run. P-AIRCARS has also been tested on work-
stations with 40−70 CPU threads and 256 GB of RAM.

8.2. Software Requirements

P-AIRCARS uses multiple radio interferometric soft-
ware packages (e.g., CASA, WSClean, CubiCal), each
of which have multiple speciﬁc software dependencies.
P-AIRCARS has been tested successfully on Ubuntu
(20.04) and CentOS (7 and 8) Linux environments.
P-AIRCARS requires Python 3.7 or higher. To re-
duce the tedium of dealing with dependency conﬂicts
and make P-AIRCARS deployable out-of-the-box, it has
been containerized using Docker (Merkel 2014). While
P-AIRCARS is under constant development, interested
users can download the latest stable version from https:
//github.com/devojyoti96/P-AIRCARS.

8.3. Assessment of Run-time

To provide an overall estimate for P-AIRCARS run-
time, we list the run times for individual processing
blocks:

18

Kansabanik et al.

Figure 10. Top panel: Graphical User Interface of P-AIRCARS to provide inputs. Bottom panel: Graphical logger allows
us to view all logs of P-AIRCARS calibration and imaging.

1. Each RTF takes about an hour (marked by blue

cells in Figure 3).

3. Polarization calibration for each coarse channel
takes about 45 minutes (marked by green cells
with purple borders in Figure 3).

2. Bandpass calibration for each coarse channel takes
about 15 minutes (marked by green cells with pur-
ple borders in Figure 3).

4. Each diﬀerential

intensity self-calibration takes
about 10 to 15 minutes (marked by dark grey and
orange cells in Figure 3).

Implementation of P-AIRCARS

19

12 coarse channel datasets, and the diﬀerence between t
for datasets with 24 and 12 coarse channels reduces with
increasing NCPU. These curves have been obtained us-
ing a model for P-AIRCARS performance. This model
has been benchmarked using measured t for the same
dataset with 24 coarse channels spanning 240 seconds
and processed using 20 and 32 CPU threads, respec-
tively. These points are marked in Figure 11 using a
black cross and a pink square and lie close to the t pre-
dicted by the model. We note that depending upon the
nature of the solar emission at the time and the qual-
ity of data, t can vary across diﬀerent datasets with the
same temporal and spectral spans and these numbers
should be regarded as indicative.

Unlike calibration, imaging jobs are embarrassingly
parallel with t decreasing linearly with increasing NCPU.
A MWA solar observation, typically with 30.72 MHz
leads to about
bandwidth and 4 minutes duration,
50, 000 images at 160 kHz and 0.5 s resolution. For
such a dataset, P-AIRCARS typically requires about 4
hours for calibration and about 250 hours (∼ 10 days)
for imaging using 32 CPU threads.

9. FUTURE PLANS

The modular design of P-AIRCARS allows it to ben-
eﬁt easily from the developments and improvements be-
ing continually made in the underlying software pack-
ages it uses. We plan to incorporate the recent devel-
opments of these software packages and data structures
in P-AIRCARS. The next generation of measurement
set format (MS-v.3) has recently been released4, as a
part of the Next Generation CASA infrastructure (ng-
CASA)5 eﬀort. The MS-v.3 oﬀers a major advantage by
signiﬁcantly reducing the input-output (IO) overheads
incurred during calibration and imaging processes. As
IO forms a notable fraction of P-AIRCARS run-time, we
expect this to bring signiﬁcant beneﬁts. Incorporating
MS-v.3 in P-AIRCARS, however, needs calibration and
imaging software to be compatible with the MS-v.3 data
structures. The next incarnation of CubiCal, QuartiCal
is already available and is designed to work with MS-v.3.
We plan to incorporate QuartiCal in P-AIRCARS.

While they have not been activated yet, P-AIRCARS
has internal mechanisms for each run of P-AIRCARS
to contribute calibration solutions to a global database.
This has been done with a vision to build a central repos-
itory of all available calibration solutions for MWA solar
data accessible to all P-AIRCARS users. It will beneﬁt
the individual users by providing them with pre-existing

4 https://casacore.github.io/casacore-notes/264.pdf
5 https://cngi-prototype.readthedocs.io

Figure 11. Variation of calibration time with the
available number of CPU threads. The green, orange,
blue, and red points represent the expected run-time for a
combination of temporal and spectral spans. The black cross
and magenta square shows the run-time from a real dataset
with 20 and 30 CPU threads respectively.

The ﬁrst three steps are done sequentially and add up
to a minimum total run-time of about 2 hours. In addi-
tion, depending upon the duration and bandwidth of the
data, as well as the time and frequency intervals of the
calibration grid, additional calibration solutions need to
be computed for the orange and dark grey cells in Figure
3. These are all done in an embarrassingly parallel.

Figure 11 shows the expected variation in run-time,
t, taken for calibration as a function of the number of
CPU threads, NCPU, for a few diﬀerent combinations
of temporal and spectral spans on a log scale. Orange
and red points show the run-time for a dataset with 12
coarse channels with an observing duration of 120 and
240 seconds, respectively. The diﬀerence between the
two curves is small at the low NCPU end and grows even
smaller with increasing NCPU, despite their observing
duration diﬀering by a factor of two. This is because the
impact of the additional observing span is to require es-
sentially twice the number of diﬀerential self-calibration
runs. Each of these runs is not too time-consuming in it-
self, and at the low NCPU end, where the number of jobs
that can be spawned is limited by the available CPUs,
their impact is seen as a small increase in t. At the
large NCPU end, when there are enough resources avail-
able to spawn all of the diﬀerential calibration jobs in
parallel, there remains no diﬀerence in the correspond-
ing ts. The blue and green points show the variation of
t with NCPU for datasets with 24 coarse spectral chan-
nels for observing durations of 120 and 240 seconds re-
spectively and show similar behavior. Naturally, at the
clow NCPU end, they take signiﬁcantly longer than the

101102Number of CPU threads, NCPU1012×1003×1004×1006×100Run-time, t (hour)Time span: 120 s, Coarse channels : 24Time span: 120 s, Coarse channels : 12Time span: 240 s, Coarse channels : 24Time span: 240 s, Coarse channels : 1220

Kansabanik et al.

calibration solutions when available and reducing their
run-time. Over time, as the usage of P-AIRCARS grows,
we expect this to become a useful resource for the com-
munity.

While the P-AIRCARS architecture is compatible
with HPC deployment, it has not been deployed on one
yet, primarily due to a lack of a suitable opportunity.
Currently, P-AIRCARS takes on the tasks of both do-
ing the parallelization as well as scheduling. In an HPC
environment the scheduling is usually done by a dedi-
cated job scheduler, like Portable Batch System (PBS,
Henderson 1995) or Slurm (Yoo et al. 2003). Work is
in progress to adapt P-AIRCARS for a cluster environ-
ment by incorporating an interface to a job scheduler. In
parallel, we are also exploring the possibility of adapting
P-AIRCARS for cloud computing platforms like Ama-
zon Web Services (AWS), and Google Cloud Platform
(GCP).

10. CONCLUSION

high

high-ﬁdelity

dynamic-range

P-AIRCARS represents the state-of-the-art pipeline
spectro-
for
polarimetric snapshot solar imaging at low radio fre-
quencies. This work describes the implementation of
the robust polarization calibration algorithm devel-
oped by Kansabanik et al. (2022b), along with several
improvements to total intensity calibration, originally
implemented in AIRCARS (Mondal et al. 2019). P-
AIRCARS beneﬁts from the experience gained and
issues encountered during the extensive usage of AIR-
CARS, making it more robust.
It is also much more
user-friendly than AIRCARS. It delivers solar radio im-
ages with residual
instrumental polarization leakages
comparable to those achieved by high-quality MWA ob-
servations of non-solar ﬁelds (e.g. Lenc et al. 2017; Lenc
et al. 2018). Solar radio imaging has usually been the
domain of specialists. Despite the usefulness of solar
radio imaging being well established and the increasing
availability of large volumes of excellent data in the
public domain, the steep learning curve involved has
been a hurdle in the large-scale use of these data. By
providing a robust tool that dramatically reduces the
eﬀort involved in making high-quality solar radio im-
ages, we hope to help solar radio imaging become more
mainstream.

is equally applicable to all centrally condensed arrays,
including the upcoming SKA. The SKA is expected to
be a discovery machine in the ﬁeld of solar radio and
heliospheric physics. P-AIRCARS and its predecessor,
AIRCARS, are already leading to explorations of previ-
ously inaccessible phase spaces. They have enabled mul-
tiple interesting scientiﬁc results spanning a large range
of solar phenomena using a SKA precursor, the MWA.
We expect P-AIRCARS to form the workhorse for solar
and heliospheric radio physics with the MWA and the
stepping stone for the solar radio imaging pipeline for
the SKA.

This scientiﬁc work makes use of the Murchison
Radio-astronomy Observatory (MRO), operated by the
Commonwealth Scientiﬁc and Industrial Research Or-
ganisation (CSIRO). We acknowledge the Wajarri Ya-
matji people as the traditional owners of the Observa-
tory site. Support for the operation of the MWA is
provided by the Australian Government’s National Col-
laborative Research Infrastructure Strategy (NCRIS),
under a contract to Curtin University administered by
Astronomy Australia Limited. We acknowledge the
Pawsey Supercomputing Centre, which is supported by
the Western Australian and Australian Governments.
D. K. gratefully acknowledges Barnali Das (University
of Delaware, Newark, USA) for useful discussions, and
suggestions and also for providing a beautiful name for
the pipeline. D. K. acknowledges Soham Dey (NCRA-
TIFR, India) for testing this pipeline. D. K., D. O.,
and A. B. acknowledge the support of the Department
of Atomic Energy, Government of India, under project
no. 12-R&D-TFR-5.02-0700. S. M. acknowledges par-
tial support by USA NSF grant AGS-1654382 to the
New Jersey Institute of Technology.

Facilities: Murchison Wideﬁeld Array (MWA)
(Lonsdale et al. 2009; Tingay et al. 2013; Wayth et al.
2018)

Software: astropy (Price-Whelan et al. 2018), mat-
plotlib (Hunter 2007), Numpy (Harris et al. 2020), SciPy
(Virtanen et al. 2020), CASA (McMullin et al. 2007),
CubiCal (Kenyon et al. 2018; Sob et al. 2019), GSL
(Galassi & Al 2018), WSClean (Oﬀringa et al. 2014),
Docker (Merkel 2014).

The current implementation of P-AIRCARS is opti-
mized for the MWA, however, the underlying algorithm

REFERENCES

Alissandrakis, C. E., & Gary, D. E. 2021, Frontiers in

Bastian, T. S., Pick, M., Kerdraon, A., Maia, D., &

Astronomy and Space Sciences, 7, 77,
doi: 10.3389/fspas.2020.591075

Vourlidas, A. 2001, ApJL, 558, L65, doi: 10.1086/323421

Implementation of P-AIRCARS

21

Bera, A., Kanekar, N., Chengalur, J. N., & Bagla, J. S.
2019, ApJL, 882, L7, doi: 10.3847/2041-8213/ab3656

Briggs, D. S. 1995, in American Astronomical Society

Meeting Abstracts, Vol. 187, American Astronomical
Society Meeting Abstracts, 112.02

Cornwell, T. J. 2008, IEEE J. Sel. Topics. Signal. Proc., 2,

793, doi: 10.1109/JSTSP.2008.2006388

Das, B., Chandra, P., Shultz, M. E., & Wade, G. A. 2019,

MNRAS, 489, L102, doi: 10.1093/mnrasl/slz137

Das, B., Chandra, P., Shultz, M. E., & Wade, G. A. 2020,

The Astrophysical Journal, 895, 148,
doi: 10.3847/1538-4357/ab94bb

Das, B., Chandra, P., Shultz, M. E., et al. 2022, ApJ, 925,

125, doi: 10.3847/1538-4357/ac2576

Dewdney, P. E., Hall, P. J., Schilizzi, R. T., & Lazio, T. J.

L. W. 2009, Proceedings of the IEEE, 97, 1482,
doi: 10.1109/JPROC.2009.2021005

Galassi, M., & Al, E. 2018, GNU Scientiﬁc Library

Reference Manual, 3rd edn. (Network theory limited)

Gupta, Y., Ajithkumar, B., Kale, H., et al. 2017, Current
Science, 113, 707, doi: 10.18520/cs/v113/i04/707-714

Hamaker, J. P., Bregman, J. D., & Sault, R. J. 1996,

A&AS, 117, 137

Hamaker, J. P. 2000, Astron. Astrophys. Suppl. Ser., 143,

Lenc, E., Murphy, T., Lynch, C. R., Kaplan, D. L., &

Zhang, S. N. 2018, MNRAS, 478, 2835,
doi: 10.1093/mnras/sty1304

Lenc, E., Anderson, C. S., Barry, N., et al. 2017,

Publications of the Astronomical Society of Australia, 34,
e040, doi: 10.1017/pasa.2017.36

Line, J. L. B., McKinley, B., Rasti, J., et al. 2018, PASA,

35, e045, doi: 10.1017/pasa.2018.30

Lonsdale, C. J., Cappallo, R. J., Morales, M. F., et al. 2009,

IEEE Proceedings, 97, 1497,
doi: 10.1109/JPROC.2009.2017564

McCauley, P. I., Cairns, I. H., White, S. M., et al. 2019,

Solar Physics, 294, 106, doi: 10.1007/s11207-019-1502-y
McLean, D. J., & Labrum, N. R. 1985, Solar radiophysics :
studies of emission from the sun at metre wavelengths
(Cambridge University Press)

McMullin, J. P., Waters, B., Schiebel, D., Young, W., &
Golap, K. 2007, in Astronomical Society of the Paciﬁc
Conference Series, Vol. 376, Astronomical Data Analysis
Software and Systems XVI, ed. R. A. Shaw, F. Hill, &
D. J. Bell, 127

Mercier, C. 1990, SoPh, 130, 119, doi: 10.1007/BF00156783
Merkel, D. 2014, Linux journal, 2014, 2
Mohan, A. 2021a, ApJL, 909, L1,
doi: 10.3847/2041-8213/abe70a

515, doi: 10.1051/aas:2000337

—. 2021b, A&A, 655, A77,

Hariharan, K., Ramesh, R., Kishore, P., Kathiravan, C., &

doi: 10.1051/0004-6361/202142029

Gopalswamy, N. 2014, ApJ, 795, 14,
doi: 10.1088/0004-637X/795/1/14

Harris, C. R., Millman, K. J., van der Walt, S. J., et al.

2020, Nature, 585, 357, doi: 10.1038/s41586-020-2649-2

Henderson, R. L. 1995, in Job Scheduling Strategies for
Parallel Processing, ed. D. G. Feitelson & L. Rudolph
(Berlin, Heidelberg: Springer Berlin Heidelberg), 279–294

Hunter, J. D. 2007, Computing in Science & Engineering, 9,

90, doi: 10.1109/MCSE.2007.55

Kansabanik, D. 2022, arXiv e-prints, arXiv:2207.11665.

https://arxiv.org/abs/2207.11665

Kansabanik, D., Mondal, S., Oberoi, D., Biswas, A., &

Bhunia, S. 2022a, The Astrophysical Journal, 927, 17,
doi: 10.3847/1538-4357/ac4bba

Kansabanik, D., Oberoi, D., & Mondal, S. 2022b, The

Astrophysical Journal, 932, 110,
doi: 10.3847/1538-4357/ac6758

Kenyon, J. S., Smirnov, O. M., Grobler, T. L., & Perkins,
S. J. 2018, Monthly Notices of the Royal Astronomical
Society, 478, 2399, doi: 10.1093/mnras/sty1221

Kumari, A., Ramesh, R., Kathiravan, C., & Gopalswamy,
N. 2017, ApJ, 843, 10, doi: 10.3847/1538-4357/aa72e7

Mohan, A., McCauley, P. I., Oberoi, D., & Mastrano, A.
2019a, ApJ, 883, 45, doi: 10.3847/1538-4357/ab3a94
Mohan, A., Mondal, S., Oberoi, D., & Lonsdale, C. J.
2019b, ApJ, 875, 98, doi: 10.3847/1538-4357/ab0ae5

Mondal, S. 2021, SoPh, 296, 131,

doi: 10.1007/s11207-021-01877-3

Mondal, S., Bera, A., Chandra, P., & Das, B. 2020a,
MNRAS, 498, 3863, doi: 10.1093/mnras/staa2637

Mondal, S., Mohan, A., Oberoi, D., et al. 2019, ApJ, 875,

97, doi: 10.3847/1538-4357/ab0a01

Mondal, S., & Oberoi, D. 2021, ApJ, 920, 11,

doi: 10.3847/1538-4357/ac1076

Mondal, S., Oberoi, D., & Mohan, A. 2020b, ApJL, 895,

L39, doi: 10.3847/2041-8213/ab8817

Mondal, S., Oberoi, D., & Vourlidas, A. 2020c, ApJ, 893,

28, doi: 10.3847/1538-4357/ab7fab

Morosan, D. E., R¨as¨anen, J. E., Kumari, A., et al. 2022,

Solar Physics, 297, 47, doi: 10.1007/s11207-022-01976-9

Neben, A. R., Bradley, R. F., Hewitt, J. N., et al. 2015,

Radio Science, 50, 614,
doi: https://doi.org/10.1002/2015RS005678

Oberoi, D., Sharma, R., & Rogers, A. E. E. 2017, SoPh,

292, 75, doi: 10.1007/s11207-017-1096-1

22

Kansabanik et al.

Oﬀringa, A. R., McKinley, B., Hurley-Walker, N., et al.

Sob, U. M., Bester, H. L., Smirnov, O. M., Kenyon, J. S., &

2014, MNRAS, 444, 606, doi: 10.1093/mnras/stu1368

Prasad, J., & Chengalur, J. 2012, Experimental Astronomy,

33, 157, doi: 10.1007/s10686-011-9279-5

Grobler, T. L. 2019, Monthly Notices of the Royal
Astronomical Society, 491, 1026,
doi: 10.1093/mnras/stz3037

Sokolowski, M., Colegate, T., Sutinjo, A. T., et al. 2017,

Price-Whelan, A. M., Sip˝ocz, B., G¨unther, H., et al. 2018,

PASA, 34, e062, doi: 10.1017/pasa.2017.54

The Astronomical Journal, 156, 123

Sokolowski, M., Jordan, C. H., Sleap, G., et al. 2020,

Pulupa, M., Bale, S. D., Badman, S. T., et al. 2020, ApJS,

246, 49, doi: 10.3847/1538-4365/ab5dc0

Rahman, M. M., Cairns, I. H., & McCauley, P. I. 2020,

Solar Physics, 295, 51, doi: 10.1007/s11207-020-01616-0

PASA, 37, e021, doi: 10.1017/pasa.2020.17

Swarup, G. 1991, in Astronomical Society of the Paciﬁc
Conference Series, Vol. 19, IAU Colloq. 131: Radio
Interferometry. Theory, Techniques, and Applications,
376–380

Ramesh, R., Kathiravan, C., & Chellasamy, E. E. 2022,

Tingay, S. J., Goeke, R., Bowman, J. D., et al. 2013,

The Astrophysical Journal, 932, 48,

doi: 10.3847/1538-4357/ac6f05

Ramesh, R., Kumari, A., Kathiravan, C., Ketaki, D., &

Wang, T. J. 2021, Geophys. Res. Lett., 48, e91048,

doi: 10.1029/2020GL091048

Rast, M. P., Bello Gonz´alez, N., Bellot Rubio, L., et al.

2021, Solar Physics, 296, 70,

doi: 10.1007/s11207-021-01789-2

Rau, U., & Cornwell, T. J. 2011, A&A, 532, A71,

doi: 10.1051/0004-6361/201117104

Sastry, C. V. 2009, The Astrophysical Journal, 697, 1934,

doi: 10.1088/0004-637x/697/2/1934

PASA, 30, e007, doi: 10.1017/pasa.2012.007

Ung, D. C. X., Sokolowski, M., Sutinjo, A. T., & Davidson,

D. B. 2020, IEEE Transactions on Antennas and
Propagation, 68, 5395, doi: 10.1109/TAP.2020.2980334
Virtanen, P., Gommers, R., Oliphant, T. E., et al. 2020,

Nature Methods, 17, 261, doi: 10.1038/s41592-019-0686-2

Wayth, R. B., Tingay, S. J., Trott, C. M., et al. 2018,

PASA, 35, e033, doi: 10.1017/pasa.2018.37

Yang, Z., Bethge, C., Tian, H., et al. 2020, Science, 369,

694, doi: 10.1126/science.abb4462

Yoo, A. B., Jette, M. A., & Grondona, M. 2003, in Job
Scheduling Strategies for Parallel Processing, ed.
D. Feitelson, L. Rudolph, & U. Schwiegelshohn (Berlin,
Heidelberg: Springer Berlin Heidelberg), 44–60

