qrpca: A Package for Fast Principal Component Analysis with GPU Acceleration

Rafael S. de Souzaa,∗, Xu Quanfenga, Shiyin Shena,b, Chen Penga,c, Zihao Mua

aKey Laboratory for Research in Galaxies and Cosmology Shanghai Astronomical Observatory Chinese Academy of Sciences 80 Nandan Rd.
Shanghai 200030 China
bKey Lab for Astrophysics Shanghai 200034 People’s Republic of China
cShanghai Institute of Technology 100 Haiquan Rd. Shanghai 201418 China

2
2
0
2

p
e
S
6

]

M

I
.
h
p
-
o
r
t
s
a
[

2
v
7
9
7
6
0
.
6
0
2
2
:
v
i
X
r
a

Abstract

We present qrpca, a fast and scalable QR-decomposition principal component analysis package. The software, written
in both R and python languages, makes use of torch for internal matrix computations, and enables GPU accel-
eration, when available. qrpca provides similar functionalities to prcomp (R) and sklearn (python) packages
respectively. A benchmark test shows that qrpca can achieve computational speeds 10-20 × faster for large dimen-
sional matrices than default implementations, and is at least twice as fast for a standard decomposition of spectral data
cubes. The qrpca source code is made freely available to the community.

Keywords: Principal component analysis; Astroinformatics; GPU computing

1. Introduction

Principal component analysis (PCA; Pearson, 1901)
stands out as a prime method for dimensionality reduc-
tion and data exploration (see Jolliffe and Cadima, 2016,
for a review).
It compresses a dataset while preserving
as much variability as possible. Given the original matrix
input, PCA performs either eigendecomposition or singu-
lar value decomposition (SVD) and outputs a matrix com-
prising orthogonal variables, which are linear combina-
tions of the original variables, termed principal compo-
nents (PCs).

The technique is among the most popular tools in As-
tronomy and has been applied to a broad range of stud-
ies. Notable examples include the analysis of exoplan-
ets imaging data (Amara and Quanz, 2012; Kiefer et al.,
2021), Type Ia supernova photometric classiﬁcation (Ishida
and de Souza, 2013), analysis of cosmological simulations
(de Souza et al., 2014), foreground separation of 21 cm in-
tensity maps (Yohana et al., 2021), and point spread func-
tion reconstruction (Nie et al., 2021).

Despite its broad applicability, SVD PCA implemen-
tations are computationally costly for high dimensional
matrices1. This limitation triggered the development of

∗Corresponding author
Email address: drsouza@shao.ac.cn (Rafael S. de Souza)
1Throughout the paper, we will refer to data size as the number of

rows, and dimension as the number of columns.

Preprint submitted to Astronomy And Computing

PCA extensions, including sparsity assumptions (e.g. Fan
et al., 2018; Adnan et al., 2021), and massive parallelism
(Lazcano et al., 2017). Battulga et al. (2020) suggested a
hash-tree PCA to accelerate conventional PCA by sam-
pling similar objects while preserving the original data
distribution. Vogt and Tacke (2001) suggested a two-step
procedure for analyzing hyperspectral images, where the
algorithm ﬁrst compresses the spectra via wavelets trans-
form before applying a conventional SVD.

This paper contributes to the literature in two main as-
pects. To the best of our knowledge, we present the ﬁrst
public package for QR-decomposition PCA, and the pack-
age allows seamless GPU acceleration. QR factorization
is a decomposition of a matrix A into a product A = QR
of an orthogonal matrix Q and an upper triangular matrix
R.

The user-friendly implementation named qrpca uses
torch (Paszke et al., 2019; Falbel and Luraschi, 2022)
under the hood for matrix computations. The package is
particularly suited for large dimensional matrices and pro-
vides similar functionalities to other major distributions
such as prcomp in R, and sklearn in python.

The remainder of the paper is organized as follows. In
Section 2 we provide an overview of the SVD PCA and
QR-decomposition PCA. Section 3 shows a speed perfor-
mance test alongside a practical application example to in-
tegral ﬁeld unit (IFU) spectroscopy. Finally, in Section 4
we present our concluding remarks.

September 7, 2022

 
 
 
 
 
 
2. Methodology

Let X ∈ Rn×m be a rectangular matrix composed by
n rows by m columns. The SVD decomposition of X is
given by:

X = USV(cid:124).
(1)
Here, S ∈ Rm×m is a diagonal matrix, and Φ = US gives
the PCA projection. We show at Algorithm 1 a pseudo-
code for a SVD PCA. If the dimensionality of X is large,
then the computation of the eigenvalues will be time con-
suming, and may cause memory overﬂow (e.g. Adnan et al.,
2021).

A faster alternative is to use an intermediate step as
suggested by Sharma et al. (2013). The procedure consists
in ﬁrst factorize X into an orthogonal matrix Q ∈ Rn×m,
and an upper triangular matrix R ∈ Rm×m. The SVD de-
(cid:124)
composition of R(cid:124) = U(cid:63)S(cid:63)V
(cid:63) then yields the same diag-
onal matrix S(cid:63) ≡ S of X, and an equivalent PCA trans-
form QVS ≡ US. The computational advantage comes
from the intermediate QR decomposition, which enables
running SVD factorization on the upper triangular matrix
R to compute eigenvectors instead of running SVD di-
rectly on X. See Algorithm 2 for a pseudo-code for the
case of QR-decomposition PCA.

Algorithm 1 SVD PCA

Require: Input matrix X ∈ Rn×m
1: Compute SVD on X
2: U ∈ Rn×m Orthogonal matrix
3: S ∈ Rm×m Rectangular diagonal matrix
4: V ∈ Rm×m Orthogonal matrix
5: Compute PCA transform Φ = US

Algorithm 2 QR-decomposition PCA

Require: Input matrix X ∈ Rn×m
1: Compute QR decomposition on X
2: Q ∈ Rn×m Orthogonal matrix
3: R ∈ Rm×m Upper triangular matrix
4: Compute SVD on R(cid:124) ∈ Rm×m
5: S ∈ Rm×m
6: V ∈ Rm×m
7: Compute PCA transform Φ = QVS

3. Performance evaluation

In this section, we provide a simple test of the qrpca
computational performance on simulated data and an ex-

2

ample application to the analysis of Astronomical IFU
spectra.

3.1. Simulated data

To evaluate the performance of qrpca, we create a
collection of random matrices varying the rows and col-
umn sizes. For a ﬁxed dimension of m = 1000, we vary
the data size from n = 102−106, and for a ﬁxed data size of
n = 1, 000, we varied the dimensions from m = 102 − 105.
The mock data is sampled from a normal zero mean and
unity variance distribution. Fig. 1 shows the speedup gain
for a range of dataset sizes and dimensions. Left pan-
els show the comparison between the python version of
qrpca and default PCA implementation of sklearn,
while the right panels show the comparison between the
R implementation of qrpca and prcomp. Visual in-
spection on Fig. 1 shows that qrpca consistently per-
form faster than their related counterparts for datasets with
more than 1,000 dimensions, with a top performance at
least 15× faster for matrices with 10,000 dimensions and
GPU enabled. sklearn shows competitive performance
against the python qrpca for high-dimensional data, while
prcomp performs well on moderately large datasets, and
the main advantage of using qrpca comes from the GPU
on these cases. Overall, qrpca can be particularly bene-
ﬁcial for analyzing spectral data-cubes and hyperspectral
images, and the next section shows one practical applica-
tion in analyzing Astronomical spectra.

3.2. MaNGA data

Here we show one astronomical application using the
IFU spectral data from the Mapping Nearby Galaxies at
Apache Point Observatory (MaNGA; Bundy et al., 2015)
survey. MaNGA is a program of the Sloan Digital Sky
Survey IV (SDSS-IV; Blanton et al., 2017), and also is
the largest IFU survey of nearby galaxies to date. MaNGA
obtains integrated ﬁeld spectroscopy of galaxies using custom-
designed ﬁber bundles, where the buffered ﬁbers have a
core diameter of 2 arcsec. Depending on galaxies’ size,
MaNGA uses different IFUs, where the IFU size range
is from 19 to 127 ﬁbers, and the corresponding ﬁeld of
view is from 12 to 32 arcsec in diameter. The wavelength
coverage of MaNGA spectra is 3622–10354 Å, and the
resolution is about R ∼ 2000. For each galaxy target,
MaNGA takes three dithered exposures. By stacking the
spectra from dithered exposures, MaNGA builds a data
cube (NX ∗ NY ∗ Nwave) for each target galaxy, where the
spatial pixel scale is designed as 0.5 arcsec per pixel (Law
et al., 2016). For the largest MaNGA IFU, the data cube

Figure 1: A speedup performance evaluation between qrpca and major SVD PCA implementations, namely sklearn and prcomp. Each line
represents the speedup time normalized by the running time of sklearn (left panels), and prcomp (right panels). The benchmark was executed
in a machine with the following speciﬁcations: CPU – 2.2GHz Intel Xeon Silver 4210; GPU – NVIDIA A40 (48GB); OS – Ubuntu Linux 18.04
64 bits; RAM – 188 GB.

has NX ∗ NY = 74 ∗ 74 spaxels. For the wavelength chan-
nel, the MaNGA data cube has Nwave = 4573 for loga-
rithmically sampled data and Nwave = 6732 for the linear
sampling (Law et al., 2016).

We now show a simple task of computing the ﬁrst
eigenmaps of the MaNGA IFU data. PCA decomposition
of data-cubes is particularly interesting to disentangle un-
correlated physical phenomena in the galaxy. For exam-
ple, it has been used to identify a broad line region of a
previously unknown active galactic nucleus in the galaxy
NGC 4736 (Steiner et al., 2009). We showcase our ap-
proach by decomposing the IFU data of the galaxy merger
Mrk 848 (MaNGA ID:12-193481). Mrk 848 is a major
merger with strong interaction between the two galaxies
with estimated stellar masses log(M(cid:63)/M(cid:12)) = 10.44 and
10.30 (Yang et al., 2007) at z = 0.041. The MaNGA cube

consists of an array of 74 ∗ 74 ∗ 4563 array.

To decompose the data cube, we follow three basic
steps. The ﬁrst step involves transforming the tensor into
a 5476∗4563 matrix where each row represents one spec-
trum and a wavelength for each column. Then we apply
a PCA transform to this matrix, which yields a matrix of
a similar dimension, where each column now represents
a PC. The ﬁnal step is to transform back to the original
format, and each PC will now represent an eigenmap. We
show code snippets to read, process, and visualize the ﬁrst
eigenmaps with R and python versions of qrpca at Ap-
pendix A. The computation time with qrpca is at least
2-3 times faster than standard implementations.

Figure 2 shows the ﬁrst four PCs, where we can see
different aspects of the merger structure. The ﬁrst PC
correlates with the overall merger structure, including the

3

qrpca GPUqrpcasklearnpythonqrpca GPUqrpcaprcompR102103104105102103104105123Number of rowsSpeedupqrpca GPUqrpcasklearnpythonqrpca GPUqrpcaprcompR102103104105102103104105051015Number of columnsSpeedupFigure 2: Lef panel: The SDSS cutout of the galaxy Mrk 848 (MaNGA ID:12-193481) with a purple hexagon denoting the approximate spatial
grasp of the IFU. Right panel display the ﬁrst 4 eigenmaps, where different aspects of the merger structure can be seen.

core and tail regions. The second PC isolates the core
region of the central galaxy, while the third and fourth
PCs discriminate the star-forming regions triggered by the
merging process (Yuan et al., 2018). The galactic struc-
tures illuminated by this simple decomposition are broadly
consistent with the different aged stellar populations re-
vealed by detailed spectral energy distribution ﬁtting (Yuan
et al., 2018), but further scrutiny of this object is beyond
the scope of this work.

Acknowledgments

We thank Ana L. Chies-Santos for her insightful sug-
gestions while preparing this manuscript. We thank Emille
E. O. Ishida for the ﬁnal revision of this manuscript. This
work was supported by the National Natural Science Foun-
dation of China (No. 1201101284, 12073059), the Na-
tional Key R&D Program of China (No. 2019YFA0405501),
and the China Manned Space Project (No. CMS-CSST-
2021-A04).

4. Conclusions

PCA is an essential tool for multivariate data analysis.
However, its standard implementation does not scale well
for high-dimensional datasets. In this paper, we present
qrpca, a package for fast PCA computation based on
QR decomposition. The code enables GPU acceleration
when available. We showcase experiments on both simu-
lated and real datasets of varying dimensions. Experimen-
tal results show that our package can perform more than
10 × faster than conventional approaches, depending on
the matrix dimensions.

qrpca is written in both R and Python and is freely
available at GitHub2, Zenodo3 and listed in the Python
Package Index4.

2https://github.com/RafaelSdeSouza/qrpca
3https://doi.org/10.5281/zenodo.6556360
4https://pypi.org/project/qrpca/

Appendix A. Code Snippets

Here, we show how to perform a PCA on MaNGA
decomposition using the qrpca package. The IFU data
used in our example is available at https://data.
sdss.org/sas/dr17/manga/spectro/redux/v3_
1_1/7443/stack/manga-7443-12703-LOGCUBE.
fits.gz

R code for qrpca computation on MaNGA

1 require(qrpca);require(reticulate)
2 require(FITSio);require(ggplot2);
3 require(dplyr);require(reshape2)
4 cube <- "manga-7443-12703-LOGCUBE.fits"
5 df <- readFITS(cube)
6 n_row <- dim(df$imDat)[1]
7 n_col <- dim(df$imDat)[2]
8 n_wave <- dim(df$imDat)[3]

4

PC1PC3PC2PC4−4−2024<- array_reshape(df$imDat,

9 data.2D
10 c(n_row*n_col,n_wave),order = c("F"))
11 pca
12 # Function to extract the k-th eigenmap
13 eigenmap <- function(pcobj, k = 1){

<- qrpca(data.2D)

x <- as.matrix(pcobj$x)
out <- matrix(x[,k],nrow=n_row,ncol=n_col)
out

14

15

16
17 }

18
19 map1 <- eigenmap(pca) %>% melt()

20
21 ggplot(map1,aes(x=Var1,y=Var2,z=value)) +

22

23

24

geom_raster(aes(fill=value)) +
scale_fill_viridis_c(option="C") +
theme(legend.position = "none")

Python code for qrpca computation on MaNGA

1 from astropy.io import fits
2 from astropy.wcs import WCS
3 import torch
4 import numpy as np
5 from qrpca.decomposition import qrpca
6 import matplotlib.pyplot as plt

7
8 data = fits.open("manga-7443-12703-LOGCUBE.

fits")

9 dat = data[1].data.transpose(1,2,0)
10 wcs = WCS(data[1].header)
11 da = dat.reshape(-1,dat.shape[-1]).astype(np.

float32)

12 device = torch.device("cuda:0" if torch.cuda.

is_available() else "cpu")

13 pca = qrpca(n_component_ratio=1,device=device)
14 map1 = pca.fit_transform(da)
15 ax = plt.subplot(projection=wcs[0,:,:])
16 ax = plt.gca()
17 lon = ax.coords[’ra’]
18 lat = ax.coords[’dec’]
19 plt.imshow(map1.reshape(74,74))
20 plt.xlabel("RA [deg]")
21 plt.ylabel("DEC [deg]")
22 plt.show()

References

Adnan, T.M.T., Tanjim, M.M., Adnan, M.A., 2021. Fast, scalable
Information Sys-
and geo-distributed pca for big data analytics.
tems 98, 101710. URL: https://www.sciencedirect.
com/science/article/pii/S0306437920301526,
doi:https://doi.org/10.1016/j.is.2020.101710.
Amara, A., Quanz, S.P., 2012. PYNPOINT: an image processing pack-
age for ﬁnding exoplanets. MNRAS 427, 948–955. doi:10.1111/
j.1365-2966.2012.21918.x, arXiv:1207.6637.

Battulga, L., Lee, S.H., Nasridinov, A., Yoo, K.H., 2020.
Accelerating pca with hash-based group-
URL: https:

Hash-tree pca:
J. Supercomput. 76, 8248–8264.
ing.
//doi.org/10.1007/s11227-019-02947-x,
doi:10.1007/s11227-019-02947-x.

5

Blanton, M.R., Bershady, M.A., Abolfathi, B., Albareti, F.D., Al-
lende Prieto, C., Almeida, A., Alonso-Garc´ıa, J., Anders, F., An-
derson, S.F., Andrews, B., et al., 2017. Sloan Digital Sky Sur-
vey IV: Mapping the Milky Way, Nearby Galaxies, and the Dis-
tant Universe. AJ 154, 28. doi:10.3847/1538-3881/aa7567,
arXiv:1703.00052.

Bundy, K., Bershady, M.A., Law, D.R., Yan, R., Drory, N., MacDon-
ald, N., Wake, D.A., Cherinka, B., S´anchez-Gallego, J.R., Weij-
mans, A.M., Thomas, D., Tremonti, C., Masters, K., Coccato, L.,
Diamond-Stanic, A.M., Arag´on-Salamanca, A., Avila-Reese, V.,
Badenes, C., Falc´on-Barroso, J., Belﬁore, F., Bizyaev, D., Blanc,
G.A., Bland-Hawthorn, J., Blanton, M.R., Brownstein, J.R., Byler,
N., Cappellari, M., Conroy, C., Dutton, A.A., Emsellem, E., Ether-
ington, J., Frinchaboy, P.M., Fu, H., Gunn, J.E., Harding, P., John-
ston, E.J., Kauffmann, G., Kinemuchi, K., Klaene, M.A., Knapen,
J.H., Leauthaud, A., Li, C., Lin, L., Maiolino, R., Malanushenko,
V., Malanushenko, E., Mao, S., Maraston, C., McDermid, R.M.,
Merriﬁeld, M.R., Nichol, R.C., Oravetz, D., Pan, K., Parejko,
J.K., Sanchez, S.F., Schlegel, D., Simmons, A., Steele, O., Stein-
metz, M., Thanjavur, K., Thompson, B.A., Tinker, J.L., van den
Bosch, R.C.E., Westfall, K.B., Wilkinson, D., Wright, S., Xiao,
T., Zhang, K., 2015. Overview of the SDSS-IV MaNGA Survey:
Mapping nearby Galaxies at Apache Point Observatory. ApJ 798, 7.
doi:10.1088/0004-637X/798/1/7, arXiv:1412.1482.
torch: Tensors and Neural Net-
works with ’GPU’ Acceleration. Https://torch.mlverse.org/docs,
https://github.com/mlverse/torch.

Falbel, D., Luraschi, J., 2022.

Fan, J., Sun, Q., Zhou, W.X., Zhu, Z., 2018. Principal Component
Analysis for Big Data. John Wiley & Sons, Ltd. pp. 1–13. doi:10.
1002/9781118445112.stat08122.

Ishida, E.E.O., de Souza, R.S., 2013. Kernel PCA for Type Ia
supernovae photometric classiﬁcation. MNRAS 430, 509–532.
doi:10.1093/mnras/sts650, arXiv:1201.6676.

Jolliffe, I.T., Cadima, J., 2016. Principal component analysis: a review
and recent developments. Philos. Trans. R. Soc. A Math. Phys. Eng.
Sci. 374, 20150202. doi:10.1098/rsta.2015.0202.

Kiefer, S., Bohn, A.J., Quanz, S.P., Kenworthy, M., Stolker, T.,
2021. Spectral and angular differential imaging with SPHERE/IFS.
Assessing the performance of various PCA-based approaches to
PSF subtraction. A&A 652, A33. doi:10.1051/0004-6361/
202140285, arXiv:2106.05278.

Law, D.R., Cherinka, B., Yan, R., Andrews, B.H., Bershady, M.A.,
Bizyaev, D., Blanc, G.A., Blanton, M.R., Bolton, A.S., Brownstein,
J.R., Bundy, K., Chen, Y., Drory, N., D’Souza, R., Fu, H., Jones,
A., Kauffmann, G., MacDonald, N., Masters, K.L., Newman, J.A.,
Parejko, J.K., S´anchez-Gallego, J.R., S´anchez, S.F., Schlegel, D.J.,
Thomas, D., Wake, D.A., Weijmans, A.M., Westfall, K.B., Zhang,
K., 2016. THE DATA REDUCTION PIPELINE FOR THE SDSS-
IV MaNGA IFU GALAXY SURVEY. The Astronomical Journal
152, 83. URL: https://doi.org/10.3847/0004-6256/
152/4/83, doi:10.3847/0004-6256/152/4/83.

Lazcano, R., Madro˜nal, D., Salvador, R., Desnos, K., Pelcat, M.,
Guerra, R., Fabelo, H., Ortega, S., Lopez, S., Callico, G., Juarez,
E., Sanz, C., 2017. Porting a pca-based hyperspectral image dimen-
sionality reduction algorithm for brain cancer detection on a many-
core architecture. Journal of Systems Architecture 77, 101–111.
https://www.sciencedirect.com/science/
URL:
article/pii/S1383762116302934,
doi:https:
//doi.org/10.1016/j.sysarc.2017.05.001.

Nie, L., Li, G., Peterson, J.R., Wei, C., 2021. The point spread function
reconstruction - II. The smooth PCA. MNRAS 503, 4436–4445.
doi:10.1093/mnras/stab733.

Paszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J., Chanan, G.,
Killeen, T., Lin, Z., Gimelshein, N., Antiga, L., Desmaison, A.,
K¨opf, A., Yang, E.Z., DeVito, Z., Raison, M., Tejani, A., Chil-
amkurthy, S., Steiner, B., Fang, L., Bai, J., Chintala, S., 2019. Py-
torch: An imperative style, high-performance deep learning library,
Curran Associates, Inc.

Pearson, K., 1901. Liii. on lines and planes of closest ﬁt to systems
of points in space. The London, Edinburgh, and Dublin Philosoph-
ical Magazine and Journal of Science 2, 559–572. doi:10.1080/
14786440109462720.

Sharma, A., Paliwal, K.K., Imoto, S., Miyano, S., 2013. Principal
component analysis using qr decomposition.
International Jour-
nal of Machine Learning and Cybernetics 4, 679–683. URL:
https://doi.org/10.1007/s13042-012-0131-7,
doi:10.1007/s13042-012-0131-7.

de Souza, R.S., Maio, U., Bifﬁ, V., Ciardi, B., 2014. Robust PCA
and MIC statistics of baryons in early minihaloes. MNRAS 440,
240–248. doi:10.1093/mnras/stu274.

Steiner, J.E., Menezes, R.B., Ricci, T.V., Oliveira, A.S., 2009. PCA
Tomography: how to extract information from data cubes. Monthly
Notices of the Royal Astronomical Society 395, 64–75. doi:10.
1111/j.1365-2966.2009.14530.x.

Vogt, F., Tacke, M., 2001. Fast principal component analysis of large
data sets. Chemometrics and Intelligent Laboratory Systems 59, 1–
18. URL: https://www.sciencedirect.com/science/
article/pii/S0169743901001307, doi:https://doi.
org/10.1016/S0169-7439(01)00130-7.

Yang, X., Mo, H.J., van den Bosch, F.C., Pasquali, A., Li, C., Bar-
den, M., 2007. Galaxy Groups in the SDSS DR4. I. The Catalog
and Basic Properties. ApJ 671, 153–170. doi:10.1086/522027,
arXiv:0707.4640.

Yohana, E., Ma, Y.Z., Li, D., Chen, X., Dai, W.M., 2021. Re-
covering the 21-cm signal from simulated FAST intensity maps.
MNRAS 504, 5231–5243. doi:10.1093/mnras/stab1197,
arXiv:2104.10937.

Yuan, F.T., Argudo-Fern´andez, M., Shen, S., Hao, L., Jiang, C., Yin,
J., Boquien, M., Lin, L., 2018. Spatially resolved star formation
and dust attenuation in Mrk 848: Comparison of the integral ﬁeld
spectra and the UV-to-IR SED. A&A 613, A13. doi:10.1051/
0004-6361/201731865, arXiv:1801.04860.

6

