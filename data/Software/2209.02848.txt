2
2
0
2

p
e
S
6

]

Y
S
.
s
s
e
e
[

1
v
8
4
8
2
0
.
9
0
2
2
:
v
i
X
r
a

Traﬃc State Estimation for Connected Vehicles using the Second-Order
Aw-Rascle-Zhang Traﬃc Model

Suyash C. Vishnoia,∗, Sebastian A. Nugrohob, Ahmad F. Tahac, Christian G. Claudela

aDepartment of Civil, Architectural, and Environmental Engineering, The University of Texas at Austin, 301 E. Dean
Keeton St. Stop C1700, Austin, TX 78712.
bDepartment of Electrical Engineering and Computer Science, University of Michigan, 1301 Beal Ave., Ann Arbor, MI
48109.
cDepartment of Civil and Environmental Engineering, Vanderbilt University, 2201 West End Ave, Nashville, TN 37235.

Abstract

This paper addresses the problem of traﬃc state estimation (TSE) in the presence of heterogeneous sensors
which include both ﬁxed and moving sensors. Traditional ﬁxed sensors are expensive and cannot be installed
throughout the highway. Moving sensors such as Connected Vehicles (CVs) oﬀer a relatively cheap alternative
to measure traﬃc states across the network. Moving forward it is thus important to develop such models that
eﬀectively use the data from CVs. One such model is the nonlinear second-order Aw-Rascle-Zhang (ARZ)
model which is a realistic traﬃc model, reliable for TSE and control. A state-space formulation is presented
for the ARZ model considering junctions in the formulation which is important to model real highways
with ramps. Linear approximation of the state-space model is investigated with respect to two techniques,
ﬁrst-order Taylor series approximation and Carleman linearization. A Moving Horizon Estimation (MHE)
implementation is presented for TSE using a linearized ARZ model. Various state-estimation techniques
used for TSE in the literature along with the presented approach are compared with regard to accuracy,
computational tractability and parameter tuning with the help of a case study using the VISSIM traﬃc
simulation software. Several research questions are posed and addressed with thorough analysis of the
results.

Keywords: Traﬃc state estimation, highway traﬃc networks, second-order models, Aw-Rascle-Zhang
model, Moving Horizon Estimation, connected vehicles.

1. Motivation and Paper Contributions

With the large number of vehicles overloading the transportation systems across the world, problems
like congestion, accidents, and pollution have become common. As a remedy to such circumstances, control
techniques such as variable speed limits, ramp metering, route control and their combinations have become
quite popular for instance see [1, 2, 3, 4].

These techniques require the knowledge of the system at all times to make them work eﬀectively. A
popular method for real-time monitoring of traﬃc systems is by means of traﬃc state estimation (TSE) using
dynamic traﬃc models which provide a high-ﬁdelity picture of the traﬃc spatio-temporally while utilizing
data from sensors available throughout the highway. In general, more data results in better estimates of the
system states. However, since ﬁxed sensors like inductive loop detectors are quite expensive, they cannot be
placed at short intervals throughout the highway. Connected vehicles (CVs) oﬀer a potential solution to this
problem by providing additional sources of data relatively free of cost [5]. Here, we assume that most of the
communication between the CVs and the network operator will take place via existing cellular networks so
there will be no additional costs of building connected highway infrastructure everywhere. As the proportion

∗Corresponding author
Email addresses: scvishnoi@utexas.edu (Suyash C. Vishnoi), snugroho@umich.edu (Sebastian A. Nugroho),

ahmad.taha@vanderbilt.edu (Ahmad F. Taha), christian.claudel@utexas.edu (Christian G. Claudel)

Preprint submitted to Transportation Research Part C

September 6, 2022

 
 
 
 
 
 
of CVs in the traﬃc rises, CVs will be able to provide useful data from across the system. Thus, moving
forward, it is imperative to develop such models that can utilize well the data from both ﬁxed sensors and
CVs to perform state estimation and control.

Traditionally, TSE is performed using ﬁrst-order traﬃc models such as the Lighthill-Whitham-Richards
(LWR) model [6, 7]. First-order models are simple to implement as they only have a single equation that is
the conservation of vehicles to describe the traﬃc dynamics. They also have very few calibration parameters,
making them a popular choice for state estimation. However, they only consider equilibrium traﬃc conditions,
that is, the traﬃc density (vehicles per unit distance) and traﬃc ﬂux (vehicles per unit time) are assumed to
follow a predeﬁned relationship known as the fundamental diagram. This makes them unable to represent
certain non-equilibrium traﬃc phenomena like capacity drop which are essential for the purpose of traﬃc
control [8]. Thus, the use of these models in traﬃc control is considered less eﬀective.

Second-order traﬃc models such as the Payne-Whitham (PW) model [9, 10] and the Aw-Rascle-Zhang
(ARZ) model [11, 12], on the other hand, can represent non-equilibrium traﬃc phenomena with the help
of an additional equation to describe the traﬃc dynamics. They are, therefore, considered more realistic
than the ﬁrst-order models. As a result, these models are not only good for state estimation but are also
reliable for control. Additionally, second-order models provide a natural way to incorporate multiple sources
of data as they consider both density and speed to be independent variables. In ﬁrst-order models which
only consider either the density or the speed as a variable at a time, any deviation of the speed from its
equilibrium relationship must be considered a part of the modeling error. Thus, second-order models become
a natural choice for state estimation using CV data. Note that while Lagrangian (vehicle-based) models of
traﬃc exist [13] which are arguably more compatible with trajectory based data from CVs, here we are using
road density and average vehicle speed information obtained using both CVs and ﬁxed detectors and not just
relying on trajectory based information. Therefore, we have chosen a Eulerian (location-based) second-order
model over a Lagrangian model besides the above reasons.

In light of the aforementioned discussion, the objective of this work is to develop a state-space represen-
tation of a reliable second-order traﬃc model and further investigate various state estimation techniques for
the purpose of TSE in the presence of heterogeneous traﬃc sensors including CVs. Given this objective, in
the following discussion, we present a literature review of traﬃc models used for TSE followed by a brief
discussion on the estimation techniques used.

The most popular model for TSE in the literature is the ﬁrst-order LWR model. The simple form
of the model with a minimal number of calibration parameters makes it an attractive option for large
scale implementation. Some works that implement a ﬁrst-order model to perform state estimation using
heterogeneous sensors include [14, 15, 16]. Readers can also refer to [17] for a comprehensive review of TSE
literature involving ﬁrst-order models. Due to the known limitations of ﬁrst-order models, several studies
have also undertaken state estimation using second-order models such as in [18, 19, 20] and the references
therein. Most of these studies use the second-order PW model implemented in the METANET [21, 22]
framework. The PW model has well known limitations [8] such as physical inconsistency under certain
heterogeneous traﬃc conditions which make it unreliable. A signiﬁcantly better model is the ARZ model
which retains the beneﬁts of second-order models without sacriﬁcing the physical consistency of the ﬁrst-
order models. Despite this, there are very few studies in the literature that use the ARZ model for state
estimation. The work in [23] develops a state-space formulation for the nonlinear ARZ model and performs
state estimation using Extended Kalman Filter (EKF) considering both ﬁxed and moving sensors. In [24],
the authors propose a boundary observer for state estimation using a linearized ARZ model. The study in
[25] uses Particle Filter (PF) for estimation of traﬃc states using a modiﬁed ARZ model. However, it is
worth noting that none of these papers considers junctions in the modeling. Modeling the traﬃc dynamics
at junctions is essential to the modeling of traﬃc on real highways which consist of on-ramp and oﬀ-ramp
connections. Therefore, unlike past studies, we formulate herein a state-space model for the nonlinear ARZ
model considering junctions. Note that the aforementioned studies using second-order models as well as the
present work are diﬀerent from studies like [26] which while do consider the speed to be an independent
variable like the second-order models but consider it to be known at all times using CV data. These have
been categorized as data-driven methods by [17]. In this work, unlike [26], we do not assume to have speed
data from every part of the road and speed is still a variable to be estimated for the unmeasured segments.
A majority of the TSE literature either uses one of the Kalman Filter (KF) variants from among EKF,
Unscented Kalman Filter (UKF), and Ensemble Kalman Filter (EnKF), or other techniques like PF, and

2

observers to perform state estimation, for instance see [17, 27, 28]. While these methods are computationally
attractive, they have certain limitations with respect to TSE. The primary limitation is that they do not
have an inherent way to deal with state constraints. Thus, it is possible that the estimates generated from
these methods contain nonphysical values of certain states which can further cause the process model to
collapse. Besides, these methods do not naturally handle arbitrary constraints such as privacy constraints
like those which forbid the state estimator to use data of certain CVs for estimation due to privacy reasons
if the collection of such data is otherwise unavoidable.

An estimation technique which handles these limitations naturally, due to its optimization-based struc-
ture, is Moving Horizon Estimation (MHE). MHE has been explored extensively in the general state esti-
mation literature, for instance in [29, 30, 31, 32], but not so much in the TSE literature. In [33] and [34],
the authors propose an MHE formulation for estimation and control of large scale highway networks using
the Macroscopic fundamental diagram (MFD). MFD is a network level traﬃc model and does not consider
the variation in traﬃc density on individual stretches of the highway. Unlike [33] and [34], we investigate
estimating the density throughout the highway stretch. The study in [35] presents an MHE formulation for
traﬃc density estimation using the Asymmetric Cell Transmission model (ACTM). ACTM is based on the
LWR model and therefore, has the drawbacks previously mentioned for ﬁrst-order models. Moreover, the
work in [35] does not consider moving sensors from CVs.

Given that, the main research gaps on this topic are: a) the absence of a state-space formulation for
a reliable second-order traﬃc model with junctions, b) the lack of exploration of MHE in the context of
TSE, and c) the absence of a comparative study between diﬀerent state-estimation techniques for TSE
using a second-order model in the presence of heterogeneous data. In what follows, we highlight the main
contributions of this paper:

• We derive a nonlinear state-space formulation for the second-order ARZ model with junctions in the
form of ramp-connections. In that, we present the detailed dynamic equations of the model. This is a
development over [23] which does not consider junctions in the formulation. Addition of junctions adds
additional complexity to the model in terms of the nonlinearity which now comprises of minimum and
piecewise functions in the model. Second-order traﬃc models are more realistic than ﬁrst-order models
like the LWR model as they can capture certain phenomena like capacity drop which are essential to
control applications. The obtained state-space formulation can thus be used for state estimation as
well as control purposes.

• We consider heterogeneous sensors including both ﬁxed and moving sensors. The former consists of
sensors like inductive loop detectors while the latter includes CVs. The state-space description is
appended to include the measurement model which is also nonlinear thus resulting in a nonlinear
input-output mapping of the system dynamics.

• Since the model is indeed large scale due to modeling large highways with several ramps, there is a
need for scalable state estimation methods. One way of achieving this is by linearizing the nonlinear
model and applying linear state estimation techniques to it. We investigate the accuracy of some
linear approximation techniques in approximating the nonlinear dynamics of traﬃc states in the ARZ
model. In particular, we compare the performance of Taylor series and Carleman linearization [36]
techniques of diﬀerent orders. With the linearization of the ARZ model, it is also possible to use it in
Model Predictive Control (MPC) [37] frameworks to perform real-time traﬃc control using for instance
variable speed limit control or ramp metering based control [38] among others.

• We investigate the performance of various state estimation techniques in terms of accuracy, computa-
tional tractability and parameter tuning using the VISSIM traﬃc simulation software. As a departure
from estimation based on KFs, PF, observers and so on, we investigate MHE for TSE. MHE, unlike the
other techniques, allows us to include diﬀerent constraints on the state variables making the problem
more practical.

Paper’s Notation:
valued row vectors with size of n, and p-by-q real matrices respectively. Sm
++
deﬁnite matrices. For any vector z ∈ Rn, (cid:107)z(cid:107)2 denotes its Euclidean norm, i.e. (cid:107)z(cid:107)2 =

Let N, R, Rn, and Rp×q denote the set of natural numbers, real numbers, and real-
denotes the set of positive
z(cid:62)z, where z(cid:62) is

√

3

the transpose of z. The symbol ⊗ denotes the Kronecker product. Tab. 1 provides the nomenclature utilized
in this paper.

Table 1: Paper nomenclature: parameter, variable, and set deﬁnitions.

Notation
Ω

ΩI

ΩO

ˆΩ
ˇΩ
T
l
ρi[k], ψi[k], wi[k]

qi[k], φi[k]

Di[k], Si[k]
ˆρi[k], ˆψi[k], ˆwi[k]

ˆqi[k], ˆφi[k]

ˆDi[k], ˆSi[k]
ˇρi[k], ˇψi[k], ˇwi[k]

ˇqi[k], ˇφi[k]
ˇDi[k], ˇSi[k]
¯qi[k], ¯φi[k]
¯ˇqi[k], ¯ˇφi[k]
Din[k], win[k]

ρout[k]
ˆDin,i[k], ˆwin,i[k]

ˇρout,i[k]
βi[k]

αi[k]

vf
ρm
α
γ
p(ρ)
Ve(ρ)

Description
the set of highway segments on the stretched highway
Ω = {1, 2, . . . , N } , N := |Ω|
the set of highway segments with on-ramps
ΩI = {1, 2, . . . , NI } , NI := |ΩI |
the set of highway segments with oﬀ-ramps
ΩO = {1, 2, . . . , NO}, NO := |ΩO|
the set of on-ramps, ˆΩ = {1, 2, . . . , NI } , NI = | ˆΩ|
the set of oﬀ-ramps, ˇΩ = {1, 2, . . . , NO} , NO = | ˇΩ|
duration of each time-step
length of each segment, on-ramp, and oﬀ-ramp
traﬃc density, relative ﬂow and driver characteristic for
Segment i ∈ Ω at time kT , k ∈ N
traﬃc ﬂow and relative ﬂux from Segment i ∈ Ω into the
next segment
demand and supply functions for Segment i ∈ Ω
traﬃc density, relative ﬂow and driver characteristic for
On-ramp i ∈ ˆΩ at time kT , k ∈ N
traﬃc ﬂow and relative ﬂux from On-ramp i ∈ ˆΩ into the
attached highway segment
demand and supply functions for On-ramp i ∈ ˆΩ
traﬃc density, relative ﬂow and driver characteristic for
Oﬀ-ramp i ∈ ˇΩ at time kT , k ∈ N
traﬃc ﬂow and relative ﬂux from Oﬀ-ramp i ∈ ˇΩ
demand and supply functions for Oﬀ-ramp i ∈ ˇΩ
incoming traﬃc ﬂow and relative ﬂux for Segment i ∈ Ω
incoming traﬃc ﬂow and traﬃc ﬂux for Oﬀ-ramp i ∈ ˇΩ
demand and driver characteristic of traﬃc wanting to
enter Segment 1 of the highway
traﬃc density downstream of Segment N of the highway
demand and driver characteristic of traﬃc wanting to
enter On-ramp i ∈ ˆΩ
traﬃc density downstream of Oﬀ-ramp i ∈ ˇΩ
proportion of traﬃc entering from Segment i ∈ Ω into the
next segment at an on-ramp junction, where βi[k] ∈ [0, 1]
split ratio for the oﬀ-ramp attached to Segment i ∈ Ω,
where αi[k] ∈ [0, 1]
free-ﬂow speed
maximum density
model parameter called relaxation time, where α ∈ R+
fundamental diagram parameter, where γ ∈ R+
pressure function which takes traﬃc density ρ as input
equilibrium traﬃc speed at traﬃc density ρ

4

2. Nonlinear Discrete-Time Modeling of Traﬃc Networks with ramps

The objective of this section is to develop a state-space formulation for the nonlinear second-order ARZ
model describing the evolution of traﬃc density on highways with ramps. The developed formulation is
useful for several control theoretic purposes including state estimation and control of highway traﬃc.

2.1. The Aw-Rascle-Zhang model

In this section, we present the modeling of traﬃc dynamics for a stretched highway connected with ramps.
To that end, we use the the second-order ARZ Model [11, 12] given by the following partial diﬀerential
equations:

∂ρv
∂ρ
∂t
∂d
∂ρ (v + p (ρ)) v
∂d
where t and d denote the time and distance; ρ is shorthand for ρ(t, d) which denotes the traﬃc density
(vehicles/distance), and v is shorthand for v(t, d) which denotes the traﬃc speed (distance/time). Here, p(ρ)
is given by

∂ρ (v + p (ρ))
∂t

ρ (v − Ve (ρ))
τ

= −

= 0,

(1b)

(1a)

+

+

,

and Ve(ρ) is given by

p (ρ) = vf

(cid:19)γ

,

(cid:18) ρ
ρm

(cid:18)

Ve(ρ) = vf

1 −

(cid:19)γ(cid:19)

.

(cid:18) ρ
ρm

(2)

(3)

In traﬃc literature, relationships like (3) are commonly called the fundamental diagram. The ﬁrst PDE in
the ARZ model ensures the conservation of vehicles which is also present in the ﬁrst-order traﬃc models.
The second PDE which ensures conservation of traﬃc momentum is unique to second-order models and
accounts for the deviation of traﬃc from an equilibrium position. This equation makes the second-order
models more realistic than the ﬁrst order models as it allows them to represent some non-equilibrium traﬃc
phenomena such as capacity drop. As second-order models allow traﬃc ﬂow to deviate from equilibrium,
they also inherently allow traﬃc speed to deviate from the equilibrium speed which allows speed data to
be incorporated independent of the density. With ﬁrst-order models, any deviation of the speed from the
equilibrium speed would have to be considered a part of modeling error. Therefore, second-order models
are more naturally suited to perform estimation using both density and speed data provided by the ﬁxed
sensors and CVs. The quantity v + p(ρ) is also called the driver characteristic and is denoted by the variable
w(t, d). The expression ρ(v + p(ρ)) is also called the relative ﬂow denoted by ψ(t, d) which is essentially
the diﬀerence between the actual ﬂow and the equilibrium ﬂow at any ρ. Notice that in (1), ρv is the
ﬂux of traﬃc (vehicles/time) which will be denoted by q(t, d), while ρ(v + p(ρ))v is the ﬂux of relative ﬂow
(vehicles/time2), also called the relative ﬂux, which will be denoted by φ(t, d). Using the relative ﬂow and
the two ﬂux, the ARZ model can simply be rewritten as

∂ρ(t, d)
∂t
∂ψ(t, d)
∂t

+

+

q(t, d)
∂d
∂φ(t, d)
∂d

= 0,

= −

ψ(t, d)
τ

+

vf ρ(t, d)
τ

,

(4a)

(4b)

which can be converted to a state-space equation with ρ and y as the states.

To represent this model as a series of diﬀerence, state-space equations, we discretize the ARZ Model (4)
with respect to both space and time, also referred to as the Godunov scheme [39]. This allows us to divide
the highway of length L into segments of equal length l and the traﬃc networks model to be represented by
discrete-time equations. These segments form both the highway and the attached ramps. Throughout the
paper, the segments forming the highway are referred to as mainline segments. We assume the highway is
split into N mainline segments.

5

To ensure computational stability, the Courant-Friedrichs-Lewy condition (CFL) [40] given as vf T l−1 ≤ 1
has to be satisﬁed. Since each segment is of the same length l, then we have ρ(t, d) = ρ(kT, l), where k ∈ N
represents the discrete-time index. For simplicity, we deﬁne ρ(kT, l) := ρ[k]. The other variables are also
deﬁned in the same way, namely w[k], ψ[k], q[k] and φ[k]. The expressions for the ﬂux functions q[k] and
φ[k] for any segment depend on the arrangement of the segments before and after that segment. In what
follows, we deﬁne the ﬂux expressions for diﬀerent types of segment junctions, but before that, we need to
deﬁne two other functions called the demand and supply functions which are given below.

2.2. Demand and supply functions

The demand of a segment denotes the traﬃc ﬂux that wants to leave that segment while the supply of a
segment denotes the traﬃc ﬂux that can enter that segment. Based on these deﬁnitions, the demand Di[k]
for Segment i can be written, similar to [41, 42], as

(cid:40)

Di[k]=

if ρi[k] ≤ σ(wi[k]),
ρi(wi[k] − p(ρi[k])),
σ(wi[k])(wi[k] − p(σ(wi[k]))), if ρi[k] > σ(wi[k]),

Here, σ(wi[k]) denotes the density that maximizes the demand function and is given as

σi(w[k]) = ρm

(cid:18) wi[k]

vf (1 + γ)

(cid:19) 1

γ

.

The supply function Si[k] on the other hand is given by

(cid:40)

Si[k]=

σ(wi[k])(w[k] − p(σ(w[k]))),
ρi(w[k] − p(ρi[k])),

if ρi[k] ≤ σ(w[k]),
if ρi[k] > σ(w[k]).

(5)

Notice that w[k] used in (5) does not belong to Segment i. Instead, it is calculated from the ρ[k] and y[k]
of the incoming traﬃc upstream of Segment i. The exact method of calculating this w[k] is given in the
following section. Next, we deﬁne the expressions for the ﬂux functions q[k] and φ[k].

2.3. Flux formulae at junctions

This section presents the expressions for the traﬃc ﬂux q[k] and the relative ﬂux φ[k], which form the
nonlinear part of the state-space model. Development of analytical equations for junction ﬂows in the
ARZ and other similar second-order models is an active ﬁeld of research [43, 42, 41], with diﬀerent papers
providing diﬀerent approaches to model the junction ﬂows, some more complex than the others. However,
since state estimation allows for some extent of modeling errors, it is possible to develop a simple state-space
formulation for the ARZ model without going into intractable schemes. We consider three types of segment
junctions, a one-to-one junction between two mainline segments, a merge junction between two mainline
segments and an on-ramp, and a diverge junction between two mainline segments and an oﬀ-ramp. In the
following discussion, we assume that the mainline segment before the junction has index i ∈ Ω, the segment
after the junction has index i + 1 and the ramp has index j ∈ ˆΩ for on-ramp and j ∈ ˇΩ for oﬀ-ramp.

2.3.1. One-to-one junction

The traﬃc ﬂux leaving Segment i and entering Segment i + 1 at a one-to-one junction is given as

while the relative ﬂux is given as

qi[k] = min(Di[k], Si+1[k])),

φi[k] = qi[k]wi[k] = qi[k]

ψi[k]
ρi[k]

.

6

2.3.2. Merge junction (on-ramp connection)

At a merge junction, we have that ¯qi+1[k] = qi[k] + ˆqj[k]. We assume that the ﬂow entering Segment

i + 1 from each of the incoming segments is in the proportion of their demands, that is, if

then

βi[k] =

Di[k]
Di[k] + ˆDj[k]

,

qi[k] = βi[k]¯qi+1[k],
ˆqj[k] = (1 − βi[k])¯qi+1[k].

(6a)

(6b)

In case of a merge junction, the w[k] used to calculate the supply for the outgoing segment using (5) is
denoted as ¯w[k] and is calculated as

Then the traﬃc ﬂux leaving Segment i is given by

¯w[k] = βi[k]wi[k] + (1 − βi[k]) ˆwj[k].

qi[k] = min(βi[k]Si+1[k], Di[k],

βi[k]
1 − βi[k]

ˆDj[k]).

¯qi+1[k] and ˆqj[k] can thereafter be calculated using (6). The relative ﬂux entering Segment i + 1 is given as

and those exiting the incoming segments are given by

¯φi+1[k] = ¯qi+1[k] ¯w[k],

φi[k] = qi[k]wi[k],
ˆφj[k] = ˆqj[k] ˆwj[k].

2.3.3. Diverge junction (oﬀ-ramp connection)

At diverge junctions, we have that qi[k] = ¯ˇqj[k] + ¯qi+1[k]. We assume that the proportion of the ﬂow

entering the Oﬀ-ramp j from Segment i is given by a predeﬁned constant αi[k], such that

¯ˇqj[k] = αi[k]qi[k],

¯qi+1[k] = (1 − αi[k])qi[k].

In case of a diverge junction, we use wi[k] to calculate the supply for both the mainline Segment i + 1 and
the Oﬀ-ramp j. The ﬂow qi[k] can then be written as

qi[k] = min(Di[k],

ˇSj[k]
αi[k]

,

Si+1[k]
(1 − αi[k])

),

while the relative ﬂux leaving Segment i is given as

φi[k] = qi[k]wi[k].

The relative ﬂux entering the outgoing segments have the same relationship as the ﬂows, that is

¯φj[k] = αi[k]φi[k],

¯φi+1[k] = (1 − αi[k])φi[k].

7

2.4. State-space equations

The discrete time traﬃc ﬂow and relative ﬂow conservation equations for any Segment i ∈ Ω can be

written as

ρi[k + 1] = ρi[k] +

(cid:18)

ψi[k + 1] =

1 −

1
τ

T
l
(cid:19)

(qi−1[k] − qi[k]),

ψi[k] +

T
l

(φi−1[k] − φi[k]) +

vf
τ

ρi[k].

(10a)

(10b)

Similar equations can be written for ramp segments as well. Here, qi[k] and φi[k] take the expressions from
the previous section depending upon the arrangement of Segment i with respect to other segments. The
state vector for this system can be deﬁned as

x[k] := [ρi[k] ψi[k] . . . ˆρj[k] ˆψj[k] . . . ˇρl[k] ˇψl[k] . . .](cid:62) ∈ R2(N +NI +NO),

for which i ∈ Ω, j ∈ ˆΩ and k ∈ ˇΩ. In this work, we assume that the demand and the driver characteristic
upstream of the ﬁrst mainline segment are known, that is, D0[k] = Din[k] and w0[k] = win[k] and the
density downstream of the last mainline segment is also assumed to be known, that is ρN +1[k] = ρout[k].
Similarly, the demand and driver characteristic upstream of the on-ramps and the density downstream of
the oﬀ-ramps is also considered to be known. These values can be obtained using conventional detectors like
the inductive loop detectors placed upstream of the input segments and downstream of the output segments
of the highway. An approximate value of the demand can also be obtained using Origin-Destination ﬂow
matrices [44] if available for the given region. Then,

u[k] := [Din[k] win[k] ρout[k] . . . ˆDin,j[k] ˆwin,j[k] . . . ˇρout,l[k] . . .](cid:62) ∈ R3+2NI +NO ,

where j ∈ ˆΩ and l ∈ ˇΩ.

The evolution of traﬃc density and relative ﬂow described in (10) can be written in a compact state-space

form as follows

x[k + 1] = Ax[k] + Gf (x, u),

(11)

where A ∈ Rnx×nx for nx := 2(N + NI + NO) represents the linear dynamics of the system, f : Rnx × Rnu →
Rnx for nu = 3+2NI +NO is a vector valued function representing nonlinearities in the state-space equation,
and G ∈ Rnx×nx is a matrix representing the distribution of nonlinearities.

The nonlinearities in f are in the form of a minimum of weighted nonlinear functions of the states and
inputs. The structure of the above mentioned matrices and functions is provided in Appendix A. Next, we
discuss the measurement model for the ARZ model which is also nonlinear in nature.

2.5. Sensor data and measurement model

We consider two types of sensors in this work, ﬁrst are the ﬁxed sensors like the inductive loop detectors
and second are the CVs. This study assumes that it is possible to retrieve density and speed data from both
the types of sensors. While it is not possible to obtain density data directly from a single loop detector,
two loop detectors installed at opposite ends of a segment can provide us with this information. Here, one
loop detector provides us with the vehicle counts entering the segment while the other detector provides
the counts leaving that segment. Then, starting from an empty highway segment, the continuous vehicle
counts can provide us with the total number of vehicles at any time on a road segment of known length
which gives us the traﬃc density for that segment. This is similar to the approach used in [45] for density
calculation. To determine when the segment is empty, one can look at both the loop detectors’ readings
over time and start to calculate the density from that point onwards. The loop detectors when installed
in pairs are already known to provide speed data directly. CVs are known to provide the current position
and speed data directly. The average speed of a segment can be assumed to be the average of the speed
data provided by all the queried CVs in that segment similar to [46]. To obtain density data from CVs, we
assume additional functionality including either spacing measurement equipment which is available as part
of advanced driver assistance systems [47] or availability of vehicular ad-hoc networks (VANETs) which allow
vehicles to communicate with each other in a neighbourhood around the queried CV [48]. When assuming

8

Figure 1: Heterogenous sensors on the highway: ﬁxed sensors represented by dashed lines across the highway and CVs represented
by the solid black rectangles.

the latter it is important to note the limitation imposed by the communication range of the vehicles on
the maximum cell length for traﬃc modeling. In case of the former, while a cell length limitation may not
be required, a suﬃcient penetration of CVs is necessary on the segments which are queried for data. The
data from the CVs is sent via cellular network to a network operator who performs any prior computation
if necessary to convert the received information like the spacing data or neighbourhood counts into density
measurements before using them for state estimation. A measurement error can also be associated with the
data at this point based on the available information on penetration rate or other factors.

Figure 1 presents a schematic of the sensors’ placement on the highway.
Among the measurements, density ρi[k] for any mainline segment i ∈ Ω, and similarly for the ramps, is
directly a state and is used as it is, while the velocity vi[k] can be written in terms of the states as follows:

We deﬁne a nonlinear measurement function h(x[k]) such that

vi[k] =

ψi[k]
ρi[k]

− p(ρi[k]).

h2i−1(x[k]) = x2i−1[k],

h2i(x[k]) =

x2i[k]
x2i−1[k]

− p(x2i−1[k]).

Now, we can deﬁne the measurement vector y[k] as

y[k] = C[k]h(x[k]) + ν[k],

where C[k] is the observation matrix at time k describing the availability of measurements from sensors.
Note, that the observation matrix here is variable in time because of the measurements from connected
vehicles which keep changing their location with time. At any time k, np[k] is the number of measurements.
Here, ν[k] ∈ Rnν [k], nν[k] = np[k] lumps all the measurement errors including the sensor noise into a single
vector.

The above results are important as they allow us to perform state estimation for traﬃc systems using the
second-order ARZ model. The state-space equation (11) can also be used for control purposes using control
theoretic approaches from the literature. In the following section, we discuss some methods for linearization
of nonlinear functions which allow us to apply some linear state estimation techniques to the otherwise
nonlinear ARZ model.

3. Linear Model Approximation

The ARZ model speciﬁed in Section 2 is nonlinear due to the presence of the piecewise linear and nonlinear
expressions in the traﬃc ﬂux and relative ﬂux terms. This prevents from directly using some of the well-
known and eﬃcient linear state estimation techniques from the literature. However, it is still possible to
apply linear state estimation techniques to a linearized version of the ARZ model. Techniques such as Taylor
series expansion [49] and Carleman Linearization [36] allow to obtain good linear approximations of nonlinear
functions. In this section, we show that it is possible to obtain a close approximation of the nonlinear ARZ
model about suitable operating points which can then be used for state estimation.

9

3.1. First-order Taylor series approximation

For the nonlinear function f : Rnx × Rnu → Rnx , speciﬁed in (11), the ﬁrst-order Taylor series expan-

sion [49] about a point (x0, u0) can be written as

f (x, u) ≈ f (x0, u0) + ∇fx(x0, u0)(x − x0)

+ ∇fu(x0, u0)(u − u0),

(13)

where

and

∇fx(x0, u0) =

∇fu(x0, u0) =

(cid:20) ∂f
∂x1

(cid:20) ∂f
∂u1

(x0, u0) · · ·

(cid:21)

(x0, u0)

∂f
∂xn

∈ Rnx×nx,

(x0, u0) · · ·

(cid:21)
(x0, u0)

∂f
∂um

∈ Rnx×nu .

Here, the operating states x0 and operating inputs u0 are not ﬁxed for all k, instead they are selected as
close to the time step k as permitted by the availability of reliable input data and state estimates. The
choice of operating point is discussed in Section 5.3. We add the coeﬃcients of x from this linearization to
the A matrix in (11) to get a new coeﬃcient matrix for the approximate model. We obtain the following
linear state-space equation

x[k + 1] ≈ ˜Ax[k] + Bu[k] + c1,

where ˜A = A+G∇fx(x0, u0), B = G∇fu(x0, u0), and c1 = G(f (x0, u0)−∇fx(x0, u0)x0−∇fu(x0, u0)u0).
Similarly, we can also linearize the measurement model as follows:

y[k] ≈ ˜C[k]x[k] + c2[k],

where ˜C[k] = C[k]∇hx(x0) and c2[k] = C[k]h(x0) − ∇hx(x0)x0, where ∇hx(x0) is the gradient of the
measurement function given in (12) at x0.

Since we know the input at every time step, we can always linearize using the current input value. In
that case, we do not need the third term in the linearization equation (13) as it will always be equal to zero.

3.2. Carleman linearization

Another technique for linearization which is considered to give very good approximations for nonlinear
functions is called Carleman linearization [36]. In this technique, a nonlinear model is ﬁrst polynomialised
using Taylor series approximation of a certain order (if not already in the form of a polynomial) followed
by linearization of the polynomial by writing the unique monomials as new states of the system. For
discrete-time systems, the methodology for Carleman linearization is speciﬁed in [50]. We discuss it brieﬂy
in Appendix C.

As also mentioned in Appendix C, a major drawback of the approach is that it requires truncation of
the newly deﬁned state vectors for implementation in a state-space formulation. Besides this, since the ﬁrst
step of this approach involves polynomializing the nonlinear model, the accuracy of the approach depends on
the accuracy of the Taylor series approximation. A quantitative comparison between the given linearizaiton
techniques is presented in Section 5.3.

10

4. State Estimation Techniques

In this section, we brieﬂy discuss the diﬀerent techniques implemented in this work for TSE using the

ARZ model.

4.1. Moving Horizon Estimation

MHE is an optimization based state estimation technique which uses measurement data in batches from
the most recent time horizon along with a process model to determine the states of the system. It involves
solving an optimization problem at every time step of the process with the objective of minimizing the
deviation of the estimated states from the modeled states as well as from the measurement data. Being an
optimization problem, it is possible to include additional constraints in the problem such as bounds on the
state variables. Depending upon whether the model is linear or nonlinear, MHE is divided into linear MHE
and nonlinear MHE, both of which have been well explored in the literature. While linear MHE only requires
solving a linear program or a quadratic program (QP) and is generally fast and easy to solve using available
solvers, nonlinear MHE involves solving a nonlinear optimization problem which is both time consuming
and diﬃcult. Since TSE for the purpose of control is required to be done in real time, in practice it is not
always possible to spend enough time in solving a nonlinear optimization problem. Therefore, in this paper
we implement a linear MHE approach on a linearized version of the process model. Throughout this section,
N is used to denote the size of the horizon for optimization. For time steps up to N , that is, near the start of
the process, the horizon size is kept equal to the number of time steps from the initial time up to that time.
The MHE implemented in this work has a similar objective function to [29]. In the following discussion,
we ﬁrst present our implementation of the MHE optimization problem and then discuss the limitation of
another MHE implementation from the literature with respect to TSE and why the current implementation
works better for TSE.

4.1.1. Decision variables

The primary decision variables for a single run of the MHE optimization problem at time step k are the
state vectors from time step k − N to k denoted by xk[t] ∀ t ∈ [k − N, k]. These should not be confused with
ˆx[k − N ], . . . , ˆx[k] which are the ﬁnal state estimates. Out of the decision variables for the optimization at
time step k, we set the value of the vector xk[k] as the ﬁnal estimate, that is, ˆx[k] = xk[k].

4.1.2. Objective function

The objective function for MHE at time step k ∈ [N + 1, ∞] is denoted by J[k] and is given as

J[k] = µ||xk[k − N ] − ¯x[k − N ]||2 + w1

k
(cid:88)

||y[i] − ( ˜Cixk[i] + c2i)||2

i=k−N

k−1
(cid:88)

+ w2

||xk[i + 1]−( ˜Aixk[i] + Biu[i] + c1i)||2,

i=k−N

(14)

Here, ¯x[k − N ] is a prediction of x[k − N ] based on a previously obtained state estimate and is expressed

as

¯x[k −N ] = A ˆx[k −N −1] + Gf ( ˆx[k −N −1], u[k −N −1]).

(15)

Some literature such as [51] suggest using another state estimation technique like UKF to obtain the predicted
states from the previous estimate to better utilize the available measurement data. In this work, we simply
use the process model as shown in (15). The notation y[i] is the measurement vector at time step i ∈ [k−N, k],
˜Ai, Bi and c1i
are
parameters of the linearized measurement model ∀ i ∈ [k − N, k]. Here, ˜Ak, Bk and c1k
are computed at
(xo, u[k]) where xo=(cid:80)k−1
i=k−1−N xk−1[i]/(N + 1), and ˜Ck and c2k
are are computed at xo.

are parameters of the linearized state-space equation ∀ i ∈ [k − N, k − 1], and ˜Ci and c2i

The ﬁrst term in the the objective is known as the arrival cost which serves to connect the decision
variables of the current optimization problem with the estimates up to the previous time step. This eﬀectively
allows us to consider the impact of data prior to the current horizon in the estimation process. The second

11

Algorithm 1: MHE Implementation for TSE
1 input: total time tf , horizon length N , weights µ, w1, and w2, state-space matrices A, G and

function f , measurements from sensors y[i] ∀ i ∈ [1, tf ], inputs u[i] ∀ i ∈ [1, tf ], assumed initial state
ˆx[0], and state bounds xmin and xmax

2 while t ≤ tf do
3

5

4

i=t−1−N xt−1[i]/(N + 1)

at (xo, u[t]), linearized measurement equation matrices ˜Ct and c2t

set: operating state xo = (cid:80)t−1
compute: predicted state ¯x[t − N ] using (15), linearized state-space equation matrices ˜At, Bt,
and c1t
set: coeﬃcient matrices H and q using ¯x[t − N ], y[i] ∀ i ∈ [t − N, t], ˜Ai, Bi, and
c1i∀i ∈ [t − N, t − 1], and ˜Ci and c2i ∀ i ∈ [t − N, t], and bound vectors zmin and zmax using
xmin and xmax
solve: optimization problem (18) for zt
set: ˆx[t] = xt[t]
8 output: ˆx[1], . . . , ˆx[tf ]

at xo

7

6

and third terms in the objective are penalties on the deviation of the estimates from the measurement data
and the modeled dynamics respectively. µ, w1 and w2 are the weights specifying our relative conﬁdence on
the past data and past estimates, the current measurement data, and the process model, and can be set by
the modeler accordingly. The overall goal of the problem is to minimize J[k] under the following constraints.

4.1.3. Constraints

The constraints for the MHE optimization problem consist of the lower and upper bounds on the states,

that is, if the bound vectors are xmin and xmax ∈ Rnx respectively, then the constraints are deﬁned as

xmin ≤ xk[i] ≤ xmax, ∀ i ∈ [k − N, k].

For the problem at hand, we have xmin = 0, and xmax = [ρm ρmvf ρm ρmvf
· · · ρm ρmvf ]T .

4.1.4. Optimization problem

The above objective and constraints are used to write the following optimization problem

minimize
xk[k−N ],...,xk[k]
subject to

J[k]

(16).

(16)

(17)

The objective function J[k] can also be expressed as a sum of quadratic and linear terms of the state
vectors as shown in Appendix B. Deﬁning zk by concatenating the decision variables from (17) such that
zk = [xk[k − N ]T xk[k − N + 1]T · · · xk[k]]T , we can write the optimization problem (17) in the standard
form of a QP deﬁned as

minimize
zk
subject to

k Hzk + qT zk
zT

zmin ≤ zk ≤ zmax.

(18)

where H ∈ R(N +1)nx×(N +1)nx and q ∈ R(N +1)nx consist of the coeﬃcients of the quadratic and linear terms
in the objective respectively. zmin and zmax ∈ R(N +1)nx are the lower bound and upper bound vectors of
zk obtained by concatenating xmin and xmax respectively. From Appendix B, it can be seen that H is a
positive deﬁnite matrix. This makes (18) a convex program which can be solved eﬃciently using readily
available QP solvers like CPLEX or MATLAB’s quadprog function. Algorithm 1 presents the steps involved
in MHE as implemented in this study.

12

4.1.5. Limitation of other implementation

The MHE literature presents some other implementations of the optimization problem as well such as the
one presented in [52]. The said approach only considers minimization of the arrival cost and the measurement
errors but not the modeling errors that is, the third term in the objective function (14) is missing. This
results in a problem that is faster to solve. However, since actual traﬃc states ﬂuctuate more than what is
captured by even a second-order traﬃc model like the ARZ model, there are always some modeling errors
which need to be accounted for by considering modeling errors. Additionally, we have some errors due to
the linearization of both the process and the measurement models. As a result, not considering modeling
error or the third term in (14) results in a relatively bad performance of MHE for TSE.

Next, we present a brief discussion on the usage of KFs for TSE.

4.2. Kalman Filter variants and limitations

KFs are quite popular when it comes to TSE. Since the traﬃc process models are nonlinear we cannot use
the ordinary KF, instead, most works use variants of KF designed for nonlinear systems namely the EKF,
UKF, and EnKF. There is ample literature available on the design of these ﬁlters and their application in
TSE, see [17] for references. A common limitation of the KF variants is that they do not inherently allow
bounds on the state estimates. Since traﬃc states can only take values from a particular range, this makes
Instead some modiﬁcations are required such as manually
it diﬃcult to apply the KF variants directly.
restricting the states to within their bounds after the state estimate for any time step is obtained. Another
limitation of the KF variants is that they assume all errors to be Gaussian. This assumption is not necessarily
true in many cases including the traﬃc system which can result in potential errors in state estimation. MHE
naturally overcomes both these limitations.

In the following section, we discuss the implementation and results obtained by applying the above

mentioned estimation techniques with the help of a numerical example.

5. Case Study using VISSIM

In this section, we apply the state estimation techniques discussed above namely EKF, UKF, EnKF,
and MHE, on a traﬃc simulation example generated in VISSIM micro-simulation software to highlight their
advantages and limitations with respect to TSE.

All the simulations are carried out using MATLAB R2020a running on a 64-bit Windows 10 with 2.2GHz
IntelR CoreTM i7-8750H CPU and 16GB of RAM. We use the quadprog function in MATLAB to solve the
MHE optimization problem.

5.1. Case study objectives

The main idea of this case study is to test the performance of the state estimation techniques discussed

in Section 4. In particular, we are interested in knowing the answers to the following questions:

• Q1: How does the number and placement of sensors impact the performance of the various estimation

techniques?

• Q2: Is the state estimation performance robust to changing initial conditions?

• Q3: Is there an algorithm which requires least tuning to its parameters?

• Q4: Which estimation technique utilizes best the data from CVs?

• Q5: Which estimation technique is the most reliable overall?

Following is a description of the highway structure used for this study.

13

Figure 2: Schematic diagram of the highway considered in this study.

5.2. Highway setup and VISSIM simulation

In this study, we model the highway stretch as shown in Figure 2 consisting of one on-ramp and two oﬀ-
ramps. An additional 100 m of highway stretch is modeled in VISSIM preceding the shown stretch. While
we only perform state estimation on the latter 900 m and the attached ramps, this additional stretch of
highway modeled in VISSIM provides us with the system inputs namely the demand upstream of Segment 1
as well as the upstream density and speed which are used to calculate the upstream driver characteristic. A
similar 100 m stretch is modeled upstream of the on-ramp as well and serves the same purpose of providing
the exact inputs. We set the following parameters for the Weidemann 99 model in VISSIM: CC0 1.50 m,
CC1 0.9 s, CC2 4.00 m, CC3 −8.00, CC4 −0.50, CC5 0.60, CC6 6.00, CC7 0.25 m/s2, CC8 1.00 m/s2,
and CC9 1.50 m/s2. The ARZ model parameters are selected to keep the simulated state trajectories from
the macroscopic model as close to the VISSIM simulation as possible. The selected values are: v = 102
km/hr, ρm = 345 veh/km, τ = 20, and γ = 1.75. Under the Godunov scheme, the highway and ramps are
divided into segments of length 100 m each with a time-step value of 1 s, which satisﬁes the CFL condition.
Thus, there are a total of 24 states in this highway system. In this paper, we consider two types of sensors,
ﬁrst is the ﬁxed sensors which provide density and speed data for every segment they are placed in. The
second type of sensor is the CVs which provide the average speed and density data for the segment they are
traveling in. In the next section, we look at the results obtained by applying the linearization techniques
mentioned in Section 3 on the highway and model speciﬁed above. The study that follows will make use of
the linearization technique selected based on the ensuing results.

5.3. Comparison of linearization techniques

Here, we present a quantitative comparison of the diﬀerent linearization techniques discussed in Section
3. Since there is a large diﬀerence in scale between the density and relative ﬂow, we use the Normalized Root
Mean Square Error (NRMSE) for this comparison which is deﬁned in this work, similar to [53] as

NRMSE =

(cid:118)
(cid:117)
(cid:117)
(cid:116)

1
kf

nx(cid:88)

i=1

1
σi

kf
(cid:88)

(ei[k])2,

k=1

where σi is the standard deviation of the ith state values, kf = 200 sec is the total time of simulation, and
ei[k] is the error for the ith state between the nonlinear and linearized model at time k. Table 2 presents
the NRMSE for ﬁrst, second, and third-order Taylor series approximations for diﬀerent choices of the gap
between the states used for linearization. This is done to get a sense of where the ﬁrst-order expansion
stands and whether it is valuable to go for a higher order approximation instead and further linearize it
with Carleman linearization. While the approximation is performed at every time step with the available
input for that time step, the state in the operating point is only updated once every certain number of steps.
This is done to emulate the condition when applying MHE where all the states within a horizon are decision
variables and the approximation cannot use the knowledge of the current state at every time step but it can
still use the inputs which are assumed to be known. As expected, the NRMSE between the linearized and
nonlinear model trajectories increases with the increasing duration of this gap.

Table 2 also presents the NRMSE for the truncated Carleman Linearization for second and third-order
polynomials of the ARZ model. Carleman linearization of both orders has a higher NRMSE than even
the ﬁrst-order Taylor approximation for smaller gap between state update of the operating point. This is
probably because of the error induced by truncation which consistently deteriorates the quality of the higher-
order terms in the state vector (C.2) over several iterations. Although, since our ﬁnal aim is to perform

14

Table 2: NRMSE for diﬀerent approximation techniques for diﬀerent gap between state update of the operating point for
linearization.

Approximation Technique

1

1st Order Taylor
2nd Order Taylor
3rd Order Taylor
2st Order Carleman
3rd Order Carleman

0.072
0.054
0.051
1.379
0.396

Gap (time steps)

2

0.229
0.114
0.104
1.377
0.431

5

1.014
0.369
0.212
1.386
0.630

10

2.698
1.759
0.795
1.670
2.349

state estimation, some amount of error in the model is acceptable and can simply be considered a part of
the process noise. Based on these results, in what follows, we use the ﬁrst-order Taylor series approximation
for linearization of the ARZ model.

5.4. Observability of the system

To determine the required minimum number and the corresponding placement of sensors, we perform a
test of observability for our system using the concept of Observability Gramian for discrete time systems [54].
The method is originally meant to determine the observability of linear systems. In this case, we use it to
check the observability of the linearized ARZ model. The observability Gramian is deﬁned as

∞
(cid:88)

Wk =

( ˜AT

k )m ˜C[k]T ˜C[k] ˜Am
k ,

m=0

where ˜Ak is the coeﬃcient matrix of the linearized state-space model and ˜C[k] is the observation matrix of
the linearized measurement model at time k around a suitable operating point. The system is considered
In this case, since the model parameters change with time due to
observable if Wk is positive deﬁnite.
changing operating points of linearization, the Gramian changes with time as well. This can result in a
change in the observability properties. To check if the system is observable for a given sensor placement, we
calculate the Gramian for each time step over a duration of the simulation.

From this study, we ﬁnd that to make the system observable, we need to at least sense the states on the
last mainline segment and on all the oﬀ-ramps. Therefore, throughout the case study, we keep ﬁxed sensors
on these segments. Any additional sensors are placed after these segments are populated with sensors. This
is similar to the observations in [26] with respect to observability of the model used in that paper. It appears
to be a common property of traﬃc models that the states of the output segments of the network (last
mainline segment and oﬀ-ramps) need to be measured to ensure full-observability of the system. This is not
surprising as traﬃc models share similar state-update equations and therefore have similar structure of the
state-space matrices which form the observability matrix. While the concept of observability can also be
used to determine the optimal sensor placement for state estimation for any given number of sensors under
certain conditions [55], here we only use it to determine a minimum number of sensors and its placement. In
the following section, we discuss some nuances of implementing the aforementioned estimation techniques in
the current study.

5.5. Implementation of estimation techniques
5.5.1. Parameter Tuning

In the implementation of KFs, we need to set three parameters beforehand namely the estimate error
co-variance matrix denoted by P , the process noise co-variance matrix denoted by Q, and the measurement
noise co-variance matrix denoted by R. In practical applications, these matrices are not known in advance
or are diﬃcult to get. In this paper, for all the KF variants, we use a process noise co-variance matrix of the
form Q = qInx
is a identity matrix of dimension nx. Similarly, the measurement noise
co-variance matrix is set as R = rInp[k] with r ∈ R+ and np[k] is the number of measured states at time k.
The initial guess for the estimate noise co-variance matrix is taken as P = 10−3Inx
. We manually tune q
and r for each case whenever there is a diﬀerent number or placement of sensors, in an attempt to get the
best performance out of the Filters for a comparison between the techniques at their best. Similarly, we also

where q ∈ R+ and Inx

15

tune the weights in the MHE objective function. In the case study, we note how robust these parameters
are in terms of how often they need to be changed for each technique to achieve a good performance.

Besides these values, there are also some technique speciﬁc parameters such as in UKF, EnKF and
MHE. We ﬁnd that the ﬁne tuning the values of these parameters does not inﬂuence the performance of the
techniques considerably. For UKF, we set the following values: α = 0.1, κ = −4 and β = 2. For EnKF, we
set the number of ensemble points to 100, and for MHE, we set the value of N to 24, which is the number of
states in the system. These values are found to be suﬃcient for the respective techniques. Interested readers
can refer to [56] and [57] for interpretation of parameters and more detail on implementation of UKF and
EnKF respectively.

5.5.2. Re-scaling to avoid numerical issues

The large diﬀerence in the order of magnitude of the two states, density and relative ﬂow, results in
numerical issues in both the KFs as well as in MHE. This is handled by re-scaling the objective and constraints
of the optimization problem in case of MHE and by re-scaling the state vector in case of KFs.

5.5.3. Applying external bounds on states

The KFs sometimes run into the problem of producing non-physical states such as negative or extremely
large densities and relative ﬂows. This is an issue for the process model which includes terms like density
raised to fractional power as in (2), which results in numerical issues and forces the estimation to stop.
Therefore, it is important to bound the estimates from the KFs to only physical values of the states. In
that, we project the obtained estimates in case of EKF to a range with lower bound of zero on all the states,
In case of UKF, the
and an upper bound of ρm on the traﬃc densities and ρmvf on the relative ﬂows.
sigma points are projected ﬁrst followed by the obtained estimate. In case of EnKF, the ensemble points are
projected to within speciﬁed bounds. This method of projecting vectors for EKF and UKF has been shown
to ﬁt in the KF theory mathematically and is among the popular methods mentioned in [58].

We present the results of the study in the following section.

5.6. Results and discussion
5.6.1. Impact of number of ﬁxed sensors

As sensors are indeed costly, it is thus imperative to determine which state estimation techniques perform
better with less number of sensors, and how the performance varies with a changing number of sensors.
Herein, we test the eﬀect of increasing the number of ﬁxed sensors on the performance of the four estimation
techniques. We do not consider any CVs in this case. As discussed in Section 5.4, we have a minimum of
three sensors, one on the last mainline segment and one each on the oﬀ-ramps. The ﬁrst additional sensor is
placed on the on-ramp. As we add more sensors we try to keep them well distributed across the highway. We
have the following placement conﬁgurations up to eight sensors: {1, 9}, {1, 5, 9}, {1, 3, 7, 9}, and {1, 3, 5, 7, 9},
after which we add the sensors to the segments without sensors, starting from the second segment. Fig. 3
shows the conﬁguration of sensors starting from 5 sensors up to 12 sensors. We do not add any additional
process noise to the state values generated from VISSIM, but we do add a uniform random noise of the order
10−3 to the sensor measurements. Figure 4 presents the plots of NRMSE for each of the techniques with
changing number of sensors. Figure 4 shows that all the techniques provide better estimation performance
with more number of sensors. EKF and MHE perform better than UKF and EnKF in all the cases. Between
EKF and MHE, EKF has a slight edge when there are less number of sensors while MHE performs better
with more sensors. The diﬀerence is quite small though and can probably be attributed to tuning. Among
all the techniques, UKF requires slight tweak in the values of the noise co-variance matrices with changing
number of sensors to achieve its best performance while the other techniques work well with a single set of
values for all the cases. UKF sometimes also runs into numerical issues if the best performance tuning of
one case is used in another case. This is a major drawback of UKF making the technique unreliable. EnKF
can also sometimes give much worse estimates than presented in Figure 4 as it depends on Monte Carlo
sampling which is not always reliable. A noticeable advantage of MHE is that it performs well with quite
general values of weights for all settings like µ = 102, w1 = 102, w2 = 1 without requiring any ﬁne tuning
whereas other techniques require ﬁne tuning to achieve the same level of performance such as q = 10−4 and
r = 4 · 10−6 for EKF, q = 10−4 and r = 9 · 10−4 for UKF, and q = r = 10−8 for EnKF. The average run
times per time step of simulation for the techniques are given in Table 3. The run times include the time

16

Figure 3: 8 sensor placement conﬁgurations for ﬁxed sensors starting with 5 sensors (top) to 12 sensors (bottom). 3 sensors are
placed on the 3 ramps and are not shown here. Black boxes depict segments with sensors and white boxes depict otherwise.
Arrows indicate direction of traﬃc.

Figure 4: NRMSE values for the four state estimation techniques with diﬀerent number of sensors with external bounds on the
state estimates from KF.

from when the data is received along with the information about the current observation matrix C[k] to
when an estimate is produced. In case of MHE, this includes Steps 3-7 of Algorithm 1.

For all the KFs it includes the time spent on the prediction and update steps. Figure 6 presents a
comparison of the real states and estimated states from MHE for a case with seven sensors. Figure 5 presents
the actual and estimated trajectory of the density state and speed from 4 mainline segments of the highway
produced using MHE and EKF. Note that speed is not a state of the system and is calculated using the
estimated densities and relative ﬂows. Since calculating the speeds involves taking a division of the estimated
states, speed estimates can be very sensitive to errors in state estimates resulting in high ﬂuctuations. To
ignore unrealistic ﬂuctuations, we apply a moving average ﬁlter of 10 points over the estimated speeds.

Table 3: Computational time for state estimation per time step (1 sec) of simulation.

Technique Computation Time (sec)

EKF

UKF

EnKF

MHE

0.002

0.006

0.016

0.075

17

(a)

(c)

(e)

(g)

(b)

(d)

(f)

(h)

Figure 5: Plots of estimated trajectories for densities [left] (a, c, e, g) and speeds [right] (b, d, f, h) in the presence of 7 ﬁxed
sensors. Here, the rows of ﬁgures correspond to the unmeasured Segments 2, 4, 5, and 6 respectively.

5.6.2. Impact of ﬁxed sensor placement

Under a limited budget resulting in a limited number of sensors, it is important to determine where to
place the available sensors to obtain the best state estimation performance.
In this section, we test the
impact of placing the same number of ﬁxed sensors at diﬀerent locations on the highway on the performance

18

Figure 6: Comparison of real x[k] and estimated ˆx[k] traﬃc densities obtained from MHE for the mainline segments (1 to 9),
on-ramp segment (10), and oﬀ-ramps segments (11 & 12).

Table 4: NRMSE values for the four state estimation techniques under diﬀerent sensor placements. Here, in each case, we have
sensors on all the ramps and the last mainline segment.

# of sensors
Placement

EKF
UKF
EnKF
MHE

5
{5}

10.01
15.37
15.19
10.34

{1}

11.02
16.58
16.69
11.16

{8}

{1,2,3}

10.21
15.81
16.41
10.81

7.89
13.71
14.70
7.15

7
{4,5,6}

{6,7,8}

7.24
11.84
13.80
7.15

7.39
12.57
15.13
8.12

of the state estimation techniques. We again use NRMSE for a quantitative comparison between the four
techniques. First, we test with a total of ﬁve sensors where three are needed to maintain observability and
are placed on the last mainline segment and the two oﬀ-ramps. Here, we ﬁx the fourth sensor on the on-ramp
while the ﬁfth sensor is placed at three diﬀerent locations, once on the ﬁrst mainline segment, once on the
ﬁfth mainline segment, and once on the eighth mainline segment. The idea is to see whether the performance
varies if the sensor is placed towards the start, middle or end of the highway. We also test another case
with seven sensors. Again, four sensors are placed on the last mainline segment and the three ramps. The
remaining three sensors are placed in three placement conﬁgurations namely on mainline segments 1, 2 and
3, 4, 5 and 6, and 6, 7 and 8. Table 4 presents the NRMSE values for the diﬀerent cases mentioned above.
While the error in all the cases with the same number of sensors is not very diﬀerent for each technique,
there appears to be a trend that is followed by all the techniques, that is, sensors at the middle produce the
least error followed by sensors towards the end and the worst performance is with sensors at the start of the
highway. A possible reason for this could be that since we already have a sensor at the end of the highway
providing us data, and we have the inputs from the start of the highway, then the most value of additional
sensors is derived by placing them in the middle of the highway.

5.6.3. Robustness to initial conditions

Since the initial value of the states is not known in advance, it is important to assess the robustness of
the state estimation techniques to diﬀerent assumed initial conditions. Here, we increase the gap between
the actual initial condition and the assumed initial condition and compare the change in the NRMSE values
for each technique. The gap here is measured in terms of the norm between the standardized initial state
vectors. Fixed sensors are placed on all the ramps and on mainline segments 1, 3, 7 and 9. Figure 7 shows
the trajectories of the NRMSE values for the four techniques with varying initial conditions. As expected,
the error increases as we go further away from the actual initial conditions. A majority of this error is from
the initial time-steps of simulation, that is during the time taken for the estimates to converge to the actual
states. Therefore, a smaller NRMSE in Figure 7 conveys that a technique allows faster convergence and

19

Figure 7: NRMSE values for the four state estimation techniques with changing L2-norm between actual and assumed initial
states. Fixed sensors placed on all ramps and mainline segments 1, 3, 7 and 9.

overall has better estimation performance in terms of accuracy at a given error in initial guesses. In case of
MHE, the convergence is comparable to EKF for smaller initial errors but becomes slightly worse at higher
initial errors leading to the observed plots. However, if we compare the errors from the time the trajectories
converge and stabilize, we see that that the initial error does not inﬂuence the performance of any technique
as is expected. This can be seen in Figure 8 which presents the NRMSE after 90 seconds from the start of
the simulation which is enough time for the trajectory to converge and stabilize for all techniques.

5.6.4. Estimation with CVs

As CVs provide a cost eﬀective alternative to the traditional ﬁxed sensors, it is important to study the
performance of the state estimation techniques using CVs as opposed to ﬁxed sensors. The present work
assumes that there is suﬃcient number of CVs on the highway to obtain the density and speed values of
decent quality from any segments of choice. We compare the performance of the state estimation methods
when using a certain number of ﬁxed sensors versus when using the same number of CVs instead of the
ﬁxed sensors. Instead of randomly choosing the segments to query throughout the process in case of CVs,
we select certain segments at the start of the process and follow the CVs on those segments for data. We
assume that these connected vehicles are moving at a speed of 0.25 segments/second, so the segments from
which we are receiving the information keep changing with time. If these CVs slow down or change course,
we stop querying them and select new CVs on the original segment progression. Note that a better method
to select CVs for querying within a given bandwidth may be available but is not explored in this paper
which only focuses on comparative performance of estimation techniques and to see if the performance with
CVs is comparable to ﬁxed sensors. To ensure that the system is observable at all times, even in the case
with CVs we assume that the oﬀ-ramp segments and the last mainline segment have ﬁxed sensors. Also,
we place a ﬁxed sensor on the on-ramp so we can focus on diﬀerent number of sensors on the mainline
only. The diﬀerent number of ﬁxed sensors are arranged same as in Figure 3 while the initial location for
CVs is chosen as consecutive segments starting with the ﬁrst mainline segment. The estimation errors are
presented in Figure 9. It is seen that among the four techniques, the diﬀerence between the performance
with CVs and ﬁxed sensors is highest for UKF. This is because, UKF heavily depends on the slight tweaks
in the values of Q and R for achieving its best performance with ﬁxed sensors. In this case, since we cannot
tune UKF precisely, as the placement is changing with every few time steps, UKF does not achieve its best
performance. While the performance of all the techniques is better with ﬁxed sensors, it is promising to see

20

Figure 8: NRMSE values for the four state estimation techniques with changing L2-norm between actual and assumed initial
states. Error is calculated from 90 seconds after the process starts till the end. Fixed sensors placed on all ramps and mainline
segments 1, 3, 7 and 9.

that the techniques perform quite comparably even with just CV data which can be obtained for much less
cost than installing ﬁxed sensors. In general, more investigation related to selection of CVs at any time is
needed to exploit the full potential of CV data availability for state estimation.

5.6.5. Impact of sensor noise

As sensors are prone to faults, it is possible that the sensor noise changes from its speciﬁed value for the
sensor from time to time. In such scenarios, a technique more robust to sensor noise would be considered
more reliable. In this section, we check the impact of changing the sensor noise on the estimation error of the
four techniques. We assume a Gaussian error in this case with distribution N (0, σ2) with a changing standard
deviation σ. Here, for the KFs, we set the Q same as the optimal tuning for the given sensor placement as
was obtained for a uniform sensor error. The same is found to give pretty good estimates except in case of
UKF which runs into instability for certain values of σ. The tuning of R is done in two ways, one is the
standard method of tuning where R = σ2Inp[k], and the other way is to ﬁne tune R so as to reduce the
estimation error and keep the same R for all values of σ. Note that ﬁne tuning is not always possible in
practice as we do not know the actual states. Here we do it to compare all the estimation techniques at a
somewhat best performance for each. For MHE, the weights are kept the same as before. Figure 10 present
the variation of the NRMSE values for each state estimation technique with increasing σ with both tuned
and standard R. It is observed that when the R is not tuned precisely, the errors from the KFs are much
larger than MHE. The poor performance of the KFs can be explained by the fact that tuning is important
to get a smaller NRMSE with KFs. Notice that in this case the NRMSE does not increase further for the
KFs for larger values of measurement error since it corresponds to larger R matrices which already serve to
reduce the impact of data on the estimation. On the other hand, when using a tuned R, the performance
of EKF is comparable to MHE, and the variation with σ is also almost the same. While the performance of
UKF and EnKF are comparatively worse, the estimate is not aﬀected much by measurement errors. This
could indicate a trade-oﬀ between accuracy and robustness to noise. Note that each error value presented for
EnKF in Figure 10 is the best value obtained over few independent runs of EnKF under the same setting.
The inherent randomness of EnKF sometimes results in much larger NRMSE for some combinations of R
and σ. It is important to account for such issues when implementing EnKF in practical applications.

5.6.6. Estimation under congested scenario

All of the above results are obtained using simulations with free-ﬂowing traﬃc conditions. In this section,
we test whether the obtained results on TSE performance under free-ﬂow conditions hold true when there is
congestion somewhere on the highway stretch. We simulate a case with congestion forming internally on the
highway. In VISSIM, this is achieved by adding reduced speed decisions on Segment 8 of the highway between
100 to 200 seconds from the start. First we test the impact of changing the number of ﬁxed sensors and CVs
on the state estimation performance of the diﬀerent techniques. It is observed that while NRMSE based

21

Figure 9: NRMSE values for the four state estimation techniques when using connected vehicles (CV) versus when using ﬁxed
sensors (FS).

Figure 10: NRMSE values for the four state estimation techniques with changing σ (standard deviation of Gaussian measurement
noise). Solid lines for KFs are with r = σ2, and dashed lines are with ﬁne tuned r. Only one set of MHE parameters is used
hence only one solid line to represent MHE.

22

Figure 11: SRMSE values for the four state estimation techniques with changing number of ﬁxed sensors (FS) and connected
vehicles (CVs) with internal congestion on the highway.

on standard deviation was a suﬃcient measure to compare TSE performance under free-ﬂow conditions, it
produces biased results when there is congestion. Since some segments of the highway undergo congestion
for some part of the simulation and are at free-ﬂow for the remainder, the state values for those segments
vary signiﬁcantly over the duration of the simulation leading to large values of standard deviation of states as
compared to segments which are only under free-ﬂow conditions or only under congested conditions during
the entire simulation. Therefore, the total NRMSE values will be lower when the estimation error is lower
for states with smaller standard deviation.. Therefore in this case we use a scaled version of the RMSE
where a value of 0.01 is multiplied with all the relative ﬂow states. The scaled-RMSE or SRMSE is reported
in Figure 11.

Comparing with Fig. 9, the performance of the diﬀerent techniques is more comparable now. MHE
performs the best with both ﬁxed sensors and CVs followed by EKF. The performance with ﬁxed sensors
and CVs in more comparable now especially for UKF which earlier showed much worse performance with
CVs as the source of data. An interesting observation with respect to tuning is that while MHE and EnKF
work well with the same tuning as the free-ﬂow case, UKF and EKF do require the co-variance matrices
to be tuned again for best results. While EKF works ﬁne with the same new tuning applied to all cases of
sensors, UKF still requires the tuning to be changed with diﬀerent number of sensors or else risks running
into numerical issues which increase the error considerably.
Next we check if the impact of sensor placement on estimation is increased when the highway is congested.
Since an internal congestion on the highway is not directly captured by the state-space model or the inputs,
performance of estimation in this case should depend more on the available data and therefore on the sensor
placement. Table 5 presents the SRMSE values for the four techniques under three conﬁgurations of ﬁxed
sensor placement. The table shows that sensor placement does impact state estimation signiﬁcantly when
there is congestion occurring in some parts of the highway. Speciﬁcally, the middle of the highway where
most of the congestion occurs is the best place to put the sensors, followed by the start of the highway and
the end of the highway. This is similar to the results we saw before with the free-ﬂow condition however
the diﬀerence was very small in that case. It appears that middle of the highway is indeed better for sensor
placement especially when there is congestion. However, a theoretical study may be needed to say anything
for sure. Figure 13 presents the actual and estimated density on the highway stretch with congestion with
8 ﬁxed sensors. Figure 12 presents the actual and estimated density and speed trajectories for the same.

23

(a)

(c)

(e)

(g)

(b)

(d)

(f)

(h)

Figure 12: Plots of estimated trajectories for densities [left] (a, c, e, g) and speeds [right] (b, d, f, h) in the presence of 8 ﬁxed
sensors. Here, the rows of ﬁgures correspond to unmeasured Segments 2, 4, 6, and 8 respectively.

24

Figure 13: Comparison of real x[k] and estimated ˆx[k] traﬃc densities obtained from MHE for the mainline segments (1 to 9),
on-ramp segment (10), and oﬀ-ramps segments (11 & 12) for congested scenario.

Table 5: SRMSE values for the four state estimation techniques under diﬀerent sensor placements with internal congestion on
the highway. Here, in each case, we have sensors on all the ramps and the last mainline segment.

# of sensors
Placement

{1,2,3}

7
{4,5,6}

{6,7,8}

EKF
UKF
EnKF
MHE

583.0
594.2
618.1
477.4

436.0
428.9
549.6
316.3

636.4
583.9
868.6
453.1

25

6. Conclusions and Future Work

From the previous analysis, we have some preliminary suggestions regarding the questions posed in

Section 5.1 which are as follows:

• A1: As expected, the performance of the state estimation techniques is improved upon increasing the
number of sensors in the system. The placement of sensors, on the other hand, does not considerably
aﬀect the performance under free-ﬂow conditions but plays a signiﬁcant role in congested conditions.
There is incremental beneﬁt to putting any additional sensors in the middle of the highway as opposed
to the start or the end.

• A2: The error in state estimation increases as the assumed initial state is taken further away from the
actual state. Out of the considered techniques, EKF is most robust to the changing initial conditions
as its error changes the least as we go away from the actual initial condition.

• A3: UKF requires tweaks in the values of the error co-variance matrices to achieve its best performance
and sometimes also runs into numerical issues if the best tuning from one case is used in another case.
Other techniques work consistently with a single set of tuning parameters and do not run into numerical
issues. MHE performs well with a quite general setting for the weights as opposed to other techniques
where the values need to be selected carefully, something not always possible in practice.

• A4: EKF, MHE and EnKF work well with CV data under free-ﬂow conditions while all the methods
perform closely under congested condition. EKF and MHE perform better overall. Under the free-ﬂow
scenario, UKF does not utilize the data well because of its limitation with tuning and numerical issues.

• A5: Out of the four techniques studied in this paper, EKF and MHE perform similarly in diﬀerent
scenarios with the exception that MHE is more computationally intensive than EKF while MHE can
handle arbitrary constraints and is easier to tune. UKF and EnKF are less reliable than the previous
two techniques.

To summarize, we present a state-space formulation for the nonlinear ARZ model while considering junctions
in the form of ramp connections. Since the ARZ model is nonlinear, it is not possible to directly apply linear
state estimation techniques on it which are considered to be more eﬃcient than nonlinear techniques. We
show that it is possible to linearize the nonlinear state-space equation with reasonable accuracy and use the
linearized model to implement linear state estimation such as through linear MHE. Besides, the gradient
calculated in the process can also be used to implement EKF. We present the formulation for linear MHE
which has not previously been used for TSE and show that it is a good choice for TSE. At the end, we compare
the linear MHE and EKF with nonlinear state estimation techniques namely UKF and EnKF and show that
MHE and EKF perform better than the latter. Future work will consider the optimal placement of sensors
considering CVs for TSE. Besides, while the performance of ARZ model against ﬁrst-order LWR model has
been studied in prior research [23] which claims the superiority of the former, some of the newer works [59]
have suggested the possibility of the order of the model being less signiﬁcant for TSE in the presence of
suﬃcient data. Therefore, it will be interesting to carry out a detailed comparative study between the
performance of the ARZ model and a ﬁrst-order model under diﬀerent scenarios speciﬁcally those depicting
non-equilibrium conditions under diﬀerent sensor placements.

Declaration of Competing Interest

The authors declare that they have no known competing ﬁnancial interests or personal relationships that

could have appeared to inﬂuence the work reported in this paper.

Acknowledgements

This work is partially supported by the Valero Energy Corporation and National Science Foundation

(NSF) under Grants 1636154, 1728629, 2152928, and 1917056, and 2152450, and USDOT CAMMSE.

26

References

[1] G. Gomes, R. Horowitz, Optimal freeway ramp metering using the asymmetric cell transmission model,

Transportation Research Part C: Emerging Technologies 14 (4) (2006) 244–262.

[2] R. C. Carlson, I. Papamichail, M. Papageorgiou, A. Messmer, Optimal motorway traﬃc ﬂow control
involving variable speed limits and ramp metering, Transportation Science 44 (2) (2010) 238–253.

[3] Y. Han, A. Hegyi, Y. Yuan, S. Hoogendoorn, M. Papageorgiou, C. Roncoli, Resolving freeway jam waves
by discrete ﬁrst-order model-based predictive control of variable speed limits, Transportation Research
Part C: Emerging Technologies 77 (2017) 405–420.

[4] G. S. van de Weg, A. Hegyi, S. P. Hoogendoorn, B. De Schutter, Eﬃcient freeway MPC by parameteri-
zation of ALINEA and a speed-limited area, IEEE Transactions on Intelligent Transportation Systems
20 (1) (2018) 16–29.

[5] N. Lu, N. Cheng, N. Zhang, X. Shen, J. W. Mark, Connected vehicles: Solutions and challenges, IEEE

Internet of Things Journal 1 (4) (2014) 289–299.

[6] M. J. Lighthill, G. B. Whitham, On kinematic waves II. A theory of traﬃc ﬂow on long crowded roads,

Proc. R. Soc. Lond. A 229 (1178) (1955) 317–345.

[7] P. I. Richards, Shock waves on the highway, Operations Research 4 (1) (1956) 42–51.

[8] C. F. Daganzo, Requiem for second-order ﬂuid approximations of traﬃc ﬂow, Transportation Research

Part B: Methodological 29 (4) (1995) 277–286.

[9] H. J. Payne, Model of freeway traﬃc and control, Mathematical Model of Public System (1971) 51–61.

[10] G. B. Whitham, Linear and nonlinear waves, Vol. 42, John Wiley & Sons, 2011.

[11] A. Aw, M. Rascle, Resurrection of "second order" models of traﬃc ﬂow, SIAM Journal on Applied

Mathematics 60 (3) (2000) 916–938.

[12] H. M. Zhang, A non-equilibrium traﬃc model devoid of gas-like behavior, Transportation Research Part

B: Methodological 36 (3) (2002) 275–290.

[13] L. Leclercq, J. A. Laval, E. Chevallier, The lagrangian coordinates and what it means for ﬁrst order
traﬃc ﬂow models, in: Transportation and Traﬃc Theory 2007. Papers Selected for Presentation at
ISTTT17Engineering and Physical Sciences Research Council (Great Britain) Rees Jeﬀreys Road Fund-
Transport Research FoundationTMS ConsultancyOve Arup and Partners, Hong KongTransportation
Planning (International) PTV AG, 2007.

[14] D. B. Work, O.-P. Tossavainen, S. Blandin, A. M. Bayen, T. Iwuchukwu, K. Tracton, An ensemble
Kalman ﬁltering approach to highway traﬃc estimation using GPS enabled mobile devices, in: 2008
47th IEEE Conference on Decision and Control, IEEE, 2008, pp. 5062–5068.

[15] M. Wright, R. Horowitz, Fusing loop and GPS probe measurements to estimate freeway density, IEEE

Transactions on Intelligent Transportation Systems 17 (12) (2016) 3577–3590.

[16] A. Nantes, D. Ngoduy, A. Bhaskar, M. Miska, E. Chung, Real-time traﬃc state estimation in urban
corridors from heterogeneous data, Transportation Research Part C: Emerging Technologies 66 (2016)
99–118.

[17] T. Seo, A. M. Bayen, T. Kusakabe, Y. Asakura, Traﬃc state estimation on highway: A comprehensive

survey, Annual Reviews in Control 43 (2017) 128–151.

[18] Y. Wang, M. Papageorgiou, Real-time freeway traﬃc state estimation based on extended Kalman ﬁlter:

a general approach, Transportation Research Part B: Methodological 39 (2) (2005) 141–167.

27

[19] M. Zhao, X. Yu, Y. Hu, J. Cao, S. Hu, L. Zhang, J. Guo, Y. Wang, Real-time freeway traﬃc state esti-
mation with ﬁxed and mobile sensing data, in: 2020 IEEE 23rd International Conference on Intelligent
Transportation Systems (ITSC), IEEE, 2020, pp. 1–7.

[20] I. Agalliadis, M. Makridis, A. Kouvelas, Traﬃc estimation by fusing static and moving observations in
highway networks, in: 20th Swiss Transport Research Conference (STRC 2020)(virtual), STRC, 2020.

[21] A. Kotsialos, M. Papageorgiou, C. Diakaki, Y. Pavlis, F. Middelham, Traﬃc ﬂow modeling of large-scale
motorway networks using the macroscopic modeling tool METANET, IEEE Transactions on Intelligent
Transportation Systems 3 (4) (2002) 282–292.

[22] A. Messner, M. Papageorgiou, METANET: A macroscopic simulation program for motorway networks,

Traﬃc Engineering & Control 31 (8-9) (1990) 466–470.

[23] T. Seo, A. M. Bayen, Traﬃc state estimation method with eﬃcient data fusion based on the Aw-Rascle-
Zhang model, in: 2017 IEEE 20th International Conference on Intelligent Transportation Systems
(ITSC), 2017, pp. 1–6. doi:10.1109/ITSC.2017.8317597.

[24] H. Yu, A. M. Bayen, M. Krstic, Boundary observer for congested freeway traﬃc state estimation via

Aw-Rascle-Zhang model, IFAC-PapersOnLine 52 (2) (2019) 183–188.

[25] R. Wang, Y. Li, D. B. Work, Comparing traﬃc state estimators for mixed human and automated traﬃc

ﬂows, Transportation Research Part C: Emerging Technologies 78 (2017) 95–110.

[26] N. Bekiaris-Liberis, C. Roncoli, M. Papageorgiou, Highway traﬃc state estimation with mixed connected
and conventional vehicles, IEEE Transactions on Intelligent Transportation Systems 17 (12) (2016)
3484–3497.

[27] S. A. Nugroho, A. F. Taha, C. G. Claudel, A control-theoretic approach for scalable and robust traﬃc
density estimation using convex optimization, IEEE Transactions on Intelligent Transportation Systems
22 (1) (2019) 64–78.

[28] S. C. Vishnoi, S. A. Nugroho, A. F. Taha, C. Claudel, T. Banerjee, Asymmetric cell transmission
model-based, ramp-connected robust traﬃc density estimation under bounded disturbances, in: 2020
American Control Conference (ACC), IEEE, 2020, pp. 1197–1202.

[29] C. V. Rao, J. B. Rawlings, J. H. Lee, Constrained linear state estimation—a moving horizon approach,

Automatica 37 (10) (2001) 1619–1628.

[30] C. V. Rao, J. B. Rawlings, D. Q. Mayne, Constrained state estimation for nonlinear discrete-time
systems: Stability and moving horizon approximations, IEEE Transactions on Automatic Control 48 (2)
(2003) 246–258.

[31] Y. Wang, J. Yuan, S. Yu, Y. Hu, H. Chen, Resilient moving horizon estimation for cyber-physical systems
under sensor attacks, in: 2017 11th Asian Control Conference (ASCC), IEEE, 2017, pp. 2274–2279.

[32] A. Alessandri, M. Gaggero, Fast moving horizon state estimation for discrete-time systems using single
and multi iteration descent methods, IEEE Transactions on Automatic Control 62 (9) (2017) 4499–4511.

[33] I. I. Sirmatel, N. Geroliminis, Nonlinear moving horizon estimation for large-scale urban road networks,

IEEE Transactions on Intelligent Transportation Systems 21 (12) (2019) 4983–4994.

[34] I. Sirmatel, N. Geroliminis, Model-based identiﬁcation, estimation, and control for large-scale urban

road networks, in: 2020 European Control Conference (ECC), IEEE, 2020, pp. 408–413.

[35] S. Timotheou, C. G. Panayiotou, M. M. Polycarpou, Moving horizon fault-tolerant traﬃc state estima-
tion for the cell transmission model, in: 2015 54th IEEE Conference on Decision and Control (CDC),
IEEE, 2015, pp. 3451–3456.

28

[36] A. Rauh, J. Minisini, H. Aschemann, Carleman linearization for control and for state and disturbance
estimation of nonlinear dynamical processes, IFAC Proceedings Volumes 42 (13) (2009) 455–460.

[37] E. F. Camacho, C. B. Alba, Model predictive control, Springer Science & Business Media, 2013.

[38] S. C. Vishnoi, C. G. Claudel, Variable speed limit and ramp metering control of highway networks using
lax-hopf method: A mixed integer linear programming approach, IEEE Transactions on Intelligent
Transportation Systems.

[39] S. K. Godunov, A diﬀerence method for numerical calculation of discontinuous solutions of the equations

of hydrodynamics, Matematicheskii Sbornik 89 (3) (1959) 271–306.

[40] R. Courant, K. Friedrichs, H. Lewy, On the partial diﬀerence equations of mathematical physics, IBM

journal of Research and Development 11 (2) (1967) 215–234.

[41] S. Gottlich, M. Herty, S. Moutari, J. Weißen, Second-order traﬃc ﬂow models on networks, SIAM

Journal on Applied Mathematics 81 (1) (2021) 258–281.

[42] O. Kolb, G. Costeseque, P. Goatin, S. Gottlich, Pareto-optimal coupling conditions for the Aw–Rascle–
Zhang traﬃc ﬂow model at junctions, SIAM Journal on Applied Mathematics 78 (4) (2018) 1981–2002.

[43] A. Kheliﬁ, H. Haj-Salem, J.-P. Lebacque, L. Nabli, Generic macroscopic traﬃc ﬂow models on junctions,
in: 2017 International Conference on Control, Automation and Diagnosis (ICCAD), IEEE, 2017, pp.
445–450.

[44] H. Yang, H. Rakha, A novel approach for estimation of dynamic from static origin–destination matrices,

Transportation Letters 11 (4) (2019) 219–228.

[45] C. Lee, J.-B. Lee, M. Kim, Density measurement algorithm for freeway segment using two point detec-

tors, Journal of Advanced Transportation 45 (3) (2011) 207–218.

[46] N. Bekiaris-Liberis, C. Roncoli, M. Papageorgiou, Highway traﬃc state estimation per lane in the
presence of connected vehicles, Transportation Research Part B: Methodological 106 (2017) 1–28.

[47] T. Seo, T. Kusakabe, Y. Asakura, Estimation of ﬂow and density using probe vehicles with spacing
measurement equipment, Transportation Research Part C: Emerging Technologies 53 (2015) 134–150.

[48] S. Panichpapiboon, W. Pattara-atikom, Evaluation of a neighbor-based vehicle density estimation
scheme, in: 2008 8th International Conference on ITS Telecommunications, IEEE, 2008, pp. 294–298.

[49] P. J. Moreno, B. Raj, R. M. Stern, A vector Taylor series approach for environment-independent speech
recognition, in: 1996 IEEE International Conference on Acoustics, Speech, and Signal Processing Con-
ference Proceedings, Vol. 2, IEEE, 1996, pp. 733–736.

[50] S. Pruekprasert, T. Takisaka, C. Eberhart, A. Cetinkaya, J. Dubut, Moment propagation of discrete-
time stochastic polynomial systems using truncated carleman linearization, IFAC-PapersOnLine 53 (2)
(2020) 14462–14469.

[51] C. C. Qu, J. Hahn, Computation of arrival cost for moving horizon estimation via unscented kalman

ﬁltering, Journal of Process Control 19 (2) (2009) 358–363.

[52] A. Alessandri, M. Baglietto, G. Battistelli, Receding-horizon estimation for discrete-time linear systems,

IEEE Transactions on Automatic Control 48 (3) (2003) 473–478.

[53] A. Lapedes, Nonlinear signal processing using neural networks, Technical Report No. LA-UR-87-2662.

[54] C.-T. Chen, Linear system theory and design, Saunders college publishing, 1984.

[55] S. A. Nugroho, S. C. Vishnoi, A. F. Taha, C. G. Claudel, T. Banerjee, Where should traﬃc sensors
be placed on highways?, IEEE Transactions on Intelligent Transportation Systems (2021) 1–14doi:
10.1109/TITS.2021.3119211.

29

[56] E. A. Wan, R. Van Der Merwe, The unscented Kalman ﬁlter for nonlinear estimation, in: Proceedings
of the IEEE 2000 Adaptive Systems for Signal Processing, Communications, and Control Symposium
(Cat. No. 00EX373), Ieee, 2000, pp. 153–158.

[57] G. Evensen, The ensemble Kalman ﬁlter: Theoretical formulation and practical implementation, Ocean

dynamics 53 (4) (2003) 343–367.

[58] D. Simon, Kalman ﬁltering with state constraints: a survey of linear and nonlinear algorithms, IET

Control Theory & Applications 4 (8) (2010) 1303–1318.

[59] Y. Wang, M. Zhao, X. Yu, Y. Hu, P. Zheng, W. Hua, L. Zhang, S. Hu, J. Guo, Real-time joint traﬃc
state and model parameter estimation on freeways with ﬁxed sensors and connected vehicles: State-of-
the-art overview, methods, and case studies, Transportation Research Part C: Emerging Technologies
134 (2022) 103444.

Appendix A. State-Space Equation Parameters

In this section, we present the parameters of the state-space equation (11). The said parameters are

given as follows:

A =

G =

f (x[k], u[k]) =












1
vf
τ
0
0
0
...

0
1 − 1
τ
0
0
0
...























0
0
T
l
0
...

T
0
l
T
0
l
0
0
0
0
...
...
q0[k] − q1[k]
φ0[k] − φ1[k]
q1[k] − q2[k]
φ1[k] − φ2[k]
q2[k] − q3[k]
φ2[k] − φ3[k]
...

0
0
1
vf
τ
0
...
0
0
0
T
l

...













0
0
0
1 − 1
τ
0
...


. . .
. . .
. . .
. . .
. . .








0
0
0
0
1
...

. . .
. . .
. . .
. . .
. . .
. . .












(A.1)

(A.2)

(A.3)

where qi[k] and φi[k] are the traﬃc ﬂux and relative ﬂux terms for traﬃc leaving some segment i. As
an example of the nonlinear diﬀerence terms in (A.3), we present the expressions for qi−1[k] − qi[k] and
φi−1[k] − φi[k] where segments i, i − 1, i + 1 ∈ Ω. There is an On-ramp j ∈ ˆΩ between Segment i − 1 and
i and no ramp between Segment i and i + 1. The time parameter is omitted from the notations for all the
discrete time variables for compactness of the expressions. Also, the state variables are written in terms of
the traﬃc variables that they represent.

qi−1 − qi = min(βi−1Si, Di−1,

φi−1 − φi = qi−1

ψi−1
ρi−1

− qi

ψi
ρi

,

βi−1
1 − βi−1

ˆDj) − min(Di, Si+1),

where the expressions for the various terms are given in Section 2.3. Similarly, if there is an Oﬀ-ramp j ∈ ˇΩ
between Segment i and i + 1, and no ramp between Segment i − 1 and i, then the expressions are given as

qi−1 − qi = min(Di−1, Si) − min(Di,

ˇSj
αi

,

Si+1
(1 − αi)

),

30

φi−1 − φi = qi−1

ψi−1
ρi−1

− qi

ψi
ρi

.

Other expressions can also be written in the same manner.

Appendix B. QP formulation for MHE

The MHE objective function is given in (14) as

J[k] = µ||xk[k − N ] − ¯x[k − N ]||2 + w1

k
(cid:88)

||y[i] − ( ˜Cixk[i] + c2i)||2

i=k−N

k−1
(cid:88)

+ w2

||xk[i + 1]−( ˜Aixk[i] + Biu[i] + c1i)||2.

i=k−N

The square of the Euclidean norm can be expressed as a product of vectors which can be simpliﬁed into
quadratic and linear terms in the associated decision variables. For instance, the arrival cost term can be
expanded as

µ||xk[k − N ] − ¯x[k − N ]||2
= (xk[k − N ] − ¯x[k − N ])T µInx (xk[k − N ] − ¯x[k − N ])
= xk[k − N ]T µInx xk[k − N ] − ¯x[k − N ]T 2µInxxk[k − N ]
+ ¯x[k − N ]T µInx ¯x[k − N ]

Similarly, the second term can be expressed as

k
(cid:88)

w1

||y[i] − ( ˜Cixk[i] + c2i)||2

i=k−N

k
(cid:88)

( ˜Cixk[i]T w1Inp[k]

=
i=k−N
+ (y[i] − c2i)T w1Inp[k](y[i] − c2i))

˜Cixk[i] − (y[i] − c2i )T 2w1Inp[k]

˜Cixk[i]

and the third term as

k−1
(cid:88)

w2

||xk[i + 1]−( ˜Aixk[i] + Biu[i] + c1i)||2

i=k−N

k−1
(cid:88)

=
i=k−N

((xk[i + 1] − ˜Aixk[i])T w2Inx(xk[i + 1] − ˜Aixk[i])

− (Biu[i] + c1i)T 2w2Inx (xk[i + 1] − ˜Aixk[i])
+ (Biu[i] + c1i)T w2Inx(Biu[i] + c1i))

(B.1)

(B.2)

(B.3)

Here, the last term in each expansion is a constant and can be removed from the objective function. The sum
of the remaining terms can be expressed in terms of the vector zk = [xk[k − N ]T xk[k − N + 1]T · · · xk[k]]T
as

= zT

k (H1 + H2 + H3)zk + (q1 + q2 + q3)T zk

where the various matrices and vectors are deﬁned as follows:
(cid:20)µInx 0
0
0

H1 =

(cid:21)

,

(B.4)

(B.5)

31

H2 = H T

C w1INp HC

(B.6)

where

and Np = (cid:80)k

i=k−N np[i], and

HC =


˜Ck−N



0
0

0
. . .
0



0


 ,

0
˜Ck

H3 = H T

A w2IN nx HA

(B.7)

where

and

HA =


− ˜Ak−N
0





0
0

Inx
− ˜Ak−N +1

0
0

0
0
. . .

0
Inx
. . .
0 − ˜Ak−1








.

0
0

0
Inx

q1 = −2

(cid:32)(cid:20) ¯x[k − N ]
0

(cid:21)T

(cid:33)T

H1

,

q2 = −2












y[k − N ] − c2k−N
...
y[k] − c2k


T




w1INp HC


T





,

q3 = −2












Bk−N u[k − N ] + c1k−N
...
Bk−1u[k − 1] + c1k−1


T




w2IN nx HA


T





.

Replacing H1 + H2 + H3 with H and q1 + q2 + q3 with q we get the objective function in (18).

Appendix C. Carleman Linearization

Let the polynomial expansion for the update of the state vector x be deﬁned as:

x[k + 1] =

d
(cid:88)

i=0

Fi[k]x[i][k], k ∈ N,

(B.8)

(B.9)

(B.10)

(C.1)

where d is the maximum degree of the polynomial and x[i][k] represents the ith Kronecker product of the
state vector at time k. Since we assume to know the input at each time step, we consider the input to be a
part of the constant term in (C.1). Let all the coeﬃcients in this expansion be lumped into a single vector
F [k] as follows:

F [k] (cid:44) [F0[k] F1[k] F2[k] · · · Fd[k]] ∈ Rn×n≤d

.

32

We deﬁne a new state vector Λ(j, k) consisting of the unique mononomials in x[k] up to an arbitrary degree
dΛ ∈ N ,that is,

Λ(dΛ, k) (cid:44) [1 x[k](cid:48) x[2][k](cid:48) · · · x[dΛ][k](cid:48)](cid:48) ∈ Rn≤dΛ .

(C.2)

Then we can write

x[k + 1] = F [k]Λ(d, k)
x[j][k + 1] = (F [k]Λ(d, k))[j]
= F [j][k]Λ[j](d, k)

jd
(cid:88)

=





(cid:88)

h=0

(il)l≤j ∈Hj,h

Fi1[k] ⊗ · · · ⊗ Fij [k]


 x[h][k],

(C.3)

where

Hj,h (cid:44) {(il)l≤j|

j
(cid:88)

l=1

il = k and il ≤ d}.

The above can be reduced to the following evolution equation for the new state vector for any dΛ:

Λ(dΛ, k + 1) = [1 x[k + 1](cid:48) x[2][k + 1](cid:48) · · · x[dΛ][k + 1](cid:48)]

= A(k; dΛ, dΛd)[1 x[k](cid:48) x[2][k](cid:48) · · · x[dΛd][k](cid:48)]
= A(k; dΛ, dΛd)Λ(dΛd, k)

(C.4)

where A(k; dΛ, dΛd) is a matrix of the coeﬃcients of the monomial terms as obtained from (C.3). Interested
readers are referred to [50] for the exact structure of A(k; dΛ, dΛd) matrix.

Note that Λ(dΛd, k) on the right-hand side in (C.4) has a diﬀerent length from Λ(dΛ, k) on the left-
hand side due to diﬀerent number of Kronecker product terms and A(k; dΛ, dΛd) is also not square, so this
equation cannot directly be used as a state-space equation for state estimation. To deal with this, we need
to truncate the A(k; dΛ, dΛd) matrix and Λ(dΛd, k) vector which results in some loss of accuracy especially
at small values of dΛ.

33

