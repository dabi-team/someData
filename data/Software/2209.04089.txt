rspa.royalsocietypublishing.org

Research

Article submitted to journal

Subject Areas:

applied mathematics, biomechanics,

differential equations, mathematical

modeling

Keywords:

Cosserat rod, Hamiltonian systems,

energy-shaping control, soft robotics,

octopus

Author for correspondence:

Udit Halder

e-mail: udit@illinois.edu

2
2
0
2

p
e
S
9

]

Y
S
.
s
s
e
e
[

1
v
9
8
0
4
0
.
9
0
2
2
:
v
i
X
r
a

Energy Shaping Control of a
Muscular Octopus Arm
Moving in Three Dimensions

Heng-Sheng Chang1,2, Udit Halder2,
Chia-Hsien Shih1, Noel Naughton3, Mattia
Gazzola1,4,5, and Prashant G. Mehta1,2

1Department of Mechanical Science and Engineering,
2Coordinated Science Laboratory, 3Beckman Institute
for Advanced Science and Technology, 4National
Center for Supercomputing Applications, and 5Carl R.
Woese Institute for Genomic Biology, University of

Illinois at Urbana-Champaign, IL, 61801, USA

Flexible octopus arms exhibit an exceptional ability
to coordinate large numbers of degrees of freedom
and perform complex manipulation tasks. As a
consequence, these systems continue to attract the
attention of biologists and roboticists alike. In this
paper, we develop a three-dimensional model of a
soft octopus arm, equipped with biomechanically
realistic muscle actuation. Internal forces and couples
exerted by all major muscle groups are considered.
An energy shaping control method is described
to coordinate muscle activity so as to grasp and
reach in 3D space. Key contributions of this paper
are: (i) modeling of major muscle groups to elicit
three-dimensional movements; (ii) a mathematical
formulation for muscle activations based on a
stored energy function; and (iii) a computationally
efﬁcient procedure to design task-speciﬁc equilibrium
conﬁgurations, obtained by solving an optimization
problem in the Special Euclidean group SE(3).
Muscle controls are then iteratively computed based
on the co-state variable arising from the solution
of
the optimization problem. The approach is
numerically demonstrated in the physically accurate
software environment Elastica. Results of numerical
experiments mimicking observed octopus behaviors
are reported.

© The Author(s) Published by the Royal Society. All rights reserved.

 
 
 
 
 
 
1 Introduction

2

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Interest in soft robots, speciﬁcally soft continuum arms (SCA), comes from their potential ability to
perform complex tasks in unstructured environments as well as to operate safely around humans,
with applications ranging from agriculture [1–3] to surgery [4–6]. An important bio-inspiration
for SCAs is provided by octopus arms [7–10]. An octopus arm is hyper-ﬂexible with nearly
inﬁnite degrees of freedom, seamlessly coordinated to generate a rich orchestra of motions such as
reaching, grasping, fetching, crawling, or swimming [11,12]. How such a marvelous coordination
is possible remains a source of mystery and amazement, and of inspiration to soft roboticists.
Part of the challenge comes from the intricate organization and biomechanics of the three major
muscle groups—transverse, longitudinal, and oblique—which add to the overall complexity of
the problem [13–16].

In this paper, we develop a bio-physical model of octopus arm equipped with virtual
musculature, using the formalism of the Cosserat rod theory [17,18]. In this type of modeling, a
key concept is the stored energy function of nonlinear elasticity theory whereby the internal forces
and couples of a hyperelastic rod are obtained as the gradients of the stored energy function. The
goal of this work is to extend the energy concept for following inter-related tasks: (i) Bio-physical
modeling of the internal muscles, and (ii) Model-based control design. The speciﬁc contributions
on the two tasks are as follows.

1. Muscle stored energy function. For each of the three major muscles of octopus arm, we present
a mathematical model in terms of muscle stored energy function. Starting from ﬁrst principle, and
incorporating empirical force-length data [19], explicit formulae of the muscle stored energy
function are derived. Our approach represents the ﬁrst such extension, to the continuum setting
of a Cosserat rod, of the celebrated Hill’s model for skeletal muscles [20–22]. This is contrasted
with earlier work based on segment-based ﬁnite-dimensional models of octopus arm [23,24].

2. Energy shaping control. The energy-based modeling of muscles (actuators) greatly simpliﬁes
the ensuing control design. It particular, it is shown to circumvent the key difﬁculty of computing
the solution of the so called matching conditions during the application of energy shaping
control [25–27]. In order to compute the muscle control input, the energy shaping control design
is ﬁrst posed as an optimization problem in the space of the special Euclidean group SE(3). Its
solution is obtained through an application of the maximum principle of optimal control theory,
which also leads to a computationally tractable algorithm to compute the muscle control inputs.
Several novel features of the solution are noted, among which the physical interpretation of the
co-state variable as resultant internal forces and couples exerted by activating the muscles.

While this paper focuses on the octopus arm, the above two contributions can broadly inform
also the modeling and control of SCAs. A key insight is that the conventional paradigm of
modeling robot and actuators as two separate systems (in series) is no longer applicable for soft
robots. Worse yet, such an approach may be counter-productive because the resulting control
problem is often computationally intractable. Because the actuators in SCAs—such as artiﬁcial
muscles [28,29] or embedded pneumatic devices [30,31]—are themselves mechanical systems,
energy provides a unifying concept to simultaneously model both in an integrated manner.
The total potential energy of an SCA is then simply the sum of its intrinsic elastic (passive)
potential energy and the (active) potential energy of the actuator. This renders the overall SCA
a Hamiltonian control system for which energy shaping control methodology is a natural option
with a rich history in robotics.

The two contributions are numerically illustrated in the high-ﬁdelity simulation package
Elastica [18,32]. Results from two representative experiments, reaching and grasping, are
described. These results help showcase the out-of-plane motion of the arm, mimicking observed
octopus behaviors, e.g., an octopus twisting its arm to reach a target, and an octopus wrapping
its arm around a cylindrical pole.

3

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

Prior to this work, there have been a number of applications of the energy shaping control
methodology to both rigid robots [33,34] and soft robots [35–37]. These demonstrations rely either
on ﬁnite-dimensional articulated models (multiple rigid links) of the robot [38,39] or a ﬁnite-
dimensional approximation of the robot’s energy [37]. In continuum settings, optimization-based
formulations to design static equilibria appear in [40,41]. Here, we build on prior work in planar
cases, whereby only longitudinal and transverse muscles were considered to obtain motions in
2D [42–46]. While the planar modeling is an important ﬁrst step, this paper represents a signiﬁcant
advancement including a comprehensive modeling and control of all major muscle groups to
obtain complex 3D motions.

The remainder of this paper is organized as follows. An overview of the anatomy of the
octopus arm musculature together with its kinematic modeling appears in § 2. The dynamics of
the arm, modeling of muscle actuation, and the control objectives appear in § 3. The details of the
energy shaping control method are contained in § 4. Numerical experiments are reported in § 5
and conclusions are given in § 6.

2 Kinematic model of an octopus arm and its musculature

2.1 Pose of an arm

A ﬂexible octopus arm is modeled as a single Cosserat rod with rest length L in an inertial
laboratory frame {e1, e2, e3}. The arc-length coordinate of the center line of the arm is denoted as
s ∈ [0, L]. Physically, the center line runs through the axial nerve cord of the octopus arm. Along
with s, the second independent coordinate is time t. For notational ease, the partial derivatives
with respect to s and t are denoted as ∂s := ∂

∂s and ∂t := ∂

∂t , respectively.

The shape of the arm is described through its kinematic pose

q(s, t) :=

(cid:34)

Q(s, t) x(s, t)

(cid:35)

0

1

,

0 ≤ s ≤ L,

t ≥ 0

where x(s, t) ∈ R3 is the position vector of the center line at the material point s, and Q(s, t) =
[d1(s, t) d2(s, t) d3(s, t)] is a special orthogonal matrix whose column vectors are referred to as
the director vectors. The normal and binormal directors d1 and d2, respectively, span the cross
section of the arm and d3 = d1 × d2, where × denotes the vector cross product. The matrix Q(s, t)
describes the orientation of the material frame at point s at time t. See Fig. 1a for an illustration.

2.2 Physiology and geometry of the muscles

In an octopus arm, the axial nerve cord is surrounded by densely packed muscles and
connective tissue. Organizationally, there exist three major muscle groups [14–16] as seen from
physiological cross-section of an Octopus rubescens arm (Fig. 2):

(i) Transverse muscles (TM) surround the nerve cord and are oriented orthogonally to the

axial direction of the arm.

(ii) Longitudinal muscles (LM) run parallel to the nerve cord.
(iii) Oblique muscles (OM) are helically arranged around the longitudinal and transverse

muscles.

While each of these muscles can only contract when activated, by virtue of their geometrical
arrangement, internal forces (both contractile and extensional) and couples are generated,
allowing the arm to shorten and bend (LM), extend (TM), and twist (OM). A generic muscle

Table 1. Nomenclature

4

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

Arm related variables

Generic muscle related variables

center line position
center line directors

x
di
Q center line orientation
q
ε
ν
κ
r

pose
strain
shears and stretch
curvatures and twist
radius of the cross section

L
w
v
ω
p momentum
n
m internal couples
ρ

internal forces

density of the arm

rest length of the arm xm muscle position
velocity
linear velocity
angular velocity

γm muscle relative position
tm
muscle tangent director
νm muscle strain
(cid:96)m
nm muscle forces
mm muscle couples
um muscle activation

muscle local length

Figure 1. An octopus arm is modeled as a Cosserat rod. (a) The blue line denotes the center line of the arm where
the base is denoted as s = 0, and the tip is denoted as s = L. At each time t, its position at arc-length location s
is denoted as x(s, t) and its orientation (local frame) is Q(s, t). (b) Example of a longitudinal muscle m = LM.
The purple line denotes the position xm of the virtual longitudinal muscle. The muscle exerts an active force nm
along the direction of the tangent vector tm. This results in a couple mm acting on the center line.

is denoted as m ∈ {TM, LM, OM}. In the laboratory frame, its position is

where γm is the muscle’s relative position from the center line, represented in the material frame.
The unit tangent vector of a muscle is deﬁned as

xm := x + Qγm

(2.1)

tm := Q(cid:62) ∂sxm
|∂sxm|

An illustration of these quantities is given in Fig. 1b for m = LM. For each muscle group,
corresponding locations are sketched in Fig. 2, tabulated in Table 2, and further detailed in
Appendix B.

2.3 Strains, velocities, and energies

For each ﬁxed (s, t), the pose q(s, t) is an element of the special Euclidean group SE(3). The
orientation Q(s, t) is an element of the special orthogonal group SO(3). The associated Lie algebra
are denoted as se(3) and so(3), respectively. A linear map [·]× : R3 → so(3) is deﬁned as

[z]× :=






0
z3
−z2

−z3
0
z1




 ,

z2
−z1
0

z ∈ R3

and its inverse map is denoted as vec[·] : so(3) → R3. The strains and the velocities of the arm
are deﬁned as follows

∂sq(s, t) = q(s, t)ˆε(s, t),

ˆε :=

(2.2)

(cid:35)

(cid:34)

[κ]× ν
0

0

local framelab frame(a)(b)virtualmusculature elastic arm5

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Figure 2. Illustration of the (virtual) musculature modeling. Insets show a physiological cross section of an Octopus
rubescens arm (see Appendix B for details). Different muscle groups are color coded differently. Each subﬁgure
shows the position of each type of muscle. Position vector of a muscle relative to the center line is denoted by γm.
(a) Transverse muscles are illustrated as green rings surrounding the axial nerve cord. Since they do not result in
couples acting on the center line, their relative position is set as γTM = 0. (b) Longitudinal muscles are colored in
purple. They run parallel to the center line. (c) and (d) are oblique muscles with clock-wise and counter clock-wise
rotation, respectively. They are colored in orange.

where ˆε(s, t) ∈ se(3) with ε := (ν, κ) ∈ R6 referred to as strain. The strain includes shears (ν1, ν2),
stretch ν3, curvatures (κ1, κ2), and twist κ3. Similarly,

∂tq(s, t) = q(s, t) ˆw(s, t),

ˆw :=

(cid:35)

(cid:34)

[ω]× v
0

0

(2.3)

where ˆw(s, t) ∈ se(3) with w = (v, ω) ∈ R6 referred to as velocity. Note that elements of ε and w
are strains and velocities expressed in the material frame.

The kinetic energy of the arm is given by

T (p) =

(cid:90)

L

0

1
2

|p|2

M−1 ds

(2.4)

where M is the inertia matrix (see Appendix A) and p := Mw is the momentum in the material
frame. The vector norm is deﬁned as |z|2
A := z(cid:62)Az, for any vector z ∈ Rn, and A is a symmetric
positive deﬁnite n × n real matrix. The elastic potential energy is deﬁned as

V e(q) =

(cid:90)

L

0

W e (ε) ds

(2.5)

where the function W e : R6 → R is the elastic stored energy function of the rod. Assuming a
hyperelastic rod, the elastic internal forces and couples (ne, me) are gradients of this function,

1 mmTransverse muscle1 mmLongitudinal muscle1 mmClock-wise oblique muscle1 mmCounter clock-wise oblique muscle(a)(b)(c)(d)LTable 2. Summarized muscle model

6

Muscle model notation

Values of parameters

muscle
m

relative position
γm

local length
(cid:96)m

βm
r

max stress
σm
max [kPa]

normalized area
Am/A

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

(2.6)

(2.7)

TM

LMk

0

βLM






cos(kπ/2)
sin(kπ/2)
0






OM+
k

βOM

OM−
k

βOM











cos(kπ/2 + 2πNcs/L)
sin(kπ/2 + 2πNcs/L)
0

cos(kπ/2 − 2πNcs/L)
sin(kπ/2 − 2πNcs/L)
0











(cid:118)
(cid:117)
(cid:117)
(cid:116)

◦

(cid:12)
(cid:12)
(cid:12)νTM
(cid:12)
(cid:12)
(cid:12)
(cid:12)νTM(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)νLMk
(cid:12)
(cid:12)
(cid:12)νLMk
(cid:12)

◦

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

k

(cid:12)
(cid:12)νOM+
(cid:12)
(cid:12)
νOM+
(cid:12)
(cid:12)
(cid:12)

◦

k

k

(cid:12)
(cid:12)νOM−
(cid:12)
(cid:12)
νOM−
(cid:12)
(cid:12)
(cid:12)

◦

k

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

-

5
8

15
16

15
16

15

10

100

100

1
8

1
16

1
256

1
256

leading to the constitutive relationships

ne =

∂W e
∂ν

(ε), me =

∂W e
∂κ

(ε)

Remark 1. The simplest example of the elastic stored energy function is the quadratic form

W e(ε) =

(cid:16)(cid:12)
(cid:12)ν − ν◦(cid:12)
(cid:12)

1
2

2

S + (cid:12)

(cid:12)κ − κ◦(cid:12)
(cid:12)

(cid:17)

2
B

where S, B are the shearing and bending rigidity matrices of the rod (see Appendix A) , respectively, and
ε◦ = (ν◦, κ◦) is the intrinsic strain of the rod. This particular form of the elastic stored energy function
yields the linear stress-strain constitutive relation

ne =

∂W e
∂ν

= S(ν − ν◦), me =

∂W e
∂κ

= B(κ − κ◦)

3 Mathematical model of the control problem

3.1 Dynamics

The dynamics of a Cosserat rod are captured by the system of nonlinear partial differential

equations [17,18]

∂tq = q ˆw

(cid:34)

∂tp =

∂sn + κ × n − ω × (ρAv)
∂sm + κ × m + ν × n − ω × (ρJω)

(cid:35)

(cid:34)

(cid:35)

f
c

+

− ζp

(3.1a)

(3.1b)

where (n, m) are internal forces and couples, represented in the material frame, (f, c) are external
body forces and couples in the material frame, and ζ is the damping matrix which serves as a
reduced-order model (see Appendix A) for the viscoelastic properties of the elastic arm [18,42].

The rod dynamics (3.1) (in the absence of external body forces and couples) are accompanied by
a set of ﬁxed-free type boundary conditions

7

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

x(0, t) = x0, Q(0, t) = Q0, n(L, t) = 0, m(L, t) = 0, ∀t ≥ 0

(3.2)

where x0 ∈ R3 and Q0 ∈ SO(3) are given position and orientation at the base, respectively. The
control (muscles) affects the dynamics by modifying the overall internal forces and couples (n, m)
as

n = ne +

(cid:88)

m

nm, m = me +

(cid:88)

mm

m

(3.3)

where (ne, me) are restoring loads due to passive elasticity (see (2.6)) and (nm, mm) are active
loads on the arm resulting from muscle contractions. The latter depend on the muscle activations
u := {um} that serve as the control input. It remains to model the effect of muscles, namely
(nm, mm) as functions of the control um.

3.2 Forces and couples from muscle actuation

We model the arm and its musculature via a set of virtual muscles whose effects, upon
contraction, are translated into resulting forces and couples acting on a single Cosserat rod,
representing the arm itself. We start by noting that each muscle can only produce local contractile
forces. According to the classical Hill’s model [20–22,47], muscle forces are related to muscle
lengths (relative to rest state) (cid:96)m through a force-length relationship described by a (normalized)
function h((cid:96)m) ∈ [0, 1]. Descriptions of such force-length relationships are found in [23,43,48],
and the speciﬁc form of h(·), ﬁtted from experimental data [19], is given in § 5.1. For simplicity,
here we use the same force-length relationship for all muscle groups. However, different force-
length relationships for different muscle groups [48] can be accommodated. Moreover, the muscle
contractile force is proportional to its (rest) area Am(s), through the maximum force per unit area
(σm
max) that the muscle can provide. Hence, we write the active local muscle contractile force as

f m(s, (cid:96)m) = σm

maxAm(s)h((cid:96)m)

(3.4)

In order to extend the Hill’s model to express the effect of muscles on the single Cosserat rod
representing the arm, we need to account for their geometric arrangement (Fig. 2). Depending on
the muscle group, active contractions result in contractile (LM, OM) or extensile (TM) forces as
well as couples (LM, OM) on the arm. For example, transverse muscle contractions create radial
shortening which in turn makes the arm extend in length due to incompressibility. Thus, local TM
contractile forces effectively generate an axial extensile force on the arm. The model describing
these effects is provided next.

For a generic muscle m, the control input is the intensity of the actuation denoted as um(s, t) ∈
[0, 1] where m ∈ {TM, LM, OM}. Physically, the control input um represents the innervating motor
neuron stimulation (e.g. the ﬁring frequency). The bound on the control is the manifestation of
neurophysiological limits. When activated, the muscle exerts a resultant internal force nm along
the tangent direction of the muscle tm, modulated by um. That is

nm := ±umf mtm

(3.5)

where the negative sign indicates extensile force in the case of transverse muscles. Because the
longitudinal and oblique muscles are located away from the center line, they also generate the
couple

mm := γm × nm

(3.6)

Notice that the transverse muscles are perpendicular to the arm axis and thus they do not produce
resulting couples. Hence we set γTM = 0 (see discussions in Appendix B).

8

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

It remains to specify the model for local muscle length (cid:96)m. We ﬁrst deﬁne the muscle strain νm

by the following relationship

∂sxm =: Qνm

Recalling the deﬁnition of the muscle position vector xm in (2.1), we then readily obtain

νm = ν + κ × γm + ∂sγm

(3.7)

As a result, a natural deﬁnition of the intrinsic or rest muscle strain νm
rod strain (ν◦, κ◦) is given by

◦ as a function of the intrinsic

◦ := ν◦ + κ◦ × γm + ∂sγm
νm

(3.8)

The local muscle length is then taken to be a function of the muscle strain, i.e. (cid:96)m = (cid:96)m(|νm|). For
all three types of muscles, the model for (cid:96)m appears in Table 2. Explanations for such modeling
are provided in Appendix B.

3.3 Control problem

It is useful to view the dynamics (3.1) as a Hamiltonian control system. The Hamiltonian of a
non-actuated arm is the sum of kinetic and elastic potential energy. Dynamics of an actuated arm
are abstractly written as

(cid:34)

q
p

d
dt

(cid:35)

(cid:34)

=

0

Ξ

−Ξ∗ −Ω − ζM

(cid:35) (cid:34)

∇qV e
∇pT

(cid:35)

(cid:34)

+

(cid:35)

0
Gu

(3.9)

where the map Ξ, its dual map Ξ∗, the map Ω, and the generalized gradients ∇q, ∇p are used to
express the dynamics (3.1) in the canonical form [49,50]. The term Gu represents the overall forces
and couples generated by the muscles. Explicit forms of Ω and Gu are given in Appendix A.

The control problem is to obtain stabilizing control inputs u for the system (3.9) so as to
achieve some predeﬁned tasks. Here, the tasks are motivated by stereotypical motions observed
in octopuses [11,12]. Two of these motions are reaching and grasping. Mathematically, these two
problems are modeled by specifying an objective function for an optimization problem. Details
appear in § 5.2 and § 5.3.

4 Energy shaping control method

4.1 Difﬁculties with the matching conditions

Consider the Hamiltonian control system (3.9) with its total energy or the Hamiltonian given
by T + V e. The key idea of the (potential) energy shaping control scheme is to implement controls
u such that the Hamiltonian is modiﬁed from T + V e to T + V d, where V d is a desired potential
energy. That is, the controlled system evolves according to

(cid:34)

(cid:35)

q
p

d
dt

=

(cid:34)

0

Ξ

−Ξ∗ −Ω − ζM

(cid:35) (cid:34)

(cid:35)

∇qV d
∇pT

(4.1)

For the systems (3.9) and (4.1) to match (for arbitrary choice of initial conditions), it must follow
that

Gu = Ξ∗ (cid:16)

∇qV e − ∇qV d(cid:17)

,

∀ (q, p)

(4.2)

The operator G is viewed as the actuator (muscle) constraint that restricts the muscle forces and
couples to be applied only in certain directions (see Appendix A). In other words, the muscle
group TM, for example, can only produce axial forces on the arm. This is in contrast with the
fully actuated case where G is the identity operator, i.e. forces and couples on the arm are directly
speciﬁed via arbitrary continuous functions and may be applied along any desired direction, as

9

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Figure 3. An illustration of the energy shaping control method. The system starts as a straight rod (equilibrium
of potential energy landscape V e) and moves to a new equilibrium conﬁguration based on the desired potential
energy landscape V d, through the control u.

in [42]. As a result, equation (4.2) restricts the set of attainable desired potential energies V d. The
restriction on V d is expressed in the form of the matching condition which is described next.

Let G⊥ denote the left annihilator of G, i.e.,

G⊥, Gu

= 0, for all (q, p) and for all u. Here

(cid:68)

(cid:69)

L2

(cid:104)·, ·(cid:105)L2 represents the usual L2 inner product. Then applying G⊥ to both sides of (4.2) yield
∇qV e − ∇qV d(cid:17)(cid:69)

G⊥, Ξ∗ (cid:16)

= 0, ∀ (q, p)

(cid:68)

(4.3)

L2

Equation (4.3) is referred to as the (potential) matching condition in literature [51–54]. Its solution
determines the set of allowable V d that may be used in the energy shaping control design. For
example, in the fully actuated case G⊥ = 0 so the matching condition is trivial and any choice
of V d is a solution. However, in the presence of actuator constraints, the matching condition is
impractical to solve, requiring convoluted and specialized techniques, e.g. the λ-method [55], or
additional assumptions [51,56], even in ﬁnite dimensional settings.

Here, we do not attempt to directly solve the matching condition. Instead, we show in § 4.2
that it is possible to express active muscle forces and couples as gradients of a muscle stored energy
function. This implicitly solves the matching condition, leading to the energy shaping control law
of § 4.4.

4.2 Muscle stored energy function

Inspired by hyperelastic rod theory, we express the internal muscle forces and couples (see

(3.5) and (3.6)) as gradients of a scalar muscle stored energy function, deﬁned as follows.

Deﬁnition 1. For a generic muscle m, let the rest strain vector (shear and stretch) be denoted by νm
◦ .
Then, the muscle stored energy function is deﬁned as the line integral along a (piecewise) smooth curve
C ∈ R3

W m(s, νm) :=






(cid:90)

C
(cid:90)

C

f m(s, (cid:96)m(|y|))

y
|y|

−f m(s, (cid:96)m(|y|))

y
|y|

· dy,

if m ∈ {LM, OM}

· dy,

if m = TM

(4.4)

where y : [0, 1] (cid:55)→ C is a parameterization of the curve C, and y(0) = νm

◦ , y(1) = νm.

Note that the integral of (4.4) is path-independent as shown in Appendix C. Given the stored

energy function (4.4), muscle forces and couples are obtained as follows.

Proposition 1. Suppose um = um(s, t) is a given activation of a generic muscle m. Then, resulting muscle
forces and couples acting on the arm are given by
nm = um ∂W m
∂ν

, mm = um ∂W m
∂κ

(4.5)

potential energyinitialequilibriumdesiredequilibriumProof. See Appendix C.

10

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Proposition 1 leads to the following expression for the total stored energy function of the arm

W (s, ε; u) = W e(ε) +

umW m(s, νm(ε))

(cid:88)

m

Thus, the total potential energy of the arm becomes

(cid:90)

L

V(q; u) =

W (s, ε(s); u) ds

0

(4.6)

(4.7)

Similar to any mechanical system, an equilibrium conﬁguration of the arm is characterized by
the (local) minimum of its potential energy landscape, as illustrated in Fig. 3. We present the
mathematical conditions for such an equilibrium next.

4.2.1 Equilibrium of the arm

Consider the time independent activation of a muscle m

um(s, t) = αm(s),

0 ≤ s ≤ L, t ≥ 0

(4.8)

Such an activation proﬁle α = {αm} modiﬁes the stored energy function and potential energy
according to (4.6) and (4.7), respectively. The change in potential energy alters the equilibrium
conﬁguration of the arm. The necessary condition satisﬁed by the equilibrium is the subject of the
following proposition.

Proposition 2. Consider the time independent activation proﬁle (4.8). Then, the necessary condition for
the resulting equilibrium is given by

∂W
∂ε

(s, ε; α) = 0, 0 ≤ s ≤ L

(4.9)

Proof. See Appendix D.

Physically, condition (4.9) means that total internal loads resulting from passive elasticity and

active muscles, are in balance

(cid:88)

ne +

nm = 0, me +

m

mm = 0

(cid:88)

m

Henceforth, equation (4.9) is referred to as the equilibrium constraint. For brevity, we deﬁne
P (s, ε; α) := ∂W

∂ε (s, ε; α).

4.3 Design of potential energy: The static problem

For a ﬁxed time independent activation, the equilibrium is given by (4.9). The control
design problem then becomes selecting the activation proﬁle that meets the control objective.
In applications, additional constrains may arise, for example because of solid obstacles in the
environment, which we model as inequalities Ψj (s, q(s)) ≤ 0 for j = 1, 2, . . . , Nobs where Nobs is
the total number of obstacles.

11

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

We pose the control design as an optimization problem

(cid:90)

L

min
α(·), αm(s)∈[0,1]

J =

L(s, q(s), α(s)) ds + Φ(q(L))

0

subject to ∂sq = qˆε,

q(0) = q0,

q(L) free

(4.10)

and P (s, ε(s); α(s)) = 0, ∀s ∈ [0, L]

with Ψj (s, q(s)) ≤ 0, j = 1, 2, ..., Nobs

The form of the objective function J depends upon each different control objective. Speciﬁcally,
we write J = Jmuscle(α) + Jtask(q), where Jmuscle models the cost of muscles’ activation, and Jtask
depends on the control task. In this paper, we treat the constraints for obstacles Ψj ≤ 0 as soft
constraints, following the approach of [42,43]. This is done by augmenting the Lagrangian L as
¯L(s, q, α) = L(s, q, α) + (cid:80)
j ζj cj (s, q), where the functions cj penalize the violation of respective
inequalities and ζj > 0 are some chosen weights. For simplicity of exposition, we ignore the
obstacle constraints in the following.

Remark 2. Here we inherently assume that the equilibrium constraint P (s, ε; α) = 0 is solvable for all s
and for a given α. Additionally, we assume the existence of the inverse of the Jacobian matrix ∂P
∂ε for all s.
Thus, according to the implicit function theorem, one may write ε = ε(α). This allows us to disregard the
equilibrium constraint as an explicit constraint for the optimization problem (4.10). These assumptions are
also helpful for numerically solving (4.10), as explained in § 4.3.1.

Remark 3. The optimization problem (4.10) is sometimes referred to as a bilevel optimization problem
or structural optimization problem [57,58]. The equilibrium constraint P (s, ε; α) = 0 is the solution to an
optimization problem which we regard as the lower level optimization problem. Appendix D and references
therein contain details about this lower level problem. This equilibrium constraint is then embedded in the
problem of minimizing J, which is regarded as the higher level problem.

Solutions to (4.10) are obtained as follows. First, an enlargement technique is employed so that
the classical Pontryagin’s Maximum Principle (PMP) [59,60] conditions can be written. This is
followed by a reduction technique to express the co-state variable in a lower dimensional space
for efﬁcient computation. Finally, a numerical algorithm for solving (4.10) is described in § 4.3.1.
We ﬁrst notice that the state (the pose of the arm) q evolves in SE(3) according to the equation
∂sq = qˆε. However, one can also regard the evolution in Mat(4), the vector space of all 4 × 4
real matrices, with the restriction of initial condition q(0) = q0 ∈ SE(3). This extrinsic viewpoint,
known as enlargement technique [61,62], is adopted here to obtain the PMP conditions. We denote
the costate by λ ∈ Mat(4) and we write the control Hamiltonian (or the pre-Hamiltonian) as

H(s, q, λ, α) = (cid:104)λ, qˆε(cid:105) − L(s, q, α)

(4.11)

where (cid:104)·, ·(cid:105) denotes the inner product of two real matrices (cid:104)A, B(cid:105) = Tr(A(cid:62)B). The ﬁrst order
necessary conditions (PMP) for the optimization problem (4.10) are then given by

(state)

(costate)

∂sq =

∂H
∂λ

= qˆε

∂sλ = −

∂H
∂q

(boundary)

q(0) = q0, λ(L) = −

∂Φ
∂q

(q(L))

(maximum principle)

αopt =

argmax
α(·), αm(s)∈[0,1]

H(s, q, λ, α)

where αopt represents the optimal muscle activations.

(4.12a)

(4.12b)

(4.12c)

(4.12d)

12

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

We then notice that the costate equation (4.12b) evolves in Mat(4), a 16 dimensional vector
space. However, it is possible to parameterize the costate matrix λ in terms of two three-
dimensional vectors n ∈ R3 and m ∈ R3. This reduction leads to an efﬁcient computation of the
optimal control. We present this result as the following proposition.

Proposition 3. The costate λ has the form

(cid:34) 1

(cid:35)
2 Q ([m]× − M) Qn
0

0

λ =

(4.13a)

where the symmetric matrix M is deﬁned as
M := Q(cid:62) (cid:16)

Λ + (Qn) x(cid:62) + x (Qn)(cid:62)(cid:17)

Q

(4.13b)

with

and

Λ(s) :=

(cid:90)

L

s

∂L
∂x

x(cid:62) + x

(cid:19)(cid:62)

(cid:18) ∂L
∂x

+

∂L
∂Q

Q(cid:62) + Q

(cid:19)(cid:62)

(cid:18) ∂L
∂Q

d¯s + ΛL

(4.13c)

ΛL =

(cid:34)

∂Φ
∂x

x(cid:62) + x

(cid:19)(cid:62)

(cid:18) ∂Φ
∂x

+

∂Φ
∂Q

Q(cid:62) + Q

(cid:19)(cid:62)(cid:35)

(cid:18) ∂Φ
∂Q

s=L

(4.13d)

Here, the vectors n and m are the static internal forces and couples in the material frame, respectively. They
satisfy the differential equations

∂sn = −κ × n + Q(cid:62) ∂L
∂x

∂sm = −κ × m − ν × n + vec

(cid:34)

Q(cid:62) ∂L
∂Q

−

(cid:18) ∂L
∂Q

(cid:19)(cid:62)

(cid:35)

Q

(4.14a)

(4.14b)

and the transversality (boundary) conditions

n(L) = −Q(cid:62)(L)

∂Φ
∂x

(q(L)), m(L) = −vec

(cid:34)

Q(cid:62)(L)

∂Φ
∂Q

(q(L)) −

(cid:18) ∂Φ
∂Q

(cid:19)(cid:62)

(cid:35)

(q(L))

Q(L)

(4.14c)

Proof. See Appendix E.

∂L
∂x

∂L
∂Q

∂L
∂x

∂L
∂Q

Discussion: The vectors n and m are identiﬁed with the static overall internal forces and couples
acting on the rod, respectively. To see this, consider a Lagrangian L that is q independent, i.e.

the terms

and

vanish. Then, equations (4.14) are just the static counterparts to the

dynamics (3.1), under no external body forces and couples. For a q dependent Lagrangian L, the

terms involving

and

represent the external body forces and couples at the equilibrium.

Therefore, the parameterization (4.13) yields a physical interpretation of the costate variable λ.

4.3.1 Algorithm for solving the static problem

For a given task, the optimization problem (4.10) is solved by an iterative forward-backward
algorithm to ﬁnd the desired muscle activation α. In each iteration k, the equilibrium constraint
(4.9) is ﬁrst solved pointwise in s to get the strain ε(k) corresponding to the muscle activation α(k).
Next, the state q(k) and the co-state λ(k) are solved by noting the boundary conditions (4.12c) and
(4.14c). This lets us solve the state equation (4.12a) in a forward manner from the base to the tip
(from s = 0 to s = L), whereas the reduced costate equations (4.14) are solved in a backward fashion
from the tip to the base (from s = L to s = 0). The co-state λ(k) is ﬁnally obtained by utilizing the
relation (4.13). At the end of each iteration, the control α(k) is updated by using a gradient ascent

13

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Figure 4. A pseudo code and an illustration of the forward-backward algorithm

rule with step size η > 0 in order to maximize the control Hamiltonian H. The control update rule
is written as

α(k+1) = α(k) + η

∂H
∂α

(cid:12)
(cid:12)
(cid:12)
(cid:12)α=α(k)

where the gradient of H is computed as

∂H
∂α

= −

∂P
∂α

(cid:18) ∂P
∂ε

(cid:19)−1 (cid:18) ∂
∂ε

(cid:19)

(cid:104)λ, qˆε(cid:105)

−

∂L
∂α

(4.15a)

(4.15b)

A detailed discussion of the forward-backward algorithm is found in [42,43,63]. A brief pseudo
code and corresponding illustration are provided in Fig. 4. The value of η is listed in Table 3.

4.4 Energy-shaping control law and dynamic stability

In this section, we argue that the control law given in equation (4.8) is an energy shaping

control law for the whole system and discuss its stability properties. We notice the following:

(i) Applying control (4.8) modiﬁes the potential energy from V e(q) to V(q; α), which we

consider as the desired potential energy V d (see Fig. 3).

(ii) The modiﬁed Hamiltonian H := T + V, under suitable technical conditions, acts as a

Lyapunov functional whereby along a solution trajectory

d
dt

H(q, p) = −

(cid:90)

L

0

|p(s, t)|2

ζM−1 ds ≤ 0

(4.16)

Derivation of (4.16) is not straightforward and is shown in Appendix F. We thus have that the
total energy of the system is non-increasing. Finally, an application of the LaSalle’s theorem

, which
guarantees local asymptotic stability to the largest invariant subset of
is indeed the equilibrium point (qα, 0), where qα is the desired static pose. Note that a rigorous
functional analytic treatment of the stability requires an analysis of the compact semigroup
properties of the closed loop dynamics and an application of the generalized LaSalle’s principle
for inﬁnite dimensional systems [64,65]. Such analysis is outside the scope of this paper and will
be considered as a future work.

(cid:110)

(q, p) (cid:12)

(cid:12) dH

dt = 0

(cid:111)

Remark 4. In this paper, we effectively express the muscle actuation term Gu as a gradient of a potential
energy functional. Thus, the time invariant muscle activation (4.8) restricts the set of allowable desired
potential energy functionals. Indeed, under (4.8), any desired potential energy V d must possess a speciﬁc
form, namely V d(q) = V(q; α), instead of having any functional form. This solves the matching conditions

(c) Update activationsactivationarm(b) Backward pathupdate(a) Forward pathupdateimplicitly. Moreover, the static muscle actuation proﬁle α is a solution to the energy shaping control
problem. For a ﬁnite dimensional setting, this viewpoint is explored in [66].

14

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

5 Arm reaching and grasping in 3D space

two biophysically motivated examples including reaching and grasping
In this section,
are discussed. These well-characterized examples produce 3D motions which are seen as
stereotypical motions of an octopus arm [12,67]. Moreover, some of these movements have also
been observed in isolated arms [68], thereby affording the possibility of experimentally probing
them. The numerical simulation environment setup is described in § 5.1, and the two example
tasks are discussed in § 5.2 and § 5.3.

5.1 Biophysical and numerical setup

In order to investigate arm behavior, the explicit Cosserat rod equations (3.9) are discretized
into Nd connected cylindrical segments and solved numerically by using our open-source,
dynamic, and three-dimensional simulation framework Elastica [18,32,69].

Based on experimental measurements [42,43], the radius proﬁle of the tapered geometry of an

octopus arm is modeled as

r(s) = rtip s
L

+ rbase L − s

L

where rbase and rtip are the radii of the arm at the base and at the tip, respectively. We take the rest
conﬁguration of the rod to be straight and of length L (i.e. κ◦ ≡ 0, ν◦
3 ≡ 1). The
muscles are implemented as sources of active internal forces and couples on the arm as described
in § 3.2. The following force length curve h(·) is used

2 ≡ 0 and ν◦

1 = ν◦

h((cid:96)) = max{3.06(cid:96)3 − 13.64(cid:96)2 + 18.01(cid:96) − 6.44, 0}

where (cid:96) > 0 is the local muscle length. This model is ﬁtted from experimental data [19, Fig. 6].

We also consider the suckers along the octopus arm’s side, which serve a variety of purposes,
from sensing chemical stimuli [70,71] to adhering to surfaces [72,73]. This affects the arm’s
deformation patterns [12,46]. For example, during a grasping motion, the arm may need to
twist itself so that a large number of suckers are faced towards the object surface. Even though
sucker models for sensing or the adhering mechanisms are beyond the scope of this paper, we do
consider their one-sided orientation by aligning the director d1(s) with the (virtual) sucker-facing
direction, and accounting for this information in designing muscle controls.

Biophysically realistic arm and muscle parameter values are listed in Table 2 and also in
reference [42]. Parameters for numerical simulations are found in Table 3 with further details
in [18].

5.2 Reaching a static target

The ﬁrst experiment consists of reaching a stationary target with the tip of the arm in a
prescribed, desired orientation. This mimics the behavior of an octopus fetching food. The form
of the objective function in (4.10) is written as J = Jmuscle + Jtask with

Jmuscle(α) =

(cid:90)

L

(cid:88)

0

m

1
2

(αm(s))2 ds

(5.1)

being the activation cost of muscles. Given the target position x∗ ∈ R3 and the reaching
orientation Q∗ ∈ SO(3), we couch the task cost as a function of the distance between desired and

Table 3. Parameters for numerical simulation and algorithm

15

Parameter Description

L
rbase
rtip
E
G
ρ
ζv
ζω
Nd
∆t
η
µpos
µdir

rest arm length [cm]
base radius [cm]
tip radius [cm]
Young’s modulus [kPa]
shear modulus [kPa]
density [kg/m3]
linear velocity dissipation [1/s]
angular velocity dissipation [1/s]
discrete number of elements
discrete time-step [s]
algorithm update step size
position regularization parameter
director regularization parameter

Value

20
1.2
0.12
10
40/9
1050
0.02
0.02
100
10−5
10−8
106
103

achieved tip location and orientation

Jtask = Jreach(q(L)) =

µpos
2

(cid:12)x∗ − x(L)(cid:12)
(cid:12)
(cid:12)

2

+

µdir
2

(cid:13)Q∗ − Q(L)(cid:13)
(cid:13)
(cid:13)

2
F

(5.2)

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

where (cid:107)·(cid:107)F denotes the matrix Frobenius norm, and the parameters µpos, µdir > 0 are
regularization weights for position and directors, respectively, and are listed in Table 3.

The reaching orientation Q∗ =

(cid:104)
d∗
1

(cid:105)

d∗
2

d∗
3

is determined by

1 = d∗
d∗

2 × d∗
3,

d∗
2 = b(0) × b(L),

d∗
3 = b(L)

with

b(s) :=

x∗ − x(s)
|x∗ − x(s)|

where the vector b(s) denotes the unit vector pointing from the initial arm conﬁguration to the
target position x∗. The vector d∗
2 is the normal director of the plane spanned
by b(0) and b(L), and d∗
1 is another unit vector that completes the orthonormal triad (Fig. 5(a)).
This setup is motivated by a common behavior observed in octopuses [12], whereby the arm ﬁrst
points its tip toward the target (i.e. d3(L) aligns with d∗
3 = b(L)), and then orients the suckers on
the distal end toward the target (i.e. d1(L) aligns with d∗
1).

3 aligns with b(L), d∗

After formalizing the reaching problem, we proceed with analyzing the ensuing arm behavior.
A representative example is illustrated in Fig. 5(b). The arm, initially at rest in a straight
conﬁguration, activates the transverse muscles to extend its distal end, in an attempt of stretching
out given the far away target location. Two longitudinal muscles near the base are activated so
that the arm bends toward to the target. Oblique muscles are also activated, so as to twist the arm
and reorient the distal suckers toward the target.

Next, we systematically characterize the arm reaching performance by considering 125 targets
uniformly distributed inside a cube with side length of 20 [cm], as shown in Fig. 5(c). The ability
of the arm to carry out the task accurately is quantiﬁed via the position and director errors as
follows

epos(x(L)) =

,

edir(Q(L)) =

|x∗ − x(L)|
L

1
8

(cid:13)Q∗ − Q(L)(cid:13)
(cid:13)
(cid:13)

2
F

The position error is scaled by the rest length of the arm, and the director error is scaled by 8 which
is the maximum value of the squared matrix norm of the difference between two orientation
matrices. From the position error plot on the left of Fig. 5(c), we see that the largest errors occur
near the corners, opposite to the base of the arm. This is because those targets are physically

16

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Figure 5. Reaching task. (a) The arm is tasked to reach the target with an orientation that ensures the suckers
facing the target, mimicking real octopus reaching motions. (b) The target is located at (1,15,6) [cm] and is indicated
as an orange sphere. Muscle activations are shown on top, and the time evolution of the arm is depicted as
translucent purple rods. (c) Different target locations are tested. Two representative cases characterized by large
position errors are shown on the left, and two cases characterized by relatively large director errors are shown on
the right. The arm on the e1 axis depicts its initial posture.

positioned outside of the reachable workspace of the arm. For these cases, the arm stretches as
much as it can in the target direction, but cannot reach it, as shown in the two insets. For targets
very close to the base, it is again difﬁcult for the arm to both bend and twist to properly reach and
orient, leading to high errors. We note that director errors are all small, with the maximum error
less than 0.1.This is because the orientation error is evaluated at the very tip of the arm, which is
very nimble and can relatively easily reconﬁgure in space. Such behavior is on display in the right
of Fig. 5(c). The two examples are the ones characterized by the largest director errors, and yet,
for all intents and purposes, the tip successfully re-orients as desired. Therefore, we conclude that
our algorithm is able to compute the muscle activations needed to reliably complete the reaching
task.

5.3 Grasping a static object

In the second experiment, the octopus arm is tasked to grasp a target object. This behavior
is commonly seen when an octopus tries to reach for a bottle, a stick, or other objects [72,73]. In
ﬁnding the desired static conﬁguration, the object is treated as both an obstacle and a target, so
that the arm cannot penetrate its surface but seeks to wrap around it.

The objective function J presents a decomposition similar to the above described reaching
example. Here we use the same muscle activation cost Jmuscle (5.1), while obstacle constraints
and task cost are designed as follows.

The target is represented by a closed and convex set C ⊂ R3 with its boundary denoted by ∂C.

The non-penetration constraint is modeled by

Ψ (s, q(s); C) = r(s) − dist(x(s), C) ≤ 0

TMLMOM(a)(b)arm twistsclock-wise(c)17

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Figure 6. Grasping task. (a) The arm is tasked to wrap around a cylinder of radius R = 2 [cm] and height 15
[cm]. The interior point x∗ is located at (6, -5,2) [cm]. The cylinder is upright, i.e. its orientation aligns with the e3
axis. The cylinder is shown in translucent orange. (b) Muscle activations are shown on top, and the time evolution
of the arm is depicted as translucent purple rods. (c) On the left, the radius of the cylinder R varies from 1 [cm]
to 4 [cm]. The normalized (relative to the R = 1 [cm] case : reference case 1) error plot and two representative
results (R = 1 [cm] and R = 4 [cm]) are shown. The plots in the middle and on the right consider cylinders rotated
about the e1 and e2 axes, respectively, keeping R = 2 [cm] ﬁxed. The rotation angle varies from −60◦ to 60◦.
Normalized (relative to the rotation angle of 0◦ : reference case 2) error plots and two representative results for
−60◦ and 60◦ are presented.

.

where the signed distance function dist(z, C) denotes the minimum distance from point z ∈ R3 to
the object C. Explicitly, the distance function is deﬁned as

dist(z, C) :=

(cid:40)

min (cid:8)|z − x(cid:48)| : x(cid:48) ∈ ∂C(cid:9), if z (cid:54)∈ C
− min (cid:8)|z − x(cid:48)| : x(cid:48) ∈ ∂C(cid:9), otherwise

(cid:90)

The negative value of the function Ψ indicates that the arm is not penetrating the boundary. Other
than avoiding penetration, the arm is also expected to wrap around the target. The task cost
function is then set to

Jtask = Jgrasp(q) =

L

1(s; s(cid:48))

(cid:16)

(cid:17)
µposJpos(q(s), s) + µdirJdir(q(s))

ds

(5.3)

where the indicator function is

0

(cid:40)

1(s; s(cid:48)) =

0
1

if s ∈ [0, s(cid:48))
if s ∈ [s(cid:48), L]

with s(cid:48) = 0.3L indicating the location at which the arm begins to wrap around the target. The ﬁrst
term Jpos minimizes the distance between the arm and the object surface, while the second term
Jdir induces the suckers to face towards the object for grasping.

For this experiment, the arm is initialized straight and is tasked to wrap around an upright
solid cylinder target as shown in Fig. 6(a). A point x∗ = (6, −5, 2) [cm] is chosen as an interior

TMLMOM(a)(b)(c)Normalized errorbased on referencecase 1 performanceRotation angle w.r.tRotation angle w.r.tarm twistscounter clock-wisereferencecase 1referencecase 22 cm1 cm4 cm2 cmNormalized errorbased on referencecase 2 performanceNormalized errorbased on referencecase 2 performancepoint of the cylinder and the cost Jpos is designed to minimize surface-to-surface distance

18

Jpos(q(s), s; x∗) :=

(cid:12)x∗ − x(s)(cid:12)
(cid:0)(cid:12)

(cid:12) − r(s)(cid:1)2

1
2

while Jdir causes d1(s) to point towards the cylinder’s surface

Jdir(q(s); x∗) :=

1
2

(1 − b(s) · d1(s))

After formalizing the grasping problem, we proceed by demonstrating the arm behavior in
Fig. 6(b). The arm starts with a straight conﬁguration. The longitudinal and oblique muscles
cooperate with each other causing the arm to reconﬁgure in a spiral shape and wrap around
the cylinder. Meanwhile, as apparent in Fig. 6(b), the arm further modulates twist to approach
the cylinder with the suckers side, mimicking the grasping behavior.

For systematic characterization of the grasping performance, we next test different radii
and orientation angles of the target cylinder. These results are demonstrated in Fig. 6(c). To
numerically assess the results, we deﬁne the following position and director errors

epos(x) =

edir(Q) =

(cid:90)

L

0
(cid:90)

L

0

1(s; s(cid:48))

1(s; s(cid:48))

1
2

1
2

(cid:18) |x∗ − x(s)| − r(s)
R

(cid:19)2

ds

(1 − b(s) · d1(s)) ds

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

where R is the radius of the cylinder. First, we keep the cylinder upright (orienting toward the
e3 axis) and vary its radius R from 1 [cm] to 4 [cm]. As shown in the error plot (on the left of
Fig. 6(c)), the thinner the cylinder, the higher the position and director errors. In other words,
grasping a slender cylinder is harder than wrapping around a thick one. This is because larger
curvatures of the cylinder surface require greater muscle energy expenditures. We then keep R
ﬁxed at 2 [cm], and vary its orientation by rotating about the e1 and e2 axes, sequentially. This is
to test the ability of our control to cope with misalignment. We observe small variability (relative
standard deviation of 3.2% and 1.3%) in epos and larger variability (relative standard deviation of
23.4% and 14.5%) in edir for both kinds of rotation. The larger variability in edir occurs because the
arm prioritizes position error minimization (large µpos, see Table 3). We therefore conclude that
the arm is able to reliably grasp the differently tilted cylinders, however, properly orienting the
suckers is harder for certain orientations of the cylinder.

6 Conclusion and future work

In this paper, a mathematical model is developed for capturing the three-dimensional motion
of a muscular octopus arm. First principle models for all major muscle groups are described
in terms of the forces and couples that they generate on a single Cosserat rod representing the
arm. Furthermore, the muscles are described via a generalized notion of muscle stored energy
functions. The total potential energy of the arm is then expressed by the summation of the
passive elastic energy and active muscle potential energy, modulated by muscle control inputs.
This is helpful from a control viewpoint since it paves the way for solving an energy shaping
control problem. The energy shaping control problem is formulated as a task-speciﬁc geometric
optimization problem. First order necessary conditions for such a problem are obtained, and
the relationship between the costate variable and the forces and couples acting on the arm is
elucidated. Numerical simulations mimicking octopus behavioral experiments demonstrate the
engagement of 3D speciﬁc deformation modes (e.g., twist), leading to rich maneuvers. Systematic
analyses of the reaching and grasping cases illustrate the ability and robustness of our proposed
method. Future research directions include the integration of neuronal activity which drives
muscle contractions. Ongoing work also undertakes the sensorimotor control aspect of such a
muscular arm.

Authors’ Contributions. H.-S.C., U.H., and P.G.M. contributed to the theoretical conceptualization of
the problem. H.-S.C. and U.H. carried out the modeling of the muscles and the analysis of the energy

19

shaping control methodology. H.-S.C., U.H., M.G. and P.G.M. designed the experiments. H.-S.C. implemented
the software. C.-H.S. and N.N. helped interface with the simulation package Elastica. N.N. performed the
histological analysis of an Octopus rubescens arm. C.-H.S. rendered the ﬁgures. U.H. and H.-S.C. wrote the
manuscript. P.G.M., M.G., and N.N. helped edit the manuscript.

Competing Interests. The authors declare no competing interests.

Funding. We gratefully acknowledge ﬁnancial support from ONR MURI N00014-19-1-2373, NSF EFRI C3
SoRo #1830881, NSF OAC #2209322, and ONR N00014-22-1-2569. We also acknowledge computing resources
provided by the Extreme Science and Engineering Discovery Environment (XSEDE), which is supported by
National Science Foundation grant number ACI-1548562, through allocation TGMCB190004.

Appendix A Parameter speciﬁcation in the modeling

(i) The inertia matrix of a single soft arm takes the form

M :=

(cid:34)

ρAI3
0

(cid:35)

0
ρJ

,

J = diag(J11, J22, J33) :=

A2
4π






1
0
0






0
0
2

0
1
0

where I3 is the 3 × 3 identity matrix and A = A(s) is the cross sectional area of the rod.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

(ii) The shearing and bending rigidity matrices used in the deﬁnition of elastic stored potential
energy (2.7) are deﬁned as








S :=

GA
0
0




0
GA
0

0
0
EA


 , B :=




EJ11
0
0

0
EJ22
0

0
0
GJ33




where E and G are the Young’s modulus and shear modulus, respectively.

(iii) Consider the dynamics (3.1). The damping matrix ζ takes the form

ζ :=

(cid:34)

ζvI3
0

(cid:35)

0
ζωI3

where ζv, ζω > 0 are damping coefﬁcients.

(iv) Consider the dynamics (3.9). The frame transformation velocity matrix Ω takes the form

(cid:34)

Ω =

(cid:35)

0

[ω]×
[v]× [ω]×

(v) The muscle actuation model in equation (3.9) Gu = (cid:80)
m

Gmum is explicitly written in the

following form

(cid:34)

Gmum =

∂snm + κ × nm
∂smm + κ × mm + ν × nm

(cid:35)

where the models of muscle forces and couples for each type are shown in equation (B.1), (B.2),
and (B.3).

Appendix B Physiology and modeling of the muscles

20

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

B.1 Physiology of an octopus arm

An Octopus rubescens was anesthetized in seawater with 333 nM MgCl concentration. An arm
was amputated, ﬁxed in 4% PFA for 48 hours and transferred to a 1x PBS solution. Hematoxylin
and eosin staining was performed using standard protocols. Microscopy was then performed
using Hamamatsu’s NanoZoomer slide scanner to achieve full ﬁeld of view images of the arm’s
musculature. Histological cross-sections are provided in Fig. 2.

B.2 Muscle modeling

In this section, we describe how each individual muscle is modeled, i.e. its relative position
with respect to the center line, strain, length, force, and couple. Note that a tapered arm radius
proﬁle r(s) is considered as described in § 5.1. A summary of this section is given in Table 2.

(i) Transverse Muscle (TM):

These muscles surround the central nerve cord and are arranged perpendicularly to the arm.
Their relative position to the center line is considered as zero, i.e. γTM = 0 and thus νTM = ν
from the deﬁnition (3.7). Since transverse muscles surround the nerve cord, the local length
(cid:96)TM is proportional to the circumference of the arm. Owing to the constancy of volume, the
(cid:12)
(cid:12). For simplicity, we then
circumference of the arm is proportional to inverse square root of
model the local muscle length (cid:96)TM as

(cid:12)νTM(cid:12)

(cid:12)
(cid:12)

(cid:96)TM =

(cid:115) (cid:12)
(cid:12)
(cid:12)νTM
(cid:12)
◦
(cid:12)νTM(cid:12)
(cid:12)
(cid:12)

When transverse muscles are activated, the local length of muscles is shortened. Due to
conservation of the volume, the arm expands in the axial direction tTM = νTM/
(cid:12)
(cid:12). Thus, the
transverse muscles create an extensional force on the tangent direction of the arm. The internal
force is then modeled as (written in the material frame)

(cid:12)νTM(cid:12)

(cid:12)
(cid:12)

nTM = −uTMf TMtTM

(B.1)

and no internal couples are created, i.e. mTM = 0.

(ii) Longitudinal Muscle (LM):

These muscles run parallel to the axial nerve cord. Here, we use four to represent these groups

of muscle. They are located at the following positions relative to the center line:

γLMk = βLM






cos(kπ/2)
sin(kπ/2)
0




 ,

k = 0, 1, 2, 3

where βLM is the ratio of the longitudinal muscle off-center distance with respect to the radius of
the arm. Thus, we have the muscle strains

νLMk = ν + κ × γLMk + ∂sγLMk

and muscle length as (cid:96)LMk =
it creates
contraction locally on the tangent direction of the muscle and since it is located a distance away

(cid:12)
(cid:12)
(cid:12). When each of them is activated,

(cid:12)
(cid:12)νLMk
(cid:12)

(cid:12)
(cid:12)νLMk
(cid:12)

(cid:12)
(cid:12)
(cid:12) /

◦

from the center line, its contraction force creates couple and thus locally bends the arm. That is

21

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

nLMk = uLMk f LMk tLMk , mLMk = γLMk × nLMk

(B.2)

with muscle tangent tLMk = νLMk /

(cid:12)
(cid:12)νLMk
(cid:12)

(cid:12)
(cid:12)
(cid:12).

(iii) Oblique Muscle (OM):

These muscles are similar to the longitudinal muscles, but they do not run parallel to the center
line. For simplicity, each of these ﬁbers are considered to position like a helical curve with Nc
number of cycles around the center line (see Fig. 2). Two types of winding are considered here:
rotating clock-wise and counter clock-wise. For each type of winding, they are modeled by four
muscles and we write their relative positions as

γOM+

k = βOM






cos(kπ/2 + 2πNcs/L)
sin(kπ/2 + 2πNcs/L)
0




 ,

k = 0, 1, 2, 3, Nc = 6

for clock-wise oblique muscles and

γOM−

k = βOM






cos(kπ/2 − 2πNcs/L)
sin(kπ/2 − 2πNcs/L)
0




 ,

k = 0, 1, 2, 3, Nc = 6

for counter clock-wise oblique muscles. Note that βOM is the ratio of the longitudinal muscle off-
center distance with respect to the radius of the arm. The muscle strains are then calculated by
(OM+

k for example)

νOM+

k = ν + κ × γOM+

k + ∂sγOM+

k

and the muscle length (cid:96)OM+

k =

(cid:12)
(cid:12)νOM+
(cid:12)

k

(cid:12)
(cid:12)
(cid:12) /

(cid:12)
(cid:12)
(cid:12)
(cid:12)

νOM+

k

◦

(cid:12)
(cid:12)
(cid:12)
(cid:12)

. Muscle force and couple are then modeled using

the similar equation as the longitudinal muscle. Within each group of differently wound oblique
muscle groups, the four ﬁbers are activated together locally, i.e. only two controls: uOM+
(s, t) and
uOM−
(s, t) control two groups of oblique muscles. For example, for the OM+ group,

nOM+

k = uOM+

k tOM+
(cid:12)
with muscle tangent tOM+
(cid:12)
(cid:12). Similar equations follow for the counter clock-wise
rotated muscle group. Cumulatively, one muscle group mainly contributes to twist the arm, e.g.
the OM+ group provides counter clock-wise twisting.

f OM+
(cid:12)
(cid:12)νOM+
(cid:12)

k , mOM+

k = νOM+
k /

k × nOM+

k = γOM+

(B.3)

k

k

Appendix C Proof of Proposition 1

Proof. Indeed, deﬁne a vector valued function

gm(s, y) :=






f m(s, (cid:96)m(|y|))

− f m(s, (cid:96)m(|y|))

y
|y|
y
|y|

,

,

if m ∈ {LM, OM}

if m = TM

with y ∈ R3, y (cid:54)= 0, and a scalar function µm(s, y) as follows
(cid:90)

µm(s, y) :=






(cid:96)m(|y|)

(cid:96)m
◦
(cid:96)m(|y|)

(cid:90)

(cid:96)m
◦

maxAm(s)h((cid:96)) (cid:12)
σm

(cid:12)νm
◦

(cid:12)
(cid:12) d(cid:96),

if m ∈ {LM, OM}

2σm

maxAm(s)h((cid:96)) (cid:12)

(cid:12)νm
◦

(cid:12)
(cid:12)

d(cid:96)
(cid:96)3 ,

if m = TM

22

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

◦ = (cid:96)m(|νm

where (cid:96)m
◦ |). Then through a straightforward calculation it is clear that, gm(s, y) =
∇y µm(s, y) for all muscle m, where we have used the deﬁnitions of the muscle length function
(cid:96)m(·) as per Table 2. This means the line integral in (4.4) is path-independent and hence we can
write

W m(s, νm) = µm(s, νm)

∂W m
∂νm

(s, νm) =

∂µm
∂νm

= gm(s, νm)

This implies

Then it is clear that

um ∂W m
∂ν
and um ∂W m
∂κ

= um ∂νm
∂ν
= um ∂νm
∂κ

∂W m
∂νm
∂W m
∂νm

= ±umf m νm
|νm|

= nm,

= γm × nm = mm.

Appendix D Proof of Proposition 2

Proof. For a given set of static muscle activation proﬁle α, the arm is subjected to a ﬁxed-free type
boundary condition. For such a scenario, static equilibria of the arm are obtained by solving an
optimization problem [40–43] as follows

(cid:90)

L

min
ε(·)

V =

W (s, ε; α) ds

0

s. t. ∂sq = qˆε,

q(0) = q0,

q(L) free

(D.1)

Here W is the total stored energy function as introduced in (4.6). Any minimizer of the
problem (D.1), denoted by ε, must satisfy the necessary conditions of optimality. Let the control
Hamiltonian be

H(q, ε, λ; α) = (cid:104)λ, qˆε(cid:105) − W (s, ε; α)

where λ ∈ Mat(4) is the costate. The Hamilton’s equations are then given by the PMP condition

∂sq =

∂H
∂λ

= qˆε,

q(0) = q0

∂sλ = −

∂H
∂q

= −λˆε(cid:62), λ(L) = 0

and the optimal strains satisfy the maximization of the Hamiltonian

∂H
∂ε

= 0

(D.2)

Indeed, from the transversality condition λ(L) = 0 (due to the free boundary condition at the tip)
and the evolution equation ∂sλ = −λˆε(cid:62), we see that λ(s) ≡ 0 for all s. Then, the deﬁnition of the
total stored energy function (4.6) and Proposition 1 readily yield equation (4.9) from maximization
of the Hamiltonian (D.2).

Appendix E Proof of Proposition 3

23

Proof. At the outset, we ﬁrst deﬁne a transformation of the costate as

K = q(cid:62)λ

and then its evolution and the transversality condition are derived as

∂sK =

(cid:104)

ˆε(cid:62), K

(cid:105)

+ q(cid:62) ∂L
∂q

, K(L) = −q(cid:62)(L)

∂Φ
∂q

(q(L))

(E.1)

where [A, B] = AB − BA is the standard matrix commutator. It is then clear that solving the
costate equation (4.12b) is equivalent to solving (E.1), since once the K is solved, the costate λ
is then given by

λ = (q(cid:62))−1K

(E.2)

where the inverese always exists. Next, we consider the following form of the transformed costate
(cid:34)KA KC
K(cid:62)
B KD

K =

(cid:35)

where KA(s) ∈ R3×3, KB(s) ∈ R3, KC(s) ∈ R3 and KD(s) ∈ R. Based on this partition, (E.1)
becomes

∂sKA =

(cid:104)

[κ](cid:62)

×, KA

(cid:105)

− KCν(cid:62) + Q(cid:62) ∂L
∂Q

,

KA(L) = −Q(cid:62)(L)

∂sK(cid:62)

B = ν(cid:62)KA − K(cid:62)

B [κ](cid:62)

× − KDν(cid:62) + x(cid:62) ∂L
∂Q

,

K(cid:62)

B (L) = −x(cid:62)(L)

∂Φ
∂Q

∂Φ
∂Q

(q(L))

(E.3a)

(q(L))

(E.3b)

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

×KC + Q(cid:62) ∂L
∂sKC = [κ](cid:62)
∂x
∂sKD = ν(cid:62)KC + x(cid:62) ∂L
∂x

,

,

Now, we deﬁne n := KC and rewrite (E.3c) as

KC(L) = −Q(cid:62)(L)

(q(L))

(E.3c)

KD(L) = −x(cid:62)(L)

(q(L))

(E.3d)

∂Φ
∂x
∂Φ
∂x

with the transversality condition

∂sn = −κ × n + Q(cid:62) ∂L
∂x

n(L) = −Q(cid:62)(L)

∂Φ
∂x

(q(L))

By integrating both sides of (E.3d) and utilizing (E.3c), we have the following form of KD

KD = x(cid:62)Qn

To ﬁnd the form of KA, we ﬁrst can write it as a combination of the symmetric part and skew-
symmetric part and derive their corresponding evolution. The skew-symmetric part’s evolution
is given by

∂s(KA − K(cid:62)

A ) =

(cid:104)

KA − K(cid:62)

A , [κ]×

(cid:105)

nν(cid:62) − νn(cid:62)(cid:17)
(cid:16)

−

+

(cid:32)

Q(cid:62) ∂L
∂Q

−

(cid:18) ∂L
∂Q

(cid:19)(cid:62)

(cid:33)

Q

Deﬁning [m]× := KA − K(cid:62)

A , for some m(s) ∈ R3, we have

∂sm = −κ × m − ν × n + vec

(cid:34)

Q(cid:62) ∂L
∂Q

−

(cid:18) ∂L
∂Q

(cid:19)(cid:62)

(cid:35)

Q

with the transversality condition

m(L) = −vec

(cid:34)

Q(cid:62) ∂Φ
∂Q

−

(cid:18) ∂Φ
∂Q

(cid:19)(cid:62)

(cid:35)

Q

The evolution of the symmetric part of KA is given by

24

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

∂s(KA + K(cid:62)

A ) =

(cid:104)

KA + K(cid:62)

A , [κ]×

(cid:105)

nν(cid:62) + νn(cid:62)(cid:17)
(cid:16)

−

+

(cid:32)

Q(cid:62) ∂L
∂Q

+

(cid:18) ∂L
∂Q

(cid:19)(cid:62)

(cid:33)

Q

By integrating both sides of the equation and after some direct calculations, we have

M = Q(cid:62) (cid:16)

Λ + (Qn)x(cid:62) + x (Qn)(cid:62)(cid:17)

Q

where we denote M := −

(cid:16)
KA + K(cid:62)
A

(cid:17)

and Λ is deﬁned as

Λ(s) :=

(cid:90)

L

s

∂L
∂x

x(cid:62) + x

(cid:19)(cid:62)

(cid:18) ∂L
∂x

+

∂L
∂Q

Q(cid:62) + Q

(cid:19)(cid:62)

(cid:18) ∂L
∂Q

d¯s + ΛL

where

Finally we write

ΛL =

(cid:34)

∂Φ
∂x

x(cid:62) + x

(cid:19)(cid:62)

(cid:18) ∂Φ
∂x

+

∂Φ
∂Q

Q(cid:62) + Q

(cid:19)(cid:62)(cid:35)

(cid:18) ∂Φ
∂Q

s=L

KA = 1

2 ([m]× − M)

Lastly, by integrating both sides of (E.3b), we obtain

K(cid:62)

B = x(cid:62)QKA

Now, we already have the form of the transformed costate K. To ﬁnd the form of the costate, we
calculate (E.2) and have

λ = (q(cid:62))−1K =

0

(cid:34) Q
−x(cid:62)Q 1

(cid:35) (cid:34) KA

(cid:35)

n

x(cid:62)QKA x(cid:62)Qn

=

(cid:34) 1

(cid:35)
2 Q([m]× − M) Qn
0

0

Appendix F Time derivative of the Hamiltonian –

derivation of (4.16)

Recall that the Hamiltonian of the rod system is H(q, p) := T (p) + V(q) and its time derivative is

d
dt

H(q, p) =

=

(cid:90)

L

(cid:90)

0

L

0

(M−1p)(cid:62)(∂tp) + (∂W/∂ε)(cid:62)(∂tε) ds

v(cid:62)∂t(ρAv) + ω(cid:62)∂t(ρJω) + n(cid:62)(∂tν) + m(cid:62)(∂tκ) ds

(F.1)

We ﬁrst focus on the ﬁrst and the third terms

(cid:90)

L

0

v(cid:62)∂t(ρAv) + n(cid:62)(∂tν) ds =

=

=

(cid:90)

L

0
(cid:90)

L

(cid:90)

0

L

0

v(cid:62)∂t(ρAv) + (Qn)(cid:62)(cid:0)∂s(Qv) − (∂tQ)ν(cid:1) ds

v(cid:62)∂t(ρAv) − (cid:0)Q(cid:62)∂s(Qn)(cid:1)(cid:62)

v − n(cid:62)Q(cid:62)∂tQν ds

−ζv |ρAv|2

(ρA)−1 − n · (ω × ν) ds

25

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Next, for the second and the forth terms in (F.1), we have

(cid:90)

L

0

ω(cid:62)∂t(ρJω) + m(cid:62)(∂tκ) ds =

(cid:90)

L

ω(cid:62)∂t(ρJω) + (Qm)(cid:62)∂s(Qω) ds

(cid:90)

0

L

(cid:90)

0

L

0

=

=

ω(cid:62)∂t(ρJω) − (cid:0)Q(cid:62)∂s(Qm)(cid:1)(cid:62)

ω ds

ω · (ν × n) − ζω |ρJω|2

(ρJ)−1 ds

Together, the time derivative of the Hamiltonian (F.1) follows

d
dt

H(q, p) = −

(cid:90)

L

0

|p|2

ζM−1 ds ≤ 0

with damping coefﬁcients ζv, ζω > 0.

References

1. Uppalapati NK, Walt B, Havens A, Mahdian A, Chowdhary G, Krishnan G. 2020 A berry
picking robot with a hybrid soft-rigid arm: Design and task space control. Proceedings of
Robotics: Science and Systems, Corvalis, Oregon, USA p. 95.

2. Chowdhary G, Gazzola M, Krishnan G, Soman C, Lovell S. 2019 Soft robotics as an enabling

technology for agroforestry practice and research. Sustainability 11, 6751.

3. Laschi C, Cianchetti M, Mazzolai B, Margheri L, Follador M, Dario P. 2012 Soft robot arm

inspired by the octopus. Advanced robotics 26, 709–727.

4. Cianchetti M, Laschi C, Menciassi A, Dario P. 2018 Biomedical applications of soft robotics.

Nature Reviews Materials 3, 143–153.

5. Wang H, Zhang R, Chen W, Wang X, Pfeifer R. 2017 A cable-driven soft robot surgical system
for cardiothoracic endoscopic surgery: preclinical tests in animals. Surgical endoscopy 31, 3152–
3158.

6. Runciman M, Darzi A, Mylonas GP. 2019 Soft robotics in minimally invasive surgery. Soft

robotics 6, 423–443.

7. Li T, Nakajima K, Calisti M, Laschi C, Pfeifer R. 2012 Octopus-inspired sensorimotor control
of a multi-arm soft robot. In 2012 IEEE International Conference on Mechatronics and Automation
pp. 948–955. IEEE.

8. Cianchetti M, Calisti M, Margheri L, Kuba M, Laschi C. 2015 Bioinspired locomotion and
grasping in water: the soft eight-arm OCTOPUS robot. Bioinspiration & biomimetics 10, 035003.
9. Grissom MD, Chitrakaran V, Dienno D, Csencits M, Pritts M, Jones B, McMahan W, Dawson D,
Rahn C, Walker I. 2006 Design and experimental testing of the octarm soft robot manipulator.
In Unmanned systems technology VIII vol. 6230 pp. 491–500. SPIE.

10. Wu Q, Yang X, Wu Y, Zhou Z, Wang J, Zhang B, Luo Y, Chepinskiy SA, Zhilenkov AA.
2021 A novel underwater bipedal walking soft robot bio-inspired by the coconut octopus.
Bioinspiration & Biomimetics 16, 046007.

11. Levy G, Nesher N, Zullo L, Hochner B. 2017 Motor control in soft-bodied animals: the octopus.

In The Oxford Handbook of Invertebrate Neurobiology.

12. Kennedy EL, Buresch KC, Boinapally P, Hanlon RT. 2020 Octopus arms exhibit exceptional

ﬂexibility. Scientiﬁc reports 10, 1–10.

13. Kier WM. 1982 The functional morphology of the musculature of squid (Loliginidae) arms

and tentacles. Journal of Morphology 172, 179–192.

14. Kier WM, Stella MP. 2007 The arrangement and function of octopus arm musculature and

connective tissue. Journal of Morphology 268, 831–843.

15. Feinstein N, Nesher N, Hochner B. 2011 Functional morphology of the neuromuscular system

of the Octopus vulgaris arm. Vie et milieu (1980) 61, 219–229.

16. Kier WM. 2016 The musculature of coleoid cephalopod arms and tentacles. Frontiers in cell and

developmental biology 4, 10.

17. Antman SS. 1995 Nonlinear Problems of Elasticity. Springer.
18. Gazzola M, Dudte L, McCormick A, Mahadevan L. 2018 Forward and inverse problems in the

mechanics of soft ﬁlaments. Royal Society Open Science 5, 171628.

26

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

19. Kier WM, Curtin NA. 2002 Fast muscle in squid (Loligo pealei): contractile properties of a

specialized muscle ﬁbre type. Journal of Experimental Biology 205, 1907–1916.

20. Hill AV. 1938 The heat of shortening and the dynamic constants of muscle. Proceedings of the

Royal Society of London. Series B-Biological Sciences 126, 136–195.

21. Winter DA. 2009 Biomechanics and motor control of human movement. John Wiley & Sons.
22. Fung Yc. 1996 Biomechanics: mechanical properties of living tissues. Springer Science & Business

Media.

23. Yekutieli Y, Sagiv-Zohar R, Aharonov R, Engel Y, Hochner B, Flash T. 2005 Dynamic model of
the octopus arm. I. Biomechanics of the octopus reaching movement. Journal of neurophysiology
94, 1443–1458.

24. Kang R, Branson DT, Guglielmino E, Caldwell DG. 2012 Dynamic modeling and control of an
octopus inspired multiple continuum arm robot. Computers & Mathematics with Applications
64, 1004–1016.

25. Takegaki M, Arimoto S. 1981 A new feedback method for dynamic control of manipulators.

Journal of Dynamic Systems, Measurement, and Control 103, 119–125.

26. van der Schaft A. 2000 L2-gain and passivity techniques in nonlinear control. Springer.
27. Ortega R, Van Der Schaft AJ, Mareels I, Maschke B. 2001 Putting energy back in control. IEEE

Control Systems Magazine 21, 18–33.

28. Mirvakili SM, Hunter IW. 2018 Artiﬁcial muscles: Mechanisms, applications, and challenges.

Advanced Materials 30, 1704407.

29. Xiao YY, Jiang ZC, Tong X, Zhao Y. 2019 Biomimetic locomotion of electrically powered

“Janus” soft robots using a liquid crystal polymer. Advanced Materials 31, 1903452.

30. Singh G, Krishnan G. 2017 A constrained maximization formulation to analyze deformation

of ﬁber reinforced elastomeric actuators. Smart Materials and Structures 26, 065024.

31. Singh G, Krishnan G. 2020 Designing ﬁber-reinforced soft actuators for planar curvilinear

shape matching. Soft robotics 7, 109–121.

32. Zhang X, Chan FK, Parthasarathy T, Gazzola M. 2019 Modeling and simulation of complex

dynamic musculoskeletal architectures. Nature Communications 10, 1–12.

33. Holm JK, Spong MW. 2008 Kinetic energy shaping for gait regulation of underactuated bipeds.

In 2008 IEEE international conference on control applications pp. 1232–1238. IEEE.

34. Lin J, Lv G, Gregg RD. 2019 Contact-invariant total energy shaping control for powered

exoskeletons. In 2019 American Control Conference (ACC) pp. 664–670. IEEE.

35. Godage IS, Wang Y, Walker ID. 2014 Energy based control of compass gait soft limbed bipeds.
In 2014 IEEE/RSJ International Conference on Intelligent Robots and Systems pp. 4057–4064. IEEE.
36. Gandhi PS, Borja P, Ortega R. 2016 Energy shaping control of an inverted ﬂexible pendulum

ﬁxed to a cart. Control Engineering Practice 56, 27–36.

37. Borja P, Dabiri A, Della Santina C. 2022 Energy-based shape regulation of soft robots with
unactuated dynamics dominated by elasticity. In 2022 IEEE 5th International Conference on Soft
Robotics (RoboSoft) pp. 396–402. IEEE.

38. Franco E, Garriga-Casanovas A. 2021 Energy-shaping control of soft continuum manipulators

with in-plane disturbances. The International Journal of Robotics Research 40, 236–255.

39. Keppler M, Ott C, Albu-Schäffer A. 2022 From underactuation to quasi-full actuation: Aiming
at a unifying control framework for articulated soft robots. International Journal of Robust and
Nonlinear Control.

40. Bretl T, McCarthy Z. 2014 Quasi-static manipulation of a Kirchhoff elastic rod based on a
geometric analysis of equilibrium conﬁgurations. The International Journal of Robotics Research
33, 48–68.

41. Till J, Rucker DC. 2017 Elastic stability of Cosserat rods and parallel continuum robots. IEEE

Transactions on Robotics 33, 718–733.

42. Chang HS, Halder U, Shih CH, Tekinalp A, Parthasarathy T, Gribkova E, Chowdhary G,
Gillette R, Gazzola M, Mehta PG. 2020 Energy shaping control of a cyberoctopus soft arm.
In 2020 59th IEEE Conference on Decision and Control (CDC) pp. 3913–3920. IEEE.

43. Chang HS, Halder U, Gribkova E, Tekinalp A, Naughton N, Gazzola M, Mehta PG.
2021 Controlling a CyberOctopus Soft Arm with Muscle-like Actuation. In 2021 60th IEEE
Conference on Decision and Control (CDC) pp. 1383–1390.

44. Wang T, Halder U, Chang HS, Gazzola M, Mehta PG. 2021 Optimal control of a soft

cyberoctopus arm. In 2021 American Control Conference (ACC) pp. 4757–4764. IEEE.

45. Wang T, Halder U, Gribkova E, Gazzola M, Mehta PG. 2022a Control-oriented Modeling of
Bend Propagation in an Octopus Arm. In 2022 American Control Conference (ACC) pp. 1359–
1366. IEEE.

46. Wang T, Halder U, Gribkova E, Gillette R, Gazzola M, Mehta PG. 2022b A Sensory Feedback

Control Law for Octopus Arm Movements. arXiv preprint arXiv:2204.00717.

27

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

47. Audu M, Davy D. 1985 The inﬂuence of muscle model complexity in musculoskeletal motion

modeling. .

48. Zullo L, Di Clemente A, Maiole F. 2022 How octopus arm muscle contractile properties and
anatomical organization contribute to arm functional specialization. Journal of Experimental
Biology 225, jeb243163.

49. Rashad R, Califano F, Stramigioli S. 2019 Port-hamiltonian passivity-based control on se (3) of
a fully actuated uav for aerial physical interaction near-hovering. IEEE Robotics and automation
letters 4, 4378–4385.

50. Van der Schaft AJ, Maschke BM. 2013 Port-Hamiltonian systems on graphs. SIAM Journal on

Control and Optimization 51, 906–937.

51. Bloch AM, Leonard NE, Marsden JE. 2000 Controlled Lagrangians and the stabilization of
mechanical systems. I. The ﬁrst matching theorem. IEEE Transactions on automatic control 45,
2253–2270.

52. Blankenstein G, Ortega R, Van Der Schaft AJ. 2002 The matching conditions of controlled
Lagrangians and IDA-passivity based control. International Journal of Control 75, 645–665.
53. Ortega R, Spong MW, Gómez-Estern F, Blankenstein G. 2002a Stabilization of a class
of underactuated mechanical systems via interconnection and damping assignment. IEEE
transactions on automatic control 47, 1218–1233.

54. Ortega R, Van Der Schaft A, Maschke B, Escobar G. 2002b Interconnection and damping
assignment passivity-based control of port-controlled Hamiltonian systems. Automatica 38,
585–596.

55. Auckly D, Kapitanski L, White W. 2000 Control of nonlinear underactuated systems.

Communications on Pure and Applied Mathematics 53, 354–369.

56. Gomez-Estern F, Ortega R, Rubio FR, Aracil J. 2001 Stabilization of a class of underactuated
mechanical systems via total energy shaping. In Proceedings of the 40th IEEE Conference on
Decision and Control (Cat. No. 01CH37228) vol. 2 pp. 1137–1143. IEEE.

57. Colson B, Marcotte P, Savard G. 2007 An overview of bilevel optimization. Annals of operations

research 153, 235–256.

58. Outrata J, Kocvara M, Zowe J. 2013 Nonsmooth approach to optimization problems with equilibrium
constraints: theory, applications and numerical results vol. 28. Springer Science & Business Media.
59. Pontryagin LS, Boltyanskiy VG, Gamkrelidze RV, Mishchenko EF. 1962 Mathematical theory of

optimal processes. Interscience.

60. Liberzon D. 2011 Calculus of variations and optimal control theory: a concise introduction. Princeton

university press.

61. Brockett R. 1973 Lie theory and control systems deﬁned on spheres. SIAM Journal on Applied

Mathematics 25, 213–225.

62. Justh EW, Krishnaprasad P. 2015 Enlargement, Geodesics, and Collectives. In International

Conference on Geometric Science of Information pp. 558–565. Springer.

63. McAsey M, Mou L, Han W. 2012 Convergence of the forward-backward sweep method in

optimal control. Computational Optimization and Applications 53, 207–226.

64. Walker JA. 1980 Dynamical systems and evolution equations: theory and applications vol. 20.

Springer Science & Business Media.

65. Slemrod M. 1988 The LaSalle invariance principle in inﬁnite-dimensional Hilbert space.
Dynamical systems approaches to nonlinear problems in systems and circuits (Henniker, NH, 1986)
pp. 53–59.

66. Maschke B, Ortega R, Van Der Schaft AJ. 2000 Energy-based Lyapunov functions for forced
Hamiltonian systems with dissipation. IEEE Transactions on automatic control 45, 1498–1502.
67. Gutfreund Y, Flash T, Fiorito G, Hochner B. 1998 Patterns of arm muscle activation involved

in octopus reaching movements. Journal of Neuroscience 18, 5976–5987.

68. Sumbre G, Gutfreund Y, Fiorito G, Flash T, Hochner B. 2001 Control of octopus arm extension

by a peripheral motor program. Science 293, 1845–1848.

69. Naughton N, Sun J, Tekinalp A, Parthasarathy T, Chowdhary G, Gazzola M. 2021 Elastica:
A compliant mechanics environment for soft robotic control. IEEE Robotics and Automation
Letters.

70. Chase R, Wells M. 1986 Chemotactic behaviour inOctopus. Journal of Comparative Physiology A

158, 375–381.

71. Wells M. 1963 Taste by touch: some experiments with Octopus. Journal of Experimental Biology

40, 187–193.

72. Mather JA. 1998 How do octopuses use their arms?. Journal of Comparative Psychology 112, 306.
73. Grasso FW. 2008 Octopus sucker-arm coordination in grasping and manipulation. American

Malacological Bulletin 24, 13–23.

28

l

r
s
p
a
.
r
o
y
a
s
o
c
e
t
y
p
u
b

i

l
i

i

s
h
n
g
.
o
r
g

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

P
r
o
c
R
S
o
c
A
0
0
0
0
0
0
0

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

