2
2
0
2

n
u
J

7
1

]
h
p
-
t
n
a
u
q
[

1
v
0
9
4
8
0
.
6
0
2
2
:
v
i
X
r
a

Improved coherent one-way quantum key distribution for high-loss channels

Emilien Lavie1, ∗ and Charles C.-W. Lim1
1Department of Electrical & Computer Engineering, National University of Singapore, Singapore
(Dated: June 20, 2022)

The coherent one-way (COW) quantum key distribution (QKD) is a highly practical quantum
communication protocol that is currently deployed in oﬀ-the-shelves products. However, despite
its simplicity and widespread use, the security of COW-QKD is still an open problem. This is
largely due to its unique security feature based on inter-signal phase distribution, which makes it
very diﬃcult to analyze using standard security proof techniques. Here, to overcome this problem,
we present a simple variant of COW-QKD and prove its security in the inﬁnite-key limit. The
proposed modiﬁcations only involve an additional vacuum tail signal following every encoded signal
and a balanced beam-splitter for passive measurement basis choice. Remarkably, the resulting key
rate of our protocol is comparable with both the existing upper-bound on COW-QKD key rate
and the secure key rate of the coherent-state BB84 protocol. Our ﬁndings therefore suggest that
the secured deployment of COW-QKD systems in high loss optical networks is indeed feasible with
minimal adaptations applied to its hardware and software.

I.

INTRODUCTION

Quantum key distribution (QKD) is a promising ap-
plication of quantum communications where two users,
Alice and Bob, exchange quantum signals to establish a
common secret key [1, 2]. The original ideas of QKD
were ﬁrst presented using the transmission of single pho-
ton states [3], but the ﬁeld has since evolved to include
more practical communication systems based on coher-
ent states. One prime example is the coherent one-way
(COW)-QKD protocol [4], which uses a sequence of ran-
domly modulated coherent states with ﬁxed reference
phase to distribute the secret key. In this protocol, each
secret bit is encoded into the time-of-arrival of a sin-
gle light pulse and security is evaluated by checking the
optical coherence of consecutive light pulses. The basic
idea is to check if the optical coherence between consecu-
tive light pulses has been disturbed—indeed, if an eaves-
dropper tries to measure the position of light pulse and
learn the secret bit, the optical coherence between adja-
cent non-vacuum light pulses will be broken. This secu-
rity feature was originally designed to deter the so-called
photon-number-splitting (PNS) attack, which raised se-
rious security concerns when it was ﬁrst discovered in
2001 [5].

However, the idea of using inter-signal correlation to
detect PNS attacks creates a new problem. In particular,
it puts the protocol in an unorthodox situation involving
the analysis of sequential trains of pulses, which is fun-
damentally diﬀerent from the standard setting based on
repeated rounds of quantum communications [2]. Con-
sequently, none of the QKD proof techniques developed
to date can be applied to COW-QKD. In fact, at the
moment, the general security of COW-QKD remains an
open problem.

That said, signiﬁcant progress has been made towards

∗ emilien.lavie@u.nus.edu

demystifying the security of COW-QKD. Initially, upper
bounds on the achievable secret key rate were derived
using speciﬁc class of collective attacks, which suggested
a secret key rate that is linear in the channel transmit-
tance [6, 7]. However, recent studies found tighter up-
per bounds which feature quadratic scaling [8, 9]. These
results are signiﬁcant because they indicate that COW-
QKD may not be suitable for ultra-long-distance QKD,
which are similar to what Ref [10] have found based on
unambiguous state discrimination (USD) attacks assum-
ing zero-error statistics. While these upper bounds pro-
vide a clear idea of what COW-QKD could theoretically
achieve with lossy channels, it is not obvious if lower
bounds with quadratic scaling could be obtained. We
note that certain variants of COW-QKD have achieved
quadratic scaling with more sophisticated optical re-
ceivers based on active switching [11, 12], but these in-
crease the complexity of the implementation. To better
illustrate the current security status of COW-QKD, we
plotted some of the known upper and lower bounds in
Fig. 1 assuming zero error statistics.

In this work, we show that COW-QKD can reach
quadratic scaling—close to the bound established in
Ref. [9] with only a slight modiﬁcation of the original pro-
tocol. In particular, the proposed protocol is the same
as the original protocol, except for (1) an additional vac-
uum tail signal that is needed to keep the protocol in the
standard (iid) setting and (2) a balanced beam-splitter is
used to decide passively the measurement basis. To anal-
yse the security of the protocol which is based on practi-
cal photon-counting detectors, we use a generalised form
of universal squashing to map the Hilbert space of the
detectors to a two-dimensional Hilbert space [16]. Then,
we calculate the achievable secret key rate using the stan-
dard Shor-Preskill formalism for qubit channels by opti-
mising the phase error rate given the expected channel
statistics [11].

The rest of the paper is organised as follows. In Sec-
tion II we ﬁrst provide a detailed model of the proto-
col implementation (II A). Then, in Section II B we show

 
 
 
 
 
 
100

10−2

e
t
a
r

y
e
K

10−4

10−6

10−8

0

Zero error

2

Secret Key Capacity [13]
Sequential attack [9]
Coherent states BB84 [14]
COW+vacuum [15]

Active switch [12], β =

This paper, β =

α
2

α
2

Active switch [12], β = α
This paper, β = α

5

10

15

20

25

Loss (dB)

FIG. 1. We compare existing results on the asymptotic security of coherent one-way type protocols. For the sake of comparison,
we indicate another popular type of protocol based on phase-encoded coherent states [14]. Ref. [13] is a fundamental upper
limit for point-to-point communication. Ref. [9] is a recent result providing an upper bound that scales only quadratically with
the channel transmittance. Ref. [12] provides a lower bound on the secret key rate for a modiﬁed version of the protocol using
an active switch instead of a passive interferometer and an optimised intensity for the test state |β(cid:105) |β(cid:105). The protocol in this
paper is using a passive interferometer for Bob as in the original design, and prepared states similar to Ref. [12] with an extra
vacuum pulse sent by Alice. See more details in Section II. We also analyse the performance of one of the countermeasures
proposed in Ref. [15] using a fourth state composed of vacuum pulses only.

how to use the universal squashing framework to estimate
the statistics of a virtual single-photon protocol based on
the expected statistics of the actual protocol. We con-
clude the security analysis in Section II C where we use
a numerical method to estimate a lower bound on the
secure key rate of the single-photon protocol. Finally, we
present simulated results and discuss their relevance in
Section III.

II. METHOD

A. Modeling

The protocol we consider here is based on the prepara-
tion and measurement of coherent states in three consec-
utive temporal modes labeled c0, c1 and c2. The global
phase information of the laser used to prepare the states
is public and known to the adversary. Any other degree
of freedom is assumed to be random and do not carry
any useful information about the random inputs. Here,
the transmitter, Alice, prepares and sends the state |ϕi(cid:105)

with probability pi chosen from a predeﬁned set:






|ϕ0(cid:105) = |α(cid:105)c0
|ϕ1(cid:105) = |vac(cid:105)c0
|ϕ2(cid:105) = |β(cid:105)c0

|vac(cid:105)c1
|α(cid:105)c1

|vac(cid:105)c2
|vac(cid:105)c2
.

|β(cid:105)c1

|vac(cid:105)c2

,
,

(1)

Note that Alice always sets the third temporal mode c2
to the vacuum state and this is needed to ensure the
protocol can be treated in the standard quantum com-
munication setting.

The receiver, Bob, performs decoding measurement us-
ing a passive basis choice setup, which is implemented
using a balanced beam-splitter leading to two possible
detection lines. The ﬁrst line is a direct time-of-arrival
detection line (key basis labeled Z): a threshold detector
measures the presence or absence of photons in each tem-
poral mode. The second line is a monitoring line (test
basis labeled X ): a Mach-Zender interferometer that in-
terferes consecutive pulses to check for good optical co-
herence.

Bob’s monitoring line is such that only the middle tem-
poral mode c1 arriving on the detectors will contain rel-
evant (conclusive) information. The ﬁrst temporal mode
contains only one half of the ﬁrst pulse sent by Alice that

3

Additionally, we deﬁne 9 modes corresponding to the

combination of the spatial and temporal modes.

d0 = (a0, c0) d3 = (a0, c1) d6 = (a0, c2)
d1 = (b0, c0) d4 = (b0, c1) d7 = (b0, c2)
d2 = (b1, c0) d5 = (b1, c1) d8 = (b1, c2)

(2)

We use here the notation (a0, c0) to represent the spatial-
temporal mode of the direct line a0 during the ﬁrst time
detection window c0 and similarly for the others. We use
this notation to avoid confusion later when we use the
Indeed,
creation/annihilation operators for the modes.
populating one photon in mode d0 is eﬀectively consid-
ering d†
which is very diﬀerent from the
product a†
0c†
(one photon in
each mode).

0 |vac(cid:105) = |1(cid:105)d0
0 |vac(cid:105)a0

= |1(cid:105)a0

|vac(cid:105)c0

|1(cid:105)c0

Alice only has access to the spatial mode a0 which is
the physical channel (e.g. optical ﬁber or free space) over
which she is sending the train of coherent states. The
two spatial modes b0, b1 come from the empty ports of
Bob’s beamsplitters: one for the basis choice, one for the
ﬁrst beamsplitter in the interferometer. Alice (and Eve)
have no access to these and they can only aﬀect modes
d0, d3, d6 instead. We rephrase Alice’s prepared states:






|ϕ0(cid:105) = |α(cid:105)d0
|ϕ1(cid:105) = |vac(cid:105)d0
|ϕ2(cid:105) = |β(cid:105)d0

|vac(cid:105)d3
|α(cid:105)d3

|vac(cid:105)d6
|vac(cid:105)d6

(3)

|β(cid:105)d3

|vac(cid:105)d6

We assume all the other unspeciﬁed modes are trusted
and populated with vacuum states.

Let us now analyse Bob’s measurement apparatus.
The beamsplitters are operating on two spatial modes
at each time-window. We ﬁnd for the basis choice beam-
splitter:

∀c,

(cid:19)

(cid:18)(a0, c)
(b0, c)

−→

(cid:32)

( a0+b0√
2
( a0−b0√
2

(cid:33)

, c)
, c)

(4)

and similarly for the others.
The delay line can be seen as a shift between the tem-
poral modes: the ﬁrst temporal mode becomes the sec-
ond, the second temporal mode becomes the third. The
third temporal mode is actually never populated by Alice
or Bob and it is simply an artifact of the computation.
We can always assume that the delay line is eﬀectively
transforming it into the ﬁrst temporal mode. All in all
we have for the only spatial mode that is delayed:







(b0, c0)
(b0, c1)
(b0, c2)

 −→









(b0, c1)
(b0, c2)
(b0, c0)

(5)

The other modes remain unchanged.

We represent the overall transformation performed by
Bob on the input state (before the detectors) with the
circuit in Fig. 3. It is easy to check that this circuit is

|vac(cid:105)c1
|vac(cid:105)c0
|β(cid:105)c0

FIG. 2. Protocol setup. Alice is preparing three diﬀerent
sequences of coherent states in temporal modes c0, c1, c2:
|α(cid:105)c0
the sequence |vac(cid:105)c2
is representing bit 0, the se-
is representing bit 1 and the se-
|α(cid:105)c1
quence |vac(cid:105)c2
quence |vac(cid:105)c2
is used to test the channel. The last
|β(cid:105)c1
temporal mode c2 is always set to vacuum by Alice to ensure
the symmetry of the protocol. Bob is using a beamsplitter
to passively choose between a direct line and a monitoring
line composed of a Mach-Zender interferometer. Here, the
coherence is only monitored between temporal modes c0 and
c1 within the same train of pulses, and any coherence with
another train is ignored. This is to guarantee a symmetry
between the rounds of the protocol and ensure that an opti-
mal collective attack is also an optimal coherent attack [17].
There are two minor diﬀerences with the original setup pre-
sented in Ref. [4]: an additional vacuum state is enforced at
the end of each train, and we allow a lower intensity β ≤ α
for the test state |ϕ2(cid:105).

did not interfere with anything (since there is no resid-
ual light in the interferometer initially), and the third
temporal mode contains half of the middle pulse sent by
Alice. Therefore, the conclusive rate in the monitoring
line is only half of the one in the direct line. The overall
setup is presented in Fig. 2.

There are a two minor diﬀerences from the original
COW protocol [4]. First, the use of a vacuum state at
the end of each sequence breaks the coherence between
two trains of pulses. Therefore it is only possible to mon-
itor the coherence within a single train of pulses. In the
original setup, the coherence between any two non-empty
subsequent pulses is monitored. This additional vacuum
state makes the security analysis simpler since now an op-
timal collective attack is also an optimal coherent attack
by virtue of symmetries [17]. Second, we allow the pos-
sibility to use a lower intensity for the test sequence |ϕ2(cid:105)
similar to Ref. [12]. We expect that these modiﬁcations
only require minor changes to the original design: only
an additional intensity level is used at the transmitter
and no additional phase modulator is required.

Now we provide a more detailed notation to describe
the transmitter and the receiver. We label the spatial
mode corresponding to the only detector arm in the di-
rect line a0 and the two spatial modes corresponding to
the two detector arms in the monitoring line b0, b1 (see
in Fig. 2).

AliceBobLaserIM(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)

Outcome

Basis

∅
0
1
⊥
d

4

Z

X

(N0N1 . . . N8)
C0
C3
C6

(N0N1 . . . N8)
C4
C5
C1; C2; C7; C8

At least two in Z At least two in X

TABLE I. Mapping the detection pattern to basis value and
outcome value. If no detector clicked, then the basis is chosen
randomly. Any event containing at least one click C0, C3
or C6 contributes to a measurement in basis Z while any
event containing at least one click C1, C2, C4, C5, C7, or C8
contributes to a measurement in basis X .
If the detection
event contains clicks from the two bases, then the conﬂict is
resolved by choosing one basis or the other at random and
ignoring all the detector clicks from the other basis.
If at
least two diﬀerent clicks from the same basis occurred, then
we assign the special symbol “d” representing a double click.

B. Universal squashing

In the previous subsection, we modeled the receiver
and deﬁned a few relevant outcomes. Here, we show how
to deal with the double clicks to derive the statistics of
a virtual single photon protocol whose security will be
analysed in the next subsection.

We rely on a generalisation of the universal squashing
result ﬁrst proposed in Ref. [16]. The method proposed in
that paper comprises two steps: an equivalence theorem
stating that two virtual situations are equivalent and an
estimation technique to compute the statistics of one of
the two virtual situations using the statistics of the actual
protocol.

First, the equivalence theorem (Theorem 1) states that
under certain assumptions, the following two situations
are equivalent. In Situation 1, Bob is receiving a n pho-
ton single mode input state and only keeps one photon.
The single photon evolves through the unitary operation
describing the receiver and is measured in only one out-
put arm j using a threshold detector. In Situation 2, Bob
keeps all n photons to interfere through the unitary op-
eration describing the receiver and measures the number
of photons in each output arm (let it be lj for the arm la-
belled j) with a photon-number resolving detector. Bob
ﬁnally outputs the outcome j with probability lj
n .

Then, the estimation technique tries to estimate the
statistics of Situation 2. The general method is simple:
if only one detector clicked in the real protocol, then there
were one or more photons in that particular arm and the
same outcome would have been announced in Situation
2. If multiple detectors clicked in the real protocol (dou-
ble click), then there is no way to resolve the conﬂict as
any outcome could have been announced in Situation 2.
Therefore, the probability of each outcome in Situation
2 is bounded by the statistics of the real protocol: it is
lower bounded by the single click probability and upper
bounded by the sum of single click and double click prob-
abilities ; the lower the double click rate, the tighter the

FIG. 3. Equivalent circuit for the measurement setup with

. The ﬁrst row of H matrices corresponds to

H = 1√
2

(cid:19)

(cid:18)1

1
1 −1

the passive basis choice. The wires corresponding to Z basis
modes are directly connected to the detectors. The others go
through another row of H matrices for the ﬁrst beamsplitter
of the interferometer, then shift of the temporal modes due to
the delay line and another row of H matrices for the second
beamsplitter. This circuit is deﬁning U † which is used to
construct Bob’s POVM.

representing a unitary transformation U †, since its in-
verse is given by the reverse circuit.

Finally, we describe Bob’s POVM. We assume here
that the threshold detectors are ideal (no dark counts
and 100% eﬃciency), i.e. each detector will click (event
denoted by “C”) if and only if there is one photon or
more in the associated mode. The complementary event
is labelled “N”. The operators describing the threshold
detector in mode j are:






πNj = |vac(cid:105)(cid:104)vac|dj
πCj = (cid:80)
|n(cid:105)(cid:104)n|dj

n≥1

Then the overall POVM is given by:

(cid:40)

ΠNj = U †πNj U
ΠCj = U †πCj U

(6)

(7)

Here, there are 29 possible detection events corre-
sponding to any combination of the detectors clicking
or not clicking; we represent them using strings of C and
N of length 9. We further classify these events by as-
signing a basis value and an outcome value to each event
according to the rules in Table I.

The outcome ⊥ represents an event that carries no
relevant information; we call it an inconclusive outcome,
not to be confused with a no-click outcome ∅. For a given
input state, it is required that the clicking probabilities
in each basis are equal, but the conclusive probabilities in
each basis might be diﬀerent. This is the case here since
the inconclusive probability in basis Z is essentially 0
but in the basis X , half of the total clicking probability
is actually inconclusive due to the interference of only
half of the signal in the middle temporal mode. This can
also be understood as a basis dependent trusted erasure
channel operating after a basis independent ﬁlter.

HHHHHHHHHbounds.

In our paper, we will use the estimation technique ex-

actly as proposed in Ref. [16].

However, our considered application is bringing two
issues that we need to consider in order to properly apply
the equivalence theorem. First, the theorem was stated
and proved in the single mode case only. In the protocol
under consideration here, Alice has to prepare non-trivial
states over several modes (e.g. |ϕ2(cid:105) = |β(cid:105)d0
).
Second, the theorem holds for any states having a ﬁxed
number of photons.
It is straightforward to generalise
to any classical mixture of photon-number states, but
here we use coherent states that have coherence between
diﬀerent photon number states and it is not clear if the
theorem still holds.

|vac(cid:105)d6

|β(cid:105)d3

We addressed the ﬁrst concern with a generalisation
of the equivalence theorem in the multi mode case and
the second one with an additional argument based on a
virtual photon number measurement. More details are
provided in Appendix A.

With this generalised result, we are able to upper and
lower bound the statistics of a virtual single-photon pro-
tocol after the statistics of the actual implementation us-
ing the universal squashing framework. While the main
application here is QKD, the universal squashing frame-
work is a general quantum optics result that could have
other applications in single photon Quantum Information
Processing. For instance, Ref. [16] proposed applications
to qubit state tomography.

C. Security analysis

The point of this subsection is to provide a lower bound
on the asymptotic key rate of the protocol we described in
Subsection II A. Here, we restrict the analysis to a qubit
protocol since we obtained qubit statistics (or rather up-
per and lower bounds on them) in the previous subsection
II B.

We choose to use numerical methods to estimate the
information leakage to the adversary since they are very
practical and often provide better results than analytical
methods. In our case, it is possible to use the method
proposed either in Ref. [18] or in Ref. [11]. Both rely on
convex optimisation techniques [19] and we ﬁnd that both
are giving similar results, the latter being substantially
faster though. The main diﬀerence lies in the objective
function: Ref. [18] is minimising the quantum relative en-
tropy which is a convex non-linear function while Ref. [11]
is maximising the phase error rate which is linear.

We consider here the phase error method of Ref. [11]
for the simulation and we indicate below the main steps
to implement it.

We use the entanglement replacement scheme for the
transmitter, so instead of preparing the state |ϕi(cid:105) with
probability pi, Alice is preparing the bipartite state:
(cid:88)

√

|ψ(cid:105)AA(cid:48) =

pi |i(cid:105)A |ϕi(cid:105)A(cid:48)

(8)

i

5

She sends the system A(cid:48) over the channel to Bob and
measures the other half A (qutrit) in the computational
basis { |i(cid:105)(cid:104)i|A }. Alice records her outcome value in a reg-
ister ¯A and her basis choice (announcement) in a classical
register ˜A according to Table II.

Alice’s partial state ρA is characterised by the overlap
of the prepared states and by the preparation probabili-
ties:

ρA = TrA(cid:48)

(cid:0)|ψ(cid:105)(cid:104)ψ|AA(cid:48)

(cid:1) = (cid:2)√

pipj (cid:104)ϕj|ϕi(cid:105) (cid:3)

ij

(9)

The information about this state is included in the pro-
gramme by considering that Alice could perform a to-
mography of her partial state. There are 4 Mutually-
Unbiased-Bases in dimension 3 and we include the statis-
tics of each of these operators.

For the receiver, while we could in principle write down
the whole unitary (in dimension 9), we choose to simplify
it to dimension 3 instead to speedup the programme.
We consider an active measurement instead, so that only
either the direct line or the monitoring line is operating
at once on a small dimension system. As in Ref. [18],
we consider that Bob is manipulating a qutrit where the
ﬁrst two dimensions correspond to a qubit and the third
dimension represents the no-click outcome ∅. We ﬁnd
that Bob’s measurement operators are:



ΠB

Z,0 =




 ΠB

Z,1 =

1
2 0 0
0 0 0
0 0 0





0 0 0
0 1
2 0
0 0 0







ΠB

Z,⊥ =





ΠB

X ,0 =





ΠB

X ,⊥ =



0 0 0
0 0 0
0 0 0

1
1
8 0
8
1
1
8 0
8
0 0 0

1
4 0 0
0 1
4 0
0 0 0


 ΠB

Z,∅ =








 ΠB

X ,1 =







0 0 0
0 0 0
0 0 1
2
1
8 − 1
− 1
8
0



8 0
1
0

8
0
0


 ΠB

X ,∅ =









0 0 0
0 0 0
0 0 1
2

(10)

After performing a measurement in either of the bases,
Bob will register an announcement value in a classical
register ˜B and an outcome value in a register ¯B. Here
the classical register ˜B corresponds to the public an-
nouncement Bob will make about his results, but it is
not equivalent to a typical basis choice. The announce-
ment is diﬀerent for no-click, conclusive (including basis
choice) or inconclusive outcomes. Bob will register his
outcome value and announcement value according to Ta-
ble II.

We only consider the announcements (˜a = 0, ˜b = 0) for
key generation and we use a few more operators to deﬁne

(11)

(12)

(cid:64)
˜a
(cid:64)(cid:64)¯a
0
1

0

1

|ϕ2(cid:105)

|ϕ0(cid:105)
|ϕ1(cid:105) Not used

˜b
(cid:64)
(cid:64)(cid:64)¯b
0
1

0

1

2

3

0Z 0X ∅Z ⊥Z
1Z 1X ∅X ⊥X

TABLE II. Announcement and outcome value map for Alice
and Bob

certain errors and detection probabilities:

(|0(cid:105)(cid:104)0|A + |1(cid:105)(cid:104)1|A) ⊗ (ΠB
Πdet,Z =
|2(cid:105)(cid:104)2|A ⊗ (ΠB
Πdet,X =
Πdet, phase = (cid:0)|+(cid:105)(cid:104)+|A + |−(cid:105)(cid:104)−|A

Z,1)

Z,0 + ΠB
X ,0 + ΠB
X ,1)
(cid:1) ⊗ (cid:0)ΠB
X ,0 + ΠB
Z,1 + |1(cid:105)(cid:104)1|A ⊗ ΠB
Z,0
X ,1
X ,1 + |−(cid:105)(cid:104)−|A ⊗ ΠB

X ,0

X ,1

|2(cid:105)(cid:104)2|A ⊗ ΠB

(cid:1)

ΠeZ =
ΠeX =
Πephase =

|0(cid:105)(cid:104)0|A ⊗ ΠB

|+(cid:105)(cid:104)+|A ⊗ ΠB
(cid:0) |0(cid:105)A ± |1(cid:105)A

(cid:1).

where |±(cid:105)A = 1√
2

Then it is easy to deﬁne:

pdet,Z =
pdet,X =
pdet, phase =
eZ =
eX =
ephase =

Tr(ρAB · Πdet,Z )
Tr(ρAB · Πdet,X )
Tr(ρAB · Πdet, phase)
Tr(ρAB · ΠeZ )
Tr(ρAB · ΠeX )
Tr(ρAB · Πephase )

1
pdet,Z
1
pdet,X
1
pdet, phase

We note that the bit error in the basis X is related to

the usual visibility parameter V with the relation

V = 1 − 2eX

(13)

Finally, the optimisation problem can be cast as a

Semi-Deﬁnite Programme (SDP):

max
s. t.

ephase
k ≤ Tr(ρABΠk) ≤ p↑
p↓
ρAB (cid:23) 0

k

(14)

for certain measurement operators Πk and lower and up-
per bounds p↓

k and p↑

k and the key rate is given by:
(cid:0)1 − h2(eZ ) − h2(ephase)(cid:1)

(15)

K ≥ pdet,Z

III. RESULTS AND DISCUSSION

We perform a simulation to visualise the expected per-
formance of our proposed protocol. We consider two pos-
sible values for the test intensity: β = α (same intensity
as the key states) or β = α
2 (one quarter of the inten-
sity of the key state). We choose a highly biased state
preparation where the key states are prepared most of
the time: p0 + p1 = 99%. The detectors are assumed to
have no dark counts and 100% eﬃciency.

In Fig. 1, we consider a loss-only channel, and in Fig. 4
we consider a noisy channel with a ﬁxed error rate in both
bases eZ = eX = 1%.

6

Our study reveals that both in the loss-only and in
the noisy situation, the original encoding β = α can-
not guarantee an optimal quadratic scaling, but a proper
modulation of β can achieve it. Moreover, any more
advanced security analysis involving the inter-phase in-
formation would at best only improve the performance
marginally since our results (in the loss-only situation)
lie close to the upperbound derived in Ref. [9].

We also analyse one countermeasure proposed in
Ref. [15]. If a fourth test state |vac(cid:105)c0
with
vacuum pulses only is used along with the original en-
coding β = α for the test state, a quadratic scaling is
also achievable.

|vac(cid:105)c2

|vac(cid:105)c1

Surprisingly, those two possible modiﬁcations give per-
formances that are similar to a phase-encoded BB84 im-
plementation requiring the preparation of four coherent
states with a phase modulation [14]. Thus oﬀering a vi-
able alternative with only limited modiﬁcations to the
intensity modulator and without phase modulator.

We also notice that our analysis gives results similar
to those reported in Ref. [12] with an active switch and a
basis independent ﬁlter. We think that the diﬀerence in
the low loss regime comes from the penalty caused by the
use of the universal squashing method: the double click
rate is non-negligible in the low loss regime and becomes
smaller with a higher channel loss. Hence it seems that
the performance of the protocol is preserved as long as
the inconclusive rate (i.e. the clicks in the monitoring line
outside of the middle temporal mode; which have been
enforced to be zero in Ref. [12] using active switching)
corresponds to a trusted erasure channel operating after
a basis independent ﬁlter.

IV. CONCLUSION AND OUTLOOK

We presented the security analysis of a coherent state
based quantum key distribution protocol against collec-
tive attacks in the asymptotic regime. Our approach re-
lies on the application of the universal squashing frame-
work to bound the single photon statistics, and then the
single photon security analysis is performed using numer-
ical methods. Our simulated results illustrate that our
analysis can only establish poor lower bounds on the se-
cure key rate for the original design when not using the
inter-signal phase information, but it this bound can also
signiﬁcantly be improved using minor modiﬁcations. In-
deed, we have shown that modulating the intensity of
the test state |β(cid:105) |β(cid:105) to a lower value β ≤ α, or sending
an additional test state |vac(cid:105) |vac(cid:105) can guarantee that the
key rate scales quadratically with the channel loss. Inter-
estingly, it seems that the performance of this upgraded
scheme is comparable to an other popular design based
on phase modulated coherent states [14].

Our results also highlight that the universal squash-
ing framework might have been overlooked when it was
initially proposed, while it actually has a considerable in-
terest for applications where it is challenging to obtain

100

10−2

e
t
a
r

y
e
K

10−4

10−6

10−8

0

QBER = 1%, V = 98%, pdc = 0

7

Secret Key Capacity [13]
Sequential attack [9]
Coherent states BB84 [14]
COW+vacuum [15]

Active switch [12], β =

This paper, β =

α
2

α
2

Active switch [12], β = α
This paper, β = α

5

10

15

20

25

Loss (dB)

FIG. 4. We simulate a noisy situation with a quantum bit error rate in both bases eZ = eX = 1% (or equivalently visibility
98%), and ideal threshold detectors with 100% eﬃciency and no dark counts. Two possible modiﬁcation of the original design
oﬀer performances close to another popular design based on phase-encoded coherent states [14]. It is possible either to include
an additional test state with vacuum pulses as suggested in Ref. [15] or to modulate the intensity of the test state as mentioned
in Ref. [12] to achieve a quadratic scaling.

an exact squashing model.

The security analysis in the non-asymptotic regime and

against general attacks is left to further work.

ACKNOWLEDGEMENTS

We thank Goh Koon Tong and Ignatius W. Pri-
maatmaja for valuable comments and suggestions on
The work is funded by the Na-
the manuscript.
tional Research Foundation (Singapore) Fellowship grant
(NRFF11-2019-0001) and Quantum Engineering Pro-
gramme 1.0 grant (QEP-P2).

Appendix A: Universal squashing with multimode
coherent states

We provide additional details to show that the uni-
versal squashing framework is applicable for the security
analysis of the COW protocol.

We revisit the equivalence result of Ref. [16] (Theorem
1) using a description with optical modes. They consider
a natural squashing operation that keeps only 1 photon
at random out of a pulse of n photons in a single mode.
They show that a protocol implementing this squash-

ing operation has identical statistics as one keeping all n
incoming photons, measuring the number lj of photons
in each output arm and annoucing the outcome j with
probability lj
n .

We propose a diﬀerent derivation for their result in the
single mode case in Section A 1, and then we generalise
it to the multimode case in Section A 2. Finally in Sec-
tion A 3 we discuss an additionnal argument to apply the
equivalence theorem to coherent states instead of states
with a ﬁxed number of photons.

1. Single mode case

We consider here the case in dimension 2 to keep equa-
tions short but the derivation can be extended to any
dimension d ≥ 2. We denote the measurement modes
1 and input the modes b†
0, a†
a†
1, we assume they are
related by a unitary transformation:

0, b†

0 = u0,0a†
b†
1 = u1,0a†
b†

0 + u0,1a†
0 + u1,1a†

1

1

(A1)

We assume that the input state is a population of n
photons in a single mode, say b0 for instance, i.e. the
input state is

|vac(cid:105).

(cid:0)b†

(cid:1)n

1√

n!

0

After the squashing operation, the single photon is

Deﬁnition A.1 (d-multinomial coeﬃcient).

8

found in arm j with probability |u0,j|2.

Using the other protocol instead, we ﬁnd the probabil-

ity of photons in the various arms to be:

Pr(l0, l1) =

(cid:18) n
l0, l1

(cid:19)

|u0,0|2l0|u0,1|2l1

(A2)

Let us write X0 = |u0,0|2 and X1 = |u0,1|2, then the

probability of outcome j in this protocol is:

Pr(j) =

(cid:88)

l0+l1=n

(cid:19)

(cid:18) n
lj
l0, l1
n
(cid:104)(cid:0)X0 + X1
d
dXj

X l0

0 X l1

1

(cid:1)n(cid:105)

=

1
n

Xj

(cid:1)n−1

(cid:0)X0 + X1
=Xj
=Xj = |u0,j|2

(A3)

(A4)

(A5)

(A6)

Using this approach, it is easy to see that the photon
number probability in each arm as in Eq. (A2) is natu-
rally a 0-th moment (sum to 1, i.e. normalisation) and
the classical postprocessing probability in Eq. (A3) is a
1st moment. We generalise this property to any number
of input modes in the next section.

2. Multimode case

1, . . . , b†

We show that the equivalence still holds when d modes
b†
0, b†
d−1 are populated with k0, k1, . . . , kd−1 pho-
tons, with k0 + k1 + · · · + kd−1 = n. In this case, the
outcome probability for the squashing protocol is:

Pr(j) =

d−1
(cid:88)

i=0

ki
n

|ui,j|2

The probability for the second protocol is:

Pr(j) =

(cid:88)

lj
n

1
l0!l1!k0!k1!
(cid:1)l0(cid:0)a1

(cid:1)l1(cid:0)b†

l0+l1=n
· |(cid:104)vac |(cid:0)a0

(cid:1)k0(cid:0)b†

1

(cid:1)k1| vac(cid:105)|2

0

(A7)

(A8)

The equality between Eqs. A7 and A8 is proved below
in a slightly more general case (non normalised vectors)
and follows three major steps. First we establish a few
results on combinatorics. Next we show that a particular
matrix transformation is a group homomorphism (Claim
1) and show the 0-th moment property (i.e. normalisa-
tion). Finally, we revisit the derivation of Claim 1 to
compute the ﬁrst moment instead, which gives directly
the equivalence result in the multimode case.

a. Notations

We start by deﬁning some quantities that are useful to

simplify the notations later on.

(cid:18)

n
n0, n1, . . . nd−1

(cid:19)

=

(cid:40)

n!
n0!...nd−1!

0

ni = n

if (cid:80)
i
otherwise

(A9)

Deﬁnition A.2 (Line of total weight n). A one dimen-
sion array (l0, . . . , ld−1) ∈ { 0 . . . n }d is a line of total
weight n if (cid:80)
i

li = n

We denote L(n) the ensemble of lines of total weight

n.

n,d−1

L(n) has N = (cid:0)n+d−1

(cid:1) elements, we can index its ele-
ments using an index in { 0 . . . N − 1 }. We can identify a
line with its associated index that we also label l or l(n) if
we need to specify the total weight to avoid confusion. In
the following the indices l, k are reserved for elements of
L, and we use lowerscripts to indicate the component of
the solution, e.g. l0 is the 0-th component of l(n) which
is the l-th line of total weight n in L(n) and similarly for
k.

Deﬁnition A.3 (Square of total weight n). A two di-
mension array (mij) ∈ { 0 . . . n }d2
is a square of total
weight n if (cid:80)
mij = n
ij

We denote M (n) the ensemble of squares of total
weight n. If we are given two lines k(n) and l(n), it is also
possible to construct more constrained squares where we
add the additional constraints:

∀i ∈ { 0 . . . d − 1 } ,

∀j ∈ { 0 . . . d − 1 } ,

(cid:88)

j
(cid:88)

i

mij = ki

(A10)

mij = lj

(A11)

and we denote M (k, l) the ensemble of such squares.
Similarly, we identify a square with its index in M (n)
or M (k, l) that we label again m or m(n) or m(k, l) de-
pending on the context. We also occasionally use the
following array notation to visualise the sum over rows
and columns (here in dimension 2):

m(k, l) ≡

m00 m01 k0
m10 m11 k1
n
l1
l0

(A12)

Deﬁnition A.4 (Cubes of total weight n). A three di-
mension array (pijk) ∈ { 0 . . . n }d3
is a cube of total
weight n if (cid:80)
pijk = n
ijk

We label P (n) the ensemble of cubes of total weight
n. Again, if we are given three squares m(k(n), ˜l(n)),
¯m(k(n), l(n)) and ˜m(l(n), ˜l(n)), we can constraint more

9

two non-negative integer and l(n) ∈ L(n), then:

(cid:18)

l0
k0, l0 − k0

(cid:19)(cid:18)

l1
k1, l1 − k1

(cid:19)

(cid:18)

=

(cid:19)

n
m, n − m

(A16)

(cid:88)

k(m)

Proof. We consider the expansion of (1 + X)n = (1 +
X)l0+l1. We ﬁnd:

(1 + X)n =

(1 + X)l0+l1 =

n
(cid:88)

m=0
n
(cid:88)

m=0

(cid:18)

X m

(cid:19)

n
m, n − m

X m (cid:88)

k0+k1=m

(cid:19)(cid:18)

(cid:18)

l0
k0, l0 − k1

(A17)

(cid:19)

l1
k1, l1 − k1
(A18)

Then the result follows from the identiﬁcation of the co-
eﬃcient in X m.

Lemma 2. Let n be any non-negative integer, k, l ∈
L(n), then:

(cid:88)

(cid:18) k0

(cid:19)(cid:18) k1

m00, m01

m10, m11

m00 m01 k0
m10 m11 k1
n
l1
l0

(cid:19)

=

(cid:19)

(cid:18) n
l0, l1

(A19)
Proof. We consider here the expansion of (X0 + X1)n =
(X0 + X1)l0+l1

FIG. 5. Graphical representation of one p ∈ P (m, ¯m, ˜m). The
sum over one axis is a projection over on one square. The sum
along two axes is a projection on one line. The sum over all
three axes is n the total weight of the cube.

the ensemble above by adding the constraints:

pijk = ˜mkj (warning: transpose here !)

(A13)

(X0 + X1)n =

(cid:88)

l(n)

X l0

0 X l1

1

(cid:19)

(cid:18) n
l0, l1

(cid:88)

i
(cid:88)

j
(cid:88)

k

pijk = ¯mik

pijk = mij

(A14)

(A15)

and we identify the elements of P (m, ˜m, ¯m) with their
indices p(m, ˜m, ¯m) (we can also have only one or two
square constraints out of three). Fig 5 represents one
element p ∈ P (m, ¯m, ˜m).

b. Preliminary results

We introduce here three Lemmas. Lemma 1 is a well
know relation and is not directly used to prove our re-
sult, but its generalisation will be the main ingredient of
Lemma 2. Lemma 3 is the key ingredient to prove the
result in the next subsection and its derivation relies on
Lemma 2.

The results are given for d = 2 to keep equations short,

but the results hold for any d ≥ 2

Lemma 1. (Vandermonde’s identity) Let n, m be any

(X0 + X1)k0 =

(cid:88)

m00+m01=k0

(X0 + X1)k1 =

(cid:88)

m10+m11=k1

X m00

0 X m01

1

X m10

0 X m11

1

(A20)

(cid:18) k0

(cid:19)

m00, m01

(A21)
(cid:19)

(cid:18) k1

m10, m11

(A22)

Then we take the product and group the monomials:

(X0 + X1)k0+k1 =

(cid:88)

X m00+m10

0

X m01+m11

1

m00+m01=k0
m10+m11=k1
(cid:18) k0

m00, m01
(cid:88)

m00+m10=l0
m01+m11=l1
(cid:18) k0

(cid:88)

m00, m01
0 X l1
X l0

1

·

·

=

=

(cid:19)(cid:18) k1

(cid:19)

m10, m11

X l0

0 X l1

1

(cid:19)(cid:18) k1

(cid:19)

m10, m11

l(n)

(cid:88)

(cid:18) k0

(cid:19)(cid:18) k1

(cid:19)

m00, m01

m10, m11

m(k,l)

(A23)

(A25)

Claim 1. f is preserving the usual matrix multiplication,
i.e. for any two square complex matrices A, B, we have :

We read out the coeﬃcient in X l0

0 X l1

1 and we ﬁnd the

result.

Lemma 3. Let n be any non-negative integer, three lines
k, l, ˜l ∈ L(n) and two squares ¯m(k, l), ˜m(l, ˜l), then:

(cid:88)

(cid:89)

(cid:115)(cid:18) ¯mab

(cid:19)(cid:18) ˜mab

p( ¯m, ˜m)
(cid:115)

=

pa0b, pa1b

p0ba, p1ba

ab

(cid:89)

a

(cid:18)

la
˜ma0, ˜ma1

(cid:19)(cid:89)

(cid:18)

b

lb
¯m0b, ¯m1b

(cid:19)

(cid:19)

(A24)

Proof. We compute the square of the left hand side of
Lemma 3:

(cid:88)

(cid:89)

(cid:115)(cid:18) ¯mab

(cid:19)(cid:18) ˜mab

(cid:19)

p( ¯m, ˜m)

ab

(cid:88)

(cid:89)

·

˜p( ¯m, ˜m)

ab

pa0b, pa1b

p0ba, p1ba

(cid:115)(cid:18) ¯mab

(cid:19)(cid:18) ˜mab

˜pa0b, ˜pa1b

˜p0ba, ˜p1ba

=

·

(cid:88)

(cid:89)

(cid:18) ¯mab

p( ¯m, ˜m)

ab

pa0b, pa1b

(cid:88)

(cid:89)

(cid:18) ˜mab

˜p( ¯m, ˜m)

ab

˜p0ba, p1ba

(cid:19)

(cid:19)

(cid:19)

And we can ﬁnd a closed formula for each independent
summation appearing in the right hand side of Eq A25.
In the summation over p, only two squares are con-
straining the ensemble: ¯m(k, l) and ˜m(l, ˜l). The idea is
to split the cube into d independent squares along the
axis of the square that is not constrained (see Fig. 5).
Then we apply Lemma 2 to each square and we get:

(cid:88)

(cid:18) ¯m00

(cid:19)(cid:18) ¯m10

p000, p010

p100, p110

p000 p010 ¯m00
p100 p110 ¯m10
˜m00 ˜m01 l0

(cid:88)

(cid:18) ¯m01

(cid:19)(cid:18) ¯m11

p001, p011

p101, p111

p001 p011 ¯m01
p101 p111 ¯m11
˜m10 ˜m11 l1

(cid:19)

(cid:18)

=

(cid:19)

l0
˜m00, ˜m01

(A26)

(cid:19)

(cid:18)

=

(cid:19)

l1
˜m10, ˜m11

We can multiply these two together to obtain:

(cid:88)

(cid:89)

(cid:18) ¯mab

(cid:19)

p( ¯m, ˜m)

ab

pa0b, pa1b

(cid:18)

(cid:89)

=

a

(cid:19)

la
˜ma0, ˜ma1

(A27)

(A28)

In the same way, we ﬁnd for the other summation:

(cid:88)

(cid:89)

(cid:18) ˜mab

(cid:19)

p( ¯m, ˜m)

ab

p0ba, p1ba

(cid:18)

(cid:89)

=

b

(cid:19)

lb
˜m0b, ˜m1b

(A29)

10

c. A useful matrix transformation

We take a ﬁxed non-negative integer n and positive
integer d. In the following, we take d = 2 to have concise
equations, but the result is easily generalised to any d ≥
2.

Let us consider any square complex matrix A of size d.
We denote its elements by αab, ∀(a, b) ∈ { 0 . . . d − 1 }2.
We construct a complex square matrix f (A) of size
(cid:1) like follows:

N = #L(n) = (cid:0)n+d−1

n,d−1

f (A) =

(cid:88)

|k(cid:105) (cid:104)l|

(cid:88)

m(k,l)

k,l
(cid:115)(cid:18)

(cid:115)(cid:18) k0

(cid:19)(cid:18) k1

(cid:19)

m00, m01

m10, m11

l0
m00, m10

(cid:19)(cid:18)

l1
m01, m11

(cid:19) (cid:89)

ab

αmab
ab

(A30)

f (A · B) = f (A) · f (B)

Proof. Let us take two complex matrices A, B whose el-
ements are respectively αab and βab. We take C = A · B
and we label its elements γab = (cid:80)

αacβcb. Then:

c

f (C) =

(cid:88)

|k(cid:105) (cid:104)˜l|

(cid:88)

k,˜l

m(k,˜l)

(cid:115)(cid:18) k0

(cid:19)(cid:18) k1

(cid:19)

m00, m01

m10, m11

(cid:115)(cid:18)

˜l0
m00, m10

(cid:19)(cid:18)

˜l1
m01, m11

(cid:19) (cid:89)

(cid:16) (cid:88)

(cid:17)mab

αacβcb

ab

c

We expand the d2 powers:

γmab
ab =

(cid:89)

ab

(cid:89)

(cid:88)

ab

pab0+pab1=mab

(cid:18) mab

(cid:19)

pab0, pab1

(cid:0)αa0β0b

(cid:1)pab0(cid:0)αa1β1b

(cid:1)pab1

(A31)

(A32)

In order to regroup the various powers of αab and βab,

we denote:

¯mab =

˜mab =

(cid:88)

c
(cid:88)

c

pacb

pcba

(A33)

(A34)

We notice that ¯m00 + ¯m10 = ˜m00 + ˜m01, and similarly
¯m01 + ¯m11 = ˜m10 + ˜m11. We label these two quantities
respectively l0 and l1. We also notice that (cid:80)
¯mij = ki
and (cid:80)
i

˜mij = ˜lj.

j

We now ﬁnd:

f (C) =

(cid:88)

|k(cid:105) (cid:104)˜l|

(cid:88)

(cid:88)

m(k,˜l)

p(m)

k,˜l
(cid:115)(cid:18)

(cid:115)(cid:18) k0

(cid:19)(cid:18) k1

(cid:19)

m00, m01

m10, m11

˜l0
m00, m10

(cid:19)(cid:18)

˜l1
m01, m11

(cid:19) (cid:89)

(cid:18) mab

(cid:19)

pab0, pab1

ab

ab β ˜mab
α ¯mab

ab

(A35)

We simplify the m appearing in some multinomial co-
eﬃcients, and introduce new multinomial coeﬃcients re-
lating ¯m, ˜m and l to p(m). Then since ¯m, ˜m, l are com-
pletely ﬁxed by the deﬁnition above, we can add an arti-
ﬁcial summation over them that will contain only a single
element corresponding to their actual deﬁnition depend-
ing on p(m).
We ﬁnd:

f (C) =

(cid:88)

|k(cid:105) (cid:104)˜l|

(cid:88)

(cid:88)

(cid:88)

(cid:88)

(cid:88)

(cid:89)

α ¯mab
ab β ˜mab

ab

k,˜l

m(k,˜l)

p(m)

l(n)

¯m(k,l)

˜m(l,˜l)

ab

(cid:115)(cid:18) k0

(cid:19)(cid:18) k1

¯m00, ¯m01

¯m10, ¯m11

(cid:19)(cid:18)

l0
¯m00, ¯m10

(cid:19)(cid:18)

(cid:19)

l1
¯m01, ¯m11

(cid:115)(cid:18)

l0
˜m00, ˜m01

(cid:115)(cid:18) ¯m00

(cid:19)(cid:18)

l1
˜m10, ˜m11

(cid:19)(cid:18)

˜l0
m00, m10

(cid:19)(cid:18)

(cid:19)

˜l1
m01, m11

(cid:19)(cid:18) ¯m01

(cid:19)(cid:18) ¯m10

(cid:19)(cid:18) ¯m11

p000, p001

p100, p101

p010, p011

p110, p111

(cid:115)(cid:18) ˜m00

(cid:19)(cid:18) ˜m01

(cid:19)(cid:18) ˜m10

(cid:19)(cid:18) ˜m11

p000, p010

p001, p011

p100, p110

(cid:112)

¯m00! ¯m01! ¯m10! ¯m11!

(cid:112)

˜m00! ˜m01! ˜m10! ˜m11! ·

p101, p111
1
l0!l1!
(A36)

Next we simplify the summation by shifting the con-
straints on the summation ensembles to the elements
of the summation, swapping the summation order and
putting back the constraints in the ensembles. More pre-
cisely, we perform the following operations:

1. We introduce (cid:81)
ij

δmij =(cid:80)

pijc

in the summation.

c
Here δ is 1 if the condition in the lowerscript is
satisﬁed, otherwise it is 0.

11

4. We resolve the summation over m(k, ˜l); the deltas
introduced before are forcing only one possible m in
that sum to make it non-zero, therefore we can re-
move the whole summation and simplify the deltas.
5. We push the summation over p last, after the sum-

mations over l, ¯m(k, l), ˜m(l, ˜l).

6. We put back constraints in the summation over p,

i.e. the summation is now over p( ¯m, ˜m)

7. We resolve the summation over p using Lemma

3 and simplify the remaining (cid:81)
ij

(cid:112) ¯mij! ˜mij! ·

1
l0!l1!

which is the exact inverse of the quantity obtained
with Lemma 3.

Finally, we have:

f (C) =

(cid:88)

|k(cid:105) (cid:104)˜l|

(cid:88)

(cid:88)

(cid:88)

(cid:89)

ab β ˜mab
α ¯mab

ab

k,˜l

l(n)

¯m(k,l)

˜m(l,˜l)

ab

(cid:115)(cid:18) k0

(cid:19)(cid:18) k1

(cid:19)(cid:18)

¯m00, ¯m01

¯m10, ¯m11

(cid:19)(cid:18)

l0
¯m00, ¯m10

(cid:115)(cid:18)

l0
˜m00, ˜m01

(cid:19)(cid:18)

l1
˜m10, ˜m11

(cid:19)(cid:18)

˜l0
m00, m10

(cid:19)(cid:18)

(cid:19)

(cid:19)

l1
¯m01, ¯m11

˜l1
m01, m11
(A37)

This is exactly the contraction f (A) · f (B).

(cid:19)

(cid:19)

Corollary 1.1. If we denote U(d) the ensemble of uni-
tary matrices of size d ≥ 2, then for any ﬁxed n ≥ 1
and N = (cid:0)n+d−1
−→ (cid:0)U(N ), ·(cid:1)
(cid:1), the mapping (cid:0)U(d), ·(cid:1)
is a group homomorphism. Hence if U is deﬁning an or-
thonormal basis, then f (U ) is also deﬁning an orthonor-
mal basis.

n,d−1

f

In practice, f (U ) is containing the amplitudes of the
output state after projection in the measurement basis.
Using Corollary 1.1, the basis that we obtain using the
transformation f is directly normalised. We show in the
next subsection how to establish the normalisation prop-
erty in a diﬀerent way that will be useful to establish the
ﬁrst moment property that we are interested in.

d. Computing the 0-th moment

2. We change the summation over p(m) into one over
p ∈ P (n) (no more constraint in m(k, ˜l)), the ex-
tra elements will make no diﬀerence thanks to the
deltas we introduced before.

3. We swap (cid:80)
m(k,˜l)

and (cid:80)
p

since there is no more de-

pendency in m in the latter.

We consider here a special case where the matrix
A is such that AA† is diagonal with d eigenvalues
In other words, we have (cid:80)
|αij|2 = λi.
λ0, . . . , λd−1.
j

It is easy to check that f (A)f (A)† is also diagonal with
N eigenvalues λk0
d−1 , k ∈ L(n). Then by reading
out the diagonal elements of f (A)f (A)†, we ﬁnd that for
all k(n):

0 . . . λkd−1

|f (A)kl|2 =

(cid:88)

l(n)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:88)

l(n)

(cid:115)(cid:18) k0

(cid:88)

(cid:19)(cid:18) k1

(cid:19)(cid:18)

m(k,l)

m00, m01

m10, m11

l0
m00, m10

(cid:19)(cid:18)

l1
m01, m11

(cid:19) (cid:89)

ab

αmab
ab

2

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:89)

(cid:0) (cid:88)

|αij|2(cid:1)ki

=

(A38)

i

j

12

If the matrix A is unitary, we ﬁnd that it is 1, i.e. the

resulting basis is normalised.

e. Computing the 1-st moment

Now we are interested in computing:

w(l)|f (A)kl|2 =

(cid:88)

l(n)

w(l)

(cid:88)

l(n)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:115)(cid:18) k0

(cid:88)

(cid:19)(cid:18) k1

(cid:19)(cid:18)

m(k,l)

m00, m01

m10, m11

l0
m00, m10

(cid:19)(cid:18)

l1
m01, m11

(cid:19) (cid:89)

ab

αmab
ab

2

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(A39)

with w(l) = l0 or l1. It should be possible to compute
any moment the same way, but we are only concerned
about the ﬁrst moment here.

added weight to ﬁnd a closed formula. Let us consider
the example w(l) = l0.

The idea is to revisit the derivation of Claim 1 with this

We rewrite Eq (A39) into:

w(l) |f (A)kl|2 =

(cid:88)

l(n)

w(l)

(cid:88)

l(n)

(cid:115)(cid:18) k0

(cid:88)

(cid:19)(cid:18) k1

(cid:19)(cid:115)(cid:18)

¯m(k,l)

¯m00, ¯m01

¯m10, ¯m11

(cid:115)(cid:18) k0

(cid:88)

(cid:19)(cid:18) k1

(cid:19)(cid:115)(cid:18)

˜m(k,l)

˜m00, ˜m01

˜m10, ˜m11

l0
¯m00, ¯m10

(cid:19)(cid:18)

l1
¯m01, ¯m11

l0
˜m00, ˜m10

(cid:19)(cid:18)

l1
˜m01, ˜m11

(cid:19) (cid:89)

ab

(cid:19) (cid:89)

ab

α ¯mab
ab

α∗ ˜mab
ab

(A40)

Then we take B = A† and start from Eq (A37) (with
k = ˜l) where we add w(l) after the summation (cid:80)
.
l(n)
We can easily reverse the computation until Eq (A36).
Now we change w(l) into w(p) by using the deﬁnition
of l as a function of p. For our example, we have

w(l) = l0 = (cid:80)

ij

pij0. We can further reverse the compu-

tation until Eq (A35). At this point, we want to resolve
the summation over p with the extra weight w(p). Origi-
nally, we have the following result when there is no extra
weight:

(cid:89)

(αa0β0b + αa1β1b)mab =

ab

p(n)

ab

(cid:88)

=

(cid:88)

(cid:89)

(cid:18) mab

(cid:19)

pab0, pab1

ab β ˜mab
α ¯mab

ab

p000+p001=m00

(cid:88)

p100+p101=m10

(cid:19)

(cid:19)

(cid:18) m00

p000, p001

(cid:18) m10

p100, p101

(cid:0)α00β00

(cid:1)p000(cid:0)α01β10

(cid:1)p001 (cid:88)

p010+p011=m01

(cid:0)α00β01

(cid:1)p100(cid:0)α01β11

(cid:1)p101 (cid:88)

p110+p111=m11

(cid:19)

(cid:19)

(cid:18) m01

p010, p011

(cid:18) m11

p110, p111

(cid:0)α10β00

(cid:1)p010(cid:0)α11β10

(cid:1)p011

(cid:0)α10β01

(cid:1)p110(cid:0)α11β11

(cid:1)p111

(A41)

The extra weight will result in a polynomial diﬀerenti-

ation with respect to certain parameters. More precisely,

we use the following property like in the monomode case:

13

(cid:88)

(cid:18) n

(cid:19)

n0+n1=n

n0, n1

n0X n0

0 X n1

1 = X0

d(cid:2)(X0 + X1)n(cid:3)
dX0
(cid:0)X0 + X1

(cid:1)n−1

= nX0

We split the weight according to the d2 elements mij,
for instance we ﬁnd for p000 and then for the full weight
w(p) = l0:

(A42)

(cid:0)α00β00 + α01β10

(cid:1)m00−1(cid:0)α00β01 + α01β11

(cid:1)m01

(cid:88)

p000

p(m)

ab

(cid:18) mab

(cid:89)

pab0, pab1

(cid:19)

ab β ˜mab
α ¯mab

ab =m00α00β00

(cid:88)

w(p)

p(m)

ab

(cid:18) mab

(cid:89)

(cid:19)

pab0, pab1

ab β ˜mab
α ¯mab

ab =

· (cid:0)α10β00 + α11β10
(cid:32)
m00
+ m10

γmab
ab

(cid:89)

(cid:1)m10(cid:0)α10β01 + α11β11
+ m01
+ m11

α00β00
α00β00+α01β10
α10β00
α10β00+α11β10

ab

(cid:1)m11

(cid:33)

α00β01
α00β01+α01β11
α10β01
α10β01+α11β11

(A43)

(A44)

When A·A† is diagonal, we ﬁnd that necessarily m10 =

m01 = 0, m00 = k0 and m11 = k1. Hence:
(cid:88)

l0 |f (A)kl|2 =(cid:0)|α00|2 + |α01|2(cid:1)k0(cid:0)|α10|2 + |α11|2(cid:1)k1

l(n)

(cid:18)

k0

|α00|2

|α00|2 + |α01|2 + k1

(cid:19)

|α10|2
|α10|2 + |α11|2
(A45)

This is equivalent to taking the derivative of the 0−th
moment with respect to the ﬁrst parameter in each paren-
thesis. The same applies for the ﬁrst moment in l1 which
reads:

(cid:80)

l1 |f (A)kl|2 = (cid:0)|α00|2 + |α01|2(cid:1)k0 (cid:0)|α10|2 + |α11|2(cid:1)k1

l(n)

(cid:16)

k0

|α01|2

|α00|2+|α01|2 + k1

|α11|2
|α10|2+|α11|2

(cid:17)

(A46)
Finally, if we take A to be unitary and further divide
the ﬁrst moment in l0 and l1 by n, we recover the univer-
sal squashing equivalence for multimodes as in Eq (A7).

3. Squashing coherent states

of the same mode, hence it is not clear if the result can
still apply.

To clarify this point, we use a simple trick. Since
eventually, the detectors are photon-number sensitive, we
can always assume that there is a virtual non-destructive
measurement of the global photon number across all the
modes preceding the actual photon number measurement
in each of the arms. Here it is important to highlight two
points. First this measurement is not performed in prac-
tice, but it commutes with the actual measurement, so
the statistics will be unchanged and we can always as-
sume it was performed. Second, this total photon num-
ber measurement is a global measurement acting on all d
modes at once, and it gives no information about the par-
ticular photon-number distribution in each of the arm.

it

As a result,

is mode basis-independent and
coherence-nonbreaking (within the n photon number sub-
space). Since the unitary transformation representing the
receiver is equivalent to changing basis for the modes, it
is equivalent to measure the number of photons before
the circuit or after, so we can always assume that the
photon number measurement was performed ﬁrst before
the actual receiver transformation. Now the virtual to-
tal photon number measurement will project the input
state onto a quantum state (possibly mixed) with a ﬁxed
number of photons n and the theorem directly applies.

The generalised result we proved applies for any ﬁxed
n and any population of the input modes k(n). However
in practice Bob will never receive an input state with a
ﬁxed number of photons since Alice is preparing coherent
states that can have an arbitrary number of photons. It
is easy to generalise the result to a classical mixture of
photon number states, but here Alice’s states are coher-
ent and there is coherence between photon number states

To see that it is equivalent to measure the total pho-
ton number before or after the circuit, let us consider a
simple example: two input modes a0, a1 and two output
modes b0, b1 are related by a unitary transformation U
such that:

(cid:40)

b0 = u00a0 + u01a1
b1 = u10a0 + u11a1

(A47)

0a0 + a†
Then if we denote ˆna = a†
1b1
the observable of the total number of photons in the two
input modes and two output modes respectively, then

1a1 and ˆnb = b†

0b0 + b†

it is easy to check that ˆna = ˆnb using Eq. (A47) and
U U † = U †U = I. The general case for any dimension d
is derived in a similar way.

14

[1] N. Gisin, G. Ribordy, W. Tittel, and H. Zbinden, Rev.

[10] C. Branciard, N. Gisin, N. Lutkenhaus, and V. Scarani,

Mod. Phys. 74, 145 (2002).

[2] V. Scarani, H. Bechmann-Pasquinucci, N. J. Cerf,
M. Duıfmmode \checks\else ˇs\ﬁek, N. L¨utkenhaus, and
M. Peev, Rev. Mod. Phys. 81, 1301 (2009).

[3] C. H. Bennett and G. Brassard, Theoretical Aspects of
Quantum Cryptography – celebrating 30 years of BB84
560, 7 (2014).

[4] D. Stucki, N. Brunner, N. Gisin, V. Scarani, and
H. Zbinden, Applied Physics Letters 87, 194108 (2005).
[5] N. L¨utkenhaus and M. Jahma, New Journal of Physics

Quantum Info. Comput. 7, 639 (2007).

[11] T. Moroder, M. Curty, C. C. W. Lim, L. P. Thinh,
H. Zbinden, and N. Gisin, Phys. Rev. Lett. 109, 260501
(2012).

[12] Y. Wang, I. W. Primaatmaja, E. Lavie, A. Varvitsio-
tis, and C. C. W. Lim, npj Quantum Information 5, 17
(2019).

[13] S. Pirandola, R. Laurenza, C. Ottaviani, and L. Banchi,

Nature Communications 8, 15043 (2017).

[14] H.-K. Lo and J. Preskill, Quantum Information and Com-

4, 10.1088/1367-2630/4/1/344 (2002).

putation 7, 431 (2007).

[6] C. Branciard, N. Gisin, and V. Scarani, New Journal of

Physics 10, 013031 (2008).

[7] B. Korzh, C. C. W. Lim, R. Houlmann, N. Gisin, M. J.
Li, D. Nolan, B. Sanguinetti, R. Thew, and H. Zbinden,
Nature Photonics 9, 163 (2015).

[15] M. Curty, Phys. Rev. A 104, 062417 (2021).
[16] C.-H. F. Fung, H. F. Chau, and H.-K. Lo, Phys. Rev. A

84, 020303 (2011).

[17] R. Renner, Nature Physics 3, 645 (2007).
[18] A. Winick, N. L¨utkenhaus, and P. J. Coles, Quantum 2,

[8] J. Gonz´alez-Payo, R. Tr´enyi, W. Wang, and M. Curty,

77 (2018).

Phys. Rev. Lett. 125, 260510 (2020).

[19] S. Boyd and L. Vandenberghe, Convex optimization

[9] R. Tr´enyi and M. Curty, New Journal of Physics 23,

(Cambridge university press, 2004).

093005 (2021).

