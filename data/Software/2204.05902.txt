2
2
0
2

r
p
A
2
1

]
E
S
.
s
c
[

1
v
2
0
9
5
0
.
4
0
2
2
:
v
i
X
r
a

Scratch as Social Network:
Topic Modeling and Sentiment Analysis in Scratch Projects

Isabella Graßl
isabella.grassl@uni-passau.de
University of Passau
Passau, Germany

Gordon Fraser
gordon.fraser@uni-passau.de
University of Passau
Passau, Germany

ABSTRACT
Societal matters like the Black Lives Matter (BLM) movement influ-
ence software engineering, as the recent debate on replacing certain
discriminatory terms such as whitelist/blacklist has shown. Identi-
fying relevant and trending societal matters is important, and often
done for traditional social media channels such as Twitter. In this
paper we explore whether this type of analysis can also be used for
introspection of the software world, by looking at the thriving scene
of Scratch programmers. The educational programming language
Scratch is not only used for teaching programming concepts, but
also offers a platform for young programmers to express and share
their creativity on any topics of relevance. By automatically ana-
lyzing titles and project comments in a dataset of 106.032 Scratch
projects, we explore which topics are common in the Scratch com-
munity, whether socially relevant events are reflected, and how
the sentiment in the comments discussing these topics is. It turns
out that the diversity of topics within the Scratch projects makes
the analysis process challenging. Our results nevertheless show
that topics from pop and net culture are present, and even recent
societal events such as the Covid-19 pandemic or BLM are to some
extent reflected in Scratch. The tone in the comments is mostly
positive with catchy youth language. Hence, despite the challenges,
Scratch projects can be studied in the same way as social networks,
which opens up new possibilities to improve our understanding of
the behavior and motivation of novice programmers.

CCS CONCEPTS
• Social and professional topics → Gender; Computing edu-
cation; • Software and its engineering → Software develop-
ment techniques.

KEYWORDS
Scratch, topic modeling, sentiment analysis, social network.

ACM Reference Format:
Isabella Graßl and Gordon Fraser. 2022. Scratch as Social Network: Topic
Modeling and Sentiment Analysis in Scratch Projects. In Software Engi-
neering in Society (ICSE-SEIS’22), May 21–29, 2022, Pittsburgh, PA, USA. ACM,
New York, NY, USA, 6 pages. https://doi.org/10.1145/3510458.3513021

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ICSE-SEIS’22, May 21–29, 2022, Pittsburgh, PA, USA
© 2022 Association for Computing Machinery.
ACM ISBN 978-1-4503-9227-3/22/05. . . $15.00
https://doi.org/10.1145/3510458.3513021

Lay Abstract: Analyzing the content and emotions within a social
network provides insights on how software engineers communicate
and what they talk about. The Scratch programming environment
is extremely popular with young, learning programmers. In this
paper we investigate whether social network analysis in terms of
automatically identifying topics and sentiments can also be ap-
plied to Scratch. We analyze the topics of the projects that young
programmers create and share, and determine the tone of their
conversations. Although the process turns out to be technically
challenging, we encounter pop and net culture references but also
societal matters, and the overall tone of communication is positive.

1 INTRODUCTION
Societal issues such as the Black Lives Matter movement (BLM) have
an impact also on software engineering (SE), for example with the
proposal to replace discriminatory terms such as whitelist/black-
list and master/slave. Analysis of such societal events is therefore
relevant for SE as these might serve as a catalyst to question in-
formation technology conditions and for adapting contemporary
patterns to a new discourse system [4, 17]. Research investigating
societal events typically focuses on social media analyses that use
text mining to extract semantic information from posts [1, 7, 13, 24].
Can we also learn about societal events from SE?

A thriving subfield in SE is the educational programming envi-
ronment Scratch [23], and its millions of predominantely young
users1. Prior research has investigated Scratch programs and its
users [2, 12]. However, the Scratch ecosystem offers more than
just code: There is also surrounding textual information in terms of
project titles and users interacting by commenting and liking each
other’s projects [14, 27, 32]. This raises the question whether the
analysis of social networks [9, 13, 33] can be transferred to the anal-
ysis of Scratch projects. A central challenge here is that Scratch
not only provides predominantly very short textual information,
but above all that this is written mainly by children and teenagers.
The aim of this paper is to identify to what extent text mining
is possible in Scratch projects and their comments, and whether
socially relevant events are reflected. The first research question is:

RQ1: What topics can be extracted from Scratch projects?

We conduct a first time application of automated text analysis of
Scratch projects, using the title of a project, in analogy to news
headlines and Twitter hashtags [13]. We use Top2Vec [3], a state
of the art method from the field of machine learning and natural
language processing for this purpose.

The interfacial structure of the projects resembles that of a so-
cial network—with the possibility of commenting, sharing and

1https://scratch.mit.edu/statistics/

 
 
 
 
 
 
ICSE-SEIS’22, May 21–29, 2022, Pittsburgh, PA, USA

Isabella Graßl and Gordon Fraser

liking. Increased offensive behavior like hatespeech is reported for
comments in traditional social networks [8, 34, 35]. To determine
whether such behavior also exists in Scratch comments and how
semantic fields relate to the sentiment, our second question is:
RQ2: What is the tone of the Scratch comments?
We use sentiment analysis, which also has its origins in analysis
of social networks and recommendation systems. We analyze the
project comments with the multi-class sentiment tool VADER [18].
Our results show that Scratch projects contain net and pop cul-
tural references, but societal topics such as the Covid-19 pandemic
are also referenced. The majority of comments of the projects are
positive and the users express their interest in the projects, but
again we find some indicators that political events like the BLM
movement are present. With these insights, this paper lays the
foundation for further interdisciplinary studies in Scratch as a
social network. It also identifies new challenges and provides new
opportunities for the application of machine learning in program-
ming education, where text analysis is challenging due to the short,
domain-independent language used by young people.

2 BACKGROUND AND RELATED WORK
In this paper, we bring together concepts from analyses of social
networks and the community of young programmers in Scratch.

2.1 Social Network Analysis in SE
Although analyses concerning socio-cultural issues represent a
relatively young branch of research in SE, there are already some
research reports on the content and structured analysis of social
networks like GitHub or Stackoverflow, similar to analysis in tra-
ditional social media [19, 22]. In particular, the identification of
trending topics, which activities lead to better and faster reputa-
tion scores, as well as the effect of gender has been the focus of
prior research [4, 6, 17, 26]. Furthermore, language identification
on Stackoverflow revealed that a consistency between the tags pro-
vided by users and the classification with a speech recognition tool
is often not given [10]. Similarly, the impact and benefits of senti-
ment analysis for SE especially in OSS like GitHub repositories have
been recently discussed [15, 21, 28, 29]. Even a cross-linking study
between GitHub and Twitter has recently been conducted [11]. Iden-
tifying affective and social factors is relevant as they impact product
and collaboration quality, productivity, and employee satisfaction.

2.2 The Scratch Programming Environment
Scratch is one of the most popular introductory programming
environments. Shared projects can be commented on, and include
symbols for Love-it (♥), Favourite (★), Remix ( ), which is similar to
sharing in traditional social networks. Looking “inside” a Scratch
project reveals the code of the underlying figures (Sprites) and the
environment (Stage) of the program. Scripts are created by visually
arranging blocks representing programming instructions.

The popularity of Scratch has raised attention in research,
especially in the fields of computer science education and SE. There
have been qualitative studies, e.g., regarding the digital competence
of young people and their handling of digital media by means
of stories in Scratch [30], to encourage them to develop their
own projects and not just consume them. Some prior research also

exists on the application of machine learning in Scratch, such
as using a predictive analysis to determine whether comments
in a project are project-related [32], using latent class analysis to
investigate the use of programming concepts [12] or using topic
modeling to identify gender-dependent topics within projects [14].
This is fundamental to better understand how children program
in Scratch in order to improve the learning environment and
thus ensure long-term interest and sustainable learning outcomes—
especially for underrepresented groups in SE.

3 METHOD
3.1 Dataset
We randomly sampled publicly shared Scratch projects using the
REST API provided by the Scratch website. We excluded remixes,
as well as projects that contain less than ten blocks, ten views
and ten loves, as such small and unpopular projects contain little
information, but add noise. We retrieved 124.160 projects, created
in the period from 26.04.2007 to 18.08.2021. After preprocessing
and restricting to projects created on or after 01.01.2019 to focus
on recent trends, the final dataset consists of 106.032 projects for
the topic analysis. For the sentiment analysis, we included only
projects which contained more than ten comments and therefore,
from the original 124.160 projects only 21.786 projects remained,
which was again reduced after the same preprocessing steps. The
final dataset for the sentiment analysis consists of 16.816 projects.
Since we apply textual analysis, we excluded images and audio
files. However, these could be included in future research, which
we support by providing our analysis source code as open source.2

3.2 Data Analysis
3.2.1 Preprocessing. As with any text analysis, several preprocess-
ing steps are required on the data. We parsed the text into tokens
(here single words), normalized to lower case and removed punc-
tuation as well as stop words defined in the NLTK library, as they
generally have no deeper or sporadic meaning, but distort the re-
sults. We also removed any characters which are not in the given
ASCII range from 0 to 122, but made no filtering of English words,
because the accuracy of the filters is very poor and generates many
false-positives. However, the pre-trained model of Top2Vec is mul-
tilingual. Since the inflectional form of a word does not provide
relevant additional semantic information, lemmatisation with the
popular Wordnet-Lemmatiser3 is used to reduce terms to their
lemma, where the frequency of the original terms is preserved. Fur-
thermore, we removed customized stop words relating to the project
type such as “game”, “animation”, “platformer” as well as domain-
specific terms such as “sprite” or “remix”. After the preprocessing,
each sample (Scratch project) contains several features—the terms
of the title for the topic analysis and the terms of the comments for
the sentiment analysis—which serve as input for the models.

3.2.2 RQ1: Topic Analysis. The title as basic feature represents the
input parameter while the topic represents the target parameter of
the model. One advantage of Top2Vec is that it automatically gener-
ates the number of topics itself and, unlike alternative approaches,

2https://github.com/se2p/semantic-analysis.git
3https://www.nltk.org

Scratch as Social Network:
Topic Modeling and Sentiment Analysis in Scratch Projects

ICSE-SEIS’22, May 21–29, 2022, Pittsburgh, PA, USA

does not require choosing the number beforehand. Each topic from
the model is associated with a number of generated keywords that
add more contextual understanding of the projects’ semantics.

3.2.3 RQ2: Sentiment Analysis. To identify the tone of the projects,
we use multi-class sentiment analysis. To find the most accurate tool,
two independent researchers manually classified two comments
from each of 500 randomly selected projects from the dataset, hence
a set of 1000 randomly selected comments. The comments were
labelled into three basic moods (positive, neutral, negative) and
compared to the classification of SentiStrength4, VADER5 and Stan-
ford CoreNLP6. SentiStrength’s F1 score (0.743) is comparable to
VADER (0.740), with Stanford CoreNLP (0.687) scoring lower. Since
VADER is open source and has the advantage of a compound score,
it was selected over SentiStrength for further analysis.

VADER is specifically adapted to sentiments expressed in social
media and provides the percentage by which a text is rated positive,
negative, or neutral. In addition, a compound score is calculated by
adding the valence scores, adjusting them according to the rules,
and then normalizing them between -1 (most extreme negative) and
+1 (most extreme positive). Based on prior work [18] the threshold
for positive sentiment is > 0.05 and for negative sentiment < -
0.05. To assess the overall sentiment of a project, we consider the
average per comment. The most common terms over all projects
are visualized by word clouds to determine semantic fields.

3.3 Threats to Validity
The analysis with Top2Vec looks at the words with the highest
co-occurrence. If there are important words in the proximity, the
word becomes more important, but this does not have to be the
case in children’s projects and one should therefore also look at
individual important terms with keyword analysis, tf-idf or more
advanced neural networks [5]. Besides the classification into three
basic moods with VADER, there are also several shades in be-
tween that enhance the understanding, e.g., anger, fun or sadness.
SentiStrength-SE or Senti4SD, which are adapted specifically for
SE might provide another perspective on the content; however, we
explicitly decided against such one as our input is from children
without reference to SE terminology. Concerning external valid-
ity, the results of the topic analysis may not generalize to other
scenarios or networks in SE such as GitHub. We considered all
projects with a minimum of ten blocks as well as for the sentiment
analysis with a minimum of ten project comments because they
introduced too much noise into the data after one experiment. Nev-
ertheless, even from these small projects interesting insights could
be gained, e.g., showing self-painted backgrounds. Further filtering
steps might improve the data, e.g., by excluding buggy projects.

4 RESULTS
4.1 RQ1: Topic Analysis
To determine the topics of the Scratch projects, a topic analysis
was performed using Top2Vec. The model generated 1,441 topics
with associated keywords. Due to the large number of generated

4http://sentistrength.wlv.ac.uk/
5https://github.com/cjhutto/vaderSentiment
6https://stanfordnlp.github.io/CoreNLP/

topics and because an automatic evaluation of such unsupervised
machine learning approaches is not possible, we reviewed only the
100 most frequent topics, i.e., the topics to which the most projects
belong, manually. We manually classified these 100 topics into 10
types of topics, which are illustrated in Table 1 with examples, and
will be elaborated in the following7. The ID references the rank of
the topic in terms of how common this topic is. There were also
many topics that contained a combination of different topics, but
did not form a coherent topic themselves, and therefore were not
discussed further, but might be attractive for further studies.

The first topic in Table 1, labelled inconsistency, corresponds to
the most projects by far, captured by keywords that are unrelated
filler words like one, bit or ok. There are also abbreviations like idk
[i don’t know] or youth language like dude. The model seems to
assign all projects that are not associative to this topic. This might
be due to the common use case for Scratch as the students are just
messing around to try out some programming concepts in a class
and therefore do not devote much attention to the titles.

The second type of topic also contains some incoherent terms
(interestingly also the term covid), which are all to some extent
proper names. However, this topic seems to consist of independent
concepts that have no common context: Sharkyshar is a popular
YouTube channel as well as a popular Scratch user. PFP is the
abbreviation for profile pic or an icon that you have as your profile
picture, while stickmini is a video game and tvokids is a Canadian
children’s programming television network. Therefore, this topic
is an example of the model combining independent terms without
context. Nevertheless, this indicates that the extraordinary event
of the Covid-19 pandemic is being processed in some form in the
users’ projects. So, similar to social networks [9, 13, 33], children in
a programming environment are also responding to societal events.
To what extent this really influences programming and how it is
represented should be the subject of future work.

Some topics are related to the children’s lifeworld. One semantic
field consists of different animals (Topic 5), which are often used
as characters in Scratch, since the mascot of Scratch is also a
cat. In Scratch there are many different animals as characters
and often children use their pets as models for their avatars in
the program. Topic 28, music, deals with songs, lyrics, playlist and
musicals as well as different music genres such as rap and rock.
Here, too, the Scratch environment lends itself to this topic, since
there are various stages, dancing figures and a dedicated block
category sound, where a lot of sounds are available and you can
also upload your own sounds. In addition, music is a specific project
type on the Scratch website. In addition, common everyday life
scenarios such as holidays and celebrations are popular among the
topics, which are represented by the terms Christmas, Halloween or
birthday parties (Topic 90). Such events seem to appeal to children,
as other studies confirmed the use of Scratch projects as “gifts”
for Mother’s Day [31]. In particular, Scratch reinforces all possible
ways of being creative with their starter projects8 on the website,
where celebrations and parties are an appealing topic for newbies.
Many topics deal with references to net and pop culture, reflected
by terms such as Pokemon, Kirby, Minecraft, Sonic, which all refer

7The complete list of generated topics as well as the dataset and the analysis are made
available for replications at https://github.com/se2p/semantic-analysis.
8https://scratch.mit.edu/starter-projects

ICSE-SEIS’22, May 21–29, 2022, Pittsburgh, PA, USA

Isabella Graßl and Gordon Fraser

Table 1: Automatically generated topics from the Top2Vec model with their keywords and project statistics.

ID

label

keywords (score)

0
1
5
22
28 music
43
51
87
90
99

inconsistency
proper names
animals
pop culture (games)

pop culture (lit./film)
fantasy (universe)
fantasy (gloomy)
holidays
fantasy (shiny)

un (0.57) idk (0.56) way (0.54) ya (0.53) le (0.52) one (0.52) dude (0.51) au (0.5) dont (0.5) en (0.5)
covid (0.52) sharkyshar (0.51) pfp (0.51) stickmin (0.5) tvokids (0.5) funkin (0.44) oyunu (0.42) numberblock (0.41) gacha (0.39)
cat (0.81) kitty (0.74) chat (0.63) pet (0.44) animal (0.41) mouse (0.4) bunny (0.39) dog (0.38) hedgehog (0.38) monkey (0.38)
mario (0.87) pokemon (0.45) kirby (0.43) minecraft (0.41) pong (0.39) sonic (0.38) spongebob (0.38) lego (0.37) tycoon (0.37)
music (0.85) musical (0.62) song (0.59) rap (0.52) playlist (0.49) band (0.49) sings (0.47) rock (0.46) piano (0.44) dance (0.44)
potter (0.78) harry (0.64) pokemon (0.41) disney (0.37) avatar (0.34) magic (0.34) maze (0.33) cake (0.31) book (0.3) minecraft (0.3)
space (0.83) rocket (0.51) moon (0.48) alien (0.46) galaxy (0.46) planet (0.41) earth (0.4) fighter (0.39) fight (0.39) wing (0.39)
dragon (0.85) pokemon (0.45) godzilla (0.44) wing (0.43) dinosaur (0.42) dungeon (0.42) monkey (0.42) snake (0.41) rocket (0.41)
christmas (0.84) santa (0.57) merry (0.54) winter (0.48) halloween (0.46) birthday (0.42) gift (0.4) party (0.36) potter (0.35) candy (0.34)
rainbow (0.84) balloon (0.41) sky (0.4) unicorn (0.4) neon (0.4) purple (0.39) cloud (0.37) dragon (0.36) shark (0.35) pink (0.35)

# pro.

29552
1062
632
346
262
212
198
147
145
136

to popular computer games (Topic 22). This implies that children
transfer their favorite free time activities in a programming setting.
Besides, pop culture references from literature and film, especially
Harry Potter and Disney, are evident (Topic 43). Gaining insights of
such preferred references from other media could be beneficial to
design programming tasks focused on this.

Abstract and fantasy worlds are part of popular topics, such as
the universe (Topic 51), rather gloomy fantasy worlds with fantasy
creatures such as dragons or godzilla and dinosaurs (Topic 87).
Similarly, rather shiny fantasy worlds (Topic 99), characterized by
rainbows, balloons and unicorns, exist. These worlds show that
the users’ interests are diverse and it would therefore be intriguing
to determine whether patterns can be derived between preferred
topics and other factors such as gender, age or origin. In particular,
the goal of further work should be to generalize this topic analysis
and to link the topics with the project statistics and users in order
to gain further insights into the interests of the Scratch users.

RQ1 Summary. Topics from net and pop culture can be found
in Scratch projects. In addition, the exceptional societal event,
the Covid-19 pandemic, was also reflected in the projects.

4.2 RQ2: Sentiment Analysis
Overall, the comments from the projects consist of 49.362 nouns,
3.751 verbs, 3.064 adjectives and 1.005 adverbs. Figure 1 shows the
most common terms in Scratch project comments according to
their sentiment. In total, there are 14.434 positive projects, 1.933
neutral projects and 449 negative projects. It is clearly evident that
comments of a positive nature clearly outweigh negative comments.
In contrast to other social networks such as Instagram [16], Twit-
ter [34] or YouTube [25] in which cyber-bullying, hatespeech as well
as radicalizations have already established themselves [8], Scratch
still seems to be a friendly platform. Similar to the recent social
platform TikTok [35], this positive communication may be due to
the fact that (1) the age group of users is rather low and (2) there
are less controversial or political debates than, e.g., on Twitter.

The positive comments are dominated by the term thank. The
expression of thanks is a sign of appreciation—either from users to
the project creator or from project creators in response to comments
on their projects. In addition, there are strong positive words such
as love, best, great, awesome or pretty, cute or nice. These terms
in combination with the other terms like character, work, job or
done result in phrases that praise good performance or a pleasant
implementation of the program. In particular, acronyms like lol

[laughing out loud] or xd [smiley face] dominate also the positive
project comments. Here, the specific speech situation is unclear,
whether in its euphoric or ironic meaning. In either case these
acronyms exist for identification as well as differentiation from
other groups. A prerequisite for this is to understand the content
of the term and to put it into context—lol, for example, is a sign for
colloquial language of younger persons, i.e., youth slang [20].

The word field of negatively connotated comments is dominated
by the word people, which cannot be inferred in the context. How-
ever, among the negative comments, it is striking that the acronym
BLM [black lives matter] as well as the terms George, Flyod, police,
racist and black can be found, referring to the event which was the
reason for the movement in the USA. This is a strong indicator that
societal and political relevant events were reflected in the projects
or at least mentioned in the comments. As a consequence, Scratch
might not be just a programming platform, but might have the
potential of being a social media channel, which should be a aim
for further research [7]. In addition, there are also strong negative
words like kill(ed) or die, which could be read in the context of
the BLM movement, but might be also related to the project type:
Especially in games, it is often mentioned in the comments that the
game players died very quickly, such as I already died at level 2. The
use of the terms death or kill usually has no pejorative connotation
in this context.

The neutral comments contain expressions of astonishment like
uh and oh, which have to be interpreted depending on the context,
which this analysis does not provide. In addition, the terms gaming
and engineer stand out, which on the one hand refer to the popular
project type game and on the other hand to the type of producer of
a project. Overall, neutral words appear to be of little significance.
We observe in Fig. 1 that words such as make, one, dont, or know
overlap between sentiments, implying that they are not uniquely
assignable or simply context-independent. Since these words are
attributed so little specific information content, they might have to
be ignored for further studies. Often terms also denote ambiguity,
but this seems to be less evident in the projects. Overall, it seems
that positive comments tend to focus on the project in general and
its implementation (good job), while negative comments tend to
focus on the content level of the project. This, however, would need
to be verified in further studies.

RQ2 Summary. The tone in the comments is mostly positive
and mostly specific terminology from youth language is used.
Also, political events like the BLM movement are referenced.

Scratch as Social Network:
Topic Modeling and Sentiment Analysis in Scratch Projects

ICSE-SEIS’22, May 21–29, 2022, Pittsburgh, PA, USA

(a) Terms of negative comments.

(b) Terms of neutral comments.

(c) Terms of positive comments.

Figure 1: Most common terms in Scratch comments classified to their sentiment. The size of the term indicates its frequency.

5 DISCUSSION
We identified topics from pop culture as well as from society in
Scratch projects. The tone of the discussions around these projects
was mostly positive. The intersection of those two aspects are not
only relevant for research purposes, but also for educational use.

5.1 Topics and Sentiment
Since we discovered a rather unexpected variety of topics (RQ1), and
also controversial topics like the BLM movement in the comments
(RQ2), we hypothesize that socially and political controversial top-
ics might be discussed more controversially in the comments in
Scratch. In this context, likes, loves and remixes might be helpful
to determine which project topics are particularly popular and the
extent to which the community approves or disapproves these top-
ics. Our findings in detecting cultural and political topics provide
the foundation for investigating in detail whether Scratch also
represents a political network where different political positions
are present and debated.

In this respect, since we know that gender-specific preferred
themes exist [14] and since we have identified such topics with
shiny and gloomy fantasy worlds (RQ1) in this paper as well, a social
network analysis in combination with our approach would help
to determine whether certain user groups concentrate on certain
topics. In the current discourse on socialization in SE, identifying
influencers of the Scratch community, their range of topics, their
commenting behavior would provide insights into the relationship
between social and programming behavior [27].

5.2 Educational Impact
Similar to social media, it is necessary to understand in Scratch
with what topics and attitudes children and adolescents are en-
gaged or confronted. Since we identified a broad range of diverse
topics in RQ1, we can learn what motivations there actually are
for children to program in Scratch [2, 14] in order to ensure that
children, especially underrepresented groups such as girls, are ini-
tially attracted to introductory courses in the first place and also
to follow up on children’s continued long-term interest after they
have been introduced to Scratch [12].

As the results of RQ2 imply, there is the potential to incorporate
Scratch into the classroom besides CS also for cross-curricular
education, e.g., when discussing politically relevant topics in the
projects and also highlighting different perspectives in the commen-
tary narratives. With regard to digital literacy, which is becoming

increasingly important, the children can be made aware of how so-
cial media operate using the Scratch platform and be familiarized
with real social networks. On the one hand, Scratch can be used
to playfully demonstrate the strengths of social media, e.g., in the
exchange of controversial topics, but also where it is important to
be careful, e.g., with negative comments.

Since we observed some phrases like good job (RQ2), it may be
possible to determine from the comments whether a project receives
a lot of positive or negative feedback and loves and likes primarily
because of its topic, or because of its implementation; this would
be of relevance from a computer science education point of view.
In this context, it is also relevant whether the comments are purely
affective, which may be substantive in terms of mood, but do not
provide any information about the nature and manner of the project,
i.e., whether there is also constructive criticism and suggestions for
improvement of the implementation in the comments.

6 CONCLUSIONS AND FUTURE WORK
In this paper we explored whether social network analysis can be
applied to Scratch. We particularly found topics from net and pop
culture, but there are also references to societal topics, such as the
Covid-19 pandemic. This supports the interpretation of Scratch
not just as a programming language, but also as a segment of society,
which provides many opportunities for further interdisciplinary
studies. For example, likes, loves and remixes could be analyzed
with the aim of determining which topics are particularly liked or
shared. In an educational context, the correlations between project
themes and the degree of experience of the user might be relevant
for introductory courses in computer science didactics. User group-
specific preferences might be identified in order to enable children,
especially girls, to be better supported on an educational level with
regard to their enthusiasm towards programming. Since the topic
modeling was challenging, a supervised machine learning approach
might support more concrete topic classification and predicting
thematically trends on the platform in future research.

ACKNOWLEDGMENTS
This work is supported by the Federal Ministry of Education and Re-
search through project “primary::programming” (01JA2021) as part
of the “Qualitätsoffensive Lehrerbildung”, a joint initiative of the
Federal Government and the Länder. The authors are responsible
for the content of this publication.

ICSE-SEIS’22, May 21–29, 2022, Pittsburgh, PA, USA

Isabella Graßl and Gordon Fraser

REFERENCES
[1] A. Abd-Alrazaq, D. Alhuwail, M. Househ, M. Hamdi, and Z. Shah. 2020. Top
concerns of tweeters during the COVID-19 pandemic: infoveillance study. Journal
of medical Internet research 22, 4 (2020), e19016.

[2] E. Aivaloglou and F. Hermans. 2016. How Kids Code and How We Know: An
Exploratory Study on the Scratch Repository. In Proceedings of the 2016 ACM
Conference on International Computing Education Research (ICER ’16). ACM, New
York, NY, USA, 53–61. event-place: Melbourne, VIC, Australia.

[3] D. Angelov. 2020. Top2vec: Distributed Representations of Topics. arXiv preprint

arXiv:2008.09470 (2020). arXiv:2008.09470

[4] A. Barua, S. W. Thomas, and A. E. Hassan. 2014. What are developers talking
about? An analysis of topics and trends in Stack Overflow. Empirical Software
Engineering 19, 3 (June 2014), 619–654.

[5] M. R. Bhat, M. A. Kundroo, T. A. Tarray, and B. Agarwal. 2020. Deep LDA : A
New Way to Topic Model. Journal of Information and Optimization Sciences 41, 3
(April 2020), 823–834.

[6] A. Bosu, C. S. Corley, D. Heaton, D. Chatterji, J. C. Carver, and N. A. Kraft. 2013.
Building reputation in StackOverflow: An empirical investigation. In 2013 10th
Working Conference on Mining Software Repositories (MSR). 89–92.

[7] N. Carney. 2016. All lives matter, but so does race: Black lives matter and the

evolving role of social media. Humanity & Society 40, 2 (2016), 180–199.

[8] N. Chetty and S. Alathur. 2018. Hate speech review in the context of online social

networks. Aggression and Violent Behavior 40 (May 2018), 108–118.

[9] S. A. Curiskis, B. Drake, T. R. Osborn, and P. J. Kennedy. 2020. An evaluation of
document clustering and topic modelling in two online social networks: Twitter
and Reddit. Information Processing & Management 57, 2 (2020), 102034.

[10] J. Dietrich, M. Luczak-Roesch, and E. Dalefield. 2019. Man vs Machine – A Study
into Language Identification of Stack Overflow Code Snippets. In International
Conference on Mining Software Repositories (MSR). IEEE, Montreal, QC, Canada,
205–209.

[11] H. Fang, D. Klug, H. Lamba, J. Herbsleb, and B. Vasilescu. 2020. Need for Tweet:
How Open Source Developers Talk About Their GitHub Work on Twitter. In
Proceedings of the 17th International Conference on Mining Software Repositories.
322–326.

[12] D. A. Fields, Y. B. Kafai, and M. T. Giang. 2017. Youth Computational Partici-
pation in the Wild: Understanding Experience and Equity in Participating and
Programming in the Online Scratch Community. ACM Trans. Comput. Educ. 17,
3 (Aug. 2017), 15:1–15:22.

[13] P. Ghasiya and K. Okamura. 2021. Investigating COVID-19 News Across Four
Nations: A Topic Modeling and Sentiment Analysis Approach. IEEE Access 9
(2021), 36645–36656.

[14] I. Graßl, K. Geldreich, and G. Fraser. 2021. Data-driven Analysis of Gender
Differences and Similarities in Scratch Programs. In The 16th Workshop in Primary
and Secondary Computing Education. 1–10.

[15] E. Guzman, D. Azócar, and Y. Li. 2014. Sentiment analysis of commit comments
in GitHub: An empirical study. 11th Working Conference on Mining Software
Repositories, MSR 2014 - Proceedings (May 2014).

[16] H. Hosseinmardi, S. A. Mattson, R. I. Rafiq, R. Han, Q. Lv, and S. Mishra.
2015. Detection of Cyberbullying Incidents on the Instagram Social Network.
arXiv:1503.03909 [cs] (March 2015).

[17] Y. Hu, J. Zhang, X. Bai, S. Yu, and Z. Yang. 2016. Influence analysis of Github

repositories. SpringerPlus 5, 1 (Aug. 2016), 1268.

[18] C. Hutto and E. Gilbert. 2014. Vader: A parsimonious rule-based model for
sentiment analysis of social media text. In Proceedings of the International AAAI

Conference on Web and Social Media, Vol. 8.

[19] L. Kristoufek. 2013. BitCoin Meets Google Trends and Wikipedia: Quantifying
the Relationship between Phenomena of the Internet Era. Sci Rep 3, 1 (Dec. 2013),
3415.

[20] Langenscheidt. 2011. Langenscheidt. Hä?? Jugendsprache unplugged. Berlin.
[21] B. Lin, F. Zampetti, G. Bavota, M. Di Penta, M. Lanza, and R. Oliveto. 2018. Senti-
ment analysis for software engineering: how far can we go?. In Proceedings of the
40th International Conference on Software Engineering. ACM Press, Gothenburg,
Sweden, 94–104.

[22] C. Livas, K. Delli, and N. Pandis. 2018. “My Invisalign Experience”: Content, Met-
rics and Comment Sentiment Analysis of the Most Popular Patient Testimonials
on YouTube. Progress in Orthodontics 19, 1 (Jan. 2018), 3.

[23] J. Maloney, M. Resnick, N. Rusk, B. Silverman, and E. Eastmond. 2010. The Scratch
Programming Language and Environment. ACM Transactions on Computing
Education 10, 4 (Nov. 2010), 1–15.

[24] L. Manikonda, G. Beigi, H. Liu, and S. Kambhampati. 2018. Twitter for sparking
a movement, reddit for sharing the moment:# metoo through the lens of social
media. arXiv preprint arXiv:1803.08022 (2018).

[25] B. Mathew, P. Saha, H. Tharad, S. Rajgaria, P. Singhania, S. K. Maity, P. Goyal,
and A. Mukherjee. 2019. Thou shalt not hate: Countering online hate speech. In
Proceedings of the International AAAI Conference on Web and Social Media, Vol. 13.
369–380.

[26] A. May, J. Wachs, and A. Hannák. 2019. Gender differences in participation and
reward on Stack Overflow. Empirical Software Engineering 24, 4 (Aug. 2019),
1997–2019.

[27] J. Moreno-Leon, G. Robles, and M. Roman-Gonzalez. 2016. Examining the Rela-
tionship between Socialization and Improved Software Development Skills in
the Scratch Code Learning Environment. (2016), 25.

[28] N. Novielli, D. Girardi, and F. Lanubile. 2018. A benchmark study on sentiment
analysis for software engineering research. In Proceedings of the 15th International
Conference on Mining Software Repositories - MSR ’18. ACM Press, Gothenburg,
Sweden, 364–375.

[29] N. Novielli and A. Serebrenik. 2019. Sentiment and Emotion in Software Engi-

neering. IEEE Software 36, 5 (Sept. 2019), 6–23.

[30] M. Resnick. 2012. Mother’s Day, Warrior Cats, and Digital Fluency: Stories from

the Scratch Online Community. (2012), 7.

[31] G. T. Richard and Y. B. Kafai. 2016. Blind Spots in Youth DIY Programming:
Examining Diversity in Creators, Content, and Comments within the Scratch
Online Community. In Proceedings of the 2016 CHI Conference on Human Factors
in Computing Systems - CHI ’16. ACM Press, Santa Clara, California, USA, 1473–
1485.

[32] N. F. Velasquez, D. A. Fields, D. Olsen, T. Martin, M. C. Shepherd, A. Strommer, and
Y. B. Kafai. 2014. Novice Programmers Talking about Projects: What Automated
Text Analysis Reveals about Online Scratch Users’ Comments. In 2014 47th Hawaii
International Conference on System Sciences. 1635–1644. ISSN: 1530-1605.
[33] X. Wang, C. Zou, Z. Xie, and D. Li. 2020. Public Opinions towards COVID-19
in California and New York on Twitter. preprint. Infectious Diseases (except
HIV/AIDS).

[34] H. Watanabe, M. Bouazizi, and T. Ohtsuki. 2018. Hate speech on twitter: A
pragmatic approach to collect hateful and offensive expressions and perform
hate speech detection. IEEE access 6 (2018), 13825–13835.

[35] G. Weimann and N. Masri. 2020. Research Note: Spreading Hate on TikTok.
Studies in Conflict & Terrorism 0, 0 (June 2020), 1–14. Publisher: Routledge.

