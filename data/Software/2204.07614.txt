To be presented at IEEE ICDCS, Bologna, Italy, July 10-13, 2022.

DeepCSI: Rethinking Wi-Fi Radio Fingerprinting
Through MU-MIMO CSI Feedback Deep Learning

Francesca Meneghello∗ , Michele Rossi∗†

, and Francesco Restuccia§

∗ Department of Information Engineering, University of Padova, Italy
† Department of Mathematics, University of Padova, Italy
§ Institute for the Wireless Internet of Things, Northeastern University, United States
e-mail: meneghello@dei.unipd.it, michele.rossi@unipd.it, frestuc@northeastern.edu

2
2
0
2

r
p
A
5
1

]
I

N
.
s
c
[

1
v
4
1
6
7
0
.
4
0
2
2
:
v
i
X
r
a

Abstract—We present DeepCSI, a novel approach to Wi-Fi
radio ﬁngerprinting (RFP) which leverages standard-compliant
beamforming feedback matrices to authenticate MU-MIMO
Wi-Fi devices on the move. By capturing unique imperfections
in off-the-shelf radio circuitry, RFP techniques can identify
wireless devices directly at the physical
layer, allowing low-
latency low-energy cryptography-free authentication. However,
existing Wi-Fi RFP techniques are based on software-deﬁned
radio (SDRs), which may ultimately prevent their widespread
adoption. Moreover,
it is unclear whether existing strategies
can work in the presence of MU-MIMO transmitters – a key
technology in modern Wi-Fi standards. Conversely from prior
work, DeepCSI does not require SDR technologies and can be
run on any low-cost Wi-Fi device to authenticate MU-MIMO
transmitters. Our key intuition is that imperfections in the
transmitter’s radio circuitry percolate onto the beamforming
feedback matrix, and thus RFP can be performed without
explicit channel state information (CSI) computation. DeepCSI
is robust to inter-stream and inter-user interference being the
beamforming feedback not affected by those phenomena. We
extensively evaluate the performance of DeepCSI through a
massive data collection campaign performed in the wild with
off-the-shelf equipment, where 10 MU-MIMO Wi-Fi radios emit
signals in different positions. Experimental results indicate that
DeepCSI correctly identiﬁes the transmitter with an accuracy of
up to 98%. The identiﬁcation accuracy remains above 82% when
the device moves within the environment. To allow replicability
and provide a performance benchmark, we pledge to share the
800 GB datasets – collected in static and, for the ﬁrst time,
dynamic conditions – and the code database with the community.

I. INTRODUCTION AND MOTIVATION
The sheer expansion of Internet of Things (IoT) is rapidly
saturating unlicensed spectrum bands [1]. With the global
mobile data trafﬁc projected to reach 164 exabytes per month
in 2025 [2], spectrum congestion will soon decrease data
throughput to intolerable levels. To alleviate the issue, the Fed-
eral Communication Commission (FCC) has recently released
150 MHz additional bandwidth in the 3.5 GHz spectrum band
[3], as well as 1.2 GHz in the 6 GHz band (5.925–7.125), the
latter providing opportunities to use up to 320 MHz channels
to expand capacity and increase network performance [4].

The release of these spectrum bands for unlicensed use
implies that previously licensed users (also known as in-
cumbents), unlicensed Wi-Fi devices [5] and 5G cellular
networks [6] will need to coexist in the same spectrum bands.
This will necessarily require the enactment of strict, ﬁne-
grained dynamic spectrum access (DSA) rules [7], which will
require spectrum administrators to continuously monitor which
unlicensed Wi-Fi device is using the spectrum, and when the

device is using it. To this end, cryptography-based techniques
are substantially unfeasible in this context, since a spectrum
observer should possess the private keys exchanged among all
the nodes in the network, which is unrealistic.

On the other hand, radio ﬁngerprinting (RFP) has attracted
signiﬁcant attention as reliable and effective spectrum-level
authentication technique [8–14]. RFP leverages naturally-
occurring circuitry imperfections to compute a unique “ﬁn-
gerprint” of the device directly at the waveform level [15].
Although RFP for physical layer (PHY) Wi-Fi authentica-
tion has been explored, existing approaches require software-
deﬁned radio (SDR) devices to extract RFP features. This
may ultimately prevent widespread adoption, since SDRs
require expert knowledge and are usually more expensive
than off-the-shelf devices. Moreover, existing work has tackled
Wi-Fi ﬁngerprinting up to the legacy 802.11a/g/b standards,
which do not support multi-input, multi-output (MIMO) tech-
niques. However, newer Wi-Fi releases such as 802.11ac/ax
and the upcoming 802.11be will heavily rely on multi-user
MIMO (MU-MIMO) techniques to deliver signiﬁcantly higher
throughput than previous standards [16–18]. Thus, it is still
unknown whether existing RFP strategies can be applied in
the signiﬁcantly more complex MU-MIMO scenario, where
inter-user interference (IUI) and inter-stream interference (ISI)
can signiﬁcant decrease the quality of the ﬁngerprint itself.

Fig. 1: Main operations of DeepCSI. The beamformer’s ﬁngerprint can be
independently extracted from the feedback of any beamformee.

To ﬁll the current research gap, in this paper we propose
DeepCSI, a brand-new technique for RFP of Wi-Fi devices
which is summarized in Fig. 1. The core intuition behind
DeepCSI is that
the circuitry imperfections in the trans-
mitter’s radio interface will percolate onto the MU-MIMO
channel state information (CSI) feedback sent by the receiver
to the transmitter to perform beamforming. By demodulating
this PHY-level information and performing deep learning tech-

1

MU-MIMOWi-Fi TransmitterMU-MIMO CSI FeedbackDeepCSIDSPDeepCSITrainingDeepCSITestingDeepCSIReal-TimeInferenceWi-FiTransmitterAuthentication 
 
 
 
 
 
niques on a processed version of the feedback, an observer can
ﬁngerprint the transmitter without the need of SDR capabili-
ties. Note that the observer can leverage the feedback from any
beamformee associated with the target beamformer to compute
the beamformer’s ﬁngerprint. The key advantage is that our
technique is not affected by ISI nor by IUI – see Section II-A.
As pointed our earlier, the effect of IUI and ISI may prevent
the correct devices’ authentication. We stress that previous
work only considered non-MIMO transmissions where IUI/ISI
are not present and, in turn, the plain CSI information sufﬁces
to perform RFP. On the other hand, the core concern of
performing RFP without direct CSI access is that it is unknown
whether the imperfections will actually percolate onto the
beamforming feedback matrix. In this context, it is crucial
to evaluate the PHY ﬁngerprinting techniques as a function of
different channels and different transmitter-receiver positions,
since these can signiﬁcantly undermine the ﬁngerprint [14].

•

•

To summarize, this paper makes the following contributions:
We propose DeepCSI, the ﬁrst approach to perform RFP
of MU-MIMO Wi-Fi devices. DeepCSI uses deep learning
of the standard-compliant beamforming matrices to learn the
device-unique imperfections located in the CSI and authenti-
cate MU-MIMO Wi-Fi devices directly at the PHY layer. The
core intuition is that imperfections in the transmitter’s radio
circuitry are also present in the beamforming feedback matrix
that is transmitted in clear text. Thus, conversely from prior
work, explicit CSI computation through SDR technologies are
not needed and DeepCSI can be run on any low-cost Wi-Fi
device. Through DeepCSI an observer can leverage the beam-
forming feedback matrix from any beamformee – one at a time
– associated with the beamformer to be authenticated. Given
the small memory footprint, the trained learning algorithm
can be run to perform the online inference on low-cost Wi-Fi
devices, e.g., laptops, without the need for powerful facilities.
We extensively evaluate the performance of DeepCSI
through a massive data collection campaign performed in the
wild with off-the-shelf equipment, where 10 Wi-Fi radios emit
MU-MIMO signals to multiple receivers located at different
positions (and thus, with different beam patterns). Experimen-
tal results indicate that DeepCSI is able to correctly identify
the transmitter with an accuracy above 98%, which shows that
RFP of MU-MIMO devices can be performed leveraging the
CSI beamforming feedback matrices. We evaluate the impact
of the feedback quantization error on the performance – where
quantization is applied for transmission efﬁciency reasons as
per the Wi-Fi standards [19, 20] – observing an accuracy
increase of up to 63% when changing the feedback PHY
parameters. We show that DeepCSI achieves at least 17%
more accuracy than methods based on CSI phase cleaning,
since the latter partially remove the imperfections due to
the hardware circuitry. Finally, we evaluate the beamformer
identiﬁcation accuracy on the move where DeepCSI achieves
an accuracy above 82%. We pledge to share our code and
800 GB datasets with the community, which will allow
replicability and provide a performance benchmark to
other researchers in the ﬁeld [21].

II. BACKGROUND, RELATED WORK, AND CHALLENGES

Thanks to their capability of identifying transmitters without
the need of computation-hungry cryptography techniques, RFP
techniques have received a signiﬁcant amount of attention
from the research community [9–11, 13, 22]. While early
work has demonstrated the feasibility of RFP, it has focused
on the extraction of complex hand-tailored features, which
do not scale well with the device population, or work in
ad hoc propagation settings only. Among the ﬁrst works on
Wi-Fi-speciﬁc RFP, Vo et al. [13] propose RFP techniques
that extract features from the scrambling seed, the level of
frequency offset and transients between symbols. However,
the models achieve accuracy up to 50% on 100 devices. The
authors in [9], instead, demonstrated that up to 54 ZigBee
devices can be ﬁngerprinted with about 95% accuracy through
PSK transients. More recently, Zheng et al. [8] studied and
evaluated in a testbed of 33 devices a model-based approach to
summarize imperfections in the modulation, timing, frequency
and power ampliﬁer noise. It is not clear, however, whether the
approach in [8] generalizes to different channel environments.
In stark contrast with early work, recent RFP papers have
leveraged deep learning techniques to ﬁngerprint wireless
devices [12, 23–26]. A key advantage of deep learning tech-
niques is that they are able to perform feature extraction and
classiﬁcation at the same time, thus avoiding manual extraction
of device-distinguishing features. For example, Das et al. [26]
and Merchant et al. [25] deep neural networks (DNNs) achieve
more than 90% accuracy with a population of 7 ZigBee
devices and 30 LoRa devices. To further increase accuracy,
[12, 24] proposed the introduction of artiﬁcial impairments
at
the transmitter’s side. However, without compensation,
this approach inevitably increases the bit error rate (BER).
The usage of complex-valued convolutional neural networks
(CNNs) has been explored by Gopalakrishnan et al. [27], while
in [23] and [28] the authors propose the usage of ﬁnite impulse
response (FIR) ﬁlters to compensate for the adverse action
of the wireless channel on the ﬁngerprinting accuracy. The
key limitation of existing work is that it is entirely based on
SDRs, which is very specialized, expensive equipment that is
not widely available in common Wi-Fi networks. Moreover, to
the best of our knowledge, no prior work has tackled the issue
of assessing whether RFP is feasible in MU-MIMO Wi-Fi
networks. In this work, we address both issues at once by
presenting DeepCSI, a framework that (i) can be run on any
off-the-shelf Wi-Fi-compliant device, and (ii) can accurately
ﬁngerprint MU-MIMO devices. We evaluate the performance
of DeepCSI in static and – for the ﬁrst time – dynamic
conditions, assessing the robustness of the learned ﬁngerprint
to changing transmission channel characteristics.

A. Challenges of MU-MIMO Fingerprinting

Performing RFP of devices operating in downlink (DL)
MU-MIMO mode is signiﬁcantly more challenging than RFP
of devices operating with omnidirectional antennas. First,
transmissions are inevitably impaired by imperfect beamform-
ing weights that do not accurately compensate the wireless

2

channel. Secondly, (i) inter-stream interference (ISI) occurs
between streams transmitted to the same receiver, and (ii)
inter-user interference (IUI) affects streams directed to differ-
ent receivers. The time-varying behavior of both ISI and IUI
complicates the identiﬁcation of the device-speciﬁc imperfec-
tions. Moreover, it has been shown in prior work that the RFP
process may be adversely impacted by the presence of the
wireless channel [12, 14]. This reasoning led us to design a
different approach for extracting effective radio ﬁngerprints.
Speciﬁcally, we use the beamforming feedback matrix ˜V
described in Section III-B. The matrix ˜V is estimated based
on the very high throughput (VHT)-long training ﬁelds (LTFs)
of the null data packet (NDP) that is sent in broadcast mode
without being beamformed. Moreover,
the VHT-LTFs are
sent over the different antennas in subsequent time slots of
in turn, ˜V, are not
the NDP and,
4 µs each. Therefore,
affected by IUI nor by ISI. However, since the feedback
matrix is quantized before transmission, quantization errors
are inevitable. In Section V, we analyze the effect of the
quantization error and investigate the generalization capability
of our RFP approach to multiple channels and beamformee
positions, and to beamformer’s mobility.

†

III. THE DE E PCSI FRAMEWORK
Henceforth, we will adopt the following notation for math-
ematical expressions. The superscripts T and
respectively
denote the transpose and the Hermitian of a matrix, i.e., the
complex conjugate transpose. By ∠C, we refer to the matrix
whose elements are the phases of the corresponding elements
in the complex-valued matrix C. diag(c1, . . . , cj) indicates
the diagonal matrix with elements (c1, . . . , cj) on the main
.
diagonal. The (c1, c2) entry of matrix C is denoted by [C]c1,c2
Finally, Ic refers to a c
d
×
matrix with ones on the main diagonal and zeros elsewhere.
A. Preliminaries on MU-MIMO in Wi-Fi

c identity matrix while Ic×d is a c

×

In the following, we will consider Wi-Fi devices operating
with the IEEE 802.11ac (Wi-Fi 5) standard and 802.11ax
(WiFi 6 and 6E) [19, 20]. These devices operate on the
2.4 GHz, 5 GHz and 6 GHz frequency bands with chan-
nels having up to 160 MHz of bandwidth. In Wi-Fi, data
is transmitted via orthogonal frequency-division multiplexing
(OFDM) by dividing the selected channel into K partially
overlapping and orthogonal sub-channels, spaced apart by
1/T . The input bits are grouped into OFDM samples, ak,
and symbols, a = [a−K/2, . . . , aK/2−1], collecting K samples
each. After being digitally modulated, the K samples of one
OFDM symbol are simultaneously transmitted though the K
OFDM sub-channels, occupying the channel for T seconds.
Up-converted to the carrier fc, the transmitted signal is

stx(t) = ej2πfct

K/2−1
(cid:88)

k=−K/2

akej2πkt/T .

(1)

To improve the signal-to-noise ratio (SNR), the transmitter
can use beamforming to focus the power toward the intended
receiver. The beamforming may also compensate the effect of

the wireless channel from the transmitter (beamformer) to the
receiver (beamformee). When both devices in the communi-
cation link are equipped with antenna arrays (MIMO system),
each pair of transmitter and receiver antennas forms a physical
channel that can be exploited for wireless communication.
This spatial diversity allows shaping multiple beams, referred
to as spatial streams,
to transmit different signals to the
beamformee, in a parallel fashion. To this end, the signals are
combined at each transmitter antenna through steering weights,
W, derived from the channel frequency response (CFR) matrix
H. The CFR needs to be estimated for every OFDM sub-
channel over each pair of transmitter (TX) and receiver (RX)
antennas, thus obtaining a K
N matrix, where M
and N are respectively the number of TX and RX antennas.
In Fig. 2 we report an example of beamforming for a 3
2
MIMO system. At the beamformee side, the original signals
are retrieved from their combination exploiting the fact that,
ideally, [H]¯(cid:96),¯i[W](cid:96),i = 0 when ¯(cid:96)

= (cid:96) or ¯i

= i.

M

×

×

×

Fig. 2: 3 × 2 MIMO system. The grey triangles represent the antennas. s1, s2
and r1, r2 stand for the transmitted and received signals respectively. W is
the steering matrix containing the weights to shape the beams. H is the CFR.
A meaningful model for the CFR H in indoor spaces
is obtained by considering the proprieties of the wireless
propagation. After being irradiated by the transmitter antenna
, the signal is reﬂected by objects in the
m
environment and, in turn, P different copies of stx(t) are
. Each
collected at the receiver antenna n
}
received signal is characterized by an attenuation Ap and a
delay τp that depends on the length of the path followed by
the transmitted wave. Thus, the (k, m, n) element of H is

0, . . . , M

0, . . . , N

1
}

∈ {

∈ {

−

−

1

[H]k,m,n =

P −1
(cid:88)

p=0

Am,n,pe−j2π(fc+k/T )τm,n,p .

(2)

By knowing H, the beamformer can generate the steering
matrix W to maximize the power sent toward the beamformee
or simultaneously send parallel data streams to multiple
beamformees. These communication modes are respectively
referred to as single-user MIMO (SU-MIMO) and MU-MIMO.
in
While IEEE 802.11n only supports SU-MIMO mode,
802.11ac and above MU-MIMO can be enabled in the DL
direction, i.e., at the access point (AP) side [19]. In 802.11ax
MU-MIMO can be also enabled in the uplink (UL) [20].

3

MIMO TX BeamformerMIMO RX BeamformeeMIMOChannel[H]1,1[H]1,2[H]2,2[H]2,1[H]3,1[H]3,2s1s2r2r1[W]1,1[W]1,2[W]2,2[W]2,1[W]3,1[W]3,2(cid:54)
(cid:54)
B. Compressed Beamforming Feedback

In IEEE 802.11ac/ax, DL MU-MIMO is enabled by the pre-
coding and the channel sounding procedures [19]. Pre-coding
linearly combines the signals to be simultaneously transmitted
to the different beamformees. This procedure shapes the beams
focusing the power in the correct directions. The combination
weights are antenna-speciﬁc and are computed based on chan-
nel sounding performed through a NDP, transmitted without
beamforming. After receiving the NDP, each beamformee
estimates H based on a VHT-LTF for each spatial stream.
Next, the beamformee feeds back the matrix to the beamformer
in the form of a compressed beamforming feedback, which is
computed for each sub-channel k as follows.

Let Hk be the M

N sub-matrix of H containing the CFR
samples (see Eq. (2)) related to sub-channel k. Hk is ﬁrst
decomposed via singular value decomposition (SVD):

×

×

×

×

(3)

HT

N and M

k = UkSkZ†
k,
where Uk and Zk are, respectively, N
M unitary
M diagonal matrix collecting
matrices, while Sk is an N
N columns of
the singular values. Next, the ﬁrst NSS ≤
Zk are extracted to form the complex-valued beamforming
matrix Vk that is used by the beamformer to compute the
pre-coding weights for the NSS spatial streams directed to
the beamformee. Note that the beamformee can be served
with at maximum NSS = N spatial streams (see Chapter 13
of [29]). Thus, the beamformee is required to send back Vk
to the beamformer. To do that efﬁciently, instead of sending
the complete matrix, the beamformee derives and transmits
its compressed representation. Speciﬁcally, the feedback is
a number of angles obtained by converting Vk into polar
coordinates. The transformation is based on the procedure in
Algorithm 1, where Dk,i and Gk,(cid:96),i are deﬁned as

Dk,i =











Ii−1
0

...

0

0
ejφk,i,i

0
...

. . .

0
. . .

0

. . .

. . .

0

ejφk,M −1,i
0

. . .

Gk,(cid:96),i =









Ii−1
0
...
0

0
cos ψk,(cid:96),i
0
sin ψk,(cid:96),i
. . .

−

0
I(cid:96)−i−1
0

sin ψk,(cid:96),i
0
cos ψk,(cid:96),i
0

The obtained matrices allows rewriting Vk as

Vk = ˜Vk ˜Dk,


0
...






0

1

,

(4)

0
...
0
IM −(cid:96)









.

(5)

(6)

with

min(NSS,M −1)
(cid:89)

˜Vk =

i=1

(cid:32)

Dk,i

M
(cid:89)

l=i+1

(cid:33)

GT

k,l,i

IM ×NSS ,

(7)

where the products represent matrix multiplications. Note that,
by construction, the last row of the complex-valued ˜Vk matrix,

4

×

M

∈ {−

K/2, . . . , K/2

i.e., the feedback for the M -th transmitter antenna, consists of
non-negative real numbers. Next, the K
NSS beam-
forming matrix ˜V is obtained by stacking the ˜Vk matrices for
. Thanks to this transformation,
k
the beamformee is only required to transmit the φ and ψ
angles from which the ˜Vk matrices can be reconstructed. The
beamforming performance is equivalent at the beamformee
when using Vk or ˜Vk to construct the steering matrix W
and, in turn, the feedback for ˜Dk is not sent [29].

1
}

×

−

Algorithm 1 Vk matrix decomposition

Input: Vk
Output: Dk,i and Gk,(cid:96),i for i ∈ {1, . . . , min(NSS, M − 1)},
(cid:96) ∈ {i + 1, . . . , M }
˜Dk = diag(ej∠[Vk]M,1 , . . . , ej∠[Vk]M,NSS )
Ωk = Vk ˜D†
k
for i ← 1 to min(NSS, M − 1) do

φk,(cid:96),i = ∠ [Ωk](cid:96),i with (cid:96) = i, . . . , M − 1
compute Dk,i through Eq. (4)
Ωk ← D†
k,iΩk
for (cid:96) ← i + 1 to M do

(cid:18)

(cid:19)

ψk,(cid:96),i = arccos

[Ωk]i,i
i,i+[Ωk]2
(cid:96),i
compute Gk,(cid:96),i through Eq. (5)
Ωk ← Gk,(cid:96),iΩk

[Ωk]2

(cid:113)

The angles are quantized for transmission using bφ ∈ {
7, 9
}
2 bits for ψ. Next, the quantized
bits for φ and bψ = bφ −
values are packed into the VHT compressed beamforming
frame and transmitted without encryption, thus allowing any
device that can access the wireless channel to capture the
information sent by the beamformee to the beamformer. The
bφ and bψ values can be read in the VHT MIMO control ﬁeld
of the frame, together with other information including the
number of columns (NSS) and rows (M ) in the beamforming
matrix and the channel bandwidth. At the beamformer, the
φ and ψ angles are retrieved from their quantized versions
qφ =

1

0, . . . , 2bφ
{
(cid:20)

1
}

and qψ =
(cid:19)

[φ, ψ] =

qφ
2bφ−1
C. DeepCSI Workﬂow and Learning Architecture

, π

+

π

0, . . . , 2bψ
{
(cid:18) 1

−
2bψ+2 +

}
qψ
2bψ+1

using
(cid:19)(cid:21)

−
(cid:18) 1
2bφ

(8)

Fig. 3 summarizes how DeepCSI leverages the sounding
protocol mechanism described in Section III-B to obtain a
ﬁngerprint of the IEEE 802.11ac/ax AP (beamformer). The
sounding is triggered by the beamformer before sending data
in DL MU-MIMO mode to the beamformees, and concludes
with the transmission of the feedback angles. DeepCSI
exploits the fact that the angles can be easily collected by
any Wi-Fi compliant device by setting the Wi-Fi interface
in monitor mode and using a network analyzer toolkit, e.g.,
Wireshark [30], to capture the packet containing the feedback.
Notice that DeepCSI does not require the monitor device
to be authenticated with the target AP. Once obtained the
feedback angles, DeepCSI reconstructs ˜V through Eq. (7).
Next, the beamforming feedback matrix is used as input for

Fig. 3: DeepCSI workﬂow. The compressed beamforming feedback com-
puted by any of the beamformees as the ﬁnal step of the sounding protocol
is leveraged by DeepCSI to obtain a ﬁngerprint of the beamformer.

time for device authentication at

the DNN classiﬁer depicted in Fig. 4 to extract the RFP of
the beamformer. Once trained, the DNN can be deployed
and utilized in real
the
PHY level. The observer can leverage the feedback from any
beamformee associated with the target beamformer to compute
a beamformer’s ﬁngerprint. In turn, DeepCSI is independent
of the number of terminals connected to the AP. Moreover,
different ﬁngerprints can be obtained for the same beamformer
and can be indifferently used to authenticate the device.

The elements of the feedback matrix are fed to the DNN
as follows. The I/Q components of the beamforming feed-
back are stacked into an Nrow ×
Nch matrix, where
Ncol ×
K identiﬁes the number of selected OFDM sub-
Ncol ≤
NSS and Nch < 2M refer to the columns
channels, Nrow ≤
and rows of ˜V used for ﬁngerprinting and the 2-factor is
for the I/Q components. Note that the feedback for the last
transmitting antenna consists of the sole I information as, by
construction, the last row of each ˜Vk (Eq. (7)) is composed
of non-negative real values [19]. The learning architecture is
inspired from [31] and consists of a series of Nconv convolu-
tional layers followed by selu activation function [32], and
by a max-pooling layer. The output of the previous block (in
blue and green in Fig. 4) is forward through an attention block
and – after being ﬂattened – is processed by Ndense dense
layers with selu activation function. A ﬁnal dense layer with
softmax activation is used for classiﬁcation. Alpha-dropout
layers are interposed between the dense layers. The attention
block is inspired by the spatial attention module in [33]. First,
the maximum and the average feature maps are obtained by
computing respectively the maximum and the mean of the
input feature maps over the channel dimension. Next, the two
maps are concatenated and forwarded through a convolutional
layer with sigmoid activation function that outputs the
weights to attend the input feature maps. Speciﬁcally, the
attention operation consists in multiplying the input by the
computed weights. A skip connection is also implemented by
summing the output of the attention block with its input before
passing the result to the subsequent dense layers. Thanks to the

5

Fig. 4: DeepCSI learning algorithm. The I and Q components of ˜V serves as
input for a neural network classiﬁer that computes the beamformer ﬁngerprint
and returns, as output, the estimated Wi-Fi module ID.

attention block, the algorithm learns where the most relevant
information is located within the feature maps. This allows
the network to focus on the relevant regions obtaining a more
effective ﬁngerprint.

We performed hyper-parameter evaluation in Section V,
and established through experiments that a good set of hyper
parameters is Nconv = 5 with 128 ﬁlters each, and Ndense = 2
dense layers with 128 and 64 neurons each. This architecture
yields a DNN containing 489,301 trainable parameters, which
is relatively small compared to state-of-the-art DNNs. The
DeepCSI learning algorithm is trained in an ofﬂine fashion by
back propagating the cross-entropy loss between the module
identiﬁer (ID) predicted by the classiﬁer and the actual one.

IV. EXPERIMENTAL SETUP

}

∈ {

1, 2

We evaluate the effectiveness of DeepCSI using off-the-
shelf devices and through extensive experimental evaluation.
To this end, we set up a Wi-Fi network consisting of one AP
(beamformer) and two stations (STAs) (beamformees). The AP
was implemented through a Gateworks GW6200 single board
computer (SBC) equipped with a Compex WLE1216v5-23
IEEE 802.11ac module, as shown in Fig. 5. Two Netgear
Nighthawk X4S AC2600 routers, with N
out
of 4 antennas enabled, acted as STAs (beamformees). At
the AP, M = 3 antennas were used to sound the channel
for DL MU-MIMO transmission mode and the STAs were
spatial streams each. Note that
served with NSS ∈ {
implementation speciﬁc constraints prevent the use of M = 4
for DL MU-MIMO. For the data transmission between the
AP and the STAs, we used channel 42, i.e., fc = 5.21 GHz
with 80 MHz bandwidth. The number of OFDM sub-channels
sounded is K = 234 as the mechanism does not consider the
14 control sub-channels and the 8 pilot ones. The AP uses
the quantization parameters bφ = 9 and bψ = 7 for φ and ψ
feedback angles, respectively. We generated UDP trafﬁc in the
DL direction to induce the AP to trigger the channel sounding
mechanism, and collected the angles (φ, ψ) that were sent back
by the beamformees using the Wireshark network analyzed
toolkit [30] running on an off-the-shelf laptop equipped with

1, 2

}

BeamformeesDL MU-MIMO Beamformer•Estimate•Compute•Compute feedback anglesNDP21Compressed beamforming feedback3MIMOChannel•Capture feedback angles•Reconstruct•Extract beamformer fingerprint trough CNN˜VVH058117175233sub-channelindex 101I058117175233sub-channelindex 101Q058117175233sub-channelindex 101I058117175233sub-channelindex 101Q058117175233sub-channelindex 101IModule IDConvolutional LayerMax-Pooling Dense LayerI/Q components of ˜V⇥NDense⇥NConvAttention BlockFig. 5: DL MU-MIMO enabled Wi-Fi AP (beamformer). The Compex
WLE1216v5-23 Wi-Fi module was mounted on a Gateworks GW6200 SBC
platform. Four antennas were connected to the Wi-Fi module.

an IEEE 802.11ac Wi-Fi card. This allows retrieving the
˜V matrices associated with each sounding operation, and
computing the beamformer ﬁngerprint (see Section III-C).

Two datasets – namely D1 and D2 – were collected. As
for the former, the STAs were deployed at different positions
as depicted in Fig. 6 to generate different beam patterns and
different SNR regimes. The number of enabled antennas is
N = 2 for each beamformee and each of them is served with
NSS = 2 spatial streams. Dataset D1 allows evaluating the
performance of DeepCSI in different static conditions. The
purpose of dataset D2 is to evaluate the impact of mobility in
the beamformer identiﬁcation. The data were collected while
the AP was manually moved following the path described
in Fig. 6 by the yellow stars A-B-C-D-B-A, entailing both
vertical and horizontal movements. Here, N = NSS = 1 for
the ﬁrst beamformee and N = NSS = 2 for the second. The
datasets were collected in two different indoor environments
reproducing the same conﬁguration depicted in Fig. 6. This
allows evaluating the general applicability of the developed
algorithm in recognizing the beamformer in the wild.
We pledge to share our datasets with the community for
reproducibility and benchmarking purposes [21].

A. Datasets Structure

The datasets consist of the beamforming feedback angles
associated with Nmodules = 10 different Compex Wi-Fi
modules, which are the target of the proposed ﬁngerprinting
mechanism. They are collected in two indoor environments
where the three entities constituting the experimental Wi-Fi
network are placed as shown in Fig. 6 and no obstacles are
present between the AP and the STAs. At the AP, the SBC,
the antennas and the coaxial cables remain the same across all
the considered network setups, by only changing the Compex
Wi-Fi module. This ensures that the ﬁngerprint procedure only
relies on the hardware imperfections of the Wi-Fi module.

For the static dataset D1, we collected 9 different measure-
ments for each Compex module by keeping it ﬁxed in position
A and changing the positions of the STAs. Speciﬁcally, the
beamformees are ﬁrst placed in front of the beamformer,
i.e., with an angle of arrival (AoA) for the direct path of
nearly zero degrees, and next moved of multiples of 10 cm
respectively to the left and to the right with respect to their

Fig. 6: Indoor environment conﬁguration. For dataset D1, the position of the
AP remains the same for all the acquisitions (yellow star A). The beamformees
are ﬁrst placed in front of the AP and next, for each new experiment,
beamformees 1 and 2 are respectively moved 10 cm to the left and 10 cm to
the right. The subsequent positions of the beamformees are marked with red
and blue stars respectively and labeled with a number ∈ {1, . . . , 9}. For the
dynamic dataset D2, the beamformees remain ﬁxed in position 3 while the
AP moves following the path described by the yellow stars A-B-C-D-B-A.

initial position (see the colored stars in Fig. 6). The positions
of the STAs are maintained ﬁxed for the entire duration of
each measurement. These conﬁgurations allow obtaining data
associated with different beam shaping for the ongoing DL
MU-MIMO transmissions. Overall, we collected 90 traces, i.e.,
9 traces for each of the 10 Compex Wi-Fi modules.

As for the dynamic dataset D2, we collected 11 mea-
surements for each Compex module. Four measurements are
collected with the AP ﬁxed in position A. The remaining
seven traces are collected while moving the AP following the
path described above, i.e., ﬁrst, the AP is moved 80 cm from
position A toward the beamformees reaching position B, next
is shifted 80 cm to the left and subsequently 160 cm to the
right – up to positions C and D respectively – and ﬁnally it is
brought back in position A passing from B. The beamformees
are kept ﬁxed in position 3. This dataset allows evaluating
the performance of DeepCSI in the presence of beamformer
mobility. Overall, it consists of 11 traces for each of the 10
Compex Wi-Fi modules for a total of 110 traces.

Each trace contains the feedback angles sent by the two
beamformees during two minutes of transmission. Such feed-
backs can be promptly grouped based on the beamformee
identiﬁer by applying a ﬁlter on the packets source address.

B. DeepCSI Training and Testing Procedure

The DeepCSI classiﬁer (see Fig. 4) was trained using
different PHY conﬁgurations, to evaluate its robustness in
correctly identifying the beamformer device (the AP) as the
position of the beamformees change – dataset D1 – and when
the beamformer moves within the environment – dataset D2.
Table I summarizes the different training/testing sets that
were considered for dataset D1, where the beamformees
positions are depicted in Fig. 6. When the same positions are

6

CompexWi-Fi moduleGateworks SBCAntennas1    2    3    4    5    6    7    8    9  9    8    7    6    5    4    3    2    1  APGateworksSBC +Compex WiFi module3 m2.6mBEAMFORMEE 1Netgear X4S AC26001.5 mBEAMFORMEE 2Netgear X4S AC26000.1 m0.8mBACD0.8m0.8mbeamformees position

1

2

3

training
6
5
4

7

8

9

1

2

3

testing
5
4

6

7

8

9

set

S1
S2
S3

TABLE I: Dataset D1, training/testing sets to assess the DeepCSI perfor-
mance when varying the beamformees position in {1, . . . , 9} (see Fig. 6).

measurement group identiﬁer

training

testing

ﬁx1

ﬁx2 mob1 mob2

ﬁx1

ﬁx2 mob1 mob2

set

S4
S5
S6

TABLE II: Dataset D2, training/testing sets. ‘Fix1’ and ‘ﬁx2’ group two static
traces each, i.e., the AP is ﬁxed in position A (see Fig. 6). ‘Mob1’ and ‘mob2’
contain respectively four and three mobility traces, i.e., collected while the
AP is manually moved following the path detailed in Fig. 6.

considered in the training and testing phase, the ﬁrst 80% of
the collected data is used for training and validating the model,
while the remaining 20% serves as test data. In all cases, the
last 20% of training data is used for model validation. As part
of our evaluation, we also assess the performance of DeepCSI
on ˜V sub-matrices. This makes it possible to evaluate the
impact of using (i) different groups of transmitter antennas
and spatial streams, and (ii) different portions of the radio
spectrum. For (i), we vary Nch and Nrow. For (ii), we pick a
subset of the K available sub-channels.

The training/test sets considered for dataset D2 are detailed
in Table II. For ease of readability, we combined the eleven
traces composing the dataset into four groups. ‘Fix1’ and
‘ﬁx2’ collect the four traces – two traces each – acquired
keeping ﬁxed the position of the AP. The mobility traces
– i.e., collected while the AP is manually moved in the
environment – are grouped in ‘mob1’ and ‘mob2’, where the
ﬁrst group contains four measurements while the remaining
three traces compose the second group. Note that the mobility
traces encode variations associated with the manual movement
of the AP. This implies that the positions taken by the AP
during the acquisition of the traces are approximately the same
due to slight variations in the movements. Moreover, a person
is always present in the proximity of the AP to perform the
operation, introducing additional variability.

For each conﬁguration, DeepCSI is independently trained
on the feedbacks from the two beamformees, obtaining one
model for each of them. In this way, we evaluate a realis-
tic usage scenario where each beamformee authenticates the
beamformer based on local information, without relying on
some other, possibly malicious, entities. The results consider-
ing both the beamformees are also reported for completeness.

V. EXPERIMENTAL RESULTS
DeepCSI was experimentally evaluated on the Wi-Fi net-
work setups of Tables I and II, assessing the effectiveness of
the extracted beamformer ﬁngerprint for different beamformer
and beamformees conﬁgurations. We ﬁrst brieﬂy discuss the

(a) DeepCSI accuracy by varying
the number of convolutional layers,
with 128 ﬁlters each, from 2 to 7.
Fig. 7: DeepCSI accuracy for beamformer 1, on S1 validation data, by
varying the DNN parameters.

(b) DeepCSI accuracy by using 5
conv. layers and varying the no. of
ﬁlters in each layer, from 16 to 256.

0

0.5

1

0

0.5

1

0

0.5

1

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2
4
Predicted ID

6

8

0

2
4
Predicted ID

6

8

0

2
4
Predicted ID

6

8

(a) S1. Acc. 98.02%

(b) S2. Acc. 75.41%
Fig. 8: Confusion matrices for beamformee 1, 3 TX antennas, spatial stream 0.
ID in this and in the following plots refers to the AP Wi-Fi module identiﬁer.

(c) S3. Acc. 42.97%

DNN hyper parameters selection process and then present the
DeepCSI performance by varying the PHY parameters of the
MU-MIMO transmission mode. In the ﬁrst part, the DeepCSI
performance are assessed on dataset D1, evaluating the effect
of the beamformees’ positions. Dataset D2 is considered in the
second part to analyze the impact of the beamformer mobility
on the device identiﬁcation accuracy.
DeepCSI hyper parameters selection. Fig. 7a and Fig. 7b
respectively evaluate the effect of tuning the number of
convolutional
layers and ﬁlters for the DNN presented in
Section III-C. Noticeably, the accuracy remains almost con-
stant when varying the number of layers. Also, the accuracy
increases with an increasing number of ﬁlters, at a cost of a
higher network complexity (i.e., more trainable parameters).
As a trade-off between accuracy and complexity, we selected
Nconv = 5 convolutional layers with 128 ﬁlters each and
kernel sizes of (1, 7) for the ﬁrst
three layers, (1,5) for
the fourth and (1,3) for the last one by using the elbow
method [34]. The max-pooling kernels are set to (1, 2) and
the alpha-dropout between the three dense layers is applied
with retain probability of 0.5 and 0.2, respectively.
DeepCSI performance using different beamformees con-
ﬁgurations. Fig. 8 shows the accuracy of DeepCSI in
correctly identifying the beamformer among the 10 Compex
Wi-Fi modules in the dataset. The results were obtained using
the beamforming feedback angles from a single beamformee.
The confusion matrices are reported for each of the three
training/testing conﬁgurations in Table I, where ID refers to
the AP module identiﬁer. We notice that the accuracy increases
with more spatial diversity in the training data, reaching
98.02% when all the conﬁgurations are used at training time
(see Fig. 8a for set S1). With sets S2 and S3, the beamformee
positions at
training and testing times differ. The lowest
accuracy is obtained with S3 (worst-case conﬁguration). This

7

0.60.81.0trainableparams×1060.970.980.991.00Accuracy[%]7654320.00.51.01.52.0trainableparams×1060.920.940.960.981.00Accuracy[%]2561286432160

0.5

1

0

0.5

1

0

0.5

1

0

0.5

1

0

0.5

1

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2
4
Predicted ID

6

8

0

2
4
Predicted ID

6

8

0

2
4
Predicted ID

6

8

0

2

4

6

8

D

I

l
a
u
t
c
A

(a) S1. Acc. 97.62%

(b) S2. Acc. 77.38%
Fig. 9: Confusion matrices, mixed beamformees, 3 TX ant., spatial stream 0.

(c) S3. Acc. 47.28%

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

0

2

4

6

8

Predicted ID
(a) Train on beamformee 1 and test-
ing on beamformee 2. Acc. 25.86%
Fig. 11: Confusion matrices for set S1, training on one beamformee and
testing on the other, 3 TX antennas, spatial stream 0.

(b) Train on beamformee 2 and test-
ing on beamformee 1. Acc. 25.02%

Predicted ID

Fig. 10: DeepCSI accuracy by varying the number of training positions
from the considered set (see Table I). Set S1 is trained on a maximum of 9
beamformee positions while S2 and S3 on 5.

is because S3 is the set with the largest difference between
training and testing positions. The performance improves when
going from S3 to S2, as the latter provides DeepCSI with
a more balanced set of positions during training, allowing
the classiﬁer to ﬁll the knowledge gaps by “interpolating”
the patterns learned from adjacent positions. The network
reuses information from similar beam patterns leading to an
identiﬁcation accuracy of 75%, even when the beamformee is
at a position that was not contained in the training set (see
Fig. 8b). The same applies to Fig. 9, where the beamforming
feedback angles of both beamformees are used to build the
training set. This allows to slightly increase the DeepCSI
accuracy on sets S2 and S3. However, using this technique in
real-world scenarios poses security concerns associated with
the reciprocal trustworthiness of the beamformees in a Wi-Fi
network. The impact of the number of beamformee training
the accuracy
positions is evaluated in Fig. 10. We report
obtained by increasing the number of positions used at training
time from 1 to 9 for set S1 and from 1 to 5 for sets S2
and S3, according to Table I. In all the cases, the accuracy
increases with more beamformee positions in the training
data, which conﬁrms that the ﬁngerprint is more effective
when high spatial diversity is present in the training data. In
Fig. 11, we evaluate the effect of swapping the beamformees
training and testing times for the same network
used at
conﬁguration. We trained DeepCSI with data from a given
beamformee and used the trained DNN model to identify the
AP module from the ˜V matrices computed by a different
beamformee (for the same AP module). The learned ﬁngerprint
in this case performs poorly as matrix ˜V captures hardware
inaccuracies of both devices, i.e., the beamformer (the AP) and
the beamformee. While a well designed learning architecture
can identify with high accuracy the beamformer when the
beamformee remains the same at training and testing times,
it hardly succeeds when these devices differ. We reasonably
believe that in a real-world scenario the impact of this will

(a) Accuracy by varying the channel
bandwidth, i.e., selecting respectively
Ncol = 234, 110, 54, out of the
K = 234 OFDM sub-channels.

(b) Accuracy by varying the no. of
transmitter antennas,
i.e., selecting
respectively Nch = 3, 2, 1 rows of
the beamforming feedback matrix ˜V.

Fig. 12: DeepCSI accuracy by varying the channel bandwidth and the number
of transmitter antennas, using spatial stream 0.

be even stronger, as the beamformees can be from different
vendors and have different hardware conﬁgurations.
DeepCSI performance when varying the beamformer
transmission parameters. In Fig. 12a we compare the ac-
curacy of DeepCSI when considering different portions of
the radio spectrum. According to the IEEE 802.11ac OFDM
channels speciﬁcations [19], from the 234 sub-channels on an
80 MHz channel, we can group sub-channels belonging to two
40 MHz and four 20 MHz channels. Therefore, from the data
collected on the IEEE channel 42 at 80 MHz, we extracted 110
sub-channels for the 40 MHz channel 38 and 54 sub-channels
for the 20 MHz channel 36, and assessed the performance
of DeepCSI on these subsets. These results prove that the
accuracy increases with a larger bandwidth, especially when
considering the most challenging conﬁgurations S2 and S3.
Fig. 12b evaluates the impact of increasing from 1 to 3
the number of transmitter antennas used to compute the
ﬁngerprint. Note that the accuracy mainly depends on the
number of selected antennas and only weakly depends on their
IDs. Thus, we only show results for a single selection pattern
out of the possible ones for each number of antennas. The
DeepCSI performance remains almost constant on set S1,
while the accuracy increases on S2 and S3 going from 1 to 3
transmitter antennas. These results conﬁrm that exploiting to
the maximum extent the spatial diversity at the beamformer
– by considering all the OFDM sub-channels and transmitter
antennas – is key to designing robust RFP algorithms.
DeepCSI performance when changing the reference beam-
formee spatial stream. To evaluate the effect of changing the
DNN input spatial stream on the beamformer ﬁngerprinting
accuracy, we consider the impact of the beamforming feedback
angles quantization on the columns of ˜V, representing the

8

987654321numberoftrainingpositions0.00.20.40.60.81.0Accuracy[%]S1S2S3S1S2S3set0.00.20.40.60.81.0Accuracy[%]80MHz40MHz20MHzS1S2S3set0.00.20.40.60.81.0Accuracy[%]3210

0.5

1

0

0.5

1

0

0.5

1

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2
4
Predicted ID

6

8

0

2
4
Predicted ID

6

8

0

2
4
Predicted ID

6

8

(a) S1. Acc. 97.03%

(b) S2. Acc. 13.32%

(c) S3. Acc. 5.63%

Fig. 15: Confusion matrices, beamformee 1, 3 TX antennas, spatial stream 1.

in static conditions. The quantization error is clearly visible
for the second spatial stream (column 2 of matrix ˜V). Thus,
the performance of DeepCSI decreases when considering as
DNN input the data associated with the second spatial stream
(Fig. 15) instead of the ﬁrst one (Fig. 8). While on set S1 the
beamformer can still be identiﬁed with high accuracy using
data from the second spatial stream, when considering sets S2
and S3 – thus reducing the number of training positions – the
beamformer ﬁngerprint can no longer be effectively extracted,
leading to a considerable drop in the classiﬁcation accuracy.

DeepCSI performance compared with learning from a
processed input. DeepCSI learns beamformer-speciﬁc fea-
tures directly from the I/Q samples of matrix ˜V. As an alterna-
tive approach, we evaluated the effect of pre-processing such
I/Q data before using it as input for the DNN. Speciﬁcally,
we applied to the beamforming feedback matrices the data
cleaning algorithm presented in [36]. The CFR estimated at
the beamformee on the NDP – and from which ˜V is derived –
slightly deviates from the theoretical model in Eq. (2) due to
hardware imperfections causing undesired phase offsets [37].
Among these imperfections, the most signiﬁcant are: (i) the
carrier frequency offset (CFO), which originates from the
difference between the carrier frequency at transmitter and
receiver sides; (ii) the sampling frequency offset (SFO), which
is due to clocks synchronization error; (iii) the packet detection
delay (PDD), i.e., the receiver decoding time; (iv) the phase-
locked loop offset (PPO), which is associated with the random
generation of the initial signal phase by the phase-locked loop
module; and (v) the phase ambiguity (PA), which accounts for
the phase difference (multiples of π) among the signals at the
transmitter antennas. By considering these contributions, the
overall phase offset, θoﬀs,k,m,n, can be formulated as
θoﬀs,k,m,n = θCFO−
and, in turn, the CFR estimated at the beamformee during the
channel sounding procedure becomes

2πk(τSFO+τPDD)/T +θPPO+θPA, (9)

ˆHk,m,n = Hk,m,nejθoffs,k,m,n .

(10)

Besides the PDD, all the other contributions to Eq. (9) are
associated with imperfections at the transmitter device, that in
our case is the target of our ﬁngerprinting technique, i.e., the
AP. Our key intuition is that also the beamforming feedback
matrix ˜V – derived from H as discussed in Section III-B
– would be affected by the phase offsets (i)-(v). Thus, we
may use the offsets cleaning algorithm of [36] to improve
its quality. Along this line of reasoning, we evaluate in

(a) bψ = 5 and bφ = 7 bit.

(b) bψ = 7 and bφ = 9 bit.

Fig. 13: PDF of the ˜V quantization error using the two standard-compliant
sets of values for the beamforming feedback angles quantization bits.

Fig. 14: Time evolution of ˜V for the ﬁrst 75 OFDM sub-channels, in static
conditions. The columns refer to the transmit antennas while the rows to the
spatial streams.

spatial streams dimensions. From Algorithm 1, it follows that
the impact of the quantization error increases going from the
ﬁrst to the last reconstructed stream. We veriﬁed this fact by
simulating an OFDM MU-MIMO channel, considering the ray
tracing model of [35]. We obtained the channel matrix H for
100,000 transmissions in MU-MIMO mode, and we derived ˜V
via SVD. Hence, we computed the qφ and qψ quantized angles
following Algorithm 1 and using the quantization parameters
deﬁned in the standards [19, 20]. These operations are the
same performed by the beamformees to generate the feedback.
Next, we reconstructed ˜V from the quantized angles and
evaluated the reconstruction error on each combination of
transmitter antennas and spatial streams. We plot the proba-
bility density functions (PDFs) of the quantization error using
(bψ = 5, bφ = 7) and (bψ = 7, bψ = 9) bits for quantization in
Figs. 13a and 13b. We notice the reconstruction of the second
column of ˜V, i.e., the second stream, is less accurate than
the reconstruction of the ﬁrst, for all the three transmitter
antennas. This is intrinsically related to the construction of
the Dk,i and Gk,(cid:96),i matrices from the quantized angles, and
to their combination for the computation of ˜V (see Eq. (7)).
Indeed, the algorithm has a recursive structure by which the
quantization error on the ﬁrst stream propagates to the next
ones, leading to worse approximations for the higher order
columns of matrix ˜V. The quantization error can also be
visualized from our empirical measurements. In Fig. 14, we
plot an excerpt of the ˜V matrix reconstructed by DeepCSI
from the quantized angles obtained at the beamformee side

9

1234˜Vquantizationerror×10−20246Probabilitydensityfunction×10−2[˜V]1,1[˜V]2,1[˜V]3,1[˜V]1,2[˜V]2,2[˜V]3,20.250.500.751.00˜Vquantizationerror×10−20.00.51.01.5Probabilitydensityfunction×10−1[˜V]1,1[˜V]2,1[˜V]3,1[˜V]1,2[˜V]2,2[˜V]3,2-122-97-72-47sub-channelindex[˜V]1,101530timeindex-122-97-72-47sub-channelindex[˜V]1,2[˜V]2,101530timeindex[˜V]2,2[˜V]3,101530timeindex[˜V]3,20

0.5

1

0

0.5

1

0

0.5

1

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

(a) Accuracy compared with the one
obtained using the processed input.
Fig. 16: Comparison with the accuracy obtained by learning the ﬁngerprints
from the processed version of ˜V, i.e., after applying the offsets correction
(offs. corr.) in [36]. Beamformee 1, 3 TX antennas, spatial stream 0.

Predicted ID
(b) Confusion matrix for S1 after
offset correction. Accuracy: 83.10%

Fig. 16 the impact of a preliminary offset cleaning phase on
matrix ˜V on the ﬁngerprinting accuracy. DeepCSI (with no
offsets cleaning) outperforms its version with the described
offset correction capability across all the training/testing sets.
In other words, the offsets introduced by the beamformer
hardware imperfections are strategic to reliably recognize the
device, and any offset cleaning may result in their partial
removal, affecting the ﬁngerprinting quality.
DeepCSI performance in the presence of beamformer
mobility. The robustness of DeepCSI on beamformer’s mo-
bility is evaluated through dataset D2. In Figs. 17a-17b we
report the performance of DeepCSI on set S4 (see Table II).
Speciﬁcally, in Fig. 17a the entire mobility path for both the
training and testing sets is considered. We remind that even if
the theoretical path is the same for all the measurements, the
operation is performed manually and, in turn, the actual shifts
undergo uncontrolled variations that reﬂect on the collected
traces. The results show that DeepCSI is able to effectively
learn a ﬁngerprint of the AP from the MU-MIMO beamform-
ing feedback matrices even when the AP moves, reaching
an accuracy above 80%. The proposed learning architecture
allows compensating for the slight variations introduced by the
manual shifts of the AP and the presence of the person moving
in the vicinity. The ﬁngerprint is less effective when the en-
vironmental conditions sharply depart from the training ones.
The high-scale modiﬁcations on the beamforming feedback
matrices – associated with the channel variations – prevent
the neural network from effectively capturing the small-scale
variations that descend from the hardware imperfections. We
show this behaviour in Fig. 17b, where DeepCSI is trained
and tested in different mobility conditions. The training and
validation phases are performed on the ﬁrst half of the traces in
‘mob1’, i.e., the portions related to the sub-path A-B-C-B. The
test is executed on the fraction of the traces in ‘mob2’ collected
while the AP spans the segments B-D-B. Overall, the results
in Figs. 17a-17b indicate that the higher the variability in the
training set, the more likely DeepCSI will learn ﬁngerprints
that are robust to changing radio channel conditions. The
variability in the training set allows the learning algorithm
to properly detect the elements that are in common to the
traces and, in turn, identify the hardware-related features. In
Figs. 17c-17d we report the performance of DeepCSI on sets
S5 and S6. When DeepCSI is trained on the sole static traces
– set S5 – the learned ﬁngerprint is not effective in recognizing

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

Predicted ID
(b) S4. Train and test on different AP
mobility sub-paths. Acc. 41.15%
0.5

1

0

0

2

4

6

8

Predicted ID
(a) S4. Train and test on the complete
AP mobility path. Acc.82.56%

0

0.5

1

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

D

I

l
a
u
t
c
A

0

2

4

6

8

0

2

4

6

8

Predicted ID
(c) S5. Train on static conditions and
test on mobility traces. Acc. 20.50%
Fig. 17: Confusion matrices, beamformee 1, 3 TX antennas, spatial stream 0.

Predicted ID
(d) S6. Train on mobility traces and
test on static conditions. Acc. 88.12%

the beamformer when it moves in the environment. On the
other hand, once trained on the dynamic traces, DeepCSI is
able to correctly identify the AP in static conditions (about
88% of accuracy on set S6). These last results conﬁrm that
the diversity in the training set is desirable to obtain a robust
algorithm able to generalize over different conditions.

VI. CONCLUDING REMARKS

•

In this paper, we have presented a novel approach to Wi-Fi
radio ﬁngerprinting (RFP) which leverages IEEE 802.11-
compliant steering matrices to authenticate MU-MIMO Wi-Fi
devices. The present work makes the following key advances:
We have demonstrated for the ﬁrst time the feasibility
of RFP for MU-MIMO Wi-Fi. To this end, DeepCSI lever-
ages the beamforming feedback matrices computed by any of
the beamformees and transmitted in clear to the beamformer.
We have veriﬁed that the matrices are affected by the
in turn, can
beamformer hardware imperfections and,
be used to identify the device. Moreover, the feedback is
not affected by inter-stream and inter-user interference, thus
increasing robustness. DeepCSI is independent of the number
of beamformees associated with the target beamformer: differ-
ent beamformer’s ﬁngerprints can be computed, one from each
beamformee. Conversely from prior work, DeepCSI does not
require direct CSI computation and, in turn, can be run on any
Wi-Fi device without requiring SDRs.

•

We have performed a massive data collection campaign
with off-the-shelf Wi-Fi equipment, where 10 Wi-Fi radios
emit MU-MIMO signals in different positions. Experimental
results indicate that DeepCSI is able to correctly identify
the transmitter with accuracy above 98%. We have evaluated
DeepCSI ﬁngerprinting accuracy by differentiating the set
of positions for the devices at
training and testing times.
Our technique achieves accuracy of 73% when training is
performed on a more balanced set of spatial points, which
allows the classiﬁer to interpolate the training patterns for the
missing points, using those from adjacent training positions.

10

S1S2S3set0.00.20.40.60.81.0Accuracy[%]DeepCSIoffs.corr.•

For the ﬁrst time, we evaluated the proposed RFP
technique with moving Wi-Fi devices. DeepCSI reaches
an accuracy above 82%, showing the robustness of the learned
ﬁngerprint to changing radio channel conditions. Our results
show that the higher the variability in the trafﬁc traces
used for the training phase, the higher is the accuracy
when the algorithm is used at run-time to identify the
devices. This indicates the need for extensive datasets to train
effective RFP algorithms. In this vision, we pledge to make
our contribution by sharing our datasets [21].

As part of ongoing work, we plan to further investigate the
effect of the beam patterns and of the positions of the receivers
on the ﬁngerprinting performance, also in the presence of
interference from overlapping channels. As a further extension,
we intend to investigate lifelong machine learning techniques
to accumulate knowledge and improve the device’s ﬁngerprint
as it moves in the environment.

ACKNOWLEDGEMENT

This material is based upon work supported in part by
the National Science Foundation (NSF) under Grant No.
CNS-2134973 and CNS-2120447, and by the Italian Ministry
of Education, University and Research (MIUR) through the
initiative “Departments of Excellence” (Law 232/2016). The
views and opinions are those of the authors and do not
necessarily reﬂect those of the funding institutions.

REFERENCES
[1] Federal Communications Commission (FCC), “Spectrum Crunch,” https:

//www.fcc.gov/general/spectrum-crunch.

[2] Ericsson Incorporated, “Ericsson Interim Mobility Report,

June
https://www.ericsson.com/49da93/assets/local/mobility-report/

2020,”
documents/2020/june2020-ericsson-mobility-report.pdf, 2020.

Davies,

[3] Jamie
3.5
US
fcc-ﬁnally-opens-up-3-5-ghz-for-us-telcos/, 2020.

Telecoms.com,

telcos,”

“FCC

GHz

for

ﬁnally

up
https://telecoms.com/502070/

opens

[4] Federal Communications Commission (FCC), “FCC Opens 6 GHz Band
to Wi-Fi and Other Unlicensed Uses,” https://www.fcc.gov/document/
fcc-opens-6-ghz-band-wi-ﬁ-and-other-unlicensed-uses, 2020.

[5] Wi-Fi Alliance, “Wi-Fi 6E expands Wi-Fi into 6 GHz,” https://tinyurl.

com/WiFI6EHighlights, 2021.

[6] GSMA.com, “Capacity to Power Innovation: 5G in the 6 GHz Band,”

https://tinyurl.com/5G-6GHz-Bands, 2021.

[7] J. Horwitz, V. Beat, “Wi-Fi 6E and 5G Will Share 6GHz Spectrum to
Supercharge Wireless Data,” https://tinyurl.com/wyvmn5c, 2020.
[8] T. Zheng, Z. Sun, and K. Ren, “FID: Function Modeling-based Data-
Independent and Channel-Robust Physical-Layer Identiﬁcation,” in Proc.
of IEEE INFOCOM, 2019.

[9] L. Peng, A. Hu, J. Zhang, Y. Jiang, J. Yu, and Y. Yan, “Design of a
Hybrid RF Fingerprint Extraction and Device Classiﬁcation Scheme,”
IEEE Internet of Things Journal, vol. 6, no. 1, pp. 349–360, 2019.
[10] F. Xie, H. Wen, Y. Li, S. Chen, L. Hu, Y. Chen, and H. Song, “Optimized
Coherent Integration-Based Radio Frequency Fingerprinting in Internet
of Things,” IEEE Internet of Things Journal, vol. 5, no. 5, pp. 3967–
3977, 2018.

[11] Y. Xing, A. Hu, J. Zhang, L. Peng, and G. Li, “On Radio Frequency
Fingerprint Identiﬁcation for DSSS Systems in Low SNR Scenarios,”
IEEE Communications Letters, vol. 22, no. 11, pp. 2326–2329, 2018.

[12] K. Sankhe, M. Belgiovine, F. Zhou, S. Riyaz, S. Ioannidis, and
K. Chowdhury, “ORACLE: Optimized Radio clAssiﬁcation through
Convolutional neuraL nEtworks,” in Proc. of IEEE INFOCOM, 2019.

[13] T. D. Vo-Huu, T. D. Vo-Huu, and G. Noubir, “Fingerprinting Wi-Fi
Devices Using Software Deﬁned Radios,” in Proc. of ACM WiSec, 2016.
[14] A. Al-Shawabka, F. Restuccia, S. D’Oro, T. Jian, B. C. Rendon,
N. Soltani, J. Dy, S. Ioannidis, K. Chowdhury, and T. Melodia, “Ex-

11

posing the Fingerprint: Dissecting the Impact of the Wireless Channel
on Radio Fingerprinting,” in Proc. of IEEE INFOCOM, 2020.

[15] E. Johnson, “Physical Limitations on Frequency and Power Parameters
of Transistors,” in Proc. of IRE International Convention Record, 1966.
[16] E. H. Ong, J. Kneckt, O. Alanen, Z. Chang, T. Huovinen, and T. Nihtil¨a,
“IEEE 802.11ac: Enhancements for very high throughput WLANs,” in
Proc. of IEEE PIMRC, 2011.

[17] E. Khorov, A. Kiryanov, A. Lyakhov, and G. Bianchi, “A tutorial on
IEEE 802.11ax high efﬁciency WLANs,” IEEE Communications Surveys
& Tutorials, vol. 21, no. 1, pp. 197–216, 2018.

[18] C. Deng, X. Fang, X. Han, X. Wang, L. Yan, R. He, Y. Long, and
Y. Guo, “IEEE 802.11be Wi-Fi 7: New challenges and opportunities,”
IEEE Communications Surveys & Tutorials, vol. 22, no. 4, pp. 2136–
2166, 2020.

[19] IEEE, “IEEE Standard for Information Technology–Telecommunications
and Information Exchange Between Systems Local and Metropolitan
Area Networks–Speciﬁc Requirements Part 11: Wireless LAN Medium
Access Control
(PHY) Speciﬁcations
Amendment 4: Enhancements for Very High Throughput for Operation
in Bands below 6 GHz,” IEEE Std 802.11ac-2013 (Amendment to IEEE
Std 802.11-2012), 2013.

(MAC) and Physical Layer

[20] ——, “IEEE Standard for Information Technology–Telecommunications
and Information Exchange Between Systems Local and Metropoli-
tan Area Networks–Speciﬁc Requirements Part 11: Wireless LAN
Medium Access Control (MAC) and Physical Layer (PHY) Speciﬁca-
tions Amendment 1: Enhancements for High-Efﬁciency WLAN,” IEEE
Std 802.11ax-2021 (Amendment to IEEE Std 802.11-2020), 2021.
[21] F. Meneghello, M. Rossi, and F. Restuccia, “DeepCSI – code and

datasets,” https://github.com/signetlabdei/DeepCSI, 2022.

[22] Q. Xu, R. Zheng, W. Saad, and Z. Han, “Device Fingerprinting in Wire-
less Networks: Challenges and Opportunities,” IEEE Communications
Surveys & Tutorials, vol. 18, no. 1, pp. 94–104, 2016.

[23] F. Restuccia, S. D’Oro, A. Al-Shawabka, M. Belgiovine, L. Angioloni,
S. Ioannidis, K. Chowdhury, and T. Melodia, “DeepRadioID: Real-
Time Channel-Resilient Optimization of Deep Learning-based Radio
Fingerprinting Algorithms,” in Proc. of ACM MobiHoc, 2019.

[24] S. Riyaz, K. Sankhe, S. Ioannidis, and K. Chowdhury, “Deep Learning
Convolutional Neural Networks for Radio Identiﬁcation,” IEEE Com-
munications Magazine, vol. 56, no. 9, pp. 146–152, 2018.

[25] K. Merchant, S. Revay, G. Stantchev, and B. Nousain, “Deep Learning
for RF Device Fingerprinting in Cognitive Communication Networks,”
IEEE Journal of Selected Topics in Signal Processing, vol. 12, no. 1,
pp. 160–167, 2018.

[26] R. Das, A. Gadre, S. Zhang, S. Kumar, and J. M. Moura, “A Deep
Learning Approach to IoT Authentication,” in Proc. of IEEE ICC, 2018.
[27] S. Gopalakrishnan, M. Cekic, and U. Madhow, “Robust Wireless Fin-
gerprinting via Complex-Valued Neural Networks,” in Proc. of IEEE
GLOBECOM, 2019.

[28] S. D’Oro, F. Restuccia, and T. Melodia, “Can You Fix My Neural Net-
work? Real-Time Adaptive Waveform Synthesis for Resilient Wireless
Signal Classiﬁcation,” in Proc. of IEEE INFOCOM, 2021.

[29] E. Perahia and R. Stacey, Next Generation Wireless LANs: Throughput,
Robustness, and Reliability in 802.11n. Cambridge Univ. Press, 2008.
[30] A. Orebaugh, G. Ramirez, and J. Beale, Wireshark & Ethereal network

protocol analyzer toolkit. Elsevier, 2006.

[31] T. J. O’Shea, T. Roy, and T. C. Clancy, “Over-the-Air Deep Learning
Based Radio Signal Classiﬁcation,” IEEE Journal of Selected Topics in
Signal Processing, vol. 12, no. 1, pp. 168–179, Feb 2018.

[32] G. Klambauer, T. Unterthiner, A. Mayr, and S. Hochreiter, “Self-

Normalizing Neural Networks,” in Proc. of ACM NIPS, 2017.

[33] S. Woo, J. Park, J.-Y. Lee, and I. S. Kweon, “CBAM: Convolutional

Block Attention Module,” in Proc. of ECCV, 2018.

[34] D. J. ketchen and C. L. Shook, “The Application of Cluster Analysis in
Strategic Management: an Analysis and Critique,” Strategic Management
Journal, vol. 17, pp. 441–458, 1996.

[35] IEEE, “TGac Channel Model Addendum. Version 12. IEEE 802.11-

09/0308r12,” 2010.

[36] F. Meneghello, D. Garlisi, N. Dal Fabbro,

I. Tinnirello, and
M. Rossi, “Environment and Person Independent Activity Recogni-
tion with a Commodity IEEE 802.11ac Access Point,” arXiv preprint
arXiv:2103.09924, 2021.

[37] H. Zhu, Y. Zhuo, Q. Liu, and S. Chang, “π-Splicer: Perceiving Accurate
CSI Phases with Commodity WiFi Devices,” IEEE Transactions on
Mobile Computing, vol. 17, no. 9, pp. 2155–2165, 2018.

