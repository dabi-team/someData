2
2
0
2

y
a
M
2
1

]
h
p
-
d
e
m

.
s
c
i
s
y
h
p
[

1
v
7
1
4
8
0
.
5
0
2
2
:
v
i
X
r
a

KiT-RT: An extendable framework for radiative transfer and therapy

JONAS KUSCH, University of Innsbruck, Austria
STEFFEN SCHOTTH√ñFER, Karlsruhe Institute of Technology, Germany
PIA STAMMER, Karlsruhe Institute of Technology, Germany, German Cancer Research Center - DKFZ,
Germany, and HIDSS4Health - Helmholtz Information and Data Science School for Health, Germany
JANNICK WOLTERS, Karlsruhe Institute of Technology, Germany
TIANBAI XIAO, Karlsruhe Institute of Technology, Germany

In this paper we present KiT-RT (Kinetic Transport Solver for Radiation Therapy), an open-source C++ based framework for
solving kinetic equations in radiation therapy applications. The aim of this code framework is to provide a collection of classical
deterministic solvers for unstructured meshes that allow for easy extendability. Therefore, KiT-RT is a convenient base to test
new numerical methods in various applications and compare them against conventional solvers. The implementation includes
spherical-harmonics, minimal entropy, neural minimal entropy and discrete ordinates methods. Solution characteristics and
efficiency are presented through several test cases ranging from radiation transport to electron radiation therapy. Due to
the variety of included numerical methods and easy extendability, the presented open source code is attractive for both
developers, who want a basis to build their own numerical solvers and users or application engineers, who want to gain
experimental insights without directly interfering with the codebase.

CCS Concepts: ‚Ä¢ Mathematics of computing ‚Üí Solvers; ‚Ä¢ Applied computing ‚Üí Physics.

ACM Reference Format:
Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao. 2022. KiT-RT: An extendable framework for
radiative transfer and therapy. ACM Trans. Math. Softw. 1, 1 (May 2022), 28 pages. https://doi.org/10.1145/nnnnnnn.nnnnnnn

1

INTRODUCTION

Personalized medicine in radiation oncology has been an important research topic in the last decades. To allow for
accurate, reliable and efficient treatment planning tailored towards individual patient needs, there is a growing
desire to undertake direct numerical simulation for radiation therapy. High-fidelity numerical solutions enable
quantitative estimation of the dose received by the tumor as well as the surrounding tissue, while allowing for an
automated generation of optimal treatment plans. Besides the aim to ensure sufficient accuracy, such simulations
are required to run on limited computational resources such as workstation PCs.

Traditional methods to predict dose distributions in radiation oncology largely rely on simplified models, such
as pencil beam models based on the Fermi-Eyges theory [18]. While such models are computationally efficient,
they often lack the required accuracy, especially in cases including air cavities or other inhomogeneities [29, 35].

Authors‚Äô addresses: Jonas Kusch, University of Innsbruck, Technikerstra√üe 13, Innsbruck, Austria, jonas.kusch1@gmail.com; Steffen Schot-
th√∂fer, Karlsruhe Institute of Technology, Englerstra√üe 2, Karlsruhe, Germany, steffen.schotthoefer@kit.edu; Pia Stammer, Karlsruhe Institute
of Technology, Englerstra√üe 2, Karlsruhe, Germany and German Cancer Research Center - DKFZ, Heidelberg, Germany and HIDSS4Health -
Helmholtz Information and Data Science School for Health, Karlsruhe/Heidelberg, Germany, pia.stammer@kit.edu; Jannick Wolters, Karl-
sruhe Institute of Technology, Englerstra√üe 2, Karlsruhe, Germany, jannick.wolters@rwth-aachen.de; Tianbai Xiao, Karlsruhe Institute of
Technology, Englerstra√üe 2, Karlsruhe, Germany, tianbai.xiao@kit.edu.

Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that
copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first
page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy
otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from
permissions@acm.org.
¬© 2022 Association for Computing Machinery.
0098-3500/2022/5-ART $15.00
https://doi.org/10.1145/nnnnnnn.nnnnnnn

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

 
 
 
 
 
 
2

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

On the other hand, Monte Carlo (MC) algorithms, which simulate individual interacting particles, achieve a
satisfactory accuracy [7]. However, despite ongoing research to accelerate MC methods, their high computational
costs currently renders them impractical for clinical usage [20, 32]. To obtain a computationally feasible model
with comparable accuracy, radiation particles are described on a mesoscopic level through the deterministic linear
Boltzmann equation [10, 61‚Äì63]. An efficient and accurate numerical approximation to the linear Boltzmann
equation can be achieved through the construction of grid-based macroscopic approximations [17, 25, 64, 65].
Variants of grid based methods for radiation therapy can be found in for example [8, 28, 30, 37, 39, 54].

The available grid-based methods employ various macroscopic approximations to the linear Boltzmann equation

which all exhibit certain advantages and shortcomings.

In [17], the modal entropy method called ùëÄùëÅ is used as a macroscopic model. This method preserves positivity
of particle distributions while yielding accurate results with little spurious oscillations. However, the need to solve
a possibly ill-posed optimization problem in every spatial cell and time step results in increased computational
costs. While analytic solutions to the optimization problems are available at small truncation order, they cannot
capture all physical effects accurately. Further approaches aim at mitigating the challenge of the problems
ill-condition by regularization [4] or reducing the associated computational costs, e.g. using neural networks [58].
In [54] the use of computationally cheap nodal discretizations, known as the ùëÜùëÅ method has been proposed. In
this case, the solution remains positive and it is shown that the expensive scattering terms can be approximated
efficiently with a Fokker-Planck approximation. Furthermore, the solution can exhibit non-physical artifacts,
known as ray-effects [41, 50, 52], which reduce the approximation quality. While methods to mitigate ray-effects
exist, see e.g. [2, 12, 21, 42, 60], they commonly require picking problem-dependent tuning parameters.

In [37], the modal ùëÉùëÅ method has been employed to derive a macroscopic model for radiation treatment planning.
While it does not preserve positivity of the solution and can potentially yield oscillatory approximations, it allows
for an efficient numerical treatment of scattering terms. In [39] a combination of ùëÜùëÅ and ùëÉùëÅ methods which
reduces computational costs through a dynamical low rank approximation [33] has been proposed. The efficiency
of this method relies on the ability to describe the solution through a low-rank function.

The variety of different methods allows for individual method choices tailored to different settings. The
comparability of different methods in a uniform framework is not only interesting for clinical usage, but also
for future research in computational radiation therapy. Our aim of the open-source C++ Kinetic Transport for
radiation therapy (KiT-RT) framework is therefore to provide a collection of available deterministic methods.
Special focus is put on extendability by the use of polymorphism to simplify the implementation of novel solution
methods. The methods provided by our framework are optimized for an application on workstation PCs. This
meets the typical requirements in radiation therapy applications: For clinical usage the computational resources
are often limited and the time between recording the CT image and the actual treatment must not exceed a
certain time period. Hence, radiation therapy codes that are applicable for clinical use should run efficiently
on workstation PCs. Moreover, conventional codes often require structured grids [24, 36, 56, 59, 67], leading
to inaccurate representations of structures on CT images. While accuracy in practice is also limited by the CT
density values which are given on a structured grid, these are often downsampled to a lower resolution for dose
computations. Further, a recomputation of the CT values for unstructured grids is feasible if it improves the
quality of dose computations. Therefore, our framework provides functionalities for both unstructured meshes
which preserve organ outlines on CT images, as well as standard rectangular grids.

This paper aims at presenting the developed framework and its functionality while providing the necessary
mathematical and physical background on principles the software is based on. In Section 2 we provide the
underlying physical model as well as its reformulation as a time-dependent partial differential equation. Section 3
discusses different macroscopic models as well as advantages and disadvantages of the individual underlying
directional discretizations. Sections 4 and 5 focus on the used discretizations and software architecture, respectively.
Lastly, we validate our implementations and analyse their performance for different test cases in Section 7.

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

2 PHYSICAL MODEL

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

3

Let us recap the main physical model that is used for computational radiotherapy treatment planning. The main
goal is to compute the radiation dose distribution
‚à´ ‚àû

‚à´

ùê∑ (x) =

1
ùúå (x)

0

S2

ùëÜ (ùê∏, x)ùúì (ùê∏, x, ‚Ñ¶) d‚Ñ¶ dùê∏ ,

(1)

that results from a given treatment plan. Here, ùê∏ ‚àà R+ is the energy, x ‚àà X ‚äÇ R3 denotes the spatial domain, and
‚Ñ¶ ‚àà S2 is the flight direction of particles. Moreover, ùúì : R+ √ó R3 √ó S2 ‚Üí R denotes the radiation flux density and
ùúå : R3 ‚Üí R is the patient tissue density. The stopping power ùëÜ : R+ √ó R3 ‚Üí R models the continuous energy
loss of particles due to scattering with tissue and is defined as

ùëÜ (ùê∏, x) =

‚à´ ‚àû

‚à´ 1

ùê∏ ‚Ä≤

Œ£(ùê∏, ùê∏ ‚Ä≤, x, ùúá) dùúá dùê∏ ‚Ä≤

(2)

‚àí1
with the scattering cross section Œ£ : R+ √ó R+ √ó R3 √ó [‚àí1, 1] ‚Üí R. The radiation flux density, which describes the
probability of finding a particle at a certain region in phase space, can be computed from the continuous slowing
down (CSD) approximation [40] of the energy dependent linear Boltzmann equation

0

‚àí ùúïùê∏ (ùëÜ (ùê∏, x)ùúì (ùê∏, x, ‚Ñ¶)) + ‚Ñ¶ ¬∑ ‚àáùë•ùúì (ùê∏, x, ‚Ñ¶) + Œ£ùë° (ùê∏, x)ùúì (ùê∏, x, ‚Ñ¶)

=

‚à´

S2

Œ£ùë† (ùê∏, x, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤)ùúì (ùê∏, x, ‚Ñ¶‚Ä≤) d‚Ñ¶‚Ä≤ .

(3)

This model assumes a continuous energy loss of particles traveling through a background material, which is
modeled using the stopping power ùëÜ. The scattering cross section Œ£ùë† (ùê∏, x, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤) denotes the probability of
particles at position x with energy ùê∏ changing their flight direction from ‚Ñ¶‚Ä≤ to ‚Ñ¶ due to a collision with the
patient tissue. The total cross section Œ£ùë° is given by

Œ£ùë° (ùê∏, x) = Œ£ùë†,0(ùê∏, x) = 2ùúã

‚à´ 1

‚àí1

Œ£ùë† (ùê∏, x, ùúá) dùúá .

(4)

To simplify the evaluation of material properties, we follow the common assumption that all materials are
water-equivalent and differ only in density [e.g. 37, 54, 68], i.e.,

ùëÜ (ùê∏, x) = ùëÜùêª2ùëÇ (ùê∏)ùúå (x),
Œ£ùë° (ùê∏, x) = Œ£ùêª2ùëÇ
(ùê∏)ùúå (x),
ùë°
Œ£ùë† (ùê∏, x, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤) = Œ£ùêª2ùëÇ

(5)

ùë†
where we leave out the superscript ùêª2ùëÇ in the following. Cross-sections for water are taken from the ICRU
database [26]. Having defined the prerequisites of our physical model, we can focus on bringing it into a form
that allows for computing numerical approximations efficiently. It turns out that the energy variable in (3) can be
treated as a pseudo-time, which facilitates solving the CSD equation. For a given maximal energy ùê∏max let us
define the transformed energy as

(ùê∏, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤)ùúå (x) ,

(cid:101)ùê∏ (ùê∏) :=

‚à´ ùê∏max

0

1
ùëÜ (ùê∏ ‚Ä≤)

dùê∏ ‚Ä≤ ‚àí

‚à´ ùê∏

0

1
ùëÜ (ùê∏ ‚Ä≤)

dùê∏ ‚Ä≤

and the transformed particle density as

(cid:101)ùúì ((cid:101)ùê∏, x, ‚Ñ¶) := ùëÜ (ùê∏)ùúå (x)ùúì (ùê∏ ((cid:101)ùê∏), x, ‚Ñ¶) .

(6)

(7)

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

4

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Then, multiplying (3) with ùëÜ (ùê∏) and plugging in the defined transformation gives

ùúï
(cid:101)ùê∏ (cid:101)ùúì ((cid:101)ùê∏, x, ‚Ñ¶) + ‚Ñ¶ ¬∑ ‚àáùë•

(cid:101)ùúì ((cid:101)ùê∏, x, ‚Ñ¶)
ùúå (x)

+ (cid:101)Œ£ùë° ((cid:101)ùê∏) (cid:101)ùúì ((cid:101)ùê∏, x, ‚Ñ¶) =

‚à´

S2

(cid:101)Œ£ùë† ((cid:101)ùê∏, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤) (cid:101)ùúì ((cid:101)ùê∏, x, ‚Ñ¶‚Ä≤) d‚Ñ¶‚Ä≤ ,

(8)

where we define (cid:101)Œ£ùë° ((cid:101)ùê∏) := Œ£ùë° (ùê∏ ((cid:101)ùê∏)) and (cid:101)Œ£ùë† ((cid:101)ùê∏, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤) := Œ£ùë† (ùê∏ ((cid:101)ùê∏), ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤). Dropping the tilde notation and treating
(cid:101)ùê∏ as a pseudo-time ùë° gives a slightly modified version of the classical linear Boltzmann equation

ùúïùë°ùúì (ùë°, x, ‚Ñ¶)+‚Ñ¶ ¬∑ ‚àáùë•

ùúì (ùë°, x, ‚Ñ¶)
ùúå (x)

+ Œ£ùë° (ùë°)ùúì (ùë°, x, ‚Ñ¶) =

‚à´

S2

Œ£ùë† (ùë°, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤)ùúì (ùë°, x, ‚Ñ¶‚Ä≤) d‚Ñ¶‚Ä≤

(9)

ùúì (ùë° = 0, x, ‚Ñ¶) = ùëÜ (ùê∏max)ùúå (x)ùúì (ùê∏max, x, ‚Ñ¶) .

Hence, the CSD equation can be treated numerically with classical closure methods and space-time discretizations.
Let us first discuss methods to discretize the directional domain, yielding macroscopic evolution equations.

3 MACROSCOPIC MODELS

This section discusses macroscopic models to (9). These models are derived from nodal and modal discretizations
of the directional domain.

3.1 Modal discretizations

Modal discretizations of (9) can be interpreted as a closure problem [44, 45]. To present the derivation of different
closures, we first formulate the moment equations which are not closed. Second, we close these equations with
the ùëÉùëÅ closure and third, we derive the ùëÄùëÅ closure.

Moment equations. Let us derive an evolution equation to describe the moments of the radiation flux with
respect to the real-valued spherical harmonics basis functions. These are defined as the real parts of the spherical
harmonics

ùëå ùëò
‚Ñì (‚Ñ¶) =

‚àöÔ∏Ñ

2‚Ñì + 1
4ùúã

(‚Ñì ‚àí ùëò)!
(‚Ñì + ùëò)!

ùëíùëñùëòùúëùëÉùëò

‚Ñì (ùúá) ,

where ùëÉùëò

‚Ñì are the associated Legendre polynomials. Then, the real spherical harmonics are given as

ùëöùëò

‚Ñì (‚Ñ¶) =

(‚àí1)ùëò
Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤
‚àö
2
ùëå 0
‚Ñì (‚Ñ¶)
Ô£¥Ô£¥Ô£¥Ô£¥
‚àí (‚àí1)ùëòùëñ
‚àö
2
Ô£≥

(cid:0)ùëå ùëò

‚Ñì (‚Ñ¶) + (‚àí1)ùëòùëå ‚àíùëò

‚Ñì

(cid:0)ùëå ‚àíùëò
‚Ñì

(‚Ñ¶) ‚àí (‚àí1)ùëòùëå ùëò

(‚Ñ¶)(cid:1) ,

ùëò > 0 ,
ùëò = 0 ,
‚Ñì (‚Ñ¶)(cid:1) , ùëò < 0 ,

where ùëñ is the imaginary unit. Collecting all basis functions up to degree ùëÅ in a vector

yields the so-called moments

m =

(cid:16)
ùëö0
0

, ùëö‚àí1
1

, ùëö0
1

, ùëö1
1

, ¬∑ ¬∑ ¬∑ , ùëöùëÅ
ùëÅ

(cid:17)ùëá

‚àà R(ùëÅ +1) 2

ùë¢ùëò
‚Ñì (ùë°, x) :=

‚à´

S2

ùúì (ùë°, x, ‚Ñ¶)ùëöùëò

‚Ñì (‚Ñ¶) d‚Ñ¶ .

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

5

Evolution equations for the moments can be derived by testing (9) against m‚Ñì = (ùëö‚àí‚Ñì
‚Ñì
‚à´

ùúïùë° u‚Ñì (ùë°, x)+‚àáùë• ¬∑

‚Ñ¶m‚Ñì (‚Ñ¶)

d‚Ñ¶ + Œ£ùë° (ùë°)u‚Ñì (ùë°, x)

ùúì (ùë°, x, ‚Ñ¶)
ùúå (x)

, ¬∑ ¬∑ ¬∑ , ùëö‚Ñì

‚Ñì ), which gives

S2
‚à´

‚à´

=

S2

S2

m‚Ñì (‚Ñ¶)Œ£ùë† (ùë°, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤)ùúì (ùë°, x, ‚Ñ¶‚Ä≤) d‚Ñ¶‚Ä≤ d‚Ñ¶ .

(10)

To rewrite this equation, we use the spherical harmonics recursion relation

‚Ñì ‚àà R(2‚Ñì‚àí1)√ó(2‚Ñì+1)
ùëñ
ùëñ
ùëñ
Œ©ùëñ m‚Ñì = a
‚Ñì m‚Ñì‚àí1 + a
‚Ñì+1m‚Ñì+1 with a
as well as the fact that there exists a diagonal matrix ùö∫‚Ñì (ùë°) with entries Œ£‚Ñì,ùëòùëò = Œ£ùëò
such that

‚Ñì := 2ùúã ‚à´

‚à´

‚à´

S2

S2

m‚Ñì (‚Ñ¶)Œ£ùë† (ùë°, ‚Ñ¶ ¬∑ ‚Ñ¶‚Ä≤)ùúì (ùë°, x, ‚Ñ¶‚Ä≤) d‚Ñ¶‚Ä≤ùëë‚Ñ¶ = ùö∫‚Ñì (ùë°)u‚Ñì (ùë°, x) .

Then, the moment equations at degree ‚Ñì become

ùëÉ‚Ñì (ùúá)Œ£ùë† (ùë°, ùúá) dùúá

[‚àí1,1]

ùúïùë° u‚Ñì (ùë°, x)+

3
‚àëÔ∏Å

ùúïùë•ùëñ

(cid:0)a
ùëñ
ùëñ
‚Ñì u‚Ñì‚àí1(ùë°, x) + a

‚Ñì+1u‚Ñì+1 (ùë°, x)(cid:1) /ùúå (x) + Œ£ùë° (ùë°)u‚Ñì (ùë°, x)

ùëñ=1
= ùö∫‚Ñì (ùë°)u‚Ñì (ùë°, x) .

(11)
Note that the equations for degree ‚Ñì depend on the moments of degree ‚Ñì + 1. Hence, to obtain a closed system of
moments up to a fixed degree ùëÅ , we need to define a closure relation

uùëÅ +1(ùë°, x) ‚âÉ U (u0(ùë°, x), ¬∑ ¬∑ ¬∑ , uùëÅ (ùë°, x)) .
ùëÉùëÅ closure. The most commonly used closure is the ùëÉùëÅ closure which leads to the spherical harmonics (ùëÉùëÅ )
method [14]. It expands the solution by spherical harmonics, i.e.,

(12)

ùúì (ùë°, x, ‚Ñ¶) ‚âà ùúìPùëÅ (ùë°, x, ‚Ñ¶) := u(ùë°, x)ùëá m(‚Ñ¶) ,

where u ‚àà R(ùëÅ +1) 2
closure is simply given as UPùëÅ ‚â° 0. In this case, the moment equations read

collects all moments according to u = (cid:0)ùë¢0
0

, ùë¢‚àí1
1

, ùë¢0
1

, ùë¢1
1

, ¬∑ ¬∑ ¬∑ , ùë¢ùëÅ
ùëÅ

(13)

(cid:1)ùëá

‚àà R(ùëÅ +1) 2

. Hence, the ùëÉùëÅ

ùúïùë° u(ùë°, x) = ‚àíA ¬∑ ‚àáx

‚àí Œ£ùë° (ùë°)u(ùë°, x) + ùö∫u(ùë°, x),

u(ùë°, x)
ùúå (x)
S2 mmùëá Œ©ùëñ d‚Ñ¶ and ùö∫ = diag (cid:0)Œ£0

where A ¬∑ ‚àáx := A1ùúïùë• + A2ùúïùë¶ + A3ùúïùëß with Aùëñ := ‚à´
(cid:1). While
ùëÉùëÅ is a computationally efficient method (especially for scattering terms), it does not preserve positivity of the
radiation flux approximation and can lead to spurious oscillations. A closure which mitigates oscillations and
preserves positivity at significantly increased computational costs is the ùëÄùëÅ closure.

, ¬∑ ¬∑ ¬∑ , Œ£ùëÅ
ùëÅ

, Œ£‚àí1
1

, Œ£0
1

, Œ£1
1

0

ùëÄùëÅ closure. The ùëÄùëÅ closure [44, 45] employs the principle of minimal mathematical, i.e., maximal physical
entropy to close the moment system. To this end, we define the twice differentiable, strictly convex kinetic entropy
density ùúÇ : R+ ‚Üí R. Different, problem specific entropy densities can be defined, e.g. the Maxwell-Boltzmann
entropy ùúÇ (ùëî) = ùëî log(ùëî) ‚àí ùëî, or a quadratic entropy ùúÇ (ùëî) = ùëî2, which recovers the ùëÉùëÅ method. Thus, one can close
the system by choosing the reconstructed radiation flux density ùúìu out of the set of all possible functions

(cid:26)
ùëî(ùë°, ùë•, ‚Ñ¶) > 0 : ùë¢ =

ùêπm =

mùëî d‚Ñ¶ < ‚àû

(cid:27)

,

‚à´

S2

(14)

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

6

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

that fulfill the moment condition u(ùë°, x) = ‚ü®mùëî‚ü© as the one with minimal entropy. The modal basis m can be
chosen arbitrarily. Common choices consist of spherical harmonics or other polynomial basis functions. The
minimal entropy closure can be formulated as a constrained optimization problem for a given vector of moments
u,

‚à´

S2

min
ùëî ‚ààùêπm

ùúÇ (ùëî) d‚Ñ¶ s.t. u =

‚à´

S2

mùëî d‚Ñ¶.

(15)

The minimal value of the objective function is denoted by ‚Ñé(ùë¢) = ‚ü®ùúÇ (ùúìu)‚ü© and describes the systems minimal
entropy depending on time and space. ùúìu is the minimizer of Eq. (15), which we use to close the moment system

ùúïùë° u‚Ñì (ùë°, x)+‚àáùë• ¬∑

‚à´

S2

‚Ñ¶m‚Ñì (‚Ñ¶)

ùúìùë¢ (ùë°, x, ‚Ñ¶)
ùúå (x)

d‚Ñ¶ + Œ£ùë° (ùë°)u‚Ñì (ùë°, x) = Œ£‚Ñì u‚Ñì (ùë°, x); .

(16)

The minimal entropy method preserves important properties of the underlying equation [4, 45], i.e., positivity of
the solution, hyperbolicity of the moment system, dissipation of mathematical entropy and the H-Theorem. The
minimal entropy closed moment system is invariant under Galilean transforms. Lastly, if collision invariants of
the Boltzmann equations are used as modal basis functions, then the moment system yields a local conservation
law.
The set of all moments corresponding to a radiation flux density ùúìu > 0 is called the realizable set

R =

(cid:26)

u :

‚à´

S2

mùëî d‚Ñ¶ = u, ùëî ‚àà ùêπm

(cid:27)

.

(17)

Outside R the minimal entropy closure problem has no solution. At the boundary ùúïR, the optimization problem
becomes singular and ùúìu consists of a linear combination of dirac distributions. Near ùúïR the entropy closure
becomes ill conditioned and thus, a numerical optimizer requires a large amount of iterations to compute a
solution.

To mitigate this issue, a regularized version of the entropy closure problem has been proposed by [4],

‚à´

S2

inf
ùëî ‚ààùêπm

ùúÇ (ùëî) d‚Ñ¶ +

1
2ùõæ

(cid:13)
‚à´
(cid:13)
(cid:13)
(cid:13)

S2

(cid:13)
(cid:13)
mùëî d‚Ñ¶ ‚àí u
(cid:13)
(cid:13)

,

2

2

(18)

where ùõæ is the regularization parameter. Generally, moments of the regularized reconstructed radiation flux
‚à´
S2 mùúìu d‚Ñ¶ deviate from the non-regularized moments. For ùõæ ‚Üí 0, we recover the original entropy closure
density
of Eq. (15) and the moments coincide again. The regularized entropy closure is solvable for any u ‚àà R(ùëÅ +1) 2
and
preserves all structural properties of the non-regularized entropy closure [4]. One can also choose to regularize
only parts of the entropy closure, e.g. to preserve moments of specific interest. Then the partially regularized
entropy closure reads

‚à´

S2

inf
ùëî ‚ààùêπùëö

ùúÇ (ùëî) d‚Ñ¶ +

1
2ùõæ

(cid:13)
(cid:13)
(cid:13)
(cid:13)

‚à´

S2

mùëüùëî d‚Ñ¶ ‚àí ùë¢ùëü

(cid:13)
2
(cid:13)
(cid:13)
(cid:13)
2

s.t. uùëõùëü =

‚à´

S2

mùëõùëüùëî d‚Ñ¶,

(19)

where uùëõùëü denotes non-regularized moment elements and uùëü denotes regularized elements of the moment vector.
Recently, structure preserving deep neural networks have been successfully employed to approximate the entropy
closure [58] to accelerate the ùëÄùëÅ method. The authors leverage convexity of the optimization problem and use
corresponding input convex neural networks [6] to preserve structural properties of the closure in the neural
network based approximation.

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

7

3.2 Nodal discretizations
The ùëÜùëÅ method [46] employs a nodal discretization for the directional domain. To facilitate the computation of
integral terms that arise due to scattering, the nodal point sets are commonly chosen according to a quadrature
rule. In the application case of radiative transport, the directional domain is assumed to be the unit sphere
S2 ‚äÇ R3, thus a suitable parametrization is given by spherical coordinates
Ô£±Ô£¥Ô£¥Ô£¥Ô£≤
Ô£¥Ô£¥Ô£¥
Ô£≥

‚àöÔ∏Å1 ‚àí ùúá2 sin(ùúë)
‚àöÔ∏Å1 ‚àí ùúá2 cos(ùúë)
(cid:169)
(cid:173)
ùúá
(cid:171)

: ùúá ‚àà [‚àí1, 1] , ùúë ‚àà [0, 2ùúã)

Ô£ºÔ£¥Ô£¥Ô£¥Ô£Ω
Ô£¥Ô£¥Ô£¥
Ô£æ

S2 =

Note, that we can allow different particle velocities by scaling the unit sphere with a given maximum velocity.
The implementation assumes a slab geometry setting, i.e., lower dimensional velocity spaces are described by a
projection of S2 onto R2 and R, respectively. Thus, the parametrization of the two-dimensional slab geometry is
given by

(cid:170)
(cid:174)
(cid:174)
(cid:172)

(20)

.

ùëÉR2 (S2) =

(cid:26)(cid:18)‚àöÔ∏Å1 ‚àí ùúá2 sin(ùúë)
‚àöÔ∏Å1 ‚àí ùúá2 cos(ùúë)

(cid:19)

: ùúá ‚àà [‚àí1, 1] , ùúë ‚àà [0, 2ùúã)

(cid:27)

and the one dimensional case is described by

ùëÉR(S2) = {ùúá : ùúá ‚àà [‚àí1, 1]}

(21)

(22)

Hence the task is to derive a quadrature formula for the direction of travel. The perhaps most common approach
is the product quadrature rule. Here. a Gauss quadrature is used for ùúá and equally weighted and spaced points for
ùúë, i.e., when using ùëÅùëû points, we have

2ùúã
ùëÅùëû
If the Gauss quadrature for ùúá uses ùëÅùëû points, then we obtain a total of ùëÑ = ùëÅ 2
Gauss weights as ùë§ùê∫

ùëò with ùëò = 1, ¬∑ ¬∑ ¬∑ , ùëÅùëû, we obtain the product quadrature weights

ùúëùëñ = ùëñŒîùúë for

ùëñ = 1, . . . , ùëÅùëû

and Œîùúë =

.

(23)

ùëû possible directions. Denoting the

and points

ùë§ùëò ¬∑ùëÅùëû +‚Ñì =

2ùúãùë§ùê∫
ùëò
ùëÅùëû

‚àöÔ∏É

1 ‚àí ùúá2

1 ‚àí ùúá2

ùëò sin(ùúë‚Ñì )
ùëò cos(ùúë‚Ñì )

‚Ñ¶ùëò ¬∑ùëÅùëû +‚Ñì = (cid:169)
‚àöÔ∏É
(cid:173)
(cid:171)

.

(cid:170)
(cid:174)
(cid:172)

(24)

Other implemented quadrature methods include spherical Monte Carlo, Levelsymmetric [48], LEBEDEV [49] and
LDFESA [31]. A comparison of different quadrature sets and their approximation behaviour for ùëÜùëÅ methods can
be found in [13].

The evolution equations for ùúìùëû (ùë°, x) := ùúì (ùë°, x, ‚Ñ¶ùëû) are then given by

ùúïùë°ùúìùëû (ùë°, x)+‚Ñ¶ùëû ¬∑ ‚àáùë•

ùúìùëû (ùë°, x)
ùúå (x)

+ Œ£ùë° (ùë°)ùúìùëû (ùë°, x) =

ùëÑ
‚àëÔ∏Å

ùëù=1

ùë§ùëù Œ£ùë† (ùë°, ‚Ñ¶ùëû ¬∑ ‚Ñ¶ùëù )ùúìùëù (ùë°, x) .

(25)

A main disadvantage of ùëÜùëÅ methods are so called ray-effects [41, 50, 52], which are spurious artifacts that stem
from the limited number of directions in which particles can travel. Moreover, radiation therapy applications
exhibit forward-peaked scattering, which cannot be well-captured by classical quadrature rules.

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

8

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

To allow for moderate computational costs when computing scattering terms and to efficiently treat forward-
peaked scattering, we transform the nodal solution to a modal description and apply the more efficient ùëÉùëÅ
methodology for scattering terms. For this, we define a truncation order ùëÅ and construct the matrices O ‚àà
RùëÑ√ó(ùëÅ +1) 2
which maps the modal onto its nodal representation and M ‚àà R(ùëÅ +1) 2√óùëÑ which maps the nodal onto
its modal representation. Such matrices can be constructed by

O = (m(Œ©ùëò ))

ùëÑ
ùëò=1

, and M = (ùë§ùëò m(Œ©ùëò ))

ùëÑ
ùëò=1

.

In this case, we can replace the scattering term on the right-hand side of (25) by its ùëÉùëÅ counterpart. Collecting
the nodal solution in the vector ùùç then gives

ùúïùë° ùùç (ùë°, x)+‚Ñ¶ùëû ¬∑ ‚àáùë•

ùùç (ùë°, x)
ùúå (x)

+ Œ£ùë° (ùë°)ùùç (ùë°, x) = Oùö∫Mùùç .

(26)

4 DISCRETIZATION METHODS
4.1 Spatial Discretization

The KiT-RT framework is based on unstructured, cell-centered grids as spatial discretization. In the following,
we restrict ourselves to a two-dimensional spatial grid, however, the notations are straight forwardly extended
to three or one spatial dimensions. A unstructured grid ÀúX = {Xùëñ }ùëñ ‚ààùêº is a partition of a bounded spatial domain
X ‚äÇ Rùëë . A grid cell Xùëñ holds information about the coordinates of its centroid xùëñ , its measure ùê¥ùëñ , the indices of its
boundary vertices, indices of its neighbor cells ùëÅ (ùëñ) and cell faces. The information of the cell faces is encoded in
the unit-normal vector of the face dividing cell ùëñ and its neighbor ùëó ‚àà ùëÅ (ùëñ), multiplied with the measure of the
face and is denoted by nùëñ,ùëó . The grids used in this work are either triangular or quadrilateral, unstructured grids
in two spatial dimensions.

4.2 Finite volume methods

The nodal and modal methods are different approaches to discretize the velocity space of the Boltzmann equation,
however all of them result in a system of transport equations, that can be solved using a finite volume scheme.
Thus, we first describe a method agnostic finite volume scheme and afterwards point out the differences of the ùëÜùëÅ ,
ùëÉùëÅ and ùëÄùëÅ based implementations. We denote the temporal variable by ùë°, however the results hold for energy
interpreted as pseudo-time as well. Let g(ùë°, x) ‚àà Rùëö be the vector of conserved variables of a system of transport
equations

ùúïùë° g(ùë°, x) + ‚àáx ¬∑ F(g(ùë°, x)) = R(ùë°, x, g(ùë°, x)),

x ‚àà X, ùë° ‚àà [0, ùë°ùëì )

(27)

where F is the general flux function describing the solution transport, and R is a general right hand side, containing
velocity discretizations of collision terms, sources and absorption terms. The main discretization strategy is to
divide the spatial domain into an unstructured grid with ùëÅùë• cells and the time domain into ùëÅùë° discrete values
0 = ùë°0 < ¬∑ ¬∑ ¬∑ < ùë°ùëÅùë° ‚àí1. We consider the solution as an average over one space-time cell

and average Eq. (27) over one space-time cell

gùëõ
ùëñ =

1
ùê¥ùëñ

‚à´

Xùëñ

g dx

‚à´

‚à´ ùë°ùëõ+1

1
Œîùë°ùê¥ùëñ
‚à´

ùë°ùëõ

Xùëñ
‚à´ ùë°ùëõ+1

ùúïùë° g(ùë°, x) dùë° dx+

1
Œîùë°ùê¥ùëñ

Xùëñ

ùë°ùëõ

‚àáx ¬∑ ùêπ (g(ùë°, x)) dùë° dx =

1
Œîùë°ùê¥ùëñ

‚à´

‚à´ ùë°ùëõ+1

Xùëñ

ùë°ùëõ

ùëÖ(ùë°, x, g(ùë°, x)) dùë° dx,

(28)

(29)

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

9

where Œîùë° = ùë°ùëõ+1 ‚àí ùë°ùëõ. Solving the integrals using the Gauss theorem for the advection term and an explicit Euler
scheme for the time derivative yields

1
Œîùë°

(cid:0)gùëõ+1

ùëñ ‚àí gùëõ
ùëñ

(cid:1)+

ùêπ (g(ùë°, ùë•ùëñ,ùëó )) ¬∑ nùëñ,ùëó dùë° =

1
Œîùë°ùê¥ùëñ

‚à´ ùë°ùëõ+1

‚àëÔ∏Å

ùë°ùëõ

ùëó ‚ààùëÅ (ùëñ)

1
Œîùë°

‚à´ ùë°ùëõ+1

ùë°ùëõ

ùëÖ(ùë°, x, g(ùë°, ùë•ùëñ )) dùë°,

(30)

where ùëî(ùë°, ùë•ùëñ ) is the conserved variable evaluated at cell ùëñ and ùëî(ùë°, ùë•ùëñ,ùëó ) is the conserved variable evaluated at the
interface between cell ùëñ and its neighbor ùëó. To compute the actual value of gùëõ+1
, one needs to find approximations
for the flux integral. A common ansatz is of the form

ùëó

ùêπ (gùëõ

ùëó , gùëõ

ùëñ ) ‚âà

1
Œîùë°

‚à´ ùë°ùëõ+1

ùë°ùëõ

ùêπ (g(ùë°, ùë•ùëñ,ùëó )) ¬∑ nùëñ,ùëó dùë°,

(31)

ùëó , gùëõ

ùëñ ) at face (ùëñ, ùëó) is approximated using the cell averaged conserved variable at

where the numerical flux ùêπ (gùëõ
cell ùëñ and ùëó. For transport equations, a well known numerical flux is given by the Upwind scheme [43]
ùëñ ) ¬∑ nùëñ,ùëó ùêª (nùëñ,ùëó ¬∑ v) + ùêπ (gùëõ

(32)
where ùêª is the heaviside step function and v is the transport velocity vector. Finally, we approximate the source,
absorption and collision terms using the current cell average. Thus the explicit solution iteration of a first order
scheme reads

ùëó ) ¬∑ nùëñ,ùëó (cid:0)1 ‚àí ùêª (nùëñ,ùëó ¬∑ v)(cid:1) ,

ùëñ )ùë¢ùëù = ùêπ (gùëõ

ùêπ (gùëõ

ùëó , gùëõ

gùëõ+1
ùëñ

= gùëõ

ùëñ ‚àí

Œîùë°
ùê¥ùëñ

‚àëÔ∏Å

ùëó ‚ààùëÅ (ùëñ)

ùêπ (gùëõ

ùëó , gùëõ

ùëñ )ùë¢ùëù + Œîùë°ùëÖ(ùë°, xùëñ, gùëõ
ùëñ ).

(33)

Due to the fact that the scattering term ùëÖ is commonly stiff, implicit-explicit (IMEX) schemes can be used to
remove influences of scattering from time step restrictions. If we assume a linear scattering term, that is with a
given matrix Rùëõ+1

ùëñ we have ùëÖ(ùë°ùëõ+1, xùëñ, gùëõ

ùëñ ) = Rùëõ+1

ùëñ

ùëõ+1
(I ‚àí Œîùë°R
ùëñ

ùëõ+1
)g
ùëñ

ùëõ
ùëñ ‚àí
= g

gùëõ
ùëñ , the IMEX scheme reads
‚àëÔ∏Å

ùëõ
ùëõ
ùëñ )ùë¢ùëù .
ùëó , g
ùêπ (g

Œîùë°
ùê¥ùëñ

ùëó ‚ààùëÅ (ùëñ)

(34)

4.3 Second order finite volume schemes

The KiT-RT solver provides the option to evaluate the space and time discretizations using second order accurate
schemes. To this end, we use a Heun scheme for the temporal discretization and a second order upwind flux for
the numerical flux [9]. Whereas, first order spatial fluxes assume a constant solution value gùëõ
ùëñ in a cell ùëñ, a second
order upwind scheme is based on a linear reconstruction of the conserved variable. Therefore the inputs gùëõ
ùëñ and
gùëõ
ùëó to the numerical flux of Eq. (32) are replaced by
ùëõ
ùëõ
ùëñ = g
Àúg
ùëó = gùëõ
Àúgùëõ

ùëñ + Œ®ùëñ (cid:0)‚àáxg
ùëõ
ùëñ
(cid:16)
‚àáxgùëõ
ùëó + Œ®ùëó

¬∑ rùëñ,ùëó (cid:1) ,
(cid:17)

ùëó ¬∑ rùëó,ùëñ

(36)

(35)

,

where rùëñ,ùëó is the vector pointing from cell centroid xùëñ of cell ùëñ to the interface midpoint between cells ùëñ and ùëó,
and Œ®ùëñ is the flux limiter for cell ùëñ. This reconstruction is formally second order accurate on regular grids [3]
assuming exact evaluation of the gradient ‚àáxgùëõ
ùëñ is evaluated using the
Green-Gauss theorem with interpolated solution values at the cell interfaces,

ùëñ . The gradient of the conserved variable gùëõ

ùëõ
ùëñ ‚âà
‚àáxg

1
ùê¥ùëñ

‚àëÔ∏Å

ùëó ‚ààùëÅ (ùëñ)

1
2

(cid:16)

ùëõ
ùëõ
ùëñ + g
g
ùëó

(cid:17)

¬∑ ni,j.

(37)

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

10

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Second or higher order upwind spatial discretizations require the use of flux limiters in order to prevent the
generation of oscillations in shock regions and to achieve a monotonicity preserving scheme. In the KiT-RT
package, the Barth and Jespersen [9] limiter as well as the Venkatakrishnan limiter [66] are implemented.
Exemplary, we show the computation of the Barth and Jespersen limiter at cell ùëñ

Œ®ùëñ = min

ùëó

Ô£±Ô£¥Ô£¥Ô£¥Ô£≤
Ô£¥Ô£¥Ô£¥
Ô£≥

where we have

Œî2

min(1, gmax‚àígùëñ
min(1, gmin‚àígùëñ
1,

Œî2

),
),

if Œî2 > 0
if Œî2 < 0
else

,

Œî2 =

1
ùëõ
¬∑ rùëñ,ùëó,
‚àáxg
ùëñ
2
gmax = max(gùëñ, gùëó ),
gmin = min(gùëñ, gùëó ).

(38)

(39)

(40)

(41)

The second order Heun scheme for temporal discretization is a two step Runge-Kutta scheme with the iteration
formula

ùêπ (gùëõ

ùëó , gùëõ

ùëñ )ùë¢ùëù +

ùêπ (g‚àó

ùëó, g‚àó

ùëñ )ùë¢ùëù +

Œîùë°
ùê¥ùëñ

ùëõ
ùëñ ),
ùëÖ(g

Œîùë°
ùê¥ùëñ

ùëÖ(g‚àó
ùëñ ),

(42)

ùëõ
g‚àó
ùëñ ‚àí
ùëñ = g

ùëñ = g‚àó
g‚àó‚àó

ùëñ ‚àí

Œîùë°
ùê¥ùëñ

Œîùë°
ùê¥ùëñ

‚àëÔ∏Å

ùëó ‚ààùëÅ (ùëñ)
‚àëÔ∏Å

ùëó ‚ààùëÅ (ùëñ)

gùëõ+1
ùëñ

=

1
2

(cid:0)gùëõ

ùëñ + g‚àó‚àó
ùëñ

(cid:1) ,

which is based on the implicit trapezoidal integration method.

4.4 Numerical Fluxes

In the following we adapt the introduced numerical methods to the method specific notation and present the
detailed implementation. The space and time averaged conservative variables gùëõ
ùëñ for the nodal discretization
are given by the vector of the radiation flux ùùç = [ùúì1, . . . ,ùúìùëÅùëû ]ùëá evaluated at the quadrature points and for the
modal discretization by the moment vector u. The different methods are distinguishable by their numerical flux
function. The corresponding numerical flux for the ùëÜùëÅ method is given by

and the corresponding upwind flux reads

ùêπ (ùúì ùëõ

ùëó ,ùúì ùëõ

ùëñ )ùë¢ùëù = ‚Ñ¶ ¬∑ nùëñ,ùëó

ùêπ (ùúì n

i ) = ‚Ñ¶ ‚äó

ùúì ùëõ
ùëñ
ùúå (xi)

ùúì ùëõ
ùëñ
ùúå (xi)

ùêª (nùëñ,ùëó ¬∑ ‚Ñ¶) + ‚Ñ¶ ¬∑ nùëñ,ùëó

ùúì ùëõ
ùëó
ùúå (xj)

(cid:0)1 ‚àí ùêª (nùëñ,ùëó ¬∑ ‚Ñ¶)(cid:1) .

(43)

(44)

The numerical flux for the ùëÉùëÅ method reads

(45)
where ùê¥ùëñ are the flux Jacobians emerging from the spherical harmonics recursion scheme.To evaluate the numerical
flux with an upwind scheme, we decompose the flux Jacobians in their positive and negative definite parts,
ùëô + ùê¥‚àí
ùëô ,

ùëô = 1, . . . , ùëë

ùê¥ùëô = ùê¥+

(46)

ùêπ (un

i ) = (cid:2)A1uùëõ

ùëñ , A2uùëõ

ùëõ
ùëñ , A3u
ùëñ

(cid:3)ùëá ,

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

11

Then the numerical flux is given by

ùëõ
ùëõ
ùëñ , u
ùêπ (u
ùëó )ùë¢ùëù =

ùëë
‚àëÔ∏Å

ùëô=1

(cid:18)
ùê¥+
ùëô

(cid:18)
ùê¥‚àí
ùëô

uùëõ
ùëñ
ùúå (xùëñ )
uùëõ
ùëñ
ùúå (xùëñ )

+ ùê¥‚àí
ùëô

+ ùê¥+
ùëô

(cid:19)

(cid:19)

uùëõ
ùëó
ùúå (xùëó )
uùëõ
ùëó
ùúå (xùëó )

ùëõùëôùêª (ùëõùëô )+

ùëõùëô (1 ‚àí ùêª (ùëõùëô )) .

(47)

In contrast to the ùëÉùëÅ method, the flux function of the ùëÄùëÅ method cannot be expressed as a matrix multiplication,
but reads

ùêπ (un

i ) =

‚à´ 2

S

‚Ñ¶ ‚äó m(‚Ñ¶)ùúì

ùëõ (‚Ñ¶) d‚Ñ¶,
uùëñ

(48)

ùëõ is the reconstructed radiation flux density of the minimal entropy closure at the cell averaged moment uùëñ
whereùúì
ùëõ.
uùëñ
Using a quadrature rule for the velocity integral discretization and a numerical flux for every quadrature point,
we arrive at the kinetic numerical flux
ùëñ )ùë¢ùëù =

ùêπ (ùë¢ùëõ

ùëó , ùë¢ùëõ

ùëÑ
‚àëÔ∏Å

ùëû=1

ùë§ùëûmùëû‚Ñ¶ùëû ¬∑ nùëñ,ùëó

(cid:34) ùúìuùëõ
ùëñ ,ùëû
ùúå (xùëñ )

ùêª (‚Ñ¶ùëû ¬∑ nùëñ,ùëó ) +

ùúìuùëõ
ùëó ,ùëû
ùúå (xùëó )

(cid:0)1 ‚àí ùêª (‚Ñ¶ùëû ¬∑ nùëñ,ùëó )(cid:1)

(cid:35)

.

(49)

Note, that the updated solution of the ùëÄùëÅ method must still be a feasible moment for the minimal entropy closure
of Eq (15). To ensure this, one must either employ a flux-limiter [36], construct a realizability reconstruction [38]
or employ the regularized entropy closure formulation.
The numerical framework supports the usual Neumann and Dirichlet boundary conditions.

5 SOFTWARE ARCHITECTURE

The design principle of the KiT-RT software package is focused on efficient implementation, high re-usability of
its components and ease of extension. It contains a set of efficient numerical solvers for radiation transport, which
are constructed of basic, reusable building blocks. These building blocks can be freely arranged to implement
new solvers or tools for completely different applications. On the other hand, KiT-RT is equipped with an easy to
use command line interface based on readable configuration files, which allow easy manipulation of the solvers.
Thus the software is attractive for developers, who want to experiment with the framework and build their own
numerical solvers as well as users and application engineers, who want to gain experimental insights without
directly interfering with the codebase.
KiT-RT is implemented in modern C++ and uses mainly polymorphism for its construction. In the following, we
present the class structures used to build the numerical solvers and explain the used building blocks, which are
displayed in Fig. 1. Most building blocks consist of a virtual base class, which contains a static factory method
to build an instance of the concrete derived class, defined by the given configuration details. Furthermore, the
virtual base class defines the interface of this building block with other parts of the KiT-Framework.

5.1 Solver Class

The virtual SolverBase class is the basic blueprint for all time or energy dependent finite volume solvers of the
KiT-RT framework. It holds an instance of the Config, NumericalFlux, ProblemBase, QuadratureBase and Mesh
class.
It controls the screen, log and volume output of the solver. The screen output provides instantaneous feedback
of the solver state via the command line and gives information on the current iteration, the total mass of the
system, the residual of the radiation flux as well as the flow field and whether logs and volume outputs have

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

12

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Fig. 1. Class and inheritance structure of the virtual SolverBase Class. Each instantiated Solver has class members and
routines specific to its numerical structure.

been written to file. The file log carries the same information as the screen output in a tabular format. Lastly,
the volume output consists of vtk files with solver and problem specific solution data. The output data can be
specified in the solver configuration.
The method Solve() of the SolverBase class drives the execution of all derived solvers by iterating over the
time discretization of the numerical methods described in Section 4. This main time-iteration is displayed in
Algorithm 1. Each command is specified in the derived solver classes such as the ùëÉùëÅ solver and does not induce
any additional communication overhead for the parallelization architecture. The class PNSolver inherits from
SolverBase and does not own additional instances of other custom building blocks and overwrites the sub-routines
of Algorithm 1 for the ùëÉùëÅ equation specific numerical method, which allows for runtime solver assembly. It‚Äôs child
class is the CSDPNSolver, which is the implementation of the ùëÉùëÅ based continuous slowing down solver, that

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

13

Algorithm 1: Execution of the solver

Prepare outputs for Screen, Log and Volume
Solver specific pre-processing
for ùëñ = 1, . . . , ùëõùë° ùëì do

for ùëô = 1, . . . , ùëòùëüùëò do

Runge-Kutta pseudo iteration pre-processing
Update numerical fluxes
Perform finite volume step
Update Runge-Kutta intermediate solution

end
Iteration post-processing
Compute Runge-Kutta solution
Write Screen, Log and Volume output as configured

end
Post-processing of output

overwrites the solver-preprocessing routines for the continuous slowing down specific energy transformation.
The ùëÉùëÅ based solvers produce radiation flux and moments as output.

The class SNSolver adapts the sub-routines of Algorithm 1 for the ordinate based numerical methods and is

the parent class of the CSDSNSolver. ùëÜùëÅ based solvers produce the radiation flux as output.

Lastly, the MNSolver class contains the implementation of the ùëÄùëÅ numerical method and holds the module
SphericalBase, which controls the choice of basis functions ùëö(ùë£) of the velocity space, the module EntropyBase,
that controls the choice of entropy functional for the entropy closure and lastly the module OptimizerBase, which
controls the choice of numerical optimizer used to compute the entropy closure. The class CSDMNSolver inherits
from the MNSolver class and analogously overwrites the sub-routines of Algorithm 1 for the continuous-slowing
down equations. ùëÄùëÅ based solvers produce the radiation flux, moments and dual variable of the entropy closure
as output.

5.2 Mesh Class

The mesh class handles the computational meshes of the spatial discretization of the underlying differential
equation. It can handle 1ùê∑ meshes and 2ùê∑ unstructured triangular and quadrilateral meshes in the SU2 [55] mesh
format. The mesh class keeps a record of all geometry and adjacency information required for the finite volume
methods with first and second order fluxes.

5.3 Computational problem class

The problem class handles the setup of computational problems and test cases. It sets the initial conditions for the
solution of the numerical solver and manages space, time or energy dependent material properties for the solver.
The abstract class problem base holds pointers to the Mesh and Config classes and creates instances of specific
problems depending on the chosen configurations. Each implemented problem has two child classes, one for the
ordinate based and one for moment based solvers. The moment based problem classes compute the moments of
the initial condition and sources of the corresponding kinetic densities specified in the ordinate based problem
class.
The solver framework comes with a number of pre-implemented test cases and functionalities. This includes

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

14

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

standard 1D and 2D test cases such as line source and checkerboard for the radiative transfer solvers, as well as
isotropic and directed sources with different background media which can be loaded from a user-supplied image
file, for the continuous slowing down solvers. Custom test cases can be easily added by the user, based on the
provided examples and our modular approach.

5.4 Quadrature Class

The virtual quadrature base class creates instances of specific numerical quadratures using its static factory
method. The quadratures are intended to integrate over the velocity space of the Boltzmann equation, however,
they can be applied to other use-cases as well. The implemented quadratures are distinguished by the dimension
of the integrated velocity space and the integration area. Each quadrature has a specifiable order and manages
the integration points in Cartesian and spherical coordinates as well as the corresponding quadrature weights.
By default, the quadrature rules integrate over the unit sphere, but the integration region can be scaled.

5.5

IO/Use of Config Files

The KiT-RT solver is a command line interface based program and takes one argument, the configuration
file. This file is parsed and the specified modules of the KiT-RT framework are arranged for a solver instance
or another custom tool. The configuration file is a document containing option specifications of the form
CONFIG_OPTION=VALUE. A solver configuration contains information about file input and output, where the
location of the mesh file, the volume output files and the log files are specified. Then, the computational problem
and the problem specific parameters, e.g. scattering coefficient, final time, spatial dimension and boundary
conditions, are set. Next, the solver specific options are set. In the example of an ùëÄùëÅ solver, the choice of velocity
basis, the maximal degree of the basis functions, the CFL number, spatial integration order, entropy functional,
optimizer, quadrature and quadrature order are set. Finally, quantities for screen, volume and log output are
specified along with their output-frequency. Example configuration files for the numerical results of Section 7
can be found in the Github Repository https://github.com/CSMMLab/KiT-RT.

5.6 Practices of modern software development

The entire solver and associated documentation is put under the version control system git [15] to greatly enhance
collaborative workflows. Additionally, the web-hosting service GitHub is used to provide global access to the
code which is licensed under the open-source MIT license.
To further improve collaborations, the service also acts as a central host for progress and issue tracking, deployment
and maintaining code integrity. The latter is obtained through automated testing in terms of unit test, which
ensure the validity of smaller code instances such as functions or classes by testing predefined inputs against
their expected result, or regression tests which validate the correctness of the solver as a whole based on small
test problems and compare obtained results to reference solutions. These test are automatically executed every
time code changes are submitted to the main development branches or if a merge request is opened.
If any of the automated tests fail for a new submit it is rejected for merging, ensuring code integrity and quality
on the important development streams at all times. Combining the test information, we can further define
metrics such as a test coverage describing the percentage of code lines validated by any form of testing and
ultimately helps building trust in the code framework. For the KiT-RT framework the test coverage is reported
to the coveralls.io service at https://coveralls.io/github/CSMMLab/KiT-RT. The KiT-RT framework features
relatively modest software dependencies, but nevertheless being able to build and run the code correctly can
be troublesome on many systems. To circumvent this issue, we provide a pre-configured build environment
through the containerization engine Docker [51]. These so-called Docker containers have been developed for
consistent software development and deployment and work as isolated instances with a minimal software stack

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

15

comparable to lightweight virtual machines. The respective specialized docker image is also publicly available at
https://hub.docker.com/r/kitrt/test.
As also mentioned previously, GitHub can also be used for the deployment of precompiled software packages
and the associated documentation. The documentation is automatically is automatically generated as part of
a complete software build. It is written in the reStructuredText Markup language and uses the documentation
framework Sphinx [11], which compiles the Markup files to a series of linked HTML files or in other words a
local website. To make the website itself publicly available it is hosted by ReadTheDocs 1 service under the URL
https://kit-rt.readthedocs.io.
With all these tools in mind, the development workflow can be described as follows:
Starting on GitHub, each developer can create a new branch based on the development branch or fork the entire
KiT-RT framework to obtain a personal workspace. After the developers have added their changes, they can file a
merge request that will automatically be tested by the continuous integration processes and a core developer
will perform a code review of all changes. Provided all test succeed and the core developer is satisfied with the
added/changed code quality, it will be merged into the development branch. If enough new features have been
added into the development branch, it will be merged to the master branch and the software will obtain a new
version number (major or minor).

6 PARALLEL SCALING
In the following we investigate the parallel performance of the three base solver implementations ùëÜùëÅ , ùëÉùëÅ and ùëÄùëÅ ,
where we follow [53] for the brief review of parallel scalings. The speedup of a parallel algorithm is defined as

ùëÜ (ùëõ, ùëù) =

ùëá ‚àó (ùëõ)
ùëá (ùëõ, ùëù)

,

(50)

where ùëá ‚àó (ùëõ) is the execution time of the best inherently serial algorithm with input size ùëõ and ùëá (ùëõ, ùëù) the time
for the parallel implementation with ùëù processing workers and input size ùëõ. In general the best serial algorithm
may be different than the parallel algorithm, however in our application case, the finite-volume discretization
scheme does not change for serial implementation.
In theory the best possible speedup is linear [19], i.e., ùëÜ (ùëõ, ùëù) = ùëù, thus the measure of parallel efficiency is

ùê∏ (ùëõ, ùëù) =

ùëÜ (ùëõ, ùëù)
ùëù

.

(51)

In practise the speedup and parallel efficiency of an algorithm is limited by spawning and communication
overhead of the parallel workers as well as the fraction of inherently serial code ùëì , that exists in any algorithm.
Thus the upper bound for the speedup is given by Amdahl [27]

ùëÜ (ùëõ, ùëù) ‚â§

1
ùëì + (1 ‚àí ùëì )/ùëù

(52)

For larger input sizes, the fraction of inherently serial code ùëì typically decreases, which enables the use of highly
parallel implementations. Two common approaches to measure the parallel performance are given by the strong
and weak scaling approach, where the former describes an experiment, where for fixed input size ùëõ the amount of
parallel workers ùëù is increased and the their timing is measured, which directly results in the speedup of Eq. (50).
The latter increases the input size ùëõ proportionally to the worker count ùëù. A perfectly parallel algorithm would
have a constant parallel time ùëá (ùëõ, ùëù).

The philosophy of the parallel implementation of the solvers of this work are based on the independence of the
performed computations of the grid cells. As Algorithm 1 displays, during one (pseudo) time iteration of a solver,

1https://readthedocs.org/

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

16

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

a set of instructions are calculated. Each instruction can be carried out independently for each grid cell and only
in between two instruction sets, communication between parallel workers need to be established. Therefor, the
parallel implementation spawns a set of parallel workers with shared memory access and distributes the spatial
grid among them to carry out the current instruction. The input size ùëõ is thus given by the number of grid cells of
the spatial discretization. We perform a strong parallel scaling study for the implementation of the ùëÄùëÅ , ùëÜùëÅ and

Fig. 2. Strong parallel scaling (left) and parallel efficiency (right) for the ùëÄùëÅ , ùëÜùëÅ and ùëÉùëÅ solver

ùëÉùëÅ solver on the Linesource test case, as described in Section 7.1, with a fixed unstructured triangular mesh of
size ùëõ = 578290 and varying number of shared memory parallel workers ùëù. We choose ùëù = 1, . . . , 16, furthermore,
the solvers allocated memory does not exceed the systems memory. Figure. 2 shows a comparison of the solvers
parallel scalings and efficiency. It is apparent, that the ùëÄùëÅ solver enjoys the highest speedup even for a high
parallel worker count, while the ùëÉùëÅ and ùëÜùëÅ solver experience diminishing returns for more than ùëù = 12 workers.
The performance of the continuous slowing down solver implementations follows the corresponding base solver
performance, since the same spatial, velocity and (pseudo) temporal discretizations are used.

7 VALIDATION

For validation and a comparison of the implemented solvers, we consider a selection of the test cases provided
within the problem class (5.3). The ùëÜùëÅ solver is validated with a comparison with Kinetic.jl [69, 70]. The continuous
slowing down solvers are further compared to a reference Monte Carlo solution computed using TOPAS [56] as
well as the validated spherical harmonics solver StaRMAP [59].

7.1

Inhomogeneous linesource

In the following, we compare the numerical results of our framework to a Monte Carlo solution computed using
TOPAS [56] as well as the staggered-grid spherical harmonics solver StaRMAP [59]. The problem considered is an
inhomogeneous linesource testcase, which extends the classical linesource benchmark [22, 23] to a steady-state
but energy dependent setting. As background density, a piece-wise constant function ùúå (x) = 1 + 4 ¬∑ 1ùëãùë¢ (x) for
x ‚àà [0, 1]2 is chosen. Here 1ùê¥ : ùëã ‚Üí R denotes the indicator function for the set ùê¥. The upper part of the spatial
domain on which we prescribe a reduced density is defined as ùëãùë¢ = [0, 1] √ó [0.56, 1]. At a maximal energy of

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

ùê∏max = 1, a particle beam is positioned in the center of the spatial domain x0 = 1

2 (1, 1)ùëá , which is modelled as

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

17

ùúì (ùê∏max, x, ‚Ñ¶) =

1
2ùúãùúé 2 exp

(cid:18)

‚àí

(cid:19)

‚à•x ‚àí x0‚à•2
2ùúé 2

ùúì (ùê∏max, x, ‚Ñ¶) =0

for x ‚àà ùúïùëã .

Here a standard deviation of ùúé = 0.01 is chosen to obtain a sharp particle beam in the center. The spatial grid
for all deterministic methods is a structured rectangular grid with 3002 cells. Due to the functionality of the
Monte-Carlo software, we use a three-dimensional grid and project the ùë•3-domain onto the ùë•1 ‚àí ùë•2 plane. To allow
for feasible costs, the Monte-Carlo method uses a coarser grid resolution of 100 spatial cells per dimension and
100000 Monte-Carlo runs are computed to reduce statistical noise. The ùëÜùëÅ solver uses a product quadrature rule
of order 20 for the streaming step and spherical moments up to order 8 to compute scattering terms. Similarly,
the ùëÉùëÅ solver employs spherical moments up to order 8. The time step restriction of all deterministic methods
picks a CFL number of 0.7. All methods are second order in space and first order in time.

Fig. 3. Comparison of simulation results of deterministic and stochastic methods.

The resulting dose profile is plotted in Figure 3 along the ùë•2-axis in the interval ùë•2 ‚àà [0.3, 0.65]. It is observed
that the dose drops in the transition between densities 1 and 5. All methods show a similar behaviour and
(except for the center region) agree well with the Monte-Carlo results. Note that the increased Monte-Carlo dose
results from the coarser mesh, leading to a coarser initial particle distribution. Moreover, it is observed that the
regularized ùëÄùëÅ method seems to coincide with its non-regularized counterpart.

7.2 Checkerboard

The checkerboard test case mimics a nuclear reactor block with a strong radiative source in the domain center,
which is denoted by Xùëû, and several highly absorptive regions Xùëé placed in a checkerboard pattern it. The spatial
layout of this two dimensional test case can be found in Figure 4, where the source region Xùëû is marked orange
and the absorption regions Xùëé are marked black. The corresponding time dependent linear Boltzmann equation
reads

ùúïùë°ùúì + ‚Ñ¶‚àáxùúì + Œ£ùë° =

‚à´

S2

Œ£ùë† (ùë°, x, ‚Ñ¶, ‚Ñ¶‚àó)ùúì (‚Ñ¶‚àó) d‚Ñ¶‚àó + ùëû(t, x, ‚Ñ¶)

(53)

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

18

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Fig. 4. Layout of the two dimensional checkerboard test case.

for x ‚àà [0, 7]2, ùë° ‚àà [0, 10) and ‚Ñ¶ ‚àà ùëÉR2 (S2). This corresponds to Eq. (9) with ùúå (x) = 1. We equip the equation
with Dirichlet boundary conditions and initial condition
ùúì (ùë°, x, ‚Ñ¶) =0,
ùúì (ùë°, x, ‚Ñ¶) =0,

(55)
to obtain a well posed problem. Furthermore, the scattering kernel ùëò and source term ùëû are assumed to be isotropic
and constant in time. The scattering cross and absorption cross sections are given by

x ‚àà ùúïX
ùë° = 0

(54)

Œ£ùë† (x) =

(cid:40)

0 x ‚àà ùëãùëé
else
1

,

Œ£ùë° (x) =

(cid:40)

10 x ‚àà Xùëé
else
1

,

and the isotropic source is given by

ùëû(x, ‚Ñ¶, ùë°) =

(cid:40)

1 x ‚àà Xùëû
else
0

.

(56)

(57)

We create a unstructured triangular mesh with 25000 cells to discretize the spatial domain with regard to the
absorption and source regions, such that the region boundaries coincide with the mesh faces. The simulation
is computed until final time ùë°ùëì = 10 using various solver configurations. All employed solvers use a second
order upwind flux as the spatial discretization and a second order explicit Runge Kutta scheme for temporal
discretization with CFL number equals 0.45, since ùëÄùëÅ solvers with non-regularized entropy closure require a
CFL number smaller than 0.5 for stability [5, 36, 38]. The solution computed at final time ùë°ùëì = 10 is displayed in
Fig. 5, where we can see the scalar flux

Œ®(x, ùë°) =

‚à´ 2

S

ùúì d‚Ñ¶,

(58)

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

19

in the countour plot. The radiation flux is highest at the source region Xùëû and almost zero in the absorption
region Xùëé for all solvers. Towards the top of the domain, the radiation travels freely, whereas towards the left,
right and bottom, the radiation expansion is damped by absorption regions. Figure 5 shows the solution computed

Fig. 5. Simulation results for the S10 solver in linear scale and log scale.

with the S10 solver with an order 10 tensorized Gauss Legendre Quadrature. On the logarithmic scale plot, one
can see ray effects right outside the chokepoints between the absorption regions, which are typical artifacts for
ùëÜùëÅ [12]. We validate the S10 solver against the implementation of the kinetic.jl framework [70], and display the
vertical cross section of the KiT-RT and kinetic.jl bases solution at final time ùë°ùëì in Fig. 6 using the same triangular
mesh. We can see, that the deviation between implementations is below the 1e‚àí3, which is the characteristic
length of a grid cell.
Figure 7 displays the solution computed with the ùëÉ5 solver using an order 5 Spherical Harmonics basis. Compared
to the ùëÜ10 solution, there are no ray effects visible at the chokepoints between absorption regions.
We show now the solution for different entropy based moment, i.e., ùëÄùëÅ solvers, that use an order 10 tensorized
Gauss Legendre quadrature to evaluate the kinetic flux. Figure 8 displays a M3 solution using an order 3 spherical
harmonics moment basis computed with a Newton optimizer with line-search configured to accuracy 1e‚àí7.
The same solver configuration is displayed in Figure 9, where the entropy closure is replaced by the partial
regularized minimal entropy problem of Eq. (19) with the regularizer ùõæ set to 1ùëí ‚àí 3 and a non-regularized moment
of order zero. While on the linear scale plots, both solutions are similar, on the log scale plots, one can see that
the regularized ùëÄùëÅ solver computes much lower values within the absorption regions. Furthermore, the log plot
shows that the regularized ùëÄùëÅ solution oscillates slightly in regions with small scalar fluxes. Figure 10 shows a
direct comparison of a vertical cross section using all four presented solvers. In the vast majority of the spatial
domain, the solutions correspond well, with the exception of absorption regions, i.e., ùë• ‚àà [1, 2], where the ùëÄ3
solution computes slightly bigger values and the regularized ùëÄ3 solution captures the absorption region slightly
better than the reminding solvers.
Next we compare a non-regularized M1 solver using a monomial basis of order 1 and a Newton solver based

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

20

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Fig. 6. Vertical cross section through the solution of the S10 method. Comparison of the KiT-RT and kinetic.jl packages.

Fig. 7. Simulation results for the P5 solver in linear scale and log scale.

entropy computation, shown in Fig. 11, with a similar solver configuration, which employs a neural network
to compute the entropy closure, shown in Fig 12. Various data driven entropy closures have been introduced
by [57, 58]. In the KiT-RT package we have compiled the trained networks by [58] to C++ and have implement a
fast tensorflow [1] backend for seamless integration into the KiT-RT framework. The neural network used in the
simulation of Fig 12 is an input-convex architecture. Both, the Newton based and neural network based solution
correspond well. As Fig. 13 shows, only in at the top of the domain, i.e., at ùë• ‚âà 6.5 in the cross section plot, we see
a small deviation between the methods. In this region at the wave-front of the radiative transport, the moments

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

21

Fig. 8. Simulation results for the M3 solver with spherical harmonics basis in linear scale and log scale.

Fig. 9. Simulation results for the M3 solver with spherical harmonics basis and regularized entropy in linear scale and log
scale.

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

22

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Fig. 10. Vertical cross section through the solution of the checkerboard test case. Comparison of the ùëÜ10, ùëÉ5 ,ùëÄ3 and regularized
ùëÄ3 solver .

of the kinetic equation are close to the boundary of the realizable set, where on the one hand, the Newton based
solver needs more iterations and thus more wall time to compute the solution to the optimization problem, and
on the other hand, the neural network accuracy declines.
Neural network based entropy closures are constructed to accelerate the time consuming ùëÄùëÅ method. In the

Fig. 11. Simulation results for the ùëÄ1 solver with monomial basis in linear scale and log scale.

following we validate the speedup through the neural network entropy closure using a larger mesh of 700000 grid

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

23

Fig. 12. Simulation results for the ùëÄ1 solver with monomial basis and neural network based entropy computation in linear
scale and log scale.

Fig. 13. Cross section comparison of the Checkerboard test case using the ùëÄ1 and neural network based ùëÄ1 method.

cells, since in [58] it is shown, that the due to data transformation to tensorflow tensors, the speedup is faster for
higher data-set sizes. The time consumption of the ùëÄ1 and neural network based ùëÄ1 solver is illustrated in Table 1,
where one can see that the neural network based closure accelerates the compuational time by 89.33-87.01%.

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

24

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Table 1. Timings of the neural network based ùëÄ1 solver compared to the Newton based ùëÄ1 solver

4 cores
12 cores

7.3 Beam in 2D patient CT

ùëÄ1 Newton ùëÄ1 neural network runtime reduction
757.88979
258.6485

80.810305
33.606152

89.33%
87.01%

Having validated the CSD solvers against StarMAP and a Monte Carlo framework in section 7.1, we now examine
a realistic 2D CT scan of a lung patient as a proof of concept for the application of our framework to radiation
therapy computations. The patient data was retrieved from an open source data set [47] in The Cancer Imaging
Archive (TCIA) [16]. The patient is irradiated with an electron beam of ùê∏max = 20 MeV. We model this beam as
the initial condition

ùúì (ùê∏ùëöùëéùë•, x, ‚Ñ¶) =

1

(2ùúã)3/2ùúéŒ©2

ùúéùë•ùúéùë¶

¬∑ exp(‚àí(ùúáŒ©2 ‚àí Œ©2)2/2ùúéŒ©2) ¬∑ exp(‚àí(ùúáùë•1 ‚àí ùë•1)2/2ùúéùë•1) ¬∑ exp(‚àí(ùúáùë•2 ‚àí ùë•2)2/2ùúéùë•2),

, ùúáùë•2 ) = (2.5cm, 5.8cm) is the beam position within the 6cmùë•6cm domain and ùúáŒ©2 = ùúã

where (ùúáùë•1
2 rad is the beam
direction. The remaining parameters are chosen as ùúéùë•1 = ùúéùë•2 = ùúéŒ©2 = 0.1. To determine a tissue density ùúå for
given gray-scale values of the CT image, we set the maximum density, represented by white pixels, to the density
of bone ùúåbone = 1.85 g/cm3. The remaining tissue is scaled such that the minimum pixel value of zero corresponds
to a minimal density of ùúåmin = 0.05 g/cm3. This corresponds approximately to the lower bound of observed lung
densities [34].

Figure 14 compares the normalized dose for a CSD ùëÜ13, ùëÉ13 and ùëÄ5 solver. While all methods show similar
behaviour and are able to capture the effects of heterogeneities in the patient density, some differences e.g. in
the maximum depth of the ùëÜ13 solution compared to ùëÉ13 and ùëÄ5 or the shape of the lowest two isolines can
be observed. The cross sections in figure 15 further show that the ùëÜ13 dose has a lower maximum and higher
minimum value than the ùëÄ5 and to a lesser extent also ùëÉ13 solutions.

8 CONCLUSION

In this work, we have presented a collection of deterministic transport solvers for radiation therapy applications.
The methods agree well with results obtained with conventional radiation therapy codes. Due to the use of
polymorphism, we are able to guarantee a straight forward extension to further numerical methods, which
facilitates the investigation of novel radiation therapy solvers and their comparison to conventional methods.

ACKNOWLEDGEMENTS

All authors of this work have contributed equally to this project. The authors would like to thank Thomas
Camminady for his help with implementing spherical quadrature rules. Jonas Kusch has been funded by the
Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) ‚Äì 491976834. Pia Stammer is supported
by the Helmholtz Association under the joint research school HIDSS4Health ‚Äì Helmholtz Information and Data
Science School for Health. The work of Steffen Schotth√∂fer is funded by the Priority Programme "Theoretical
Foundations of Deep Learning (SPP2298)" by the Deutsche Forschungsgemeinschaft.

REFERENCES

[1] Mart√≠n Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S. Corrado, Andy Davis, Jeffrey Dean,
Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal Jozefowicz, Lukasz
Kaiser, Manjunath Kudlur, Josh Levenberg, Dandelion Man√©, Rajat Monga, Sherry Moore, Derek Murray, Chris Olah, Mike Schuster,
Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent Vanhoucke, Vijay Vasudevan, Fernanda Vi√©gas,

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

25

(a) CT scan

(b) ùëÜ13

(c) ùëÉ13

(d) ùëÄ5

Fig. 14. Patient CT scan with lung tumor (red box) (a) as well as corresponding simulation results for the ùëÜ13, ùëÉ13 and ùëÄ5
solver with spherical harmonics basis and partially regularized entropy.

Oriol Vinyals, Pete Warden, Martin Wattenberg, Martin Wicke, Yuan Yu, and Xiaoqiang Zheng. 2015. TensorFlow: Large-Scale Machine
Learning on Heterogeneous Systems. https://www.tensorflow.org/ Software available from tensorflow.org.

[2] IK Abu-Shumays. 2001. Angular quadratures for improved transport computations. Transport Theory and Statistical Physics 30, 2-3

(2001), 169‚Äì204.

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

26

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

Fig. 15. Vertical (at ùë• = 2.5cm) and horizontal (at ùë¶ = 5cm) cross section through the normalized dose in the patient CT.
Comparison of the ùëÜ13, ùëÉ13 and partially regularized ùëÄ5 solver.

[3] Michael Aftosmis, Datta Gaitonde, and T. Sean Tavares. 1995. Behavior of linear reconstruction techniques on unstructured meshes.

AIAA Journal 33, 11 (1995), 2038‚Äì2049. https://doi.org/10.2514/3.12945 arXiv:https://doi.org/10.2514/3.12945

[4] Graham W. Alldredge, Martin Frank, and Cory D. Hauck. 2018. A regularized entropy-based moment method for kinetic equations.

arXiv:1804.05447 [math.NA]

[5] Graham W. Alldredge, Cory D. Hauck, and Andr√© L. Tits. 2012. High-Order Entropy-Based Closures for Linear Transport in Slab
Geometry II: A Computational Study of the Optimization Problem. SIAM Journal on Scientific Computing 34, 4 (2012), B361‚ÄìB391.
https://doi.org/10.1137/11084772X arXiv:https://doi.org/10.1137/11084772X

[6] Brandon Amos, Lei Xu, and J. Zico Kolter. 2016. Input Convex Neural Networks. CoRR abs/1609.07152 (2016). arXiv:1609.07152

http://arxiv.org/abs/1609.07152

[7] P Andreo. 1991. Monte Carlo techniques in medical radiation physics. 36, 7 (jul 1991), 861‚Äì920. https://doi.org/10.1088/0031-9155/36/7/001
[8] Richard Barnard, Martin Frank, and Michael Herty. 2012. Optimal radiotherapy treatment planning using minimum entropy models.

Appl. Math. Comput. 219, 5 (2012), 2668‚Äì2679.

[9] TIMOTHY BARTH and DENNIS JESPERSEN. [n. d.]. The design and application of upwind schemes on unstructured meshes. https:

//doi.org/10.2514/6.1989-366 arXiv:https://arc.aiaa.org/doi/pdf/10.2514/6.1989-366

[10] Christoph B√∂rgers. 1998. Complexity of Monte Carlo and deterministic dose-calculation methods. Physics in Medicine & Biology 43, 3

(1998), 517.

[11] Georg Brandl. 2021. Sphinx documentation. URL http://sphinx-doc.org/ (2021).
[12] Thomas Camminady, Martin Frank, Kerstin K√ºpper, and Jonas Kusch. 2019. Ray effect mitigation for the discrete ordinates method

through quadrature rotation. J. Comput. Phys. 382 (2019), 105‚Äì123.

[13] Thomas Camminady, Martin Frank, and Jonas Kusch. 2021. Highly uniform quadrature sets for the discrete ordinates method. Nuclear

Science and Engineering (2021).

[14] Kenneth M Case and Paul Frederick Zweifel. 1967. Linear transport theory. (1967).
[15] Scott Chacon and Ben Straub. 2014. Pro git. Springer Nature.
[16] K Clark, B Vendt, K Smith, J Freymann, J Kirby, P Koppel, S Moore, S Phillips, D Maffitt, M Pringle, L Tarbox, and F Prior. 2013. The
Cancer Imaging Archive (TCIA): Maintaining and Operating a Public Information Repository. Journal of Digital Imaging 26, 6 (2013),
1045‚Äì1057. https://doi.org/10.1007/s10278-013-9622-7

[17] Roland Duclous, Bruno Dubroca, and Martin Frank. 2010. A deterministic partial differential equation model for dose calculation in

electron radiotherapy. Physics in Medicine & Biology 55, 13 (2010), 3843.

[18] Leonard Eyges. 1948. Multiple scattering with energy loss. Physical Review 74, 10 (1948), 1534.
[19] V. Faber, Olaf M. Lubeck, and Andrew B. White. 1986. Superlinear speedup of an efficient sequential algorithm is not possible. Parallel

Comput. 3, 3 (1986), 259‚Äì260. https://doi.org/10.1016/0167-8191(86)90024-4

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

KiT-RT: An extendable framework for radiative transfer and therapy ‚Ä¢

27

[20] Matthias Fippel and Martin Soukup. 2004. A Monte Carlo dose calculation algorithm for proton therapy. Medical physics 31, 8 (2004),

2263‚Äì2273.

[21] Martin Frank, Jonas Kusch, Thomas Camminady, and Cory D Hauck. 2020. Ray effect mitigation for the discrete ordinates method using

artificial scattering. Nuclear Science and Engineering 194, 11 (2020), 971‚Äì988.

[22] BD Ganapol. 1999. Homogeneous infinite media time-dependent analytic benchmarks for X-TM transport methods development. Los

Alamos National Laboratory (1999).

[23] BD Ganapol. 2008. Analytical benchmarks for nuclear engineering applications. Case Studies in Neutron Transport Theory (2008).
[24] C. Kristopher Garrett and Cory D. Hauck. 2013. A Comparison of Moment Closures for Linear Kinetic Transport Equations: The Line

Source Benchmark. Transport Theory and Statistical Physics 42, 6-7 (2013), 203‚Äì235.

[25] Kent A Gifford, John L Horton, Todd A Wareing, Gregory Failla, and Firas Mourtada. 2006. Comparison of a finite-element multigroup

discrete-ordinates code with Monte Carlo for radiotherapy calculations. Physics in Medicine & Biology 51, 9 (2006), 2253.

[26] V Gr√©goire and TR Mackie. 2011. State of the art on dose prescription, reporting and recording in Intensity-Modulated Radiation

Therapy (ICRU report No. 83). Cancer/Radioth√©rapie 15, 6-7 (2011), 555‚Äì559.

[27] John L. Gustafson. 2011. Amdahl‚Äôs Law. Springer US, Boston, MA, 53‚Äì60. https://doi.org/10.1007/978-0-387-09766-4_77
[28] Hartmut Hensel, Rodrigo Iza-Teran, and Norbert Siedow. 2006. Deterministic model for dose calculation in photon radiotherapy. Physics

in Medicine & Biology 51, 3 (2006), 675.

[29] Kenneth R Hogstrom, Michael D Mills, and Peter R Almond. 1981. Electron beam dose calculations. Physics in Medicine & Biology 26, 3

(1981), 445.

[30] Mi Huang. 2015. Application of deterministic 3D SN transport driven dose kernel methods for out-of-field dose assessments in clinical

megavoltage radiation therapy. Ph. D. Dissertation. Georgia Institute of Technology.

[31] J.J. Jarrel and M.L. Adams. 2011. Discrete-ordinates quadrature sets based on linear discontinuous finite elements. Proc. International

Conference on Mathematics and Computational Methods applied to Nuclear Science and Engineering (2011).

[32] Xun Jia, Jan Sch√ºmann, Harald Paganetti, and Steve B Jiang. 2012. GPU-based fast Monte Carlo dose calculation for proton therapy.

Physics in Medicine & Biology 57, 23 (2012), 7783.

[33] O. Koch and C. Lubich. 2007. Dynamical low-rank approximation. SIAM J. Matrix Anal. Appl. 29, 2 (2007), 434‚Äì454. https://doi.org/10.

1137/050639703

[34] Ehiichi Kohda and Naoyuki Shigematsu. 1989. Measurement of lung density by computed tomography: implication for radiotherapy.

The Keio Journal of Medicine 38, 4 (1989), 454‚Äì463.

[35] Thomas Krieger and Otto A Sauer. 2005. Monte Carlo- versus pencil-beam-/collapsed-cone-dose calculation in a heterogeneous

multi-layer phantom. 50, 5 (feb 2005), 859‚Äì868. https://doi.org/10.1088/0031-9155/50/5/010

[36] C. Kristopher Garrett, Cory Hauck, and Judith Hill. 2015. Optimization and large scale computation of an entropy-based moment closure.

J. Comput. Phys. 302 (2015), 573 ‚Äì 590.

[37] Kerstin Kuepper. 2016. Models, numerical methods, and uncertainty quantification for radiation therapy. Ph. D. Dissertation. Universit√§ts-

bibliothek der RWTH Aachen.

[38] Jonas Kusch, Graham W Alldredge, and Martin Frank. 2019. Maximum-principle-satisfying second-order intrusive polynomial moment

scheme. The SMAI journal of computational mathematics 5 (2019), 23‚Äì51.

[39] Jonas Kusch and Pia Stammer. 2021. A robust collision source method for rank adaptive dynamical low-rank approximation in radiation

therapy. arXiv preprint arXiv:2111.07160 (2021).

[40] Edward W Larsen, Moyed M Miften, Benedick A Fraass, and Iaƒ±n AD Bruinvis. 1997. Electron dose calculations using the method of

moments. Medical physics 24, 1 (1997), 111‚Äì125.

[41] Kaye D Lathrop. 1968. Ray effects in discrete ordinates equations. Nuclear Science and Engineering 32, 3 (1968), 357‚Äì369.
[42] Kaye D Lathrop. 1971. Remedies for ray effects. Nuclear Science and Engineering 45, 3 (1971), 255‚Äì268.
[43] Randall J. LeVeque. 1992. Numerical methods for conservation laws (2. ed.). Birkh√§user. 1‚Äì214 pages.
[44] C. Levermore. 1996. Moment closure hierarchies for kinetic theories. Journal of Statistical Physics 83 (1996), 1021‚Äì1065.
[45] C. David Levermore. 1997. Entropy-based moment closures for kinetic equations. Transport Theory and Statistical Physics 26, 4-5 (1997),

591‚Äì606.

[46] Elmer Eugene Lewis and Warren F Miller. 1984. Computational methods of neutron transport. (1984).
[47] P Li, S Wang, T Li, J Lu, Y Huang Fu, and D Wang. 2020. A Large-Scale CT and PET/CT Dataset for Lung Cancer Diagnosis. The Cancer

Imaging Archive (2020). https://doi.org/10.7937/TCIA.2020.NNC2-0461

[48] Gianluca Longoni. 2004. Advanced quadrature sets and acceleration and preconditioning techniques for the discrete ordinates method in

parallel computing environments. Ph. D. Dissertation. University of Florida.

[49] G Marchuk and V I Lebedev. 1986. Numerical methods in the theory of neutron transport. (1 1986). https://www.osti.gov/biblio/7057084
[50] Kirk A Mathews. 1999. On the propagation of rays in discrete ordinates. Nuclear science and engineering 132, 2 (1999), 155‚Äì180.
[51] Dirk Merkel. 2014. Docker: lightweight linux containers for consistent development and deployment. Linux journal 2014, 239 (2014), 2.

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

28

‚Ä¢

Jonas Kusch, Steffen Schotth√∂fer, Pia Stammer, Jannick Wolters, and Tianbai Xiao

[52] JE Morel, TA Wareing, RB Lowrie, and DK Parsons. 2003. Analysis of ray-effect mitigation techniques. Nuclear science and engineering

144, 1 (2003), 1‚Äì22.

[53] Kenneth Moreland and Ron Oldfield. 2015. Formal Metrics for Large-Scale Parallel Performance. In High Performance Computing,

Julian M. Kunkel and Thomas Ludwig (Eds.). Springer International Publishing, Cham, 488‚Äì496.

[54] Edgar Olbrant and Martin Frank. 2010. Generalized Fokker‚ÄìPlanck theory for electron and photon transport in biological tissues:

application to radiotherapy. Computational and mathematical methods in medicine 11, 4 (2010), 313‚Äì339.

[55] Francisco Palacios, Juan Alonso, Karthikeyan Duraisamy, Michael Colonno, Jason Hicken, Aniket Aranake, Alejandro Campos,
Sean Copeland, Thomas Economon, Amrita Lonkar, Trent Lukaczyk, and Thomas Taylor. [n. d.].
Stanford University Unstruc-
tured (SU&lt;sup&gt;2&lt;/sup&gt;): An open-source integrated computational environment for multi-physics simulation and design.
https://doi.org/10.2514/6.2013-287 arXiv:https://arc.aiaa.org/doi/pdf/10.2514/6.2013-287

[56] J. Perl, J. Shin, J. Schumann, B. Faddegon, and H. Paganetti. 2012. TOPAS: An Innovative Proton Monte Carlo Platform for Research and

Clinical Applications. Medical Physics 39, 11 (Nov. 2012), 6818‚Äì6837. https://doi.org/10.1118/1.4758060

[57] William A. Porteous, M. Paul Laiu, and Cory D. Hauck. 2021. Data-driven, structure-preserving approximations to entropy-based

moment closures for kinetic equations. arXiv:2106.08973 [math.NA]

[58] Steffen Schotth√∂fer, Tianbai Xiao, Martin Frank, and Cory D. Hauck. 2022. Neural network-based, structure-preserving entropy closures

for the Boltzmann moment system. https://doi.org/10.48550/ARXIV.2201.10364

[59] Benjamin Seibold and Martin Frank. 2014. StaRMAP‚ÄîA Second Order Staggered Grid Method for Spherical Harmonics Moment
Equations of Radiative Transfer. ACM Trans. Math. Softw. 41, 1, Article 4 (oct 2014), 28 pages. https://doi.org/10.1145/2590808

[60] John Tencer. 2016. Ray effect mitigation through reference frame rotation. Journal of Heat Transfer 138, 11 (2016).
[61] Jouko Tervo and Pekka Kolmonen. 2002. Inverse radiotherapy treatment planning model applying Boltzmann-transport equation.

Mathematical Models and Methods in Applied Sciences 12, 01 (2002), 109‚Äì141.

[62] J Tervo, P Kolmonen, M Vauhkonen, LM Heikkinen, and JP Kaipio. 1999. A finite-element model of electron transport in radiation

therapy and a related inverse problem. Inverse Problems 15, 5 (1999), 1345.

[63] J Tervo, M Vauhkonen, and E Boman. 2008. Optimal control model for radiation therapy inverse planning applying the Boltzmann

transport equation. Linear Algebra Appl. 428, 5-6 (2008), 1230‚Äì1249.

[64] Oleg N Vassiliev, Todd A Wareing, Ian M Davis, John McGhee, Douglas Barnett, John L Horton, Kent Gifford, Gregory Failla, Uwe
Titt, and Firas Mourtada. 2008. Feasibility of a multigroup deterministic solution method for three-dimensional radiotherapy dose
calculations. International Journal of Radiation Oncology* Biology* Physics 72, 1 (2008), 220‚Äì227.

[65] Oleg N Vassiliev, Todd A Wareing, John McGhee, Gregory Failla, Mohammad R Salehpour, and Firas Mourtada. 2010. Validation of a
new grid-based Boltzmann equation solver for dose calculation in radiotherapy with photon beams. Physics in Medicine and Biology 55,
3 (jan 2010), 581‚Äì598. https://doi.org/10.1088/0031-9155/55/3/002

[66] V. VENKATAKRISHNAN. [n. d.]. On the accuracy of limiters and convergence to steady state solutions. https://doi.org/10.2514/6.1993-880

arXiv:https://arc.aiaa.org/doi/pdf/10.2514/6.1993-880

[67] Hans-Peter Wieser, Eduardo Cisternas, Niklas Wahl, Silke Ulrich, Alexander Stadler, Henning Mescher, Lucas-Raphael M√ºller, Thomas
Klinge, Hubert Gabrys, Lucas Burigo, et al. 2017. Development of the open-source dose calculation and optimization toolkit matRad.
Medical physics 44, 6 (2017), 2556‚Äì2568.

[68] M. K. Woo and J. R. Cunningham. 1990.

The validity of

for photon and electron beams.

port
arXiv:https://aapm.onlinelibrary.wiley.com/doi/pdf/10.1118/1.596497

Medical Physics 17, 2 (1990), 187‚Äì194.

the density scaling method in primary electron trans-
https://doi.org/10.1118/1.596497

[69] Tianbai Xiao. 2021. A flux reconstruction kinetic scheme for the Boltzmann equation. J. Comput. Phys. 447 (2021), 110689.
[70] Tianbai Xiao. 2021. Kinetic.jl: A portable finite volume toolbox for scientific and neural computing. Journal of Open Source Software 6,

62 (2021), 3060. https://doi.org/10.21105/joss.03060

ACM Trans. Math. Softw., Vol. 1, No. 1, Article . Publication date: May 2022.

