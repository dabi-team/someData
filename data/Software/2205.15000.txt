2
2
0
2

y
a
M
0
3

]
n
o
c
-
r
p
u
s
.
t
a
m
-
d
n
o
c
[

1
v
0
0
0
5
1
.

5
0
2
2
:
v
i
X
r
a

SuperConga: an open-source framework for mesoscopic superconductivity

P. Holmvall,1, 2, a) N. Wall Wennerdal,1, a) M. Håkansson,1 P. Stadler,1 O. Shevtsov,1 T. Löfwander,1 and M.
Fogelström1
1)Department of Microtechnology and Nanoscience - MC2, Chalmers University of Technology, SE-412 96 Göteborg,
Sweden
2)Department of Physics and Astronomy, Uppsala University, Box 516, S-751 20, Uppsala,
Sweden

(Dated: 31 May 2022)

We present SuperConga, an open-source framework for simulating equilibrium properties of unconventional and ballis-
tic singlet superconductors, conﬁned to two-dimensional (2D) mesoscopic grains in a perpendicular external magnetic
ﬁeld, at arbitrary low temperature. It aims at being both fast and easy to use, enabling research without access to a
computer cluster, and visualization in real-time with OpenGL. The core is written in C++ and CUDA, exploiting the
embarrassingly parallel nature of the quasiclassical theory of superconductivity by utilizing the parallel computational
power of modern GPUs. The framework self-consistently computes both the superconducting order-parameter and the
induced vector potential, and ﬁnds the current density, free energy, induced ﬂux density, local density of states, as well
as the magnetic moment. A user-friendly Python frontend is provided, enabling simulation parameters to be deﬁned via
intuitive conﬁguration ﬁles, or via the command-line interface, without requiring a deep understanding of implementa-
tion details. For example, complicated geometries can be created with relative ease. The framework ships with simple
tools for analyzing and visualizing the results, including an interactive plotter for spectroscopy. An overview of the the-
ory is presented, as well as examples showcasing the framework’s capabilities and ease of use. The framework is free
to download from https://gitlab.com/superconga/superconga, which also links to the extensive user manual, containing
even more examples, tutorials and guides.

To demonstrate and benchmark SuperConga, we study the magnetostatics, thermodynamics, and spectroscopy of
various phenomena. In particular, we study ﬂux quantization in solenoids, vortex physics, surface Andreev bound-
states, and a “phase crystal”. We compare our numeric results with analytics, and present experimental observables,
e.g. the magnetic moment and LDOS, measurable with for example scanning-probes, STM and magnetometry.

I.

INTRODUCTION

Over the last decades there has been a tremendous improve-
ment in fabrication and controllable downscaling of samples
and devices. The physical size of a sample can now be compa-
rable to characteristic quantum length scales of the composing
materials. For a superconducting material, which is the topic
of this article, the relevant length scales are the supercon-
ducting coherence length, the length scale over which the su-
perconducting order parameter typically varies, and the mag-
netic penetration depth, which determines the length scale of
screening. In direct connection to the ability to make smaller
samples and devices, new measurement and sensing tools
have been developed. Current scanning probes can spatially
resolve minute variations in magnetic ﬁelds using scanning
SQUIDS,1–5 or make detailed spatial maps of low-lying quasi-
particle states and coherences using scanning tunneling spec-
troscopy (STS).6–15 By fabricating nano-scale cantilevers, the
intrinsic state of a superconducting island can be monitored
as changes in the cantilever-oscillation frequency.16–18 Other
techniques of detecting and following the superconducting
state in nanoscale devices include Hall magnetometry,19,20
scanning electron microscopy (SEM)21 and scanning Hall
probe microscopy.22–24 Scanning single electron transistors
(SET) are local probes that can map out charging, or parity,
effects that become prominent for ultra-small superconduc-

a)These authors contributed equally to this work.

tors where the energy-level spacing and the superconducting
pairing are of the same order of magnitude.25–29 Experimental
data gathered using the above-mentioned methods give rich
and complex information of the strongly correlated material
system under study. To fully understand this data, one needs
to compare and contrast them to theoretical predictions and
modelling.

(BCS)

theory.30–33

Superconductivity in metals is explained by the Bardeen-
Its extension and
Cooper-Schrieffer
generalisation to unconventional
superconductivity and
superﬂuids34,35 makes the theory a corner stone of condensed
matter physics. One method to model superconducting de-
vices, and to explore fundamental problems of superconduc-
tivity with the BCS theory as a starting point, is the qua-
siclassical theory of superconductivity.
It is the extension
of Landau’s Fermi liquid theory to include superconducting
phenomena and was pioneered by Eilenberger,36 Larkin and
Ovchinnikov,37 and Eliashberg.38 The quasiclassical approx-
imation relies on a separation between relevant energy, tem-
perature, and length scales in the normal-metal and supercon-
ducting states. The normal-metal state is characterised by the
Fermi energy, EF, Fermi temperature, TF, and inverse Fermi
wave number, 1/kF, while the superconducting state is char-
acterised by the superconducting order parameter, ∆, transi-
tion temperature, Tc, and coherence length, ξ0. Quasiclas-
sical theory is then a controlled expansion in small parame-
ters like ∆/EF, Tc/TF, or 1/(ξ0kF), which are usually of order
3 in metals. As a Green’s function based theory,39
2
10−
it is very powerful and include in its most general form mate-
rial effects such as impurity scattering, Fermi-liquid effects,

10−

−

 
 
 
 
 
 
electron-phonon interaction, and non-equilibrium situations
for instance imposed by external ﬁelds or potentials.40,41 At
the same time, it is versatile enough that it can be adapted to
realistic device sizes and geometries.42 In its simplest form,
quasiclassical theory is equivalent to the Andreev approxi-
mation of the Bogoliubov-deGennes equation for the ballistic
case.32,43,44

When the mean free path, (cid:96), due to elastic impurity scat-
tering is much smaller than the superconducting coherence
length, ξ0, it is possible to derive diffusion equations from
the more general Eilenberger-Larkin-Ovchinnikov equations.
These diffusion equations, ﬁrst derived by Usadel,45,46 are
more easy to handle and is widely used to describe con-
ventional diffusive s-wave samples and devices.47–49 Solu-
tion methods in the diffusive case include Nazarov’s circuit
theory50 and ﬁnite-element methods.51Here, we focus instead
on the more general equations, in the ballistic regime.

A complication when solving the equations of quasiclassi-
cal theory is that one often needs to resort to numerical meth-
ods. To develop the necessary codes is technically demanding
and time consuming. Today there is no open-source code gen-
eral enough to describe ballistic devices or superconducting
grains of mesoscopic size with the quasiclassical theory. This
lack of an open-source code forces all researchers and stu-
dents in the community to re-implement the theory for each
individual problem.

To remedy this, in this paper we present an open source
framework for studies of two-dimensional superconducting
grains. The application program interface (API) is written
in C++ and CUDA, and take advantage of the speedup made
possible by running the code on Graphics Processing Units
(GPUs). At the same time, the Python-based frontend is sufﬁ-
ciently easy to use that any user interested only in the physics
and results never has to dwell into the technical details of the
implementation. The ﬁrst version of the API that we present
here can be used to study conventional and unconventional
singlet superconducting grains of general geometry in two di-
mensions with an applied external magnetic ﬁeld. The frame-
work is sufﬁciently modular that it in the future can be ex-
tended to include more aspects of quasiclassical theory.

This paper is organized in the following way. In section II
we give an introduction to quasiclassical theory with the aim
to provide a self-contained account of the theory which the
framework is based on. In this section, we also show some
simple model calculations, serving as a background to the ex-
amples worked out in later sections. In section III we give
an overview of the main algorithm of SuperConga and give
sufﬁcient background to understand the parameters that have
to be set while running the simulations.
In section IV we
show by a simple example how to run the framework using
the Python frontend. Section V contains a few more involved
examples that benchmark and highlight the capabilities of Su-
perConga. We study the rather complicated physics and en-
ergetics of vortices in a superconducting grain. In particular
we ﬁnd Bc1 where it becomes energetically favorable to have
one vortex in a ﬁnite size disc. By comparison to formulas
from literature, we are also able to extract the vortex-core en-
ergy. At high ﬁelds we demonstrate that many different vor-

2

tex conﬁgurations can be stabilized with almost the same free
energy. For lower ﬁelds such conﬁgurations might be more
separated in energy, but can be studied as metastable states.
In another example we ﬁnd the vortex conﬁgurations and the
ﬁeld-dependent local density of states in a grain studied ex-
perimentally by Timmermans et al.52 Finally, we show that in
a d-wave superconducting annulus, the free-energy parabolas
are conventional33 at high temperatures, while at low temper-
atures zero-energy Andreev bound states at the edges mod-
iﬁes the energetics through their paramagnetic response to
the external ﬁeld. Interestingly, spontaneous circular surface
currents53–55 can coexist at high external magnetic ﬁelds with
superconducting phase windings n2π (n integer) around the
annulus and integer ﬂux nΦ0 threading the inner circular hole.
Section VI contains a summary of the paper. The appendices
contain additional information on the SuperConga external
dependencies and parameter conﬁguration ﬁle, details about
self-consistency convergence acceleration, the technique to
solve for the vector potential and the equations of motion,
as well as tables summarizing our choice of units and order-
parameter basis functions.

II. QUASICLASSICAL THEORY OF
SUPERCONDUCTIVITY

The superconducting state arises through a second-order

phase transition, and is characterised by an order parameter,

∆(pF, R) = ∑
Γ |

eiχΓ(R)ηΓ(pF),
∆Γ(R)
|

(1)

that is zero for temperatures above the superconducting tran-
sition (T > Tc) and non-zero below it. All superconductors
break global U(1)-gauge symmetry and hence the minimal
order parameter is described by an amplitude
and a
phase χ(R), both in general dependent on the spatial coordi-
nates R. The phase is directly coupled to the superﬂuid mo-
mentum, ps(R), and the electromagnetic gauge ﬁeld, A(R),
via the gauge invariant expression

∆(R)
|
|

ps(R) =

¯h
2

∇χ(R)

e
c

−

A(R),

(2)

e
|
−|

is the charge of the electron, ¯h is Plancks
where e =
constant, and c is the speed of light. In addition to breaking
the global U(1) symmetry, some superconducting compounds
also break symmetries of the crystal lattice. This possibility is
encoded in the complex-valued basis function ηΓ(pF) which
depends on the Fermi momentum, pF. The index Γ denotes the
irreducible representation of the crystallographic point group
that the basis function belongs to.56 In the general case we
also need to account for the spin-degree of freedom, and the
order-parameter ﬁeld should therefore be written as a spin-
matrix ∆αβ (pF, R). However, we will focus on spin-singlet
superconductivity, and the form in Eq. (1) is adequate for this.
The singlet order parameter satisﬁes the following gap

equation:

∆(pF, R) = NFT

εn
<εc
|
|
∑
n

(cid:10)

V (pF, p(cid:48)F) f (p(cid:48)F, R; εn)

,

(3)

p(cid:48)F
(cid:11)

where V (pF, p(cid:48)F) is the effective superconducting pairing inter-
action. We use the approximation that the interaction can be
separated into symmetry channels of the crystal point group

In our case of weak-coupling superconductivity in the clean
limit, the self energy ˆ∆(pF, R) entering in Eq. (10) simply
consists of the order parameter:

3

V (pF, p(cid:48)F) = ∑
Γ

VΓηΓ(pF)η †

Γ(p(cid:48)F),

(4)

where VΓ is the pairing strength in the symmetry channel Γ. In
this case, the dependencies on position and momentum direc-
tion of the order parameter separate as in Eq. (1). The angle
bracket
pF denotes a Fermi-surface average, which in 2D
(cid:105)
is a line integral around the Fermi surface according to57,58

. . .
(cid:104)

. . .
(cid:104)

pF =
(cid:105)

1
NF (cid:73)FS

dpF

(2π ¯h)2

vF(pF)
|
|

(. . . ),

(5)

where the total normal-state density of states per spin at the
Fermi level is

NF =

dpF

(cid:73)FS

(2π ¯h)2

vF(pF)
|
|

.

(6)

We consider the extreme layered superconductor with con-
duction in stacked two-dimensional planes. In this case NF =
kF/2π ¯hvFd, where kF, vF are the in-plane Fermi-wave num-
ber and Fermi velocity respectively and d is the inter plane
distance.57 The vector potential is determined through Am-
père’s law

∇

∇

×

×

A(R) =

4π
c

j(R) ,

(7)

where the charge current density is deﬁned as

j(R) = 2eNFT ∑
n

(cid:10)

vF(pF) g(pF, R; εn)

,

(8)

pF
(cid:11)

where the factor 2 accounts for spin degeneracy. The Fermi
velocity at pF on the Fermi surface is vF(pF) = ∇pε(p)
p=pF,
|
where ε(p) is the dispersion.

The two functions g(pF, R; εn) and f (pF, R; εn) appearing
in Eq. (3) and Eq. (8) are components of the quasiclassical
Green’s function, or propagator,

ˆg(pF, R; ε) =

(cid:18)

−

g(pF, R; ε) f (pF, R; ε)
˜f (pF, R; ε)
˜g(pF, R; ε)

(9)

.

(cid:19)

It is a 2x2 matrix in electron-hole (Nambu) space, as indi-
cated by the "ˆ"-symbol. The propagator is determined from
the quasiclassical counter part of the Gorkov-Dyson equation,
the transport-like Eilenberger equation:

0 = ivF·

∇R ˆg(pF, R; ε) +

c vF(pF)

(ε + e
(cid:20)

A(R)) ˆτ3

·

−

ˆ∆(pF, R), ˆg(pF, R; ε)
(cid:21)

,(10)

where ˆτ3 is the third Pauli matrix in Nambu space. In addition
to Eq. (10), the propagator obeys the normalization condition

ˆg2(pF, R; ε) =

π 2ˆI,

−

(11)

where ˆI is the identity matrix.

ˆ∆(pF, R) =

0
˜∆(pF, R)

−

(cid:18)

∆(pF, R)
0

.

(cid:19)

(12)

There is some redundancy in the parametrisation of the prop-
agator, and the following symmetry35,59

(13)

˜x(pF, R; ε) = x(

pF, R;

ε ∗)∗,

−

−
between tilded ( ˜x) and un-tilded (x) quantities holds. The
propagator may be evaluated at imaginary frequencies ε
→
iεn = iπT (2n + 1) giving the Matsubara propagator or at real
ε + iδ ), or the
frequencies giving either the Retarded (ε
iδ ). Here, δ is a small and
Advanced propagator (ε
−
positive energy broadening. To compute the order parameter,
the current, and the back-coupling through the gauge ﬁeld, it
is enough to work with the Matsubara propagator. For the lo-
cal density of states, deﬁned as

→

→

ε

N(pF, R; ε) =

NF
π

−

Im gR(pF, R; ε),

(14)

we need to also compute the retarded Green’s function with
the order parameter and gauge ﬁeld as input.

The superconducting state has a characteristic energy scale
given by the transition temperature Tc, namely 2πkBTc, and a
natural length scale, the coherence length ξ0 = ¯hvF/2πkBTc.
We will use the natural units ¯h = kB = 1. The normal state
density of states at the Fermi level NF is in units [Energy
×
unit cell
In addition to the coherence length, the
length scale for screening of electromagnetic ﬁelds enters the
theory through the penetration depth λ0, deﬁned as

spin]−

×

1.

=

4πe2
c2 v2

F NF.

1
λ 2
0

(15)

We use the Ginzburg-Lanadu parameter κ, deﬁned as κ =
λ0/ξ0, to give the value of the penetration depth in rela-
tion to the coherence length. To deﬁne the magnetic units
we start from the superconducting magnetic ﬂux quantum
e
Φ0 = hc/2
. The magnetic ﬁeld,
|
|

B = ∇

A,

×

(16)

is then given in units of B0 = Φ0/πξ 2
0 and the vector potential
in units of A0 = Φ0/πξ0. Finally, current densities will be
given in units of j0 = 2πkBTc
vFNF. A summary of these
|
units and natural scales are given in Table II in Appendix F.

e
|

The quasiclassical theory is a conserving theory in the sense
that the equations for ˆg, ˆ∆, and A above may be derived as
stationarity conditions from the Luttinger-Ward free-energy
functional.35,60 For the theory to be conserving, the station-
arity equations are to be solved to self consistency. At con-
vergence, we solve Eq. (10) with ∆(pF, R) and A(R), recal-
culate Eq. (3) and Eq. (7), and get back the same ∆(pF, R)
and A(R) within some given tolerance. Current conservation
is then fulﬁlled to the same tolerance. At self-consistency we

have found an extremum of the quasiclassical version of the
Luttinger-Ward functional.35,53,61 This functional always give
a measure of the free energy with respect to the normal state,35

ΩN[T ], and goes to zero as ∆

ΩS[T ]
0. To simplify nota-
tion we denote this free energy difference Ω[T ], and it has the
form

→

−

4

Ω[T ] =

dR

(cid:90)

2
Bind(R)
|
|
8π

(cid:40)

+ NF ∑
Γ |

2 ln
∆Γ(R)
|

T
T Γ
c

+ πNFkBT ∑
n

2
∆(R)
|
|
εn
|

|

− I

(R)

,
(cid:41)

where Bind(R) is the induced magnetic ﬁeld,

2 =
∆(R)
|
|

2
∆(pF, R)
|

(cid:104)|

pF , and
(cid:105)

(R) =

I

1

0
(cid:90)

dλ NFkBT ∑
n (cid:104)

˜∆(pF, R) fλ (pF, R; εn) + ∆(pF, R) ˜fλ (pF, R; εn)
pF .
(cid:105)

(17)

(18)

The auxiliary propagator ˆgλ is obtained by solving the Eilenberger equation with scaled self-energy ﬁeld λ ˆ∆ so the integral over
the dummy variable λ in Eq. (18) may be evaluated. In the framework SuperConga we also apply the original Eilenberger-form
of the free-energy functional,36 in which case the term with the λ -integration is simpliﬁed to

(R) = πNFkBT ∑

n (cid:42)

I

˜∆(pF, R) f (pF, R; εn) + ∆(pF, R) ˜f (pF, R; εn)
π + i g(pF, R; εn)

.

(cid:43)pF

(19)

The advantage of the Eilenberger-form is that it can be evaluated without the λ -integration at little computational cost. However,
it must be used with some caution as it has been shown to not be generally valid and ﬁnal results for the free energy needs to be
conﬁrmed by Eq. (17).57

The above form of the free energy is consistent with the following regularized gap equation

∆Γ(R) ln

T
T Γ
c

= T ∑

n (cid:28)

η ∗Γ(pF)

f (pF, R; εn)

(cid:20)

π∆(pF, R)
εn
|

|

−

,

(cid:21)(cid:29)pF

(20)

for superconductivity with the symmetry given by the rep-
resentation Γ. The dependencies on the pairing interaction
strength VΓ and the Matsubara sum cutoff εc have been re-
placed by the measurable transition temperature T Γ
c . After
this regularization, the Matsubara sum is not cutoff dependent.
The connection between Eq. (3) and Eq. (20) can be seen as
replacing the coupling strength by

1

NF VΓ →

ln

T
T Γ
c

+ πT ∑
n

.

1
εn
|

|

(21)

By moving the second term on the right hand side of Eq. (20)
over to the left hand side, and using the fact that the basis
η ∗i (pF)η j(pF)
functions are orthonormal,
pF = δi j, we can
(cid:105)
(cid:104)
divide down the resulting prefactor of ∆Γ(R), obtaining the
gap equation in a ﬁx point form:

∆Γ(R) =

T ∑n(cid:104)

η ∗Γ(pF) f (pF, R; εn)
pF
(cid:105)
ln T
+ πT ∑n
T Γ
c

1
εn
|

|

.

(22)

The currently available symmetries and the corresponding ba-
sis functions ηΓ(pF) are listed in Table III in Appendix F.

A. Riccati formalism for inhomogeneous states

ˆg(pF, R; ε) in Eq. (10), subject to the normalization condition
∇R ˆg(pF, R; ε) couples the
in Eq. (11). The gradient term ivF·
momentum direction and spatial coordinates. Quasiparticle
trajectories are then deﬁned by this directional derivative and
we may introduce a trajectory coordinate s as

R(s) = Rmin + s ˆvF,

(23)

where ˆvF = vF/vF is a unit vector. Starting with an initial
value, for instance at a boundary point Rmin, the propagator
should be found by integrating along the trajectory until an-
other boundary point Rmax is met. At that point, a boundary
condition44,59,62–67 must be supplemented to the theory.
In
SuperConga a simple specular boundary condition is used at
all boundaries, see illustration in Fig. 1

In practice, the most convenient and stable formulation is
based on a parametrization59,68–70 of the Green’s function
in terms of coherence functions γ(pF, R; ε) and ˜γ(pF, R; ε).
They are related by the symmetry in Eq. (13) and quantify
electron-hole coherence along the trajectory in the supercon-
ducting state. The quasiclassical Green’s function can be writ-
ten in terms of them as

ˆg = −

iπ
1 + γ ˜γ

1

γ ˜γ

−
2 ˜γ

2γ
1 + γ ˜γ

−

,

(cid:19)

(cid:18)

(24)

For inhomogeneous superconducting states we need to
solve the ﬁrst order differential equation for the propagator

where we for brevity dropped the explicit dependencies on
pF, R, and ε. The normalization of the Green’s function in

5

can be done in parallel. At the end of the computation, when
the gap equation is satisﬁed, the boundary condition is also
self-consistently satisﬁed. A caveat in SuperConga is that
while the order parameter and vector potential are saved to
ﬁle, the coherence functions are not, due to being to disk-
space intensive. When restarting the calculation using a nom-
inally self-consistent order parameter, the self-consistency of
the boundary conditions must be reached again. This is solved
via a “burn-in” period, where the order parameter and vector
potential are kept constant for a few iterations when restart-
ing a calculation, until the coherence functions and boundary
conditions are also self-consistent.

∈

→

→

∆(i, j) and A(R) = A(x, y)

In SuperConga the order parameter and the vector poten-
tial have been discretized in two-dimensional (2D) real space:
∆(R) = ∆(x, y)
A(i, j),
where i and j are integers. The grid is a simple square grid
with spacing h, i.e. x = ih and y = jh, but we still take into
account the exact location and shape of boundaries, such that
there is no aliasing or similar artefacts. Figure 2 visualizes the
implementation and discretization. The Fermi surface is pa-
rameterized by an azimuthal angle ϕ
[0, 2π) and discretized
according to ϕk = k∆ϕ (k integer). The Fermi surface av-
erages are computed through numeric integration, via one of
the following methods: Boole’s, Simpson’s 3/8, Simpson’s
1/3, or the trapezoidal rule, depending on if the number of
momenta is divisible by 4, 3, 2, otherwise, respectively. For
a particular point ϕk on the Fermi surface, we obtain a Fermi
velocity vF(ϕk), which determines a direction for a set of tra-
jectories in real space. Each trajectory coordinate has been
discretized as outlined above. Considering all parallel trajec-
tories for a certain point on the Fermi surface, the discrete grid
in real space then forms a simple square grid with the same lat-
tice spacing h, but rotated relative to the reference grid where
the order parameter and vector potential are deﬁned. Bilinear
interpolation is then performed on the order parameter and the
vector potential from the reference frame to the rotated frame.
After solving the Riccati equations, the Riccati amplitudes are
known in the rotated frame. The ϕk terms in the Fermi-surface
averages for the order parameter and the charge-current den-
sity are computed in the rotated frame by constructing the rel-
evant matrix element of the Green’s function, summing over
energies, and then rotating back to the reference frame.
In
this way, the order parameter ∆(i, j), observables such as the
current j(i, j), and also the vector potential A(i, j) can be up-
dated through Eqs. (3)-(7).

ϕk
{

The boundary condition is problematic as the azimuthal an-
gle of the specularly reﬂected momentum at a given surface
might not exist in the set
. Furthermore, due to the rota-
}
tion of the grid, the trajectories hit the boundary at different
points for each Fermi velocity vF(ϕk). In order to determine
the initial conditions for the coherence functions, we once
again perform bilinear interpolation. Here the interpolation
is between spatial coordinates on the boundary R
and
azimuthal angles.

D

∈

∂

, and has a boundary ∂

FIG. 1. (a) The system domain is denoted
.
D
A quasiparticle trajectory parameterized by the coordinate s starts at
one boundary point Rmin and ends at another boundary point Rmax.
The specular boundary condition connects incoming Riccati ampli-
tudes on trajectory s to starting Riccati amplitudes on another tra-
jectory s(cid:48). (b) Self-consistently computed vortex lattice in the same
geometry as in panel (a), see the following sections for more details.

D

Eq. (11) is now automatically satisﬁed. The coherence func-
tions satisfy a set of Riccati equations:

−

ivF ·
ivF ·

∇γ + 2(ε + e
2(ε + e
∇ ˜γ

A)γ + ˜∆γ 2 + ∆ = 0,
A) ˜γ + ∆ ˜γ 2 + ˜∆ = 0.

c vF ·
c vF ·
The equation for γ(pF, R; ε) is stable to integrate in the direc-
tion parallel to vF, while the equation for ˜γ(pF, R; ε) is stable
to be integrated in the opposite direction. After introducing
the trajectory coordinate, we may let vF ·

vF∂sγ.

(26)

(25)

∇γ

→

III. OVERVIEW OF THE IMPLEMENTATION

In this section we give a brief overview of the main algo-
rithm of SuperConga and describe a few key features of the
framework. The aim of this section is to explain why certain
parameters related to the implementation have to be set and
how the parameter choices may inﬂuence the simulations.

A. The main algorithm of SuperConga

We solve the Riccati equations, Eqs. (25) and (26), numer-
ically (see Appendix C) along trajectories through the grain.
An example of a trajectory is shown in Fig 1. Given an initial
boundary value, γ(Rmin), we solve Eq. (25) until we reach
Rmax. Similarly, given an initial boundary value, ˜γ(Rmax),
we solve Eq. (26) until we reach Rmin.

Clearly, the boundaries are special points in that we need a
starting value for γ(Rmin) and we obtain after stepping along
the trajectory an end value γ(sN) at another boundary, where
N is the number of steps taken along the trajectory s. All
boundary values are related to each other through the bound-
ary condition. The complication is then that the end values be-
come, after the boundary condition has been applied, a start-
ing value for a different trajectory. This can be solved by
having an initial guess for all boundary starting values, and
self-consistently compute the boundary values by repeatedly
stepping along all trajectories and apply the boundary con-
dition. Since the order parameter ∆(R) is also solved self-
consistently by iteration, the update of the boundary values

6

FIG. 2. Vizualization of the implementation and main algorithm. (a)–(b) The Fermi surface is parametrized by the discrete angle ϕk and
the Fermi velocity vF(ϕk), which together deﬁne quasiparticle trajectories in real space. As in Fig. 1, each trajectory has a well-deﬁned start
point Rmin and end point Rmax, which might either lie on an internal or external boundary. (c) The order parameter and vector potential
are deﬁned on a discretization of the geometry with grid spacing h, and are computed as the Fermi-surface average of all trajectories passing
through the point. (d)–(f) We let h be the discrete step-size along each trajectory, as well as the separation between trajectories, deﬁning
a square lattice. For nearly all angles, the discrete geometry is incommensurate with the trajectories, and interpolation becomes necessary.
(g) Similarly, the discrete Fermi surface makes the reﬂection and the matching of incoming and outgoing trajectories incommensurate, such
that for a particular trajectory starting at a boundary, no incoming trajectory exists for the corresponding angle or boundary coordinate. The
solution is to interpolate from neighboring incoming trajectories, in both angle and boundary coordinate.

Algorithm 1 A sketch of the SuperConga main loop

and input parameters

D

Deﬁne domain
Initialize ∆ and Aind
Initialize γ∂ D and ˜γ∂ D
while not converged do
for all pF, εn do

Rotate ∆ and A so that ˆy
Compute γ and ˜γ along the y-axis
Update γ∂ D and ˜γ∂ D
Update ∆, j, and Ω

vF

(cid:107)

Compute Aind
Check convergence
∆, Aind ←
Update γ∂ D and ˜γ∂ D

Accelerator

(cid:46) The boundary

(cid:46) See App. C
(cid:46) Write incoming pF
(cid:46) Eqs. (22), (8), (17)
(cid:46) See App. D
(cid:46) Eq. (27)
(cid:46) See App. E
(cid:46) Boundary condition

An overview of the algorithm of SuperConga is shown in
Algorithm 1. The user deﬁnes e.g. the system domain, phys-
ical parameters, the discretization h in real space, the dis-
cretization ∆ϕ in momentum space, and an energy cut-off for
the frequency summations [see e.g. Eq. (3)]. The frequency
summations are not over the usual Matsubara frequencies, but
instead a more efﬁcient summation due to Ozaki71 has been
implemented. In addition, a convergence criterion for the self-
consistency must be set. The global error is deﬁned as

∆i

∆i
1
−
1
−

p

,

εG =

−
∆i
(cid:107)
where i here denotes the iteration number in the self-
consistency loop, and p
is set by the user. The
loop continues until the error εG is smaller than the conver-
gence criterion, or the given maximum number of iterations

1, 2, ∞

(27)

∈ {

(cid:107)p

(cid:13)
(cid:13)

(cid:13)
(cid:13)

}

(cid:9)

(cid:8)

∆i, ∆i

have been performed. The gap equation can be solved by di-
rect ﬁxed-point iteration, but in SuperConga a few methods
for convergence acceleration have been implemented. In sim-
pliﬁed terms, the accelerators may save a number of computed
1, ∆i
2, ...
order parameters,
, and make a more edu-
−
−
cated guess for ∆i+1. When observables, the vector potential,
and free energy are also computed, the convergence criterion
is the same as for the order parameter. All the details of the
stepping along trajectories, interpolation, as well as the treat-
ment of the boundaries are automatically taken care of by the
API. The user must be aware of, however, that the discretiza-
tion in real and momentum space can be a source of error
and it is necessary to check convergence by running the same
problem with ﬁner grids. Also, depending on the problem
being solved, the path to self-consistency may not be direct.
For the simplest examples in this paper, this is not a problem.
But for more advanced problems, it is advisable to experiment
with different starting guesses for the order parameter and also
carefully choose a suitable convergence acceleration strategy.

B. Framework Overview

The main algorithm and functionality of SuperConga is im-
plemented as a fairly modular framework, in the form of a
backend written in C++ and CUDA72,73. A user can in prin-
ciple choose which modules to use and in what manner, to set
up highly customized simulations, or even extend the existing
functionality by exploiting the modularity. However, this re-
quires writing C++ code that imports or adds to the desired
features. While this is certainly possible and a valid approach,

a main goal of SuperConga is to also enable users to perform
advanced simulations without having to write any code, by in-
stead only specifying simulation parameters, but without los-
ing crucial functionality. To make this possible, SuperConga
comes with a user friendly frontend, and a set of backend in-
terfaces. The frontend manages and validates the user input,
and then sends it to the appropriate backend interface. The
backend interface takes care of importing and calling the nec-
essary backend modules with the settings provided by the user.
See Fig. 3 for a schematic overview. SuperConga also comes
with a set of ready-to-run examples (see Sec. IV for a demon-
stration), a detailed user manual full of tutorials and guides,74
a set of helpful tools, a Singularity container which simpliﬁes
setup and improves portability, and an extensive testing frame-
work to test the validity of the code. The latter ranges from
smaller unit tests of basic functionality, to larger end-to-end
physics test of e.g. current conservation and well-known ana-
lytic results. In the following, we give further insight into the
backend and frontend, and list the most important modules.

1. Backend

The backend modules are implemented as a set of classes
and functions via header ﬁles.
The modularity is typi-
cally built up by an inheritance structure, from virtual base
classes to derived classes. The virtual base classes de-
scribe the general signature or pattern for a module, but
does not necessarily contain any functionality. This is in-
stead taken care of by the derived classes, which inherits
the signature from the corresponding virtual class, and im-
plements the actual functionality (or ofﬂoads it to external
libraries, see App. A for a description of dependencies).
For example, BoundaryCondition.h contains a virtual base
class deﬁning the general properties of a boundary condition.
The derived class in BoundaryConditionSpecular.h in-
herits from BoundaryCondition.h, and implements a spec-
ular boundary condition. Similarly, there are virtual base
classes for Fermi surfaces, geometric shapes, and even Ric-
cati solvers, with speciﬁc implementations of e.g. a circular
Fermi surface, disc- and polygon-geometries, and a Riccati
solver for ﬁnite grains. The idea is that the modularity should
allow for straightforward extension of anything from bound-
ary conditions to new observables. Below is a list of the most
important modules:

Boundary conditions: Implementation of the boundary con-
ditions to handle interface scattering of quasiparticles,
the latter which follow the Eilenberger-Riccati trajec-
tories. Currently only implements specular boundary
conditions for superconductor-vacuum interfaces.

Fermi surface: A class that takes care of the momentum-
averaging over the Fermi surface. Can either treat cir-
cular Fermi-surfaces, or parametrize a more general
Fermi-surface shape based on a tight-binding hopping
model.

Geometry: Classes and functionality for creating mesoscopic

7

FIG. 3. A usage ﬂowchart for SuperConga. A user can use
command-line interface (CLI) to pass command-line arguments and
a parameter-ﬁle to the Python3 frontend superconga.py, which
sanity checks the user input. If all input is valid, the frontend calls the
binary built from the C++/CUDA backend interface simulate.cu.
The latter includes the appropriate functionality from the backend
framework (implemented as header ﬁles), and runs self-consistent
simulations according to Algorithm 1. The user can for example
choose to enable live visualization and printing of simulation sta-
tus to the terminal, and how frequently data should be saved to
ﬁle. The user can perform data analysis directly on the raw data
with their favorite external tool, or use the provided Python fron-
tend, e.g. via python superconga.py plot-simulation and
python superconga.py plot-convergence. Additionally, the
data can be used in a postprocessing step to compute the DOS and
LDOS via python superconga.py postprocess (which calls
the binary built from the backend interface postprocess.cu). Fi-
nally, the DOS and LDOS can be illustrated with the interactive spec-
troscopy tool python superconga.py plot-postprocess. Note
that the user can also write their own backend interfaces to harness
the full functionality of the SuperConga framework.

grains from basic shape primitives (i.e. discs and poly-
gons).

Observables: Implementation of various observables and
quantities, speciﬁcally the superconducting gap, charge
current density, magnetic moment, LDOS, free energy,
vector potential, and the magnetic induction. Also takes
care of computing the residual for the self-consistency
iteration.

Accelerator: Implementation of self-consistency accelera-
tors. The user can currently choose from basic Picard
iterations, Polyak’s75 "small heavy sphere", a variant
of the Barzilai-Borwein method76, and CongAcc which
is an adaptive method developed for SuperConga. See
App. E for details and comparisons.

Pre-ProcessingProcessingUsersuperconga.pysimulatesrc/simulation.cuCommand-lineargumentsParameter ﬁleCLIParametersRaw data:src/postprocess.cusuperconga.pypostprocessPost-ProcessingGeometry,parameters,DOSParametersPlotsFrontendFrontendFrontend• Parameter setup• Simulation• DOS calculation• Data analysis• Visualization−11χ/π*.JSON{...}*.JSON{...}*.JSON{...}~$ ▮CPUGPUCPUGPUBackendinterfaceBackendinterfacesuperconga.pyplot-simulationsuperconga.pyplot-postprocessOrder parameter: Class for setting up the order parameter,
possibly with multiple components like d + is and chi-
ral d-wave. Note that the implementation is currently
limited to spin-singlet with a single band and spin de-
generate Fermi-surfaces.

Riccati Solver: Implements a solver for the Riccati equa-
tions, currently based on the mid-point method for con-
ﬁned (ﬁnite) geometries. To give an idea, this class
could more generally be extended with e.g. a higher or-
der Runge-Kutta solver, or other types of systems like
bulk or semi-inﬁnite superconductors.

Self-consistency solver: A collection of classes that take care
of adding the contribution of the Riccati trajectories
for each degree of freedom (energy, Fermi-surface an-
gle, coordinate) to self-consistently solve the order pa-
rameter from the superconducting gap equation, to-
gether with the vector potential from the corresponding
Maxwell equation.

the API documentation for more modules

See
information.74

and

SuperConga currently comes with two backend interfaces,
that expose the functionality of the above modules to the
user (via the frontend).
The ﬁrst backend interface is
simulation.cu, which acts as the “main” program, essen-
tially implementing Algorithm 1 to self-consistently solve
the gap equation and Maxwell’s equation. More speciﬁcally,
simulation.cu starts by generating a superconducting grain
and Fermi surface based on the user-provided geometry and
model. The superconducting order parameter and its compo-
nents are initialized in this grain, according to the speciﬁed
basis functions, transition temperatures, and start guess. The
program then continues to set up the self-consistency accel-
erator, Riccati solver, boundary conditions, observables and
vector potential. An OpenGL instance is initialized if live vi-
sualization is enabled. Finally, the self-consistency loop is run
until reaching either the convergence criterion or maximum
number of iterations, upon which data is saved to disk. The
second backend interface is postprocess.cu, which com-
putes the LDOS based on results from a previous simulation
(e.g. computed with simulation.cu).

Note that both backend interfaces take as command-line in-
put the location of a conﬁguration ﬁle, which should contain
all parameters necessary to completely specify the simula-
tion. The simulation will not run if the conﬁguration ﬁle is
not found, or if the contents are invalid. The purpose of the
frontend is to make it easier to set up all simulation parameters
correctly, with validation and proper help messages to guide
the user if anything goes wrong.

2. Frontend

The SuperConga frontend consists of a main run-ﬁle,
superconga.py, which draws on an assortment of function-
ality implemented in a modular Python library, the latter lo-
cated in the folder frontend/. The goal of the frontend is

8

to facilitate setting up and analyzing simulations. For ex-
ample, the frontend consists of Python modules for pars-
ing command-line arguments, validating them and provid-
ing help for the user, reading and writing conﬁguration ﬁles
used by the backend, calling the correct backend interfaces,
reading and visualizing simulation data, converting data be-
tween different formats, and modifying data by e.g. adding
noise. The functionality is divided into a set of subcom-
mands, used via python superconga.py <subcommand>. A
list of available frontend subcommands are obtained by call-
ing python superconga.py --help, and each subcommand
also has its own help message. A short summary of each
subcommand will now be given, and the next section demon-
strates how to use them.

The ﬁrst subcommand is setup, which is used to setup and

generate the SuperConga build system via CMake.

The second subcommand is compile, which is used after
the setup to compile the SuperConga framework. These two
steps have to be performed before any simulations can be run.
The third subcommand is simulate, which calls the binary
generated from simulation.cu to run self-consistent simu-
lations. It takes as input the location of a conﬁguration ﬁle,
deﬁning all simulation parameters. Optionally, each param-
eter can be set or overridden via the command-line interface
(CLI). The parameters will then be validated for errors, at-
tempting to provide the user with helpful messages if failing.
If valid, the binary is called with the user-deﬁned settings.

The fourth subcommand is plot-simulation, which
takes the location of data from a self-consistent simulation,
and plots computed quantities (see Fig. 4 for an example).
The user can control what to plot, in what order, and which
settings to use for e.g. colormaps and fonts. If the user has
speciﬁed that data should be saved when running simulate,
then plot-simulation is automatically called, using the de-
fault settings, and a PDF is saved together with the data.

The ﬁfth subcommand is postprocess, which calls the bi-
nary generated from postprocess.cu to calculate the LDOS
from self-consistently converged data. The runner takes as
command-line input the location of the data, and parameters
specifying which resolution to compute the LDOS with. The
latter parameters can either be set directly via the CLI, or spec-
iﬁed in an external conﬁguration ﬁle.

The sixth subcommand is plot-postprocess, which is a
spectroscopy tool. It takes as input the path to a directory con-
taining LDOS data computed with postprocess. If found,
the data is read and visualized in an interactive plot (see Fig. 5
for an example).

The seventh subcommand is plot-convergence, which
plots the residuals of computed quantities versus iteration
number. This tool can be run on convergence data from ei-
ther simulate or postprocess subcommands.

The eight subcommand is convert, which is used to con-
vert data back and forth between the ﬁle formats h5 and csv.
Having given an overview of the SuperConga framework
and its frontend, we will now demonstrate how to use it to set
up simulations and do data analysis.

IV. DEMONSTRATION OF SUPERCONGA

The SuperConga framework ships with a few ready-to-run
examples that illustrate how to set up and run simulations.
These are also explained in the online documentation, together
with detailed tutorials and research guides.74 One of the ex-
amples will now be shown, namely the simulation of a single
Abrikosov vortex in a conventional superconducting disc. The
demonstration can be split into the following generic steps:

Pre-processing: setting up and deﬁning the simulation,

Processing: running the self-consistency simulations, option-

ally with live visualization,

Post-processing: data analysis, visualization and spec-

troscopy.

The simulation conﬁguration for the vortex example can be
found in examples/swave_disc_vortex/ in the Super-
Conga main folder.77 Appendix B lists the full contents of this
ﬁle, with a detailed explanation of the format. In short, each
conﬁguration ﬁle contains all necessary parameters needed to
completely specify a simulation. The parameters are grouped
into different sections: Listing 1 shows the group of “physics”
parameters for the Abrikosov example, specifying the temper-
ature T = 0.5Tc, the external ﬂux Φext = 1.5Φ0, the penetra-
tion depth λ = 5ξ0, and an s-wave order parameter with a
phase winding of

2π as a start guess.

−

Listing
examples/swave_disc_vortex/.

Part

of

1.

simulation_config.json

in

"physics": {

"temperature": 0.5,
"external_ﬂux_quanta": 1.5,
"penetration_depth": 5.0,
"crystal_axes_rotation": 0.0,
"gauge": "symmetric",
"charge_sign": −1,
"order_parameter": {

"s": {

"critical_temperature": 1.0,
"initial_phase_shift": 0.0,
"initial_noise_stddev": 0.0,
"vortices": [

{

}

"center_x": 0.0,
"center_y": 0.0,
"winding_number": −1.0

]

}

}

}

Other parameter groups deal with for example the geometry,
numerical accuracy, convergence criteria, convergence accel-
eration, and so on. The parameters can also be set or changed
directly via command line, effectively overriding the settings
in the conﬁguration ﬁle, as shown below. Assuming that the
framework has been properly installed and compiled (see the

9

online documentation and installation guide77) the conﬁgura-
tion ﬁle can be used to start the simulation by running the
following from the root directory of SuperConga:

Listing 2. Running the example with a single Abrikosov vortex in a
conventional superconducting disc.

python superconga.py simulate -C examples/

swave_disc_vortex/simulation_config.json

which should run a few tens of iterations until the convergence
criterion in simulation_config.json is fulﬁlled, printing
simulation status for each iteration to terminal. Here, the ﬂag
-C is used to specify the relative path to the conﬁguration
ﬁle. Adding the arguments “-T 0.1 -B 10.0” will change the
temperature to 0.1Tc, and the external ﬂux to 10Φ0. To start
with an order parameter from a ﬁle, corresponding to e.g. a
previous simulation or an arbitrary computed guess, the -L ar-
gument can be used. Using the ﬂag --help gives further infor-
mation about which parameters are available and their usage.
We note that live visualization can be turned on or off with
the ﬂags --visualize and --no-visualize, respectively. The
main purpose of the live-visualization is to get an overview
of the simulation progress. Thus it is geared towards speed
rather than producing production-ready plots. For the latter,
we instead recommend to visualize the fully converged re-
sults, via the data ﬁles generated by the program. The user
can either use their favorite plotting tool, or use SuperConga
as described in the following. Having followed the example
in Listing 2 the Abrikosov vortex results can be visualized by
running the following from the root directory:

Listing 3. Plotting all spatially dependent quantities in the Abrikosov
vortex example.

python superconga.py plot-simulation -L data/

examples/swave_disc_vortex

This plots all the computed quantities, as shown in Fig. 4. Var-
ious properties of the plot can be controlled via command-line
arguments (as described by the help message), like fonts, col-
ormaps, which quantites are plotted, and if saving the plot di-
rectly to ﬁle rather than drawing in a window. The latter makes
it easy to automatically generate plots from a large number of
simulations.

The local density of states (LDOS) can be calculated from

converged data as a post-processing step, by calling:

Listing 4. Computing the LDOS for the Abrikosov vortex example.

python superconga.py postprocess -C examples/
swave_disc_vortex/postprocess_config.json

where the contents of postprocess_config.json is shown
in Listing 5.

Listing 5.
processing)
examples/swave_disc_vortex/.

LDOS:

Conﬁguration ﬁle used for computing (post-
in

postprocess_config.json

the

{

"spectroscopy": {

"energy_max": 0.5,
"energy_min": 0.0,
"energy_broadening": 0.008,

10

FIG. 4. Plot generated with the SuperConga “plot-simulation” command, visualizing the example with a single Abrikosov vortex in a
conventional superconducting disc, by following Listing 2 then 3. Here, T = 0.5Tc, Bext = 1.5Φ0/
, and κ = 5 with full back-coupling of
the magnetic gauge ﬁeld. (a) The magnitude of the order parameter. (b) The magnitude of the charge-current density. (c) The magnitude
of the induced vector potential. (d) The phase of the order parameter. (e) The polar angle (i.e. direction) of the charge-current density.
The paramagnetic and diamagnetic regions are clearly distinguished. (f) The polar angle of the induced vector potential. (f) The induced
magnetic-ﬂux density.

A

FIG. 5. Screenshot of the SuperConga interactive spectroscopy command, “plot-postprocess”. The plots show the local density of states
(LDOS), N(R, ε), for a single vortex at the center of a conventional superconducting disc, after following Listings 2, 4, and then 6 in order.
Here, T = 0.5Tc, Bext = 1.5Φ0/
2πkBTc
was used. (a) Heatmap of the LDOS versus spatial coordinates, at the ﬁnite energy show in the title, as well as by the vertical dashed line
in panel (b). (b) LDOS (solid red curve) at the coordinates clicked by the user in the heatmap (indicated by the red cross) in panel (a), and
area-averaged DOS (solid black curve). The user can change the energy shown in panel (a) by clicking in panel (b). Similarly, the user can
change the spatial point being visualized in panel (b) by clicking in panel (a).

, and κ = 5 with full back-coupling of the magnetic gauge ﬁeld. An energy broadening of δ = 0.008

A

·

−15015y/ξ0|∆s|/(2πkBTc)(a)|j|/j0(b)|A|/A0(c)−15015x/ξ0−15015y/ξ0χs(d)−15015x/ξ06j(e)−15015x/ξ06A(f)−15015x/ξ0Bz/B0(g)0.0001.3432.685×10−1−π0π0.0000.6111.221×10−1−π0π0.0001.0652.131×10−2−π0π−2.0540.0002.054×10−2−15015x/ξ0−15015y/ξ0N(R,(cid:15))/(2NF)|(cid:15)=0.08[2πkBTc](a)−4−2024(cid:15)/(2πkBTc)×10−10.00.51.01.52.02.53.0N/(2NF)N(R,(cid:15))/(2NF)|R=(2.32,0.12)[ξ0](b)N((cid:15))N(R,(cid:15))0.0001.8253.650"num_energies": 128

},
"numerics": {

"convergence_criterion": 1e−4,
"norm": "l2",
"num_energies_per_block": 32,
"num_fermi_momenta": 720,
"num_iterations_burnin": −1,
"num_iterations_max": 1000,
"num_iterations_min": 0

},
"misc": {

"data_format": "h5",
"load_path": "data/examples/swave_disc_vortex",
"save_path": "",
"verbose": true

}

}

This ﬁle speciﬁes e.g. which energies and resolution to use
in the LDOS calculation, and where the order-parameter data
is located. The empty save path indicates that the LDOS data
will be saved to the same directory as the order parameter data.
The LDOS can be particularly tricky to visualize due to the
high dimensionality. To aid with this, the framework provides
a spectroscopy tool in the form of an interactive LDOS visu-
alizer. Assuming that the vortex LDOS has been calculated
with the above post-processing example in Listing 4, vortex
spectroscopy can be done by running the following from the
root directory:

Listing 6. Performing vortex spectroscopy.

python superconga.py plot-postprocess -L data/

examples/swave_disc_vortex

Figure 5 shows a screenshot of the interactive LDOS plotter
for this example, illustrating that the user can click in the win-
dow to choose which energy to plot the LDOS at (as a 2D-
heatmap versus coordinates), and which point in space to plot
the LDOS versus energy at (as a 1D curve).

To extract the temperature dependence, or the dependence
on any other parameter for that matter, the most straightfor-
ward approach is to write a script which calls the program
multiple times, but with unique values of the parameter. A
few such examples are included in SuperConga, and the fol-
lowing one illustrates how to simulate an Abrikosov vortex for
different values of Ginzburg-Landau coefﬁcient κ, throughout
the whole Type-II range κ

[1, ∞):

∈

Listing 7. Simulating an Abrikosov vortex, for various values of the
Ginzburg-Landau coefﬁcient.

./examples/parameter_sweeps/

swave_disc_vortex_kappa_sweep.sh

The results, seen in Fig. 6, can subsequently be visualized via:

Listing 8. Plotting the vortex dependence on penetration depth.

python examples/parameter_sweeps/
plot_vortex_kappa_sweep.py

11

FIG. 6. Spatial dependence of the (a) charge-current density, and
the (b) total magnetic-ﬂux density, as distance from a vortex core.
The system is an s-wave disc with radius
= 15ξ0 at temperature
T = 0.5Tc, and external ﬂux Φext = 1.5Φ0 (the same as in Figs. 4–5).
Different lines correspond to different values of κ, as indicated by
the legend. Panel (c) is a zoom of (b), illustrating more clearly the
diamagnetic and paramagnetic regions. Due to the small radius, the
system is only partially screened. Full screening (Bext + Bind = 0) is
only achieved in a narrow region for κ = 1. Increasing the ratio
/λ
will increase the region of full screening.

R

R

composite geometries by successively adding and removing
discs and polygons. Both regular and free-form polygons are
implemented, enabling quite intricate systems that e.g. has
holes, are multiply connected, or even disconnected but cou-
pled via induction. For example, Fig. 1 was created in this way
by setting the "geometry" parameter section of the conﬁgura-
tion ﬁle. Listing 9 shows a SQUID-like geometry, created by
adding a central region shaped like an octagon, two arms in
the form of a rectangle, and then removing a disc from the the
central region:

Listing 9. Example setup of a composite geometry.

"geometry": [

{

"polygon": {
"add": true,
"vertices_x": [0.0, 0.0, 100.0, 100.0],
"vertices_y": [5.0, −5.0, −5.0, 5.0]

}

},
{

"regular_polygon": {

"add": true,
"center_x": 50.0,
"center_y": 0.0,
"num_edges": 8,
"rotation": 0,
"side_length": 15.0

So far, the demonstration has dealt with a superconduct-
ing disc. SuperConga allows the user to specify more general

}

},

−15−10−5051015x/ξ0−0.10.00.1jy(x)/j0(a)y=0−15−10−5051015x/ξ002040(Bext+Bind)/Bext(b)y=0−1501501(c)κ=1κ=2κ=4κ=8κ=16κ=32κ=64κ=∞{

"disc": {

"add": false,
"center_x": 50.0,
"center_y": 0.0,
"radius": 8.0

}

}

]

In Listing 9,
the entry "geometry" consists of a list
which speciﬁes in which order (from top to bottom) the
shapes should be added or removed, the latter indicated by
"add": true or "add": false, respectively. All coordinates
and lengths are given in units of ξ0, and the user can choose
whichever origin they prefer, as it does not inﬂuence the
physics. The disc is uniquely deﬁned via its center coordinates
and radius, a regular polygon by center coordinates, number
of edges, rotation (in units of 2π), and side-length. For free-
range polygons, a list of x- and y-coordinates for the vertices
are speciﬁed (in counter-clockwise order). Currently, the free-
range polygons are limited to convex hulls. Note that an arbi-
trary number of each shape in principle can be listed, which
was previously used to e.g. study mesoscopic roughness by
generating boundaries with random removal of polygons.78
Note however, that for extremely large number of added/re-
moved shapes, the performance might eventually be reduced
due to having to deal with a large set of complicated trajecto-
ries and boundary conditions.

It is straightforward to extend the above example of a sin-
gle Abrikosov vortex, to vortex lattices, by increasing the
external ﬁeld. As an example, Fig. 7 plots the zero-energy
LDOS in nanoscale grains of various geometries exposed
to high external ﬁelds. Vortex cores show up as dot-like
dark spots, illustrating vortex lattices with various mesoscopic
properties.
In contrast to bulk lattices, the number of vor-
tices and their separation in a ﬁnite system does not only
the
depend on the external ﬁeld strength, but also on e.g.
boundary conditions, the system size relative to the pene-
tration depth, and the shape of the system. While bulk lat-
tices are usually triangular, a mesoscopic vortex lattice can
mimic the shape and symmetry of the superconducting grain.
In addition, rather than entering one by one as the exter-
nal ﬁeld is increased, several vortices might suddenly en-
ter at a time, sometimes as concentric shells (hence referred
to as the vortex-shell effect). These effects have been ob-
served e.g. in grains shaped like discs,3,19,21 squares,21,52,82–85
triangles,21,86–89 and pentagons.90 Such scenarios are great ex-
amples of when a sufﬁciently sophisticated simulation tool
like SuperConga is crucial, since one needs to capture the
combined effects of a conﬁned geometry and a ﬁnite pene-
tration depth with back-coupling of the induction. In particu-
lar, one needs to use a powerful convergence accelerator that
can properly traverse the phase space. For example, we note
that with the proper choice of start guess and accelerator set-
tings, it is in principle possible to study giant vortices,91–96
as well as vortex-antivortex pairs.84,85,97–100 Careful treatment
and use of the adaptive convergence accelerators show, how-
ever, that these structures are generally unstable in non-hetero-

12

structures that are sufﬁciently clean, where they decay to more
traditional vortex structures with a lower free energy.

V. EXAMPLES AND RESULTS

In this section we present several examples of studies that
are quite straight forward to perform with the framework Su-
perConga. In a few special cases it is possible to ﬁnd analytic
results, which enable us to check the overall correctness of
the framework. First, we study a 2D superconducting annu-
lus. In the case of an s-wave superconductor we may com-
pare with analytics, while in the d-wave superconducting case
we demonstrate the corrections due to suppression of the or-
der parameter at the edges and the formation of spontaneous
currents at low temperature.54,55,78,101–105 Second, we study a
superconducting disc also subjected to an external magnetic
ﬁeld. Here we return to the well-studied problem of vortex
lattice formation, which has a long history going back to the
original work of Abrikosov,106 and in particular to that of
Pearl considering superconducting discs.107 For the cases of
zero or one vortex at the center of the disc, we compare with
analytic results. Then we continue with higher ﬁelds, where
we have to resort to a numerical treatment. Finally, we simu-
late irregular superconducting islands in an external magnetic
ﬁeld. The study is inspired by experimental work done by
Timmermans et. al.52 on spectroscopy on superconducting
nanostructures assembled by small squares of Mo79Ge21.

A. Superconducting annulus in a magnetic ﬁeld

We begin by studying homogeneous superﬂow in a super-
conductor. Superﬂow implies that there is a ﬁnite superﬂuid
momentum caused by phase gradients and/or a vector poten-
tial, as deﬁned in Eq. (2). The fact that the phase gradient
enters in the superﬂuid momentum becomes clear when doing
a gauge transformation. In quasiclassical theory this is done
as follows. We start with the order-parameter ∆(pF, R) =
∆(R)η(pF) exp[iχ(R)], which in general is complex valued.
The order-parameter matrix can then be decomposed as

ˆ∆(pF, R) = ˆU(χ) ˆ∆0(pF, R) ˆU †(χ),

(28)

with the transformation matrix

ˆU(χ) =

(cid:18)

eiχ(R)/2
0

0
iχ(R)/2

e−

(cid:19)

= eiχ(R) ˆτ3/2,

(29)

and ∆0(R) a purely real amplitude (i.e. χ0(R)
0 while the
basis function η(pF) may still be complex valued). Applying
the same transformation to the Eilenberger Eq. (10), suppress-
ing the arguments of ˆg and ˆ∆, we see that if ˆg solves

≡

ivF·

∇R ˆg + [(iεn + e

c vF ·

A) ˆτ3

−

ˆ∆, ˆg] = 0,

(30)

with ˆ∆ = ˆU ˆ∆0 ˆU †, then ˆg0 = ˆU † ˆgU is a solution to

ivF·

∇R ˆg0 + [(iεn + e

c vF ·

A

1

2 vF·

−

∇χ) ˆτ3

−

ˆ∆0, ˆg0] = 0. (31)

13

A

R

= π

FIG. 7. (a) Mesoscopic vortex lattices in conventional s-wave superconducting grains of different shapes (rows), exposed to different external
ﬂuxes (columns) in a directed sweep. We set κ = 10 and T = 0.1Tc, and the grain side-lengths (
) was chosen such that the area is the same
2. Colors indicate the LDOS at zero energy, with localised Caroli-de Gennes-Matricon states15,79,80 in each vortex
as that of the disc,
2πkBTc was used, and an arbitrary cutoff of 2NF was introduced.
core. To give the vortex cores a visible extent, a smearing of δ = 0.008
The plots illustrate that vortex lattices in mesoscopic superconductors can be highly modiﬁed by ﬁnite-size effects, such as the grain shape.
In particular, as the external ﬁeld increases, the vortices are packed into a tighter conﬁguration, with the introduction of vortex shells, and
depending on the ﬂux-sweep strategy, vortex-lattice "dislocations" might enter the system. In this case, the ﬂux is varied in steps of Φ0 from
low ﬂuxes (left-most column) to high ﬂuxes (middle column), and then from high ﬂuxes to low ﬂuxes again (right-most column). For each new
value of the ﬂux, the converged results from the previous simulation is used as a start guess. The different sweep directions lead to different
local minima in the free energy. We note that far from the free-energy minimum, when there are few vortices compared to the external ﬂux,
there is signiﬁcant pair-breaking and zero-energy states due to large screening currents at the edges of the system, see e.g. square in the third
column. Panels (b) and (c) show how the free energy and magnetic moment evolve using this directed-sweep strategy, respectively, for the
pentagon (orange) and disc (blue). Full lines are for sweeping towards higher ﬁelds and dashed for sweeps in the opposite direction. This
asymmetry in the free energy versus applied ﬁeld, between the two sweep directions, can be seen as a manifestation of the Bean-Livingston
barrier that makes vortex entry energetically harder than vortex exit.81 (d) LDOS at a ﬁnite energy ε = 0.9kBTc, at external ﬂux Φext = 55Φ0.

S

·

The superﬂuid momentum ps in Eq. (2) is now naturally
formed and we get the Eilenberger equation in the form

∇R ˆg0 + [(iεn

ivF·

vF ·

−

ps) ˆτ3

−

ˆ∆0, ˆg0] = 0,

(32)

with the purely real order-parameter matrix.

Let us look at the linear response to a small and spa-
∆/vF. To
tially homogeneous superﬂuid momentum, ps (cid:28)
do this, we write the propagator as a perturbation expansion
ˆg = ˆg0 + δ ˆg +
s ]. Using the normalisation condition on

[p2

O

the propagator ˆg2 =

π 2ˆI we get
−
π 2ˆI

and

ˆg2
0 =

−
ˆ∆0(pF), we get via the Eilenberger equation

ˆg0, δ ˆg
}
{

= 0.

Since ˆg0 ∝ iεn ˆτ3
the solution

−

δ ˆg(pF; εn) = π

ps
vF·
Λ3
n(pF)

2
∆(pF)
|
|
iεn∆∗(pF)

iεn∆(pF)
2
∆(pF)
|

−
−|

,

(33)

(cid:18)
2 + ε 2
n . From the form of δ ˆg we
∆(pF)
deﬁning Λn(pF) =
|
|
can directly read out that the linear correction to the anoma-
(cid:112)

(cid:19)

14

f (pF; εn), is odd in fre-
lous Green’s function component,
quency and will not give a correction in leading order in ps
to the order parameter ∆(pF). The diagonal part of δ ˆg allows
us to calculate the current to linear order in ps as

δ j = 2eNF(cid:104)

vF(pF)Y3/2(pF)vF(pF)

pF ,

ps(cid:105)

·

(34)

with the angle-dependent Yoshida function

Y3/2(pF) = πT ∑
n

2
∆(pF)
|
|
Λ3
n(pF)

.

Equation (34) is usually written in the well-known form

¯ρs(pF)
js = e
(cid:104)

·

pF ,

ps(cid:105)

(35)

deﬁning

¯ρs(pF) = 2NFY3/2(pF)vF(pF)v(cid:62)F (pF),

(36)

the angle-dependent superﬂuid-density, or superﬂuid stiffe-
ness tensor.108

As a ﬁnal step we write the change in the free energy in

linear response as

Ω = Ωbulk + δ Ωkin + δ Ωmagn ,

(37)

where

Ωbulk =

NF

2 ln
∆(pF)
|

T
Tc

+πT ∑
n

4
∆(pF)
|
|
(Λn(pF) + εn)2

,

A

(cid:42)|

εn
|

(cid:43)pF
(38)
is the bulk superconducting free energy (see e.g. Ref. [35]),
and
is the area of the superconducting sample considered.
The change in free energy in Eq. (37) due to superﬂow con-
sists of a kinetic contribution55

A

|

1
2

(cid:28)
and a magnetic contribution

(cid:90)

δ Ωkin =

dR

p(cid:62)s (R) ¯ρs(pF)ps(R)

,

(39)

(cid:29)pF

δ Ωmagn =

1
8π

dR

∇
|

×

A(R)

Bext

−

2 ,
|

(40)

(cid:90)
where Bext is the applied external magnetic ﬁeld.

1. The solenoid gauge

With the above introduction to superﬂow in a supercon-
ductor, we are ready to study a superconducting annulus with
R<), as illustrated in Fig. 8(c). The
outer (inner) radius
2
2
<). Let us ﬁrst consider
area of the annulus is
= π(
> − R
R
the following text-book vector potential109 used to illustrate
the Aharonov-Bohm effect:110

R> (
A

Aext(R) =

Φext
2πR

ˆϕ , R

R<,
[

R>] ,

∈

(41)

where ˆϕ is the unit vector along the azimuthal direction and
Φext is an externally applied magnetic ﬂux threading only the

R

> = 25ξ0 (

FIG. 8. The magnetic ﬂux dependence of the free energy of an
s-wave (a) and a dxy-wave (b) superconducting annulus using the
solenoid gauge Eq. (41). The outer (inner) radius of the annulus is
< = 10ξ0), and the temperature is set to T = 0.5Tc.
R
The order-parameter amplitude for the two cases are shown in (c),
s-wave, and (d), d-wave. In (a) and (b) the diamonds are results for
the free energy extracted from SuperConga with the scale on the left
side y-axis. The dashed lines is the free energy given by Eq. (38)
and Eq. (43) with scale on the right side y-axis. The black (left) and
red (right) parabolas correpond to enforced superconducting phase
windings of n = 0 and n =

1.

−

hole. We call this particular gauge the solenoid gauge. It can
be seen as a mathematical idealisation to guarantee zero exter-
nal magnetic ﬂux through the superconducting annulus, while
the vector potential remains ﬁnite everywhere. One possible
physical realization of this gauge would be to let the super-
conducting annulus encircle a strong magnet.111

Using the gauge transformation Eq. (28) we can impose a
phase winding in the order-parameter ﬁeld going around the
annulus. One of the constraints on an order parameter is that

-1-0.500.511.52Φ/Φ0-0.0142-0.0141-0.0140Ω(Φ/Φ0)/ΩA(linear response)-1-0.500.511.52Φ/Φ0-0.0098-0.0097Ω(Φ/Φ0)/ΩA T=0.5Tc (d-wave)-1-0.500.511.52Φ/Φ0-0.0206-0.0205-0.0204-0.0203-0.0202Ω(Φ/Φ0)/ΩA-1-0.500.511.52Φ/Φ0-0.0206-0.0205-0.0204-0.0203-0.0202Ω(Φ/Φ0)/ΩA(linear response)T=0.5Tc (s-wave)°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª000.22ØØ¢dxyØØ/(2ºkBTc)°0.0000.00¬dxy/º°0.0000.00Bind,z//B000.00|j|/jd°0.0000.00jx/jd°0.0000.00jy/jd00.00|A|/A0°0.0000.00Ax/A0°0.0000.00Ay/A0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª0°20020x/ª0°20°1001020y/ª000.27|¢s|/(2ºkBTc)°0.0000.00¬s/º°0.0000.00Bind,z//B000.00|j|/jd°0.0000.00jx/jd°0.0000.00jy/jd00.00|A|/A0°0.0000.00Ax/A0°0.0000.00Ay/A0a)b)c)d)it is single valued. This condition leads to that χ in Eq. (28)
must be chosen so that the total winding going around the
void is a multiple n of 2π, and we can write χ = nϕ where n
can take any integer value. If we now look at Eq. (2) we get,
reinstating ¯h and c,

15

ps =

¯h
2

∇χ

e
c

Φext
2πR

−

ˆϕ =

¯h
2R

n +

(cid:18)

Φext
Φ0 (cid:19)

ˆϕ .

(42)

−

We see that ps can be made to vanish for certain values of the
nΦ0, i.e., the superﬂuid momenta van-
external ﬂux, Φext =
ishes throughout the superconducting annulus for every ex-
ternal ﬁeld that matches integer multiples of the ﬂux quan-
tum Φ0. At those matching ﬁelds δ Ωkin = 0. As a con-
sequence of the gauge properties we see that if we have a
self-consistent solution for the pair ˆgn, ˆ∆n at a given mag-
netic ﬂux Φext threading the hole, we can, via an appropriate
gauge transformation ˆU, construct a solution at any other ex-
ternal ﬂux that differ from Φext by an integer number of ﬂux
quanta. This setup nicely demonstrates the fundamental con-
cept of ﬂux quantization.112–116 Note that the negative sign
of the phase winding n reﬂects our choice of unit, e =
e
,
|
−|
where the particle probability current ﬂows with the gradient
of the phase, while the associated charge current is in the op-
posite direction, see Eq. (35).

a. An s-wave superconducting annulus in the solenoid
gauge. The simplest s-wave superconductor has an isotropic
order parameter with ∆(pF) = ∆, where ∆ is a complex scalar
quantity and the basis function η(pF) = 1. For such an order
parameter, scattering off sample surfaces leaves the supercon-
ducting state unaffected. As a consequence, linear-response
theory will be sufﬁcient to describe the annulus up to quite
large superﬂuid momenta. We can thus calculate the kinetic
contribution to the free energy Eq. (39), using the homoge-
neous solution of Eq. (20), to get

δ Ωkin
(2πTc)2 NF

=

π
4

ξ 2
0 Y3/2(T ) ln

(cid:18)

n +

R>
R< (cid:19) (cid:18)

2

Φext
Φ0 (cid:19)

, (43)

after integrating over the superconducting area and setting

Y3/2(T ) =

ˆvF(pF)Y3/2(pF; T ) ˆvF(pF)
(cid:104)

ˆps(cid:105)

·

pF

(44)

→

where ˆvF(pF) and ˆps are unit vectors. For this particular
∞ and neglect screen-
gauge, we let the penetration depth λ
ing effects. This leads to that the free-energy contribution
δ Ωmagn is zero. The free energy comes in a family of parabo-
las as function of the external ﬂux. Each parabola is cen-
nΦ0 where n is the integer ﬂux quantization,
tered around
or phase winding, enforced on the order parameter. This
is clearly shown in Fig. 8 (a), where we also show results
obtained by direct calculation using SuperConga, for phase
windings n = 0 and n =
1. The bottom of each parabola
corresponds to the free energy Ωbulk(T ) at zero external ﬂux
for the considered temperature.

−

−

We ﬁnally mention that at temperatures close to the tran-
sition temperature, Tc, δ Ωkin can made to exceed the energy
gain Ωbulk when the external ﬂux is close to (n + 1
ll
*.agrThis is a manifestation of the Little-Parks effect,33,117–119
where one can induce a ﬁeld-modulation of the critical tem-
perature of a superconducting ﬁlm enclosing a hole.

2 )Φ0.

R

R

−
> = 25ξ0 (

FIG. 9. (a) The free energy of a dx2
y2 superconducting annulus as
function of external ﬂux using the solenoid gauge. The outer (inner)
< = 10ξ0). The penetration
radius of the annulus is
depth is assumed to be much larger than the coherence length so that
screening can be neglected. We look at two cases with and without
a phase winding 2π around the annulus. In panel (a), from top to
bottom, we lower the temperature from T = 0.3Tc down to T = 0.1Tc.
In panels (b)–(c) we show the conﬁguration of spontaneous currents
that signiﬁes the two low-energy states at zero magnetic ﬁeld.
It
is the current conﬁguration showed in (c) that has the lowest free
energy. The magnitudes of the current density are at maximum (cid:46)
0.1 j0. The orange diamond in panel a is a special meta-stable state
with no spontaneous currents.

b. A d-wave superconducting annulus in the solenoid
gauge. Next, we change the superconductor to be a d-wave
superconductor. The order-parameter ﬁeld for the d-wave de-
pends on position on the Fermi surface, pF, via the basis func-
tion, either the dx2
y2 or dxy as listed in Table III. This momen-
−
tum dependence leads to that scattering off a surface may be
pair breaking and one must solve for the spatial dependence
of the order parameter using Eq. (20).

As for the s-wave superconductor, the free energy in an ex-

-0.0160-0.0159-0.0158-0.0157Ω(Φ/Φ0)/ΩA-0.0180-0.0179-0.0178-0.0177Ω(Φ/Φ0)/ΩA-0.0186-0.0185-0.0184Ω(Φ/Φ0)/ΩA-1-0.500.511.52Φ/Φ0-0.0190-0.0189-0.0188-0.0187Ω(Φ/Φ0)/ΩAn=0n=-1T=0.10TcT=0.15TcT=0.20TcT=0.30Tcabcab∼

(n +
ternal magnetic ﬁeld come in a family of parabolas
Φext/Φ0)2. However, as shown in Fig. 8(b), neither Ωbulk(T )
nor δ Ωkin(T, n, Φext), are captured correctly by a calculation
with a homogeneous order parameter magntitude and super-
ﬂow treated in linear response. The order-parameter mag-
nitude of a dxy-wave superconducting annulus is shown in
Fig. 8(d). As seen there are regions near the surfaces where
the magnitude is severely reduced, which leads to correction
to Ωbulk(T ).

The pair-breaking at interfaces that can be found in un-
conventional superconductors is due to low-energy Andreev
states that are localised in a region of a few coherence lengths
width at the surface.120 These states modify low-temperature
properties of the superconductor. A disc-shaped unconven-
tional superconductor was studied by Suzuki and Asano ﬁnd-
ing a paramagnetic instability at low temperatures as a re-
sponse to a small magnetic ﬁeld.121 We ﬁnd similar param-
agnetic behavior for the annular superconductor at low tem-
peratures and relate the effects to spontaneous generation of
phase gradients.54,101

∼

In Fig. 9, the free-energy is shown for a set of tempera-
tures for the two cases where the initial guess for the order-
parameter ﬁeld is homogeneous, and where we lock a phase
winding of 2π around the annulus. Below T
0.2Tc, the ex-
istence of zero-energy Andreev states start to drive the su-
perconductor to generate a ﬁnite ps by spontaneous phase
gradients.54,101 This ﬁnite superﬂuid momentum gives rise to
ps, that lifts the zero-energy states away
a Doppler shift, vF ·
from the Fermi level and thus lowers the free energy of the
0.18Tc is
system. The free-energy minimum below T ∗ ≈
shifted to occur at ﬁnite magnetic ﬂux. At the lowest tem-
perature we show here, T = 0.1Tc, we can ﬁnd several meta-
stable states at small ﬂuxes. The orange rhombus in Fig. 9
has a purely real order parameter and the zero-energy states
are not shifted away from the Fermi level. This state is only
stable at Φext
0 and any small seed of a phase gradient in
the order parameter, or a minute magnetic perturbation, will
generate a conﬁguration with spontaneous currents. The two
low-energy states we ﬁnd are combinations of two possible
states as showed in Fig. 9.

≡

2. Solving London-Maxwell equation in a symmetric gauge

In contrast to the case with the solenoid gauge above, a
more common situation experimentally is when the exter-
nal magnetic ﬁeld Bext = Bext ˆz is applied in a homogeneous
fashion and penetrates also the superconductor. We incor-
porate this case through a symmetrical gauge Aext(R) =
1
2 Bext(

y ˆx + x ˆy) subject to the condition ∇

A = 0.

Let us study the London-Maxwell equation for the vector

−

·

potential A in the symmetrical gauge32,33,107,122,123

∇2A =

−

4πe
c (cid:104)

¯ρs(pF)ps(cid:105)

pF =

−

1
λ 2(T )

Φ0
2πR

(cid:19)
(45)
for the same annulus geometry as in the previous section. We
allow for a phase winding 2πn of the order parameter going

(cid:18)

n ˆϕ + A

,

16

around the annulus, and include screening of the externally
applied ﬁeld. The temperature-dependent penetration depth
λ (T ) entering Eq. (45) is deﬁned as

1
λ 2(T )

=

1
λ 2
0

Y3/2(T ).

(46)

As long as the inner radius is much larger than the coherence
length and the external magnetic ﬁeld is moderate in strength,
the superﬂuid momentum will be small, and we can disre-
gard any reduction of the order-parameter amplitude for an
s-wave annulus. In this case linear-response theory remains
valid and gives a platform to verify more involved calcula-
tions produced by SuperConga. Below, we introduce the di-
mensionless applied magnetic ﬂux

α =

Φext
Φ0

.

(47)

a. Analytic solution of the London-Maxwell equation.
Equation (45) is a diffusion equation and can be solved analyt-
ically. We give the solution here for completeness. In a cylin-
drically symmetric case, the solution to Eq. (45) is given by
the modiﬁed Bessel functions of ﬁrst and second kind, Iµ (x)
and Kµ (x) respectively. Writing A = A(R) ˆφ , the general so-
lution, in the external magnetic ﬁeld Bext = αΦ0 ˆz/
, may
be written as

A

A(R) = Φ0λ

−

A(R) = β

R
λ

(cid:18)
, R

a I1
(cid:20)
nΦ0
2πR
R
Φ0
2

, R

+ b K1

(cid:19)
R<,
[
[0,

(cid:18)
R>],
R<),

∈

∈

R
λ

(cid:19)(cid:21)

(48)

(49)

A

A

= π(

h = π

h
A
2
2
where
<) and
> − R
R
annulus and of the inner hole. The term
ticular solution needed when n
(a, b, β ) are determined so that A is bounded for R <
continuous at R =
is continuous at R =

2
< are the areas of the
1/R is the par-
= 0. The unknown constants
R<, and
R< and that the magnetic ﬁeld B = ∇
A
×
R>. We state them for completeness
K<
2

K>
0

R

∼

a =

b =

1
M
1
M

β =

1
M

α +

h
A
I>
0

h
A

(cid:18)

A
I<
2

α +

(cid:18)

A
2πλ 2

α

n
,
(cid:19)

n

,
(cid:19)
0 K<
I>

(50)

(51)

(52)

0 K>
I<
0

0 −

n

,
(cid:19)

−
(cid:18)
A
(cid:2)
R>,<
0 and I>,<
2 K>
I<
µ = Iµ (
λ ) and the same for
. The corresponding magnetic ﬁeld, B = B(R)ˆz in and

0 K<

(cid:3)

with M = I>
K>,<
µ
around the annulus is

2 −

B(R) = Φ0

a I0
(cid:20)
Φ0

(cid:18)
, R

R
λ

(cid:19)
[0,

b K0

−

R
λ

(cid:18)

(cid:19)(cid:21)

, R

R<,
[

R>],

∈

B(R) = β

R<) .
The constant β gives the ﬂux strength in the inner hole in a
similar way as α does for the annulus.

(53)

h
A

∈

(cid:54)
17

R

FIG. 11. The free energy as function of external magnetic ﬁeld for a
d-wave superconducting annulus, with an outer (inner) radius
> =
25ξ0 (
< = 10ξ0), obtained using SuperConga. The penetration
depth is much larger than the coherence length, λ = 50ξ0. We look
at two cases; without (n = 0) and with (n =
1) a phase winding of
2π around the annulus. From top to bottom we lower the temperature
from T = 0.3Tc down to T = 0.1Tc as in Fig. 9. The dotted vertical
lines are a guide to the eye.

R

−

R

R

FIG. 10. The free energy for an s-wave superconductor in an annulus,
with an outer (inner) radius
< = 10ξ0), in an external
> = 25ξ0 (
magnetic ﬁeld in symmetric gauge, at T = 0.2Tc. The magnetic ﬂux-
2
2
density is given by Bz = Φext/
<). Four
> − R
different values of the order-parameter phase-winding, n, are shown
in each plot. The points are numerical results from SuperConga, and
the solid lines are analytical results. The only parameter that dif-
fers between the plots is the Ginzburg-Landau parameter κ = λ /ξ0,
which is (a) κ = 100, (b) κ = 20, and (c) κ = 2.

, where

= π(

R

A

A

b. An s-wave superconducting annulus: For the s-wave
annulus, the equations (49) and (53) give a good account for
the response to an external ﬁeld. The free energy of the su-
perconducting annulus can thus be evaluated using Eqs. (39)–
(40), and the results compare well with results obtained by
SuperConga. By inspection, one sees that the functional form
of the free-energy correction due to an external ﬁeld (α) and
a possible phase winding (n) will be123

δ Ωkin + δ Ωmagn = δ Ω0(ωχ n2 + (ωBn

α)2).

−

(54)

We determine the factors δ Ω0, ωχ and ωB numerically. They
depend both on geometry and on temperature via the temper-
ature dependence of the penetration depth.

The results for the free energy are shown in Fig. 10 for
T = 0.2Tc and for a set of different penetration depths. The
main purpose here is to verify SuperConga by comparison to
the results obtained by linear response. The agreement is ex-
cellent for small phase windings and large penetration depths.
However, the agreement worsens with decreasing λ and in-
creasing n. This is a numerical issue that is remedied by a
ﬁner spatial resolution of the simulation. This highlights that
one needs verify results from SuperConga by varying the pa-
rameters that are related to numerical accuracy. These are typ-
ically spatial resolution of the geometry, angular resolution of
the Fermi-surface averages, and the cut-off in the frequency
sums.

c. A d-wave superconducting annulus: For the d-wave
superconductor we solve Eqs. (7)-(8) and Eq. (10) self-
consistently. We set the zero-temperature penetration depth
to 50ξ0 as most d-wave superconductors are extreme type-II
superconductors. The results are shown in Fig. 11 for zero

≈

and one phase winding locked into the annulus. Well above
T
0.2Tc we ﬁnd that the free energy has the parabolic func-
tional dependence on applied ﬁeld as for the s-wave super-
conductor. At lower temperatures, the low-energy surface An-
dreev states dominate, and their paramagnetic response mod-
iﬁes the free energy to host two minima at ﬁnite external ﬂux,
signalling that it is energetically favorable to form sponta-
neous currents as discussed above using the solenoid gauge.

d. Magnetic moment. The presence of a circulating cur-

rent in an annulus can be detected as a magnetic moment

m =

1
2

(cid:90)V

dR R

×

j3D(R).

(55)

Since the supercurrent, j(R), we compute with SuperConga
is conﬁned to ﬂow in a two-dimensional plane, the current
density in a stack of layers is given as

j3D(R) = d ∑
layers

δ (z

−

zl)j(R),

i.e. the magnetic moment is given as

m =

Nld
2

(cid:90)A

dR R

×

j(R) ,

(56)

where Nld is the thickness of the grain along the z-axis assum-
ing Nl layers separated by the c-axis distance d. The unit for
the magnetic moment is m0 = j0ξ0

where

V

j0ξ0 =

c2
4π

B0
κ 2 (cgs) =

1
µ0

B0
κ 2 (SI),

(57)

with B0 = Φ0/(πξ 2
= Nld
. The parameters that de-
termine m0 are thus the geometrical size (and shape) of the

0 ) and

A

V

024Φ/Φ0−3.6−3.5−3.4−3.3−3.2−3.1Ω/ΩA×10−2(a)n=0n=-1n=-2n=-3024Φ/Φ0−3.6−3.5−3.4−3.3−3.2×10−2(b)024Φ/Φ0−3.605−3.600−3.595−3.590−3.585−3.580×10−2(c)−4−2024Φ/Φ0−1.9−1.8−1.7−1.6−1.5−1.4Ω/ΩA×10−2n=0(a)T=0.3T=0.25T=0.2T=0.15T=0.1−2024Φ/Φ0n=−1(b)18

FIG. 12. How the two factors, dα and dn, in the expression for the
magnetic moment of an s-wave superconducting annulus, Eq. (59),
depend on the relative sizes of the inner (outer) radius
>) and
the penetration depth λ0.

< (

R

R

object and the magnetic penetration depth speciﬁc of the su-
perconducting material. m0 can also be expressed in the per-
haps more familiar form m0 = 2µBn
/2me
e
, where µB = ¯h
|
|
is the Bohr magneton and n = vF pF NF the number density of
charge carriers. Inserting numerical values for Φ0 and µ0 and
setting the length scale to nm:s for λ0 and

gives

V

V

m0
/λ 2

0 ) ≈

(
V

10−

18Am2 = 0.5

0.5

×

×

10−

21emu.

(58)

Inserting the analytical form of the vector potential from
Eq. (49) into Eq. (34), we can evaluate the magnetic ﬁeld (α)
and phase-winding (n) dependence of the magnetic moment
of a stack of 2D s-wave annuli to be

m(α, n) = m0 (dα α + dnn) ˆz ,

(59)

R

= π(

> = 25ξ0 (

FIG. 13. The magnetic moment, Eq. (56), for an s-wave supercon-
ducting annulus, with an outer (inner) radius
< =
10ξ0), in an external magnetic ﬁeld in symmetric gauge, at T =
0.2Tc. The external ﬂux density is given by Bext = Φext ˆz/
, where
2
<). Four different values of the order-parameter
A
phase-winding, n, are shown in each plot. The points are numerical
results from SuperConga, and the solid lines are analytical results,
Eq. (59). The only parameter that differs between the plots is the
Ginzburg-Landau parameter κ = λ0/ξ0, which is (a) κ = 100, (b)
κ = 20, and (c) κ = 2.

2
> − R
R

R

A

where

πλ 2
0

A
πλ 2
0

dα =

dn =

A

+
h
A
M
A
2πλ 2
M

A

2 K>
I<

2 −

2 K<
I>
2

,

(cid:0)
h −

(cid:1)

1

.

(cid:19)

A (cid:18)

(60)

(61)

How dα and dn depend on the annulus radii and the penetra-
tion depth is shown inf Fig. 12. In Fig. 13 we show how the
magnetic moment depends on the penetration depth and the
forced phase winding as function of applied ﬁeld. The com-
puted values of the magnetic moment using SuperConga fall
right on the analytical ones of Eq. (59).

While the magnetic moment of the s-wave annulus holds
little surprise, the magnetic moment of the d-wave annulus
shows trace of a low-temperature transition where screen-
ing currents are modiﬁed by the paramagnetic nature of the
zero-energy Andreev states.54,101,124–126 The free energy de-
pendence on temperature and magnetic ﬁeld may be hard
to directly measure whereas the magnetic moment of a d-
wave annulus could be a possible route to detecting this low-
temperature transition. In Fig. 14 we show the magnetic mo-
ment of a d-wave superconducting annulus as function of ex-
ternal ﬂux at several temperatures. The dimensions are the
same as for the s-wave case, i.e.
R< = 10ξ0,
and the penetration depth is λ0 = 50ξ0. For low temperatures

R> = 25ξ0 and

FIG. 14. The magnetic moment, Eq. (56), as a function of external
magnetic ﬁeld for a d-wave superconducting annulus, obtained using
SuperConga. The conﬁguration is the same as in Fig. 11. The dotted
vertical lines are a guide for the eye. Each line is shifted 0.075 units
upward from the line below.

and small external ﬁelds, the signature of the Andreev states is
that the magnetic moment of the annulus is reversed compared
to that at high ﬁelds.

510R>/λ00.20.40.60.8R</R>dα(a)510R>/λ0dn(b)−10.50−0.2−0.10024Φ/Φ0−1−0.500.51mz/m0(a)n=0n=-1n=-2n=-3024Φ/Φ0−6−4−20246×10−1(b)024Φ/Φ0−4−3−2−10123×10−2(c)−4−2024Φ/Φ0−3−2−10123456mz/m0×10−1n=0(a)T=0.3T=0.25T=0.2T=0.15T=0.1−2024Φ/Φ0n=−1(b)B. A mesoscopic s-wave superconducting disc

19

R

As another example we consider an s-wave superconductor
in the form of a 2D-disc, with radius
, in an external mag-
netic ﬁeld. We will allow for arbitrary strength of the applied
magnetic ﬁeld so that multiple vortices can enter the disc. The
general solution can and will break the continuous rotational
symmetry of the disc around its central axis.
Investigating
this problem requires that we solve the Eilenberger equation,
Eq. (10), with a self-consistently determined order-parameter
ﬁeld, Eq. (3), and vector potential Eq. (7). The magnetic ﬁeld
where the ﬁrst vortex enters is the ﬁrst critical ﬁeld of a super-
conductor and is referred to as Bc1. At this ﬁeld it becomes en-
ergetically favourable for the superconducting material to host
one vortex located in its interior well away from its physical
edges. This compared to generating large screening currents
ﬂowing at the sample edges. The ﬁrst critical ﬁeld will de-
pend on several parameters. Parameters intrinsic to the super-
conducting material are the penetration depth, λ (T ), and the
coherence length, ξ (T ). Both depend on temperature via the
temperature dependence of the superconducting energy gap
∆(T ). Extrinsic parameters are e.g.
the physical size and
shape of the superconducting sample, which in our example
here will simply be the radius
of the disc. Also tempera-
ture and magnetic-ﬁeld strength are externally controlled. We
will assume that our superconductor is a layered 2D-material
with negligible inter-layer coupling. As the ﬁeld is increased
above Bc1, a cascade of mesoscopic vortex conﬁgurations are
possible, which are separated by relatively small energy bar-
riers. At high ﬁelds a vortex lattice may be established.106.
Reaching the second critical ﬁeld, Bc2, bulk superconductiv-
ity ultimately vanishes. With our framework SuperConga we
can treat the three relevant length scales of this problem, i.e.
ξ0, λ0, and
, on the same footing at general temperatures
and at general magnetic ﬁelds up to Bc2 (and in principle Bc3).
Throughout this section we focus on a disc with a radius ﬁxed
to 25ξ0 at a temperature set to 0.2Tc if not otherwise stated.
The analytic results we give serve as an important tool to ver-
ify the results extracted from SuperConga.

R

R

Let us ﬁrst focus on Bc1 which was nicely treated by A.
Fetter in Ref. [122] for a thin-ﬁlm superconducting disc. In
the case that the penetration depth is the largest scale in the
system the back-coupling of the current can be omitted. The
corresponding superﬂuid momentum is

FIG. 15.
The free energy per unit area as a function of exter-
nally applied ﬁeld for an s-wave superconducting disc of radius 25ξ0,
computed analytically (points) and numerically with SuperConga
(dashed lines). Here we show the low ﬁeld free-energy in the case
λ = ∞ and at a temperature set to 0.2Tc.

R

R

/
R

gives the free-energy contribution from the induced supercur-
rent due to the combined effect of the external ﬁeld and to
the phase-winding of 2π around the vortex core. The term
εcore in principle consists of two terms. The ﬁrst is propor-
tional to ln(
c, due to the
c), with the vortex-core radius
1/R dependence of ps. The second, ε0, is due to the gradient-
energy terms that come form the suppression of the order-
parameter amplitude needed to accommodate the singularity
in the vortex-core center. This second term is not captured in
the simple London-Maxwell theory as it requires a theory that
includes also the coherence-length scale ξ0 in the calculations.
In Fig. 15 we show calculations made with SuperConga for
λ0 = ∞. As seen, numerical results fall straight on the theoret-
ical prediction for (Ω(α)
given by Eqs. (62)-(63).
Ωbulk)/
The main physical observable to extract is Bc1, deﬁned as the
ﬁeld where having a vortex becomes energetically favorable
compared to the vortex-free case. For this disc at this temper-
ature Bc1 occurs at α

3.8.

A

−

When the penetration depth is comparable to or smaller
than the size of the disc we need to analyze Eqs. (49)-(53)
0. The result is
in the limit that

≈

R< →

ps(R) =

n
R

¯h
2

(cid:18)

+ α

R
2
R

ˆϕ.

(cid:19)

Calculating the free-energy density correction due to the su-
perﬂuid momentum above with (n =
1) and without (n = 0)
a single vortex gives:

−

Aφ (R) = λ Beff(α, n)I1

Bz(R) = Beff(α, n)I0

(cid:18)
R
λ

(cid:18)

with

+ n

1
R −

Φ0
2π
(cid:20)
Φ0
2πλ 2 K0

(cid:19)
+ n

R
λ

(cid:19)

1
λ
R
λ

K1

R
λ

(cid:18)

(cid:19)(cid:21)

,

(cid:19)

,(65)

(66)

(cid:18)

2

n = 0 : (Ω(α)
1 : (Ω(α)

n =

−

Ωbulk)/
Ωbulk)/

A

= δ ωkinα 2,
= δ ωkin(εcore

(62)
4α + α 2).(63)

−

A
where Ωbulk is the bulk free-energy contribution Eq. (38) and

−

−

δ ωkin =

1
16

ξ0

2
Y3/2(T ),

(cid:18)

R (cid:19)

(64)

Beff(α, n) =

Φ0
2
π
R

1
R
λ

I0

n
2

α

(cid:34)

−

R
λ

(cid:18)

(cid:19)

K0

R
λ

(cid:18)

(cid:19)(cid:35)

.

(67)

(cid:0)

(cid:1)

The functional form of Eqs. (65)-(66) allows an explicit
evaluation of the free-energy contributions δ Ωkin and δ Ωmagn
in the case of no vortictity (n = 0) and δ ωkin is modiﬁed for

02468a=Fext/F0-0.036-0.034-0.032-0.030W(a)/pR2W(a)/pR2=Wbulk/pR2+dwkina2W(a)/pR2=Wbulk/pR2+dwkin(ecore-4a+a2)Bc1R = 25x0T = 0.2Tcl = ¥20

R

to the quasiclassical theory. Below T = 0.8Tc, the vortex-core
contribution for this geometry becomes less dominant and set-
tles to be less than 5% of the total free energy. Instead, the
free energy mainly depends on how well the supercurrents
originating from the phase-winding around the vortex core are
screened, i.e. focus is primarily on the ratio λ0/
. We con-
sider two cases of screening: a typical type-II superconductor
with κ = 20.0 for which the penetration depth compare to the
size of the disc, and a marginal type II superconductor with
κ = 2.0 with λ0
. In Fig. 16 we see that strong screening
(κ = 2) reduces the energy cost of a single vortex compared to
the case of moderate screening (κ = 20) so that we can extract
δ ωkinεcore(κ = 2)

0.5δ ωkinεcore(κ = 20).
In Fig. 17 we show a large set of computed free energies
as a function of applied external magnetic ﬁeld. The mag-
netic ﬁeld B = αΦ0/
ranges from α = 0 to 200 so that we
pass Bc1, where the ﬁrst vortex enters, to Bc2 where the su-
perconducting state is no longer stable and the disc becomes
normal. Starting with the ﬁrst critical ﬁeld, Bc1, we lift results
from literature.107,122 For a superconducting disc of radius
where λ0/

1 the ﬁrst critical ﬁeld is given as

(cid:28) R

R

A

≈

R ∼

FIG. 16. The vortex-core energy δ Ωcore = δ ωkinεcore, extracted as
the difference in free energy between the one-vortex and the zero-
vortex case, at zero-ﬁeld (α = 0). Here, δ Ωcore(T ) is computed with
SuperConga, and shown for the full temperature range from T
0.0
to T (cid:46) Tc. Solid and dashed line correspond to the left and right axes,
respectively, and line colors denote the penetration depth as indicated
by the label.

≈

ﬁnite λ in the following way

δ ωkin(λ ) =

k( R
λ

(cid:18)

) + b( R
λ

)
(cid:19)(cid:18)

ξ0

2
Y3/2(T ),

R (cid:19)

with

1(x) + 2
I2

1
x2
2I2

k(x) =

b(x) =

0(x)

−

x I0(x)I1(x)
2I2
0(x)
4
x I0(x)I1(x)
0(x)

2I2

I2
0(x)

,

−

I2
1(x)

.

−

Φ0

Bdisc

c1 =

A (cid:18)

ln R
c
R

+ ε0

,
(cid:19)

(71)

with ε0 due to the gradient terms. For a pancake vortex in the
extreme 2D-case with λ0/
1, the ﬁrst critical ﬁeld for a
vortex in the 2D superconducting sheet is given as57,127

R (cid:28)

Bsheet

c1 =

Φ0
4πλ 2

(cid:18)

ln κ + ε0

.
(cid:19)

(72)

The lower critical ﬁeld, Bc1, that we extract correspond well
to earlier theory if we associate the case κ = 20 to Eq. (71)
and κ = 2 to Eq. (72). Extracting from the data in Fig. 17 we
ﬁnd

(68)

(69)

(70)

In the limit that x
and b(x)
→
we should.

0, corresponding to λ

1/16
0 and we recover the prefactor δ ωkin (Eq. (64)) as

∞, k(x)

→

→

→

→

The vector potential, Eq. (65), is ﬁnite in the origin. This is
not the case for the magnetic ﬁeld, Eq. (66), which diverges as
0 in the origin32,33. This divergence leads to
ln(R) when R
that superconductivity must vanish locally in the vortex core
(see e.g. Fig. 4). The suppression of superconductivity hap-
pens over a couple of coherence lengths, and we determine
the order-parameter proﬁle using SuperConga. The functional
form of the free energy, Eqs. (62)-(63), holds also for ﬁnite
screening but with δ ωkin(λ ) and with a modiﬁed coefﬁcient
for linear-in-ﬁeld term in Eq. (63) (see also Eq. (54)). In Fig.
16 we show how the free-energy of a single vortex core, i.e.
δ ωkin(λ )εcore, depends on temperature. The penetration depth
is considered for the values κ = (2, 20, ∞) and the external
ﬁeld is zero. The temperature dependence of ξ and λ gives
that close to Tc, in the regime of validity of Ginzburg-Landau
theory, the physical size of the disc will be the smallest length-
scale of the system. In this limit the relative contribution of
the vortex core to the free energy dominates, as seen in Fig.
16. Moving to lower temperatures Ginzburg-Landau theory is
strictly speaking no longer applicable and we need to resort

Bc1(κ = 20) = 4.4

Bc1(κ = 2) = 63.3

Φ0

A
Φ0

,

= 1.62

(73)

(74)

.

Φ0
4πλ 2
0

R

R

/
R

A
c) + ε0 contains two
The numerical prefactor 4.4 = ln(
unknown parameters
c and ε0 for κ = 20. On the other hand
the prefactor in the case κ = 2, 1.62 = ln κ + ε0 contains only
one unknown and we extract ε0 = 1.62
0.93. Tak-
ing the results from Fig. 16 we can determine the nominal
0.68
c = ln
vortex-core size
R
or
c = 2.7ξ0. This value is quite reasonable estimate for a
vortex-core size if we compare with the order-parameter ﬁeld
displayed in Fig. 4 (or in the panels b-e in Fig. 17).

+2ε0(κ = 2)

c as ln

ln κ

4.4

R

R

R

≈

≈

−

−

For large external ﬁelds, the upper critical ﬁeld, Bc2, is
given by the ﬁeld scale when vortex cores start to overlap,33
i.e.

Bc2 = η

Φ0
2πξ 2
0

.

(75)

We add a prefactor, η, as in our ﬁnite geometry there is always
a vortex-free surface layer around the perimeter of the sample

00.20.40.60.81T/Tc0.00.20.40.60.81.0dWcore(T)/Wbulk(T)00.20.40.60.81T/Tc0.00000.00050.00100.0015dWcore(T)/pR2l = ¥l = 20x0l = 2x0GL-region21

and λ0 = 2ξ0

FIG. 17. (a) The free energy as a function of externally applied ﬁeld for an s-wave superconducting disc of radius 25ξ0. The temperature is set
to 0.2Tc. We consider two values for the penetration depth λ0 = 20ξ0
and follow the route from the zero-ﬁeld case
via the ﬁrst critical ﬁeld Bc1, where the ﬁrst vortex enters the disc, to the critical ﬁeld Bc2 where the (bulk) superconductivity is killed by the
magnetic ﬁeld. Black lines and symbols refer to κ = 20 while the same in indigo refer to κ = 2. The two orange dashed curves are given using
the analytical expression Eq. (68) for the two respective values of κ. The lower panels (b)–(e) show possible vortex conﬁgurations at different
ﬁelds. In panel (b) we show the four vortex states that live on the parabolas at low ﬁelds. As the ﬁeld is increased above Bc1(κ = 20) the stable
conﬁguration contain more and more vortices. Panel (c) shows that at higher ﬁelds, different vortex conﬁgurations are possible at the same
ﬁeld with very little difference in free energy between the conﬁgurations. In panel (d) we show 4 vortex conﬁgurations just above Bc1(κ = 2).
This indicates that for marginal type-II superconductors the vortex lattice is established just above Bc1. In panel (e) we show conﬁgurations for
both values of κ. The inset in panel (a) shows the extreme high-ﬁeld conﬁguration with only a surface layer having a sizable order-parameter
amplitude. It sustains a large circulating supercurrent by a phase that winds rapidly around the disc perimeter. This surface superconductivity
vanishes at an even higher ﬁeld Bc3.

(cid:28) R

∼ R

that reduces the effective vortex-lattice area. The vortex-free
ring at the perimeter of our disc has a width
5ξ0 and thus
∼
we can estimate η = (20/25)2 = 0.64. The upper critical ﬁeld
for our disc would be at α = 1
/ξ0)2 = 312.5 but we ﬁnd
2 (
R
that superconductivity vanishes at α
200. This reduction of
Bc2 captured (by construction) by the smaller effective area of
the vortex as we described above.

≈

For intermediate ﬁelds, Bc1 < B < Bc2, a vortex lattice
emerges.
In Fig. 17 we follow how the vortex lattice is
formed for the two cases, κ = 2, 20. It is a very rich system
with several local free-energy minima corresponding to dif-
ferent meta-stable conﬁgurations of vortices in the disc. For
a stronger type-II superconductor, κ = 20, the lattice struc-
ture is less pronounced and only at high ﬁelds can we see a
square lattice evolving in the center of the disk. On the route
towards higher ﬁelds one can ﬁnd transitions between states
comprising of distinct number of vortices. In the following
example below we come back to this and connect to recent
experiments.

For the marginal type-II superconductor the vortex lattice
is established quite rapidly in increasing ﬁeld above Bc1. The
vortex lattice is triangular with the outer most layer of vor-
tices creating an ever denser necklace of vortices following
the perimeter.

C. Spectroscopy on superconducting nanostructures

As we have seen above, the vortex physics in a ﬁnite ge-
ometry might be highly modiﬁed compared to a bulk system.
In particular, the number of vortices and their separation do
not only depend on the external ﬁeld strength, but also on the
geometry, the nature of boundaries, and the relation between
system size and superconducting length scales, i.e., the co-
herence length and the penetration depth. This problem has
attracted considerable interest both theoretically and experi-
mentally during the last years3,19–21,52,82–90.

Figure 18 shows the arrangement of 1–6 vortices in a ﬁnite

0102030405060708090100110120130140150160170180190200α=Φext/Φ0-0.03-0.02-0.010.00Ω(α)/πR2Bc1(κ=20)Bc1(κ=2)Bc2(~0.6 Φ0/2πξ2)𝜅=20, 𝛂=5,7,10,14𝜅=20, 𝛂=40𝜅=2, 𝛂=70𝜅=2,20, 𝛂=90𝜅=2,20, 𝛂=140b)c)d)e)a)22

tor. The screening currents are responsible for a reduction
of the superconducting gap and an increase of the density of
states. The magnetic-ﬁeld dependence of the density of states
close to the edge is shown in Fig. 18(c) for each number of a
vortex. The entrance of a vortex in the grain is accompanied
by a reduction of the density of states at zero energy. These
abrupt reduction of the local density of states are related to
the reduction in the zero-bias conductance measurements in
Ref. [52].

VI. SUMMARY

SuperConga is an open-source framework for simulating
mesoscopic superconducting grains within the quasiclassical
theory of superconductivity. Its main strengths are ease-of-
use, speed, and modularity. A Python frontend enables the
user to quickly set up simulations of multi-component sin-
glet superconducting grains, in general 2D-geometries and
in an applied magnetic ﬁeld. The framework solves for
the order parameters self-consistently, and includes the back-
coupling of the vector potential due to induced supercurrents.
Real-time visualization is provided during simulations, and
the Python frontend includes functionality for additional data
analysis and visualization, as well as interactive spectroscopy
of the local density of states.

The SuperConga framework is free to download under the
GNU LGPL v3 license or higher, from its GitLab repository77
https://gitlab.com/superconga/superconga. An extensive user
manual has been published online,74 containing numerous
pedagogical examples, tutorials and guides. The framework
has been developed and tested for Unix-based environments,
and generally runs on most modern laptops, desktops, as well
as in cluster environments. The framework relies on the high-
performance capabilities offered by GPU acceleration and
CUDA72,73, and therefore requires a CUDA-capable device
(i.e. NVIDIA GPU)128 to run. To the best of our knowl-
edge, SuperConga is the only open-source code that uses
quasiclassical theory to describe mesoscopic superconduct-
ing grains and ballistic devices. It therefore adds the missing
“mesoscopic link” between more phenomenological methods,
such as London-Maxwell129 and Ginzburg-Landau,111,130,131
and fully microscopic methods, such as density-functional
theory132–136 and tight-binding approaches.137–140

This paper outlines the functionality of version 1.0 of Su-
perConga. We foresee that the project website will evolve
continuously, and that a community of developers can be
formed to enable further improvements that increase the func-
tionality and scope of the framework.

ACKNOWLEDGMENTS

N.W-W. and P.H. have contributed equally to this work. We
thank Anton B. Vorontsov and Kevin Marc Seja for valuable
discussions. We thank the Swedish Research Council (VR)
for ﬁnancial support. The computations were enabled by re-
sources provided by the Swedish National Infrastructure for

S ∼

FIG. 18. Simulations of conventional superconductors shaped like
an irregular square, inspired by experiments in Ref. [52], with simi-
lar values of the side length
50ξ0, Ginzburg-Landau coefﬁcient
κ = 83, and temperature T = 0.1Tc. (a) Zero-energy local density of
states at the minimum of the averaged-free energy. (b) Magnetic ﬁeld
dependence of the averaged-free energy with the minimal value for
each number of vortex marked with a triangle. (c) Average density of
states as function of magnetic ﬁeld. The average is over the surface
region marked as red square in the ﬁrst panel of (a). The smearing is
δ = 0.008

2πkBTc.

·

and irregular-shaped superconducting grain, inspired by the
experiment of Timmermans et al.52 Finding the arrangement
and number of vortices for a given magnetic ﬁeld is a difﬁcult
task due to the complicated magnetic ﬁeld dependence of the
free energy. For this reason, Fig. 18(a) shows the local den-
sity of states at the minimum of the area-averaged free energy.
The magnetic ﬁeld dependence of the area-averaged free en-
ergy is shown in Fig. 18(b) for every number of a vortex. Each
vortex follows a parabolic dependence on the magnetic ﬁeld
with a minimum marked as a triangle. The theoretically ob-
tained vortex positions are in qualitative agreement with the
experiment results in Ref. [52].

The transition between different vortices entering the grain
can be visualized by measuring the zero-bias conductance
close to the edge of the grain (Fig. 2(b) in Ref. [52]).
In-
creasing the magnetic ﬁeld starting from zero, screening cur-
rents prevent the magnetic ﬁeld to penetrate the superconduc-

050y/ξ0Φext=0Φ0(a)Φext=2Φ0Φext=4Φ0Φext=5Φ0Φext=6Φ0Φext=7Φ0Φext=9Φ002N(ε=0)/2NF02468101214Φext/Φ0−0.040−0.038−0.036−0.034−0.032−0.030Ω/ΩA(b)0123456345602468101214Φext/Φ00.0280.0290.0300.0310.032¯N(ε=0)/2NF(c)Computing (SNIC) at the computing centers C3SE, HPC2N
and NSC, partially funded by the Swedish Research Council
through grant agreement no. 2018-05973.

23

Appendix A: Dependencies

This appendix lists external dependencies and packages that
SuperConga ofﬂoads functionality to. For a more detailed
description, please refer to the installation guide in the main
README of the repository.77 SuperConga uses git as a ver-
sion control system, with the central repository being hosted
on GitLab.77 The SuperConga backend is written in C++, with
most of the heavy lifting being done by CUDA72,73 kernels
and Thrust141–143 algorithms running on the GPU. This func-
tionality is provided by the CUDA toolkit, which also pro-
vides the NVCC compiler for compiling the CUDA code. Al-
ternatively, Clang can be used for compilation. To run the
compiled code, a CUDA-enabled device (an NVIDIA GPU)
is required. Note that we use CMake144 as the build-system
generator, and Ninja145 as the build system, but that it is pos-
sible to replace either of these with another choice. Linear
algebra on the CPU uses Armadillo146,147, and all tests are im-
plemented in the doctest148 framework. The real-time plotting
is done using OpenGL149,150 and ArrayFire-Forge151. The
package JsonCpp152 is used to handle JSON153 objects on the
backend side, and HighFive154 for HDF5155 support. The Su-
perConga frontend requires a Python3 environment, in partic-
ular with the modules NumPy156, Matplotlib157, h5py158 and
pandas159.

Appendix B: The simulation-parameter ﬁle

The

simulation

conﬁguration

a
is a JSON153 ﬁle,
simulation_config.json ﬁle.
which consists of a number of key-value pairs on the form
"key":value. The value of a key can be more key-value
pairs, numbers, strings, etc. Below is the JSON ﬁle with the
parameters used in the demonstration example in Section IV.

speciﬁed

is
It

in

Listing 10. examples/swave_disc_vortex/simulation_conﬁg.json.

{

"physics": {

"temperature": 0.5,
"external_ﬂux_quanta": 1.5,
"penetration_depth": 5.0,
"crystal_axes_rotation": 0.0,
"gauge": "symmetric",
"charge_sign": −1,
"order_parameter": {

"s": {

"critical_temperature": 1.0,
"initial_phase_shift": 0.0,
"initial_noise_stddev": 0.0,
"vortices": [

{

}

"center_x": 0.0,
"center_y": 0.0,
"winding_number": −1.0

]

}

}

},

24

"geometry": [

{

"disc": {

"add": true,
"center_x": 0.0,
"center_y": 0.0,
"radius": 15.0

}

}

],
"numerics": {

"convergence_criterion": 1e−05,
"energy_cutoff": 16.0,
"norm": "l2",
"num_fermi_momenta": 32,
"num_iterations_burnin": 0,
"num_iterations_max": 10000,
"num_iterations_min": 0,
"points_per_coherence_length": 20.0,
"vector_potential_error": 1e−06

},
"accelerator": {

"name": "congacc"

},
"misc": {

"data_format": "h5",
"load_path": "",
"save_frequency": −1,
"save_path": "data/examples/swave_disc_vortex",
"verbose": true,
"visualize": true

}

}

≡

max

Tc,Γ
{

Under physics are all parameters directly related to the
physics of the simulation, except the geometry which is spec-
iﬁed separately. The temperature is given in units of the
highest critical temperature of the order-parameter compo-
nents, Tc
. The external_flux_quanta is
}
given in units of Φ0. The penetration_depth is given in
units of ξ0. If the penetration depth is zero or negative it is
considered to be inﬁnite and the induced vector potential will
be zero. The crystal_axes_rotation, i.e. the rotation of
the crystal ab-axes relative to the simulation coordinate sys-
tem, is given in units of a full turn, i.e. 2π. The choices for
the gauge is either symmetric, landau or solenoid. The
sign of the carrier charge is controlled by charge_sign.

The ﬁeld order_parameter is a list of components.
y2 , dxy,
The supported order-parameter components are dx2
−
gxy(x2
y2), and s. The critical_temperature is only mean-
−
ingful with multiple components as it is the relative Tc,Γ that
is relevant. Each component is initialized as

eiχΓ(R) + Z ,
w(v)
Γ φ

R

∆Γ(R) = ∆(bulk)
Γ
χΓ(R) = 2πδΓ +∑
v
Γ) ,

(0, σ 2

Z

∼ N

(cid:16)

−

C(v)
Γ

,

(cid:17)

(B1)

(B2)

(B3)

where δΓ is controlled by initial_phase_shift, and Z is
complex additive Gaussian noise with a standard deviation σΓ
controlled by initial_noise_stddev in units of 2πkBTc.

The ﬁeld vortices is list of vortices, with each vortex being
speciﬁed by its center position, CΓ = (center_x, center_y),
and phase winding wΓ = phase_winding. Furthermore,
φ (R) = atan2(y, x) is the polar angle of the coordinate R.
We may add additional components by adding entries to the
"order_parameter" ﬁeld in the above JSON ﬁle. For ex-
ample, we may add a subdominant dxy-wave component ini-
tialized with a phase shift of π/2, some Gaussian noise, and
no vortices:

Listing 11. Example of a multi-component order parameter.

"order_parameter": {

"s": {

"critical_temperature": 1.0,
"initial_phase_shift": 0.0,
"initial_noise_stddev": 0.0,
"vortices": [

{

}

"center_x": 0.0,
"center_y": 0.0,
"winding_number": −1.0

]

},
"dxy": {

"critical_temperature": 0.1,
"initial_phase_shift": 0.25,
"initial_noise_stddev": 0.01,
"vortices": [

"center_x": 0.0,
"center_y": 0.0,
"winding_number": −1.0

{

}

]

}

}

The geometry is built of three different kinds of com-
ponents; disc, regular_polygon, and polygon. A disc
is speciﬁed by its center which is set by center_x and
center_y, and its radius. All parameters are in units of ξ0.
A regular_polygon is speciﬁed by its center coordinates
center_x and center_y, the number of edges num_edges,
its rotation, and the side_length. The side length and
center is given in units of ξ0, and the rotation in units of a
full turn, i.e. 2π. A polygon is speciﬁed by the x- and y-
coordinates of its vertices, vertices_x and vertices_y re-
spectively. The vertices should be given in counter-clockwise
order. All components has a parameter add, which determines
if the area of the component should be added (true), or sub-
tracted (false), from the geometry. For more general geome-
tries it is possible to add and subtract several objects by adding
to the geometry ﬁeld. For example, we may put a square hole
of side length 5ξ0 in the disk at 10ξ0 to the right of the center:

Listing 12. Example of a compound geometry.

"geometry": [

{

"disc": {

"add": true,

25

"center_x": 0.0,
"center_y": 0.0,
"radius": 15.0

}

},
{

"regular_polygon": {

"add": false,
"center_x": 10.0,
"center_y": 0.0,
"num_edges": 4,
"rotation": 0,
"side_length": 5.0

}
}

],

Note that the order of the components is important if any com-
ponent is subtracted.

Under numerics are parameters controlling the numer-
ics of the simulation. The convergence_criterion deter-
mines when the simulation is considered converged. When
all computed quantities; each order-parameter component, the
charge current density, the induced vector potential, and the
free energy, has a residual (as given by Eq. (27)) smaller than
convergence_criterion the simulation should stop. The
energy_cutoff is the largest energy, in units of 2πkBTc, to
include in the energy sums. The p-norm to use when comput-
ing the residuals is controlled by norm, with p
. The
1, 2, ∞
}
num_fermi_momenta is the number of discrete momenta to
pF .
use when approximating the Fermi-surface averages
. . .
(cid:105)
(cid:104)
Note that the terms in the Fermi-surface averages are com-
puted sequentially in contrast to the terms in the energy sum
which are computed in parallel on the GPU.

∈ {

The ﬁeld num_iterations_burnin controls the number
of iterations during which the order-parameter and vector po-
tential are kept constant, while the coherence functions are
converged and updated self-consistently, in particular on the
γ∂ D and ˜γ∂ D. Once the burn-in period is
boundary, i.e.
over, all quantities are updated self-consistently again. This
is particularly useful when resuming a previous simulation
from ﬁle, since the order parameter and vector potentials
are stored, but the coherence functions are not (due to oc-
If the number of burn-in
cupying too much disk space).
iterations is negative,
it will run until convergence. The
maximum and minimum of iterations to run is controlled
by num_iterations_max and num_iterations_min, re-
spectively. When num_iterations_max iterations has
been run the simulation stops regardless of whether con-
vergence has been achieved.
the simulation
does not stop until num_iterations_min iterations has
been run even if the simulation is considered converged.
This is useful for avoiding endless simulations, or prema-
turely stopping a simulation that is moving slowly on a
plateau, respectively. The spatial resolution of the sim-
ulation is set by points_per_coherence_length. The
vector_potential_error is explained in App. D.

Similarily,

All parameters of the accelerator are explained in App. E.
Lastly, under misc are miscellaneous parameters not affect-
ing the simulation per se. data_format speciﬁes which data

format to use when saving ﬁles. The options are h5 and csv
yielding compressed HDF5155 ﬁles or plain-text CSV ﬁles,
respectively. Both data formats are standard and have excel-
lent support in e.g. MATLAB160 and Python (via h5py158
and pandas159). By setting load_path SuperConga will read
the ﬁles located there and use them as the initial values for
the order parameter and the vector potential. How often
to save the results are controlled by save_frequency.
If
save_frequency is negative the results will only be saved
at the end of the simulation, and if it is zero the results will
not be saved at all, otherwise it will save every nth iteration.
The results are saved to save_path. If verbose is true the
progress of the simulation will be written to the terminal, and
if visualize is true the simulation will be visualized live.

Appendix C: Solving the Riccati equations

Using the trajectory coordinate, s, Eq. (25) in standard form

is

∂ γ
∂ s

= f (s, γ(s)) ,

(C1)

f (s, γ(s)) =

i
vF

∆∗(s)γ 2(s) + 2z(s)γ(s) + ∆(s)

,

(C2)

(cid:2)
with the dependence on pF and ε dropped, and

(cid:3)

z(s)

ε + e

c vF ·

≡

A(s) ,

(C3)

for brevity. Instead of using the stepping method,67,161 i.e. us-
ing an analytical formula for γ(s) but approximating ∆(s) and
z(s) as piecewise constant, we solve Eq. (C1) along a trajec-
tory using the implicit mid-point method, which we ﬁnd to be
both faster and more accurate. The implicit mid-point method
has the following update rule,

γ j+1 = γ j + h f

s j+ 1

2

(cid:18)

,

1
2

γ j + γ j+1

,

(C4)

(cid:0)

(cid:19)
(cid:1)

26

with the discretized trajectory coordinate s j = jh, where j is
an integer and h is the length between points. This yields a
quadratic equation in γ j+1 to solve for each step along the
trajectory;

j+1 + c1γ j+1 + c0 ,

0 = c2γ 2
ih
4vF

c2 =

c1 = 2c2γ j +

,

∆∗j+ 1
2
ih
vF

1 ,

z j+ 1
2 −
c2γ j + 2) γ j

4c∗2 ,

−

c0 = (c1

−

with the solution

(C5)

(C6)

(C7)

(C8)

γ j+1 =

2c0

.

(C9)

2

2

c1 +

4c2c0

−
(cid:113)
and z j+ 1

c2
1 −
Half-step values, ∆ j+ 1
, are calculated by linear in-
terpolation. Nearest-neighbour extrapolation is used at the
boundary. If we have γ(s j) at one point we obtain γ(s j+1) via
Eq. (C9). The solution along the whole trajectory is obtained
by starting with the initial boundary value γ(s0 = Rmin) and
stepping along the trajectory to obtain γ(s j) with j > 0. The
stepping proceeds until a second boundary is reached (denoted
Rmax, see Fig 1). We compute ˜γ(s) by solving Eq. (26) in
the same manner, but stepping in the opposite direction from
Rmax to Rmin.

Appendix D: Computing the vector potential

The induced vector potential is obtained by solving Eq. (7),
in the Coloumb gauge, using the Green’s function of the 2D
Laplacian operator. The current is computed on a N
N grid,
with every grid cell having the area h2. We treat the current
as being piecewise constant within each grid cell. With our
choice of units, this yields

×

Aind

m,n =

1
κ 2

−

Gm,n =

1
4π

N
1
−
∑
m(cid:48)=0
+ 1
2 h

G

N
1
−
∑
n(cid:48)=0
+ 1
2 h

m
m(cid:48)−
|

ln

jm(cid:48)n(cid:48)

,

|

n
n(cid:48)−
,
|
|
(x(cid:48) + hm)2 + (y(cid:48) + hn)2
ξ 2
0

1

1
2 h

(cid:90)

(cid:32)

2 h (cid:90)
−
−
2
h
ξ0 (cid:19)
Γ(m, n) = α(m, n) + β (m, n) + β (n, m) ,

h
ξ0 (cid:19)

1
4π

2 ln

(cid:32)

−

=

(cid:18)

(cid:18)

ln (2)

dx(cid:48)dy(cid:48)

(cid:33)

3 +

−

1
4 ∑

a=

±

∑
b=
±

Γ(am, bn)

(cid:33)

,

α(m, n) = (1 + 2m) (1 + 2n) ln

[1 + 2m]2 +

[1 + 2n]2

(cid:18)
2m2 + 2n2 + 4n + 1

β (m, n) =

−
(cid:0)

1
2
1 + 2m
1 + 2n

.

(cid:19)

1
tan−

(cid:18)

1
2

(cid:1)

,

(cid:19)

(D1)

(D2)

(D3)

(D4)

(D5)

(D6)

G is a normal matrix, so it can be eigendecomposed as

G = V ΛV (cid:62), where V is a unitary matrix with (normalized)

eigenvectors as its columns, and Λ is a diagonal matrix with
the eigenvalues as diagonal elements. Equivalently,

Gm,n =

N
1
−
∑
k=0

λkV (k)

m V (k)
n

,

(D7)

where V (k)
λk. Thus

m is the eigenvector corresponding to the eigenvalue

Aind

m,n =

1
κ 2

−

N
1
−
∑
k=0

N
1
−
∑
m(cid:48)=0

N
1
−
∑
n(cid:48)=0

λkV (k)
m
m(cid:48)−
|

V (k)
n
n(cid:48)−
|
|
|

jm(cid:48)n(cid:48)

,

(D8)

and the cross-correlation with the eigenvectors can be
done separately.
The eigendecomposition is done with
Armadillo146,147. In order to increase performance only N∗
eigenvalues are kept. It is computed as the smallest integer
obeying

27

internal parameters of the accelerator will be set to default
values. The user can change the internal parameters by speci-
fying them in the conﬁguration ﬁle, or via the CLI.

In the following discussion of the different accelerators, it
is convenient to deﬁne the difference between the right- and
left-hand sides of Eq. (E2),

d

≡

g(x)

x ,

−

(E4)

which enters in all accelerator methods.

1. Picard

The simplest way of solving Eq. (E2) is by using Picard

iterations,

1
(cid:115)

−

∑N∗−
1
n=0 λ 2
n
∑N
1
n=0 λ 2
−
n

< ε ,

(D9)

xi+1 = xi + αdi ,

(E5)

with the eigenvalues sorted
, and
λ0
|
|
ε > 0 being a tolerance chosen by the user via the parame-
ter vector_potential_error in the conﬁguration ﬁle. If
ε = 0 no eigendecomposition is done, and the current density
is cross-correlated with the full 2D Green’s function.

| ≥ |

≥ |

| ≥

1
−

λN

λ1

...

Lastly, the mean of the charge-current density is in gen-
eral not zero due to numerical errors or bad initialization.
This has the undesired effect of introducing a constant term
in the induced vector potential, which gives rise to an over-
all phase gradient through the grain and an associated current.
For small penetration depths, this can prevent the simulation
from converging.
In order to remedy this, the mean of the
charge-current density is subtracted before solving Eq. (7).

where α > 0 is the the step size. Picard iterations can converge
very slowly, or not at all. Hence, the need for a method accel-
erating the iterations, and preferably stabilizing them. Calling
the Picard method an accelerator is a misnomer as it is the
baseline. The other methods should improve on this method.
How to use this accelerator is shown in Listing 13.

Listing 13. Picard accelerator with default values.

"accelerator": {

"name": "picard",
"step_size": 1.0

}

Appendix E: Convergence accelerators

2. Polyak

SuperConga solves Eqs. (20) and (7) self-consistently. With

our choice of units, the solution to Eq. (7) is given by

κ 2Aind(R) =

−

(cid:90)A

dR(cid:48) G(R, R(cid:48))j(R(cid:48)) ,

(E1)

in the Coloumb gauge, where G(R, R(cid:48)) is the Green’s func-
tion of the 2D Laplacian.
In order to simplify the notation
we concatenate the left- and right-hand sides of Eqs. (20) and
(E1), yielding

In Polyak’s method, x behaves similarly to the position of a
particle moving through a viscous ﬂuid, with a low Reynold’s
number, and a potential ﬁeld (Eq. (E4) taking the role of the
negative potential gradient),

vi+1 = (1
xi+1 = xi + vi+1 ,

−

β )vi + αdi ,

(E6)
(E7)

(E2)

(E3)

, κ 2Aind
y

(cid:62) .

where β
(0, 1) is the drag, and α > 0 is the step size. The
velocity is initialized to zero, v0 = 0. How to use this acceler-
ator is shown in Listing 14.

∈

x = g(x) ,

x

≡

Re [∆Γ1] , Im [∆Γ1] , . . . , κ 2Aind
x
(cid:16)

(cid:17)

Note that the vector potential is scaled by κ 2 in order to have
similar magnitudes of all elements in x. SuperConga provides
several different methods of solving Eq. (E2). Namely, basic
Picard iterations, Polyak’s75 "small heavy sphere", a variant
of the Barzilai-Borwein method76, and a custom method. The
user controls which method to use by setting the name in the
accelerator in Listing. 10. By only setting the name, all

Listing 14. Polyak accelerator with default values.

"accelerator": {

"name": "polyak",
"step_size": 2.0,
"drag": 0.5

}

28

The reasoning is that if mi,c and di,c roughly point in the
same direction, then we should have taken a larger step the
previous iteration, and thus the step size is increased. Anal-
ogously, if they roughly point in opposite directions, the step
size should decrease.

How to use this accelerator is shown in Listing 16.

Listing 16. CongAcc accelerator with default values.

"accelerator": {

"name": "congacc",
"step_size": 0.5,
"step_size_factor": 1.234,
"cos_similarity_min": 0.7,
"step_size_max": 100.0,
"step_size_min": 0.001

}

This accelerator should be regarded as experimental as no

thorough analysis of it has been done.

5. Comparing the accelerators

Table I shows the number of iterations needed to reach con-
vergence in all the examples, (a)–(g), for each of the different
accelerators available in SuperConga (using default parame-
ters). The examples (a)–(c) are fairly easy as even Picard itera-
tions converge quickly. It is examples (d)–(g) that really show
the strength of the more advanced methods. In (d) Polyak, BB
7 compared
and CongAcc provide roughly a speedup of 3
to Picard. Both Picard and Polyak fail to converge in example
(f) and (g). This is due to the small penetration depth in those
examples, making the default step sizes too large. They can
be made to converge by manually changing their parameters,
however. The adaptive methods, BB and CongAcc, have no
problem with bad initial step sizes; they will quickly adjust
the step size to something appropriate.

∼

Listing 17 shows how to run one of the available ex-
amples with a speciﬁc accelerator, where <example> and
<accelerator> should be replaced with the example and ac-
celerator names, respectively.

Listing 17. Running an examples with one of the accelerators.

python superconga.py simulate -C examples/<example>

-A <accelerator>

Appendix F: Units and basis functions

We summarize in Table II our choice of units and the re-
sulting natural scales for observables and other quantities. The
available order parameter basis functions are listed in Table III

3. Barzilai-Borwein

The Barzilai-Borwein (BB) method76 is similar to the Pi-

card method but with an adaptive step size,

sBB1
i =

di
|
di
sBB2
i = |

−

1)
|
1)
|

2
di
1
2
(cid:107)
(cid:107)
−
di
(di
1
−
·
−
(di
di
1
−
·
−
di
di
−
(cid:107)
sBB1
i
sBB2
i

−
2
1
2
(cid:107)
−
if i odd
if i even

,

,

,

(E8)

(E9)

(E10)

(E11)

αi+1 = αi

·
xi+1 = xi + αi+1di ,

(cid:26)

where sBB1 and sBB2 are two different variants of how to scale
the step size. Note that we force the step size to be positive.
Alternating between the variants gives better performance on
the examples provided by SuperConga than using either one
of them on its own. What step size to use during the ﬁrst
iteration is a free parameter and can be set by the user. How
to use this accelerator is shown in Listing 15.

Listing 15. Barzilai-Borwein accelerator with default values.

"accelerator": {

"name": "barzilai−borwein",
"step_size": 1.0,
"step_size_max": 100.0,
"step_size_min": 0.001

}

4. CongAcc

CongAcc, short for (Super)Conga Accelerator, is our cus-
tom made accelerator. Introducing the component index, c,
where a component is either the real or imaginary part of a
order-parameter component, or the x- or y-component of the
induced vector potential, in Eq. (E3), the update rule is as fol-
lows,

si,c = SC(mi,c, di,c) ,

αi+1,c = αi,cksi,c ,

wi+1,c =

smin
≥
otherwise

wi,c if si,c
w∗
mi+1,c = wi+1,cmi,c + (1
xi+1,c = xi,c + αi+1,cmi+1,c ,

−

(cid:26)

,

wi+1,c)di,c ,

(E12)
(E13)

(E14)

(E15)
(E16)

where SC is the cosine similarity, mi,c is an exponential mov-
ing average of the component difference di,c, and k is a con-
stant determining how much the step size should maximally
increase (decrease) which can be set by the user. If si,c < smin,
where smin is the minimum tolerated similarity, the weight w∗
is obtained by solving

SC(w∗mi,c + (1

−

w∗)di,c, di,c) = smin

(E17)

ensuring that the step will be similar to di,c. Equation (E17)
is solved approximately using the bisection method. Note that
we set w0,c = 0 during the ﬁrst iteration.

SuperConga examples and accelerator comparison

29

Symmetry

T /Tc Φ/Φ0 κ
Name
0
0.5
(a)
dwave_chiral
0
0.5
(b)
dwave_octagon
0
0.5
(c)
dwave_plus_swave
0.1a
0
(d)
dwave_phase_crystal
20
(e) swave_abrikosov_lattice 0.2
0.5
0.5
(f)
swave_disc_meissner
1.5
0.5
(g)
swave_disc_vortex

∞ dxy + idx2
dx2
∞
y2
−
dxy + s
∞
dx2
100
−
s
10
s
5
s
5

y2

y2

−

Initialization
Bulk
Bulk
Bulk
Bulk + vortexb

Bulk + giant vortexd Square:
Disc:
Disc:

Bulk
Bulk + vortexe

Geometry

Picard Polyak BB CongAcc

R

= 12.5ξ0
Disc:
R
= 10ξ0
Octagon:
S
Disc:
= 12.5ξ0
Irregular polygonc
= 25ξ0
S
= 15ξ0
R
= 15ξ0
R

80
71
69
3027
1001
F
F

34
33
36
809
313
F
F

25
25
30
1054
211
20
45

37
32
33
439
133
43
42

a The temperature is low, T < T ∗, so the solution is a phase crystal.54,55
b The vortex has a phase winding n =
c The shape of the grain is a square, S = 25ξ0, with one corner removed, yielding four [100]-interfaces, and one pair-breaking [110]-interface.58
d The giant vortex in the middle has a phase winding n =
e The vortex in the middle has a phase winding n =

1 and is positioned outside of the grain, yielding a soft phase-gradient through the grain.

13. It is unstable and decays into a lattice of singly-quantized Abrikosov vortices.

−

−

1
−

TABLE I. How many iterations each accelerator, with default parameters, require in order to reach convergence on the examples provided with
SuperConga. An F means that it did not converge during the 104 iterations the simulation was run. The convergence criterion is set to 10−
5
for all examples. In the geometry column, a radius is denoted

, and a polygon side length

.

R

S

Input to quasiclassical theory

Fermi velocity

normal-state density of states per spin at the Fermi level

superconducting transition temperature (critical temperature)

total superconducting computational areaa

Geometry

= Nld

A

volume of a stack of Nl layers with interlayer distance d

Natural units

temperature in units of critical temperature

vF

NF

Tc

A

V

Tc

2πkBTc

energy in units of critical temperature

= ¯hvF
2πkBTc

ξ0
Φ0 = hc
e
2
|

length in units of superconducting coherence length

magnetic ﬂux in units of superconducting ﬂux quantum

|

Derived units and observables

λ0

κ

α

= 4πe2

c2 NFv2

F

1
λ 2
0
= λ0
ξ0
= BextA
Φ0

penetration depth. Here we use Gaussian units. In SI units 4π/c2

µ0 with µ0

4π

×

≈

→

10−

7J/A2m

penetration depth in units of coherence length

symmetric gauge: external magnetic ﬂux penetrating the superconducting computational area in units of the ﬂux quantum

solenoid gauge: external magnetic ﬂux penetrating a circular hole centered at origo in units of the ﬂux quantum

A0 = Φ0
πξ0
B0 = Φ0
πξ 2
0
= 2πkBTc

j0

vector potential

magnetic ﬂux density

vFNF charge-current density
e
|
|

m0 = j0ξ0
ΩA = (2πkBTc)2NF

V

magnetic moment

free energy

A

a We use calligraphic capital letters for quantities related to geometry, such as area A or disc radius R.

TABLE II. Natural units and scales for observables used in this paper and in the framework SuperConga. We use the convention e =
the charge of the electron, but allow for simulations with either positive or negative charge carriers. Often, we let ¯h = kB = c = 1.

for

e
|
−|

30

Symmetry class for D4h Order parameter ∆(k) Basis function η(ϕ) for circular Fermi surface

Order-parameter basis functions

A1g (s)

A2g (gxy(x2
B1g (dx2

y2))
−
y2 )

−
B2g (dxy)

k2
y )

1
kxky(k2
k2
x −
kxky

x −
k2
y

1

√2 sin(4ϕ)

√2 cos(2ϕ)

√2 sin(2ϕ)

TABLE III. The available symmetries of the order parameter that can be chosen in SuperConga. Note that any linear combination forming a
multi-component order parameter is also allowed.

1C. C. Tsuei and J. R. Kirtley, “Pairing symmetry in cuprate superconduc-
tors,” Rev. Mod. Phys. 72, 969–1016 (2000).
2J. R. Kirtley, C. Tsuei, C. Ariando, S. Harkema, and H. Hilgenkamp,
“Angle-resolved phase-sensitive determination of the in-plane gap sym-
metry in yba2cu3o7-δ ,” Nature Physics 2, 190 – 194 (2005).
3N. Kokubo, S. Okayasu, A. Kanda, and B. Shinozaki, “Scanning squid
microscope study of vortex polygons and shells in weak-pinning disks of
an amorphous superconducting ﬁlm,” Phys. Rev. B 82, 014501 (2010).
4J. A. Bert, B. Kalisky, C. Bell, M. Kim, Y. Hikita, H. Y. Hwang, and
K. A. Moler, “Direct imaging of the coexistence of ferromagnetism and
superconductivity at the LaAlO3/SrTiO3 interface,” Nature Physics 7, 1 –
5 (2011).
5D. Vasyukov, Y. Anahory, L. Embon, D. Halbertal, J. Cuppens, L. Neeman,
A. Finkler, Y. Segev, Y. Myasoedov, M. L. Rappaport, M. E. Huber, and
E. Zeldov, “A scanning superconducting quantum interference device with
single electron spin sensitivity,” Nature Nanotechnology 8, 1 – 6 (2013).
6H. Hess, R. Robinson, R. Dynes, J. M. J. Valles, and J. V. Waszczak,
“Scanning-Tunneling-Microscope observation of the Abrikosov ﬂux lat-
tice and the density of states near and inside a ﬂuxoid.” (1989).
7C. Renner, A. D. Kent, P. Niedermann, Ø. Fischer, and F. Lévy, “Scanning
tunneling spectroscopy of a vortex core from the clean to the dirty limit,”
Physical Review Letters 67, 1650–1652 (1991).
8I. Maggio-Aprile, C. Renner, A. Erb, E. Walker, and O. Fischer, “Di-
rect Vortex Lattice Imaging and Tunneling Spectroscopy of Flux Lines on
δ ,” Phys. Rev. Lett. 75, 2754–2757 (1995).
YBa2Cu3O7
−
9A. Yazdani, B. Jones, C. Lutz, M. F. Crommie, and D. M. Eigler, “Probing
the Local Effects of Magnetic Impurities on Superconductivity,” Science
275, 1767 – 1770 (1997).

10S. Pan, E. Hudson, A. Gupta, K. Ng, H. Eisaki, S. Uchida,

and
J. Davis, “STM Studies of the Electronic Structure of Vortex Cores in
Bi2Sr2CaCu2O8+δ ,” Phys. Rev. Lett. 85, 1536 – 1539 (2000).

11S. Pan, E. Hudson, K. Lang, H. Eisaki, S. Uchida, and J. Davis, “Imag-
ing the effects of individual zinc impurity atoms on superconductivity in
Bi2Sr2CaCu2O8+δ ,” Nature 403, 746 – 750 (2000).

12J. E. Hoffman, K. McElroy, D.-H. Lee, K. M. Lang, H. Eisaki,
S. Uchida,
and J. C. Davis, “Imaging Quasiparticle Interference in
Bi2Sr2CaCu2O8+δ ,” Science 297, 1148–1151 (2002), cond-mat/0209276.
13I. Guillamón, H. Suderow, S. Vieira, L. Cario, P. Diener, and P. Rodière,
“Superconducting Density of States and Vortex Cores of 2H-NbS2,” Phys-
ical Review Letters 101, 166407 (2008), 0807.1809.

14D. Roditchev, C. Brun, L. Serrier-Garcia, J. C. Cuevas, V. H. L. Bessa,
M. V. Miloševi´c, F. Debontridder, V. Stolyarov, and T. Cren, “Direct ob-
servation of Josephson vortex cores,” Nature Physics 11, 332 – 337 (2015).
15C. Berthod, I. Maggio-Aprile, J. Bruér, A. Erb, and C. Renner, “Obser-
vation of Caroli–de Gennes–Matricon Vortex States in YBa2Cu3O7
δ ,”
−
Phys. Rev. Lett. 119, 237001 (2017).

16C. A. Bolle, V. Aksyuk, F. Pardo, P. L. Gammel, E. Zeldov, E. Bucher,
R. Boie, D. J. Bishop, and D. R. Nelson, “Observation of mesoscopic vor-
tex physics using micromechanical oscillators,” Nature 399, 43–46 (1999).
17A. C. Bleszynski-Jayich, W. E. Shanks, B. Peaudecerf, E. Ginossar, F. v.
Oppen, L. Glazman, and J. G. E. Harris, “Persistent Currents in Normal
Metal Rings,” Science 326, 272–275 (2009).

18J. Jang, D. G. Ferguson, V. Vakaryuk, R. Budakian, S. B. Chung, P. M.
and Y. Maeno, “Observation of Half-Height Magnetization

Goldbart,
Steps in Sr2RuO4,” Science 331, 186 – 188 (2011).

19A. K. Geim, I. V. Grigorieva, S. V. Dubonos, J. G. S. Lok, J. C. Maan,
A. E. Filippov, and F. M. Peeters, “Phase transitions in individual sub-
micrometre superconductors,” Nature 390, 259–262 (1997).

20M. Morelle, J. Bekaert, and V. V. Moshchalkov, “Inﬂuence of sample ge-
ometry on vortex matter in superconducting microstructures,” Phys. Rev.
B 70, 094503 (2004).

21I. V. Grigorieva, W. Escofﬁer, J. Richardson, L. Y. Vinnikov, S. Dubonos,
and V. Oboznov, “Direct observation of vortex shells and magic numbers
in mesoscopic superconducting disks,” Phys. Rev. Lett. 96, 077005 (2006).
and S. J. Bending, “A scan-
ning hall probe microscope for high resolution magnetic imaging down
to 300 mk,” Review of Scientiﬁc Instruments 79, 123708 (2008),
https://doi.org/10.1063/1.3046285.

22V. V. Khotkevych, M. V. Miloševi´c,

23P. J. Curran, S. J. Bending, W. M. Desoky, A. S. Gibbs, S. L. Lee, and A. P.
Mackenzie, “Search for spontaneous edge currents and vortex imaging in

31

sr2Ruo4 mesostructures,” Phys. Rev. B 89, 144504 (2014).

24J.-Y. Ge, V. N. Gladilin, J. Tempere, V. S. Zharinov, J. V. d. Vondel, J. T.
Devreese, and V. V. Moshchalkov, “Direct visualization of vortex ice in a
nanostructured superconductor,” Phys Rev B 96, 134515 – 7 (2017).

25M. T. Tuominen, J. M. Hergenrother, T. S. Tighe, and M. Tinkham, “Ex-
perimental evidence for parity-based 2e periodicity in a superconducting
single-electron tunneling transistor,” 69, 1997 – 2000 (1992).

26P. Lafarge, P. Joyez, D. Esteve, C. Urbina, and M. H. Devoret, “Measure-
ment of the even-odd free-energy difference of an isolated superconduc-
tor,” Phys. Rev. Lett. 70, 994–997 (1993).

27D. C. Ralph, C. T. Black, and M. Tinkham, “Spectroscopic Measurements
of Discrete Electronic States in Single Metal Particles,” Physical Review
Letters 74, 3241–3244 (1995).

28S. E. Kubatkin, A. Y. Tzalenchuk, Z. G. Ivanov, P. Delsing, R. I. Shekhter,
and T. Claeson, “Coulomb blockade electrometer with a high-Tc island,”
JETP Letters 63, 126–132 (1996).

29D. Gustafsson, D. Golubev, M. Fogelström, T. Claeson, S. Kubatkin,
and F. Lombardi, “Fully gapped superconductivity in a
δ island enhanced by a magnetic ﬁeld,” Na-
−

T. Bauch,
nanometre-size YBa2Cu3O7
ture Nanotechnology 8, 25 – 30 (2013).

30J. Bardeen, L. N. Cooper, and J. R. Schrieffer, “Theory of Superconduc-

tivity,” Phys. Rev. 108, 1175–1204.

31J. R. Schrieffer, Theory of Superconductivity, Advanced Book Classics

(Perseus Books, Reading, Massachusetts, USA, 1999).

32P. G. de Gennes, Superconductivity of Metals and Alloys, Advanced Book
Classics (Addison-Wesley Publishing Company, Reading, Massachusetts,
USA, 1989).

33M. Tinkham, Introduction to Superconductivity: Second Edition, Dover

Books on Physics (Dover Publications, 2004).

34V. P. Mineev and K. V. Samokhin, Introduction to Unconventional Super-
conductivity (Gordon and Breach Science Publishers, Amsterdam, 1999).
35J. Serene and D. Rainer, “The quasiclassical approach to superﬂuid 3He,”

Physics Reports 101, 221 – 311 (1983).

36G. Eilenberger, “Transformation of Gorkov’s equation for type II super-
conductors into transport-like equations,” Zeitschrift für Physik A Hadrons
and Nuclei 214, 195–213 (1968).

37A. I. Larkin and Y. N. Ovchinnikov, “Quasiclassical method in the theory
of superconductivity,” Zh. Eksp. Teor. Fiz. 55, 2262 (1968), [Sov. Phys.
JETP 28, 1200 (1969)].

38G. M. Eliashberg, “Inelastic electron collisions and nonequilibrium sta-
tionary states in superconductors,” Zh. Eksp. Teor. Fiz. 61, 1254 (1971),
[Sov. Phys. JETP 34, 668 (1972)].

39A. A. Abrikosov, L. P. Gorkov, and I. E. Dzyaloshinski, Methods of quan-
tum ﬁeld theory in statistical physics (Dover Publications, Inc., New York,
1975).

40D. Rainer and J. A. Sauls, “Strong-coupling theory of superconductiv-
ity,” in Superconductivity: From Basic Physics to the Latest Developments
(WORLD SCIENTIFIC) pp. 45–78.

41N. Kopnin, Theory of Nonequilibrium Superconductivity (Clarendon Press,

Oxford, 2001).

42K. M. Seja and T. Lofwander, “A ﬁnite element method for the quasiclas-

sical theory of superconductivity,” (2022).

43A. A. Andreev, “The thermal conductivity of the intermediate state in su-
perconductors,” Zh. Eksp. Teor. Fiz. 46, 1823 (1964), [Engl. Transl. 1964
Sov. Phys. JETP 19, 1228].

44A. Shelankov and M. Ozana, “Quasiclassical theory of superconductivity:

A multiple-interface geometry,” Phys. Rev. B 61, 7077–7100.

45K. D. Usadel, “Generalized Diffusion Equation for Superconducting Al-

loys,” Phys. Rev. Lett. 25, 507–509 (1970).

46J. A. X. Alexander, T. P. Orlando, D. Rainer, and P. M. Tedrow, “Theory of
fermi-liquid effects in high-ﬁeld tunneling,” Phys. Rev. B 31, 5811–5825
(1985).

47W. Belzig, F. K. Wilhelm, C. Bruder, G. Schön, and A. D. Zaikin, “Quasi-
classical green’s function approach to mesoscopic superconductivity,” Su-
perlattices and Microstructures 25, 1251–1288 (1999).

48F. S. Bergeret, M. Silaev, P. Virtanen, and T. T. Heikkilä, “Colloquium:
Nonequilibrium effects in superconductors with a spin-splitting ﬁeld,” Rev.
Mod. Phys. 90, 041001 (2018).

49J. A. Sauls,

plications

“Theory of disordered superconductors with ap-
response,” Progress of Theoret-

current

to nonlinear

and Experimental

ical
tac034,
033I03,
pdf/2022/3/033I03/43152929/ptac034.pdf.

Physics

2022

10.1093/ptep/p-
https://academic.oup.com/ptep/article-

(2022),

50Y. V. Nazarov, “Novel circuit theory of andreev reﬂection,” Superlattices

and Microstructures 25, 1221–1231 (1999).

51M. Amundsen and J. Linder, “General solution of 2d and 3d supercon-
ducting quasiclassical systems: coalescing vortices and nanoisland geome-
tries,” Scientiﬁc Reports 6, 22765 (2016).

52M. Timmermans, L. Serrier-Garcia, M. Perini, J. Van de Vondel, and V. V.
Moshchalkov, “Direct observation of condensate and vortex conﬁnement
in nanostructured superconductors,” Phys. Rev. B 93, 054514 (2016).
53A. B. Vorontsov and J. Sauls, “Thermodynamic properties of thin ﬁlms of

superﬂuid 3He-A,” 68, 064508 (2003).

54M. Håkansson, T. Löfwander, and M. Fogelström, “Spontaneously bro-
ken time-reversal symmetry in high-temperature superconductors,” Nature
Physics 11, 755 (2015).

55P. Holmvall, M. Fogelström, T. Löfwander, and A. B. Vorontsov, “Phase

crystals,” Phys. Rev. Research 2, 013104 (2020).

56S. Yip and A. Garg, “Superconducting states of reduced symmetry: Gen-
eral order parameters and physical implications,” Phys. Rev. B 48, 3304–
3308 (1993).

57M. Graf, D. Rainer, and J. Sauls, “Coupled two-dimensional Fermi liquids
as a model for layered superconductors: Basic equations and elementary
results.” Physical Review B (Condensed Matter) 47, 12089–12098 (1993).
58N. W. Wennerdal, A. Ask, P. Holmvall, T. Löfwander, and M. Fogelström,
“Breaking time-reversal and translational symmetry at edges of d-wave
superconductors: Microscopic theory and comparison with quasiclassical
theory,” Phys. Rev. Research 2, 043198 (2020).

59M. Eschrig, “Distribution functions in nonequilibrium theory of supercon-
ductivity and andreev spectroscopy in unconventional superconductors,”
Phys. Rev. B 61, 9061–9076 (2000).

60J. M. Luttinger and J. C. Ward, “Ground-State Energy of a Many-Fermion

System. II,” Physical Review 118, 1417–1427 (1960).

61E. V. Thuneberg, J. Kurkijärvi, and D. Rainer, “Elementary-ﬂux-pinning
potential in type-ii superconductors,” Phys. Rev. B 29, 3913–3923 (1984).
62A. V. Zaitsev, “Quasiclassical equation of the theory of superconductivity
for contiguous metals and the properties of constricted microstructures,”
Zh. Eksp. Teor. Fiz. 86, 1742 (1984).

63G. Kieselmann, “Self-consistent calculations of the pair potential and the
tunneling density of states in proximity contacts,” Phys. Rev. B 35, 6762–
6770.

64A. Millis, D. Rainer, and J. A. Sauls, “Quasiclassical theory of super-
conductivity near magnetically active interfaces,” Phys. Rev. B 38, 4504–
4515.

65M. Fogelström, “Josephson currents through spin-active interfaces,” 62,

11812–11819.

66E. Zhao, T. Löfwander, and J. A. Sauls, “Nonequilibrium superconductiv-

ity near spin-active interfaces,” Phys. Rev. B 70, 134510.

67M. Eschrig, “Scattering problem in nonequilibrium quasiclassical theory
of metals and superconductors: General boundary conditions and applica-
tions,” Phys Rev B 80, 134511 (2009).

68Y. Nagato, K. Nagai, and J. Hara, “Theory of the Andreev reﬂection and
the density of states in proximity contact normal-superconducting inﬁnite
double-layer,” Journal of Low Temperature Physics 93, 33–56 (1993).
69N. Schopohl and K. Maki, “Quasiparticle spectrum around a vortex line in

a d-wave superconductor,” Phys. Rev. B 52, 490–493 (1995).

70N. Schopohl, “Transformation of the eilenberger equations of supercon-

ductivity to a scalar riccati equation,” cond-mat/9804064.

71T. Ozaki, “Continued fraction representation of the fermi-dirac function
for large-scale electronic structure calculations,” Phys. Rev. B 75, 035123
(2007).

72NVIDIA Corporation, “NVIDIA CUDA C programming guide,” (2021),

version 11.2.0.

73J. Nickolls, I. Buck, M. Garland, and K. Skadron, “Scalable parallel pro-

gramming with cuda,” Queue 6, 40–53 (2008).

74SuperConga team, “SuperConga Online Documentation and User Man-
ual,” https://superconga.gitlab.io/superconga-doc/ (2022).
75B. Polyak, “Some methods of speeding up the convergence of iteration
methods,” USSR Computational Mathematics and Mathematical Physics
4, 1–17 (1964).

32

76J. Barzilai and J. M. Borrwein, “Two-Point Step Size Gradi-
ent Methods,” IMA Journal of Numerical Analysis 8, 141–148
(1988), https://academic.oup.com/imajna/article-pdf/8/1/141/2402762/8-
1-141.pdf.

77SuperConga team, “SuperConga GitLab repository,” https://gitlab.

com/superconga/superconga (2022).

78P. Holmvall, A. B. Vorontsov, M. Fogelström, and T. Löfwander, “Spon-
taneous symmetry breaking at surfaces of d-wave superconductors: In-
ﬂuence of geometry and surface ruggedness,” Phys. Rev. B 99, 184511
(2019).

79C. Caroli, P. De Gennes, and J. Matricon, “Bound fermion states on a
vortex line in a type ii superconductor,” Physics Letters 9, 307–309 (1964).
and R. Wiesendanger,
“Anisotropic non-split zero-energy vortex bound states in a conventional
superconductor,” (2021), arXiv:2105.01354 [cond-mat.supr-con].

80H. Kim, Y. Nagai, L. Rózsa, D. Schreyer,

81C. P. Bean and J. D. Livingston, “Surface barrier in type-ii superconduc-

tors,” Phys. Rev. Lett. 12, 14–16 (1964).

82H. J. Zhao, V. R. Misko, F. M. Peeters, V. Oboznov, S. V. Dubonos, and
I. V. Grigorieva, “Vortex states in mesoscopic superconducting squares:
Formation of vortex shells,” Phys. Rev. B 78, 104517 (2008).

83V. R. Misko, H. J. Zhao, F. M. Peeters, V. Oboznov, S. V. Dubonos, and
I. V. Grigorieva, “Formation of vortex shells in mesoscopic superconduct-
ing squares,” Superconductor Science and Technology 22, 034001 (2009).
84L.-F. Zhang, L. Covaci, M. V. Miloševi´c, G. R. Berdiyorov, and F. M.
Peeters, “Unconventional vortex states in nanoscale superconductors due
to shape-induced resonances in the inhomogeneous cooper-pair conden-
sate,” Phys. Rev. Lett. 109, 107001 (2012).

85L.-F. Zhang, L. Covaci, M. V. Miloševi´c, G. R. Berdiyorov, and F. M.
Peeters, “Vortex states in nanoscale superconducting squares: The inﬂu-
ence of quantum conﬁnement,” Phys. Rev. B 88, 144501 (2013).

86H. J. Zhao, V. R. Misko, F. M. Peeters, S. Dubonos, V. Oboznov, and
I. V. Grigorieva, “Vortex conﬁgurations in mesoscopic superconducting
triangles: Finite-size and shape effects,” Europhys. Lett. 83, 17008 (2008).
87L. R. E. Cabral and J. A. Aguiar, “Vortex conﬁgurations in thin supercon-

ducting equilateral triangles,” Phys. Rev. B 80, 214533 (2009).

88N. Kokubo, H. Miyahara, S. Okayasu, and T. Nojima, “Vortex shells in
mesoscopic triangles of amorphous superconducting thin ﬁlms,” Physica
C: Superconductivity and its Applications 530, 42–45 (2016), 28th Inter-
national Symposium on Superconductivity.

89W. Wu, H. J. Zhao, B. Li, and Z. X. Shi, “Finite-size and shape effects on
vortex conﬁgurations in superconducting isosceles right triangles,” Super-
cond. Sci. Technol. 30, 125004 (2017).

90H. T. Huy, M. Kato, and T. Ishida, “Vortex states in de factomesoscopic
mo80ge20pentagon plates,” Superconductor Science and Technology 26,
065001 (2013).

91H. J. Fink and A. G. Presson, “Magnetic irreversible solution of the

ginzburg-landau equations,” Phys. Rev. 151, 219–228 (1966).

92V. V. Moshchalkov, M. Baert, V. V. Metlushko, E. Rosseel, M. J. Van Bael,
and Y. Bruynseraede, “Magnetization of

K. Temst, R. Jonckheere,
multiple-quanta vortex lattices,” Phys. Rev. B 54, 7385–7393 (1996).
93V. A. Schweigert, F. M. Peeters, and P. S. Deo, “Vortex phase diagram
for mesoscopic superconducting disks,” Phys. Rev. Lett. 81, 2783–2786
(1998).

94A. Kanda, B. J. Baelus, F. M. Peeters, K. Kadowaki, and Y. Ootuka, “Ex-
perimental evidence for giant vortex states in a mesoscopic superconduct-
ing disk,” Phys. Rev. Lett. 93, 257002 (2004).

95D. S. Golubovi´c, M. V. Miloševi´c, F. M. Peeters, and V. V. Moshchalkov,
“Magnetically induced splitting of a giant vortex state in a mesoscopic
superconducting disk,” Phys. Rev. B 71, 180502 (2005).

96T. Cren, L. Serrier-Garcia, F. Debontridder, and D. Roditchev, “Vortex
fusion and giant vortex states in conﬁned superconducting condensates,”
Phys. Rev. Lett. 107, 097202 (2011).

97L. F. Chibotaru, A. Ceulemans, V. Bruyndoncx, and V. V. Moshchalkov,
“Symmetry-induced formation of antivortices in mesoscopic superconduc-
tors,” Nature 408, 833–835 (2000).

98M. Iavarone, A. Scarfato, F. Bobba, M. Longobardi, G. Karapetrov,
V. Novosad, V. Yefremenko, F. Giubileo, and A. M. Cucolo, “Imaging
the spontaneous formation of vortex-antivortex pairs in planar supercon-
ductor/ferromagnet hybrid structures,” Phys. Rev. B 84, 024506 (2011).

99C. D. Giorgio, D. D’Agostino, A. M. Cucolo, M. Iavarone, A. Scarfato,
G. Karapetrov, S. A. Moore, M. Polichetti, D. Mancusi, S. Pace,
V. Novosad, V. Yefremenko, and F. Bobba, “Superconducting vortex-
antivortex pairs: Nucleation and conﬁnement in magnetically coupled su-
perconductor ferromagnet hybrids,” in Vortex Dynamics and Optical Vor-
tices, edited by H. Perez-de Tejada (InTech, Rijeka, 2017) Chap. 03.
100J. Simmendinger, M. Bihler, A. M. Ionescu, M. Weigand, G. Schütz, and
J. Albrecht, “Bound and stable vortex–antivortex pairs in high-t c super-
conductors,” New Journal of Physics 22, 123035 (2020).

101A. B. Vorontsov, “Broken translational and time-reversal symmetry in un-
conventional superconducting ﬁlms,” Phys. Rev. Lett. 102, 177001 (2009).
102P. Holmvall, Modeling mesoscopic unconventional superconductors

(Chalmers University of Technology, 2017) licentiate thesis.

103P. Holmvall, T. Löfwander, and M. Fogelström, “Spontaneous generation
of fractional vortex-antivortex pairs at single edges of high-Tc supercon-
ductors,” Journal of Physics: Conference Series 969, 012037 (2018).
104P. Holmvall, A. B. I. Vorontsov, M. Fogelström, and T. Löfwander, “Bro-
ken translational symmetry at edges of high-temperature superconduc-
tors,” Nature Communications 9, 2190 (2018).

105P. Holmvall, Crystallization of the superconducting phase in unconven-
tional superconductors (Chalmers University of Technology, 2019) phD
thesis.

106A. A. Abrikosov, “On the magnetic properties of superconductors of the

second group,” Soviet Phys JETP 5, 1174–1182 (1957).

107J. Pearl,

“Current distribution in superconducting ﬁlms

carry-
ing quantized ﬂuxoids,” Applied Physics Letters 5, 65–66 (1964),
https://doi.org/10.1063/1.1754056.

108D. Xu, S. K. Yip, and J. A. Sauls, “Nonlinear meissner effect in uncon-

ventional superconductors,” Phys. Rev. B 51, 16233–16253 (1995).

109J. Sakurai and J. Napolitano, Modern Quantum Mechanics (Addison-

Wesley, 2011).

110Y. Aharonov and D. Bohm, “Signiﬁcance of electromagnetic potentials in

the quantum theory,” Phys. Rev. 115, 485–491 (1959).

111F. N. Rybakov and E. Babaev, “Flux qubit based on hybrid ferromagnetic-

superconducting device,” (2022).

112B. S. Deaver and W. M. Fairbank, “Experimental evidence for quantized
ﬂux in superconducting cylinders,” Phys. Rev. Lett. 7, 43–46 (1961).
113R. Doll and M. Näbauer, “Experimental proof of magnetic ﬂux quantiza-

tion in a superconducting ring,” Phys. Rev. Lett. 7, 51–52 (1961).

114L. Onsager, “Magnetic ﬂux through a superconducting ring,” Phys. Rev.

Lett. 7, 50–50 (1961).

115N. Byers and C. N. Yang, “Theoretical considerations concerning quan-
tized magnetic ﬂux in superconducting cylinders,” Phys. Rev. Lett. 7, 46–
49 (1961).

116W. Brenig, “Remark concerning quantized magnetic ﬂux in superconduc-

tors,” Phys. Rev. Lett. 7, 337–339 (1961).

117W. A. Little and R. D. Parks, “Observation of quantum periodicity in the
transition temperature of a superconducting cylinder,” Phys. Rev. Lett. 9,
9–12 (1962).

118R. P. Groff and R. D. Parks, “Fluxoid quantization and ﬁeld-induced de-
pairing in a hollow superconducting microcylinder,” Phys. Rev. 176, 567–
580 (1968).

119O. Buisson, P. Gandit, R. Rammal, Y. Wang, and B. Pannetier, “Mag-
netization oscillations of a superconducting disk,” Physics Letters A 150,
36–42 (1990).

120C.-R. Hu, “Midgap surface states as a novel signature for d2
perconductivity,” Phys. Rev. Lett. 72, 1526–1529 (1994).

xa-x2

b-wave su-

121S.-I. Suzuki and Y. Asano, “Paramagnetic instability of small topological

superconductors,” Phys. Rev. B 89, 184508 (2014).

122A. L. Fetter, “Flux-Penetration in a Thin Superconducting Disk,” Physical

Review B (Condensed Matter) 22, 1200–1213 (1980).

123V. G. Kogan, J. R. Clem, and R. G. Mints, “Properties of mesoscopic
superconducting thin-ﬁlm rings: London approach,” Physical Review B
69, 064516 (2004), cond-mat/0310393.

124S. Higashitani, “Mechanism of paramagnetic meissner effect in high-

temperature superconductors,” J. Soc. Phys. Jpn. 66, 2556 (1997).

125M. Fogelström, D. Rainer,

and J. A. Sauls, “Tunneling into current-
carrying surface states of high- tc superconductors,” Phys. Rev. Lett. 79,
281–284 (1997).

33

126M. Fogelström, D. Rainer,
netic ﬁeld dependence of
metal/insulator/superconductor
012503 (2004).

and J. Sauls,
conductance

“Nonlinear mag-
in d-wave normal-
junctions,” Phys Rev B 70,

the
tunnel

127J. R. Clem, M. W. Coffey, and Z. Hao, “Lower critical ﬁeld of a josephson-
coupled layer model of high-tc superconductors,” Phys. Rev. B 44, 2732–
2738 (1991).

128NVIDIA Corporation, “NVIDIA CUDA enabled devices,” (2021).
129L. B.-V. Horn and K. A. Moler, “Superscreen: An open-source package
for simulating the magnetic response of two-dimensional superconducting
devices,” (2022).

130I. Sadovskyy, A. Koshelev, C. Phillips, D. Karpeyev, and A. Glatz, “Sta-
ble large-scale solver for ginzburg–landau equations for superconductors,”
Journal of Computational Physics 294, 639–654 (2015).

131F. N. Rybakov and E. Babaev, “Excalibur software,”
URL: http://quantumandclassical.com/excalibur/.

132G. Kresse and J. Furthmüller, “Efﬁciency of ab-initio total energy calcula-
tions for metals and semiconductors using a plane-wave basis set,” Com-
putational Materials Science 6, 15–50 (1996).

133G. Kresse and J. Furthmüller, “Efﬁcient iterative schemes for ab initio
total-energy calculations using a plane-wave basis set,” Phys. Rev. B 54,
11169–11186 (1996).

134P. Giannozzi, S. Baroni, N. Bonini, M. Calandra, R. Car, C. Cavaz-
zoni, D. Ceresoli, G. L. Chiarotti, M. Cococcioni, I. Dabo, A. D.
Corso, S. de Gironcoli, S. Fabris, G. Fratesi, R. Gebauer, U. Gerstmann,
C. Gougoussis, A. Kokalj, M. Lazzeri, L. Martin-Samos, N. Marzari,
F. Mauri, R. Mazzarello, S. Paolini, A. Pasquarello, L. Paulatto, C. Sbrac-
cia, S. Scandolo, G. Sclauzero, A. P. Seitsonen, A. Smogunov, P. Umari,
and R. M. Wentzcovitch, “QUANTUM ESPRESSO: a modular and open-
source software project for quantum simulations of materials,” Journal of
Physics: Condensed Matter 21, 395502 (2009).

135P. Giannozzi, O. Andreussi, T. Brumme, O. Bunau, M. B. Nardelli, M. Ca-
landra, R. Car, C. Cavazzoni, D. Ceresoli, M. Cococcioni, N. Colonna,
I. Carnimeo, A. D. Corso, S. de Gironcoli, P. Delugas, R. A. DiStasio,
A. Ferretti, A. Floris, G. Fratesi, G. Fugallo, R. Gebauer, U. Gerstmann,
F. Giustino, T. Gorni, J. Jia, M. Kawamura, H.-Y. Ko, A. Kokalj, E. Küçük-
benli, M. Lazzeri, M. Marsili, N. Marzari, F. Mauri, N. L. Nguyen, H.-V.
Nguyen, A. O. de-la Roza, L. Paulatto, S. Poncé, D. Rocca, R. Sabatini,
B. Santra, M. Schlipf, A. P. Seitsonen, A. Smogunov, I. Timrov, T. Thon-
hauser, P. Umari, N. Vast, X. Wu, and S. Baroni, “Advanced capabilities
for materials modelling with quantum ESPRESSO,” Journal of Physics:
Condensed Matter 29, 465901 (2017).

136M. Nakhaee, S. A. Ketabi, and F. M. Peeters, “Tight-binding studio: A
technical software package to ﬁnd the parameters of tight-binding hamil-
tonian,” Computer Physics Communications 254, 107379 (2020).

137C. W. Groth, M. Wimmer, A. R. Akhmerov, and X. Waintal, “Kwant:
a software package for quantum transport,” 16, 063065, publisher: IOP
Publishing.

138K. Björnson, “Tbtk: A quantum mechanics software development kit,”

SoftwareX 9, 205–210 (2019).

139T. Löthman, C. Triola, J. Cayao, and A. M. Black-Schaffer, “Efﬁcient nu-
merical method for evaluating normal and anomalous time-domain equi-
librium green’s functions in inhomogeneous systems,” Phys. Rev. B 104,
125405 (2021).

140Y. Nagai, “N-independent

localized krylov–bogoliubov-de gennes
method: Ultra-fast numerical approach to large-scale inhomogeneous su-
perconductors,” Journal of the Physical Society of Japan 89, 074703
(2020), https://doi.org/10.7566/JPSJ.89.074703.

141N. Bell and J. Hoberock, “Chapter 26 - thrust: A productivity-oriented
library for cuda,” in GPU Computing Gems Jade Edition, Applications of
GPU Computing Series, edited by W. mei W. Hwu (Morgan Kaufmann,
Boston, 2012) pp. 359 – 371.

142K. Kaczmarski and P. Rzka˙zewski, “Thrust and cuda in data intensive al-
gorithms,” in New Trends in Databases and Information Systems, edited
by M. Pechenizkiy and M. Wojciechowski (Springer Berlin Heidelberg,
Berlin, Heidelberg, 2013) pp. 37–46.

143E. Wynters, “Examples from computational geometry that demonstrate the
potential of using the thrust library to implement parallel processing on
gpus,” J. Comput. Sci. Coll. 28, 148–155 (2013).

34

144Cedilnik, E. and Hoffman, B. and King, B. and Martin, K. and Neundorf,

Committee, 2016) pp. 263–273.

A., “CMake,” https://cmake.org/ (2021), version 3.21.3.

154BlueBrain, “HighFive - Header-only C++ HDF5 interface,” (2021), ver-

145Martin, E., “Ninja,” https://ninja-build.org/ (2020), version

sion 2.3.1.

1.10.2.

146C. Sanderson and R. Curtin, “Armadillo: a template-based C++ library for

linear algebra,” The Journal of Open Source Software 1, 26 (2016).

147C. Sanderson and R. Curtin, “A user-friendly hybrid sparse matrix class in
c++,” in Mathematical Software – ICMS 2018, edited by J. H. Davenport,
M. Kauers, G. Labahn, and J. Urban (Springer International Publishing,
Cham, 2018) pp. 422–430.

148V. Kirilov, “doctest,” https://github.com/onqtam/doctest (2021).
149Khronos Group, “Opengl overview,” (2021), version 4.6.
150M. Woo, J. Neider, T. Davis, and D. Shreiner, OpenGL programming
the ofﬁcial guide to learning OpenGL, version 1.2 (Addison-

guide:
Wesley Longman Publishing Co., Inc., 1999).

151P. Yalamanchili, U. Arshad, Z. Mohammed, P. Garigipati, P. Entschev,
B. Kloppenborg, J. Malcolm, and J. Melonakos, “ArrayFire - A high per-
formance software library for parallel computing with an easy-to-use API,”
(2015).

152C. Dunn, “Jsoncpp,” https://github.com/open-source-parsers/

jsoncpp (2020).

153F. Pezoa, J. L. Reutter, F. Suarez, M. Ugarte, and D. Vrgoˇc, “Founda-
tions of json schema,” in Proceedings of the 25th International Conference
on World Wide Web (International World Wide Web Conferences Steering

155The HDF Group, “Hierarchical Data Format, version 5,” (1997-NNNN),

https://www.hdfgroup.org/HDF5/.

156C. R. Harris, K. J. Millman, S. J. van der Walt, R. Gommers, P. Virta-
nen, D. Cournapeau, E. Wieser, J. Taylor, S. Berg, N. J. Smith, R. Kern,
M. Picus, S. Hoyer, M. H. van Kerkwijk, M. Brett, A. Haldane, J. F. del
Río, M. Wiebe, P. Peterson, P. Gérard-Marchant, K. Sheppard, T. Reddy,
W. Weckesser, H. Abbasi, C. Gohlke, and T. E. Oliphant, “Array program-
ming with NumPy,” Nature 585, 357–362 (2020).

157J. D. Hunter, “Matplotlib: A 2d graphics environment,” Computing in Sci-

ence & Engineering 9, 90–95 (2007).

158A. Collette, Python and HDF5 (O’Reilly, 2013).
159W. McKinney et al., “Data structures for statistical computing in python,”
in Proceedings of the 9th Python in Science Conference, Vol. 445 (Austin,
TX, 2010) pp. 51–56.

160MATLAB, 9.11.0.1769968 (R2021b) (The MathWorks Inc., Natick, Mas-

sachusetts, 2021).

161R. Grein, T. Löfwander, and M. Eschrig, “Inverse proximity effect and in-
ﬂuence of disorder on triplet supercurrents in strongly spin-polarized fer-
romagnets,” Phys. Rev. B 88, 054502 (2013).

