2
2
0
2

l
u
J

5
2

]
P
S
.
h
t
a
m

[

1
v
8
9
9
1
1
.
7
0
2
2
:
v
i
X
r
a

Spectrally grown graphs

Mats-Erik Pistol
Solid State Physics and NanoLund
Box 118, Lund University, S-221 00 Lund SWEDEN

Pavel Kurasov
Department of Mathematics
Stockholm University, S-106 91 Stockholm SWEDEN

July 26, 2022

Abstract

Quantum graphs have attracted attention from mathematicians for
some time. A quantum graph is deﬁned by having a Laplacian on each
edge of a metric graph and imposing boundary conditions at the vertices
to get an eigenvalue problem. A problem studying such quantum graphs
is that the spectrum is timeconsuming to compute by hand and the in-
verse problem of ﬁnding a quantum graph having a speciﬁed spectrum is
diﬃcult. We solve the forward problem, to ﬁnd the eigenvalues, using a
previously developed computer program. We obtain all eigenvalues ana-
lytically for not too big graphs that have rationally dependent edges. We
solve the inverse problem using ”spectrally grown graphs”.
The spectrally grown graphs are evolved from a starting (parent) graph
such that the child graphs have eigenvalues are close to some criterion.
Our experiments show that the method works and we can usually ﬁnd
graphs having spectra which are numerically close to a prescribed spec-
trum. There are naturally exceptions, such as if no graph has the pre-
scribed spectrum. The selection criteria (goals) strongly inﬂuence the
shape of the evolved graphs. Our experiments allows us to make new
conjectures concerning the spectra of quantum graphs. We open-source
our software at https://github.com/meapistol/Spectra-of-graphs.

Keywords: quantum graphs, evolution, spectrum

1

Introduction

Quantum graphs have been studied for several decades. A quantum graph [1, 2]
is a metric graph, Γ, such that with each edge we have associated an ordinary
diﬀerential equation. Introducing in addition suitable matching conditions at
the vertices make the operator self-adjoint.
In the current paper we reduce
our analysis to the simplest case of the Laplace diﬀerential operator deﬁned on
functions satisfying so-called standard vertex conditions (see Eqn. 1 below).
Then the spectrum of the operator is often refereed to as the spectrum of the
graph Γ. It is important to remember that there are graphs that are not isomor-
phic but still have the same spectrum [3]. There is a wide literature describing

1

 
 
 
 
 
 
the relations between the topological and metric properties of a ﬁnite graph Γ
and its spectrum [2, 4]. For example the spectrum determines the total length
of the metric graph and its Euler characteristic [5, 6]. Kurasov and Sarnak
have recently been shown that exotic crystalline measures can be found using
investigations of the additive structure of the spectrum of quantum graphs [7]
It is not particularly easy to obtain the eigenvalues of a graph which ham-
pers progress. We have previously developed a computer program that gives the
eigenvalues of a ﬁnite graph [8] which was used to ﬁnd a large set of isospectral
graphs [9]. For graphs with pairwise rationally dependent edges (that is, the
ratio of the lengths of any two edges is a rational number) we get all eigenvalues
analytically if the graph is not too big. For graphs where some edges are not
rationally dependent we can only ﬁnd approximate eigenvalues using a graphical
method.

Having such a program allows us not only to study spectra of graphs. It
also allows us to get a handle of the inverse problem, ﬁnding graphs having a
prescribed spectrum. One of the main contributions of our paper is formulation
of a new type of evolution that we call spectrum driven evolution. The
spectrum (in our case the eigenvalues) provide an important global characteristic
of the system. We ﬁnd it interesting to deﬁne a certain evolution such that the
eigenvalues tend to a prescribed set of eigenvalues as the graphs evolve. Other
goals can also be given, such as maximizing the ﬁrst or second spectral gaps.
We ﬁnd that it is indeed possible to evolve graphs in this way such that the goal
is closely attained. We have found that experimenting with spectral growth
of graphs quickly leads to interesting conjectures. One such, concerning the
spectral gaps of the ﬁrst eigenvalues of dumbbell graphs is given is given.

2 Laplacians on graphs and their spectra

In this section we brieﬂy deﬁne the main object of our studies – the diﬀerential
Laplace operator on a metric graph Γ. Consider any ﬁnite compact metric graph
Γ formed by joining together N edges En, n = 1, 2, . . . N at M vertices Vm, m =
1, 2, . . . , M. Each edge En is identiﬁed with a compact interval [x2n−1, x2n] on
the real line. Then the (standard) Laplace operator L = − d2
dx2 is deﬁned on the
functions satisfying standard vertex conditions:






f (xi) = f (xj),

xi, xj ∈ Vm,

(cid:88)

xi∈Vm

∂nf (xi) = 0.

(1)

at each vertex Vm where the xi’s are the endpoints of the edges that meet at
the vertex. In words, the eigenfunctions are required to be continuous at the
vertex and the sum of their (outward) normal derivatives, ∂nf (xi), at the vertex
is zero. These are called Kirchoﬀ or Neumann vertex conditions. The operator
so deﬁned is self-adjoint [2, 10].

Our main interest is the spectrum of the standard Laplace operator L.
The spectrum if formed by all λ = k2 such that the equation Lψ = λψ has
a non-trivial solution. Every such function ψ is a solution to the diﬀerential
equation −ψ(cid:48)(cid:48)(x) = λψ on every edge and satisﬁes the vertex conditions at

2

every vertex. The operator L is nonnegative since its quadratic form is given by
(cid:90)

(cid:104)Lu, u(cid:105)L2(Γ) =

|u(cid:48)(x)|2dx ≥ 0.

Γ

The spectrum of the operator is discrete and is formed by a sequence of eigen-
values tending to +∞.

First of all we note that λ0 = 0 is an eigenvalue with the eigenfunction
It is easy to see that this eigenfunction is unique, provided Γ is

ψ0(x) ≡ 1.
connected.

Consider now any λ = k2 > 0. The solution of the diﬀerential equation
on each edge is given by a linear combination of eikx and e−ikx. Imposing the
vertex conditions on the eigenfunctions gives a linear equation system which
has a solution if a certain k-dependent determinant, D(k), is zero. One possible
way is to consider these equations as a certain scattering process arriving to the
following secular equation

D(k) := det (Se(k)Sv − I) = 0,

(2)

where Se(k) is the edge scattering matrix formed by 2 × 2 matrices
(cid:18) 0
eik(cid:96)n

eik(cid:96)n
0

(cid:19)

,

(cid:96)n being the length of the corresponding edge En, and Sv is the vertex scattering
matrix formed by dm × dm scattering matrices

Sm =










−1 + 2/dm
2/dm
2/dm
...
2/dm

2/dm
−1 + 2/dm
2/dm
...
2/dm

2/dm
2/dm

. . .
. . .
−1 + 2/dm . . .
. . .
. . . −1 + 2/dm

2/dm
2/dm
2/dm
...

...
2/dm










,

with dm being the valency of the vertex Vm. Observe that the matrices Se and
Sv have block-diagonal forms in diﬀerent bases. For example these marices for
the graph depicted in Fig. 1 are as follows:

Se(k) =















0
eikc1
0
0
0
0
0
0

eikc1
0
0
0
0
0
0
0

0
0
0
eikπ
0
0
0
0

0
0
eikπ
0
0
0
0
0

0
0
0
0
0
eikc1
0
0

0
0
0
0
eikc1
0
0
0

0
0
0
0
0
0
0
eikc2















,

0
0
0
0
0
0
eikc2
0

Sv =















−1/3 0
0
1
0
0
0
0
0

0
0
0
0
2/3
2/3
0

0
1
0
0
0
0
0
0

0
0
0
0
1
0
0
0

3

2/3
0
0
0
0

2/3
0
0
0
0
2/3
2/3 −1/3

0
0
0
1
0
0 −1/3
0
0

0

0















.

0
0
0
0
0
0
0
1

A description of how to obtain this determinant is given by Gutkin and Smi-
lansky [3] and in Kurasov and Nowaczyk [11] (with an example by Nowaczyk
[12]) and we will not repeat this description here. The most important property
of the function D(k) is that it is an analytic function (trigonometric polyno-
mial) and all its zeroes are real having orders equal to the multiplicities of the
corresponding eigenvalues, maybe with the exception of the eigenvalue λ0 = 0.
In what follows we are going to call the spectrum of the standard Laplace
operator on a metric graph Γ by the spectrum of Γ. One important observation
is that the spectrum scales in an easy way as the lengths of all edges are scaled
simultaneously, hence it is natural to normalise the graphs so that they have
total length equal to one, which we do in this paper.

3 Spectrum driven evolution

There is a wide literature devoted to diﬀerent growth models for graphs. Most
of these models are of a probabilistic or random nature. Some models, probably
motivated by applications, use local rules [13]. One such example is crystal
growth which is motivated by ice crystals and snow ﬂakes. Our growth process
is highly non-local, since the spectra of quantum graphs are very sensitive to the
overall graph structure and cannot be determined by a subgraph of the graph.
The spectrum of a graph is one of its most important global characteristic
encoding information about its topology and geometry. Our goals are:

• Find graphs having particular eigenvalues or conditions on the eigenvalues.

This is a hard inverse problem.

• Get an intuitive feeling for graphs having particular conditions on the

eigenvalues, possibly leading to new conjectures.

Below we describe the most elementary variant of spectrum driven evolu-
tion and discuss some generalisations. In order to determine such evolution, let
us choose any target spectrum σ∗ = {µ0, µ1, µ2, . . . , µN } ⊂ R with µ0 = 0.
The role of the initial condition is played by any ﬁnite compact metric graph
Γ0.

The evolution is determined using the following inductive procedure

1. Initiatialisation

We start by choosing an initial graph Γ0. From this initial parent graph
we will generate a sequence of graphs Γn using the following

2. Evolution rule:

Given a parent graph Γn, we construct the next graph Γn+1 in the sequence
using following the steps:

• Consider all possible graphs obtained by attaching a new edge of
length (cid:96) = 1/N , where N is the number of edges, to one of the vertices
either as a pendant edge or between any two existing vertices;

• Scale the new graphs to meet the normalisation requirement of total

length one;

4

• Calculate the spectra of all such graphs and choose the one with the
spectrum closest to the target spectrum σ∗ = {µ0, µ1, µ2, . . . , µN }.
Denote the optimal graph by Γn+1. In the unlikely case that several
graphs that have spectra equally close to the target spectrum, we
simply chose any one of them.

3. Repeating the evolution procedure, this time with Γn+1 as the parent

graph, one obtains an inﬁnite sequence of metric graphs.

The distance between the actual spectrum σ(Γn) = {λ0, λ1, . . . } and the target
spectrum σ∗ is the usual Euclidean distance

(cid:33)1/2

|λk − µk|2

.

(cid:32) N
(cid:88)

k=0

(3)

Our main goal is to study properties of such a sequence and its possible
convergence. It is natural to consider the index n as a certain time-parameter
and speak about time evolution of the graph. This evolution certainly depends
on the evolution rule, but the role of the initial state (graph Γ0) is also important.
The formulated growth model can be generalised in many ways and it is

not our goal to examine all such possibilities:

• the class of allowed graphs may be constrained by, for example, considering

only trees;

• the notion of the distance between the two spectra can be diﬀerent - any

distance can be used;

• instead of adding one edge, one may add an arbitrary small graph;

• one may allow to delete existing edges or to collapse cycles;

• any point on an edge may be considered as a degree two vertex, hence it is
natural to allow to add edges between any two points on a metric graph;

• instead of having a target spectrum, one may choose another rule like
choosing the graph maximising (or minimising) the spectral gap or the
entropy.

Since our understanding of topological and geometric properties of the
graphs is far from being satisfactory, the search for rules that determine interest-
ing evolution requires checking new ideas and examining diﬀerent possibilities.
Our studies show that the dynamics is extremely sensitive to the target spec-
trum which makes it into a challenging problem to choose the target spectrum
so that the graphs in the sequence have interesting properties. By choosing the
evolution rule in a special way one may expect the generated graph sequence
will converge to a graph having certain extremal properties.

4 Program use

Our program is written in the computer language Mathematica [14]. Graphs
are speciﬁed in two diﬀerent ways, either directly by Mathematica graph objects

5

or by their adjacency matrix. The edge lengths are stored in the elements of
the matrix. Four edges can be given symbolic lengths, c1, c2, c3 and c4. If the
graph has a numerical length, the program normalizes the graph to length one,
where the length is the sum of the length of the edges. The program obtains the
eigenvalues, λ = k2, using three diﬀerent methods. In the ﬁrst method we simply
plot the value of D(k) as a function of k and obtain the roots visually. D(k)
may contain c1 and c2 and it is possible to adjust these parameters interactively
using sliders and get a feeling for how the roots depend on these parameters.
Figure 2 presents D(k) for the graph shown in Figure 1. c1 = π and c2 has
been varied from zero to π to 50π. It can be diﬃcult to know if D(k) = 0 at a
point or if it just becomes close to zero. This problem can be seen in the left
panel in Fig. 2, where D(k) ≤ 0 for all k. A further problem is that even if one
knows that D(k) = 0, due to D(k) changing sign, it may be diﬃcult to know
the multiplicity of the root without further investigations.

The program can also compute the zeroes of D(k) numerically and some-
times analytically. Analytical solutions are naturally very hard, and often im-
possible to obtain. However, surprisingly diﬃcult cases can be solved. For
instance the graph in Figure 1 has analytical solutions when c1 = c2 = π. The
roots are:

k = 8πn

k = −(8/3)π + 8πn

k = (8/3)π + 8πn
(cid:18)

k = −4i log

k = −4i log

k = −4i log

k = −4i log

(cid:18) 1
12
(cid:18) 1
12

(cid:32)

(cid:32)

1
12

1
12

−3 −

(cid:18)

−3 −

(cid:32)

−3 +

(cid:32)

−3 +

(4)

√

√

(cid:113)

33 − i

102 − 6

(cid:113)

33 + i

102 − 6

√

√

(cid:19)(cid:19)

33

+ 8πn

(cid:19)(cid:19)

33

+ 8πn

√

√

(cid:114)

33 − i

6

(cid:114)

33 + i

6

(cid:16)

(cid:16)

√

(cid:17)

33

17 +

√

(cid:17)

33

17 +

(cid:33)(cid:33)

(cid:33)(cid:33)

+ 8πn

+ 8πn

where n ∈ Z. Our program seems to ﬁnd analytical solutions for all graphs
where the edge-lengths are rationally dependent (that is, the ratio between any
two edge-lengths can be written as p/q with p and q integers). This depends on
the capabilities of Mathematica but so far we have found no exception to this
observation. If the graph is large, or if there are edges where p/q is very small,
then the calculation might have to be aborted due to excessive computing time.
Analytic solutions are never found if the edges of the graph are not rationally
dependent. Furthermore, Mathematica does not explicitly give the multiplicities
of the roots although they can be found by inspection of D(k) .

Despite these shortcomings we have found our program to be very useful
to gain understanding of the spectra of diﬀerent graphs. The raison d’´etre for
our program is mostly to introduce experimentation into the ﬁeld of quantum
graphs and possible insights should be proven rigorously.

The program also supports the spectral growth of graphs. The user spec-
iﬁes up to three k-values (which determine the eigenvalues via λ = k2), the
initial graph and deﬁnes how growth should proceed. For example the growth

6

may only add pendant edges, add edges between any two vertices, delete edges
and so on. The evolution of the k-values is shown graphically. It is also possible
to maximise λ2/λ1 as a goal. Any type of goal can be deﬁned by the user and
many starting graphs can be set graphically. Having set the rules, the program
then evolves the graphs for a certain number of user-deﬁned steps.

5 Experiments

We will now describe some experiments that we have done.

• In the ﬁrst experiment, we chose the target spectrum σ∗ = (0, π2, (2π)2)
and the goal was to minimise (cid:107)σ(Γ1i) − σ∗(cid:107). σ∗ is the initial part of the
spectrum of a path graph and unsurprisingly the growth of the graphs
proceeds by adding an edge to the parent graph, simply extending it. See
Fig. 4.

• In the second experiment the goal was to maximise λ1, also known as the
spectral gap. We then ﬁnd that the sequence consists of graphs with a
large number of edges compared with the number of vertices and include
all complete graphs with equal length edges (equilateral complete graphs).
It has been proven that the spectral gap becomes arbitrarily high for
equilateral complete graphs when the number of edges increases [4]. See
Fig. 5.

• In the third experiment the goal was to maximise λ2/λ1. We then ﬁnd that
the sequence consists of graphs (often complete graphs) which are joined
by one edge, also known as dumbbell graphs. From this experiment we
conjecture that λ2/λ1 can become arbitrarily large for this class of graphs.
We tested this and could reach λ2/λ1 > 64 before reaching the limit of our
laptop computer. In fact testing with dumbbell graphs where two general
graphs are joined by one edge we also ﬁnd that λ2/λ1 can become very
large. See Fig. 6.

• In the fourth experiment the goal was to maximise λ1. The growth was
In this
here alternating between adding an edge and deleting an edge.
case we prefer to use the term evolution rather than growth of the graphs.
We started with a grid graph and after a few steps we ended up with a
complete graph. After this stage the graphs alternate as illustrated in the
Fig. 7. If we have the diﬀerent goal of minimising λ1 instead of maximising
λ1 the ﬁnal graph will be a path graph, as expected.

• In the ﬁfth experiments we chose a target spectrum of

σ∗ = (0, (2π)2, (3π)2, (3π)2) and the goal was to minimise (cid:107)σ(Γ1i) − σ∗(cid:107).
The growth was restricted to trees. Fig. 8 shows the evolution of the k-
values as well as the resulting graph after 12 steps. The evolution manages
to ﬁnd a tree that has eigenvalues close to the target values.

It is also possible to program the growth of the graphs. That is one can
ﬁrst specify a particular goal and how the evolution should proceed (e. g. add
only pendant edges) and then switch goal and change how the evolution should
proceed. In Fig. 9 we show an example of programmed growth of graphs. By

7

Figure 1: An example of a metric graph generated by our program from an
adjacency matrix. The vertices are labeled by numbers and the edge lengths
are indicated. c1 and c2 are parameters.

Figure 2: Examples of plots of D(k), for the graph shown in Fig. 1, where c1
and c2 can be changed using sliders. Left panel. Here c1 = π and c2 = 0 and we
have a triangular graph (with length normalized to one). The zeros of D(k) are
then at k = 2nπ which is reﬂected in the ﬁgure. Middle panel. Here c1 = c2 = π
and it is less obvious where the zeros of D(k) should be located. Right panel.
Here c1 = π, c2 = 50π and the graph is almost a path graph, which has zeros
of D(k) at k = nπ.

8

c2c1πc11234Figure 3: The top graph is the parent graph and has three vertices. From this
graph we get three child graphs by adding an edge, shown in the bottom. Out
of these child graphs we select the graph which has a spectrum which best ﬁt
some chosen criterion. The selected graph becomes a new parent graph and the
process is repeated.

Figure 4: The top graph is the parent graph and has three vertices. From this
graph we get the sequence of graphs below. The goal was to have a spectrum
with an initial segment which is close to (0, π2, (2π)2). This is satisﬁed by a
path graph. The parent graph is simply extended when we evolve the graphs.

Figure 5: In this sequence of graphs the goal was to maximise the spectral gap,
λ1. The sequence contains many complete graphs.

9

Figure 6: In this sequence of graphs the goal was to maximise λ2/λ1. The
graphs are two complete graphs joined by one edge. The parent graph is a path
graph with six vertices. Not all graphs in the sequence have been plotted.

Figure 7: In this sequence of graphs we added and then deleted an edge alter-
natingly, starting with a grid graph. The goal was to maximise the spectral
gap, λ1. The grid graph transforms to a complete graph after eight steps. The
sequence then becomes cyclical, alternating between the complete graph and
the complete graph with an added edge.

executing these type of programs one can steer the growth of the graphs to a
certain goal such that subgoals are attained on the way. An interesting question
is if it is possible to ”help” the growth to attain a diﬃcult goal by having suitable
subgoals to attain ﬁrst. We have found that some goals are very hard to obtain
during our experiments. Unfortunately these types of programming experiments
are very taxing for the computer and we could not execute too long programs.

6 Conclusion and outlook

We have found that studying the growth of graphs greatly helps our intuition
about their spectral properties. One immediately learns that the eigenvalues of
the graphs tend to increase with increasing complexity of the graphs. In fact
the graph with the smallest λ1 is the path graph [15], where λ1 = π2, which
most often is our starting graph.

We also ﬁnd that the growth of graphs can help to ﬁnd patterns that can be
made into conjectures and one example was given above, involving the ﬁrst two
non-trivial eigenvalues. Not much is known about the relation between graphs
and more than one non-trivial eigenvalue. Future work likely will involve ﬁnding
more conjectures, and possibly also proving them. The fact that our program
sometimes can give all solutions in an analytical form is very helpful for such
research. Concerning growth of graphs there is a huge number of questions to
be answered. Is it for instance possible to have something analogous to phase

10

Figure 8: In this sequence the target spectrum was (0, (2π)2, (3π)2, (3π)2) and
the growth was restricted to trees. We show the evolution of the k-values as
well as the ﬁnal graph in the sequence. The target k-values are indicated by
horisontal lines. The spectral evolution manages to ﬁnd a tree-graph having
eigenvalues which are quite close to the target values.

Figure 9: In this sequence of graphs we used a program. The ﬁrst goal was to
increase λ1 until λ1 ≥ (5π)2 by adding an edge. This resulted in a complete
graph, yellow in the ﬁgure. The goal was then changed to have a spectrum
close to (0, (5π)2, (15π)2) by adding a vertex and an edge. The growth then
proceeded as in the ﬁgure.

11

24681012051015transitions in the graphs? That is, can a small change in the goal completely
change the topology of the graph?

We release our program as open-source [8].

7 Acknowledgement

This project was supported by the Swedish Research Council (VR) and NanoL-
und.

12

References

[1] Peter Kuchment. Quantum graphs: I. some basic structures. Waves in

Random media, 14(1):S107–128, 2004. 1

[2] Gregory Berkolaiko and Peter Kuchment. Introduction to quantum graphs.

Number 186. American Mathematical Soc., 2013. 1, 2

[3] Boris Gutkin and Uzy Smilansky. Can one hear the shape of a graph?
Journal of Physics A: Mathematical and General, 34(31):6061, 2001. 1, 4

[4] James B Kennedy, Pavel Kurasov, Gabriela Malenov´a, and Delio Mugnolo.
On the spectral gap of a quantum graph. In Annales Henri Poincar´e, pages
1–35. Springer, 2015. 2, 7

[5] Pavel Kurasov. Graph laplacians and topology. Arkiv f¨or Matematik,

46(1):95–111, 2008. 2

[6] Pavel Kurasov. Schr¨odinger operators on graphs and geometry I: Essen-
tially bounded potentials. Journal of Functional Analysis, 254(4):934–953,
2008. 2

[7] Pavel Kurasov and Peter Sarnak. Stable polynomials and crystalline mea-

sures. Journal of Mathematical Physics, 61(8):083501, 2020. 2

[8] Mats-Erik Pistol. https://github.com/meapistol/spectra-of-graphs. 2, 12

[9] Mats-Erik Pistol. Generating isospectral but not isomorphic quantum

graphs. arXiv:2104.12885, 2021. 2

[10] Vadim Kostrykin and Robert Schrader. Kirchhoﬀ’s rule for quantum wires.
Journal of Physics A: Mathematical and General, 32(4):595, 1999. 2

[11] Pavel Kurasov and Marlena Nowaczyk. Inverse spectral problem for quan-
tum graphs. Journal of Physics A: Mathematical and General, 38(22):4901,
2005. 4

[12] Marlena Nowaczyk.

quantum
spectral
Centre for Mathematical Sciences, Lund University, 2005.

problems

Inverse

for

graphs.
http://goo.gl/OWmAEK. 4

[13] Alexei V´azquez. Growing network with local rules: Preferential attach-
ment, clustering hierarchy, and degree correlations. Physical Review E,
67(5):056104, 2003. 4

[14] Wolfram Research, Inc. Mathematica, Version 13. Champaign, IL, 2022. 5

[15] Serge Nicaise. Spectre des r´eseaux topologiques ﬁnis. Bull. Sci. Math,

2(111):4, 1987. 10

13

