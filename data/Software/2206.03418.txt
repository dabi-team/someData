Responsibility-Sensitive Safety
an Introduction with an Eye to Logical Foundations and Formalization

1

Ichiro Hasuo1,2

Abstract

2
2
0
2

n
u
J

7

]

O
R
.
s
c
[

1
v
8
1
4
3
0
.
6
0
2
2
:
v
i
X
r
a

Responsibility-sensitive safety (RSS) is an approach to the safety of automated driving systems (ADS). It aims to introduce
mathematically formulated safety rules, compliance with which guarantees collision avoidance as a mathematical theorem.
However, despite the emphasis on mathematical and logical guarantees, the logical foundations and formalization of RSS are
largely an unexplored topic of study. In this paper, we present an introduction to RSS, one that we expect will bridge between
different research communities and pave the way to a logical theory of RSS, its mathematical formalization, and software tools
of practical use.

I. WHAT IS RSS?
Responsibility-sensitive safety (RSS) is an approach to the safety of automated driving systems (ADS) that has been attracting
growing attention. Safety is a central theme in every aspect of automated driving system (ADS) research. RSS is unique among
these approaches in that it provides safety rules that are rigorously formulated in mathematical terms. Unlike most algorithms
and techniques studied for ADS, RSS is not so much about how to drive safely as about breaking down the ultimate goal
(namely safety) into concrete and checkable conditions. The goal of RSS is that those safety rules guarantee ADS safety in
the rigorous form of mathematical proofs. How far RSS has gone towards this ultimate goal of ADS safety proofs, and what
is still needed for this ultimate goal, are questions that we will discuss later in Section VI.

The methodology and basic techniques of RSS were ﬁrst introduced by researchers at Mobileye/Intel [17]. The safety rules
derived in RSS have a variety of possible usages (as we will discuss in Section V), giving RSS a multifaceted character.
Moreover, its presentation to non-expert audience such as Mobileye/Intel’s webpage3 tends to emphasize RSS’s ideological
aspects. All these have somewhat blurred the theoretical substance of RSS.

In this introductory paper, in contrast, we aim at a theoretical account of RSS mainly from the viewpoints of logic and
software science. We expect that such an introductory account will bridge between different research communities and pave
the way to a logical theory, formalization, and software tools—aspects of the RSS study that are largely unexplored at this
moment. Speciﬁcally, in the current paper, we 1) formulate two requirements of safety rules (Requirements II.2 and II.4), and
2) formulate their assume-guarantee relationship (see Fig. 2).

Remark I.1 (RSS terminologies). Although there are already a number of research works on RSS as well as practical works
(including the efforts to use it in international standards), comprehensive technical accounts on RSS are scarce. In particular,
terminologies for the core concepts in RSS do not seem to be ﬁxed in the literature.

In this paper, we will use the terminologies listed in Table I. Note that they may differ from the terminologies used in the
literature (which vary from a paper to another). The notions in the table will be introduced in due course. Their correspondence
to those used in the original paper [17] is also shown in the table.

A. RSS Safety Rules

II. ELEMENTS OF RSS

The central constructs in RSS are RSS safety rules. Here is their semi-formal deﬁnition—a concrete example will appear in

Section IV.

Deﬁnition II.1 (RSS safety rule, RSS safety condition, proper response). An RSS safety rule is a pair R = (C, P) of an RSS
safety condition C and a proper response P, designed speciﬁcally for each driving scenario (straight road or crossing, other
cars driving in the same direction or another, etc.). Here,

• an RSS safety condition C is a rigorous condition formulated in mathematical terms, which must be instantly checkable

(in the sense that it mentions the current values of physical quantities, not the future ones); and

• a proper response P is a control strategy that achieves safe driving, typically until the vehicle comes to a halt.

Here is the ﬁrst fundamental requirement of an RSS safety rule.

1National Institute of Informatics, Hitotsubashi 2-1-2, Tokyo 101-8430, Japan. i.hasuo@acm.org
2SOKENDAI (The Graduate University for Advanced Studies), Hayama, Japan.
3https://www.mobileye.com/responsibility-sensitive-safety

 
 
 
 
 
 
2

TABLE I: RSS terminologies

in this paper

RSS safety rule

RSS safety
condition

in [17]

(no explicit name)

safe distance

A pair of an RSS safety condition and a proper
response

An “instantly-checkable” condition that guaran-
tees safety henceforth. Often stated in terms of
a safety distance

proper response

proper response

A control strategy that realizes safety

RSS responsibility principle

safety rule,
common sense rule

A high-level and informal principle used as
assumptions on the behaviors of vehicles

Fig. 1: the subject vehicle (SV) is surrounded by other vehicles. When they come close, there is nothing that the SV can do
to avoid a collision.

Requirement II.2 (safety assurance in RSS). An RSS safety rule R = (C, P) is required to satisfy the following:

Whenever the RSS condition C is satisﬁed, executing the proper response P from that moment leads to safe driving
(i.e. driving with no collision).

By considering the beginning (at time 0) of the execution of P, the above requirement implies, in particular, that

Whenever the RSS condition C is satisﬁed, there is no collision at that moment.

Ideally, this safety assurance should be mathematically proved, building on the rigorous formulation of the RSS safety

condition C as well as that of the proper response P. Such a mathematical proof makes the requirement a theorem.

A crucial feature of an RSS safety rule R = (C, P) is that it reduces the problem of safety in the future to a condition that
can be veriﬁed at present, namely the RSS safety condition C. The RSS safety condition C ensures the safety of executions
of the proper response P, much like a precondition in a program logic ensures the safety of executions of a program (see
e.g. [22]).

Such reduction of the future to the present is not easy. In fact, ensuring future safety is impossible without posing suitable
assumptions about the behaviors of other vehicles. Figure 1 is a situation that is often used as an example in the literature
(including [17]): a collision happens if the other vehicles come close to the subject vehicle (SV); and the SV can do nothing
to avoid it.

B. RSS Responsibility Principles

It is therefore needed to formulate certain behavioral constraints that all trafﬁc participants are expected to respect. Such
constraints can be thought of as contracts in driving situations, when the latter are identiﬁed with multi-agent systems. Each
trafﬁc participant must respect these constraints; moreover, each agent can act assuming that all the other agents obey these
constraints. In RSS, these behavioral constraints are derived from a high-level idea of responsibility.

Speciﬁcally, RSS expresses its idea of responsibility in the following informal form of RSS responsibility principles. (Note

that the name “RSS responsibility principle” differs from those which appear in the literature—see Remark I.1.)

Deﬁnition II.3 (RSS responsibility principles [17]).

1) Don’t hit the car in front of you
2) Don’t cut in recklessly
3) Right of way is given, not taken
4) Be cautious in areas with limited visibility
5) If you can avoid a crash without causing another one, you must

SV3

Fig. 2: the RSS framework. An RSS safety rule is formulated for an individual driving scenario. Each rule is expected to satisfy
safety (Requirement II.2) and responsibility (Requirement II.4). The latter guarantees that the subject vehicle acts responsibly;
conversely, the safety proof assumes that the other vehicles act responsibly.

Note that these principles indeed embody a natural idea of responsibility, or “duties of care,” in driving. They are close to

those rules commonly expected of human drivers.

The uses of the ﬁve RSS responsibility principles are twofold. Firstly, they can be used to establish Requirement II.2—more
speciﬁcally, in a mathematical proof of the satisfaction of Requirement II.2, one can derive some assumptions from the informal
principles in Deﬁnition II.3, and require them of the other vehicles’ behaviors.

The second use of the RSS responsibility principles is that, as a participant in a trafﬁc scenario (that is thought of as a

multi-agent system), the subject vehicle (SV) must itself respect those principles:

Requirement II.4 (responsibility in RSS). An RSS safety rule R = (C, P) is required to satisfy the following:

Let E be an arbitrary execution of the proper response P; assume that the execution E starts at a state in which the
RSS safety condition C is true. Then the execution E respects the RSS responsibility principles (Deﬁnition II.3).

Requirement II.4 is expected to be mathematically proven, too. In doing so, one has to turn the RSS responsibility principles
(that are only informally stated, Deﬁnition II.3) into certain rigorous mathematical conditions, in a way speciﬁc to the driving
scenario in question. See Section IV for an example.

III. THE RSS FRAMEWORK
The elements of RSS that we have described constitute what we call the RSS framework, depicted in Figure 2. Each RSS
safety rule R = (C, P) is formulated for an individual driving scenario (“single-lane same-direction,” “cut in,” “crossing,” etc.)—
the design of the rule, as well as the proofs that it satisﬁes Requirements II.2–II.4, is heavily dependent on the choice of a
driving scenario. An example will be presented in Section IV.

In the proof of safety, it is assumed that other vehicles respect the RSS responsibility principles (Deﬁnition II.3)—otherwise
safety is often unachievable, see Figure 1. Conversely, it is needed to show that the SV respects the RSS responsibility
principles, so that other vehicles can rely on it when they plan their behaviors. This is Requirement II.4 (responsibility).

While concrete usages of the RSS framework are discussed later in Section V, we can already see that conceptual beneﬁts

of RSS are signiﬁcant.

For one, the RSS safety rules give a precise recipe for safe driving, in which 1) triggering conditions and control strategies
are speciﬁed in mathematical terms, and 2) safety is established through a mathematical proof. RSS can therefore be seen as
a promising approach to the goal of formal veriﬁcation of ADS safety.

Scenario S1RSS safety ruleR1= (C1,P1)RSS safety condition C1:Distance is no smaller than⌅RSSprinciplestolimitallowedbehaviors.1.4.3ExampleofanRSSRule:theSingle-LaneSame-DirectionScenarioFigure1.13:Theone-waytrafﬁcscenarioConsidertheone-waytrafﬁcscenarioshowninFig.1.13,wherethesubjectvehicle(carrear)drivesbehindanothercar(carfront).TheRSSruleforthissimplescenario,presentedin[38],consistsofthefollowing.⌅TheRSSconditionthatrequiresxf xr>max 0,vrr+12amaxr2+(vr+amaxr)22abrake,min v2f2abrake,max!.(1.11)Herexf,xrarethepositionsofthetwocars,andvf,vraretheirveloci-ties(theirdynamicsaremodeledinthe1-dimensionallanecoordinate).Theotherparametersareasfollows:risthemaximumresponsetimethatcarrearmighttaketoinitiatetherequiredbraking;amaxisthemaxi-mum(forward)accelerationrateofcarrear;abrake,ministhemaximumcom-fortablebrakingrateforcarrear;andabrake,maxisthemaximumemergencybrakingrateforcarfront.⌅The(RSS)properresponsethatdictatestheSV(carrear)toengagethemax-imumcomfortablebrakingwhenconditionEq.(1.11)isabouttobevio-lated.ItisnothardtoseethattheRSSconditionEq.(1.11)ispreservedbytheproperresponse,andthatthetruthoftheconditionEq.(1.11)ensuresxf>xr,i.e.nocollision.1.4.4UsagesofRSSRulesWecaneasilyimaginethat“rulesthatAVmustfollowforsafety”areimportantanduseful.Thefollowingareconcretewaysinwhichtheycanbeused.©2001byCRCPressLLCProper response P1:Full (non-emergency) brakingTheorem(safety).No collision, if P1is engaged at a state satisfying C1Theorem(responsibility).P1, engaged at a state satisfying C1, respects the RSS responsibility principlesScenario S2RSS safety ruleR2= (C2,P2)RSS safety condition C2:Distance is no smaller than …Proper response P2:Cut inTheorem(safety).No collision, if P2is engaged at a state satisfying C2Theorem(responsibility).P2, engaged at a state satisfying C2, respects the RSS responsibility principlesSV…RSS responsibility principles1.Don’t hit the car in front of you2.Don’t cut in recklessly3.Right of way is given, not taken4.Be cautious in areas with limited visibility5.If you can avoid a crash without causing another one, you mustguaranteeassumeUsages•Attribution of liability•Safety metric•Formal safety verification•Safety architecture•…SV4

Fig. 3: the single-lane same-direction scenario. The subject vehicle (SV) is following the other vehicle. The latter is called the
principal other vehicle (POV).

It is, however, unrealistic to expect that RSS realizes a world with zero trafﬁc accidents. Even if the SV acts according to
the RSS safety rules, other vehicles may not, especially those driven by human drivers. RSS is still useful in such situations
with trafﬁc accidents. The RSS responsibility principles explicate natural “contracts” that each trafﬁc participant is expected to
follow. These principles can therefore be used to identify who is liable for an accident—namely the one who did not respect
them.

The last argument can be turned upside down and yield the following:

a vehicle is not responsible for an accident as long as it respects the RSS responsibility principles.

This is an answer to a major challenge that is currently hindering large-scale deployment of automated driving, namely
the difﬁculty of determining the boundary of the responsibilities of automated driving systems and their manufacturers.

The above boundary of responsibilities is currently vague for ADS, which exposes the ADS manufacturers to the risk of
unexpected and exceeding liabilities. This risk is a big burden when a company wants to run an ADS business, potentially
blocking the development and deployment of the ADS technology. Clariﬁcation of the boundary of responsibilities is therefore
pursued by many parties, including standardization bodies such as ISO, UL, and SAE. Indeed, the use of RSS is often advocated
in these standardization efforts, among which the efforts towards the IEEE 2846 standard are particularly notable.4

IV. EXAMPLE: AN RSS SAFETY RULE FOR THE SINGLE-LANE SAME-DIRECTION SCENARIO

We exhibit an example of an RSS safety rule and its safety and responsibility proofs. The example is one of the ﬁrst examples

in the literature and is taken from [17].

A. The Scenario Sslsd

The driving scenario in question, denoted by Sslsd, has a single lane and two vehicles driving in the same direction. See
Figure 3: the vehicle behind is the one under our control (the subject vehicle (SV)); the SV drives behind another vehicle that
is called the principal other vehicle (POV).

The goal is to avoid collision regardless of the behavior of the principal other vehicle (POV). Here, however, we rule out
some unrealistic but physically possible behaviors of the POV from our consideration—such as the POV being hit by a comet
and suddenly coming to a halt.5 The worst case within our consideration is the POV engaging emergency braking and coming
to a halt in a short moment. We want the SV to stop without colliding with the POV. We want the SV to do so by comfortable
braking and not by emergency braking. Moreover, we have to take into account the response time, the time between the moment
the POV starts braking and the moment the SV starts its response. All these require a suitable distance between the POV and
the SV; the question is how large exactly the distance should be.

Note that the above restriction of the scenario’s scope (“no comet”) is similar to the use of the RSS responsibility principles,
although there is no explicit RSS principle that corresponds to the “no comet” assumption. The argument here is “if a collision
happens because of a comet, the SV is not held responsible,” which is logically parallel to one that uses RSS responsibility
principles such as “if a collision happens because of another vehicle’s reckless cut in, the SV is not held responsible.”

4https://sagroups.ieee.org/2846/
5The comet here is an example of the legal notion of act of God. https://en.wikipedia.org/wiki/Act of God

SV5

B. The RSS Safety Condition and the Proper Response

In [17], an RSS safety condition Cslsd and a proper response Pslsd are given as follows. They together constitute an RSS

safety rule Rslsd = (Cslsd, Pslsd).

1) The RSS Safety Condition Cslsd: The condition Cslsd is given by

(cid:32)

x f − xr > max

0, vrρ +

1
2

amaxρ 2 +

(vr + amaxρ)2
2abrake,min

−

v2
f
2abrake,max

(cid:33)

.

(1)

Here, the following are dynamic parameters that describe the current state of the driving situation:
• x f , xr are the positions of the front vehicle (POV) and the rear vehicle (SV), respectively6; and
• v f , vr are their velocities, respectively, modeled in the 1-dimensional lane coordinate.

Besides, the following are static parameters for the driving scenario—they do not change from one state to another. Their
values are decided according to trafﬁc laws, regional customs, vehicle specs, etc.:

• ρ is the maximum response time that the rear vehicle might take to initiate the required braking;
• amax is the maximum (forward) acceleration rate of the rear vehicle;
• abrake,min is the maximum comfortable braking rate for the rear vehicle; and
• abrake,max is the maximum emergency braking rate for the front vehicle. We assume 0 < abrake,min < abrake,max.

An example of these parameter values is found in [23]: ρ = 0.3 s, amax = 2 m/s2, abrake,min = 4 m/s2, and abrake,max = 8 m/s2.
2) The Proper Response Pslsd: A proper response is a control strategy that is expected to avoid any collision in the future,
no matter how other vehicles would behave (within a prescribed range of possible behaviors—recall the “no comet” argument
in the above). The proper response Pslsd in [17] is

to engage the maximum comfortable braking, after a response time that is no bigger than ρ. The behavior during
the response time is arbitrary.

The response time is included since otherwise the control strategy would be unrealizable. Note that there are in fact many
constraints on the behavior during the response time: some are physical (an instant acceleration to the speed of light is ruled
out, for example); others come from trafﬁc laws, the design of a car, etc. Among all the possible behaviors during the response
time, the worst case behavior is accelerating at the maximum rate amax.

We note that proper responses in RSS—such as Pslsd in the above—may be quite harsh, in the sense that they are undesirable
in view of other quality metrics than safety (such as comfort and fuel efﬁciency). We will discuss, later in Section V-D, how
frequent deployment of proper responses can be avoided.

C. The Safety Proof
Theorem IV.1 (safety of Rslsd). Let s be a state of the driving scenario Sslsd, and let the positions and the velocities of the
vehicles in s be denoted by x f , xr, v f , vr as described in Section IV-B.

Assume that the state s satisﬁes the RSS safety condition Cslsd. Consider an execution e of the proper response Pslsd that
starts at s and ends when the SV comes to a halt or collides into the POV. Then, no collision occurs in this execution e of
Pslsd.

The proof here follows the outline of the one presented in [17].

Proof. In the execution e of Pslsd in question, there are two arbitrary components: the behavior of the SV during the response
time, and the behavior of the POV. It is however obvious that the worst choices in terms of safety are 1) the SV accelerates at
the maximum rate amax, at the beginning of e, for the longest possible response time ρ, and 2) the POV engages the maximum
braking, namely at the rate abrake,max, for the whole period of e. In the rest of the proof, we assume these behaviors of the SV
and the POV without loss of generality.

We study the sign of the relative velocity of the SV with respect to the POV. To do so, we list up the possible patterns of

the time-varying relationship between the velocities of the SV and the POV. See Figure 4.

• In Case 1, the relative velocity of SV is always positive, therefore the inter-vehicle distance between the SV and the POV

becomes minimum when the SV comes to a halt.

• In Cases 2–3, the relative velocity of SV turns from negative to positive. Therefore the inter-vehicle distance becomes

minimum either at the start (at time 0) or when the SV comes to a halt.

• In Case 4, the relative velocity of SV is always negative, therefore the inter-vehicle distance becomes minimum at the

start (at time 0).

It is easy to see that the four cases are exhaustive (the assumption 0 < abrake,min < abrake,max is crucial here). It therefore sufﬁces
to ensure x f > xr both at time 0 and at the time when the SV comes to a halt.

6We ignore the lengths of the cars for simplicity.

6

SV
POV

SV
POV

SV
POV

SV
POV

y
t
i
c
o
l
e
v

0

ρ

y
t
i
c
o
l
e
v

0

ρ

y
t
i
c
o
l
e
v

0

ρ

y
t
i
c
o
l
e
v

0

ρ

time

(a) Case 1

time

(b) Case 2

time

(c) Case 3

time

(d) Case 4

Fig. 4: the velocities of the SV and the POV in Theorem IV.1. Note that the assumption 0 < abrake,min < abrake,max is crucial
here.

A necessary and sufﬁcient condition for avoiding collision at time 0 is, obviously,

x f − xr > 0.

(2)

A condition for avoiding collision at the time when the SV comes to a halt is derived as follows.
• The SV travels the distance vrρ + 1

The subsequent braking phase takes the time vr+amaxρ
abrake,min

2 amaxρ 2 during the response time, at the end of which its velocity reaches vr + amaxρ.
, during which the SV travels the distance 1
.
• To compute the distance that the POV travels until the SV comes to a halt, note ﬁrst that we can restrict to Cases 1–3 in
Figure 4—this is because the minimum inter-vehicle distance is at time 0 (not when the SV comes to a halt) in Case 4.
We can easily see that, in Cases 1–3, the POV comes to a halt earlier than the SV does. Therefore the traveled distance
for POV (until the SV comes to a halt) is 1

2 (vr + amaxρ) vr+amaxρ
abrake,min

.

2 v f

v f
abrake,max

• We conclude that, in Cases 1–3 (Case 4 can be ignored as argued in the above), the positions of the SV and the POV

when the SV comes to a halt are

(vr + amaxρ)2
2abrake,min
respectively. There is no collision at that moment if and only if

amaxρ 2 +

xr + vrρ +

1
2

and x f +

v2
f
2abrake,max

,

x f − xr > vrρ +

1
2

amaxρ 2 +

(vr + amaxρ)2
2abrake,min

−

v2
f
2abrake,max

.

(3)

The RSS safety condition (1) implies both (2–3), and thus ensures that there is no collision at the beginning or at the end
of an execution of Pslsd, which in turn ensures that there is no collision at any moment during the execution. This concludes
the proof.

D. The Responsibility Proof

The following is not a “theorem” in a rigorous sense—this is because the RSS responsibility principles (Deﬁnition II.3)
are not formally deﬁned conditions. We nevertheless provide an argument for it; such arguments are of great practical values,
when it comes to such matters as explainability to the public and attribution of liability.

Theorem IV.2 (responsibility of Rslsd). Assume the same setting as in Theorem IV.1. Then the execution of the proper response
Pslsd satisﬁes the RSS responsibility principles.

Proof. (an informal argument) The principles 1 and 5 are ensured by safety (Theorem IV.1). The other principles (2–4) do not
apply to the current driving scenario Sslsd.

Some usages of the RSS framework (Figure 2) have been already hinted in the above. Here we go into their details, providing

some pointers to related scientiﬁc studies and ongoing practical efforts at the same time.

V. USAGES OF RSS

7

A. Attribution of Liability

Attribution of liability is one of the ﬁrst applications that were pursued using RSS. We have already discussed it brieﬂy
in Section III: when a collision happened, the trafﬁc participant that did not comply with the RSS responsibility principles is
held liable. The validity of this reasoning is supported by the mathematical elements of RSS: the RSS safety rules, especially
their safety and responsibility requirements, ensure that there is no collision as long as all the trafﬁc participants adhere to the
RSS responsibility principles.

Here, the roles of RSS safety rules are twofold. For one, an RSS safety rule can be seen as a mathematical incarnation of
the RSS responsibility principles, one that enables a rigorous safety proof (the safety theorems in Figure 2). Another important
role is as an evidence of acting responsibly. The RSS responsibility principles are informal conditions; in contrast, RSS safety
rules are rigorous and mathematically checkable. Demonstration of the compliance with RSS safety rules is therefore a strong
evidence of acting responsibly, via the responsibility requirements for those rules (the responsibility theorems in Figure 2).

A comprehensive case study of such use of RSS is found in [18], where the RSS framework is applied to NHTSA pre-crash

scenarios.

B. As a Safety Metric

Safety metrics for ADS are an active topic of research, see e.g. [2], [19]–[21], [24]. The question here is how to evaluate the
safety of a trajectory of a vehicle. A naive metric can be given by the minimum distance—the minimum distance to obstacles
and other trafﬁc participants exhibited during the trajectory—but its limitations are obvious, too, such as the insensitivity to
the vehicle speed. A safety metric that has been commonly used is the time to collision (TTC).

It is straightforward to derive another safety metric from the last usage of RSS (Section V-A). This RSS safety metric
measures the degree with which a trajectory satisﬁes RSS safety rules: the margin with which the inequalities in the RSS
safety conditions are satisﬁed is its safety score. Violation of the RSS safety conditions results in a negative safety score.

Multiple variations and extensions are possible for the above (informal and rudimentary) notion of RSS safety metric. Several
of such are presented in [2]; among them are a metric that takes into account whether a proper response was engaged when
needed.

C. Formal Veriﬁcation of ADS Safety

Another obvious usage of RSS is for formal veriﬁcation of ADS safety. By proving that a vehicle’s control complies with RSS
safety rules, one can conclude the safety of the vehicle via the safety theorems of the RSS safety rules. Here, the “compliance
with RSS safety rules” means the following.
Deﬁnition V.1 (compliance with RSS safety rules). Let R = (R1, R2, . . . , Rn) be a list of RSS safety rules, where Ri = (Ci, Pi)
for each i ∈ {1, 2, . . . , n}. We say that a vehicle’s trajectory complies with R if, at each moment in the trajectory, either

• the RSS safety condition Ci is true for some i ∈ {1, 2, . . . , n}, or
• the proper response Pi is being executed for some i ∈ {1, 2, . . . , n}. Additionally, we require that this execution of Pi started

in a state in which the corresponding RSS safety condition Ci was true.

Theorem V.2 (safety of an RSS-compliant trajectory). Let R = (R1, R2, . . . , Rn) be a list of RSS safety rules, where Ri = (Ci, Pi)
for each i ∈ {1, 2, . . . , n}. Assume further that each rule Ri satisﬁes the safety requirement (Requirement II.2). If a vehicle’s
trajectory T complies with R (Deﬁnition V.1), then T exhibits no collision.

Proof. Consider an arbitrary moment of the trajectory T . If some RSS safety condition Ci is true at that moment, then there
is no collision at that moment—this follows from the remark immediately after Requirement II.2. If some proper response Pi
is being executed at that moment, the safety guaranteed in Requirement II.2 implies that no collision occurs then.

Towards the goal of mathematically proving safety of an ADS, it sufﬁces to ensure that every trajectory of the ADS complies
with some list of RSS safety rules in the sense of Deﬁnition V.1. This is the consequence of Theorem V.2. However, there are
two major challenges in ensuring the above.

• An ADS controller is a complex system, involving a number of numeric optimization algorithms and statistical machine

learning. Therefore, proving its compliance with RSS safety rules is hard.

• Compliance in the sense of Deﬁnition V.1 requires a comprehensive list R of RSS safety rules—otherwise there will be
moments that are not covered by any Ci or Pi. Obtaining such a comprehensive list will take an enormous effort: a safety
proof for a single safety rule is nontrivial already for a simple scenario (Section IV); and the number of driving scenarios
to be covered is huge.

8

Fig. 5: the simplex architecture

D. Safety Architecture

A promising “workaround” to the last two challenges in formal veriﬁcation (Section V-C) is the use of RSS in a safety

architecture.

A prototypical safety architecture is the simplex architecture shown in Fig. 5 [5], [16]. Here, the advanced controller (AC)
is a complex controller that pursues not only safety but also performance (such as comfort, progress, and fuel efﬁciency); the
baseline controller (BC) is a simpler controller with a strong emphasis on safety; and the decision module (DM) switches
between the two controllers. The DM tries to use the AC as often as possible for its superior performance. However, when the
DM ﬁnds that the current situation is safety critical, it switches to the BC whose behaviors are more predictable and easier to
analyze.

A notable feature of safety architectures such as the simplex architecture is that they enable formal veriﬁcation of a system
that contains a black-box component (such as the AC in the simplex architecture). It does so by “wrapping” the black-box
component with safety-centric components that closely monitor the black-box component and overtake control when it is
needed.

The elements of RSS map naturally to the simplex architecture:
• The DM makes use of RSS safety conditions. When they are about to be violated, the DM switches the control from the

AC to the BC.

• The BC implements proper responses. It thus executes a control strategy whose safety is guaranteed.
• If it so happens that the BC restores the RSS safety condition, then the DM switches the control back to the AC.

The way the resulting RSS-supervised controller operates reﬂects the argument in Section V-C: it lets the AC control as long
as some RSS safety condition Ci is true; once it comes close to violating all the RSS safety conditions, it executes a proper
response Pi to maintain safety. The possibility of switching back to the AC is advantageous for performance.

Such use of RSS in a safety architecture successfully addresses the two challenges in formal veriﬁcation (Section V-C).
• The complexity of the ADS controller becomes no problem since it is conﬁned to the AC—the safety of the whole

architecture is ensured exclusively by the properties of the DM and the BC.

• On the difﬁculty of obtaining a comprehensive list of RSS safety rules, a safety architecture offers a proactive and
best-effort alternative to formal veriﬁcation. Even if a rule list R = (R1, R2, . . . , Rn) does not cover all possible driving
scenarios, R can still be implemented in a safety architecture and ensure the safety of those scenarios which are covered
by R. (For those driving scenarios which are not covered, we just let the AC do its best to maintain safety). After all,
formal veriﬁcation is about analyzing a given controller (Section V-C), while safety architectures are about modifying the
controller (identiﬁed with the AC) and making it safe.

Such use of RSS in a safety architecture is advocated increasingly often. In fact, some recent papers such as [12, Fig. 1]

present RSS in the format of safety architectures, although they may not explicitly refer to the term “safety architecture.”

A. Making a Rule Set Comprehensive

VI. CURRENT STATE AND FUTURE DIRECTIONS

Towards the ultimate goal of ADS safety proofs, one important area of RSS that requires further work is the formulation
of RSS rules. As we already discussed, RSS rules are formulated and proved correct in a scenario-speciﬁc manner, and there
are a huge number of driving scenarios.

While a comprehensive RSS rule set is obviously important and desired, the path to it might seem endless. We nevertheless

believe that efforts in this direction are worthwhile.

• One reason is the use of the rules in a safety architecture (Section V-D). Even if the rule list R at hand is not comprehensive
(and hence not enough to prove the overall safety), the “best-effort” usage in a safety architecture ensures safety at least
for the scenarios that are already covered by R.

Decision Module(DM)Plant(P)AdvancedController (AC)BaselineController (BC)9

• Another reason is that RSS rules are irrevocable, with their correctness being mathematically established. Once derived,
they can be used for the coming dozens of years or even longer—they can be seen as common assets of humankind. With
more efforts thrown in for the formulation of RSS rules, the rule set grows monotonically.

B. Tool Support for Using, Deriving, and Verifying RSS Rules

Tool support for RSS has been pursued actively in recent years. One example is an implementation of some RSS rules: it is
offered as a library [9] that can be used in combination with simulation environments such as Baidu Apollo. This implementation
is for using RSS rules that have been already derived and veriﬁed.

Another area that calls for tool support is the derivation of RSS rules. As we discussed in Section V-D, RSS rule derivation
requires systematic and organized efforts, much like formal veriﬁcation by theorem proving. Therefore the task needs tool
support—much like tool support for theorem proving is given by proof assistants such as Coq [7] and Isabelle/HOL [11]—
otherwise the efforts will be marred with human errors.

Yet another area that calls for tool support is the (formal) veriﬁcation of RSS rules. Existing correctness proofs for RSS rules
(such as the ones in Section IV) are mathematical yet not formalized or mechanized; it is not hard to imagine human errors
in such proofs, especially when working with complex driving scenarios. The problem of giving formalized and mechanized
proofs to RSS rules is investigated in [14]. Their trial is based on a rigorous notion of signal; they argue that none of the
existing automated veriﬁcation tools is suited for the veriﬁcation problem. We believe that the use of theorem provers that
allow human interaction should be pursued. An example of such provers is KeYmaera X [8].

Note that the last two directions (derivation and veriﬁcation) are the motivation of the current introduction (namely building

a logical theory and formalization). We believe that our identiﬁcation of

• two requirements (Requirements II.2 and II.4) and
• their assume-guarantee relationship (Fig. 2)

in this paper is a necessary ﬁrst step in the two directions.

C. Permissive, and Thus Practical, RSS Rules

The scope of RSS rules is principally safety. They can sacriﬁce other practical performance metrics such as comfort, progress,

and fuel efﬁciency. For greater practical utility, it is desired that RSS rules are less conservative and more permissive.

One work in this direction is [13]; it proposes an extension of RSS in which the balance between safety and other performance

metrics is proactively adjusted. Other promising directions seem to include the following.

• Fine-grained formalization of the RSS responsibility principles, so that the formalization respects different trafﬁc circum-

stances (urban, rural, or highway), different regions and countries, and different driving cultures.

• RSS that is aware of intentions and knowledge. Responsibilities of other vehicles will be totally different depending on
whether the SV’s turn signal is blinking or not. Moreover, when SV makes a maneuver with its turn signal blinking, it
is also desired that the SV makes sure that other vehicles are aware of the turn signal.

• Enlarging the variety of proper responses. For example, [6] proposes an extension of the RSS rule in Section IV in which
swerves (in addition to braking) is allowed as evasive maneuvers [6]. This makes the corresponding safety condition much
weaker, and the RSS rule more permissive.

D. Perceptual Uncertainties

In the presence of perceptual uncertainties (such as errors in position measurement and object recognition), the perceived
values that RSS safety conditions depend on can be erroneous. Making RSS rules tolerant of such perceptual uncertainties is
pursued in [15]; the methodology used there is more generally formulated in [10] and used in combination with the modeling
and veriﬁcation framework Event-B [1].

A big source of perceptual uncertainties in modern ADS is its statistical machine learning components (neural networks to
be speciﬁc). One way to lessen such ML-related uncertainties is to enrich the output of an ML component. For example, the
use of DNNs’ conﬁdence scores is proposed in [3]. In [4], it is proposed to look at inconsistencies between perceptual data
of different modes.

Thanks are due to Clovis Eberhart, James Haydon, J´er´emy Dubut, Rose Borher, Tsutomu Kobayashi, Sasinee Pruekprasert,
Ahmet Cetinkaya, Xiaoyi Zhang, and Akihisa Yamada for discussions. The author is supported by ERATO HASUO Meta-
mathematics for Systems Design Project (No. JPMJER1603), JST.

ACKNOWLEDGMENT

10

REFERENCES

[1] Jean-Raymond Abrial, Michael Butler, Stefan Hallerstede, Thai Son Hoang, Farhad Mehta, and Laurent Voisin. Rodin: an open toolset for modelling

and reasoning in Event-B. STTT, 12(6):447–466, 2010.

[2] Niraj Altekar, Maria Elli, Jack Weast, Yan Chen, Jeffrey Wishart, Steven Como, Brendan Russo, and Emmanuel James. Driving safety performance
assessment metrics for ADS-equipped vehicles. SAE International Journal of Advances and Current Practices in Mobility, 2(5):2881–2899, apr 2020.

[3] Matt Angus, Krzysztof Czarnecki, and Rick Salay. Efﬁcacy of pixel-level OOD detection for semantic segmentation. CoRR, abs/1911.02897, 2019.
[4] Jeff Chow, Valerie Richmond, Mike Wang, Uriel Guajardo, Daniel Jackson, Nikos Arechiga, Geoffrey Litt, Soonho Kong, and Sergio Campos. Certiﬁed

Control: A New Safety Architecture for Autonomous Vehicles, 2020. preprint.

[5] T. L. Crenshaw, E. Gunter, C. L. Robinson, L. Sha, and P. R. Kumar. The simplex reference model: Limiting fault-propagation due to unreliable
components in cyber-physical system architectures. In 28th IEEE International Real-Time Systems Symposium (RTSS 2007), pages 400–412, 2007.
[6] R. de Iaco, S. L. Smith, and K. Czarnecki. Safe swerve maneuvers for autonomous driving. In 2020 IEEE Intelligent Vehicles Symposium (IV), pages

1941–1948, 2020.

[7] The Coq development team. The Coq proof assistant reference manual. LogiCal Project, 2004. Version 8.0.
[8] Nathan Fulton, Stefan Mitsch, Jan-David Quesel, Marcus V¨olp, and Andr´e Platzer. KeYmaera X: An axiomatic tactical theorem prover for hybrid

systems. In Amy P. Felty and Aart Middeldorp, editors, CADE, volume 9195 of LNCS, pages 527–538. Springer, 2015.

[9] Bernd Gaßmann, Fabian Oboril, Cornelius B¨urkle, Shuang Liu, Shoumeng Yan, Maria Soledad Elli, Ignacio J. Alvarez, Naveen Aerrabotu, Suhel Jaber,
Peter van Beek, Darshan Iyer, and Jack Weast. Towards standardization of AV safety: C++ library for responsibility sensitive safety. In 2019 IEEE
Intelligent Vehicles Symposium, IV 2019, Paris, France, June 9-12, 2019, pages 2265–2271. IEEE, 2019.

[10] Tsutomu Kobayashi, Rick Salay, Ichiro Hasuo, Krzysztof Czarnecki, Fuyuki Ishikawa, and Shin-ya Katsumata. Robustifying controller speciﬁcations of
cyber-physical systems against perceptual uncertainty. In Aaron Dutle, Mariano M. Moscato, Laura Titolo, C´esar A. Mu˜noz, and Ivan Perez, editors,
NASA Formal Methods - 13th International Symposium, NFM 2021, Virtual Event, May 24-28, 2021, Proceedings, volume 12673 of Lecture Notes in
Computer Science, pages 198–213. Springer, 2021.

[11] Tobias Nipkow, Lawrence C Paulson, and Markus Wenzel. Isabelle/HOL: a proof assistant for higher-order logic, volume 2283. Springer Science &

Business Media, 2002.

[12] Fabian Oboril and Kay-Ulrich Scholl. Risk-Aware Safety Layer for AV Behavior Planning. In 2020 IEEE Intelligent Vehicles Symposium, IV 2020, Las

Vegas, United States, October 19-22, 2020, page 7. IEEE, 2020.

[13] Fabian Oboril and Kay-Ulrich Scholl. RSS+: Pro-active risk mitigation for av safety layers based on rss. In 2021 IEEE Intelligent Vehicles Symposium,

IV 2021. IEEE, 2021.

[14] Nima Roohi, Ramneet Kaur, James Weimer, Oleg Sokolsky, and Insup Lee. Self-driving vehicle veriﬁcation towards a benchmark. CoRR, abs/1806.08810,

2018.

[15] Rick Salay, Krzysztof Czarnecki, Maria Soledad Elli, Ignacio J. Alvarez, Sean Sedwards, and Jack Weast. PURSS: towards perceptual uncertainty
aware responsibility sensitive safety with ML. In Hu´ascar Espinoza, Jos´e Hern´andez-Orallo, Xin Cynthia Chen, Se´an S. ´Oh ´Eigeartaigh, Xiaowei Huang,
Mauricio Castillo-Effen, Richard Mallah, and John McDermid, editors, Proceedings of the Workshop on Artiﬁcial Intelligence Safety, co-located with
34th AAAI Conference on Artiﬁcial Intelligence, SafeAI@AAAI 2020, New York City, NY, USA, February 7, 2020, volume 2560 of CEUR Workshop
Proceedings, pages 91–95. CEUR-WS.org, 2020.

[16] D. Seto, B. Krogh, L. Sha, and A. Chutinan. The simplex architecture for safe online control system upgrades. In Proceedings of the 1998 American

Control Conference. ACC (IEEE Cat. No.98CH36207), volume 6, pages 3504–3508 vol.6, 1998.

[17] Shai Shalev-Shwartz, Shaked Shammah, and Amnon Shashua. On a formal model of safe and scalable self-driving cars. CoRR, abs/1708.06374, 2017.
[18] A. Shashua, S. Shalev-Shwartz, and S. Shammah. Implementing the RSS model on NHTSA pre-crash scenarios. Technical report, Mobileye, 2018.
[19] Jordan Silberling, Paul Wells, Atul Acharya, Joseph Kelly, and John Lenkeit. Development and application of a collision avoidance capability metric.

In WCX SAE World Congress Experience. SAE International, apr 2020.

[20] Lingguang Wang, Carlos Fernandez Lopez, and Christoph Stiller. Realistic Single-Shot and Long-Term Collision Risk for a Human-Style Safer Driving.

In 2020 IEEE Intelligent Vehicles Symposium, IV 2020, Las Vegas, United States, October 19-22, 2020, page 8. IEEE, 2020.

[21] Bowen Weng, Sughosh Jagannatha Rao, Eeshan Deosthale, Scott Schnelle, and Frank Barickman. Model Predictive Instantaneous Safety Metric for
Evaluation of Automated Driving Systems. In 2020 IEEE Intelligent Vehicles Symposium, IV 2020, Las Vegas, United States, October 19-22, 2020,
page 8. IEEE, 2020.

[22] Glynn Winskel. The Formal Semantics of Programming Languages. The MIT Press, 1993.
[23] X. Xu, X. Wang, and X. Wu. Calibration and evaluation of responsibility-sensitive safety model on autonomous car-following maneuvers using naturalistic

driving study data. Transportation Research Board (TRB) Annual Meeting, 2020.

[24] Hengyu Zhao, Yubo Zhang, Pingfan Meng, Hui Shi, Erran Li, Tiancheng Lou, and Jishen Zhao. Safety score: A quantitative approach to guiding
safety-aware autonomous vehicle computing system design. In 2020 IEEE Intelligent Vehicles Symposium, IV 2020, Las Vegas, United States, October
19-22, 2020. IEEE, 2020.

