2
2
0
2

n
u
J

8

]

A
N
.
h
t
a
m

[

1
v
5
2
9
3
0
.
6
0
2
2
:
v
i
X
r
a

A projected Nesterov-Kaczmarz approach to stellar
population-kinematic distribution reconstruction in
Extragalactic Archaeology

Fabian Hinterer∗, Simon Hubmer†, Prashin Jethwa‡,
Kirk M. Soodhalter§, Glenn van de Ven¶, Ronny Ramlau‖∗∗

June 9, 2022

Abstract

In this paper, we consider the problem of reconstructing a galaxy’s stellar
population-kinematic distribution function from optical integral ﬁeld unit mea-
surements. These quantities are connected via a high-dimensional integral equa-
tion. To solve this problem, we propose a projected Nesterov-Kaczmarz recon-
struction (PNKR) method, which eﬃciently leverages the problem structure and
incorporates physical prior information such as smoothness and non-negativity
constraints. To test the performance of our reconstruction approach, we apply
it to a dataset simulated from a known ground truth density, and validate it by
comparing our recoveries to those obtained by the widely used pPXF software.
Keywords. Astrophysics, Galactic Archaeology, Inverse and Ill-Posed Problems,
Kaczmarz Method, Nesterov Acceleration, Large Scale Problems

1

Introduction

Galactic archaeology aims to study the formation and evolution of galaxies from obser-
vations in the local Universe, i.e., as viewed in the present day [15]. Information about a

∗Johannes Kepler University Linz, Institute of Industrial Mathematics, Altenbergerstraße 69, A-

4040 Linz, Austria, (fabian.hinterer@indmath.uni-linz.ac.at)
Institute Linz, Altenbergerstraße

†Johann Radon

69, A-4040 Linz, Austria,

(si-

mon.hubmer@ricam.oeaw.ac.at), Corresponding author.

‡University of Vienna, Department of Astrophysics, T¨urkenschanzstraße 17, A-1180 Vienna, Aus-

tria, (prashin.jethwa@univie.ac.at)

§Trinity College, School of Mathematics, Dublin 2, Ireland, (ksoodha@maths.tcd.ie)
¶University of Vienna, Department of Astrophysics, T¨urkenschanzstraße 17, A-1180 Vienna, Aus-

tria, (glenn.vandeven@univie.ac.at)

‖Johannes Kepler University Linz, Institute of Industrial Mathematics, Altenbergerstraße 69, A-

4040 Linz, Austria, (ronny.ramlau@jku.at)
Linz,

Institute
(ronny.ramlau@ricam.oeaw.ac.at)

∗∗Johann

Radon

Altenbergerstraße

69,

A-4040

Linz,

Austria,

1

 
 
 
 
 
 
galaxy’s past can be inferred from present-day observations since certain quantities are
approximately conserved throughout galactic evolution. The quantities describe stellar-
orbits, which can be inferred from measured stellar kinematics, and stellar-population
properties such as age and chemistry. In the Milky Way for example, judicious selections
in population-kinematic space have led to the discovery of an ancient, massive galaxy
merger in the inner-halo of our Galaxy [5, 20]. For external galaxies, where individual
stars cannot be resolved, the task of extragalactic archaeology becomes more diﬃcult.
The outskirts of galaxies are ﬁlled by stellar debris of ongoing mergers (see Fig-
ure 1.1), and upcoming deep imaging surveys e.g. [32] will detect such debris around
thousands of nearby galaxies. Spectroscopic data is a powerful complement to imaging
and oﬀers access to stellar-population and stellar-kinematic information. Integral-ﬁeld
unit (IFU) datacubes combine the two types of data: they are 2D images with a third
dimension of spectral wavelength per image pixel. Several surveys have obtained IFU
datacubes for thousands of galaxies e.g. [8, 41, 42, 44] though these are typically lim-
ited to relatively small ﬁelds-of-view. These datasets could be treasure troves to detect
ancient, massive merger remnants in the central regions of galaxies e.g. [54].

Figure 1.1: Three galaxies surrounded by the remnants of ongoing galactic mergers.
The inset yellow square shows the smaller ﬁeld of view of the MUSE IFU instrument
on the Very Large Telescope (VLT) of the European Southern Observatory (ESO).
Stellar population-kinematic modelling in the centers of galaxies may reveal ancient
mergers. Images adapted from the Stellar Stream Legacy Survey [32].

Typical IFU data-analyses are not optimised for galactic archaeology. These analy-
ses spatially bin the datacube into local spectra [10] which are modelled independently
using spectral ﬁtting tools e.g. [9]. By spatially binning the datacube, we limit what we
can detect: global signals which are present when the datacube is considered altogether
may be hidden in the noise when it is dissected into independent regions. Physically,
we expect global signals to exist, since orbital dynamics act to disperse features over
large areas. Our goal in this paper is to develop a technique for full datacube-modelling
for stellar population-kinematic modelling of galaxies.

2

Existing tools for 3D-datacube modelling of galaxies have limitations which make
them unsuitable for galactic archaeology. To date, they all assume a disk model for
the galaxy and/or ﬁt data only for a single gas emission-line [4, 6, 11, 40, 47, 50]. Sin-
gle line data is not suﬃcient for stellar modelling, where several absorption features
must be simultaneously considered. Disk-models are not ﬂexible enough for galactic ar-
chaeology, since satellite mergers can deposit stars on signiﬁcantly non disk-like orbits.
Though diﬀerent disk models make very diﬀerent assumptions - e.g. some based on a
tilted-rings, or parametric or non-parametric rotation curves - none of these are able to
capture the diversity of possible galactic orbits. For our proposed method, we therefore
will use a non-parametric description of the stellar distribution function, instead pro-
moting model-independent physical prior-information such as spatial smoothness and
non-negativity constraints in the recovery.

Mathematically, we will see that this reconstruction problem amounts to solving
a very large scale inverse problem resulting from an integral equation with a speciﬁc
system structure. In this paper, we mathematically analyse this problem and propose
a projected Nesterov-Kaczmarz reconstruction (PNKR) method for its solution. The
PNKR method leverages the system structure and incorporates the available physi-
cal prior information, resulting in an accurate and numerical eﬃcient algorithm. We
demonstrate the performance of the PNKR method on numerical tests, including a
comparison of our recoveries to those obtained by the widely used pPXF software [9].
The outline of this paper is as follows: In Section 2, we review the necessary as-
trophysical background of galactic archaeology, and in Section 3 derive a mathematical
model for the corresponding density reconstruction problem.
In Section 4, we then
introduce our PNKR method for the eﬃcient solution of this problem, which we test
and validate numerically in Section 5, followed by a short conclusion in Section 6.

2 Astrophysical background

In this section, we derive a mathematical model for galactic archaeology. Our aim is to
infer the galaxy’s stellar population distribution function f = f (x, v, z, t) from optical
integral ﬁeld spectroscopy measurements y = y(x, λ). As indicated, these functions
depend on the following variables:

• x = (x1, x2) denoting 2D positional coordinates,

• v denoting the velocity along the line-of-sight of stars in the galaxy

• z denoting the metal content of the stellar population, also known as metallicity,

• t denoting the age of the stellar population,

• λ denoting the wavelength of measured light

The target function f therefore encodes the distribution of galaxy stars in the 5D space
of (2D) position, velocity, age and metallicity. IFU data are obtained from telescope

3

observations, where light from a 2D image is split into constituent wavelengths. Though
diﬀerent instrument designs achieve this goal in diﬀerent ways (e.g. using microlens
arrays, ﬁber bundles, or image splitters) standard instrument pipelines convert the
raw-data into the 3D datacube y(x, λ), which we take as the input for our problem.

The distribution function f and the data y are connected via templates of single-
stellar population (SSP) spectra S = S(λ; z, t). These are tabulated functions which
describe the rest-wavelength spectrum of a stellar population, i.e. the ﬂux of light per
wavelength interval of a population of stars with metal content z and age t, which is
stationary with respect to the observer. The template spectra S(λ; z, t) are determined
empirically from the spectra of nearby stars and isochrone models, and hence are known
to a high degree of accuracy. Figure 2.1 shows some examples of the MILES SSP
models [51], which we adopt in this work. The distribution function f itself is normalised
such that the total stellar mass of the galaxy is given by

(cid:90) (cid:90) (cid:90) (cid:90)

M ∗

total =

f (x, v, z, t) dx dv dz dt ,

(2.1)

and f must be everywhere non-negative.

Figure 2.1: SSP templates S(λ; z, t). We show the MILES SSP models as a function of
wavelength at four ages t labelled with units Gyr and three metallicities z with units
of [M/H] i.e. the logarithmic ratio of metal to hydrogen content, where we use the
astronomy nomenclature of metal to mean any element heavier than helium. Note that
the range of the y-axis is scaled independently for each panel.

4

The relationship between f , S, and y can be expressed as

(cid:90) zmax

(cid:90) vmax

(cid:90) tmax

zmin

vmin

tmin

1
1 + v/c

S

(cid:18) λ

1 + v/c

(cid:19)

; t, z

f (x, v, z, t) dt dv dz = y(x, λ) ,

(2.2)

where c denotes the speed of light in vacuum. This is similar to the equation used to
model a single spectrum e.g. see [9, Equation 11]. The integrals over z and t allow for
galaxies to host a superposition of stellar populations, and the factors of 1+v/c perform
Doppler shifting of light from the rest-wavelength to the observed wavelength given a
line-of-sight velocity v. A diﬀerence with respect to the single spectrum equation is
that the full joint-distribution f (x, v, z, t) appears in equation (2.2). In contrast, the
single spectrum model must make the assumption that f can be factorised as

f (x, v, z, t) = f1(x)f2(v|x)f3(t, z|x) .

(2.3)

This factorisation asserts that locally, kinematics and populations are independent.
This assumption is known to be invalid in the Milky Way, where signiﬁcant correlations
between stellar age and velocity dispersion are observed in the solar neighbourhood [45].
Hence, in addition to detecting weak features, a beneﬁt of modelling the full datacube
rather than single spectra is that we are no longer forced to assume the factorisation in
equation (2.3).

3 Mathematical model

Equation (2.2) can be written in a simpler form by grouping the variables v, z, t together
into the vector θ := (v, z, t) and deﬁning

k(θ, λ) := k(v, z, t, λ) :=

1
1 + v/c

S

(cid:18) λ

1 + v/c

(cid:19)

; t, z

.

With this, (2.2) can be written in the form

(cid:90)

Θ

k(θ, λ)f (x, θ) dθ = y(x, λ) ,

(3.1)

(3.2)

where the set Θ ⊂ R3 is deﬁned by

Θ := (cid:8)θ = (v, z, t) ∈ R3 | v ∈ (vmin, vmax) , z ∈ (zmin, zmax), t ∈ (tmin, tmax)(cid:9) .

(3.3)

Equation (3.2) closely resembles a Fredholm integral equation of the ﬁrst kind in stan-
dard form, which suggests to consider its solution within the framework of linear (ill-
posed) operator equations [13]. For this, we start by making the following

Assumption 3.1. Let vmin < vmax, zmin < zmax, tmin < tmax, and λmin < λmax be pos-
itive real numbers, and let Ω ⊂ R2 be bounded and Jordan measurable. Furthermore,
let Θ ⊂ R3 be deﬁned as in (3.3) and let Λ := (λmin, λmax) ⊂ R. In addition, let the
function S = S(λ; z, t) be such that for k deﬁned as in (3.1) there holds k ∈ L2 (Θ × Λ).

5

The assumption that k ∈ L2 (Θ × Λ) is physically meaningful, as can also be seen
from the spectra S(λ; z, t) depicted in Figure 2.1. Using this, we now make the following
Deﬁnition 3.1. Let Assumption 3.1 hold and let 0 ≤ s ∈ R. Then we deﬁne

K : H s (Ω × Θ) → L2 (Ω × Λ) ,

f (cid:55)→ (Kf )(x, λ) :=

(cid:90)

Θ

k(θ, λ)f (x, θ) dθ ,

(3.4)

where H s (Ω × Θ) denotes the standard Sobolev space of order s as deﬁned e.g. [1].

With this deﬁnition, (3.2) can be rewritten as the linear operator equation

Kf = y .

(3.5)

Note that by choosing the Sobolev space H s (Ω × Θ) as the deﬁnition space of K, we
implicitly made the physically motivated assumption that the true distribution function
f is smooth in all variables. Hence, we arrive at the following mathematical
Problem 1. Let Assumption 3.1 hold and let y ∈ L2 (Ω × Λ). Furthermore, let 0 ≤
s ∈ R and let K : H s (Ω × Θ) → L2 (Ω × Λ) be deﬁned as in (3.4). Then the galactic
archaeology problem with continuous wavelength measurements consists in ﬁnding a
function f ∈ H s (Ω × Θ) which satisﬁes the operator equation (3.5).

A number of basic properties of the integral operator K are collected in

Lemma 3.1. Let Assumption 3.1 hold and let 0 ≤ s ∈ R. Then the linear operator
K : H s (Ω × Θ) → L2 (Ω × Λ) deﬁned in (3.4) is bounded. Furthermore, the adjoint
operator K ∗ of K is given by

(K ∗y)(x, θ) = E∗
s

k(θ, λ)y(x, λ) dλ

(cid:19)

(cid:18)(cid:90)

Λ

(3.6)

where Es : H s (Ω × Θ) → L2 (Ω × Θ) denotes the Sobolev embedding operator.
Proof. For any f ∈ H s (Ω × Θ), using the Cauchy-Schwarz inequality we obtain

(cid:90)

(cid:90)

(cid:90)

f (x, θ)k(θ, λ)dθ

(cid:12)
(cid:12)
(cid:12)
(cid:12)

2

(cid:12)
(cid:12)
(cid:12)
(cid:12)

dλ dx

(cid:107)Kf (cid:107)2

L2(Ω×Λ) =
(cid:90)
(cid:90)

(cid:90)

≤

Ω

Λ

Θ

Λ

Θ

Ω
|f (x, θ)|2 dθ

(cid:90)

Θ

|k(θ, λ)|2 dθ dλ dx = (cid:107)k(cid:107)2

L2(Θ×Λ) (cid:107)f (cid:107)2

L2(Ω×Θ) .

Together with the Sobolev embedding inequality [1]

(cid:107)f (cid:107)L2(Ω×Θ) ≤ Cs (cid:107)f (cid:107)H s(Ω×Θ) ,

∀ s ∈ R ,

(3.7)

this yields boundedness of K. Next, for f ∈ H s (Ω × Θ) and y ∈ L2 (Ω × Λ) consider

(cid:104) Kf, y (cid:105)L2(Ω×Λ) =
(cid:90)

(cid:18)(cid:90)

(cid:90)

(cid:90)

(cid:90)

(cid:18)(cid:90)

Ω

Λ

Θ

k(θ, λ)f (x, θ) dθ

y(x, λ) dλ dx

(cid:19)

(cid:19)

=

k(θ, λ)y(x, λ) dλ

Ω
(cid:28) (cid:90)

=

Θ

Λ

k(·θ, λ)y(·x, λ) dλ , Esf

Λ

f (x, θ) dθ dx

(cid:29)

L2(Ω×Θ)

(cid:28)

=

E∗
s

(cid:18)(cid:90)

Λ

k(·θ, λ)y(·x, λ) dλ

, f

(cid:19)

(cid:29)

H s(Ω×Θ)

which establishes that the adjoint K ∗ of K is given as in (3.6).

6

In practice, measurement data y(x, λ) are only available for ﬁnitely many wave-
lengths λr, r ∈ {1 , . . . , R}. Hence, instead of via (3.2) one has to estimate the distri-
bution f from given data y(x, λr) via the system of integral equations

(cid:90)

Θ

k(θ, λr)f (x, θ) dθ = y(x, λr) ,

∀ r ∈ {1 , . . . , R} .

(3.8)

This in turn leads us to making the following

Deﬁnition 3.2. Let Assumption 3.1 hold and let R ∈ N. Furthermore, let λr ∈ Λ for
all r ∈ {1 , . . . , R}. Then for any 0 ≤ s ∈ R we deﬁne the integral operators

Kr : H s (Ω × Θ) → L2 (Ω) ,

f (cid:55)→ (Krf )(x) :=

(cid:90)

Θ

k(θ, λr)f (x, θ) dθ ,

(3.9)

as well as the composite operator

K : H s (Ω × Θ) → L2 (Ω)R ,

f (cid:55)→ Kf := (K1f , . . . , KRf ) .

(3.10)

It follows with this deﬁnition that given a set of measurement data of the form

y = (yr)R

r=1 = (y(x, λr))R

r=1 ,

(3.11)

the system of integral equations (3.8) can be written as the linear operator equation

Kf = y .

(3.12)

This allows us to formulate the following mathematical

r=1 ∈ L2 (Ω)R. Fur-
Problem 2. Let Assumption 3.1 hold, let R ∈ N and let y = (yr)R
thermore, let λr ∈ Λ for all r ∈ {1 , . . . , R}, let 0 ≤ s ∈ R, and let K : H s (Ω × Θ) →
L2 (Ω)R be deﬁned as in (3.10). Then the galactic archaeology problem with discrete
wavelength measurements consists in ﬁnding a function f ∈ H s (Ω × Θ) which satisﬁes
the operator equation (3.12).

A number of basic properties of the operators K and Kr are collected in

Lemma 3.2. Let Assumption 3.1 hold and let R ∈ N. Furthermore, let λr ∈ Λ for
all r ∈ {1 , . . . , R} and let 0 ≤ s ∈ R. Then the linear operators Kr : H s (Ω × Θ) →
L2 (Ω) and K : H s (Ω × Θ) → L2 (Ω)M deﬁned as in (3.9) and (3.10), respectively, are
bounded. Furthermore, for any y = (yr)R
r of Kr
are given by

r=1 ∈ L2 (Ω)R the adjoint operators K ∗

(K ∗

r yr)(x, θ) = E∗

s (k(θ, λr)yr(x)) ,

(3.13)

and the adjoint K ∗ of the operator K is given by

(K ∗y)(x, θ) =

R
(cid:88)

r=1

(K ∗

r yr)(x, θ) = E∗
s

(cid:32) R
(cid:88)

r=1

(cid:33)

k(θ, λr)yr(x)

,

(3.14)

where as before Es : H s (Ω × Θ) → L2 (Ω × Θ) denotes the Sobolev embedding operator.

7

Proof. Let f ∈ H s (Ω × Θ) be arbitrary but ﬁxed and consider

(cid:90)

(cid:90)

k(θ, λr)f (x, θ) dθ

(cid:12)
(cid:12)
(cid:12)
(cid:12)

2

(cid:12)
(cid:12)
(cid:12)
(cid:12)

dx

(cid:107)Krf (cid:107)2
L2(Ω) =
(cid:90)
(cid:90)

≤

Ω

Θ

Ω

Θ
|k(θ, λr)|2 dθ

(cid:90)

Θ

|f (x, θ)|2 dθ dx = (cid:107)k(·, λr)(cid:107)2

L2(Ω) (cid:107)f (cid:107)2

L2(Ω×Θ) .

Together with (3.7) this yields the boundedness of the Kr and thus, by its deﬁnition
(3.10) also the boundedness of K. Next, for f ∈ H s (Ω × Θ) and yr ∈ L2 (Ω) it follows
with Fubini’s theorem that

(cid:104) Krf, yr (cid:105)L2(Ω) =
(cid:90)

(cid:90)

(cid:90)

(cid:18)(cid:90)

Ω

Θ

k(θ, λr)f (x, θ) dθ

yr(x) dx

(cid:19)

=

k(θ, λr)yr(x) f (x, θ) dθ dx

Ω

Θ

= (cid:104) k(·θ, λr)yr(·x) , Esf (cid:105)L2(Ω×Θ) = (cid:104) E∗

s (k(·θ, λr)yr(·x)) , f (cid:105)H s(Ω×Θ) ,

which establishes that the adjoint K ∗
deﬁnition (3.10) of K it follows that for each y = (yr)R

r of Kr is given as in (3.13). Furthermore, by the

(cid:104) Kf, y (cid:105)L2(Ω)R =

(cid:42)

(cid:104) Krf, yr (cid:105)L2(Ω) =

f,

R
(cid:88)

r=1

R
(cid:88)

r=1 ∈ L2 (Ω)R there holds
(cid:43)

K ∗

r yr,

,

r=1

H s(Ω×Θ)

which shows that the adjoint K ∗ is given as in (3.14), which concludes the proof.

Note that for the function f to be physically meaningful, there has to hold

f (x, v, z, t) = f (x, θ) ≥ 0 ,

∀ x ∈ Ω , θ = (v, z, t) ∈ Θ .

(3.15)

This has to be kept in mind when solving the galactic archaeology problem and shall
be addressed when considering solution approaches in the subsequent section.

4 Reconstruction approach - the PNKR method

In this section, we consider diﬀerent reconstruction approaches for the galactic archae-
ology Problem 2, which amounts to solving the linear operator equation (3.12), i.e.,

Kf = y .

In practice, instead of exact data y = (yr)R
measurement data yδ = (yδ

r)R

r=1, which can be assumed to satisfy the estimate

r=1 one typically only has access to noisy

(cid:13)
(cid:13)yδ

r − yr

(cid:13)
(cid:13) ≤ δr ,

8

for some given noise levels δr. Deﬁning the total noise level

δ2 :=

R
(cid:88)

r=1

δ2
r ,

our given data yδ are thus assumed to satisfy the the estimate

(cid:13)yδ − y(cid:13)
(cid:13)

(cid:13) ≤ δ .

In general, solving (3.12) is an ill-posed problem, with the degree of ill-posedness de-
pending on the value of s in the deﬁnition space H s (Ω × Θ) of K. Thus, regularization
is necessary in order to obtain stable approximations of solutions to (3.12), in particular
in the presence of noisy data yδ; see e.g. [13, 31]. Hence, in this section we ﬁrst review
some necessary background on regularization methods, in particular on Kaczmarz meth-
ods. These have the beneﬁt of leveraging the system structure of the problem, and form
the basis of the PNKR method for its solution which we then introduce below.

4.1 Variational and iterative regularization methods

One of the most popular regularization method is Tikhonov regularization [13,48], which
determines an approximation f δ

α to the minimum-norm solution f † by minimizing

α (f ) := (cid:13)
T δ

(cid:13)Kf − yδ(cid:13)
2
(cid:13)

+ α (cid:107)f (cid:107)2 .

The minimizer of this functional can be stated explicitly as

α = (K ∗K + αI)−1 K ∗yδ ,
f δ

(4.1)

where I denotes the identity operator. Tikhonov regularization has been used suc-
cessfully in many applications, in particular since it can be adapted to include many
diﬀerent assumptions on the sought for solution such as regularity or sparsity with
respect to a given basis. Alternatively, one can directly use iterative regularization
methods for solving (3.12). Popular choices include e.g. Landweber iteration, given by

k+1 = f δ
f δ

k + ωK ∗(yδ − Kf δ

k ) ,

(4.2)

where ω is a stepsize parameter, or conjugate-gradient for the normal equations (CGNE),
which is the method of conjugate gradients (CG) applied to

K ∗Kf = K ∗yδ .

In order to be regularization methods, iterative regularization methods usually need
to be paired with a suitable stopping rule to terminate the iteration. A very popular
choice is the discrepancy principle, which determines the stopping index k∗ as

k∗ := inf (cid:8)k ∈ N | (cid:13)

(cid:13)Kf δ

k − yδ(cid:13)

(cid:13) ≤ τ δ(cid:9) ,

(4.3)

9

for some parameter τ > 1. Among iterative methods, CGNE often requires the smallest
amount of iterations if the discrepancy principle is used for stopping the iteration [13].
However, it is not always the best choice in practice: For example, incorporating addi-
tional assumptions on the solution such as sparsity constraints is not straightforward,
as the method itself is not very ﬂexible. On the other hand, this is particularly easy to
in the case
do with Landweber iteration and its many diﬀerent variants, leading e.g.
of sparsity constraints to such methods as ISTA. Furthermore, even though in its basic
form Landweber iteration is known to be quite slow, many successful attempts have
been made to speed it up considerably [2, 19, 21, 22, 25, 28, 34, 36, 37, 39, 43].

However, both for CGNE and most of the variants of Landweber iteration, the oper-
ators K and K ∗ need to be applied at each iteration step. While typically of no concern
in small or medium scale problems, for large scale problems such as our galactic archae-
ology problem, the numerical eﬀort required to do so can often become problematic.
Although in some applications a model reduction or a lower order approximation of the
operators K and K ∗ can be employed as an eﬀective remedy, here we propose to use
the underlying system structure of (3.12) to our advantage. In particular, we propose
to use a speciﬁc modiﬁcation of the Landweber-Kaczmarz approach outlined below.

The classic Landweber-Kaczmarz method for solving (3.12) is deﬁned by

k+1 = f δ
f δ

k + ωK ∗

[k](yδ

[k] − K[k]f δ

k ) ,

where ω is again a stepsize-parameter and

[k] := (k mod R) + 1 ∈ {1 , . . . , R} .

(4.4)

(4.5)

Note that in each step of the this method only the operators K[k] and K ∗
[k], but not the
full operators K and K ∗ need to be applied, which makes each iteration step compu-
tationally more eﬃcient than, e.g., classic Landweber iteration (3.12). Concerning the
choice of a suitable stopping rule, note that while its possible to use the discrepancy
principle (4.3), here it also makes sense to check the component-wise discrepancy

(cid:13)
(cid:13)K[k]f δ

k − yδ
[k]

(cid:13)
(cid:13) ,

and only update the current iterate if this quantity is larger than τ δ[k]. This can be
eﬀected by deﬁning the iteration dependent stepsize

ωδ

k :=

(cid:40)

ω ,

0 ,

(cid:13)
(cid:13)
(cid:13)K[k]f δ
else ,

k − yδ
[k]

(cid:13)
(cid:13)
(cid:13) > τ δ[k] ,

and instead of (4.4) using the adapted iterative procedure

k+1 = f δ
f δ

k + ωδ

kK ∗

[k](yδ

[k] − K[k]f δ

k ) .

(4.6)

(4.7)

The convergence properties of this adapted Landweber-Kaczmarz method haven been
analysed previously both for linear and for nonlinear operators [12, 13, 18, 27, 29]. Note

10

that the constant stepsize ω in (4.6) can also be replaced by an iteration dependent
stepsize αδ
k such as the steepest descent or the minimal error stepsize [27].

We propose to adapt the Landweber-Kaczmarz method (4.7) for solving the extra-
galactic archaeology Problem 2 by including two modiﬁcations of the method concerning
eﬃciency and physical prior information as outlined below. Together with a speciﬁc dis-
cretization this will then yield the PNKR method. In order to deﬁne this discretization,
we ﬁrst need to consider a general discretization of the Landweber-Kaczmarz method.

4.2 The discrete Landweber-Kaczmarz method

There exist a number of ways to derive discrete versions of (iterative) regularization
methods such as the Landweber-Kaczmarz method; see e.g. [13]. These commonly
involve projections onto ﬁnite dimensional subspaces of the deﬁnition and/or image
space of the underlying operator. Here, we consider the ﬁnite dimensional subspaces

XM := span {φ1(x, θ) , . . . , φM (x, θ)} ⊂ H s (Ω × Θ) ,
YN := span {ψ1(x) , . . . , ψN (x)} ⊂ L2 (Ω) ,

(4.8)

where the functions φm(x, θ) and ψm(x) denote linearly independent basis functions to
be speciﬁed below. Next, denote by P and Q the orthogonal projectors onto XM and
YN , respectively, and deﬁne the operators ˜Kr := QKrP . With this, we can introduce
the following discrete version of the Landweber-Kaczmarz method (4.7):

˜f δ
k+1 = ˜f δ

k + ˜ωδ
k

˜K ∗

[k](Qyδ

[k] − ˜K[k]

˜f δ
k ) ,

where the discrete version ˜ωδ

k of the stepsize ωδ
(cid:13)
˜K[k]f δ
(cid:13)
(cid:13)
else .

ω ,

0 ,

(cid:40)

k is given by
(cid:13)
(cid:13)
(cid:13) > τ δ[k] ,

k − Qyδ
[k]

˜ωδ

k :=

(4.9)

(4.10)

This iteration (4.9) can be written in a matrix-vector form, for which we ﬁrst need

Deﬁnition 4.1. Let s ∈ R, let Θ ⊂ R3 be deﬁned as in (3.3), and let Ω ⊂ R2
be bounded and Jordan measurable. Furthermore, let {φm}M
m=1 ⊂ H s (Ω × Θ) and
{ψn}N
n=1 ⊂ L2 (Ω) denote two sets of linearly independent functions and let the ﬁnite
dimensional spaces XM and YN be deﬁned as in (4.8). Then we deﬁne the matrices

(cid:16)

M :=

(cid:104) φi, φj (cid:105)XM

(cid:17)M

i,j=1

,

and

N :=

(cid:16)

(cid:104) ψi, ψj (cid:105)YN

(cid:17)N

i,j=1

.

Furthermore, for all r = 1, . . . , R, for yδ

(cid:16)

H r :=

(cid:104) ψj, Krφi (cid:105)YN

(cid:17)N,M

j,i=1

,

r ∈ Y and with Kr as in (3.9) we deﬁne
(cid:16)(cid:10) yδ

and

wδ

(cid:17)N

.

r, ψj

r :=

(cid:11)
YN

j=1

(4.11)

(4.12)

11

The matrices M and N can be used to characterize the projections onto the sub-

spaces XM and YN , respectively. For example, for any ˜w ∈ Y there holds

Q ˜w =

N
(cid:88)

j=1

˜wjψj

⇐⇒

N ( ˜wj)N

j=1 = ((cid:104) ˜w, ψj (cid:105))N

j=1 ,

(4.13)

and similarly for the projector P onto XM . Using this, we can now follow the standard
approach for discretizing iterative regularization methods, see e.g. [13], and derive
Proposition 4.1. Let s ∈ R, let Θ ⊂ R3 be deﬁned as in (3.3), and Ω ⊂ R2
be bounded and Jordan measurable. Furthermore, let {φm}M
m=1 ⊂ H s (Ω × Θ) and
{ψn}N
n=1 ⊂ L2 (Ω) denote two sets of linearly independent functions and let the ﬁnite
dimensional spaces XM and YN be deﬁned as in (4.8). Furthermore, for all r = 1, . . . , R
let Kr be as in (3.9), yδ
r be deﬁned as in (4.11) and
(4.12), respectively. Then for the iterates ˜f δ

r ∈ Y and let M , N , H r, and wδ

k deﬁned in (4.9) there holds

˜f δ
k =

M
(cid:88)

i=1

uδ
i,kφi ,

where the coeﬃcients uδ

k = (cid:0)uδ
k+1 = uδ

(cid:1)M
i=1
k + ˜ωδ

i,k

uδ

are given by the iteration
[k]N −1 (cid:0)wδ

[k] − H [k]uδ
k

kM −1H T

(4.14)

(cid:1) ,

(4.15)

which is also called the discrete Landweber-Kaczmarz method.

Proof. Since the functions φm form a basis of XM , the iteration (4.9) is equivalent to

(cid:68) ˜f δ

k+1, φm

(cid:69)

XM

(cid:68) ˜f δ

k , φm

(cid:69)

=

+ ˜ωδ
k

XM

(cid:68) ˜K ∗

[k](Qyδ

[k] − ˜K[k]

˜f δ
k ), φm

(cid:69)

,

XM

(4.16)

∀ m ∈ {1 , . . . , M } .

k ∈ XM for any k ∈ N, it can be decomposed as in (4.14) for

. Inserting (4.14) into (4.16) we thus obtain

Now since by deﬁnition ˜f δ
k = (cid:0)uδ
some coeﬃcients uδ
(cid:43)

i,k

(cid:42) M
(cid:88)

uδ
i,k+1φi, φm

(cid:1)M
i=1
(cid:42) M
(cid:88)

=

i=1

i=1

XM

(cid:42)

(cid:32)

+ ˜ωδ
k

˜K ∗
[k]

Qyδ

[k] − ˜K[k]

(cid:43)

uδ
i,kφi, φm

(cid:32) M
(cid:88)

i=1

XM

(cid:33)(cid:33)

(cid:43)

uδ
i,kφi

, φm

XM

,

∀ m ∈ {1 , . . . , M } .

Using the linearity of the inner product and the fact that ˜Kr = QKrP we ﬁnd that

M
(cid:88)

i=1

uδ
i,k+1 (cid:104) φi, φm (cid:105)XM

=

(cid:42)

(cid:32)

M
(cid:88)

i=1

+ ˜ωδ
k

K ∗

[k]Q

yδ
[k] −

uδ
i,k (cid:104) φi, φm (cid:105)XM

M
(cid:88)

i=1

,

∀ m ∈ {1 , . . . , M } ,

(4.17)

(cid:33)

(cid:43)

uδ
i,kK[k]φi

, φm

XM

12

Next, we use (4.13) for the choice ˜w := yδ

[k] and obtain that

Qyδ

[k] =

N
(cid:88)

(cid:16)

j=1

N −1 (cid:0)(cid:10) yδ

[k], ψn

(cid:11)(cid:1)N

(cid:17)

n=1

j

ψj =

N
(cid:88)

j=1

(cid:0)N −1wδ

[k]

(cid:1)

j

ψj .

(4.18)

Similarly, we ﬁnd that

(cid:32) M
(cid:88)

Q

i=1

(cid:33)

uδ
i,kK[k]φi

=


N −1

(cid:32) M
(cid:88)

i=1

N
(cid:88)

j=1

uδ
i,k

(cid:10) K[k]φi, ψn

(cid:33)N
(cid:11)





n=1

j

ψj =

N
(cid:88)

j=1

(cid:0)N −1H [k]uδ

i,k

(cid:1)

j

ψj ,

such that together with (4.18) we get

(cid:32)

Q

yδ
[k] −

M
(cid:88)

i=1

(cid:33)

uδ
i,kK[k]φi

=

N
(cid:88)

j=1

(cid:0)N −1 (cid:0)wδ

[k] − H [k]uδ
i,k

(cid:1)(cid:1)

ψj .

j

Inserting this expression into (4.17) we obtain

M
(cid:88)

i=1

uδ
i,k+1 (cid:104) φi, φm (cid:105)XM

=

M
(cid:88)

i=1

uδ
i,k (cid:104) φi, φm (cid:105)XM

+ ˜ωδ
k

N
(cid:88)

j=1

(cid:0)N −1 (cid:0)wδ

[k] − H [k]uδ
i,k

(cid:1)(cid:1)

j

(cid:10) K ∗

[k]ψj, φm

(cid:11)

XM

∀ m ∈ {1 , . . . , M } ,

and thus together with (4.11) ﬁnd that

M uδ

k+1 = M uδ

k + ˜ωδ

kH T

[k]N −1 (cid:0)wδ

[k] − H [k]uδ
k

(cid:1) .

Finally, after applying the inverse of M we obtain (4.15), which yields the assertion.

Concerning the implementation of ˜ωδ

k deﬁned in (4.10), note that there holds

(cid:13)
˜K[k]f δ
(cid:13)
(cid:13)

k − Qyδ
[k]

(cid:13)
2
(cid:13)
(cid:13)

= (cid:0)N −1 (cid:0)wδ

[k] − H [k]uδ
k

(cid:1)(cid:1)T

N (cid:0)N −1 (cid:0)wδ

[k] − H [k]uδ
k

(cid:1)(cid:1) ,

completing the matrix-vector form of the discrete Landweber-Kaczmarz method (4.15).

4.3 Modiﬁcations of the Landweber-Kaczmarz method

The Landweber-Kaczmarz method in both its discrete and continuous forms allows for
a number of useful modiﬁcations in terms of eﬃciency and incorporation of physical
prior information. In this section, we discuss four modiﬁcations which we then combine
together with a speciﬁc discretization into the PNKR method introduced below.

13

The ﬁrst modiﬁcation concerns the inclusion of the non-negativity constraint (3.15),
which has not yet entered into the (discrete) Landweber-Kaczmarz method. A common
way to incorporate it is via the deﬁnition of an (orthogonal) projection/cutoﬀ operator

T : H s (Ω × Θ) → {f ∈ H s (Ω × Θ) | f ≥ 0} ,

(T f )(x) :=

(cid:40)

f (x) ,
0 ,

f (x) ≥ 0 ,
else ,

which is used to adapt iterative methods by projecting the update after each step [13].
For example, for the classic Landweber-Kaczmarz method (4.4) this adaptation reads

k+1 = T (cid:0)f δ
f δ

k + ωK ∗

[k](yδ

[k] − K[k]f δ

k )(cid:1) ,

(4.19)

and analogously for most other iterative method. For the discrete Landweber-Kaczmarz
method (4.15) this approach can be eﬀectively realized as follows: First, we deﬁne

h : R → R+
0 ,

x (cid:55)→

(cid:40)

x , x ≥ 0 ,
0 ,

else ,

and use this function to deﬁne the thresholding operator

T : RM → RM ,

u = {ui}M

i=1 (cid:55)→ T u := {h(ui)}M

i=1 .

(4.20)

Using this, the discrete Landweber-Kaczmarz method (4.9) can be adapted to

k+1 = T (cid:0)uδ
uδ

k + ˜ωδ

kM −1H T

[k]N −1 (cid:0)wδ

[k] − H [k]uδ
k

(cid:1)(cid:1) ,

which results in the obtained reconstruction being non-negative.

The second modiﬁcation concerns the numerical eﬃciency of the method. While the
Landweber-Kaczmarz method already leverages the system structure of the problem,
it may still require too many iterations to be feasible in practice. For our problem,
this is particularly true when the total number R of considered wavelengths λr is large.
Hence, we propose to apply Nesterov acceleration [34] to method (4.3), which yields

zδ
k = uδ
k +
k+1 = T (cid:0)zδ
uδ

kR − 1
kR + 2
k + ˜ωδ

(uδ

k − uδ

k−1) ,
[k]N −1 (cid:0)wδ

kM −1H T

kR = ceil(k/R) ,

[k] − H [k]zδ
k

(cid:1)(cid:1) .

(4.21)

Theoretical and numerical properties of Nesterov(-type) acceleration applied to (pro-
jected) Landweber and Landweber-Kaczmarz methods for solving inverse problems,
in particular convergence and convergence rates results, were studied for example in
[2, 3, 21, 22, 25, 28, 30, 34, 37]. We also ﬁnd that it signiﬁcantly reduces the required
number of iterations in practice for our extragalactic archaeology problem.

The third modiﬁcation concerns the choice of inner product on the Sobolev space

H s (Ω × Θ), which canonically is deﬁned using multiindices α = (α1 , . . . , α5) by
(cid:88)

(cid:104) f, g (cid:105)H s(Ω×Θ) =

(cid:104) ∂αf, ∂αg (cid:105)L2(Ω×Θ) .

0≤|α|≤s

14

However, for each sequence β = {βα}0≤|α|≤s of constants βα > 0 the inner product

(cid:104) f, g (cid:105)s,β :=

(cid:88)

0≤|α|≤s

βα (cid:104) ∂αf, ∂αg (cid:105)L2(Ω×Θ) ,

(4.22)

induces an equivalent norm on H s (Ω × Θ). By tuning the parameters βα one can thus
place an emphasis on diﬀerent derivatives in the inner product. This is useful if one
wants to achieve a balance between derivatives of diﬀerent orders or put an emphasis
on smoothness in certain components. For example, in the case s = 1 we will later use

(cid:104) f, g (cid:105)s,β := (cid:104) f, g (cid:105)L2(Ω×Θ) + β

(cid:88)

|α|=1

(cid:104) ∂αf, ∂αg (cid:105)L2(Ω×Θ) ,

(4.23)

and tune the constant β to balance the L2 (Ω × Θ) component and the ﬁrst-order deriva-
tives. If one uses an inner product (cid:104) ·, · (cid:105)β then one also has to use it on the subspace
XM ⊂ H s (Ω × Θ). This inﬂuences the matrix M deﬁned in (4.11), which now reads

(cid:16)

M :=

(cid:104) φi, φj (cid:105)s,β

(cid:17)M

i,j=1

,

and is the only point of inﬂuence on the discrete Landweber-Kaczmarz method.

The ﬁnal modiﬁcation concerns the order of the operator equations Krf = yr. The
Landweber-Kaczmarz method cycles through these equations in a loop induced by the
index [k] deﬁned in (4.5). However, this is not strictly necessary, and it has been found
that changing the order of equations in either a systematic or even a random fashion
can lead to considerable improvements in terms of eﬃciency and reconstruction quality.

4.4 The PNKR method

In this section, we combine our previous considerations with a suitable choice of basis
functions φm and ψn to arrive at the PNKR method. For this, note ﬁrst that the main
computational eﬀort required for applying (4.21) stems from the following sources:

1. In each iteration, the matrices H [k] and H T

[k] need to be applied.

2. In each iteration, two systems of equations with M and N need to be solved.

In order to keep the computational costs of these steps as low as possible, the matrices
M , N , and H r should be as sparse and structured as possible. In particular for the
matrices M and N , this essentially depends on the choice of the functions φm and ψn.
Consider for example the typical case that the domain Ω is rectangular. Then a
possible choice for the functions ψn are the piecewise constant functions on a uniform
rectangular subdivision of Ω. This choice has the advantage that the matrix N turns
into a scaled identity matrix, which is trivial to store, apply, and invert. Similarly, given
a uniform rectangular subdivision of Ω×Θ, the functions φm can e.g. be chosen as piece-
wise polynomial functions satisfying the smoothness requirement φm ∈ H s (Ω × Θ).

15

This choice results in a highly structured matrix M that can be eﬃciently handled
numerically, e.g. using methods from the theory of ﬁnite elements [7, 26, 33].

Another possibility for choosing the functions ψm and φn is suggested by the struc-
ture of the problem itself: Start by taking two linearly independent sets of functions
{ψn}N

l=1 ⊂ H s(Θ) and deﬁne the functions

n=1 ⊂ H s(Ω) and {ϕl}L

φm(x, θ) := ψn(m)(x)ϕl(m)(θ) ,

∀ m ∈ {1 , . . . , M } ,

(4.24)

where M := N · L, n(m) := ﬂoor ((m − 1)/L) + 1, and l(m) := ((m − 1) mod L) + 1.
The resulting set of linearly independent functions {φm}M
m=1 ⊂ H s (Ω × Θ) can then
be used for deﬁning the ﬁnite dimensional subspace XM as in (4.8). This has some
beneﬁcial consequences for the structure of the matrices M , N , and H r, as we see in
Proposition 4.2. Let s ∈ R, Θ ⊂ R3 be deﬁned as in (3.3), and Ω ⊂ R2 be bounded and
Jordan measurable. Furthermore, let {ψn}N
l=1 ⊂ H s(Θ) denote
two sets of linearly independent functions and let {φm}M
m=1 ⊂ H s (Ω × Θ) be deﬁned
as in (4.24). Moreover, let the ﬁnite dimensional spaces XM and YN be deﬁned as in
(4.8), and Kr be deﬁned as in (3.9) for all r = 1, . . . , R. Then for the matrices M , N ,
and H r deﬁned as in (4.11) and (4.12) there holds

n=1 ⊂ H s(Ω) and {ϕl}L

M =

H r =

(cid:16)(cid:10) ψn(i), ψn(j)
(cid:18)
(cid:10) ψj, ψn(i)

(cid:11)

(cid:11)

H s(Ω)

(cid:10) ϕl(i), ϕl(j)

(cid:11)
H s(Θ)

(cid:17)M

i,j=1

,

N =

(cid:16)

(cid:104) ψi, ψj (cid:105)L2(Ω)

(cid:17)N

i,j=1

,

(cid:18)(cid:90)

L2(Ω)

Θ

k(θ, λr)ϕl(i)(θ) dθ

(cid:19)(cid:19)M,N

.

i,j=1

(4.25)

Proof. First of all, due to the deﬁnition (4.24) of the functions φm there holds

(cid:104) φi, φj (cid:105)H s(Ω×Θ) = (cid:10) ψn(i)ϕl(i), ψn(j)ϕl(j)

(cid:11)

H s(Ω×Θ)

= (cid:10) ψn(i), ψn(j)

(cid:11)
H s(Ω)

(cid:10) ϕl(i), ϕl(j)

(cid:11)
H s(Θ) ,

and thus together with deﬁnition (4.11) the speciﬁc form of M follows. Furthermore,
concerning the matrices H r note that it follows from (3.13) that

(cid:104) ψj, Krφi (cid:105)L2(Ω) = (cid:104) K ∗

r ψj, φi (cid:105)H s(Ω×Θ)

(3.13)
= (cid:104) E∗

s (k(·θ, λr)ψj(·x)) , φi (cid:105)H s(Ω×Θ)

and thus together with (4.24),

(cid:104) ψj, Krφi (cid:105)L2(Ω) = (cid:104) (k(·θ, λr)ψj(·x)) , φi (cid:105)L2(Ω×Θ) =
(cid:90)

(cid:90)

(4.24)
=

k(θ, λr)ψj(x)ψn(i)(x)ϕl(i)(θ) dθ dx ,

(cid:90)

(cid:90)

Ω

Θ

k(θ, λr)ψj(x)φi(ω, θ) dθ dω

which can be rewritten into

Ω

Θ

(cid:104) ψj, Krφi (cid:105)L2(Ω) = (cid:10) ψj, ψn(i)

(cid:11)

L2(Ω)

k(θ, λr)ϕl(i)(θ) dθ

.

(4.26)

(cid:19)

(cid:18)(cid:90)

Θ

Together with the deﬁnition (4.12) of the matrices H r this yields the assertion.

16

The speciﬁc form (4.25) of the matrices M and H r induced by (4.24) has some
beneﬁcial consequences concerning their practical implementation. For example, since

(cid:104) φi, φj (cid:105)H s(Ω×Θ) = (cid:10) ψn(i)ϕl(i), ψn(j)ϕl(j)

(cid:11)

H s(Ω×Θ)

= (cid:10) ψn(i), ψn(j)

(cid:11)
(cid:10) ϕl(i), ϕl(j)
(cid:11)
H s(Θ) ,
H s(Ω)
H s(Ω) = (cid:10) ψn(i), ψn(j)
(cid:11)

(cid:11)

(cid:11)

in the case s = 0 the scalar products (cid:10) ψn(i), ψn(j)
L2(Ω) need to
be computed only once for both the matrices M and N . Furthermore, from (4.25) we
can see that for assembling both the matrix N and the matrices H r the same scalar
products (cid:10) ψj, ψn(i)

L2(Ω) need to be computed, which reduces the numerical eﬀort.
With the speciﬁc discretization discussed above, we have all ingredients to deﬁne
The PNKR method. Let s ∈ R, let Θ ⊂ R3 be deﬁned as in (3.3), and let Ω ⊂ R2
be bounded and Jordan measurable. Furthermore, let {ψn}N
l=1 ⊂
H s(Θ) denote two sets of linearly independent functions and let {φm}M
m=1 ⊂ H s (Ω × Θ)
be deﬁned as in (4.24). Moreover, let the ﬁnite dimensional spaces XM and YN be
deﬁned as in (4.8), and for all r = 1, . . . , R let Kr be deﬁned as in (3.9) and let yδ
r ∈ Y .
Then the projected Nesterov-Kaczmarz reconstruction (PNKR) method for solving the
galactic archaeology Problem 2 reads
kR − 1
kR + 2
k + ˜ωδ

k−1) ,
[k]N −1 (cid:0)wδ

n=1 ⊂ H s(Ω) and {ϕl}L

kR = ceil(k/R) ,

[k] − H [k]zδ
k

kM −1H T

k − uδ

(4.27)

(cid:1)(cid:1) ,

(uδ

k = uδ
zδ
k +
k+1 = T (cid:0)zδ
uδ
k, M , N , H r, and wδ

where ˜ωδ

r, are deﬁned as in (4.10), (4.25), and (4.12), respectively.
As mentioned in Section 4.3, the order of the equations induced by the index kR in
the PNKR method (4.27) does not necessarily have to be circular. Hence, in the numer-
ical examples considered below we replace kR by a random permutation of {1, . . . , R}.

4.5 The reduced PNKR method

In the PNKR method (4.27) it is advantageous from the computational point of view to
keep the regularity of the functions ψn as low as possible, such that the structure of the
matrices N and H r remains as simple as possible. On the other hand, when deriving the
PNKR method we assumed that ψn ∈ H s(Ω) in order to use the underlying structure
of the problem to our advantage. At ﬁrst, these two observations seem to contradict
each other. However, we shall now see that this need not necessarily be the case.

For this, we ﬁrst consider the special case s = 0. In addition, we limit our attention
to the typical situation that the domain Ω is rectangular, noting that the subsequent
arguments can also be generalized to more complicated domains. In this case, we have
that H s(Ω) = L2 (Ω) and thus for the PNKR method the functions ψn can be chosen
as piecewise constant functions on a uniform rectangular subdivision of Ω. Since also
the domain Θ is rectangular, the same is true for the functions ϕl, and thus we get
(cid:18)

(cid:19)(cid:19)M,N

(cid:18)(cid:90)

M := cM I ,

N := cN I ,

H r :=

δj,n(i)

k(θ, λr)ϕl(i)(θ) dθ

, (4.28)

Θ

i,j=1

17

k+1 = T (cid:0)uδ
uδ

where I denotes the identity matrix and the constants cM and cN depend on the chosen
subdivisions of Ω and Θ. With this, the second line of (4.27) then takes the form
k (cM cN )−1 H T
which is particularly simple to implement. Next, consider the case s > 0. From the
purely implementational point of view, the reason why piecewise constant functions can
now no longer be used in (4.27) is that then the matrix M deﬁned in (4.11) is not well-
deﬁned any more. However, note that at least formally there holds [35, Proposition 2.1]

[k] − H [k]uδ
k

k + ˜ωδ

(4.29)

(cid:0)wδ

(cid:1)(cid:1) ,

[k]

M

(4.11)
=

(cid:16)

(cid:104) φi, φj (cid:105)H s(Ω×Θ)

(cid:17)M

i,j=1

(cid:16)(cid:10) φi, (E∗

s )−1φj

=

(cid:11)
L2(Ω×Θ)

(cid:17)M

i,j=1

,

where as before Es : H s (Ω × Θ) → L2 (Ω × Θ) denotes the embedding operator. This
indicates that the matrix M −1 in (4.27) can be understood as the discrete analog of
the adjoint embedding operator E∗
s . This operator essentially behaves like a smoothing
operator, and its application can e.g. be understood as a damping of higher order
Fourier components of a function, or as a convolution with a suitable spatial ﬁlter [23]
in dependence on the index s of the Sobolev space H s (Ω × Θ). In our discrete setting,
the action of M −1 on a vector u can thus be approximated by the operator

Zs : RM → RM ,

u = {ui}M

i=1 (cid:55)→ {(u ∗ zs)(i)}M

i=1 ,

(4.30)

where the convolution-kernel zs is suitably chosen depending on H s (Ω × Θ). Hence,
one may use piecewise constant basis functions in the PNKR method also for the case
s > 0 by replacing the application of M −1 with the application of Zs. Together with
the speciﬁc form of the matrices N and H r given in (4.28) we thus arrive at
] ⊂ R2,
The reduced PNKR method. Let s ∈ R, Ω := [xmin
, xmax
] × [xmin
, xmax
2
1
n=1 and {ϕl}L
and let Θ ⊂ R3 be deﬁned as in (3.3). Furthermore, let {ψn}N
l=1 denote
two sets of piecewise constant functions on uniform regular subdivisions of Ω and Θ,
respectively. Moreover, let the ﬁnite dimensional spaces XM and YN be deﬁned as in
(4.8), and for all r = 1, . . . , R let Kr be deﬁned as in (3.9) and let yδ
r ∈ Y . Then the
reduced PNKR method for solving the galactic archaeology Problem 2 is given by

2

1

zδ
k = uδ
k +
k+1 = T (cid:0)uδ
uδ

kR − 1
kR + 2
k + ˜ωδ

(uδ

k − uδ
k (cN )−1 Zs

k−1) ,
(cid:0)H T

[k]

kR = ceil(k/R) ,
(cid:1)(cid:1)(cid:1) ,

[k] − H [k]uδ
k

(cid:0)wδ

(4.31)

where wδ
the constant cN denotes the size of any element of the uniform subdivision of Ω.

k, H r, Zs are deﬁned as in (4.12), (4.10), (4.25), (4.30) respectively, and

r, ˜ωδ

As before, the index kR in the reduced PNKR method (4.31) can be replaced by
a random permutation of {1, . . . , R}. Note that the reduced PNKR method is com-
putationally much less demanding than the full PNKR method (4.27). Furthermore,
note that the convolution operator Zs can also be replaced by a suitable damping in
the discrete Fourier or wavelet domain. However, due to its approximate nature with
M −1 being replaced by Zs we suggest to use the reduced PNKR method only if the
computational eﬀort for running the full PNKR method (4.27) is practically infeasible.

18

5 Numerical examples

To test our reconstruction approach, we apply it to a dataset simulated from a known
ground truth density.
In Sections 5.2-5.4, we describe the dataset used, as well as
details about the discretization and implementation. In Section 5.5, we present results
of our reconstruction algorithm applied to our test problem using two separate sets of
basis functions. We show that our method performs well in a quantitative sense in
both cases. To further validate our method, in Section 5.6 we compare our recoveries to
those obtained using the widely-used Penalized Pixel-Fitting (pPXF) [9] spectral ﬁtting
software, and compare qualitative aspects of the obtained recoveries.

5.1 Visualization

To visualize the 5-dimensional density f (x, θ), we will display several projections which
are commonly used in galaxy IFU analysis see e.g. [17]. These comprise maps of mean
metallicity and age, and maps of several statistics describing the velocity distribution.
In addition, we will explicitly show a selection of velocity distributions evaluated at
a selection of positions. These quantities are mathematically deﬁned below, and the
visualization of the ground truth is shown in Figure 5.1.

To visualize the age and metallicity variations, we show their ﬁrst order moments
as functions of x. We ﬁrst deﬁne some useful marginal probability distributions of the
target distribution function f ,

(cid:90)

(cid:90)

M :=

f (x, θ) dx dθ ,

p(x) :=

(cid:90)

f (x, θ) dθ ,

1
M

p(x, z) :=

1
M

(cid:90) vmax

Ω
Θ
(cid:90) tmax

vmin

tmin

f (x, θ) dv dt ,

p(x, t) :=

1
M

Θ
(cid:90) vmax

(cid:90) zmax

vmin

zmin

f (x, θ) dv dz .

The spatial variations of the mean age and metallicity are then given by

µz(x) :=

(cid:90) zmax

zmin

z p(x, z)
p(x)

dz ,

and

µt(x) :=

(cid:90) tmax

tmin

t p(x, t)
p(x)

dt .

To visualize marginal velocity distributions, we will show a slightly diﬀerent quantity in
order to later facilitate comparison with existing methods (see Section 5.6). The target
density f as we have deﬁned it has units of mass per volume element, i.e.
integrated
over the whole domain it will give the total stellar mass of a galaxy (see equation 2.1).
A related quantity is the light-weighted distribution fLW, which has units of luminosity
rather than mass. These are related via

fLW(x, v, z, t) := f (x, v, z, t)

(cid:90) λmax

λmin

S(λ; t, z) dλ ,

where S are SSP templates in equation (2.2). As in (5.1), we can deﬁne the light-
weighted marginal distributions pLW(x) and pLW(x, v), which ﬁnally giving us light-
weighted velocity distribution at a position x, i.e.,

pLW(v|x) :=

pLW(x, v)
pLW(x)

.

19

(5.1)

We will show maps of four quantities summarising these velocity distributions: their
mean µv, standard deviation σv and two higher order statistics h3 and h4. These
are coeﬃcients of Gauss-Hermite expansions, which are commonly used to describe
velocity distributions in galactic astronomy [49], and roughly correspond to skewness
and kurtosis, respectively.
In addition to these four quantities, we will also show a
selection of velocity distributions pLW(v|xi) explicitly evaluated at 9 locations xi. These
locations have been chosen to maximise the variety of distributions on display.

5.2 Ground truth and discretization

The ground truth density f comes from a simple descriptive model of galaxy properties
and the dataset is simulated with parameters comparable to existing, real IFU galaxy
datasets of medium-size and high spectral quality. The speciﬁc choices are described
in detail below but, in overview, they provide a reasonably realistic yet idealized and
computationally-manageable arena for developing a novel reconstruction technique.

The ground truth is a mixture of three physical galactic components. The domi-
nant component is a thin, fast-rotating disk which contributes 70% of the total stellar
mass, while a thicker, slower-rotating disk contributes 29%. The two disks are counter-
rotating, producing the highly skewed and bimodal velocity distributions seen in Fig-
ure 5.1. The remaining 1% of stars are in a stream-like component which is responsible
for some of the irregular features seen in Figure 5.1, such as the slightly protruding
contours, and blobs in the h3 map. Each component is speciﬁed with independent
star-formation histories, chemical-enrichment prescriptions from [53], and stellar-age
dependent morphologies and kinematics. Code to evaluate this model is available on-
line [24], while a complete description of the astrophysical ingredients is in preparation.
The dataset is stored as both a noise-free version and a noisy version created by adding
pixel-wise noise sampled from a Gaussian distribution with standard deviation of 1%
of the noise-free value. This results in an overall noise level of δ = 1%.

We next deﬁne the discretization of our domain. The discretization of Θ consists of a
uniform subdivision of [−1000, 1000] with 27 grid points for v, a nonuniform subdivision
of [−2.66, 0.36] with 7 grid points for z and a nonuniform subdivision of [0.015, 14.25]
with 19 grid points for t. The choices in z and t are dictated by our choice of SSP
templates S, for which we use a subset of the MILES models [51]. The SSP template
spectra S are sampled at 687 diﬀerent wavelengths λ between 4800nm and 5700nm with
a velocity resolution of 75km/s, similar to the Fornax 3D IFU survey [42] which uses
the MUSE IFU instrument. This velocity resolution in turn sets our discretization in
v. For the discretization of Ω we have a uniform grid of [−1, 1]2 with 26 discretization
points in each dimension.

5.3 Choice of basis functions

We perform numerical experiments using two diﬀerent sets of basis functions. First,
to test the procedure with minimal computational cost, we use a basis of piecewise
In this case, we
constant functions. This corresponds to choosing s = 0 in (4.27).

20

Figure 5.1: Visualisation of the ground truth density. Top row shows maps of mean
age µt, mean metallicity µz, followed by four statistics describing the velocity distribu-
tion: mean µv, standard deviation σv, and Gauss Hermite expansion coeﬃcients h3 and
h4. The bottom row shows a grid of velocity distributions pLW(v|xi) evaluated at the
positions i = 1, ..., 9 highlighted on the galaxy image. See Section 5.1 for details. The
galaxy consists of two superposed, counter-rotating disks, giving rise to the bimodal
velocity distributions particularly prominent in panels i = 4 and 6, and a weak stream-
like component accounting for the protruding contours in the bottom-right of the image
and the blobs in the h3 distribution.

have one basis function per element of the discretization, with the basis function being
deﬁned as constant 1 within the element, and 0 everywhere else. Thus, the amount of
basis functions is N := 625 for Ω and L := 2808 basis functions for Θ. The resulting
mass matrix M is a diagonal matrix, making the application of M −1 very simple
without involving any expensive matrix-vector multiplication.

In a next step, to incorporate the expected smoothness of the ground truth, we test
the procedure using piecewise linear basis functions, corresponding to s = 1 in (4.27).
The basis functions are deﬁned as the tensor product of 1D FEM hat functions. In
this case, we have one basis function per node of the discretization. In order to retain
the same dimension of the problem as in the piecewise constant case, we deﬁne a new

21

discretization, where each node is the average of two neighboring nodes of the original
discretization. This again results in N := 625 basis functions for Ω and L := 2808 basis
functions for Θ. The resulting mass matrix M has a sparse block-tridiagonal structure
(Figure 5.2) with a length of N · L = 1.755 · 106.

Figure 5.2: Block-tridiagonal structure of the mass matrix M for piecewise linear basis
functions. For visualization purposes, the dimension has been reduced to N = 18 and
L = 210 for this ﬁgure. (a) illustrates the structure of the entire matrix, whereas (b)
shows additional detail in the zoomed in area within the red square in (a)

5.4 Implementation and computational aspects

Computations were carried out in Matlab on a desktop computer with an Intel Xeon E5-
1650 processor with 3.20 GHz and 16 GB RAM. The most expensive part is computing
M −1 at every step k in (4.27). As is standard in dealing with large-scale sparse matrices,
we do not apply the inverse directly, but compute a solution of the forward operator
problem

M x = zδ
k ,

k = H T
zδ

[k]N −1 (cid:0)wδ

[k] − H [k]uδ
k

(cid:1) .

(5.2)

The large scale nature of the problem renders assembly of the full matrix M infeasible.
However, taking note of the Kronecker structure of M , we can represent the matrix as
M = Ψ ⊗ Φ , where ⊗ denotes the Kronecker product and

(cid:16)

Ψ :=

(cid:104) ψi, ψj (cid:105)H 1(Ω)

(cid:17)N

i,j=1

,

and

Φ :=

(cid:16)

(cid:104) ϕi, ϕj (cid:105)H 1(Θ)

(cid:17)L

i,j=1

.

(5.3)

This structure allows multiplication with a vector to be implemented in a very eﬃcient
way, where only the much smaller matrices Φ and Ψ need to be assembled; see, e.g., [16,
Section 12.3] for more information about the mathematics of Kronecker-structured sys-
tems. Similarly, the inverse of M can be represented as M −1 = Ψ−1 ⊗ Φ−1 , where

22

Ψ−1 and Φ−1 can be computed in a pre-processing step, for example using LU decom-
position. The application of M −1 can now be performed very eﬃciently. Using Matlab
notation, M −1zk = reshape(Ψ−1reshape(zk, N, L)Φ−1, N · L, 1). Note that since Ψ−1
and Φ−1 are full matrices, one application of M −1 is much more expensive than one
application of M .

k. We use values of αδ

Regarding the stepsize and stopping criterion, we use (4.10) with τ = 1.2 and
constant αδ
k = 10 in the case of piecewise constant basis functions,
and αδ
k = 1000 in the case of piecewise linear basis functions. In Figure 5.6, we show
results for diﬀerent values of the parameter β in (4.23). In addition to the default value
β = 1, we show reconstructions for β = 0.5 and β = 0.01, corresponding to a lower
weight being placed on the ﬁrst order derivative.

The inner products in (5.3) are calculated using the trapezoid rule. We divide
the support of the integrand, i.e. supp(ψi) ∩ supp(ψj) (and analogously supp(ϕi) ∩
supp(ϕj)) using 50 grid points within each dimension with equidistant spacing. The
right hand sides wδ

k in (4.12) are also computed with trapezoid integration.

Looping through the equations in a random ordering has been reported to speed
up convergence [46]. Therefore, after every full loop (i.e. after every R iterations), we
create a random permutation of (1, ..., R) using the Matlab function randperm(R) and
then loop through the R equations in the ordering speciﬁed by the permuted tuple. We
start the iteration with the initial guess u0 = 0. After every full loop, we calculate the
residual and the relative error.

res2

k =

L
(cid:88)

j=1

(cid:13)
(cid:13)H j(u∗ − uδ

k)(cid:13)
2
(cid:13)

,

and

errork =

(cid:13)
(cid:13)

(cid:13)
(cid:13)u∗ − uδ
k
(cid:107)u∗(cid:107)

,

where u∗ denotes the representation of the ground truth f in terms of basis functions,
i.e. f = (cid:80)M

i φi. We summarize the procedure in Algorithm 1.

i=1 u∗

5.5 Numerical results

⊥ = (cid:80)L

We perform the PNKR method (4.4) using piecewise constant (s = 0) and piecewise
linear (s = 1) basis functions as described in Section 5.3. To validate our method,
we ﬁrst project the ground truth to the orthogonal complement of the null space of
j H ju∗. In addition, we assume noise-free data to be
the operator, i.e., u∗
known. In the piecewise constant case, within four loops through all wavelengths the
relative error reaches 0.5% and the relative residual reaches 0.013%. In the piecewise
linear case, similar values are achieved after just one loop (Figure 5.3). This indicates
that the method is able to retrieve the correct density if no null space components are
present. However, we observed that in general the null space of the problem is rather
large, which means that components outside this null space cannot be recovered.

j=1 H T

We now apply PNKR to the ground truth u∗ without projection. We consider the
more realistic scenario where the data yδ is impacted by the presence of Gaussian noise
with a relative noise level of 1%. We show the measured relative residuals and errors
in Figure 5.3. In the case of piecewise linear basis functions, the procedure stops after

23

Algorithm 1 Projected Nesterov Kaczmarz Reconstructor (PNKR)

Input data yδ
sponding SSP spectra S, discretization of Ω and Θ

r for r = 1...R, noise level δ ∈ RR, wavelengths λ1, · · · , λR and corre-

- select piecewise constant (s = 0) or piecewise linear (s = 1) basis functions {ϕi}L
and {ψj}N
j=1.
- compute vectors wδ
- Implement function representations of N , M and H r for r = 1...R deﬁned by
(4.25)
- Set u0 = 0 ∈ RM , kR = 1, k = 0
while discrepancy principle (4.10) is not fulﬁlled for all equations do

r = (cid:104)yδ

r, ψj(cid:105)N

j=1

i=1

P = randperm(R)
for ˆr = 1 : R do

set index r = Pˆr
check discrepancy principle:
if (cid:0)N −1 (cid:0)wδ

r − H ruδ
k

(cid:1)(cid:1)T N N −1 (cid:0)wδ

r − H ruδ
k

(cid:1) > 1.2δr then

k−1)

k − uδ

k + kR−1

- apply Nesterov acceleration:
k = uδ
zδ
kR+2(uδ
- compute or choose stepsize ˜ωδ
k
- compute new iterate and apply thresholding:
(cid:1))
kM −1H T
uδ
k + ˜ωδ
- increment iteration index
k = k + 1

r N −1 (cid:0)wδ

k+1 = T (zδ

r − H rzδ
k

end if

end for
kR = kR + 1

end while

- calculate density f from coeﬃcient vector uk by multiplying with basis functions
f = (cid:80)M

i=1 uk,iψn(i)ϕl(i)

Output: reconstructed 5D density f

1058 loops. The residual falls gradually to about 4.7%, while relative errors remains at
68.2%. In the case of piecewise constant basis functions, the iterations stops after 720
loops. The residual falls to about 8.3%, while relative errors remains at 79.5%. The
high relative errors indicate that signiﬁcant null space components are present in the
ground truth u∗.

Due to the large scale nature of the problem, PNKR requires signiﬁcant computa-
tional resources. Using piecewise constant basis functions, one loop through all equa-
tions takes about 54s. The total elapsed time until the iteration stopped amounted to
about 4 hours. For piecewise linear functions, this increases to 16 minutes for one loop
and 48 hours for the whole procedure.

24

Figure 5.3: First and second panel: Relative residual and relative error measured from
PNKR being applied to the ground truth u∗
⊥, i.e. without null space components in
the solution and with noise-free data being known. Third and fourth panel: Relative
residual and relative error measured from PNKR being applied to the ground truth u∗
with a noise level of 1% in the data. The iteration was stopped using the discrepancy
principle (4.10).

5.6 Comparison with pPXF

To validate our method we compare our recoveries against those measured using the
Penalized Pixel-Fitting (pPXF) software [9], a mature and popular tool for modelling
galaxy IFU datacubes. This software can model stellar population-kinematics (in ad-
dition to other eﬀects such as gas emission and dust absorption), and uses ﬂexible,
non-parametric models of the velocity distribution. However, one limitation of pPXF is
that it does not allow for the full datacube to be ﬁtted simultaneously, instead modelling
its constituent spectra independently. Whilst existing datacube modelling tools do ex-
ist [6,11,47,50], none of these are suitable for combined modelling of stellar-populations
and complex velocity distributions. We therefore perform a baseline comparison only
against pPXF.

We now summarise the relevant aspects of the pPXF forward model. Whereas
we attempt to recover the joint distribution function f , pPXF makes the simplifying
assumption that f is separable, with the speciﬁc factorisation from (2.3). Inserting this
factorisation into (2.2), gives the pPXF forward model

f1(xi)

(cid:90) vmax

vmin

1
1 + v/c

f2(v|xi)

(cid:18)(cid:90) zmax

(cid:90) tmax

zmin

tmin

(cid:18) λ

1 + v/c

S

(cid:19)

(cid:19)

; t, z

f3(t, z|xi) dt dz

dv = yi(λ) .

(5.4)

Compared to our forward model in (2.2), the right-hand side is now a collection of 1D
spectra yi(λ) at positions indexed by i, rather than a 3D datacube y(λ, x). The speciﬁc
form of the population distribution f3(t, z|xi) used by pPXF are piecewise constant
values on a rectangular grid in t and z, with Tikhonov regularisation used to promote
smoothness in the recovery. The velocity distributions f2(v|xi) in pPXF are as Gauss-
Hermite expansions with parameters µv, σv, h3, h4, . . . , hN , with regularisation (known
as bias in pPXF parlance) to encourage the non-Gaussian parameters hi to remain small.
Note that this velocity distribution is necessarily light-weighted, not mass-weighted (see
the discussion in Section 5.1).

25

Figure 5.4: Comparison of recoveries using pPXF and PNKR. Columns show the same
quantities as in Figure 5.1. The top three rows show the ground truth, the pPXF and
PNKR recoveries. The bottom two rows show the error between the recoveries and the
ground truth. Whilst neither pPXF nor PNKR accurately reconstruct population maps
µt and µz, for the kinematics (four right-most columns) PNKR achieves an overall more
accurate reconstruction.

We ﬁt the noisy, mock data y testing several settings. Using pPXF we individually
ﬁt each of the 625 spectra in the datacube varying over three settings: the order of
Gauss-Hermite expansion (6 or 8), the amount of regularisation for stellar-populations
(5 logarithmically spaced values from 10−4 to 104), and the amount of regularisation for
kinematics (5 logarithmically spaced values from 10−2 to 102 times the pPXF default).
We then ﬁt the whole datacube using PNKR. We try both piecewise constant (s = 0)

26

Figure 5.5: Comparison of recovered velocity distributions using pPXF and PNKR.
The i = 1, .., 9 distributions are the same as in Figure 5.1. The left grid shows the
distributions, the right shows residuals from the ground truth. Overall, the amplitude
of the PNKR residuals are smaller then those from pPXF. Panels 4 and 6 show that
PNKR can produce bimodal distributions, while the Gauss-Hermite parameterisation
used by pPXF struggles. Panels 2 and 5 lie along the disk plane, where the PNKR
reconstruction is aﬀected by over-smoothing.

and piecewise linear (s = 1) basis functions, and for the latter we also vary the β
parameter deﬁned in equation (4.23) which inﬂuences the smoothness of the recovery.
Figures 5.4 and 5.5 compare the recoveries using pPXF and PNKR. We show results
using the most favourable input settings in each case. For pPXF this is an order
6 expansion, population regularisation parameter of 104, and the default kinematic
regularisation. For PNKR, this is s = 1 and β = 1.

Overall, PNKR recoveries are comparable to those achieved with pPXF. The two
left-most columns of Figure 5.4 show that neither approach well reproduces the mean
age or metallicity maps, likely due to a well known degeneracy between these param-
eters [52]. Both methods recover hints of a more metal-rich disk while only pPXF
recovers the presence of younger stars closer to the disk-plane. The uniformity of the
mean age and metallicity maps recovered by PNKR suggests that they have been over-
smoothed. This problem may be alleviated by appropriately tuning the sequence β in
(4.22). For the initial tests presented here, we have limited ourselves to vary a scalar
tuning-parameter β as in (4.23). The eﬀect of varying this are shown in Figure 5.6.
Tuning the full sequence β instead would alter the balance between age and metallicity
components relative to velocity. This could enhance age and metallicity variations in
the PNKR recoveries. Given the intrinsic degeneracy in age and metallicity recoveries
(as demonstrated by the pPXF) for now we instead focus our comparison on the other

27

components of the recovered f .

Kinematics reveal a signiﬁcant diﬀerence between the quality of the two recoveries.
The four right-most columns of Figure 5.4 show that kinematics are overall more faith-
fully recovered when using PNKR than pPXF. The reason for this can be seen in Figure
5.5, where it becomes clear that pPXF’s Gauss-Hermite expansions struggle to describe
bimodal distributions (e.g. panels 4 and 6 of Figure 5.5). These shortcomings where not
ﬁxed by using higher-order expansions (up to h8) or less kinematic regularisation, both
of which boosted the bimodal features at the expense of severe, negative oscillations in
the wings. Other spectral modelling tools [14, 38] permit more suitable descriptions of
the velocity distribution, while even pPXF itself oﬀers an option to model the spectrum
as a mixture of two independent components, which would very likely be beneﬁcial in
this instance. We stress however that the purpose of these comparisons is an initial
(successful) validation of PNKR; the novelty of PNKR will be demonstrated below.

Whilst PNKR achieves more accurate kinematic reconstructions overall, the situ-
ation is reversed in some locations. PNKR struggled to reconstruct moments µv, σv,
and h3 along the disk plane where pPXF fares relatively well (see the central horizontal
stripe in bottom two rows of Figure 5.4, and panels 2 and 5 of Figure 5.5). This appears
to be a problem with over-smoothing in PNKR: spatial smoothing has been too strong
in this region where the thin disk causes kinemtics to change over a small distance.
This may be addressed in future work by making a component (AKA mixture-model)
ansatz on the density f , and separately controlling the smoothing of each component.
Furthermore, PNKR reconstructions show some artifacts around the edges (see the
third row of Figure 5.4) caused by the application of the matrix M −1 in the case of
s = 1, representing the adjoint embedding E∗
s . This could be addressed by artiﬁcially
enlarging the domain Ω.

The main success of PNKR is demonstrated in Figure 5.6, which shows maps of the
Gauss-Hermite coeﬃcient h5. The faint stellar stream is particularly prominent in the
h5 map, appearing as the two blue/green blobs in the left-most panel. In the pPXF
recoveries, while the presence of two counter-rotating disks can still be seen inferred,
the sign of h5 is ﬂipped relative to the ground truth and no blobs are visible. These
conclusions do not change when we turn oﬀ kinematic regularisation (AKA bias in
pPXF), or when we smooth the reconstructions (bottom row). The PNKR recoveries
are signiﬁcantly better. For the piecewise constant (i.e. s = 0) case, the blobs are
visible in a smoothed version of the recovery, however this image is overall more blobby.
By using piecewise linear basis functions (i.e. s = 1) instead, the recovery is smooth by
design. The ﬁrst attempt with β = 1 was overly smooth, but by reducing to β = 0.01
we recover the stream features once again. Strategies for tuning β will be explored in a
future work. Compared to the smoothed s = 0 image, in the (s, β) = (1, 0.01) recovery
the blobs appear more cleanly against a smoother background. Furthermore, they are
recovered more accurately in their colour and shape. This demonstrates the unique
power of PNKR: by modelling the full datacube in a ﬂexible, non-parametric way, weak
galactic components can be detected and more accurately characterised.

28

Figure 5.6: Comparison of recovered h5 maps. Left/middle/right sections shows the
ground-truth/pPXF/PNKR reconstructions. The bottom row shows smoothed ver-
sions (blurred with a 0.75 pixel Gaussian kernel) of non-smooth recoveries. The two
blue/green blobs in the ground truth are produced by a stellar stream contributing 1%
of the galaxy’s stellar mass. These blobs are are not recovered by pPXF regardless
of kinematic reguarisation (AKA bias) or smoothing. For PNKR, blobs are visible in
the smoothed version of the piecewise-constant (s = 0) recovery, however the image is
somewhat noisy. For the piecewise-linear (s = 1) case, after tuning the β parameter to
avoid over-smoothing, the blobs are recovered more prominently and more accurately.

6 Conclusion

In this paper, we considered the extragalactic archaeology problem of reconstructing a
galaxy’s stellar population-kinematic distribution function from measured optical IFU
datacubes. Mathematically, this amounts to solving a large scale inverse problem corre-
sponding to an integral equation with a system structure. For solving this problem, we
proposed the Projected Nesterov-Kaczmarz Reconstruction (PNKR) method, which in-
corporates physical prior information and leverages the system structure for numerical
eﬃciency. We tested the PNKR method on a dataset simulated from a known ground
truth density, and validated it by comparing our recoveries to those obtained by the
widely used pPXF method. We have demonstrated the novel power of full datacube
modelling to detect and characterise weak galactic features.

Our results also inspire the following future work: We will explore strategies for
tuning the smoothing parameter β and treating edge-artifacts. Furthermore we will
investigate the possibility to incorporate additional prior information, such as a com-
ponent ansatz on the distribution function, and treat other known systematics in IFU
datasets such as continuum oﬀsets from dust-attenuation and imperfect ﬂux-calibration.
Altogether, this is a promising new avenue for extragalactic archaeology; we will apply
this method to galaxy IFU data to uncover weak features, such as merger remnants.

29

7 Support

F. Hinterer, S. Hubmer, and R. Ramlau were funded by the Austrian Science Fund
(FWF): F6805-N36. P. Jethwa and G. van de Ven were funded by the Austrian Sci-
ence Fund (FWF): F6811-N36. P. Jethwa and G. van de Ven acknowledge funding
from the European Research Council (ERC) under the European Union’s Horizon 2020
research and innovation programme under grant agreement No 724857 (Consolidator
Grant ArcheoDyn).

References

[1] R. A. Adams and J. J. F. Fournier. Sobolev Spaces. Pure and Applied Mathematics. Elsevier

Science, 2003.

[2] H. Attouch and J. Peypouquet. The Rate of Convergence of Nesterov’s Accelerated Forward–
Backward Method is Actually Faster Than o(1/k2). SIAM Journal on Optimization, 26(3):1824–
1834, 2016.

[3] A. Beck and M. Teboulle. A Fast Iterative Shrinkage-Thresholding Algorithm for Linear Inverse

Problems. SIAM J. Imaging Sci., 2(1):183–202, 2009.

[4] G. Bekiaris, K. Glazebrook, C. J. Fluke, and R. Abraham. Kinematic modelling of disc galaxies

using graphics processing units. Mon Not R Astron Soc, 455(1):754–784, 2016.

[5] V. Belokurov, D. Erkal, N. W. Evans, S. E. Koposov, and A. J. Deason. Co-formation of the disc

and the stellar halo. Mon Not R Astron Soc, 478(1):611–619, 2018.

[6] N. Bouch´e, H. Carfantan, I. Schroetter, L. Michel-Dansac, and T. Contini. GalPak3D: A Bayesian
Parametric Tool for Extracting Morphokinematics of Galaxies from 3D Data. The Astronomical
Journal, 150(3):92, 2015.

[7] D. Braess. Finite Elements: Theory, Fast Solvers, and Applications in Solid Mechanics. Cam-

bridge University Press, 3 edition, 2007.

[8] K. Bundy, M. A. Bershady, D. R. Law, R. Yan, N. Drory, N. MacDonald, D. A. Wake, B. Cherinka,
J. R. S´anchez-Gallego, A.-M. Weijmans, D. Thomas, C. Tremonti, K. Masters, L. Coccato,
A. M. Diamond-Stanic, A. Arag´on-Salamanca, V. Avila-Reese, C. Badenes, J. Falc´on-Barroso,
F. Belﬁore, D. Bizyaev, G. A. Blanc, J. Bland-Hawthorn, M. R. Blanton, J. R. Brownstein,
N. Byler, M. Cappellari, C. Conroy, A. A. Dutton, E. Emsellem, J. Etherington, P. M. Frinch-
aboy, H. Fu, J. E. Gunn, P. Harding, E. J. Johnston, G. Kauﬀmann, K. Kinemuchi, M. A. Klaene,
J. H. Knapen, A. Leauthaud, C. Li, L. Lin, R. Maiolino, V. Malanushenko, E. Malanushenko,
S. Mao, C. Maraston, R. M. McDermid, M. R. Merriﬁeld, R. C. Nichol, D. Oravetz, K. Pan,
J. K. Parejko, S. F. Sanchez, D. Schlegel, A. Simmons, O. Steele, M. Steinmetz, K. Thanjavur,
B. A. Thompson, J. L. Tinker, R. C. E. van den Bosch, K. B. Westfall, D. Wilkinson, S. Wright,
T. Xiao, and K. Zhang. Overview of the SDSS-IV MaNGA Survey: Mapping nearby Galaxies at
Apache Point Observatory. The Astrophysical Journal, 798(1):7, 2015.

[9] M. Cappellari. Improving the full spectrum ﬁtting method: accurate convolution with Gauss-

Hermite functions. Mon Not R Astron Soc, 466(1):798–811, 2017.

[10] M. Cappellari and Y. Copin. Adaptive spatial binning of integral-ﬁeld spectroscopic data using

Voronoi tessellations. Mon Not R Astron Soc, 342(2):345–354, 2003.

[11] T. A. Davis, K. Alatalo, M. Bureau, M. Cappellari, N. Scott, L. M. Young, L. Blitz, A. Crocker,
E. Bayet, M. Bois, F. Bournaud, R. L. Davies, P. T. de Zeeuw, P.-A. Duc, E. Emsellem, S. Khoch-
far, D. Krajnovi´c, H. Kuntschner, P.-Y. Lablanche, R. M. McDermid, R. Morganti, T. Naab, Oost-
erloo T, M. Sarzi, P. Serra, and A.-M. Weijmans. The ATLAS3D Project - XIV. The extent and

30

kinematics of the molecular gas in early-type galaxies. Mon Not R Astron Soc, 429(1):534–555,
2013.

[12] A. De Cezaro, M. Haltmeier, A. Leitao, and O. Scherzer. On Steepest-Descent-Kaczmarz methods
for regularizing systems of nonlinear ill-posed equations. Applied Mathematics and Computation,
202(2):596–607, 2008.

[13] H. W. Engl, M. Hanke, and A. Neubauer. Regularization of inverse problems. Dordrecht: Kluwer

Academic Publishers, 1996.

[14] J. Falc´on-Barroso and M. Martig. BAYES-LOSVD: A Bayesian framework for non-parametric

extraction of the line-of-sight velocity distribution of galaxies. A&A, 646:A31, 2021.

[15] K. Freeman and J. Bland-Hawthorn. The New Galaxy: Signatures of Its Formation. Annual

Review of Astronomy and Astrophysics, 40:487–537, 2002.

[16] G. H. Golub and C. F. Van Loan. Matrix computations. Johns Hopkins Studies in the Mathe-

matical Sciences. Johns Hopkins University Press, Baltimore, MD, fourth edition, 2013.

[17] A. Gu´erou, E. Emsellem, D. Krajnovi´c, R. M. McDermid, T. Contini, and P. M. Weilbacher.
Exploring the mass assembly of the early-type disc galaxy NGC 3115 with MUSE. A&A, 591:A143,
2016.

[18] M. Haltmeier, A. Leitao, and O. Scherzer. Kaczmarz methods for regularizing nonlinear ill-posed

equations I: convergence analysis. Inverse Problems & Imaging, 1(2):289–298, 2007.

[19] M. Hanke. Accelerated landweber iterations for the solution of ill-posed equations. Numerische

Mathematik, 60(1):341–373, 1991.

[20] A. Helmi, C. Babusiaux, H. H. Koppelman, D. Massari, J. Veljanoski, and A. G. A. Brown. The
merger that led to the formation of the Milky Way’s inner stellar halo and thick disk. Nature,
563(7729):85–88, 2018.

[21] S. Hubmer and R. Ramlau. Convergence analysis of a two-point gradient method for nonlinear

ill-posed problems. Inverse Problems, 33(9):095004, 2017.

[22] S. Hubmer and R. Ramlau. Nesterov’s accelerated gradient method for nonlinear ill-posed prob-

lems with a locally convex residual functional. Inverse Problems, 34(9):095003, 2018.

[23] S. Hubmer and E. Sherina. Characterizations of Adjoint Sobolev Embedding Operators for Inverse

Problems. ArXiv preprint, 2022. Green OA, available from: https://arxiv.org/abs/2202.05101.

[24] P. Jethwa. popkinmocks. https://github.com/prashjet/popkinmocks/releases/tag/v0.0.0,

2021-12-01. Version v0.0.0.

[25] Q. Jin. Landweber-Kaczmarz method in Banach spaces with inexact inner solvers.

Inverse

Problems, 32(10):104005, 2016.

[26] M. Jung and U. Langer. Methode der ﬁniten Elemente f¨ur Ingenieure: Eine Einf¨uhrung in die
numerischen Grundlagen und Computersimulation. SpringerLink : B¨ucher. Springer Fachmedien
Wiesbaden, 2012.

[27] B. Kaltenbacher, A. Neubauer, and O. Scherzer. Iterative regularization methods for nonlinear

ill-posed problems. Berlin: de Gruyter, 2008.

[28] S. Kindermann. Optimal-order convergence of Nesterov acceleration for linear ill-posed problems.

Inverse Problems, 37(6):065002, 2021.

[29] S. Kindermann and A. Leitao. Convergence rates for Kaczmarz-type regularization methods.

Inverse Problems & Imaging, 8(1):149–172, 2014.

[30] H. Long, B. Han, and S. Tong. A new Kaczmarz-type method and its acceleration for nonlinear

ill-posed problems. Inverse Problems, 35(5):055004, 2019.

31

[31] A. K. Louis.

Inverse und schlecht gestellte Probleme. Teubner Studienb¨ucher Mathematik.

Vieweg+Teubner Verlag, 1989.

[32] D. Martinez-Delgado, A. P. Cooper, J. Roman, A. Pillepich, D. Erkal, S. Pearson, J. Mous-
takas, C. F. P. Laporte, S. Laine, M. Akhlaghi, D. Lang, D. Makarov, A. S. Borlaﬀ, G. Do-
natiello, W. J. Pearson, J. Miro-Carretero, J. C. Cuillandre, H. Dominguez, S. Roca-Fabrega,
C. S. Frenk, J. Schmidt, M. A. Gomez-Flechoso, R. Guzman, N. I. Libeskind, A. Dey, B. A.
Weaver, D. Schlegel, A. D. Myers, and F. G. Valdes. Hidden Depths in the Local Universe: the
Stellar Stream Legacy Survey. arXiv e-prints, 2021.

[33] J. Necas. Direct Methods in the Theory of Elliptic Equations. Springer Monographs in Mathe-

matics. Springer Berlin Heidelberg, 2011.

[34] Y. Nesterov. A method of solving a convex programming problem with convergence rate O(1/k2).

Soviet Mathematics Doklady, 27(2):372–376, 1983.

[35] A. Neubauer. When do Sobolev spaces form a Hilbert scale. Proc. Amer. Math. Soc., 103:557–562,

1988.

[36] A. Neubauer. On Landweber iteration for nonlinear ill-posed problems in Hilbert scales. Numer.

Math., 85(2):309–328, 2000.

[37] A. Neubauer. On Nesterov acceleration for Landweber iteration of linear ill-posed problems. J.

Inv. Ill-Posed Problems, 25(3):381–390, 2017.

[38] P. Ocvirk, C. Pichon, A. Lan¸con, and E. Thi´ebaut. STECKMAP: STEllar Content and Kine-
matics from high resolution galactic spectra via Maximum A Posteriori. Mon Not R Astron Soc,
365(1):74–84, 2006.

[39] R. Ramlau. A modiﬁed Landweber method for inverse problems. Numerical Functional Analysis

and Optimization, 20(1-2):79–98, 1999.

[40] F. Rizzo, S. Vegetti, F. Fraternali, and E. Di Teodoro. A novel 3D technique to study the

kinematics of lensed galaxies. Mon Not R Astron Soc, 481(4):5606–5629, 2018.

[41] S. F. S´anchez, R. C. Kennicutt, A. Gil de Paz, G. van de Ven, J. M. V´ılchez, L. Wisotzki,
C. J. Walcher, D. Mast, J. A. L. Aguerri, S. Albiol-P´erez, A. Alonso-Herrero, J. Alves, J. Bakos,
T. Bart´akov´a, J. Bland-Hawthorn, A. Boselli, D. J. Bomans, A. Castillo-Morales, C. Cortijo-
Ferrero, A. de Lorenzo-C´aceres, A. Del Olmo, R. J. Dettmar, A. D´ıaz, S. Ellis, J. Falc´on-
Barroso, H. Flores, A. Gallazzi, B. Garc´ıa-Lorenzo, R. Gonz´alez Delgado, N. Gruel, T. Haines,
C. Hao, B. Husemann, J. Igl´esias-P´aramo, K. Jahnke, B. Johnson, B. Jungwiert, V. Kalinova,
C. Kehrig, D. Kupko, A. R. L´opez-S´anchez, M. Lyubenova, R. A. Marino, E. M´armol-Queralt´o,
I. M´arquez, J. Masegosa, S. Meidt, J. Mendez-Abreu, A. Monreal-Ibero, C. Montijo, A. M.
Mour˜ao, G. Palacios-Navarro, P. Papaderos, A. Pasquali, R. Peletier, E. P´erez, I. P´erez, A. Quir-
renbach, M. Rela˜no, F. F. Rosales-Ortega, M. M. Roth, T. Ruiz-Lara, P. S´anchez-Bl´azquez,
C. Sengupta, R. Singh, V. Stanishev, S. C. Trager, A. Vazdekis, K. Viironen, V. Wild, S. Zibetti,
and B. Ziegler. CALIFA, the Calar Alto Legacy Integral Field Area survey. I. Survey presentation.
A&A, 538:A8, 2012.

[42] M. Sarzi, E. Iodice, L. Coccato, E. M. Corsini, P. T. de Zeeuw, J. Falc´on-Barroso, D. A. Gadotti,
M. Lyubenova, R. M. McDermid, G. van de Ven, K. Fahrion, A. Pizzella, and L. Zhu. Fornax3D
project: Overall goals, galaxy sample, MUSE data analysis, and initial results. A&A, 616:A121,
2018.

[43] O. Scherzer. A convergence analysis of a method of steepest descent and a two-step algorithm for
nonlinear ill-posed problems. Numerical Functional Analysis and Optimization, 17(1-2):197–214,
1996.

32

[44] N. Scott, J. van de Sande, S. M. Croom, B. Groves, M. S. Owers, H. Poetrodjojo, F. D’Eugenio,
A. M. Medling, D. Barat, T. M. Barone, J. Bland-Hawthorn, S. Brough, J. Bryant, L. Cortese,
C. Foster, A. W. Green, S. Oh, M. Colless, M. J. Drinkwater, S. P. Driver, M. Goodwin, M. L. P.
Gunawardhana, C. Federrath, L. Harischandra, Y. Jin, J. S. Lawrence, N. P. Lorente, E. Manner-
ing, S. O’Toole, S. N. Richards, S. F. Sanchez, A. L. Schaefer, K. Sealey, R. Sharp, S. M. Sweet,
D. S. Taranu, and M. Varidel. The SAMI Galaxy Survey: Data Release Two with absorption-line
physics value-added products. Mon Not R Astron Soc, 481(2):2299–2319, 2018.

[45] S. Sharma, M. R. Hayden, J. Bland-Hawthorn, D. Stello, S. Buder, J. C. Zinn, T. Kallinger, M. As-
plund, G. M. De Silva, V. D’Orazi, K. Freeman, J. Kos, G. F. Lewis, J. Lin, K. Lind, S. Martell,
J. D. Simpson, R. A. Wittenmyer, D. B. Zucker, T. Zwitter, B. Chen, K. Cotar, J. Esdaile,
M. Hon, J. Horner, D. Huber, P. R. Kaﬂe, S. Khanna, Y.-S. Ting, D. M. Nataf, T. Nordlander,
M. H. M. Saadon, T. Tepper-Garcia, C. G. Tinney, G. Traven, F. Watson, D. Wright, and R. F. G.
Wyse. Fundamental relations for the velocity dispersion of stars in the Milky Way. Mon Not R
Astron Soc, 506(2):1761–1776, 2021.

[46] T. Strohmer and R. Vershynin. A randomized solver for linear systems with exponential con-
vergence. In J. D´ıaz, K. Jansen, J. D. P. Rolim, and U. Zwick, editors, Approximation, Ran-
domization, and Combinatorial Optimization. Algorithms and Techniques, pages 499–507, Berlin,
Heidelberg, 2006. Springer Berlin Heidelberg.

[47] E. M. Di Teodoro and F. Fraternali. 3D BAROLO: a new 3D algorithm to derive rotation curves

of galaxies. Mon Not R Astron Soc, 451(3), 2015.

[48] A. N. Tikhonov. Regularization of incorrectly posed problems. In Soviet Mathematics Doklady,

volume 4, pages 1624–1627, 1963.

[49] R. P. van der Marel and M. Franx. A New Method for the Identiﬁcation of Non-Gaussian Line

Proﬁles in Elliptical Galaxies. Astrophysics Journal, 407:525, 1993.

[50] M. R. Varidel, S.M. Croom, G. F. Lewis, B. J. Brewer, E. M. Di Teodoro, M. Enrico, J. Bland-
Hawthorn, J. J. Bryant, C. Federrath, C. Foster, K. Glazebrook, M. Goodwin, B. Groves, A. M.
Hopkins, J. S. Lawrence, A. R. L´opez-S´anchez, A. M. Medling, M. S. Owers, S. N. Richards,
R. Scalzo, N. Scott, S. M. Sweet, D. S. Taranu, and J. van de Sande. The SAMI Galaxy Survey:
Bayesian inference for gas disc kinematics using a hierarchical Gaussian mixture model. Mon Not
R Astron Soc, 485(3):4024–4044, 2019.

[51] A. Vazdekis, P. S´anchez-Bl´azquez, J. Falc´on-Barroso, A. J. Cenarro, M.A. Beasley, N. Cardiel,
J. Gorgas, and R. F. Peletier. Evolutionary stellar population synthesis with MILES - I. The base
models and a new line index system. Mon Not R Astron Soc, 404(4):1639–1671, 2010.

[52] G. Worthey. Comprehensive Stellar Population Models and the Disentanglement of Age and

Metallicity Eﬀects. Astrophysical Journal Supplement Series, 95:107, 1994.

[53] L. Zhu, G. van de Ven, R. Leaman, R. J. J. Grand, J. Falc´on-Barroso, P. Jethwa, L. Watkins,
S. Mao, A. Poci, R. M. McDermid, and D. Nelson. Disentangling the formation history of galaxies
via population-orbit superposition: method validation. Mon Not R Astron Soc, 496(2):1579–1597,
2020.

[54] Ling Zhu, Glenn van de Ven, Ryan Leaman, Annalisa Pillepich, Lodovico Coccato, Yuchen Ding,
Jes´us Falc´on-Barroso, Enrichetta Iodice, Ignacio Martin Navarro, Francesca Pinna, Enrico Maria
Corsini, Dimitri A. Gadotti, Katja Fahrion, Mariya Lyubenova, Shude Mao, Richard McDermid,
Adriano Poci, Marc Sarzi, and Tim de Zeeuw. The Fornax3D project: discovery of ancient
massive merger events in the Fornax cluster galaxies NGC 1380 and NGC 1427. arXiv e-prints,
page arXiv:2203.15822, March 2022.

33

