Computational challenges of cell cycle analysis using single cell
transcriptomics

Alexander Chervov1,2,3, Andrei Zinovyev1,2,3

1Institut Curie, PSL Research University, Paris, France
2INSERM U900, Paris, France
3MINES ParisTech, CBIO-Centre for Computational Biology, PSL Research University, Paris, France.

Abstract

The cell cycle is one of the most fundamental biological processes important for understanding
normal physiology and various pathologies such as cancer. Single cell RNA sequencing technologies
give an opportunity to analyse the cell cycle transcriptome dynamics in an unprecedented range
of conditions (cell types and perturbations), with thousands of publicly available datasets. Here
we review the main computational tasks in such analysis: 1) identiﬁcation of cell cycle phases,
2) pseudotime inference, 3) identiﬁcation and proﬁling of cell cycle-related genes, 4) removing cell
cycle eﬀect, 5) identiﬁcation and analysis of the G0 (quiescent) cells. We review seventeen software
packages that are available today for the cell cycle analysis using scRNA-seq data. Despite huge
progress achieved, none of the packages can produce complete and reliable results with respect to all
aforementioned tasks. One of the major diﬃculties for existing packages is distinguishing between
two patterns of cell cycle transcriptomic dynamics: normal and characteristic for embryonic stem
cells (ESC), with the latter one shared by many cancer cell lines. Moreover, some cell lines are
characterized by a mixture of two subpopulations, one following the standard and one ESC-like cell
cycle, which makes the analysis even more challenging. In conclusion, we discuss the diﬃculties of
the analysis of cell cycle-related single cell transcriptome and provide certain guidelines for the use
of the existing methods.

Keywords: cell cycle, singe cell, transcriptome, trajectory, scRNA-Seq

2
2
0
2

g
u
A
0
1

]

M
Q
.
o
i
b
-
q
[

1
v
9
2
2
5
0
.
8
0
2
2
:
v
i
X
r
a

Preprint submitted to Elsevier

August 11, 2022

 
 
 
 
 
 
Contents

1 Introduction

1.1 The context of the review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.2 Tasks for cell cycle analysis based on scRNA-seq data . . . . . . . . . . . . . . . . .

2 Studying the cell cycle transcriptomic dynamics at genome-wide level

2.1 Synchronized and asynchronized cell cycle studies
2.2 Studying the cell cycle at single cell transcriptome level
2.3 Advantages and disadvantages of single cell transcriptomic methods

. . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . .

3 Basic methods of the cell cycle analysis using scRNA-seq data, pitfalls and guide-

lines
3.1 G1/S-G2/M-phase plot - the ﬁrst, simple and a must thing to do
3.2
3.3

. . . . . . . . . .
. . . . . . . . . . .
Interpretation of the ”standard” (”triangle”) cell cycle pattern.
”Fast” (ESC-like) cell cycle trajectory pattern seen through the single cell transcrip-
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
tomic measurements.
3.4 Mixture of the normal and ”fast” cell cycle within one cell type
. . . . . . . . . . .
3.5 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

4 Five main computational tasks for the analysis of cell cycle progression from

3
3
4

6
6
7
8

9
9
10

11
12
13

14
14

single cell data
4.1 Cell cycle (sub-)phase detection

scriptomes

. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.1.1 What cell cycle phases/subphases can be distinguished from single cell tran-
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.1.2 Basic approaches for annotating cells into cell cycle phases
. . . . . . . . . .
4.1.3 Existing packages and their quality of predictions . . . . . . . . . . . . . . . .
4.1.4 Conclusions on the assigning cell cycle phases task . . . . . . . . . . . . . . .
4.2 Cell cycle (pseudo)time quantiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2.1 Brief overview of the cell cycle pseudotime quantiﬁcation approaches . . . . .
4.2.2 Basic approaches for the cell cycle pseudotime quantiﬁcation . . . . . . . . .
4.2.3 Controling the methods for quantifying cell cycle pseudotime . . . . . . . . .
4.2.4 Concluding remarks on cell cycle pseudotime quantiﬁcation task . . . . . . .
4.3 Detecting genes associated with the cell cycle progression, plotting their (pseudo)temporal
proﬁles and clustering them . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.4 Distinguishing proliferating from resting cells, characterizing the ”G0” heterogeneity
4.4.1 The ”G0”-task(s): problem formulation . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .
4.4.2 Cell cycle and ”G0”: state of the art.
4.5 Removing the cell cycle eﬀect from the single cell data . . . . . . . . . . . . . . . . .
4.5.1 Removing the cell cycle eﬀect: problem formulation . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . .
4.5.2 Removing the cell cycle eﬀect: state of the art

14
14
15
15
16
16
17
18
18

18
20
21
22
23
23
24

5 Discussion.

5.1 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.2 Guidelines for users . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.3 Open questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.4 Suggestions for package developers . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.5 Use of Kaggle for analysis and the technical reproducibility . . . . . . . . . . . . . .
5.6 Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

6 Acknowledgements

25
25
26
27
30
31
31

32

2

Appendix A

Technical review of the existing software features

Cyclone, Oscope, ccRemover, scLVM, f-scLVM (Slalom) . . . . . . . .
Appendix A.1
Seurat/Scanpy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Appendix A.2
reCAT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Appendix A.3
Appendix A.4
Cyclum . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Appendix A.5 Revelio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
PECO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Appendix A.6
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Appendix A.7
CCAF
Appendix A.8 DeepCycle
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tricycle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Appendix A.9
SC1CC, CCPE, Pre-Phaser, CycleX . . . . . . . . . . . . . . . . . .
Appendix A.10

42
42
43
45
45
46
47
47
48
49
50

1. Introduction

1.1. The context of the review

The cell cycle is a fundamental biological process which is of utmost importance for cancer
research, where the deviation from the normal cell cycle progression is expected as well as for other
domains. It is widely studied from various points of view: for example, the Nobel prize in 2001 was
awarded for ”discoveries of key regulators of the cell cycle”. It is still a ﬁeld of active research with
more than 10000 publications per year containing the keyword ”cell cycle” [1].

Single cell sequencing technologies had a huge impact on many areas of the biological research

in particular: oncology [2], developmental biology [3], immunology [4], etc.

The aim of the present review is to discuss how the properties of cell cycle in a given context can
be studied using the scRNA-seq data. We brieﬂy describe 17 available packages for such analysis,
focusing on computational, rather than biological, aspects. We also focus on cell cycle for mammals
because such data widely dominate available scRNA-seq datasets and for their potential impact on
translational research.

Navigation through the review. Readers of this review oriented towards application of
computational methods might have a question on how good are the most popular software packages
for single cell data analysis (e.g., Seurat [5], Scanpy [6]) to analyse the cell cycle dynamics and
are there better alternatives? The brief analysis of the Seurat/Scanpy features related to cell cycle
can be found in section 4.1.1, Appendix A.2, some our brief conclusions on the choice of the
package might be found in section 5.1. Readers with more biological focus may be ﬁrst interested
in the question: what are the new insights can scRNA-seq methods provide compared to the more
traditional methods, when cell cycle is studied? This aspect is discussed in the subsections 2.2, 2.3.
Despite many limitations, unprecedented amount of publicly available scRNA-seq data provides a
previously not available opportunity to analyse the cell cycle dynamics under various conditions (cell
types, perturbations (drugs, knockouts, mutations)), using only computational approach.

The organization of the paper is the following: subsection 1.2 provides brief snapshot of the
review - the main computational tasks formulated, the packages listed, the main subtle points are
highlighted. Section 2.1 - brief reminder of biological research related to the review; section 3 -
highlights basic ideas and subtleties of the cell cycle analysis; section 4 - detailed discussion of
the main tasks: descriptions, subtleties, approaches, state of the art, etc.; section 5 - summary,
guidelines, open questions, concluding remarks ; section Appendix A provides a technical review of
17 existing packages . Sections 3, 4 are somewhat key for the review.

The review is an outcome of developing our own methodology to analyse the cell cycle using
single cell RNA sequencing data and comparing it with existing approaches. More details on this
are at end of the section 1.2.

Single cell RNA sequencing. The standard single cell RNA sequencing biotechnologies com-
bined with bioinformatics pipelines produce ”count matrices”, i.e. cell x gene (transcript) matrices
which characterizes the level of expression of each gene (transcript) in every cell captured for the
measurement. The technology rapidly evolves since 2014, producing large amounts of data. The
so-called Svennson’s list contains references to more than 1600 scRNA-seq experiments and it is not
exhaustive, with the median number of cells in a dataset equal to 10000 cells [7]. Top experiments

3

delivered more than 4 millions individual cell transcriptomes (e.g., the human fetal atlas [8] ). There
were several atlas level studies published: ”Tabula Muris” with 100,000 mouse cells from 20 organs
and tissues [9], ”Tabula Sapiens” with more than 500 000 cells from 400 cell types and 24 tissues
and organs [10], ”ENCODE” with sequenced mouse embryos from day 10.5 to the birth, sampling
17 tissues and organs [11]. The Human Cell Atlas Project is an international collaborative eﬀort
aiming at deﬁning all human cell types in terms of distinctive molecular proﬁles [12]. Several other
atlases are available in the ﬁeld, also many cancer cell lines are proﬁled: i.e., part of Cancer Cell Line
Encyclopedia (CCLE) with 198 cancer cell lines from 22 cancer types [13], 35,276 cells from 32 breast
cancer cell lines [14]. Datasets for various cell types, cell lines, under various perturbations (drugs,
knockouts, diseases ) are publicly available. Recent breakthrough technology Perturb-seq merges
CRISPR with scRNA-seq ad provides data on perturbations systematically and on unprecedented
scale [15], [16].

The cell cycle. The cell cycle, or cell-division cycle, is a biological process starting from the cell
birth to its division into two daughter cells that give birth to two new cells that in turn grow and
divide into two daughter cells, and so on. Therefore, it is a cyclic process. The eukaryotic cell cycle
is known to be subdivided into four main phases: G1 (Gap 1), S (synthesis - replicating the DNA),
G2 (Gap 2), M (Mitosis - cell division). It is highly conservative for eukaryotes (but is somewhat
diﬀerent from bacteria). For example, the Nobel prize winning studies were mainly done for the
yeast, but similar genes and mechanisms are present in mammalian cells despite billions of years of
evolutionary distance. The duration of the cell cycle for normal mammalian cells varies around 24
hours, while for some faster dividing mammalian cells (like embryonic stem cells (ESC)) it can be
shortened up to 12 hours. For the yeast cells, the cell cycle is much shorter and takes 1-2 hours.
Cancers are diseases characterized by the abnormal cell growth, with broken mechanisms of the cell
cycle control. It is one of the key ”Hallmarks of cancer” (D.Hanahan, R.Weinberg) [17], [18], [19].

Classical books are devoted or have chapters on the cell cycle: [20], [21], [22]. The topic is still
in active research. The mechanisms of most chemotherapy and target therapy types are related to
deregulation of the cell cycle machinery. For example, CDK-inhibitors were the focus of multiple
recent studies [23], [24].

1.2. Tasks for cell cycle analysis based on scRNA-seq data

Here we brieﬂy introduce the computational tasks in the analysis of cell cycle dynamics from
single cell data where the input is a matrix (cells x genes) and the output is one of the following
(Figure 1):

1) ”Cell cycle phase labels”. Each cell in the dataset should receive a label like G1,S,G2,M, G0.
2) ”Pseudotime quantiﬁcation”. Each cell should be attributed a real number reﬂecting how far

the cell progressed from its birth to the cell division moment.

3) ”Listing the cell cycle-related genes”. For each gene one would like to quantify the statistical
signiﬁcance of the consistent pattern of the expression dynamics along the cell cycle trajectory and
visualize this pattern.

4) ”Determining G0 (quiescent) state.” Distinguish proliferating and non-proliferating (staying
in quiescent state G0) cells. In more detail, analyse the composition of the quiescent cell state and
characterize the transition between proliferating and quiescent state(s).
5) ”Removing the cell cycle eﬀect from the scRNA-seq dataset”.

In many studies aiming at
identifying cell types, clustering cell states, cell trajectory inference, cell cycle-related heterogeneity
might represent a confounding eﬀect. The nature of this task is to remove this signal from the data.
Note that in all of these tasks we do not assume any available cell labeling, which can allow
some additional types of analyses. Indeed, for example cell cycle phase labels might be provided for
individual cells but this information requires a complex experimental setting and, therefore, rarely
available.

The aim of this review is to discuss in some detail these ﬁve tasks and what available packages

can achieve in solving them.

Computational tools assessed in this review. We identiﬁed 15 software packages speciﬁcally
devoted to cell cycle analysis using scRNA-seq data. There exist other more general scRNA-seq data
analysis tools which can be applied to the cell cycle analysis. We only brieﬂy mention scLVM and f-
scLVM (Slalom) from that category together with the most popular Seurat [5] and Scanpy [6] (which

4

Package

Lang

Year

Early development

C
C
P
h
a
s
e

P
s
e
u
d
o
t
i

m
e

C
y
c
l
i
c
G
e
n
e
s

R
e
m
o
v
e
C
C

G0

Seurat/Scanpy
R/Python
R,Python
scLVM
f-scLVM(Slalom) R,Python
R,Python
Cyclone
R
Oscope
R
ccRemover
R
reCAT
R+Python
cycleX

–
–

–
–

2018 + –
+ –
+ –
–
2015
– + + –
2017
–
2015 + –
2015
–
+ –
2016
2017 + + + – +
–
2017 + + –

–
– + + –
–

–

–

–

–

Pre-Phaser
Cyclum
Revelio
CCAF
Peco
SC1CC
DeepCycle
Tricycle
CCPE

Recent development

Python+C++ 2019 + + –
Python+TF
R
Python
R
R,Web
Python
R
M+R+Python

– +
2019 + + + + –
2019 + + + + –
– +
2020 + –
–
2020
– +
2020 + + –
2021 + + + –
–
2021 + + + + –
2021 + + + + –

– + + –

–

Table 1: List of computational tools for quantifying cell cycle from scRNA-Seq. Pluses and minuses indicate which
tasks the tool can perform: ”CC Phase” - assigning the cell cycle phase label, Pseudotime - inferring pseudotime
and producing pseudotemporal plots, ”Cyclic genes” - analysing/identifying genes associated to cell cycle, ”Remove
CC” - removing the cell cycle signal from the data, ”G0” - distinguish proliferating and non-proliferating cells. The
”Lang” column indicates the programming languages used for implementation. ”R,Python” means that there exist
two implementations, in R and Python, while ”R+Python” means that part of the code is implemented in R while
another part in Python.

both have cell cycle speciﬁc tools:
[27], [26] based on the same algorithm). There exist multiple
methods for analysing periodic dependencies, not speciﬁc to cell cycle scRNA-seq data. They are
also out of the scope of the present review, but we can mention the CYCLOPS package here that
potentially can be used [28, 29].

The existing scRNA-seq datasets are quite diverse in terms of quality and the number of cells.
In some high quality datasets, the cell cycle structure can be clearly resolved by most of the tools.
However, we found that none of the existing packages can uniformly well perform all the aforemen-
tioned tasks in complex/low quality scRNASeq datasets or assess the conﬁdence of the produced
results. This review aims at pointing to potential pitfalls and misinterpretations and provides some
guidance in these cases.

Complex scenario, re-analysis of existing data. The tasks introduced above can be solved
universally only if a computational tool is aware of various possible types of cell cycle dynamics that
one can observe by re-analysing hundreds of scRNA-Seq datasets. By doing such a meta-analysis, we
could conclude that the transcriptomic dynamics of cell cycle can be classiﬁed in several types. There
exists a well-known pattern of cyclin time dependence (Figure 3A) which can be indeed observed
in many cell types. However, in many others, such as embrionic stem cells (ESC) and many cancer
cell lines not only cyclins, but the large groups of genes reﬂected in the standard signatures of
G1/S and G2/M cell cycle phases can form a less known ”seesaw” pattern (Figure 4): when one
group of genes goes up, the other one goes down and vice versa. This means that immediately after
the mitosis, G1/S signature genes begin to increase their expression. In this mode the restriction
point (R-point), which is normally characterized by some minimal expression level of most cell cycle
genes simultaneously, is not observed as a transcriptomic state. This is in line with the well-known
observation of the G1-phase shortening for ESC (e.g. [30], [31], [32], [33], [34], [35], etc.), reﬂected
at the level of single cell transcriptomes. Thus, the anticorrelation of G1/S and G2/M signature
score is an indication of the ”fast” (ESC-like) proliferation.

5

We observe such pattern for many cancer cell lines. Biologically this can be related to the
deregulation of the TP53-p21(CDNKN1A)-Cyclin/CDK-Rb-EF pathway (e.g. [36]). We also observe
that many computational tools aiming at the analysis of cell cycle dynamics from single cell data
(including the most popular one such as Seurat/Scanpy) are not able to interpret such pattern
correctly. We explain the nature of this diﬃculty in detail and suggest ways of dealing with it (see
subsection 3.3 ).

Even more complex phenomena may sometimes appear: within even seemingly homogeneous
cell populations, e.g. cell lines, some cells may proliferate according to the ”fast” pattern, some
according to the ”standard” pattern. We observed such a pattern in several well-known cell lines
proﬁled at single cell level such as U2OS or MCF10-2A. Such phenomenon has not been described
yet in scRNA-seq related literature before and none of the packages can correctly deal with it. The
situation is especially diﬃcult since the ”fast” and the ”standard” cell cycle trajectories are merged
as ”Siamese twins”, having the common ”S-G2-M” segment with only G1 part being diﬀerent (see
Figure 5C). We demonstrate possible approaches to resolve this issue (see subsection 3.4). The
existence of the bifurcation in the cell cycle dynamics is in principle described in the literature
[37], [38], [39]. Moreover, it can be related to the existence of the minor cancer cell subpopulations
resistant to the treatment by the CDK-inhibitors [23]. These studies were done using proteomics
and image analysis-based approaches targeted on speciﬁc proteins such as CDK2 and Cyclin E.
Observing such a bifurcation pattern at the level of scRNA-Seq provides new opportunities for the
mechanistic understanding of its nature, using genome-wide transcriptome analysis, which principles
are explained in the section 3.

The review grow out of developing our own methodology to analyse the cell cycle using sin-
gle cell RNA sequencing data, a part of it can be found in [40], [41], which is based on ElPi-
Graph package [42]. We have analysed several hundreds datasets in particular from collections like
ARCHS4 [43], and atlas scale ”Tabula Muris” [9] , ”Tabula Sapiens” [10], ”ENCODE” [11], etc.
Analysis shows that for the standard cases of the cell cycle many approaches work quite ﬁne, but
as described above there are more subtle situations where analysis is challenging. We put 50+
datasets and notebooks based on our own methodology on the Kaggle cloud service, which is dis-
tinguished in that it allows one to execute code and store data in one place. It can be found at:
https://www.kaggle.com/search?q=scRNA-seq+in%3Adatasets.

2. Studying the cell cycle transcriptomic dynamics at genome-wide level

Let us provide a brief reminder on some biological cell cycle studies related to the current review.
The ﬁrst subsection concerns more classical studies, and the second single cell RNA sequencing ones.

2.1. Synchronized and asynchronized cell cycle studies

Cell cycle has been widely studied long before the appearance of single cell technologies. Early
studies that shaped the understanding of the main principles of the cell cycle (in particular Nobel
prize wining) were based on studying expression dynamics of a restricted number of proteins.

Genome-wide transcriptomics studies of yeast cell cycle began to appear around 1998[44] followed
by the seminal studies of cell cycle in HeLa human cell line [45]. In late 2000s, several systematic
genome wide transcriptomic studies were made using other human cell types, human foreskin ﬁbrob-
lasts [46], an immortalized human keratinocyte cell line (HaCat) [47], and the osteosarcoma-derived
cell line (U2OS) [48]. These studies reported 874, 480, 1249, 1871 cell cycle related genes. The
following meta-analysis revealed certain diﬃculties to draw a fully consistent picture of the cell cycle
[48], [49], [50]. Firstly, there was a rather small intersection in the gene lists: ”despite the pairwise
overlaps being in the 40 percent range, there are 142 genes that are cell cycle regulated in all three
cell types” (and adding the 4th dataset one gets only 96 genes) [48]. Secondly, the assignment of
gene activities into cell cycle phases (based on the peaks of expression) was also not consistent: ”only
18 genes were annotated as G2/M and 16 genes as G1/S consistently across all four studies, while
for the other phases (S, G2, M/G1), not even a single gene was identiﬁed by all studies” [49].

Studying the cell cycle based on bulk transcriptome relies on the cell synchronization, i.e. cell
populations must be blocked in a certain phase of the cell cycle (e.g. by double thymidine block, by
thymidine-nocodazole block, etc), then simultaneously released from the block, and some fractions of

6

cells are longitudinally sequenced. Thus one can obtain the temporal plots of the genes’ expression
dynamics. Examples of such plots can be found at the Cyclebase website [51] for HeLa and several
other cell lines. These experiments do not need single cell sequencing because we can assume that
all the cells are in the same position of the cell cycle progression: however, this assumption is known
to be not fully realistic. Cells progress the cell cycle not exactly with the same speed and some do
not progress at all, thus synchronization is not exact. To overcome this issue several single cell (even
though not scRNA-seq) experiments have been performed, see them reviewed in [38].

Importantly, these early works revealed certain deviations from the classical textbook picture of
the cell cycle. In particular, it has been discovered that progression through the R-restriction point
is not required for all cells. In some situations there were cell subpopulations (within a seemingly
homogeneous cell line) which progressed through the cell without R-point [37], [38], [39]. They
were committed to the next round of cell cycle during the preceding round, and they could progress
through the cell cycle in a mitogen independent way.

Interestingly, in early times it was thought that all the CDKs are equally important for cell
cycle progression in all cells. However, later it was understood that certain CDK are only essential
for proliferation of specialized cells. Thus, it was hypothesized that ”selective CDK inhibition may
provide therapeutic beneﬁt against certain human neoplasias” [52], [53], [54].

Another important research direction is studying the eﬀect of knocking out cell cycle-related
genes and estimating their impact on the cell cycle phenotype [55], [56], [57]. For example, using
this approach one can compare cancer and non-cancer cell lines and emphasize the diﬀerence in their
cell cycle regulation.

Of course, there are great numbers of other important cell cycle studies that we cannot mention

all here.

2.2. Studying the cell cycle at single cell transcriptome level

ScRNA-seq method provided a huge impact on many ﬁelds of biological research. In particular,
the structure of cell populations can now be studied much more directly than ever. New small
subpopulations have been discovered, diﬀerentiation and other dynamical processes like epithelial-
to-mesenchymal transition (EMT) can be understood much better now with the use of single cell
approaches. Computational methods play a pivotal role in these studies [58], [59], [60], [61].

Cell cycle is a major focus in many scRNA-seq studies. It is important in the context of cancer
biology since proliferation is one of the key cancer hallmarks [62], [63], [13]. A connection between
major oncogene drivers and the cell cycle progression has been studied at single cell level (for
example, see [40]). A typical problem in cancer treatment is the appearance of drug resistance which
is sometimes attributed to the existence of small subpopulations of tumor cells which are able to
survive the treatment. Therefore, scRNA-seq methods appear natural for searching, characterizing
such subpopulations and studying their adaptation strategies [64]. One of the ways to attack the
resistance problem is to use combinations of drugs. Recent single cell studies like [65] suggest ways
for how to search for such combinations involving the analysis of cell cycle. Another example: minor
cell subpopulations in prostate cancer that are androgen independent are the possible reasons for
the resistance to androgen-deprivation therapy. Using single cell-based analysis of the cell cycle it
was suggested that they can characterized by the enhanced expression of 10 cell cycle-related genes:
CCNB2, DLGAP5, CENPF, CENPE, MKI67, PTTG1, CDC20, PLK1, HMMR, and CCNB1 [66].
Single cell approaches give a hope to decipher the connection between the genotype and complex
phenotypes such as cell cycle. Recent breakthrough technologies greatly upscale that opportunity:
thus, the Perturb-seq protocol merges CRISPR with scRNA-seq and provides the data on system-
atic gene perturbations on unprecedented scale [15], [16]. For example, it was reported that ”the
proportions of cells in each cell cycle phase was highly accurate (area under the precision-recall curve
of 1), suggesting that our TP53 variant phenotypes can be predicted from scRNA-seq data” [16]. In
what follows we will also discuss some other relation between TP53 and cell cycle dynamics type.

Pluripotent stem cells, relation of the cell cycle and diﬀerentiation. For this review it is
important to keep in mind that embryonic stem cells (ESC) are known to have an unusual cell cycle
pattern with shortened G1. There are numerous reports on the modiﬁed properties of cell cycle in
ESC and iPSC cells. It appears important to understand whether the unusual cell cycle machinery

7

is related to sustaining pluripotency (probably yes, but to what extent?) and, if yes, what is the
relation between pluripotency and cell cycle machinery.

In particular, it has been argued that diﬀerentiation typically happens in G1, so to sustain the
pluripotency, it is desirable to keep G1 as short as possible that can explain short G1 for ESC.
ScRNA-seq studies begin to play a role in such questions [67], [68].

In one of the earliest scRNA-seq study, mESC cells were assessed in diﬀerent conditions, reporting
diﬀerential heterogeneity in the cell cycle genes between conditions and a link with the cell cycle
speed [34]. In another study, use of scRNA-seq methods revealed that the fate of diﬀerentiation
(either to extraembryonic endoderm cells (XENs) or to epiblast stem cells) depends on the cell cycle
phase in which the diﬀerentiation stimuli (retinoic acid-based protocol) was applied [69].

G0, quiescence, senescence, cell cycle exit and reentry. Understanding the cell cycle
machinery is intimately related to understanding how the cells exit and (re)enter the cell cycle
from/to G0 (senescence, quiescence) state. Understanding the cellular dynamics within quiescence
and senescence state is also of great importance. That has been a topic of many studies for dozens
of years [70] but many questions remain to be understood.

Let us mention a few scRNA-seq related studies that are related to the present review.
In one of the earliest and excellent scRNA-seq papers, where many ideas of this review had
appeared, the single cell dynamics of hematopoetic cell aging was studied in mouse [71]. The
conclusion was tightly related to the cell cycle analysis: it was found that ”cell cycle dominates the
variability within each population and that there is a lower frequency of cells in the G1 phase among
old compared with young long-term HSCs, suggesting that they traverse through G1 faster”. It is
interesting to note that age diﬀerences were not observed among some non-cycling populations like
multipotent progenitors.

CCAF is a Python package with ”a cell cycle classiﬁer that identiﬁes traditional cell cycle phases
and a putative quiescent-like state in neuroepithelial-derived cell types during mammalian neuroge-
nesis and in gliomas” [72]. The authors mention that knockouts of ”Hippo/Yap and p53 pathways
diminished Neural G0 in vitro, resulting in faster G1 transit”. The paper proposes many other in-
teresting insights to molecular mechanisms of senescence in the context of neural cells, and it might
be that at least part of these ﬁndings can be generalized to other cell types. The study has a po-
tential clinical importance because quiescent glioma stem cells might be a reason for the treatment
resistance.

Recently an innovative approach for estimating cell cycle phases and pseudotime was suggested
[35] - based on studying the balance between spliced and unspliced transcript expression (idea used
in RNA-velocity [60]). The structure of a human ﬁbroblast subpolulation at G0 (or nearby) was
documented. The paper analyses several published gene markers for quantifying quiscence and shows
that their results are consistent with the expectations.

Let us also mention a recent single cell proteomics study [25], [73] where the single cell measure-
ment of expression of 48 proteins allowed the authors to characterize the structure of the senescence
state, score the ”degree of senescence”, and propose non-classical ways of exit from the cell cycle
(from G2 to G0). An interesting question is whether these results can be reproduced using the
scRNA-seq methods.

To conclude, scRNA-seq is a powerful technology which enabled remarkable progress in many
directions. Even though today the main focus of the scRNA-seq studies is not on the cell cycle, but
on subpopulation studies, diﬀerentiation etc, already obtained results suggest that the scRNA-seq
approach promises to substantially improve our understanding of the cell cycle regulation. This
might be important for many clinically relevant questions such as those related to CDK-inhibitors
[74], [24] in cancer research and other domains. Let us also note that single cell studies (not RNA-seq,
but mainly based on image-based protein expression measurements) provided important insights on
the cell cycle starting from almost ten years ago [37], [38],[23].

2.3. Advantages and disadvantages of single cell transcriptomic methods

scRNA-seq methods have certain limitations: they can only measure the transcriptome. Expres-
sion of proteins and their post-translational modiﬁcations are important for studying the cell cycle.
Compared to the bulk transcriptome experiments with cell synchronization (as those mentioned

8

above) scRNA-seq typically produces more noisy data and, thus, less precise. E.g. most recent syn-
chronization methods report up to 20 minutes time resolution of gene expressions proﬁles [75] that is
quite beyond the current scRNA-seq resolution. Single cell measurements are also substantially more
expensive than bulk methods. However, scRNA-seq methods are already produced and keep pro-
ducing large amounts of publicly available data, for various cell types, cell lines and perturbations.
For example, the transcriptomic proﬁles of 700 000+ cells from the three cell lines exposed to more
than 180 drugs were produced in a single screening [76]. Bulk experiments explored in great detail
4 cell lines in 10 years (as discussed above) while the scRNA-seq can produce results on hundreds
of cell lines in one study (such as the collection of CCLE with 200 cancer cell lines from 22 cancer
types) [13]. Not all of the available single cell datasets contain the proﬁles of proliferating cells, but
many of them do. Let us emphasize that any scRNA-seq dataset containing proliferating cells can
be used for the cell cycle analysis, i.e. there is no need of any special experimental design such as
cell synchronization, no use of speciﬁc protein markers. The analysis is purely computational: thus
it can be readily done for already published datasets.

3. Basic methods of the cell cycle analysis using scRNA-seq data, pitfalls and guidelines

Before going into the details in the next sections, here we will try to explain in simple words the
main ideas and subtleties of the cell cycle analysis based on scRNA-seq data. We also decided to
include some our original ﬁndings (which we will elaborate in subsequent publications), because they
seems to clarify certain points as well as more explicitly highlight subtle situations of the analysis.

3.1. G1/S-G2/M-phase plot - the ﬁrst, simple and a must thing to do

The ﬁrst and simple thing in the analysis of cell cycle using scRNA-Seq data is to create the G1/S-
G2/M-phase data visualization. It is interpretable and allows the visual control of the analysis. We
assume that log-based transformation and normalization have been already performed for scRNA-seq
dataset.

Plot construction. The plot is based on visualizing the scores of G1/S and G2/M gene signa-
tures, such as it was ﬁrst proposed in [62]. The score can be the mean of the expression levels for the
genes in a signature, or other suitable score. Therefore, each cell is characterized by two numbers
and the phase plot represents a simple scatterplot of all cells in such two dimensional plane.

Interpretation step 1, classifying the type of cell cycle pattern (standard vs non-
proliferating vs ESC-like (”fast”)). As our analysis of hundreds datasets shows, the obtained
plot may typically ﬁt in one of the three patterns (Figure 2 upper row):

0) the one of a population of non-proliferating cells - Figure 2A (of note, most of the normal cells

of an adult ogranism are not proliferating, this is a widespread pattern).

1) the one corresponding to the ”standard” cell cycle typical for normal and some of the cancer
cells - Figure 2B. Typically, it represents a triangle-like shape which we will discuss in detail below.
2) the ”fast” pattern - Figure 2C - characteristic for fast proliferating cells such as ESC, iPSC,
certain cancer cell lines, probably to T-cell at the stage of the clonal expansions (compare with [77]).
One can see that the standard G1/S-G2/M plot is diﬃcult to interpret in this case. We will discuss
how to deal with it below, and for the moment it is important to note that the G1/S-G2/M plot
easily allows one to distinguish such type of the cell cycle by mere visual inspection.

History of G1/S-G2/M plots. G1/S-G2/M plots were ﬁrst introduced (to the best of our
knowledge) around 2015 by Tirosh, Kowalczyk, Regev et.al.: see Figure 2F in [71], Figure 2A in
[62], Figure 3A in [63]. Firstly they were suggested on the basis of Whitﬁeld’s cell cycle phase gene
signatures [45]. Later on this approach became standard in Seurat/Scanpy packages. However, at
that time the datasets were quite small and noisy as one can see on the cited ﬁgures. The triangle-like
pattern and its interpretation (see the next section) seems to be not clearly stated in the literature. It
became possible because the quality and the size of the single cell datasets improved over the recent
years. Another possible reason which probably prevented some of the authors from using this type
of visualization is the existence of the ”fast” cell cycle pattern, which might seem uninterpretable in
G1/S-G2/M plot.

9

G1/S-G2/M plots in the standard packages (Seurat/Scanpy). The simplest way to
compute G1/S and G2/M scores for a single cell is to use the mean values of normalized and logged
gene expression in the signature. Some of the standard packages use an improvement of this simplest
approach by scaling and applying reference-based transformation of the gene expression levels. From
our experience, such transformation does not change the interpretation of the cell cycle trajectory
based on the analysis of its segments. At the same time, the appearance of negative score values and
the non-unique choice of the reference gene sets for the transformation can make the interpretation
of the standard G1/S-G2/M plot more diﬃcult.

3.2. Interpretation of the ”standard” (”triangle”) cell cycle pattern.

The G1/S-G2/M plot for the normal proliferating cells typically looks like a ”triangle” (see Figure

3B). It is just an approximation to the observed shape, but convenient to start with.

Left vertex: ”G-zero near zero”. The left bottom corner (near zero of coordinates) -
corresponds to cells which are either non-proliferating or in such part of G1 which is transcriptionally
similar to non-proliferating cells (”G0”-state).

Top vertex: ”Mitosis is on top”. The top corner of the triangle corresponds to mitosis.
That is the maximum of the G2M group of genes in particular cyclins A,B whose maximum is
approximately near mitosis. One should keep in mind that mitosis takes only small part of duration
of the cell cycle, so in typical scRNA-seq dataset only a small fraction of cells is in mitosis. And so
it is diﬃcult to place very exact bound between G2,G1 phases and mitosis with scRNA-seq data,
but its rough position is quite clear: it is located near the top corner of the triangle.

Left edge: ”G1-postmitotic”. The left segment of the triangle (from top to bottom-left)
corresponds to the post-mitotic part of G1-phase. That part starts after the mitosis and ends at the
R-(restriction point), where the cell decides to go to G0 or to the next round of the cell cycle.

Bottom edge: ”G1-prereplication”. The bottom segment of the triangle corresponds to
the second part of G1 phase (pre-replication) where cells committed to the next round of the cell
cycle are starting their preparation for the S-phase.

Right vertex: ”G1/S transition”.

The right corner of the triangle corresponds to the
transition from G1 phase to S-phase. That is the maximum of the G1/S group of genes, in particular,
cyclin E (CCNE1, CCNE2).

Right edge: ”S-G2-M”. The right segment of the triangle corresponds to the three phases
in once: S-phase,G2-phase and a part of M-phase. As mentioned above mitosis is quite short, so it
is not surprising that it is hardly distinguishable from G2. Tt is more surprising that the bound
between S-phase and G2 phase is not highlighted by something like a corner of the shape. We will
address that question later (one can probably choose other gene signatures rather than G1/S, G2/M
and it might be possible to observe the change in the transcriptome dynamics).

Rationale behind the interpretation of ”triangle” for the ”standard” cell cycle and
subtle points. The rationale behind the ”triangle” interpretation is simple and based on the
textbook plots of cyclins activities (Figure 3A). We can consider a simpliﬁed toy model for the G1/S
gene set just to consist from only cyclin E, and G2/M gene set can be representd by cyclin A or B or
their average (Figure 3C). Then the classsical textbook plots for their activities would result in that
the shape of the G1/S-G2/M phase plot would be close to a triangle-like shape (Figure 3D), with
the vertices and edges of the triangle corresponding to what has been described above. The step
from the toy model to real plot is also conceptually simple: the point is that there are many genes
which are correlated to cyclin E, and they are gathered in the G1/S signature. There is another
gene set G2/M collecting the genes correlated to the cyclins A and B. In the other words, genes
from the G1/S peak near the border of G1 and S phase, and genes from the G2/M peak in mitosis.
Therefore, making a 2D plot based on the means of the two gene sets, one obtains a triangle. Taking
the means of relatively large gene sets increases the signal to noise ratio and makes the triangle-like
shape more prominent.

More formalized model of the triangular-like shape of the standard transcriptomic cell cycle
trajectory in the G1/S-G2/M phase space was suggested recently in [41]. The modeling is based on
the general dynamical theory of self-replicating systems as allometric growth with switches and it
allows one to infer some ratios between physical time durations of the cell cycle phases.

10

The biological reason for the existence of correlated sets of genes is also clear: G1/S gene set is
co-regulated by the powerful transcription factor family of E2Fs, while the G2/M gene sets might
be also co-regulated, in particular, by the FOXM1 transcription factor. Potent transcription factors
can activate multiple genes simultaneously, that is the reason why there are large groups of genes
which behave in similar fashion. Let us also note that similar ”waves” of transcription have been
reported for yeasts, see the beautiful Figure 4 from [78]. Therefore, it is natural to think that the
existence of two co-regulated gene sets G1/S and G2/M is fundamental to all eukaryotes.

In most of our analyses, we used a selection of G1/S and G2/M markers made by Tirosh, and it
produced good results. However, one should keep in mind that it is not that much important to take
precisely these genes: if some of them are absent or low expressed, the analysis is reproducible with
some parts of these sets. One can add much more genes to these groups (as, for example, in [49],
[50]): however, in our experience, adding more genes is possible, but would give higher correlation
between obtained signatures, which can impair the visualization. Therefore, the Tirosh gene sets
are quite robust and a reasonable choice for visualization of the standard cell cycle.

Of note, identiﬁcation of gene sets for deﬁning a cell type-speciﬁc and cell cycle-related gene
signatures can be done in a (quasi-)unsupervised way. For example, it was shown that the application
of Independent Component Analysis (ICA) to scRNASeq data (using the full set of genes) usually
produces at least two independent components that can be matched to the known G1/S and G2/M
signatures ([40, 79] but some cell type speciﬁc genes will be highlighted in these components as well.
Interestingly, matrix factorization applied to scRNA-Seq data frequently identiﬁes more than two
latent factors associated with cell cycle through gene set enrichment analysis [41, 80].

Yet another remark:

it is known that G1/S, G2/M gene sets can be subclustered to get ﬁner

clusters of genes. We will discuss this aspect below (see again the Figure 4 in [78] for yeasts).

3.3. ”Fast” (ESC-like) cell cycle trajectory pattern seen through the single cell transcriptomic mea-

surements.

Let us now explain the other pattern seen on the G1/S-G2/M plot (Figure 2C), characteristic

for the ”fast” dynamics.

It is well-known that embryonic stem cells proliferate faster than typical normal cells and have
somewhat diﬀerent pattern of the cell cycle, which is typically described in the literature as ”short-
ened G1 phase” (e.g. [30], [32], [33], [34], [35], etc.).

The ”fast” cell cycle trajectory seen at the level of single cell transcriptomes can be characterized

through the following angles (see Figure 4):

G1/S-G2/M (pseudo)time ”seesaw”. At any point of the fast cell cycle - either the G1S
group of genes is growing or the G2M group of genes is growing, like sitting on the opposite sides of
the children’s seesaw. There is no period where both groups are on the low level or even both are
decreasing in contrast to the standard cell cycle (where both groups are decreasing after mitosis),
and there is no R-point (where both groups are on minimal level). See Figure 4.

G1/S-G2/M anticorrelation. A simple computational test for the ”fast” cell cycle can be
suggested which consists in that the correlation between G1/S and G2/M signatures is negative or
close to zero. That is a mathematical formulation of what was said above: G1/S goes down when
G2/M grows and vice versa.

G1/S-G2/M visualization The ”fast” cell cycle in G1/S-G2/M plot looks like a 2D data point

consisting of a single segment from left-up (mitosis) to bottom-right (G1/S border) - Figure 2C.

Proliferation with no R-point. In the standard pattern of cell cycle trajectory, there exists a
resting point, which corresponds to the R-point, where the expression of most of the cell cycle genes
reach their minima. In the ”fast” cell cycle trajectory pattern the G1/S group of genes begins to
increase their expression immediately after the mitosis (while the G2/M group of genes goes down).
Let us emphasize that what is described above is a molecular characterization of the cell cycle
pattern, which can be not always connected to the actual ”fastness” in the physical time and ”ESC-
likeness” of a cell type. The available data and common sense indicates that the pseudotemporal
and actual physical duration should be correlated, but it is not crucially important for the analysis
of the trajectory. Understanding the molecular mechanisms of the ”fast” cell cycle, and its switch
to ”standard” and the relation with cancer seems to be an interesting direction of future research.

Visualization of the ”fast” cycle excluded region.

11

One of the striking features of the standard cell cycle trajectory visualization is the presence of
an excluded region or a region with low point density or a ”hole”, in the G1/S-G2/M phase plot.
The existence of this region points to the presence of a cyclic process. However, for the ”fast” cycle,
due to the anti-correlation pattern, the excluded region is frequently not present.

Through re-analysis of multiple ”fast” cell cycle trajectories, we suggest to replace the G1/S
signature with another one (that we named CC SigF ast), consisting of the following genes: CDK1,
UBE2C, TOP2A, TMPO, HJURP, RRM1, RAD51AP1, RRM2, CDC45, BLM, BRIP1, E2F8,
H2AC20. Visualization of the single cell RNASeq data on the phase plot ”CC SigFast vs G2/M”
reveals the excluded region which serves as an indication of a cyclic process (see Figure 2J).

An alternative strategy to reveal the existence of excluded region in the gene expression space is
to consider a set of cell cycle genes (e.g., from both Tirosh’s G1/S and G2/M groups) and make use
of the standard PCA for visualization (see Figure 2J). In some diﬃcult cases (e.g. mixed cell cycle
types as described below: presence of normal and fast cell cycle), one may look at PCA not in the
ﬁrst two main components, but also check other pairs of higher order components.

The disadvantage of use of PCA for visualization in comparison to the use of pre-deﬁned gene
sets is that interpretability is not straightforward.
In particular, it is less easy to label diﬀerent
parts of the cell cycle trajectory as mitosis, G0, etc. The comparison between diﬀerent cell types of
conditions is also more diﬃcult.

3.4. Mixture of the normal and ”fast” cell cycle within one cell type

It appears to be that some datasets demonstrate unexpected phenomena - within seemingly
homogeneous population of cells, even from one cell line, some cells may proliferate according to
normal pattern, while others according to the ”fast” pattern. Similar phenomenon has been described
in the cell cycle community: “live imaging of the ﬂuorescent reporter in single cells revealed the two
subpopulations of cells with diﬀerent Cdk2 activity levels and subsequently diﬀerent G1 phases”
[38], and especially in the works by S. Spencer [37] , [39], where the role of overactivated CDK2 was
described. Later [23] reported that some breast cancers cells lines have certain actively proliferating
subpopulations, which are the reasons for resistance to CDK4,6 inhibitors like Palbociclib, and
characterized them by highly active CDK2 and cyclin E.

Let us describe example with mixture of the normal and ”fast” cell cycles.
Example of U2OS dataset. Recently a scRNA-seq dataset for U2OS cell line was produced
with reasonably many cells (1100+) [81], with single cell RNA-seq proﬁles annotated accordingly to
the cell cycle phase using FUCCI markers which is the golden standard used for this purpose. Let
us argue that both ”standard” and ”fast” subpopulations are present for this dataset.

Visualizing the dataset using G1/S-G2/M plot Figure 5A or PCA projection from the space
of the cell cycle Tirosh genes Figure 5B one can clearly see the ”standard” (”triangle”) cell cycle
pattern. The second (”fast”) cycle is not so clearly seen - it is shrinked with S-G2-M edge of the
triangle - the way ”fast” cell cycle always appears on G1/S-G2/M plots (see previous subsection).
Indeed, one sees G1 subpopulation (red color), which is placed on that edge. To ”unshrink” the
”fast” cell cycle and more clearly see both ones there are several ways: 1) Using CC SigFast vs G2/M
phase plot - the good quality data can reveal the existence of two embedded loops (see Figure 5C).
2) Another approach consists in removing the ”normal”-G1 related segments of the dataset and
visualizing the ”fast” part through PCA projection in the space of cell cycle-related genes (such
as the ones deﬁned by Tirosh) - see Figure 5D - one clearly sees the loop - the ”fast” cycle which
was shrinked in G1-S/G2-M plot now becomes evident. (See also 6G). 3) The third way - to look
on principal components of PCA projection from the data space formed by the same cycle-related
genes. See Figure 5E where two cycles can be seen. All the three ways allow to see two cycles paired
by the common S-G2-M part and, thus, conﬁrming the presence of the two subpopulations with
normal and ”fast” cell cycle patterns.

One of the main diﬃculties analysing the cell cycle pattern where two types of trajectories
co-exist within one cell type, seems to be the following: the two cycles might share a common
segment S-G2-M, like ”Siamese twins”. The clear diﬀerence between two trajectories is manifested
only in the G1 part. This is expected because the ESC-like cell cycle trajectory is expected to
have a ”shortened” G1 part, which we clearly see in scRNA-seq data. For the standard cell cycle
G1 can be split into two segments (post-mitotic and pre-replication) as described above, while for

12

the fast cell cycle the G1-associated segment leading to the S-phase has a much shorter length.
Biologically this means that after the start of the S-phase main transcription programs are quite
similar for cells in ”fast” and ”standard” modes. The challenge is how to ﬁnd some marker genes
which would distinguish the cells which will be determined to follow the ”fast”/”standard” routes
after the mitosis. Literature suggests that it might be related to cyclins E and CDK2, but it is not
yet clariﬁed on the transcriptome level.

Double cell cycle pattern has not been noticed either in the original paper, where G1-part of
”standard” proliferating cells was neglected as being ”an obvious exception (cluster 5 in Extended
Data Fig. 7a)” [81], neither in the recent cell cycle analysis package [82] where oppositely, ”fast”
proliferating G1-part was neglected since the package was mainly developed keeping ”standard” cell
cycle pattern in mind.

Double cell cycle pattern is not very often pattern, however it appears in number of exam-
ples.
In addition to U2OS described above, one can observe it for MCF10-2a from [83] (see
Figure 6G and scripts: https://www.kaggle.com/datasets/alexandervc/scrnaseq-mcf102a-p53-onoﬀ-
cenpa-overexpress) - that is in agreement with [37] where fast cycling cells were observed for MCF10
(however note that MCF10-2a diﬀers from MCF10, MCF10-2a it is highly chromosomally un-
stable and has closer to 80 chromosomes now). Another case is K562 from [15] - see scripts:
https://www.kaggle.com/datasets/alexandervc/scrnaseq-crisprperturbseqnormanselectedpart. We
also suspect double cell cycle pattern for some breast cancer cell lines like BT549, CAL51, HCC1954,
HCC114 from [14] (scripts: https://www.kaggle.com/datasets/alexandervc/scrnaseq-breast-cancer-
cell-lines-atlas) that would be in partial agreement with [23] where subpopulations for breast cancer
cell lines were analyzed and connected with CDK-4/6 inhibitors (like Palbociclib) resistance. How-
ever, unfortunately, at the moment our computational methods do not provide conﬁdent conclusions
for these cases.

Our experience shows that as of today no package exists for the analysis of cell cycle trajectoriy
from single cell data which would be capable of automatically treating the situation with the mixture
of cell cycle trajectories. In the standard G1/S-G2/M plot the existence of the mixture is manifested
as a triangular pattern with an unusually dense S-G2-M segment. Of course, all the diﬃculties
described here are related to the situation when the two cell cycle patterns co-exist within one
seemingly homogeneous cell population (same cell type or cell line). Otherwise, it can be advised
ﬁrst to separate cell types, and perform analysis on each cell type separately.

Recent cell cycle studies (in particular [37] on mixture of the two cell cycles and role of CDK2)
has substantially improved understanding of the cell cycle regulation: ”Data from these ground-
breaking studies have provided an entirely new perspective of the G1/S transition, and formed the
foundation for a multitude of discoveries that complete the model” [84]. We believe that the use
of scRNA-seq methods with adequate computational methodology for cell cycle trajectory analysis
would promote further progress.

3.5. Summary

To conclude, we explained the interpretation of the G1/S-G2/M plot in this section.. In this plot,
one can discover two main types of the cell cycle trajectory: ”standard” and ”fast”. Moreover there
are unexpected cases when two cell cycles co-exist within seemingly homogeneous populations, e.g.
one cell line. Most of the tools for the analysis of cell cycle from single cell transcriptomic data have
been developed keeping in mind only one pattern of the cell cycle which creates certain diﬃculties
in interpreting their results. Existence of two cell cycle loops embedded one into another represents
even a stronger challenge for the existing cell cycle analysis methods.

Some additional examples illustrating discussion above are given on Figure 6.
Let us also mention here that the baseline approach of Seurat/Scanpy not always work correctly.
One may look at the ﬁgure 7 for pitfalls. More detailed discussion is given at subsections 4.1.1 ,
Appendix A.2 .

13

4. Five main computational tasks for the analysis of cell cycle progression from single

cell data

The present section provides detailed discussion of the main tasks: descriptions, subtleties, ap-

proaches, state of the art, etc.

4.1. Cell cycle (sub-)phase detection

Task 1 (basic): determine computationally cell cycle phase of cells from their transcriptome.
Task 1 (extented): determine sub-phases with ﬁner granularity: G0-state, G1-post mitotic,

G1-prereplication (i.e. parts of G1 before/after Restriction checkpoint), subphases of mitosis, etc.

4.1.1. What cell cycle phases/subphases can be distinguished from single cell transcriptomes

De facto standard Seurat/Scanpy methods to cell cycle phase labeling. A simple and
fast heuristic algorithm for labeling cells for their cell cycle phases based on the analysis of single
cell transcriptomic proﬁles is implemented in Seurat (R-based) and Scanpy (Python) packages. Due
to their popularity in the domain, the method can be considered as baseline for this particular task.
The algorithm originates from one of the seminal papers introducing the single cell approach to
transcriptome [62]. It distinguishes the ’G1’, ’S’ and ’G2/M’ labels and does not identify ’G0’ cells.
The algorithm seemed to be derived for the analysis of the ”standard” cell cycle pattern.

Our experience of exploiting this algorithm allows us to make the following conclusions. 1) The
algorithm provides basically correct, but not very precise results when most of the cells in the dataset
are proliferating and follow the standard pattern of cell cycle. G1-part is typically underestimated.
The border between S and G2M phases is subtle question for all packages. 2) In the case when most
of the cells are non-proliferating, Seurat/Scanpy tends to erroneously label signiﬁcant part of the
non-proliferating cells to ”S” and ”G2M” phases. 3) if the cell cycle pattern contains ESC-like part
(”fast” or ”mixed” type in the sense described above and typical for ESC, iPSC and many cancer
cell lines), then ”G1”-label is not correctly assigned for many cells. See ﬁgure 7 for illustrations.

First packages developed to analyze the cell cycle from single cell transcriptomes could distinguish
only three labels: G1,S, and G2M (i.e. union of G2 and M phases). G2 and M were merged in one
label because of the following limitations: scRNA-seq datasets are quite noisy and distinguishing
some small cell subpolutions is not always reliable. Mitosis duration is short than the other cell
cycle phases, thus mitotic cells represent a relatively small subpopulation.

More recent approach such as Tricycle [82] using the ideas of Revelio [86]) could oﬀer a ﬁner
granularity. For example, ”G2M” labeling was splitted into ”G2” (early G2) and ”G2M” (late G2
and M). Moreover they distinguished postmitotic G1 ( denoted ”MG1”), and pre-replication G1
(denoted as ”G1S” there). The analysis is based on 5 groups of genes which are more active in the
corresponding cell cycle (sub)phases. These groups were proposed from a bulk transcriptomic study
[45], and later updated/exploited in scRNA-Seq data in [87].

Determining mitosis subphases (prophase, prometaphase, metaphase, anaphase, telophase) is
beyond the precision of existing scRNA-Seq technologies. Determining the G0-state is a special task
which we discuss in a separate subsection.

4.1.2. Basic approaches for annotating cells into cell cycle phases

There are several strategies to assign the cell cycle phases to single cells. The ﬁrst one is based on
a careful selection of gene signatures, such that their behaviour (maximums, minimums, diﬀerences,
etc) would allow determining the cell cycle phase. For example, as it is well-known from textbooks
that the maximum of cyclin E indicates the end of the G1-phase and the S-phase start [20]. This
approach is used in Seurat/Scanpy, reCAT, Reveillo, Tricycle and DeepCycle packages. It is simple
and interpretable, and our exprience suggests that it is also rather eﬃcient and reproducible.

The second approach consists in training a machine learning model on the datasets where the
ground truth cell labels are available (e.g. FUCCI scheme) together with single cell transcriptomes.
It is adapted in Cyclone, CCPE, cycleX, SC1CC, Pre-Phaser packages. The problems with the
machine learning-based approach is that there are not so many high quality labeled datasets to
train the models, and most of the available datasets are relatively old and small.

14

The third method consists in segmenting the cell cycle trajectory into relatively smooth fragments
(see Figure 8A,B) such that each of the segments can be associated with a cell cycle phase. It also
allows to cluster cell cycle genes to groups most active in each of the segments (Figure 8D). The
pseudotime proﬁles of selected genes from each group are shown on Figure 8C. Such an approach
was used in a recent study [41]. A general dynamic theory of self-dividing systems was suggested
and a fundamental theorem connecting the number of segments m in the cell cycle trajectory and its
eﬀective dimensionality n was proven. The theorem states that m ≥ n, and some considerations of
general position type estimates that m = n. The approach is to be implemented as a computational
tool.

4.1.3. Existing packages and their quality of predictions

The basic Seurat/Scanpy labeling into three cell cycle phases is rarely precise, but in a typical
scenario is not hugely erroneous, see Figure 7. There are three sources of errors: 1) for the datasets
with mainly non-proliferating cells, some fraction of cells can be erroneously labeled as ”S” and
”G2M”; 2) in the case of the ”standard” cell cycle the borders between phases can be set imprecisely,
for example, the G1 labeled part can be smaller than the golden truth, 3) for the ”fast” cell cycle
pattern the G1 labels may be quite far from reality.

Interesting experiment was performed in the PrePhaser paper [88] (Figure 1): run Seurat to
get cell cycle phase labels, and then take only subparts of the dataset corresponding to each of
the labels and run Seurat separately on each of the subparts. One would expect that the second
run would return for each of the subdatasets only one label, but each subdataset was labeled in
three sub-populations. The same issue is typical for many (with exceptions of Tricycle, PrePhaser)
packages.

Cyclone [89] strongly tends not to put ”S”-label (use only G1 and G2M) which is incorrect. The
main point of the package reCAT [90] is to quantify the cell cycle pseudotime using TSP (Traveling
Salesman Problem). It can also produce phase labels, which were reported to be adequate as in
the original paper, as well as in Cyclum paper [91] (Fig.2b), however these evaluations were made
on relatively small, noisy and outdated datasets, while in more recent studies the results were less
convincing [82]. It was also emphasized that ”Note that although reCAT package provide function
to assign cell cycle stage, it requires manual input cutoﬀ for Bayes scores. It is unrealistic for us
to pick some appropriate cutoﬀs for most of the datasets presented here.” In practice this means
that the choice of the parameters is not straightforward for reCAT package. Also reCAT performed
poorly in evaluations in CCPE paper [92] (Fig. 3a,b). Certain problems of reCAT were also reported
in SC1CC paper [93] (Fig 3a) and in CCPE [92] (Figure 2 and ”reCAT ... do not characterize G2/M
phase in the right order after S phase”). Overall, use of reCAT for cell cycle phase labeling can not
be currently recommended.

The most recent among all packages considered here Tricycle [82] (using some ideas from Revelio
[86]) seems to produce the most convincing results. Nevertheless, it has a couple of drawbacks: ﬁrst
as authors write: ”It is currently unknown what will happen if TriCycle is applied to a dataset
without cycling cells”. Second our own analysis shows that Tricycle may not always work correctly
for the case of the ”fast” cell cycle (see subsection Appendix A.9) . Overall, for good quality
scRNA-Seq datasets, containing the majority of proliferating cells Tricycle is worth to consider.

For conceptual and also practical reasons, we do not recommend other packages (Cyclum, Deep-
Cycle, CCPE, cycleX, SC1CC, Pre-Phaser) for performing the task. For example, Cyclum [91] might
have diﬃculties robustly producing reasonable results on the datasets which are diﬀerent from those
on which it was trained. That is a conclusion from our own experience and also reported in [35].
The DeepCycle [35] is potentially very interesting, but it looks like more a proof of concept, rather
than a ready to use tool. Other packages ( scLVM, f-scLVM(Slalom), Oscope, ccRemover, Revelio,
Peco) do not assign cell cycle phase labels (or at least not in any straightforward way).

4.1.4. Conclusions on the assigning cell cycle phases task

Overall the task of assigning correct phase labels is not yet fully resolved. Nevertheless both
basic approach of Seurat/Scanpy and the most recent TriCycle packages can be insightful for the
analysis in many situations. From the ﬁrst glance, the task does not seem very diﬃcult, the basic
idea is to use known gene markers of various phases. However, due to the noise in the single cell

15

data, diversity of scRNA-Seq technologies which also evolve rapidly, the task is not yet universally
solved.

Certain problems for many packages arise for the situation when number of proliferating cells is
close to zero. An experienced user should exclude that possibility during the preliminary investiga-
tion, since it is not yet done automatically by most of the packages.

Many scRNA-Seq datasets contain cells of various types, and the cell cycle for them can be
diﬀerent. That creates an additional diﬃculty for the methods. Some methods require preliminary
cell types separation, in particular, those based on the estimating the cell cycle ”trajectory” like
reCAT.

The challenging situation is also the analysis of the cell cycle arrested under drugs or other
perturbations. Examples of the dataset with hundreds of drugs tested with single cell readout are
publicly available [76].

The idea of splitting cell cycle type to ”standard” and ”fast” must helpful for the cell cycle
phase analysis, and it is not yet implemented in any approach reported here. Finally, we are lacking
suﬃcient number of good quality datasets with FUCCI phase cell cycle phase assignment which can
provide the ground truth for benchmarking this task. The only known to us good quality dataset
with suﬃcient number of cells is U2OS [81] (see Figure 5) but its analysis is complicated by the mixed
nature of cell cycle pattern. There are several other scRNA datasets with FUCCI/FACS/Hoechst
cell cycle phase labels, but most of them were obtained at the early stage of the scRNA-Seq era
and so are quite noisy with small number of cells, so benchmarks using these datasets might be
misleading.

4.2. Cell cycle (pseudo)time quantiﬁcation

Cells continuously change their state during the progress through the cell cycle. The typical
duration of the cell cycle for normal cells is around 24h (of note, there are reports on the coupling of
the cell cycle to the circadian cycle [94] (and references therein), so 24h is probably not accidental).
The main point about a typical scRNA-seq experiment is that it does not contain time labels for
single cells, capturing a cell population as a single snapshot. So one arrives to the following task:

Task 2 (basic) Quantify the degree of every cell progression from mitosis along the cell cycle

by some continuous number (sometimes called a ”pseudotime”).

Task 2 (extended) Relate the pseudotime and the actual physical time passed from mitosis.
The task formulated above is a particular case of the typical challenge for scRNA-Seq computa-
tional methods: to infer the temporal dynamics from a single cell population snapshot. A number
of cellular trajectory inference” methods have been developed, a recent benchmark study systemat-
ically compared 45 methods out of 70 [95]. However, they typically try to capture the pseudotime
characterizing the cell diﬀerentiation process. Sometime these general methods are also applied for
the analysis of the cell cycle, but using methods designed speciﬁcally for the cell cycle analysis are
expected to be more eﬃcient.

4.2.1. Brief overview of the cell cycle pseudotime quantiﬁcation approaches

In the next section we will provide a more detailed overview of cell cycle analysis packages, here
let us only brieﬂy give some recommendations. For some good quality and not complex datasets
many approaches perform well and agree with each other. But, as for the other tasks, there is a
single solution that would produce reasonable results for all the use cases, and typically there is no
warning or conﬁdence score which would notify about possibly wrong outcome.

For example, TriCycle is fast and can work for datasets with many cell types and produce
reasonable results for datasets with the ”standard” cell cycle. The problem appears for the cases
of the ”fast” cell cycle and datasets with non-proliferating cells. The reCAT and PECO packages
might help for the cases of the ”fast” cell cycle, at least when the dataset is not very noisy. Oscope
was one of the ﬁrst packages addressing this task. Unfortunately it is not fast enough to process
datasets with thousands cells which appear routinely nowadays. DeepCycle is very innovative, but
in the current state it is quite cubersome to use at least in the ﬁrst line.

Below we will also discuss such packages as Cyclum, PrePhaser, CCPE, cycleX and SC1CC. The
remaining ones such as Seurat/Scanpy, scLVM, f-scLVM(Slalom), Cyclone, ccRemover, Revelio do
not provide functionality to estimate the cell cycle pseudotime (at least not directly).

16

4.2.2. Basic approaches for the cell cycle pseudotime quantiﬁcation

In order to solve this task, the scRNA-seq dataset is typically restricted to an appropriate subset
of cell cycle-related genes. The rough idea is to identify a circle-like or oval-like pattern of the single
cell data point cloud in this space. Then one just needs to parameterize the circle and it provides a
pseudotime.

Embed to 2d and use polar angle. A clever way is to embed the scRNA-seq dataset to
2 dimensions, such that the embedding should reveal the ”oval” shape near the coordinate origin.
After such an embedding is found, one can use the polar angle as a pseudotime measurement. This
approach is adapted in Tricycle [82] (and in some sense Revelio [86]).

Find a ”circle” (cyclic graph) approximating the dataset.

In this approach, no 2d
embedding is necessary, the ﬁt can be performed in all dimensions. This is a particular case of
the cellular trajectory inference [95]. However, there is a speciﬁcity since we are searching for
a very simple cyclic graph. Usually, a pre-selection of certain cell cycle genes is required. This
approach is used in reCAT [90] and ElPiGraph has functions to compute the cyclic principal graph
[41, 42, 96, 97]. The search for a cyclic principal graph can be in some applications considered as
the classical traveling salesman problem for which many solvers are known: this idea used in Oscope
[98], reCAT [90].

Machine learning approaches can be used when the pseudotime is already known and the
machine learning-based regression model is trained to predict it in new datasets. This approach is
adapted in PECO [99], where the golden truth pseudotime is estimated from the FUCCI scores.
Alternatively, one can build a neural network-based autoencoder with a one-dimentional bottlneck
layer is assumed to have a circular ”symmetry”. This approach was used in Cyclum [91]. A more
sophisticated approach, with the use of the expression splitted into spliced/unspliced transcipts and
the same idea of autoencoder was used in DeepCycle [35].

Let us discuss some possible subtle points in cell cycle pseudotime quantiﬁcation.
First, many tools work incorrectly for the datasets that have a small number of proliferating

cells.

Second, cell cycle trajectory might not represent a simple cycle. For example, for the cell cycle
arrest in the G1 phase we should expect to see only the G1 part of the cycle. This case represents
a problem for those approaches which are strongly based on searching the full circle in datasets, in
particular those of reCAT, Cyclum, DeepCycle, etc. On the other hand, for the Tricycle, PECO,
PrePhraser it is not a problem since they do not search for a circle.

Execution time. Tricycle and similar methods are computationally performant. Typically,
the 2-dimensional embedding is computed by some linear projection which sometimes can be even
precomputed. The trajectory-based methods like reCAT are less computationally performant even
this does not usually preclude their use in practice. Training autoencoders can be relatively time
consuming and even prohibiting in practice.

Multiple cell types case. Another advantage of Tricycle is that it can work for datasets with
a mixture of cell types. This situation can be a problem for many other methods in particular
for trajectory based like reCAT. The reason is that despite the cell cycle is quite conservative and
looks similar for many cell types (at least for normal cells), nevertheless there can be cell type-
related speciﬁcities. The methods like Tricycle force projection to 2-dimensions thus mitigating
possible diﬀerences caused by existence of multiple cell types, while the methods working in higher
dimensional spaces are more sensitive to such diﬀerences.

2d embedding is not always correct. Unfortunately, there exists no one single universal 2d
embedding that would be suitable for all cell cycle trajectory types. In particular, the 2d embedding
for the ”fast” cell cycle seems to be diﬀerent from the ”standard” one. Probably, this can be resolved
by using two embeddings, one for the standard cell cycle, another for the fast cell cycle. On the
other hand for the trajectory based methods it does not represent a problem as they search for the
cyclic trajectory in the higher dimensional space not relying on any embedding. This consideration
is similar for autoencoder based models.

The pseudotime induced by polar angle is less precise than trajectory based pseu-
dotime. The pseudotime induced by the trajectory methods has a very clear biological meaning, it
directly reﬂects the amount of changes of cell transcriptome from one cell to another. That is not

17

quite true for the polar angle method because 1) a two-dimensional embedding distorts the dataset;
2) using the polar angle could be ﬁne if the origin is placed in the center of the circle-like data
point cloud. However, this might be diﬃcult to achieve in practice: as a result, the dependence
between the angular distance between two cells and the length of the hypothetical segment of cell
cycle trajectory between them can be strongly non-uniform.

As a separate argument towards the use of trajectory-based methods, it was shown that the
length of the cell cycle trajectory is correlated to the actual physical time duration of the cell cycle
(more precisely, cell line doubling time, see Figure 8 in [41]). Use of the polar angle as a pseudotime
does not allow one to estimate the actual physical cell line doubling time.

4.2.3. Controling the methods for quantifying cell cycle pseudotime

There are several simple methods for evaluating the quality of pseudotime predictions that allow

user to be more (or less) conﬁdent about the obtained results.

Agreement with visualization. For good quality datasets one can often represent the cell
cycle organization using in 2 or 3-dimensional visualizations. For example, it can be achieved through
the use of the G1/S-G2/M plot discussed above. Thus coloring such a visualization by pseudotime
- provides a simple and eﬀective visual inspection tool: one expects that the quantiﬁed pseutotime
must correspond to the visually observed cyclic shape of the trajectory. This works rather good
in many cases, but not all. Subtle cases appear for noisy datasets (and is typical for the datasets
produced long time ago), when the cyclic structure is not observed clearly. Another even more subtle
aspect consists in that the human visual inspection is limited to 2 or 3 dimensions, but the pseudotime
can be re-constructed in a higher dimensional space. Projection to 2 or 3 dimensions might bring
some distortion, and it could be not clear either the pseudotime is constructed incorrectly, or one
observes a meaningfull biological eﬀect.

Agreement with phases assignment. The cell cycle order is G1,S,G2,M, so the pseudotime
labels for cells should mostly agree with order of phase labels. For example, one expects that the
pseudotime for all cells in G1 should be smaller than for all cells in S-phase, and so on.

Expected pseudotemporal gene dynamics.

For certain genes, their expression proﬁles
(e.g. maximums, minimums, etc) along the cell cycle are expected to be consistent with respect to
existing publications or databases such as Cyclebase [51].

Comparison with continuous FUCCI markerks. FUCCI markers mCherry and EGFP
allow one to give a continuous indicator of the cell cycle progress. Transcriptomic pseudotime is
expected to be in agreement with this. The diﬃculty can be the lack of recent and good quality
datasets with FUCCI labels.

4.2.4. Concluding remarks on cell cycle pseudotime quantiﬁcation task

Assigning pseudotime to cells is an important task for cell cycle analysis based on scRNA-seq
data. Several tools are available but there are still issues to be resolved. One of the most recent
Tricycle package oﬀers the solution which should be tried as the ﬁrst line. It is fast, robust, can
work for datasets with multiple cell types, but it might not always be fully correct, especially in
situations of the ”fast” cell cycle, ”mixed” cell cycle type or in the case of datasets with too small
number of proliferating cells.

The task of relating the pseudotime to the real physical time is under-explored. Possibly it can be
approached comparing known bulk studies (mentioned in section 2.1 here) with scRNA-seq studies,
as well as taking into accounts RNA-velocity and studying the systematic changes of cell density
across various steps of cell cycle progression. Thus, larger density can indicate longer physical time
spent by the cells at a particular step of cell cycle progression.

4.3. Detecting genes associated with the cell cycle progression, plotting their (pseudo)temporal pro-

ﬁles and clustering them

Let us ﬁrst give a general formulation of the task, and later split it into more concrete ones. It is
quite related with previously discussed (pseudo)-time task, but is distinc from it in several important
for applications aspects.

18

Task 3 Identify transcripts associated with the cell cycle via their expression pattern, quantify
the association numerically, compute (pseudo)time dependence of their expressions, analyse the cell
type dependence of these results.

The genome-wide studies (see section 2.1 here) identiﬁed hundreds of cell cycle-related genes and
provided their temporal proﬁles. However, despite these foundational results and multiple other
studies, there is more work remains to be done.

Task 3.1 Identify transcripts involved in the cell cycle and quantify the strength of their

involvement.

Subtask 3.1a Issue: diﬀerent studies report diﬀerent lists of cell cycle-related genes. One needs

to bring the order.

There are two reasons for this issue. First one is biological: for diﬀerent cells (especially cancer
cells) there exist diﬀerences in cell cycle regulation. The other reason is purely technical: measure-
ments in diﬀerent conditions and with use of various technologies are characterized by diﬀerent level
of noise which aﬀects the ability to distinguish cyclic genes. It is desirable to overcome that. In our
experience from analysis of scRNA-seq data, the technical reasons play probably the major role in
explaining the diﬀerences in explaining the diﬀerent compositions of the cyclic gene lists. Few tens
of the key genes which highly variable along the cell cycle are common for most of the studies but
hundreds (if not thousands) with lesser amplitude appear in such lists not systematically. Therefore,
it is desirable not only to report the binary fact that the gene is related to cell cycle or not, but also
quantify the strength of its association. That would allow us to compare the results across studies in
more eﬃcient way and probably distinguish technical and biological sources of variability. Bringing
the order to that situation is an appealing task - it is desirable to have some veriﬁed list of genes
involved in the cell cycle, together with the quantiﬁed strength of the dependence and clear cell type
speciﬁcations. The amounts of scRNA-seq data is growing every year by millions of cells that gives
us hope that the technical diﬃculties can be overcome by using massive data.

Let us illustrate our point. Currently, the Gene Ontology term ”cell cycle” contains more than
four thousands genes. Several years ago it was less than one thousand. It is rather clear that the
involvement of most of these genes in the cell cycle regulation is not central, and it would be quite
useful to have some clear measure(s) of the ”strength” of that involvement. Understanding how it is
changing due to the cell type speciﬁcity is also important. The Cyclebase [51] provides the certain
measure of that ”strength”, scRNA-seq technologies may be used to improve it.

Another example, the 4 main genome scale studies of the cell cycle dependent mamalian genes
(discussed in section 2.1 here) each reported several hundreds of genes but their intersection contained
about one hundred. In our opinion it can not be explained by the biological reasons (since diﬀerent
cell types were considered in the studies).

Let us mention that the package PECO [99] provides functionality to estimate p-values for genes

being truly cell cycle dependent, one the basis of permutation statistics.

Subtask 3.1b Not only protein coding genes are of interest, but also long non-coding RNA,

micro RNA, alternative isoforms of some genes, etc.

There are certain results that not only protein coding genes play a role in cell cycle regulation. For
example, long non-coding RNA [100], in particular MALAT1 [101] play a role in cell cycle regulation
and related tumorigenesis. Frequently, MALAT1 appears in the analysis of cancer-related scRNA-
seq datasets one of the most expressed transcripts. It shows a signiﬁcant pattern of dependence on
the cell cycle pseudotime in several datasets. However, obtaining a fully consistent picture seems to
be a task for the future studies.

Other studies report on importance of micro RNA [102], [103], [104] for cell cycle regulation.
Inspiring paper [105] writes: ”we identiﬁed over 1 000 mRNAs, non-coding RNAs and pseudogenes
with periodic expression”.

Another aspect is paying attention to diﬀerent transcripts which appear due to alternative splic-
ing. Some results in that direction has been reported in [81] (Extended Data Figure 7):
it was
observed that even for the genes most strongly related to cell cycle like BIRC5 and UBE2C there
exist isoforms which cyclic dependence can be diﬀerent. Moreover it was reported that ”we found
that a majority of cyclic genes (252 of 401) had both cyclic and non-cyclic transcript isoforms”. For
some genes like p73 it is widely studied that diﬀerent isoforms play diﬀerent roles in cancers [106].

19

Overall, the role of non protein coding transcripts and non standard isoforms in cell cycle is not
well studied, and hopefully scRNA-seq technology might contribute to better understanding of this
aspect.

Task 3.2 Quantify the dependence of transcript expression on the cell cycle (pseudo-)time.
After the cell cycle pseudotime is estimated for individual cells, it is straightforward to quantify
the (pseudo)time dependence for the transcripts. However, there exist several methods to perform
this task, and due to the noisy character of the data the outcome might depend on the choice of the
method and its parameters. Typically loess is used, but it might not be always the best choice. The
reasons are the following: ﬁrstly, loess has a parameter, the sliding window length which has to be
deﬁned and secondly, is that loess might give some oversmoothing in some situations.

For example, as we discussed above, the clearly seen conﬁguration of the normal cell cycle
trajectory in G1S/G2M plot has a triangle-like shape, so we might want to see these ”angles” as
clearly is possible, but smoothing can restrict that possibility. Unfortunately none of the packages
pay enough attention to details of that step. In particular to deal with Task 3.1 one needs some
statistical procedure(s) to distinguish pure noisy dependence from meaningful one which has not
been implemented yet in any packages discussed here.

Producing (pseudo)temporal proﬁle of proteins/transcripts is a classical tool. It can provide a
clue to biological functions. For yeast it was claimed that even 2-minute time resolution (about
1% of the cell cycle time) could be achieved early in 2007 [78]. Moreover, predictions of mutation
eﬀects was also achieved via application of mathematical modeling [107]. Some recent bulk-RNA-seq
studies reports a 20 minutes resolutions at least shortly after mitosis [75]. Of course, scRNA-seq
approaches are quite far from such a precision, and even relation of pseudotime to real time is not
explored, nevertheless these studies at least provide some goals to meet in the future.

Task 3.3 Cluster transcripts into groups according to their (pseudo)time dependence, analyse

biological meaning of these groups.

It is quite well-known that (pseudo)time proﬁles of many genes are similar. The genes with
similar proﬁles can be combined into groups which often have biological meaning. For example, one
transcription factor typically acts on a set of genes: therefore, these genes have similar (pseudo)time
proﬁles. Well-known examples are E2F family of transcription factors which launch the G1S group
of genes, and FOXM1 transcription factor which activates G2M wave of transcription. Such a
clustering of (pseudo)time proﬁles is typically done in many studies [75]: however, the existing tools
typically do not provide such an opportunity as a ready to use solution.

The most commonly used in scRNA-seq studies are the Tirosh G1/S and G2/M gene sets, which
we already discussed. It seems G1/S, G2/M groups are quite fundamental - similar groups of genes
can be seen for yeast, see Figure 4 in [78], moreover [105] shows similar groups of genes can be seen
as clusters in PPI networks, see Figure 4e in [105].

The other widely used is 5 groups of cell cycle-related genes originating from [45], used in [87],
and recently revived in Revelio package [86]. Meta-analysis of bulk genome-wide studies performed
in [49], [50] oﬀers extended cell cycle genes clusters. But these are some ﬁxed gene sets. The task
above is to provide computational methods for producing biologically meaningful gene clusters based
on particular dataset, and being able to compare them with existing references.

In order to conclude, the computation and analysis of cell cycle-related genes and their (pseudo)temporal

proﬁling is classical and important task. Although many packages oﬀer construction of pseudo-time,
and thus computation of gene (pseudo)temporal proﬁles is straightforward, nevertheless the system-
atic analysis of such methods and results have not been performed yet. The desired analysis also
includes: choice of cell cycle-related genes, certain smoothing for (pseudo)time proﬁles, and biolog-
ically meaningful clustering. These task have not yet deserved enough attention in the context of
scRNA-seq studies. Hopefully this can be done and biologically interesting results can be obtained.

4.4. Distinguishing proliferating from resting cells, characterizing the ”G0” heterogeneity

It is well-known that most of the cells in mammalians are not proliferating. There was long
debate whether such cells are arrested in somewhere in the cell cycle program, or they are in some
special state. Gradually the second hypothesis became prevailing. Such a state is typically denoted
”G0”, or the terms ”quiescence” and ”senescence” are used. The ”quiescence” means the cells which

20

reversibly left the cell cycle, while ”senescence” means ”irreversible” leaving the cell cycle (at least
”irreversible” with our current level of knowledge).

The exact characterization of ”quiescence” / ”senescence” cells, how cells enter/exit the cell cycle
is not yet fully understood. Such questions are quite important to cancer studies, because ”cancer
stem cells” assumed to be in some sort of ”quiescence” state, while they are probably the reason why
it is so diﬃcult to treat the cancer. Other application: the tissue speciﬁc stem cells are also assumed
to be in some sort of quiescence state, and only upon activation start to proliferate and diﬀerentiate
to speciﬁc tissue cells. In that section we review certain computational tasks for scRNA-seq analysis
related to ”G0” and the cell cycle.

4.4.1. The ”G0”-task(s): problem formulation

Biological and technical aspects of the task. Actually there exist two related tasks. One
is deep biological task - to understand the G0 state in general (how cells enter/maintain/exit ”G0”,
what are biological markers etc). Another aspect is technical and somewhat annoying. It consists in
creating a robust computational algorithm for distinguishing non-proliferating cells from proliferat-
ing. Most of the discussed here packages will produce incorrect results if the dataset would consist
of non-proliferating cells (including the baseline Seurat/Scanpy). However, there is no warning or
caution automatically generated about that situation even though the visual inspection typically
can identify such situations.

The general diﬃculty about these tasks is that there is probably no clear border between prolif-
erating and non-proliferating cells. I.e.
it seems that the textbook picture with some clear switch
(crossroad), which splits the cells going to G0 from the cells going to the next cell cycle is not quite
correct. It is more likely that there is continuous intermediate area where cells may tend to quies-
cence or may tend to the next round the the cell cycle with some probabilities. It is well-known, that
”quiescence” state is reversible ”G0”-state, so cells may revert from that state and if that reversion
happens quickly we simply would be able to catch the moment that the cell happened to be in that
”quiescence” state, at least with modern scRNA-seq technologies which resolution is still limited.
So it is more natural to search for some continuous characteristic which would estimate the ”degree”
of cell quiescence.

Many packages typically fail on datasets with non-proliferating cells: one of the reasons is rather
clear - packages like Oscope, reCAT, Cyclum, DeepCycle - are searching for a cycle/loop in the data
cloud, but if cells are non proliferating the cycle does not exist, so one would produce just some
random result. For other packages like Tricycle the reason is somewhat diﬀerent, but, nevertheless,
this situation represents a problem for it also.
Let us discuss the tasks in more details.
Task 4.1: Develop/improve computational methods to distinguish proliferating and non-proliferating

cells.

Ideally one would like to have the ability to assign labels like ”quiescence”, ”senescence” and
continuous labels which would quantify how far the cell is from the proliferating state, since we
expect there is not exact border between G1 and G0. However such kind of results might be diﬃcult
to achieve, and there is at least one case which we think is accessible and important to have for
automatic cell cycle analysis packages:

Task 4.1a (minimalist’s technical task): Be able to distinguish the situation when the whole

dataset consists of mostly non-proliferating cells.

Distinguishing such situation would at least save from incorrect search of the cycle structure in
the data, where cycle does not exist. In our experience such situation is typically distinguishable
at least through the visual inspection of the G1/S-G2/M plots. This approach which works rather
well is quite well-known from the original works [62], [63],etc. The ”G0” cells are the cells where
key cell cycle genes expressed on the low level. Indeed, on the G1/S-G2/M plot one can often see
concentration of cells near zero - ”G-zero near zero” - e.g. ﬁgure 7B. However, the problem is to make
a robust quantiﬁcation of the ”expressed on the low level”. It stems to choice of certain thresholds
which would mean ”low enough”, but the scRNA-seq data are diverse and choosing the thresholds
which would robustly work across various technologies, cell types, etc, seems to be not fully resolved
task yet. But hopefully accessible. The Seurat/Scanpy (based on [62]) uses certain comparisons of
the cell cycle genes with randomly chosen genes. This is a promising idea, but in our experience

21

in many cases it does not produce satisfactory results.In particular, it seems that Seurat/Scanpy
systematically underestimate the ”G1” part of the cell cycle trajectory. For the datasets consisting of
solely non-proliferating cells it labels them partly by ”G2/M” and partly by ”S”, instead of labeling
all by ”G1” (the ”G0” label just does not exist at all in Seurat/Scanpy), see ﬁgure 7B and section
Appendix A.2 .

More ambitious task consists in deeper understanding of the ”G0”-state based on the scRNA-seq

data.

Task 4.2: Quantiﬁcation of the ”G0”-state and its relation to the cell cycle.
Task 4.2a: Quantify ”degree” of ”quiescence”, i.e. produce a continuous label which would
estimate how far is the cell from ability to proliferate, or, in the other words, how deeply the cell
is in ”G0”. That seems to be more natural approach rather than searching for the exact border
between proliferating and non-proliferating cells.

Task 4.2b: The current biological understanding that ”G0”-state is not a single state, but there
is continuum of diﬀerent states, which arise in response to diﬀerent biological stimuli, diﬀerent kinds
of stresses (starvation, presence of inhibitors, etc). Using the mathematical language, there exists a
manifold of ”G0”-states. The task is to deﬁne this manifold and relate its properties to the biological
conditions.

Task 4.2c: Deﬁne (improve/analyse already known) biomarkers for ”quiescence”/”senescence”,

understand their dependence on the cell type and types of stresses imposed on cells (if any).

Task 4.2d: What are the possible transition trajectories between the cell cycle and ”G0”? (as

discussed in [25], [108] there can be unconventional ones).

We will review state of the art in the next subsection, but let us here mention the beautiful
recent studies [25], [108], which to some extent propose answers to almost all the tasks above and
seem to be the most advanced contribution with respect to our discussion here. See in particular
Figure 1, Task 4. However, the papers were based on single cell proteomics (not transcriptomics),
and only 48 key proteins were measured. It is interesting to try to reproduce (at least partly) these
results with scRNA-seq approach, upon the success one may try to extend the results to various
cell types, taking to into account more than a thousand scRNA-seq datasets are publicly available,
which is not yet the case for single cell proteomics.

Proteins dynamics on cell-cycle progression and cell-cycle exit has been explored in [109].

4.4.2. Cell cycle and ”G0”: state of the art.

Available packages provide tools to analyse ”G0”, we will describe them below. However, one

may hope for more attention to this task and better results in the future.

The original analysis in [62], [63], etc. provided a simple and clear way how simple visual inspec-
tion can approximately identify the non-proliferating fraction of cells (”G-zero near zero”). Indeed,
for many datasets one can clearly see a high density peak of cells in this region which corresponds
to biological intuition that many cells are non proliferating in these datasets. Such an analysis is
enough for many purposes, but not for all. Besides above mentioned threshold problem, another
issue is more conceptual. Using G1/S-G2/M plots as in [62], [63], it is not always possible to distin-
guish those cells which are in cell cycle and just passing the ”R”-point (the region transcriptomically
nearby the true ”G0”), and those cells which have left the cell cycle and are in true ”G0”-state. The
expression of the key cell cycle genes e.g. G1/S-G2/M Tirosh is expected to be inversely correlated
with the ”degree” of quiescence.However in our opinion, it is probably not the best measure for
this purpose. Comparison of scRNA-Seq with the proteomics analysis in [25], [108] one can hope to
obtain more informative measures of quiescence.

In our opinion G1/S-G2/M plot of [62], [63] is an invaluable tool for visual inspection, but more
advanced algorithms are needed for automated treatment of the ”G0 task”. Probably one should
also use genes which are highly expressed in G0 and not only rely on low expression of the key cell
cycle genes.

The package CCAF [72] is devoted to identiﬁcation of the ”G0”-like cells in datasets related
to neural cells. The paper and the package are important contributions to the ﬁeld , see section
Appendix A.7 for detailed discussion . The package is one of the rare packages which is able to put
the ”G0”-label. However there are several questions that are not that much clear for the moment:
the focus on the paper is on neural cells - how far the classiﬁer can be used/generalized to cells of the

22

other type? How it is related to analysis based on G1/S-G2/M plot? The paper produces a classiﬁer
- that means it puts precise border between G0 and G1, while it seems to be more natural to provide
continuous label measuring how far the cell is in ”G0”, so it is it would be nice to understand better
the biological meaning of the ”G0”-labeled part.

The paper [35] where the DeepCycle package has been proposed also contributes to studies
of the ”G0”. We refer to section Appendix A.8 for discussion of the package. In contrast to the
previously mentioned paper the analysis is not achieved in fully automatic mode, but rather involves
considerations speciﬁc to the question and a particular dataset.

The package reCAT [90] has also an ability to put the ”G0”-label. However it seems the strong
point of that package is to generate pseudotime, while assigning cell cycle labels may not be always
correct and requires manually setting certain parameters. See section Appendix A.3 for detailed
discussion .

The SC1CC [93] is actually a web-site which can analyse the scRNA-seq datasets and cell cycle
in particular. It also has the ability to generate the ”G0” label. The approach is based on creating 7
clusters, and one would be assigned ”G0” label. Example of ”PMBC” dataset is correctly processed,
i.e. the dataset consists mostly of non-proliferating cells and cells were assigned expected G0-label
. The package Prepraser [88] also has an ability to identify G0 cells. One needs to perform further
benchmarks to clarify how robust these approaches are.

Overall the situation with computational scRNA-seq analysis of the ”G0”/cell cycle, is not as
advanced as it might hopefully be. The recent single cell proteomics based papers [25], [108] provide
some data to benchmark the existing methods.

4.5. Removing the cell cycle eﬀect from the single cell data

The problem. For cell populations containing proliferating cells, the cell cycle is typically
quite a strong signal. So if one is interested in some other task: typically, identifying diﬀerent cell
types by clustering, then the transcriptomic heterogeneity related to cell cycle might typically be
confounding. The reason for this is rather clear: clustering algorithms try to put into the same
cluster those cells which have similar transcriptome, but the transcriptomes of cells in diﬀerent cell
cycle states are diﬀerent (and sometimes that diﬀerence can even dominate the diﬀerence due to the
cell type).

Similar issue exists for data dimensionality reduction and visualization methods. For example,
in case of PCA one might be interested to see the diﬀerence due to cell type and so one might hope
that the ﬁrst principal components are related to the cell type signal, but often the cell cycle signal
determines several ﬁrst principal components.

Thus the task to remove the cell cycle eﬀect appears.
Success story. The ﬁrst success of that idea was demonstrated by scLVM [110], which showed
that removing the cell cycle one is able to distinguish biologically meaningful cell types in some
datasets (see below). Since then more tools for that task have appeared.

However, the task remains complex and probably less understood than the other tasks. Thus,
each new paper typically shows quite substantial problems for some previous approaches, but none
oﬀers an extensive benchmark on various datasets. Moreover, it is not always true that removing
the cell cycle eﬀect would help the clustering.

4.5.1. Removing the cell cycle eﬀect: problem formulation

Task 5. Develop robust algorithm(s) to remove/mitigate the eﬀect of the cell cycle from gene

expression.

Roughly speaking one wants to produce an expression matrix as if all the cells are frozen at the
same position of the cell cycle. This would guarantee that the transcriptomic variance is not aﬀected
by the cell cycle or the inﬂuence of the cell cycle is minimized to some acceptable degree.

Typically one needs to remove/mitigate the cell cycle signal, in order to make other signals like
cell type more distinguishable. Thus such a removal can be considered successful if it improves the
clustering or other downstream tasks. The complete cell cycle removal is typically not the ﬁnal
objective by itself. The main diﬃculty is that many genes contain variation from many sources, not
only the cell cycle (see e.g. see Fig 3a and Supplementary Figure 2 in [110]). There are examples
where some packages over-correct, meaning they remove not only the cell cycle signal, but other

23

signals too. That is completely opposite to what is desired. For example, if we want to distinguish
the cell types, but after cell cycle removal, the cell type signal is also degraded (see examples below)
then such a correction can not be considered satisfactory. In practice, good quality datasets combined
with state-of-the-art preprocessing+clustering algorithms might often achieve results even without
cell cycle removal. So it seems to more dangerous to over-correct, rather than under-correct the cell
cycle inﬂuence.

Naive approach and its diﬃculties. The naive solution to the task is very simple: just throw
out (or assign constant values) all the genes known to be related to the cell cycle. However, there are
too many genes which variation comes from both cell cycle and other sources. Such an analysis can
be found in the ﬁrst paper on topic - scLVM: see Figure 3a and Supplementary Figure 2 [110]. Thus
freezing all the genes suspected to be related to the cell cycle will be over-correction, but freezing
only the key cell cycle genes will be under-correction because there many genes which are aﬀected
by cell cycle, but they are not key cell cycle genes. Therefore, solving this task is a subtle problem.
The baseline approach of Seurat/Scanpy is regressing out from the total gene expression the
G1/S and G2/M signals. That or another way all the methods conceptually stem fromt he similar
ideas, but diﬀers in the ways how one makes the predictions, in particular, using linear or non-linear
methods.

Removing the cell cycle eﬀect always helps clustering ? No. Sometimes removing cell
cycle eﬀect might be harmful for clustering the cell populations, for example non-proliferating cells
and cells with the fast cell cycle would be clearly distinguishable by the cell cycle genes. So removing
the cell cycle eﬀect would decrease our ability to cluster populations. However, even in such cases,
biologically one would be interested in some other diﬀerences between the cell types, rather than
solely cell cycle genes, and search for such diﬀerences might be attenuated if the cell cycle is not
removed. So there might be some subtle cases which should be treated not in the standard ways.

4.5.2. Removing the cell cycle eﬀect: state of the art

There are quite a few packages which suggest methods for approaching this task: however,
there is no extensive comparisons or benchmarks available in the literature. Careful development of
benchmarks based on real, not simulated datasets and criteria to judge on the quality is a task on
its own.

scLVM. The ﬁrst paper and the package which proposed to reduce cell cycle eﬀect was a very
well-known scLVM [110]. The biological outcome was ”identiﬁcation of otherwise undetectable
subpopulations of cells that correspond to diﬀerent stages during the diﬀerentiation of naive T-cells
into T-helper 2 cells”. The paper presented a package which can remove a confounding eﬀect of any
factor, the cell cycle is just a particular example. The input information for the algorithm contain
the list of genes which are mainly responsible for the confounding eﬀect as an a priory knowledge.
ccRemover. The next tool which appeared for this purpose is ccRemover [111]. It extended the
scLVM taking into acount the case when the main eﬀects in the expression of the input list cell-cycle
genes may not be the cell-cycle eﬀect. The paper reports improvements over scLVM for several real
datasets. However subsequent papers reported situations when ccRemover ”over-corrected”, i.e. it
removes not only the cell-cycle signal, but the desired signal which distinguishes the cell types as
described below.

f-scLVM(Slalom) [112] is a follow-up package to scLVM. It extends its predecessor is several
directions:
it can work with several latent factors, and ”reﬁnes gene set annotations, and infers
factors without annotation”. Moreover f-scLVM claimed to be scaled linear both with respect to
number of cells and genes, in contrast to quadratic or cubic scaling of the other approaches.

More details on scLVM, f-scLVM(Slalom), ccRemover can be found in section Appendix A.1.
Cyclum [91] is a profound neural network based (autoencoder) framework. It also allows a
user to remove the cell cycle eﬀect. The considered examples to remove the cell cycle contain one
simulated data and one real data dataset, in both cases it was argued that Cyclum performs better
than ccRemover and Seurat/Scanpy.

Let us highlight the interesting original idea how to benchmark the cell cycle removing meth-
ods: the authors considered scRNA-seq melanoma data and analyzed two dormant drug resistance
programs (MITF-high and AXL-high), which are known to be mutually exclusive by the previous

24

biological analysis. However anticorrelation of the corresponding scores is not observed on the orig-
inal dataset, and only after removing the cell cycle eﬀect one gets clear anticorrelation between the
corresponding scores (see Supplementary Information Figure 7 [91]). This idea is quite in line with
ideas typically considered in scRNA-seq denoising methods like MAGIC [113].

Revelio [86] is an interesting package developed in N. Rajewsky lab, with the focus of the study
not on the package, but rather on underlying modelling ideas, so there was no extensive benchmarks.
It was argued that the cell cycle visualization / dimensionality reduction can be best achieved by
linear methods (that perfectly agrees with our experience). In Revelio framework one removes the
cell cycle eﬀect rather easily just by subtracting the contribution of top dynamical components
introduced in Revelio (see Figure 4B [86] and discussion around).

CCPE [92] is a more recent package. The example of the cell cycle removing considered here
is quite interesting. One is advised to look at Supplementary Figure S10 in [92] to appreciate the
possible diﬃculties on the task, it is shown that ccRemover is over-correcting such that we are unable
to distinguish cell types, while Cyclum, Seurat allows one to see the clusters, but these clusters are
not the ones which are biologically expected. The dataset considered consists of 416 B cells. The
CCPE package argued to work correctly on it, but it is the only real example which was considered
in the paper.

SC1CC [93] is actually a web-site which allows to make the analysis of scRNA-seq datasets
online, and in particular cell cycle analysis and removing the cell cycle eﬀect. The paper presents
an interesting benchmark example of two distinct cell types Jurkat cells and 239T cells (Fig S1
[93]). Despite cell types are diﬀerent the ccRemover package over-corrects and mixes the cell types,
that is inline with the example above. SC1CC performs well in certain examples, but again more
benchmarks would be appreciated.

To conclude, several promising approaches has been proposed to the task. A number of test
cases has been worked out, showing certain successes, as well as issues. Applicability to situations of
atlas scale datasets with many cells and cell types has not been explored. Moreover, unfortunately,
in many cases newer papers present examples, where the previous packages not only under-perform,
but perform incorrectly. Initial success of scLVM was based on the dataset with about 200 cells
and two cell types. Nowadays the datasets are much larger in size, but on the other hand they may
contain much more cell types (and this contrast makes the problem more complicated). Overall, a
user may try to use the packages above: however, there can be some situations where they would
not produce substantial improvements or even worsen the downstream analyses.

5. Discussion.

5.1. Summary

Analysis of the cell cycle is an important topic for scRNA-seq research and the ability to analyse
it on the level of single cells is crucial in many ﬁelds. Existence of many publicly available datasets
open unprecedented opportunities to analyse the cell cycle for various organisms, cell types and
perturbations in the uniform and systematic way.

A number of packages has been developed speciﬁcally to analyse the cell cycle based on scRNA-
seq data. However, as we tried to argue in the present review, there is more work to be done.
The baseline package Seurat/Scanpy is fast, based on clear ideas and commonly used, but as we
discussed above it lacks precision as well as functionalities: it predicts cell cycle labels ”G1,S,G2M”
and remove the cell cycle eﬀect, but there is no cell cycle pseudotime analysis, cell cycle-associated
genes identiﬁcation and proﬁling, ”G0” labeling and analysis. There exist packages that oﬀer the
full spectrum of the approaches to all diﬀerent tasks. However, as we discussed above, many issues
are far from being fully resolved. In particular, there are many situations when packages may work
incorrectly, but in most of the situations there would be no warning about potential problem, or
conﬁdence score returned which might alarm the user. This is general and important drawback of
the available tools nowadays.

On the other hand many issues seems to be quite approachable and hopefully would be resolved

in some near future.

What is the ”best” package. The aim of the review is to emphasize that none of the packages
can be currently considered as the ”ideal” one, because there are situations where each of them can

25

produce erroneous results. So let us only make a very soft remark, that in our opinion the package
which might be worth to try (after the baseline Seurat/Scanpy) and in certain situations is the most
recent package ”Tricycle” [82]. It is based on simple and transparent idea, it is fast, it can work
on datasets with many cell types, the paper contains its careful tests on more than 10 datasets (in
particular atlas style dataset) and comparison with many other packages.
In produces cell cycle
phase labels and estimates pseudotime. However, even it should be used with certain user’s control:
ﬁrst as authors emphasize themselves it should not be used for the datasets with no (or almost no)
proliferating cells, second for the datasets with ESC-like (”fast”) cell cycle we do not expect it to
provide fully correct results, third the datasets with mixed cell cycle pattern like U2OS cell line, it
does not reveal the presence of the two cell cycle trajectories.

So let us give some guidelines for users, which might be helpful to control and interpret the

analysis, independently on what package is used.

5.2. Guidelines for users

1. The ﬁrst thing to do is to create G1/S-G2/M plot and try to roughly understand - does one
have proliferating cells at all, how many of them, does one see ”fast” cell cycle pattern. (See section
3.1 ). In order to control what is going on, one may color the plot by the total number of read
counts, expression of key cell cycle genes and cell types (if given).

2. If one clearly sees the standard cell cycle pattern, meaning the triangular pattern shown in
Figure 3 and, even better, the clear hole (region with low cell density) inside then the situation is
not the most complicated one. One may further progress the analysis with a selected package (most
of them will work well), and check that the produced results, cell cycle phase labels, pseudotime,
gene proﬁles correspond to those described in section 3.2.

2.1. Sometimes one may see a triangular shape, but the ”hole” is not clearly seen that typically
means the substantial level of noise. One should be more careful in that case since some packages
may not work correctly. There are several tricks which sometimes improve situation: a) denoising
algorithms like simple read pooling, MAGIC [113], autoencoder denonoising [114] (implemented
in Scanpy) sometimes work well for that task and one can more clearly see the cycle with ”hole”
after denoising; b) one can try simply to increase ﬁltering quality thresholds keep only the cells
with less extreme number of total read counts, lower level of MT-score, etc. Sometimes it helps,
but there seems to be no universal solution, moreover dark side of denoising methods, that they
may strongly distort the data if too strong denoising is imposed and that would lead to incorrect
biological conclusions.

3. If triangle pattern of normal cell cycle is not clearly seen then there are several possibilities.
3.1. The fast cell cycle, i.e. the single segment visible from left-top to right-bottom at the G1/S-
G2/M plot as shown in Figure 2. It is recommended to look at section 3.3. One should be careful
using Seurat/Scanpy and Tricycle in that case - most probably the results would not be correct.

3.2. If one sees the concentrated point cloud near zero point in the G1/S-G2/M plot then most
probably there are no proliferating cells and there is no point for the further cell cycle analysis.
However, the subtle case can be when there is certain number of cells outside that cloud and these
cells are suspected to be proliferating. Sometimes it might be diﬃcult to distinguish just outliers
from truly proliferating cells. To some extent it depends on experience and on the number of cells:
if the number of proliferating candidates is less than one hundred, and they do not form clear cyclic
shape, the interpretation needs to be careful. Such situation would also be diﬃcult for most of the
packages. Some tricks which can be used are the following: one may try to separate proliferating
candidates along with some number of non-proliferating cells, and process that part only. In other
words, one needs to avoid disbalance between proliferating and non-proliferating cells, which may
cause problems for many packages. Technically, in order to detect the proliferating cells, one can just
impose condition: sum of G1S and G2M scores is greater than certain threshold, and the threshold
is chosen such that it would drop out most of non-proliferating cells.

3.3.

If ones sees unusually dense right edge of the triangle, one may suspect that there is a
double cell cycle pattern such as shown in Figure 5. It is advised to read the section 3.4 and follow
recommendations given there. This situation might be a diﬃcult case especially if the level of noise is
high. None of the scRNA-seq papers discussed this case and none of the packages can automatically
process it correctly to the best of our knowledge.

26

4. In general, when analysing the cell cycle for a dataset with single cell type, we advise not
to use UMAP/TSNE or other non-linear dimensional reduction tools for the cell cycle analysis
tasks. They do not provide a standard interpretation, always produce diﬀerent maps that would be
impossible to directly compare with other datasete. Non-linear embeddings do not allow to visualize
the linear segmented structure of the cell cycle trajectory, which is important since the segments
might correspond to cell cycle phases, may lead to misleading conclusions, for example, ignoring the
double cell cycle situation. We strongly recommend to use the G1/S-G2/M plot with Tirosh gene
sets as the initial point of the analysis, but one can also use other linear methods.

To give an example of a distortions introduced by UMAP and erroneous conclusions made, one
may look on Extended Data Figure 7a [81] cluster 5 (brown color) and compare it with our Figure 5A:
the cells outside the ”fast part” marked region. These are the same cells. The linear plot shows that
these cells occupy quite large transciptomic region, but UMAP distorted it into small cluster which
was called ”obvious exception”, while G1/S-G2/M identiﬁes it as G1-part of the standard cell cycle
.

5. We do not advise to use too many cell cycle related genes to reveal the cell cycle structure. It is
temping to think that the more cell cycle related genes one takes the more cell cycle information one
gets, but it is not always the case. Gene Ontology now annotates more than 4000 genes as related to
cell cycle, but most of them are weakly related to the cell cycle and contain other biological signals
as well. For example, making PCA from several hundreds of the cell cycle genes, may attenuate
clear cell cycle structure seen from top 100 genes. In our experience about 100 Tirosh genes work
well in most of the situations, but probably one can ﬁnd some improvements to that list. So it is
recommended ﬁrst to reveal the cell cycle structure with key cell cycle genes and only after that step
start to analyse the rest of the genes using their pseudotime proﬁles.

5.3. Open questions

Development of computational tools probably would not be successful without better under-
standing of the underlying biological mechanisms related to the cell cycle. Let us mention some
questions which in our mind would be important for both biological and computational sides, and
several purely computational ones.

1. Molecular determinants of the switch between slow and fast cycles. In a sense, this question is
about unglueing the ”Siamese twins” the fast and the standard cell cycle trajectories (glued by their
S-G2-M segments). This means that it would be desirable to ﬁnd genes which expression diﬀers
(already in S-G2-M phases) the for cells which will be determined to go through the fast cell cycle
trajectory, from those which would go by the standard cell cycle trajectory. The literature suggests
that CDK2 and Cyclin E should be involved [37], [38], [23], but it is not yet well understood on a
transcriptome level.

If the question would be resolved it would open new ways for computational treatment of the

double cell cycle, which at the moment is not yet treated at all.

2. How similar/diﬀerent are cell cycles within one class (fast or standard) depending on cell
types/perturbations. Most of the cell cycles plots for the cells with the ”standard cell cycle” looks
quite similar (e.g., in G1/S-G2/M plot they form a triangle-like shape). However, looking at the atlas
datasets like ”Tabula Sapiens” [10] one can observe that nevertheless there exists small diﬀerences for
some cell types. Can one describe these diﬀerences and understand the biological mechanisms which
lead to them? The hope is to be able to do this using a small number of parameters, which knowledge
would allow to characterize the time dependence of each of the thousands of cell cycle-associated
genes. And one might hope for biological interpretation of these parameters.

Speaking more mathematically each cell cycle is an embedding of the circle (time coordinate)
to the thousand-dimensional space of genes expressions, but not all embeddings are allowed biolog-
ically, so the questions is to parameterize the space of such embeddings and provide the biological
interpretation of the parameters. Such general problem might be inaccessible, but as we see in exam-
ples, quite good approximation is provided by a triangle in G1/S-G2/M plot or more generally by a
hexagon in PCA space of Tirosh genes. So the question about the diﬀerences of cell cycle regulation
can be formulated at the level of the geometry of the cell cycle trajectory, measuring the segment
lengths or angles of the polygon representing the trajectory and relating them to the context of the
observation. Biologically speaking that is related to durations of cell cycle (sub)-phases.

27

3. We brieﬂy mentioned above that mutations of TP53 typically related to presence of the ”fast”
cell cycle. It would be interesting to understand eﬀects of other mutations. In particular it might
appear that mutations in retinoblastoma gene (RB1) would also lead to similar eﬀect. RB1 belongs
to the same pathway as TP53, RB1 directly interacts with E2F1 (which is key transcription factor
to launch the cell cycle).

4. In this paper we discuss transcriptomic data, while classical works have been done for proteins,
and the single-cell proteomics becomes more and more popular nowadays. However, the relation
between transcriptome and proteome measurements are not very well understood. Shedding light in
this direction would be quite desirable. Even the most basic question, labeling the cell cycle phases,
is related to how proteomic measurements are related to the transcriptomic ones, For example, the
classical textbook picture shows that the maximum of Cyclin E corresponds to the border between
G1 and S phases, and the same is assumed in scRNA-seq analysis. But this picture has been obtained
for protein measurements, while currently is used for trasncriptome analysis, despite obviously it
might not be fully correct.

5. Multi-omics data. Analysis of multi-omics is a major trend during the recent years. The
number of available multi-omics datasets is, of course, much less than scRNA-seq data, but hopefully
it will grow in the future. It would be desirable to have computational methods ready for working
with multi-omics data in truely integrative way.

6. Nobel Prize for the cell cycle research was awarded in 2001, and in 2017 for another cycle
- circadian - for the ”Discoveries of Molecular Mechanisms Controlling the Circadian Rhythm”.
The oscillation synchronization phenomena is known since the 17th century. Nowadays, there is an
active area of research which studies synchronization between the two cycles (e.g. [94] and references
therein). One may hope that scRNA-seq technique may also contribute to this question. However,
our own attempts were not quite successful yet, because the circadian genes are not highly expressed.
7. The transition from S to G2 is not clearly seen neither on most of the visualizations, nor
It is quite in line with biological literature. The 2018
by the genes pseudotime proﬁle analysis.
paper by Saldivar et.al.
[115] proposes a possible mechanism: ”ATR represses FOXM1-dependent
expression of a mitotic gene network until the S/G2 transition ensuring completion of DNA replica-
tion”, while describing the prior situation: ”Much is known about the control of the G1/S, G2/M,
and metaphase/anaphase transitions, but thus far, no control mechanism has been identiﬁed for the
S/G2 transition”. It would be desirable to improve our understanding of S to G2 transition: both
from computational and biological points of view.

8. ”Stem cell self-renewal is intrinsically associated with cell cycle control. However, the precise
mechanisms coordinating cell fate choices and cell cycle remain to be fully uncovered ” [116]. One
may hope that single cell RNA sequencing methods may pay a role in better understanding of that
question. Some examples of the relation: seminal paper by Pauklin and Vallier, 2013 [117] (brief
review: [118]) shows that ”hESCs in early G1 phase can only initiate diﬀerentiation into endoderm,
whereas hESCs in late G1 were limited to neuroectoderm diﬀerentiation”. Later on Gonzales et al.
2015 [119] (brief review: [116]) showed that ”factors controlling the G2/M phase are necessary to
block pluripotency upon induction of diﬀerentiation”. It is also widely argued that short G1 for
ESC is related to the fact that diﬀerentiation happens in G1, and thus ESC keeps G1 short to avoid
diﬀerentiation (see review [31]). It is interesting that on ﬁgure 6E here for mouse developing retina
one may indeed see that neuroblast cluster becomes distinguishable from the progenitor cluster after
the end of G1, thus conﬁrming the idea that diﬀerentiation happens in G1 . It also interesting to
note that CDK2 plays a distinguished role both in the work of S.Spencer et.al. 2013 [37] (where fast
cycling subpopulation was observed), as well as in the works of I.Neganova et.al. 2009,2011 [120],
[121] (pluripotent status relies on CDK2 activity, knockdown of CDK2 resulted in hESCs arrest at
G1 phase and diﬀerentiation to extraembryonic lineages; downregulation of CDK2 triggers the G1
checkpoint through the activation of the ATM-CHK2-p53-p21 pathway; downregulation of CDK2
is able to induce sustained DNA damage...). So better understanding how signaling, the cell cycle,
and lineage speciﬁcation are coordinated might hopefully be achieved with the help of single cell
RNA sequencing studies.

9. Clarify list of examples of the cells which demonstrate the ”fast” of the cell cycles pattern. As
we discussed above the main examples for cells with the ”fast” cell cycle pattern come from ESC,

28

iPSC and cancer cells with broken TP53-pathway. However, there are probably more examples:
remarks from [122] suggests that ”fast” cell cycle may be also observed for angioblasts responding
to vascular injury and stem cells that replenishing the intestinal lining. Recent remarkable paper
by A.Singh et.al. 2022 [77] strongly suggests that ”B lymphocytes undergoing multiple mitotic di-
visions, termed clonal expansion” should also demonstrate the ”fast” cell cycle pattern (however
we were unable yet to ﬁnd appropriate single cell dataset to check that hypothesis). The remark-
able properties of that process uncovered in [77] (mitogen-independent proliferation, dependence
on Survivin (BIRC5) to achieve mitogen-independent proliferation, etc.) may probably be shared
by the other cells with ”fast” cell cycle pattern, in particular by some cancer cells and ESC, iPSC
cells. There are some weak hints in literature (e.g. [72]) that cells with broken Hippo/Yap pathway
may also sometimes have ”fast” cell cycle, but that is far from being clear. From our inspection of
hundreds available datasets we do not expect much more examples of the cells with the ”fast” cell
cycle pattern.

10. Clarify the molecular mechanisms underlying the ”fast” cell cycle pattern and possible
mechanisms of switch from the normal to the ”fast” cell cycle. The literature and our analysis
suggests that mechanisms are related to the p53-p21-RB-E2F-pathway. (See [36] (Fig.1) for a recent
thorough discussion of the pathway). The mechanisms is roughly speaking the following: broken
or suppressed p53 leads to lack of p21(CDKN1A) - which is direct target of p53 and is inhibitor
of cyclin dependent kinases - it mainly binds to CyclinE/CDK2 complex, and thus un-inhibited
CyclinE/CDK2 phosphorilates Rb-protein, which allows E2F transcription factor to start the hole
program of the G1/S initiation. That is in line with huge amounts of facts: our own analysis shows
that ”fast” cell cycle is related to TP53 mutation in cancer cells (Figure 4C here); the pivotal role
of CDK2 in the description above is in accordance with its role in S.Spencer et.al. 2013 [37] (fast
cycling population is distinguished by CDK2), and I.Neganova et.al. 2009, 2011 [120], [121] (crucial
role of CDK2 for ESC cell cycle); for ESC it is well-known that levels of TP53 are typically lower,
moreover ”critical role for P53 in Regulating the Cell Cycle of Ground State Embryonic Stem Cells”
is described in [123], in particular [124] showed that ”Nutlin, an antagonist of MDM2-mediated p53
degradation, restores p53-p21/Waf1-dependent G1 checkpoint in mESCs” that means restoring p53
activity for ESC one may achieve ”normal”, not ”fast” cell cycle for ESC; it is also striking that
p53 plays crucial role in iPSC production: ”blocking the p53 pathway vastly improves the ease and
eﬃciency of transforming diﬀerentiated cells into induced pluripotent stem cells” [125], [126], [127],
and so some authors honored TP53 to be a ”guardian of reprogramming” [128] in addition to the
standard ”guardian of the genome”, see also ”the p53–PUMA axis suppresses iPSC generation” [129]
and recent review [130] - that supports the idea that ”shortened G1” (which is typical for the ”fast”
cell cycle pattern) is crucial for the pluripotent cells - both iPSC and ESC. Thus it is tempting to
think that at least we have reasonable hypothesis on the mechanism underlying the ”fast” cell cycle,
however further clariﬁcations might be quite worth. In particular [36] mentions that p21 may aﬀect
not only CDK2 but other CDK also - it is not clear how it ﬁts the ideas above. Recent discovery
[131] (brief review [132]) changed the understanding how CDK1 and CDC7 operate: it appears to
be that in contrast to the previous models, CDK1 can be active in G1 phase and substitute the role
of the CDC7 and also aﬀect the role of CDK2, it is not clear does that new discovery aﬀects our
understanding of the mechanisms underlying the ”fast” cell cycle or not.

Our own examples on the ”mixture” of the fast and normal cell cycle within one cell population,
as well as previous results by [37], [23] suggests that some cancer cells may spontaneously switch
from the ”normal” to ”fast” cell cycle pattern and back without acquiring new mutations, and that
phenomena might be related to the resistance to the CDK4/6 inhibitors like Palbociclib [23]. What
are the mechanisms of that switch ? The paper [39] oﬀers an idea that switch from the ”fast” to
”normal” cell cycle is a reaction of the cells to stress, which allows them to go (if necessary) to the
quiescence state and survive stress in it. The proposed mechanisms are the p53 transcriptional re-
sponse and the integrated stress response (ISR). However many questions remain unclear - analysing
hundreds cell lines we see that ”mixture” of the cell cycles is rather rare phenomena, what makes
some cell lines distinguished in that respect ? What are the precise genes/pathways/etc involved
? For example, as we described above - downregulated p53-pathway is most probably the crucial
reason for the existence of the ”fast” cell cycle, can one give similar characterization of the cell lines

29

demonstrating ”mixture” of the cell cycles phenomena ?

And also lest mention several purely computational open questions.
11. Integrate RNA velocity ( [133], [60], [61]) analysis with the cell cycle analysis. RNA velocity
shows directions in which the transciptome will evolve in the nearby future. Being restricted to the
cell cycle genes it should be consistent with the cell cycle trajectory, and it is indeed the case as
shown in many papers [40], [35], [72], [41] etc.

Thus RNA velocity currently is often used to provide additional justiﬁcation that analysis is
correct. One may hope even for more, it might be for some noisy datasets, RNA velocity combined
with existing tools would strengthen our abilities to work with noisy data. Anyway for the moment
there is no package which allow automatically integrate RNA velocity analysis with the cell cycle
analysis, but it is worth to develop one. One should also mention approach of DeepCycle [35]
(see section Appendix A.8 above) which is very close to the idea of exploiting the RNA velocity
signal, but it relies solely on the spliced/unspliced information, while the question here is to combine
standard methods with RNA velocity ones.

12. Actually preprocessing is one of the subtle sides of single cell RNA seq analysis, which
might sometimes give substantial improvements for all down stream tasks and cell cycle analysis
also. The standard preprocessing is very simple: quality ﬁltering, taking logs and library size
normalization. But there are number of proposals how that can be improved. In particular, the
standard library size normalization to constant size might be not the best for cell cycle analysis.
Obviously the total number of read counts is expected to decrease by twofold after the mitosis.
Doing the normalization aimed to achieve the globally constant library size leads to loosing this
phenomenon. More generally, one can observe that the total number of read counts is gradually
increasing during the cell cycle progression which corresponds to the cell growth. There exists a
promising idea of using the trajectory-based library size normalization, i.e. one may normalize
counts to similar ”constants” for cells which are close to each other along the cell cycle, but allow
gradual variation of that ”constant” along the cell cycle [41]. The striking visually seen outcome of
that procedure is clear break of the cell cycle trajectory after the mitosis which corresponds to the
fact that cells split into two parts but it is not seen with standard normalization. This normalization
indeed can be done: see Figure 1 in [41], but the issue is to make it work in ”plug-in-play” mode
robustly across various datasets, especially noisy ones.

13. Important computational problem is a better understanding of what denoising methods (like
MAGIC [113], Scanpy autoencoder [114], etc) are the most appropriate for the cell cycle analysis.
In our experience application of the denoising methods can improve the analysis. Detection of the
”cyclic” shape of the data point cloud often becomes substantially more clear: e.g. Figure 6K. How-
ever, too strong action of these algorithms leads to substantial distortion of the data and misleading
biological conclusions, that is true in general and in particular case of the cell cycle analysis. What
denoising algorithm and parameters are most suited for the cell cycle analysis is a widely unexplored
question.

5.4. Suggestions for package developers

1. Nowadays, the sizes and the quality of the datasets are much higher than several years ago.
The older datasets with less than 1000 cells are probably not so good for benchmarking methods
nowadays. In particular, those with FUCCI and FACS cell cycle labels which sometimes considered
as golden standards, may not optimal, because the level of noise in them is high The recent U2OS
dataset with FUCCI labels [81] is excellent and of high quality, but one should remember the subtle
point due to presence of the double cell cycle pattern (see section 3.4 above).

2. The methodology of G1/S-G2/M plots in many cases provides intuitively clear picture of the

general properties of cell cycle trajectory, it is always worth to include comparison with it.

3. It is worth to explicitly check the performance of tools on ”standard” and ”fast” (ESC-like)
cell cycle types, since sometimes packages may work with datasets of one type, but not with the
other one.

4. The case of datasets with multiple cell types might be quite diﬃcult case at least for pseudotime
task, and the cell cycle removing task. It is worth to state explicitly: is the package intended to be
used in such situations and then provide corresponding benchmarks.

30

5. The datasets with no proliferating cells cause problems for many current packages. It is worth
to include the automatic detection of such cases and produce warning to users about potential
problems.

6. More generally, it is worth to include some control tools which would provide degree of

conﬁdence of the package in obtained results, and inform user about potential issues.

7. Large size of modern datasets impose constraints on performance, it is worth to provide some

clearly stated time estimations depending on the sizes of data.

8. The situation with double cell cycle (see section 3.4 above) might be too diﬃcult to process
automatically, but at least it should be clearly stated as an exceptional situation, which should be
analysed separately. The same about the cell cycle arrest, which can be found in datasets where
drugs are used as perturbations. Cell cycle arrest seems not being discussed in any of the packages,
and it seems to be a diﬃcult case to analyse automatically, unless the control data without drug is
given.

9. The scRNA-seq datasets are quite diverse in terms of their biological context and technologies,
it is desirable to see benchmarks of tools, applied to as many datasets as possible. It our opinion
having more than 1000 publicly available datasets, it would be worth to provide benchmarks on at
least 10 or better 50 cases.

10.

In general some ambitious computational goal can be creating packages which automati-
cally process in ”plug-n-play” mode large collections of datasets with hundreds examples, like the
PANGLAODB benchmark corpus of data [134], ARCHS4 [43]. As an outcome one may hope to
see the gene expressions pseudotime proﬁles for all datasets available. This would extend classical
works like [45] to a larger scale. Comparisons of the results for the diﬀerent cell types might provide
biological insights on how cell cycle depends on cell types and the biological context.

5.5. Use of Kaggle for analysis and the technical reproducibility

The site www.kaggle.com is the very famous in Data Science community as a platform for data
science-related competitions. Now it is subsidiary of Google and directing to more general role ”Your
home for Data Science”. It provides opportunity to store your data (up to 50G in one folder/dataset),
store and execute code both Python and R (up to 9 hours continuous execution), team collaboration,
version control, share results with community and discuss projects, and all for free. From our point
of view it is quite suitable for analysis of single cell RNA sequencing data and we frequently use it
for our projects. Most of the datasets and code used in the review can be found there.

The role of reproducibility is important in any research. Kaggle is designed and polished for
that by years of competitions and hundreds thousands users. One needs to press just one button -
”Copy&Edit” on any notebook to create your own copy which will automatically have an access to
the same data which original notebook has, and just running it - one can reproduce the results. We
strongly advise to use kaggle as a cloud service and sharing results with the community - one can
keep private data, shared only within team and open it to community when the paper is published.
There are more than 50 single cell RNA sequencing datasets already there (search on ”scRNA-seq”),
and more generally hundreds bioinformatical datasets and notebooks,and about dozen of biologically
inspired data science competitions.

It might be interesting to organize the data science challenge on predicting the cell cycle phase
labels and pseudotime. This would attract a large data science community to the cell cycle analysis
and will push forward solving the tasks mentioned in this review. For example, one challenge would
be possible if unseen labelled (e.g. FUCCI) ground-truth datasets would be created and serve for
evaluations of the proposed solutions (leaderboard). One of the co-authors of the important cell
cycle paper [81] has already lead two competitions on Kaggle [135], [136]. So at least there is a
positive experience of using this tool within the bioinformatics community.

5.6. Conclusions

Single cell RNA sequencing technologies continue to produce large amounts of data, which will
hopefully provide some important biological insights. The need in developing, maintaining, improv-
ing computational tools is of great importance. Cell cycle is one the examples of the biological
phenomenon (together with cell types identiﬁcation, studying diﬀerentiation and other dynamical
biological processes) where single cell technologies have clear advantages.

31

Moreover, the cell cycle is distinguished by the fact that any scRNA-seq dataset with proliferating
cells can be used for its study: there is no need for special design of experiments, and thus the
amount of data available is already enormous, but not yet thoroughly analysed. Here we reviewed
computational tasks arising in the cell cycle analysis, and the computational tools to analyse it.
Such tools started to appear around 2016 and now becoming more and more advanced. Still there
are some issues to be resolved in the future.

6. Acknowledgements

This work has been partially supported by the French government under management of Agence
Nationale de la Recherche as part of the “Investissements d’Avenir” program, reference ANR-19-
P3IA-0001 (PRAIRIE 3IA Institute) and by the European Union’s Horizon 2020 program (grant
No. 826121, iPC project).

References

[1] J. O. Patterson, S. Basu, P. Rees, P. Nurse, Cdk control pathways integrate cell size and ploidy

information to control cell division, eLife 10.

[2] I. Tirosh, M. L. Suv`a, Deciphering human tumor biology by single-cell expression proﬁling,

Annu. Rev. Cancer Biol 3 (2019) 151–166.

[3] J. A. Griﬃths, A. Scialdone, J. C. Marioni, Using single-cell genomics to understand develop-
mental processes and cell fate decisions, Molecular systems biology 14 (4) (2018) e8046.

[4] K. E. Neu, Q. Tang, P. C. Wilson, A. A. Khan, Single-cell genomics: approaches and utility

in immunology, Trends in immunology 38 (2) (2017) 140–149.

[5] A. Butler, P. Hoﬀman, P. Smibert, E. Papalexi, R. Satija, Integrating single-cell transcriptomic
data across diﬀerent conditions, technologies, and species, Nature Biotechnology 36 (2018)
411–420. doi:10.1038/nbt.4096.
URL https://doi.org/10.1038/nbt.4096

[6] F. A. Wolf, P. Angerer, F. J. Theis, Scanpy: large-scale single-cell gene expression data anal-

ysis, Genome biology 19 (1) (2018) 1–5.

[7] V. Svensson, E. da Veiga Beltrame, L. Pachter, A curated database reveals trends in single-cell

transcriptomics, Database 2020. doi:10.1093/DATABASE/BAAA073.

[8] J. Cao, D. R. O’Day, H. A. Pliner, P. D. Kingsley, M. Deng, R. M. Daza, M. A. Zager, K. A.
Aldinger, R. Blecher-Gonen, F. Zhang, M. Spielmann, J. Palis, D. Doherty, F. J. Steemers,
I. A. Glass, C. Trapnell, J. Shendure, A human cell atlas of fetal gene expression, Science 370.
doi:10.1126/science.aba7721.

[9] T. M. Consortium, et al., Single-cell transcriptomics of 20 mouse organs creates a tabula muris,

Nature 562 (7727) (2018) 367–372.

[10] T. S. Consortium*, R. C. Jones, J. Karkanias, M. A. Krasnow, A. O. Pisco, S. R. Quake,
J. Salzman, N. Yosef, B. Bulthaup, P. Brown, et al., The tabula sapiens: A multiple-organ,
single-cell transcriptomic atlas of humans, Science 376 (6594) (2022) eabl4896.

[11] P. He, B. A. Williams, D. Trout, G. K. Marinov, H. Amrhein, L. Berghella, S. T. Goh,
I. Plajzer-Frick, V. Afzal, L. A. Pennacchio, D. E. Dickel, A. Visel, B. Ren, R. C. Hardison,
Y. Zhang, B. J. Wold, The changing mouse embryo transcriptome at whole tissue and single-
cell resolution, Nature 583. doi:10.1038/s41586-020-2536-x.

[12] A. Regev, S. Teichmann, E. Lander, I. Amit, C. Benoist, E. Birney, B. Bodenmiller, P. Camp-

bell, P. Carninci, W. Enard, Science forum: The human cell atlas, eLife.

32

[13] G. S. Kinker, A. C. Greenwald, R. Tal, Z. Orlova, M. S. Cuoco, J. M. McFarland, A. Warren,
C. Rodman, J. A. Roth, S. A. Bender, B. Kumar, J. W. Rocco, P. A. Fernandes, C. C. Mader,
H. Keren-Shaul, A. Plotnikov, H. Barr, A. Tsherniak, O. Rozenblatt-Rosen, V. Krizhanovsky,
S. V. Puram, A. Regev, I. Tirosh, Pan-cancer single-cell rna-seq identiﬁes recurring programs
of cellular heterogeneity, Nature Genetics 52. doi:10.1038/s41588-020-00726-6.

[14] G. Gambardella, G. Viscido, B. Tumaini, A. Isacchi, R. Bosotti, D. di Bernardo, A single-cell
analysis of breast cancer cell lines to study tumour heterogeneity and drug response, Nature
Communications 13. doi:10.1038/s41467-022-29358-6.

[15] J. M. Replogle, R. A. Saunders, A. N. Pogson, J. A. Hussmann, A. Lenail, A. Guna, L. Masci-
broda, E. J. Wagner, K. Adelman, G. Lithwick-Yanai, N. Iremadze, F. Oberstrass, D. Lipson,
J. L. Bonnar, M. Jost, T. M. Norman, J. S. Weissman, Mapping information-rich genotype-
phenotype landscapes with genome-scale perturb-seq, Celldoi:https://doi.org/10.1016/
j.cell.2022.05.013.
URL https://www.sciencedirect.com/science/article/pii/S0092867422005979

[16] O. Ursu, J. T. Neal, E. Shea, P. I. Thakore, L. Jerby-Arnon, L. Nguyen, D. Dionne, C. Diaz,
J. Bauman, M. M. Mosaad, C. Fagre, A. Lo, M. McSharry, A. O. Giacomelli, S. H. Ly,
O. Rozenblatt-Rosen, W. C. Hahn, A. J. Aguirre, A. H. Berger, A. Regev, J. S. Boehm,
Massively parallel phenotyping of coding variants in cancer with perturb-seq, Nature Biotech-
nologydoi:10.1038/s41587-021-01160-7.

[17] D. Hanahan, R. A. Weinberg, The hallmarks of cancer, Cell 100 (2000) 57–70.

[18] D. Hanahan, R. A. Weinberg, Hallmarks of cancer: The next generation, Cell 144.

[19] D. Hanahan, Hallmarks of cancer: New dimensions., Cancer discovery 12 1 (2022) 31–46.

[20] B. Alberts, Molecular Biology of the Cell, W.W. Norton, 2017.
URL https://books.google.fr/books?id=jK6UBQAAQBAJ

[21] R. Weinberg, The Biology of Cancer, Garland Science, 2014.
URL https://books.google.fr/books?id=urahPwAACAAJ

[22] D. Morgan, D. Morgan, The Cell Cycle: Principles of Control, Primers in Biology, OUP/New

Science Press, 2007.
URL https://books.google.fr/books?id=ScEuiD2V6GoC

[23] U. S. Asghar, A. R. Barr, R. Cutts, M. Beaney, I. Babina, D. Sampath, J. Giltnane, J. A.
Lacap, L. Crocker, A. Young, A. Pearson, M. T. Herrera-Abreu, C. Bakal, N. C. Turner,
Single-cell dynamics determines response to cdk4/6 inhibition in triple-negative breast cancer,
Clinical Cancer Research 23. doi:10.1158/1078-0432.CCR-17-0369.

[24] A. Fassl, Y. Geng, P. Sicinski, Cdk4 and cdk6 kinases: From basic science to cancer therapy

(2022). doi:10.1126/science.abc1495.

[25] W. Stallaert, K. M. Kedziora, C. D. Taylor, T. M. Zikry, J. S. Ranek, H. K. Sobon, S. R.
Taylor, C. L. Young, J. G. Cook, J. E. Purvis, The structure of the human cell cycle, Cell
Systems 13. arXiv:https://www.biorxiv.org/content/early/2021/02/11/2021.02.11.
430845, doi:10.1016/j.cels.2021.10.007.

[26] D. Cittaro, Scanpy tutorial: Cell-cycle scoring and regression.

URL https://nbviewer.org/github/scverse/scanpy_usage/blob/master/180209_cell_
cycle/cell_cycle.ipynb

[27] A. Butler, P. Hoﬀman, P. Smibert, E. Papalexi, R. Satija, Seurat tutorial: Cell-cycle scoring

and regression.
URL
assign-cell-cycle-scores

https://satijalab.org/seurat/articles/cell_cycle_vignette.html#

33

[28] R. C. Anaﬁ, L. J. Francey, J. B. Hogenesch, J. Kim, Cyclops reveals human transcriptional
rhythms in health and disease, Proceedings of the National Academy of Sciences 114 (2017)
5312 – 5317.

[29] M. D. Ruben, G. Wu, D. F. Smith, R. E. Schmidt, L. J. Francey, Y. Y. Lee, R. C.
Anaﬁ, J. B. Hogenesch, A database of tissue-speciﬁc rhythmically expressed human genes
has potential applications in circadian medicine, Science Translational Medicine 10. doi:
10.1126/scitranslmed.aat8806.

[30] K. A. Becker, P. N. Ghule, J. A. Therrien, J. B. Lian, J. L. Stein, A. J. Van Wijnen, G. S.
Stein, Self-renewal of human embryonic stem cells is supported by a shortened g1 cell cycle
phase, Journal of cellular physiology 209 (3) (2006) 883–893.

[31] I. Neganova, M. Lako, G1 to s phase cell cycle transition in somatic and embryonic stem cells,

Journal of anatomy 213 (1) (2008) 30–44.

[32] K. Kapinas, R. Grandy, P. Ghule, R. Medina, K. Becker, A. Pardee, S. K. Zaidi, J. Lian,
J. Stein, A. van Wijnen, et al., The abbreviated pluripotent cell cycle, Journal of cellular
physiology 228 (1) (2013) 9–20.

[33] D. Coronado, M. Godet, P.-Y. Bourillot, Y. Tapponnier, A. Bernat, M. Petit, M. Afanassieﬀ,
S. Markossian, A. Malashicheva, R. Iacone, et al., A short g1 phase is an intrinsic determinant
of naive embryonic stem cell pluripotency, Stem cell research 10 (1) (2013) 118–131.

[34] A. A. Kolodziejczyk, J. K. Kim, J. C. Tsang, T. Ilicic, J. Henriksson, K. N. Natarajan,
A. C. Tuck, X. Gao, M. B¨uhler, P. Liu, J. C. Marioni, S. A. Teichmann, Single cell rna-
sequencing of pluripotent states unlocks modular transcriptional variation, Cell Stem Cell 17.
doi:10.1016/j.stem.2015.09.011.

[35] A. Riba, A. Oravecz, M. Durik, S. Jim´enez, V. Alunni, M. Cerciat, M. Jung, C. Keime,
W. M. Keyes, N. Molina, Cell cycle gene regulation dynamics revealed by rna velocity and
deep-learning, bioRxivdoi:10.1101/2021.03.17.435887.

[36] K. Engeland, Cell cycle regulation: p53-p21-rb signaling, Cell Death and Diﬀerentiation 29.

doi:10.1038/s41418-022-00988-z.

[37] S. L. Spencer, S. D. Cappell, F. C. Tsai, K. W. Overton, C. L. Wang, T. Meyer, The
proliferation-quiescence decision is controlled by a bifurcation in cdk2 activity at mitotic exit,
Cell 155. doi:10.1016/j.cell.2013.08.062.

[38] J. P. Matson, J. G. Cook, Cell cycle proliferation decisions: the impact of single cell analyses,

FEBS Journal 284. doi:10.1111/febs.13898.

[39] M. Min, S. L. Spencer, Spontaneously slow-cycling subpopulations of human cells originate
from activation of stress-response pathways, PLoS Biology 17. doi:10.1371/journal.pbio.
3000178.

[40] M.-M. Aynaud, O. Mirabeau, N. Gruel, S. Grossetˆete, V. Boeva, S. Durand, D. Surdez,
O. Saulnier, S. Za¨ıdi, S. Gribkova, et al., Transcriptional programs deﬁne intratumoral het-
erogeneity of ewing sarcoma at single-cell resolution, Cell reports 30 (6) (2020) 1767–1779.

[41] A. Zinovyev, M. Sadovsky, L. Calzone, A. Fouch´e, C. S. Groeneveld, A. Chervov, E. Barillot,
A. N. Gorban, Modeling progression of single cell populations through the cell cycle as a
sequence of switches, Frontiers in Molecular Biosciences 8.

[42] L. Albergante, E. Mirkes, J. Bac, H. Chen, A. Martin, L. Faure, E. Barillot, L. Pinello,
A. Gorban, A. Zinovyev, Robust and scalable learning of complex intrinsic dataset geometry
via elpigraph, Entropy 22 (3) (2020) 296.

[43] A. Lachmann, D. Torre, A. B. Keenan, K. M. Jagodnik, H. J. Lee, L. Wang, M. C. Silverstein,
A. Ma’ayan, Massive mining of publicly available rna-seq data from human and mouse, Nature
communications 9 (1) (2018) 1–10.

34

[44] P. T. Spellman, G. Sherlock, M. Q. Zhang, V. R. Iyer, K. Anders, M. B. Eisen, P. O. Brown,
D. Botstein, B. Futcher, Comprehensive identiﬁcation of cell cycle–regulated genes of the yeast
saccharomyces cerevisiae by microarray hybridization, Molecular biology of the cell 9 (12)
(1998) 3273–3297.

[45] M. L. Whitﬁeld, G. Sherlock, A. J. Saldanha, J. I. Murray, C. A. Ball, K. E. Alexander, J. C.
Matese, C. M. Perou, M. M. Hurt, P. O. Brown, D. Botstein, Identiﬁcation of genes periodically
expressed in the human cell cycle and their expression in tumors, Molecular Biology of the
Cell 13. doi:10.1091/mbc.02-02-0030.

[46] Z. Bar-Joseph, Z. Siegfried, M. Brandeis, B. Brors, Y. Lu, R. Eils, B. D. Dynlacht, I. Simon,
Genome-wide transcriptional analysis of the human cell cycle identiﬁes genes diﬀerentially
regulated in normal and cancer cells, Proceedings of the National Academy of Sciences of the
United States of America 105. doi:10.1073/pnas.0704723105.

[47] J. Pe˜na-Diaz, S. A. Hegre, E. Anderssen, P. A. Aas, R. Mjelle, G. D. Gilﬁllan, R. Lyle,
F. Drabløs, H. E. Krokan, P. Sætrom, Transcription proﬁling during the cell cycle shows
that a subset of polycomb-targeted genes is upregulated during dna replication, Nucleic Acids
Research 41. doi:10.1093/nar/gks1336.

[48] G. D. Grant, L. Brooks, X. Zhang, J. M. Mahoneya, V. Martyanov, T. A. Wood, G. Sherlock,
C. Cheng, M. L. Whitﬁeld, Identiﬁcation of cell cycle-regulated genes periodically expressed
in u2os cells and their regulation by foxm1 and e2f transcription factors, Molecular Biology of
the Cell 24. doi:10.1091/mbc.E13-05-0264.

[49] B. Giotti, A. Joshi, T. C. Freeman, Meta-analysis reveals conserved cell cycle transcrip-
doi:10.1186/

tional network across multiple human cell types, BMC Genomics 18.
s12864-016-3435-2.

[50] B. Giotti, S. H. Chen, M. W. Barnett, T. Regan, T. Ly, S. Wiemann, D. A. Hume, T. C. Free-
man, Assembly of a parts list of the human mitotic cell cycle machinery, Journal of Molecular
Cell Biology 11. doi:10.1093/jmcb/mjy063.

[51] A. Santos, R. Wernersson, L. J. Jensen, Cyclebase 3.0: a multi-organism database on cell-cycle
regulation and phenotypes, Nucleic Acids Research 43 (D1) (2014) D1140–D1144. arXiv:
https://academic.oup.com/nar/article-pdf/43/D1/D1140/7317627/gku1092.pdf, doi:
10.1093/nar/gku1092.
URL https://doi.org/10.1093/nar/gku1092

[52] M. Malumbres, M. Barbacid, Cell cycle, cdks and cancer: A changing paradigm, Nature

Reviews Cancer 9. doi:10.1038/nrc2602.

[53] E. Gordon, J. Ravicz, S. Liu, S. Chawla, F. Hall, Cell cycle checkpoint control: The cyclin
g1/mdm2/p53 axis emerges as a strategic target for broad-spectrum cancer gene therapy -
a review of molecular mechanisms for oncologists, Molecular and Clinical Oncologydoi:10.
3892/mco.2018.1657.

[54] H. K. Matthews, C. Bertoli, R. A. de Bruin, Cell cycle control in cancer, Nature Reviews

Molecular Cell Biology 23. doi:10.1038/s41580-021-00404-3.

[55] M. Mukherji, R. Bell, L. Supekova, Y. Wang, A. P. Orth, S. Batalov, L. Miraglia, D. Huesken,
J. Lange, C. Martin, S. Sahasrabudhe, M. Reinhardt, F. Natt, J. Hall, C. Mickanin, M. Labow,
S. K. Chanda, C. Y. Cho, P. G. Schultz, Genome-wide functional analysis of human cell-cycle
regulators, Proceedings of the National Academy of Sciences of the United States of America
103. doi:10.1073/pnas.0604320103.

[56] M. Sokolova, M. Turunen, O. Mortusewicz, T. Kivioja, P. Herr, A. V¨ah¨arautio, M. Bj¨orklund,
M. Taipale, T. Helleday, J. Taipale, Genome-wide screen of cell-cycle regulators in normal
and tumor cells identiﬁes a diﬀerential response to nucleosome depletion, Cell Cycle 16. doi:
10.1080/15384101.2016.1261765.

35

[57] R. Viner-Breuer, A. Yilmaz, N. Benvenisty, M. Goldberg, The essentiality landscape of cell
cycle related genes in human pluripotent and cancer cells, Cell Division 14. doi:10.1186/
s13008-019-0058-4.

[58] D. L¨ahnemann, J. K¨oster, E. Szczurek, D. J. McCarthy, S. C. Hicks, M. D. Robinson, C. A.
Vallejos, K. R. Campbell, N. Beerenwinkel, A. Mahfouz, L. Pinello, P. Skums, A. Stamatakis,
C. S. O. Attolini, S. Aparicio, J. Baaijens, M. Balvert, B. de Barbanson, A. Cappuccio, G. Cor-
leone, B. E. Dutilh, M. Florescu, V. Guryev, R. Holmer, K. Jahn, T. J. Lobo, E. M. Keizer,
I. Khatri, S. M. Kielbasa, J. O. Korbel, A. M. Kozlov, T. H. Kuo, B. P. Lelieveldt, I. I.
Mandoiu, J. C. Marioni, T. Marschall, F. M¨older, A. Niknejad, L. Raczkowski, M. Reinders,
J. de Ridder, A. E. Saliba, A. Somarakis, O. Stegle, F. J. Theis, H. Yang, A. Zelikovsky, A. C.
McHardy, B. J. Raphael, S. P. Shah, A. Sch¨onhuth, Eleven grand challenges in single-cell data
science (2020). doi:10.1186/s13059-020-1926-6.

[59] V. Y. Kiselev, T. S. Andrews, M. Hemberg, Challenges in unsupervised clustering of single-cell

rna-seq data (2019). doi:10.1038/s41576-018-0088-9.

[60] V. Bergen, R. A. Soldatov, P. V. Kharchenko, F. J. Theis, Rna velocity—current challenges
and future perspectives, Molecular Systems Biology 17. doi:10.15252/msb.202110282.

[61] P. V. Kharchenko, The triumphs and limitations of computational methods for scrna-seq,

Nature Methods 18. doi:10.1038/s41592-021-01171-x.

[62] I. Tirosh, B. Izar, S. M. Prakadan, M. H. Wadsworth, D. Treacy, J. J. Trombetta, A. Rotem,
C. Rodman, C. Lian, G. Murphy, M. Fallahi-Sichani, K. Dutton-Regester, J. R. Lin, O. Cohen,
P. Shah, D. Lu, A. S. Genshaft, T. K. Hughes, C. G. Ziegler, S. W. Kazer, A. Gaillard, K. E.
Kolb, A. C. Villani, C. M. Johannessen, A. Y. Andreev, E. M. V. Allen, M. Bertagnolli,
P. K. Sorger, R. J. Sullivan, K. T. Flaherty, D. T. Frederick, J. Jan´e-Valbuena, C. H. Yoon,
O. Rozenblatt-Rosen, A. K. Shalek, A. Regev, L. A. Garraway, Dissecting the multicellular
ecosystem of metastatic melanoma by single-cell rna-seq, Science 352. doi:10.1126/science.
aad0501.

[63] I. Tirosh, A. S. Venteicher, C. Hebert, L. E. Escalante, A. P. Patel, K. Yizhak, J. M. Fisher,
C. Rodman, C. Mount, M. G. Filbin, C. Neftel, N. Desai, J. Nyman, B. Izar, C. C. Luo,
J. M. Francis, A. A. Patel, M. L. Onozato, N. Riggi, K. J. Livak, D. Gennert, R. Satija, B. V.
Nahed, W. T. Curry, R. L. Martuza, R. Mylvaganam, A. J. Iafrate, M. P. Frosch, T. R. Golub,
M. N. Rivera, G. Getz, O. Rozenblatt-Rosen, D. P. Cahill, M. Monje, B. E. Bernstein, D. N.
Louis, A. Regev, M. L. Suv`a, Single-cell rna-seq supports a developmental hierarchy in human
oligodendroglioma, Nature 539. doi:10.1038/nature20123.

[64] A. Zinovyev, Adaptation through the lens of single-cell multi-omics data: Comment on “dy-
namic and thermodynamic models of adaptation” by a.n. gorban et al., Physics of Life Reviews
38 (2021) 132–134. doi:https://doi.org/10.1016/j.plrev.2021.05.004.
URL https://www.sciencedirect.com/science/article/pii/S1571064521000336

[65] A. F. Aissa, A. B. Islam, M. M. Ariss, C. C. Go, A. E. Rader, R. D. Conrardy, A. M.
Gajda, C. Rubio-Perez, K. Valyi-Nagy, M. Pasquinelli, L. E. Feldman, S. J. Green, N. Lopez-
Bigas, M. V. Frolov, E. V. Benevolenskaya, Single-cell transcriptional changes associated with
drug tolerance and response to combination therapies in cancer, Nature Communications 12.
doi:10.1038/s41467-021-21884-z.

[66] A. M. Horning, Y. Wang, C. K. Lin, A. D. Louie, R. R. Jadhav, C. N. Hung, C. M. Wang,
C. L. Lin, N. B. Kirma, M. A. Liss, A. P. Kumar, L. Z. Sun, Z. Liu, W. T. Chao, Q. Wang,
V. X. Jin, C. L. Chen, T. H. Huang, Single-cell rna-seq reveals a subpopulation of prostate
cancer cells with enhanced cell-cycle–related transcription and attenuated androgen response,
Cancer Research 78. doi:10.1158/0008-5472.CAN-17-1924.

[67] K. N. Natarajan, S. A. Teichmann, A. A. Kolodziejczyk, Single cell transcriptomics of pluripo-
tent stem cells: reprogramming and diﬀerentiation (2017). doi:10.1016/j.gde.2017.06.003.

36

[68] L. Liu, W. Michowski, A. Kolodziejczyk, P. Sicinski, The cell cycle in stem cell proliferation,

pluripotency and diﬀerentiation (2019). doi:10.1038/s41556-019-0384-4.

[69] S. H. Levi, L. Arnon, S. Feldman, A. Alajem, D. Bavli, X. Sun, Y. Buganim, O. Ram, Esrrb
is a cell cycle dependent priming factor balancing between pluripotency and diﬀerentiation,
bioRxiv.

[70] T. H. Cheung, T. A. Rando, Molecular regulation of stem cell quiescence, Nature Reviews

Molecular Cell Biology 14. doi:10.1038/nrm3591.

[71] M. S. Kowalczyk, I. Tirosh, D. Heckl, T. N. Rao, A. Dixit, B. J. Haas, R. K. Schneider,
A. J. Wagers, B. L. Ebert, A. Regev, Single-cell rna-seq reveals changes in cell cycle and
diﬀerentiation programs upon aging of hematopoietic stem cells, Genome Research 25. doi:
10.1101/gr.192237.115.

[72] S. A. O’Connor, H. M. Feldman, S. Arora, P. Hoellerbauer, C. M. Toledo, P. Corrin, L. Carter,
M. Kufeld, H. Bolouri, R. Basom, J. Delrow, J. L. McFaline-Figueroa, C. Trapnell, S. M.
Pollard, A. Patel, P. J. Paddison, C. L. Plaisier, Neural g0: a quiescent-like state found in
neuroepithelial-derived cells and glioma, Molecular Systems Biology 17. doi:10.15252/msb.
20209522.

[73] W. Stallaert, S. R. Taylor, K. M. Kedziora, M. S. Johnson, C. D. Taylor, H. K. Sobon, C. L.
Young, J. C. Limas, J. V. Holloway, J. G. Cook, et al., The molecular architecture of cell cycle
arrest, bioRxiv.

[74] J. M. Suski, M. Braun, V. Strmiska, P. Sicinski, Targeting cell-cycle machinery in cancer

(2021). doi:10.1016/j.ccell.2021.03.010.

[75] A. Chervova, N. Festuccia, A. Dubois, P. Navarro, Mitotic bookmarking by ctcf controls

selected genes during the fast post-mitotic genome reactivation of es cells, bioRxiv.

[76] S. R. Srivatsan, J. L. McFaline-Figueroa, V. Ramani, L. Saunders, J. Cao, J. Packer, H. A.
Pliner, D. L. Jackson, R. M. Daza, L. Christiansen, F. Zhang, F. Steemers, J. Shendure,
C. Trapnell, Massively multiplex chemical transcriptomics at single-cell resolution, Science
367. doi:10.1126/science.aax6234.

[77] A. Singh, M. H. Spitzer, J. P. Joy, M. Kaileh, X. Qiu, G. P. Nolan, R. Sen, Postmitotic g1
phase survivin drives mitogen-independent cell division of b lymphocytes, Proceedings of the
National Academy of Sciences 119 (18) (2022) e2115567119. arXiv:https://www.pnas.org/
doi/pdf/10.1073/pnas.2115567119, doi:10.1073/pnas.2115567119.
URL https://www.pnas.org/doi/abs/10.1073/pnas.2115567119

[78] M. Rowicka, A. Kudlicki, B. P. Tu, Z. Otwinowski, High-resolution timing of cell cycle-
regulated gene expression, Proceedings of the National Academy of Sciences of the United
States of America 104. doi:10.1073/pnas.0706022104.

[79] N. Sompairac, P. V. Nazarov, U. Czerwinska, L. Cantini, A. Biton, A. Molkenov, Z. Zhu-
madilov, E. Barillot, F. Radvanyi, A. Gorban, U. Kairov, A. Zinovyev, Independent compo-
nent analysis for unraveling the complexity of cancer omics datasets, International Journal of
Molecular Sciences 20 (18). doi:10.3390/ijms20184414.
URL https://www.mdpi.com/1422-0067/20/18/4414

[80] A. Gavish, M. Tyler, D. Simkin, D. Kovarsky, L. N. Gonzalez Castro, D. Halder, R. Chanoch-
Myers, J. Laﬀy, M. Mints, A. R. Greenwald, A. Wider, R. Tal, A. Spitzer, T. Hara, A. Tirosh,
S. V. Puram, M. L. Suva, I. Tirosh, The transcriptional hallmarks of intra-tumor heterogeneity
across a thousand tumors, bioRxivarXiv:https://www.biorxiv.org/content/early/2021/
12/20/2021.12.19.473368.full.pdf, doi:10.1101/2021.12.19.473368.
URL https://www.biorxiv.org/content/early/2021/12/20/2021.12.19.473368

37

[81] D. Mahdessian, A. J. Cesnik, C. Gnann, F. Danielsson, L. Stenstr¨om, M. Arif, C. Zhang, T. Le,
F. Johansson, R. Shutten, A. B¨ackstr¨om, U. Axelsson, P. Thul, N. H. Cho, O. Carja, M. Uhl´en,
A. Mardinoglu, C. Stadler, C. Lindskog, B. Ayoglu, M. D. Leonetti, F. Pont´en, D. P. Sulli-
van, E. Lundberg, Spatiotemporal dissection of the cell cycle with single-cell proteogenomics,
Nature 590. doi:10.1038/s41586-021-03232-9.

[82] S. C. Zheng, G. Stein-O’Brien, J. J. Augustin, J. Slosberg, G. A. Carosso, B. Winer, G. Shin,
H. T. Bjornsson, L. A. Goﬀ, K. D. Hansen, Universal prediction of cell-cycle position using
transfer learning, Genome Biology 23. doi:10.1186/s13059-021-02581-y.

[83] D. Jeﬀery, A. Gatto, K. Podsypanina, C. Renaud-Pageot, R. P. Landete, L. Bonneville,
M. Dumont, D. Fachinetti, G. Almouzni, Cenp-a overexpression promotes distinct fates
in human cells, depending on p53 status, Communications Biology 4.
doi:10.1038/
s42003-021-01941-5.

[84] S. Hume, G. L. Dianov, K. Ramadan, A uniﬁed model for the g1/s cell cycle transition (2020).

doi:10.1093/nar/gkaa1002.

[85] H. E. Miller, A. Gorthi, N. Bassani, L. A. Lawrence, B. S. Iskra, A. J. Bishop, Reconstruction of
ewing sarcoma developmental context from mass-scale transcriptomics reveals characteristics
of ewsr1-ﬂi1 permissibility, Cancers 12 (4) (2020) 948.

[86] D. Schwabe, S. Formichetti, J. P. Junker, M. Falcke, N. Rajewsky, The transcriptome dynam-
ics of single cells during the cell cycle, Molecular Systems Biology 16. doi:10.15252/msb.
20209946.

[87] E. Z. Macosko, A. Basu, R. Satija, J. Nemesh, K. Shekhar, M. Goldman, I. Tirosh, A. R. Bialas,
N. Kamitaki, E. M. Martersteck, J. J. Trombetta, D. A. Weitz, J. R. Sanes, A. K. Shalek,
A. Regev, S. A. McCarroll, Highly parallel genome-wide expression proﬁling of individual cells
using nanoliter droplets, Cell 161. doi:10.1016/j.cell.2015.05.002.

[88] A. Yurovsky, B. Futcher, S. Skiena, Pre-phaser: Precise cell-cycle phase detector for scrna-seq,

2019. doi:10.1145/3307339.3342174.

[89] A. Scialdone, K. N. Natarajan, L. R. Saraiva, V. Proserpio, S. A. Teichmann, O. Stegle, J. C.
Marioni, F. Buettner, Computational assignment of cell-cycle stage from single-cell transcrip-
tome data, Methods 85, cyclone¡br/¿Compare 6 ML methods. doi:10.1016/j.ymeth.2015.
06.021.

[90] Z. Liu, H. Lou, K. Xie, H. Wang, N. Chen, O. M. Aparicio, M. Q. Zhang, R. Jiang,
T. Chen, Reconstructing cell cycle pseudo time-series via single-cell transcriptome data, Na-
ture Communications 8, recAT . Compare with trajectory based methods like monocle etc.
doi:10.1038/s41467-017-00039-z.

[91] S. Liang, F. Wang, J. Han, K. Chen, Latent periodic process inference from single-cell rna-seq

data, Nature Communications 11, cyclum¡br/¿. doi:10.1038/s41467-020-15295-9.

[92] J. Liu, M. Yang, W. Zhao, X. Zhou, Ccpe: cell cycle pseudotime estimation for single cell

rna-seq data, Nucleic acids research 50. doi:10.1093/nar/gkab1236.

[93] M. Moussa, I. I. M˘andoiu, Computational cell cycle analysis of single cell rna-seq dataarXiv:
https://www.biorxiv.org/content/early/2020/11/22/2020.11.21.392613.full.pdf,
doi:10.1007/978-3-030-79290-9_7.
URL https://www.biorxiv.org/content/early/2020/11/22/2020.11.21.392613

[94] A. Rougny, L. Paulev´e, M. Teboul, F. Delaunay, A detailed map of coupled circadian clock
and cell cycle with qualitative dynamics validation, BMC bioinformatics 22 (1) (2021) 1–24.

[95] W. Saelens, R. Cannoodt, H. Todorov, Y. Saeys, A comparison of single-cell trajectory infer-

ence methods, Nature biotechnology 37 (5) (2019) 547–554.

38

[96] A. N. Gorban, A. Y. Zinovyev, Principal Graphs and Manifolds, in: Handbook of Research
on Machine Learning Applications and Trends: Algorithms, Methods and Techniques
arXiv:0809.0490,
(ed. E.Olivas),
doi:10.4018/978-1-60566-766-9.
URL
978-1-60566-766-9

http://arxiv.org/abs/0809.0490{%}0Ahttp://dx.doi.org/10.4018/

Information Science Reference, Hershey, PA, 2008.

[97] A. N. Gorban, N. R. Sumner, A. Y. Zinovyev, Topological grammars for data approximation,
Applied Mathematics Letters 20 (4) (2007) 382 – 386. doi:https://doi.org/10.1016/j.
aml.2006.04.022.
URL http://www.sciencedirect.com/science/article/pii/S0893965906001856

[98] N. Leng, L. F. Chu, C. Barry, Y. Li, J. Choi, X. Li, P. Jiang, R. M. Stewart, J. A. Thom-
son, C. Kendziorski, Oscope identiﬁes oscillatory genes in unsynchronized single-cell rna-seq
experiments, Nature Methods 12. doi:10.1038/nmeth.3549.

[99] C. J. Hsiao, P. Y. Tung, J. D. Blischak, J. E. Burnett, K. A. Barr, K. K. Dey, M. Stephens,
Y. Gilad, Characterizing and inferring quantitative cell cycle phase in single-cell rna-seq data
analysis, Genome Research 30. doi:10.1101/gr.247759.118.

[100] M. Kitagawa, K. Kitagawa, Y. Kotake, H. Niida, T. Ohhata, Cell cycle regulation by long

non-coding rnas, Cellular and molecular life sciences 70 (24) (2013) 4785–4794.

[101] V. Tripathi, Z. Shen, A. Chakraborty, S. Giri, S. M. Freier, X. Wu, Y. Zhang, M. Gorospe, S. G.
Prasanth, A. Lal, K. V. Prasanth, Long noncoding rna malat1 controls cell cycle progression
by regulating the expression of oncogenic transcription factor b-myb, PLoS Genetics 9.

[102] D. Chen, M. A. Farwell, B. Zhang, Microrna as a new player in the cell cycle, Journal of

cellular physiology 225 (2) (2010) 296–301.

[103] G. Gambardella, A. Carissimo, A. Chen, L. Cutillo, T. J. Nowakowski, D. Di Bernardo, R. Blel-
loch, The impact of micrornas on transcriptional heterogeneity and gene co-expression across
single embryonic stem cells, Nature communications 8 (1) (2017) 1–11.

[104] B. DeVeale, L. Liu, R. Boileau, J. Swindlehurst-Chan, B. Marsh, J. W. Freimer, A. Abate,
R. Blelloch, G1/s restriction point coordinates phasic gene expression and cell diﬀerentiation,
Nature Communications 13 (1) (2022) 1–17.

[105] D. Dominguez, Y.-H. Tsai, N. Gomez, D. K. Jha, I. Davis, Z. Wang, A high-resolution tran-
scriptome map of cell cycle reveals novel connections between periodic genes and cancer, Cell
research 26 (8) (2016) 946–962.

[106] J. M. Rozenberg, S. Zvereva, A. Dalina, I. Blatov, I. Zubarev, D. Luppov, A. Bessmertnyi,
A. Romanishin, L. Alsoulaiman, V. Kumeiko, et al., The p53 family member p73 in the
regulation of cell stress response, Biology direct 16 (1) (2021) 1–21.

[107] K. C. Chen, L. Calzone, A. Csikasz-Nagy, F. R. Cross, B. Novak, J. J. Tyson, Integrative
analysis of cell cycle control in budding yeast, Molecular Biology of the Cell 15. doi:10.
1091/mbc.E03-11-0794.

[108] W. Stallaert, S. R. Taylor, K. M. Kedziora, M. S. Johnson, C. D. Taylor, H. K. Sobon, C. L.
Young, J. C. Limas, J. V. Holloway, J. G. Cook, J. E. Purvis, The molecular architecture
of cell cycle arrest, bioRxivarXiv:https://www.biorxiv.org/content/early/2022/04/27/
2022.04.27.489684.full.pdf, doi:10.1101/2022.04.27.489684.
URL https://www.biorxiv.org/content/early/2022/04/27/2022.04.27.489684

[109] S. Gookin, M. Min, H. Phadke, M. Chung, J. Moser, I. Miller, D. Carter, S. L. Spencer, A
map of protein dynamics during cell-cycle progression and cell-cycle exit, PLoS biology 15 (9)
(2017) e2003268.

39

[110] F. Buettner, K. N. Natarajan, F. P. Casale, V. Proserpio, A. Scialdone, F. J. Theis, S. A.
Teichmann, J. C. Marioni, O. Stegle, Computational analysis of cell-to-cell heterogeneity in
single-cell rna-sequencing data reveals hidden subpopulations of cells, Nature Biotechnology
33. doi:10.1038/nbt.3102.

[111] M. Barron, J. Li, Identifying and removing the cell-cycle eﬀect from single-cell rna-sequencing

data, Scientiﬁc Reports 6. doi:10.1038/srep33892.

[112] F. Buettner, N. Pratanwanich, D. J. McCarthy, J. C. Marioni, O. Stegle, f-sclvm: Scal-
able and versatile factor analysis for single-cell rna-seq, Genome Biology 18. doi:10.1186/
s13059-017-1334-8.

[113] D. van Dijk, R. Sharma, J. Nainys, K. Yim, P. Kathail, A. J. Carr, C. Burdziak, K. R.
Moon, C. L. Chaﬀer, D. Pattabiraman, B. Bierie, L. Mazutis, G. Wolf, S. Krishnaswamy,
D. Pe’er, Recovering gene interactions from single-cell data using data diﬀusion, Cell 174.
doi:10.1016/j.cell.2018.05.061.

[114] G. Eraslan, L. M. Simon, M. Mircea, N. S. Mueller, F. J. Theis, Single-cell rna-seq
doi:10.1038/

denoising using a deep count autoencoder, Nature Communications 10.
s41467-018-07931-2.

[115] J. C. Saldivar, S. Hamperl, M. J. Bocek, M. Chung, T. E. Bass, F. Cisneros-Soberanis,
K. Samejima, L. Xie, J. R. Paulson, W. C. Earnshaw, et al., An intrinsic s/g2 checkpoint
enforced by atr, Science 361 (6404) (2018) 806–810.

[116] L. Vallier, Cell cycle rules pluripotency, Cell Stem Cell 17 (2) (2015) 131–132.

[117] S. Pauklin, L. Vallier, The cell-cycle state of stem cells determines cell fate propensity, Cell

155 (1) (2013) 135–147.

[118] S. Dalton, G1 compartmentalization and cell fate coordination, Cell 155 (1) (2013) 13–14.

[119] K. A. U. Gonzales, H. Liang, Y.-S. Lim, Y.-S. Chan, J.-C. Yeo, C.-P. Tan, B. Gao, B. Le, Z.-Y.
Tan, K.-Y. Low, et al., Deterministic restriction on pluripotent state dissolution by cell-cycle
pathways, Cell 162 (3) (2015) 564–579.

[120] I. Neganova, X. Zhang, S. Atkinson, M. Lako, Expression and functional analysis of g1 to s
regulatory components reveals an important role for cdk2 in cell cycle regulation in human
embryonic stem cells, Oncogene 28 (1) (2009) 20–30.

[121] I. Neganova, F. Vilella, S. P. Atkinson, M. Lloret, J. F. Passos, T. Von Zglinicki, J.-E.
O’Connor, D. Burks, R. Jones, L. Armstrong, et al., An important role for cdk2 in g1 to
s checkpoint activation and dna damage response in human embryonic stem cells, Stem Cells
29 (4) (2011) 651–659.

[122] J. Massagu´e, G1 cell-cycle control and cancer (2004). doi:10.1038/nature03094.

[123] M. ter Huurne, T. Peng, G. Yi, G. van Mierlo, H. Marks, H. G. Stunnenberg, Critical role for
p53 in regulating the cell cycle of ground state embryonic stem cells, Stem Cell Reports 14.
doi:10.1016/j.stemcr.2020.01.001.

[124] I. I. Suvorova, B. B. Grigorash, I. A. Chuykin, T. V. Pospelova, V. A. Pospelov, G1 checkpoint
is compromised in mouse escs due to functional uncoupling of p53-p21waf1 signaling, Cell Cycle
15. doi:10.1080/15384101.2015.1120927.

[125] E. Dolgin, p53 prevents pluripotency, Nature Reports Stem Cellsdoi:10.1038/stemcells.

2009.112.

[126] T. Kawamura, J. Suzuki, Y. V. Wang, S. Menendez, L. B. Morera, A. Raya, G. M. Wahl, J. C. I.
Belmonte, Linking the p53 tumour suppressor pathway to somatic cell reprogramming, Nature
460. doi:10.1038/nature08311.

40

[127] H. Hong, K. Takahashi, T. Ichisaka, T. Aoi, O. Kanagawa, M. Nakagawa, K. Okita, S. Ya-
manaka, Suppression of induced pluripotent stem cell generation by the p53-p21 pathway,
Nature 460. doi:10.1038/nature08235.

[128] S. Menendez, S. Camus, J. C. I. Belmonte, p53: Guardian of reprogramming (2010). doi:

10.4161/cc.9.19.13301.

[129] Y. Li, H. Feng, H. Gu, D. W. Lewis, Y. Yuan, L. Zhang, H. Yu, P. Zhang, H. Cheng, W. Miao,
W. Yuan, S. Y. Cheng, S. M. Gollin, T. Cheng, The p53-puma axis suppresses ipsc generation,
Nature Communications 4. doi:10.1038/ncomms3174.

[130] X. Fu, S. Wu, B. Li, Y. Xu, J. Liu, Functions of p53 in pluripotent stem cells (2020). doi:

10.1007/s13238-019-00665-x.

[131] J. M. Suski, N. Ratnayeke, M. Braun, T. Zhang, V. Strmiska, W. Michowski, G. Can, A. Si-
moneau, K. Snioch, M. Cup, et al., Cdc7-independent g1/s transition revealed by targeted
protein degradation, Nature 605 (7909) (2022) 357–365.

[132] M. T. Kanemaki, A rethink about enzymes that drive dna replication (2022).

[133] G. La Manno, R. Soldatov, A. Zeisel, E. Braun, H. Hochgerner, V. Petukhov, K. Lidschreiber,
M. E. Kastriti, P. L¨onnerberg, A. Furlan, et al., Rna velocity of single cells, Nature 560 (7719)
(2018) 494–498.

[134] O. Franz´en, L.-M. Gan, J. L. Bj¨orkegren, Panglaodb: a web server for exploration of mouse

and human single-cell rna sequencing data, Database 2019.

[135] E. Lundberg, Kaggle competition: Human protein atlas image classiﬁcation.

URL https://www.kaggle.com/competitions/human-protein-atlas-image-classification/
overview

[136] E. Lundberg, Kaggle competition: Human protein atlas - single cell classiﬁcation.

URL https://www.kaggle.com/competitions/hpa-single-cell-image-classification/
overview

[137] J. Liu, Z. Fan, W. Zhao, X. Zhou, Machine intelligence in single-cell data analysis: Advances

and new challenges, Frontiers in Genetics 12. doi:10.3389/fgene.2021.655536.

[138] O. Stegle, New statistical approaches to disentangle single-cell diversity (2016).

URL https://youtu.be/bfBl0naA7t4

[139] S. Liang, Latent periodic process inference from single-cell rna-seq data (2021).

URL https://www.youtube.com/watch?v=UDM0vhReq4c&t=801s

[140] F. Ma, M. Pellegrini, ACTINN: automated identiﬁcation of cell types in single cell
arXiv:https://academic.
doi:10.1093/

RNA sequencing, Bioinformatics 36 (2) (2019) 533–538.
oup.com/bioinformatics/article-pdf/36/2/533/31962865/btz592.pdf,
bioinformatics/btz592.
URL https://doi.org/10.1093/bioinformatics/btz592

[141] Y. K. Tan, X. Zhang,

cell

veals
cell
https://www.biorxiv.org/content/10.1101/222372v1.fulldoi:10.1101/222372.

dendritic

cycle

and

of

J. Chen,
diﬀerentiation

cyclex:
relationship

multi-dimensional pseudotime

re-
progenitors,

[142] G. M. Cooper, R. E. Hausman, R. E. Hausman, The cell: a molecular approach, Vol. 4, ASM

press Washington, DC, 2007.

41

Appendix A. Technical review of the existing software features

The present section contains a brief overview of the discussed packages. Comprehensive bench-
marks are out of the scope of the present paper. The reader may look at the supplementary section
of the Tricycle paper [82] for the most comprehensive benchmarks available presently. The survey
paper [137] contains a brief section devoted to cell cycle analysis based scRNA-seq data with focus
on machine learning approaches.

Appendix A.1. Cyclone, Oscope, ccRemover, scLVM, f-scLVM (Slalom)

Cyclone [89], Oscope [98], ccRemover [111] are the ﬁrst packages entirely devoted to the cell cycle
analysis using scRNA-seq data. They are devoted to single tasks: Cyclone - phase labeling, Oscope
- pseudotime, ccRemover - removing the cell cycle signal from the data. At the time of writing
this review, these packages seem to be outdated. Thus, we noticed from experience that Cyclone
can have problems with labeling the ”S”-phase: in many examples it mainly annotated ”G1” and
”G2M” labels, not recognizing the ”S” cells; Oscope is too slow to work on modern large datasets;
ccRemover reported to be over-correcting in some cases, i.e. removing too much variation from the
data which leads to loss of the biological information - in particular cell type diﬀerences.

Nevertheless, let us brieﬂy mention some interesting ﬁndings from these papers, as well as scLVM

and f-scLVM (Slalom) which are of more general use.

Cyclone [89].

The package uses supervised machine learning strategy to assign cell cycle
phase labels using the datasets with known labels for training. From today perspective the datasets
available at the time of package writing were small and noisy (some having less than 100 cells).
Also the main training dataset was ”182 mouse embryonic stem cells (mESCs)”, while ESC have
speciﬁc ”fast” cell cycle pattern it is diﬀerent from normal cell cycle, so it potential source of the
problem. Overall it is not surprising that Cyclone benchmarks on the modern large datasets lead to
not fully correct results - ”S”-phase labels are almost missing. For example, see [82] Supplementary
materials Fig. S19 - one can see clear ”triangle” pattern of the normal cell cycle, but Cyclone marks
cells by ”G1” (green) and ”G2M” (blue), the ”S”-phase (red) is practically missing. This result
appears incorrect to us, see subsection 3.2 for explanations, or compare with labels by the other
packages in [82] Supplementary materials). Nevertheless the methodology established for Cyclone
development would probably be useful for the future development. Six machine learning approaches
were considered and the conclusions was that PCA and pairs based methods were the most successful.
Oscope [98]. The R-package Oscope estimates the pseudotime for the cell cycle. Unfortunately
it scales poorly on large datasets. One of the probable explanations for this is that it processes all
pairs of relevant genes (”Oscope ﬁts a 2-dimensional sinusoidal function to all gene pairs and chooses
those with high scores” [98]), thus leading to ”high computational burden” [91] as was mentioned in
many subsequent publications [91], [82]. The next steps of the Oscope algorithm: ”Once candidate
genes are identiﬁed, the K-medoids algorithm is applied to cluster genes into groups with similar
frequencies, but possibly diﬀerent phases. Then, for each group, Oscope recovers the cyclic order
which places cells by their position within one cycle of the oscillatory process underlying the group.”
To deﬁne ”cyclic order” is a kind of classical ”traveling salesman problem (TSP)” (see also reCAT
package discussion below). The authors modify approach to the solution of TSP - ”the nearest
insertion algorithm”: ”to order cells within an oscillatory gene group so that distance between each
gene’s expression and its gene-speciﬁc base cycle proﬁle is minimized on average over all genes in the
group”, thus getting the cyclic order of cells as desired. It is interesting that the approach can work
not only on scRNA-seq data, but on bulk microarray data like the data from [45]. The examples
from the subsequent papers e.g. Figure 3 [99] show that Oscope produces reasonable results when
the computational burden is not completely prohibitive.

ccRemover [111]. The R-package ccRemover was created to modify the scRNA-seq dataset
in order to exclude gene expression variance related to cell cycle. It is one the tasks described in the
main text of the present review and it is quite important for any downstream analysis of scRNA-
seq data. Subsequent analysis in CCPE [92] (Supplementary Figure S10), SC1CC [93] ( Fig.S1 )
demonstrates that ccRemover over-corrects the cell cycle signal, that means it removes not only
the cell cycle signal, but also the other biological signals, such as cell type. The examples above

42

show that diﬀerent cell types become indistinguishable after ccRemover for certain datasets. Some
degradation of performance also reported in [91] Figure 3 on simulated data.

The ccRemover was developed to relax some of the assumptions of scLVM, i.e. ”the key assump-
tion that scLVM makes is that all the main eﬀects in the expression of cell-cycle genes are cell-cycle
eﬀects”, that means both packages rely on external list of annotated ”cell-cycle genes”, but the key
assumption of scLVM is that the main signal in these genes is due to cell cycle, while ccRemover
admits it might not be true. This is indeed seems natural since huge lists like modern Gene Ontology
with more than 4000 genes related to cell cycle for sure contain not only the cell cycle signal and
for many of these genes non cell cycle-related factors might be stronger. The analysis performed on
several real datasets showed an improvement over scLVM, e.g. it was reported that scLVM improves
by 2.5 percents classiﬁcation quality over classiﬁcation without cell cycle removing, while ccRemover
improves 5 percents for ”Real dataset 2: human glioblastomas data”.

The idea behind the ccRemover algorithm [111] is ”ccRemover carries out a simple PCA on
the expression proﬁles of control genes to capture the sources of variation/eﬀects...”, and roughly
speaking consists in comparing the signal driving the control genes (not in the input cell cycle genes
list) and the cell cycle genes (in the input list). Those principal components where the cell cycle
eﬀect is greater are considered to be related to cell cycle. And ”then all eﬀects declared as the cell-
cycle eﬀect are removed from the whole dataset by subtracting the projections of gene expression
proﬁles on these eﬀects.” After that one repeats the procedure from the beginning ”until no more
principal components are identiﬁed as the cell-cycle eﬀect”.

Overall the paper was an important contribution for removing the cell cycle eﬀect task. The ﬁrst
tool addressing this task was scLVM [110] but which was of more general purpose (not limited to
removing the cell cycle eﬀect)

scLVM [110], f-scLVM(Slalom) [112].

scLVM is a popular tool in the scRNA-seq ﬁeld with
almost 1000 citations up to date. It proposes some general framework to remove the confounding
eﬀects, in order to highlight the eﬀect of interest. The main example considered in the paper is the
cell cycle-related confounding eﬀect for the objective of distinguishing the cell types. The biological
outcome was ”identiﬁcation of otherwise undetectable subpopulations of cells that correspond to
diﬀerent stages during the diﬀerentiation of naive T cells into T helper 2 cells”. I.e. after removing
the cell cycle eﬀect the clustering into two cell subtypes became clear (Figure 3e - compare to Figure
3d (before removing) [110]). One of the inputs for the algorithm is the list of genes which are
suspected to be responsible for the confounding eﬀect. The general idea of the methods removing
confounding eﬀects is predicting the values of variables outside the list by the variables from the
list; the variance which can be predicted is thought to be due to the confounders and the diﬀerence
between the value and prediction is the variance of interest. The actual implementation is more
sophisticated [110], follow-up [112] or the video recording [138].

The f-scLVM(Slalom) is a follow-up package to scLVM, it extends the predecessor is several
directions: it can work with several latent factors, ”reﬁnes gene set annotations, and infers factors
without annotation”. Moreover, f-scLVM was claimed to scale linear both with respect to the number
of cells and genes, in contrast to quadratic or cubic scaling of the other approaches. Overall scLVM
and f-scLVM(Slalom) are important pioneering contributions to the single cell data analysis ﬁeld,
we give them less weight in the present review since they are not focused entirely on the analysis of
cell cycle. On the other hand these works are widely known and referenced.

Appendix A.2. Seurat/Scanpy

Seurat [5] is the most popular R-based framework to work with single cell RNA sequencing data,
while Scanpy [6] is its analogue for Python. There are tools for cell cycle analysis in Seurat [27]
which were re-implemented in Scanpy [26]. They are based on seminal papers from around 2015 by
Tirosh, Kowalczyk, Regev et.al.: see Figure 2F in [71], Figure 2A in [62], Figure 3A in [63], etc.
which introduce G1/S-G2/M plots and corresponding analysis. However, none of these publications
provide a thorough evaluation of the approach, despite it is the most commonly used tool.

Tasks. The tools are able to assign G1,S,G2M cell cycle phase labels and remove the cell eﬀect,
at the time of writing there is no pseudotime construction or the analysis of cyclic genes or the
analysis of G0 or labeling non-proliferating cells (such cells are labeled by G1).

43

Approach. The labeling method is simple and is visualised in Figure 7A1. The region where
both G1/S and G2/M scores are negative is labelled ”G1”. Otherwise, one compares the scores,
and the region with G2/M greater than G1/S is assigned G2M label, while the region with G2/M
less than G1/S is assigned ”S” label. It seems to be good enough approach for fast and very rough
estimation, but is far from being precise in all cases. We believe that more advanced approaches
can be beneﬁcial for the use with modern high quality and large datasets.

The cell cycle removal algorithm consists of building the linear prediction model using a given
input list of cell cycle genes as predictors, and assigning the diﬀerence between the actual transcript
values and predictions to be result of removal procedure.

Highlights and drawbacks. The advantages: simple, fast, robust. Disadvantages: the anno-
tation is not always perfect, typically G1 fraction is underestimated. The annotation is especially
misleading in two cases. For the ”fast” cell cycle pattern, G1 label can be absent at all or substan-
tially smaller than the actual G1, see Figure 7D,E. For the case of the dataset containing mostly
non-proliferating cells, a large part of them might be incorrectly assigned to S and G2M phases,
see Figure 7B . For the case of the ”normal” cell pattern Seurat/Scanpy precision might be also
misleading with G1 fraction underestimated. However, it might be not so critical for applications
where only a rough estimation is required.

Let us provide some details for the case of the normal cell cycle. See Figure 7A,C: A1 - Scanpy
labels, A2 - shows the boundary of M and G1 which can be seen by the sudden drop of the total sum
of the read counts which can be in used in high quality datasets for determining the moment of cell
division. One can see a substantial diﬀerence of the border between M and G1 estimated by Scanpy
(Figure 7A1) and the one estimated based on the total sum of the read counts: G1 fraction appears
much smaller than it should be. The S phase label which is expected to appear at the right vertex
of the triangle (see subsection 3.1), starts much earlier which probably leads to underestimating the
G1 fraction. One can see similar eﬀects in more noisy datasets in Figures 7C1,C2. Figures 7C3,C4
show the cell line data from [72], but with preliminary ﬁltering made in order to keep mainly G0/G1
cells (”G0/G1 cells were ﬁrst sorted on an FACSAria II (BD Biosciences) for the cells positive only
for mCherry-hCDT1(aa30/120)”). Therefore, one expects to see mainly G1 label. However, Scanpy
assigns substantial number of cells to be S and G2M. Thus G1 underestimation happens in that
example also. The same phenomena can be seen in other examples.

It is also worth noting the phenomenon described in PrePhaser manuscript, in its Figure 1
[88]. If one takes a scRNA-seq dataset, computes the cell cycle phase labels, and then take only a
subpart of the dataset corresponding to G1 and again uses the tool only on that part of the dataset,
the expected outcome should be to get G1 label for all the cells. But it is not the case for the
Seurat/Scanpy methods.

Technical detail. Let us mention that Seurat/Scanpy calculation of the G1/S-G2/M scores is
not simply averaging of the appropriate groups of genes, but involves an interesting idea to calculate
the diﬀerence between these averages and the ones calculated for randomly chosen genes with similar
distribution (that should represent non cell cycle genes). Ideally that should give a way to determine
the non-proliferating cells. Since expressions of key cell cycle genes for non-proliferating cells should
not be much diﬀerent from the other genes with the similar distribution. The idea is quite promising,
but in our experience it seems the implementation does not completely meet the desired objective.
Also, z-score -based scaling is required by Seurat/Scanpy methodology which might amplify the
noise/signal ratio. In our experience, we were not able to document a substantial advantage of using
the Scanpy/Seurat-based gene set scoring compared to a simple averaging of gene expression in log
scale, in the applications to cell cycle analysis.

To conclude: for the case of the normal cell cycle the vertices of ”the cell cycle triangle” (rep-
resenting the ”cores” of G1, S, G2M phases) are labeled typically correctly. However, the borders
between phases can be wrongly annotated. The annotation of cell cycle phases might be precise
enough for some applications, and the method is fast and robust. The cell cycle phase annotation
for the cases of the ”fast” cell cycle and mostly ”non-proliferating” cells is not acceptable for most of
the applications, since it might lead to incorrect biological conclusions like labeling non-proliferating
cells as proliferating, and a huge underestimation of the G1 fraction.

44

Appendix A.3. reCAT

The R-package reCAT (REcover Cycle Along Time) [90] is quite well-known in the ﬁeld. One of
the key ideas of it is the application of the travelling salesman problem (TSP) in order estimate the
cell cycle pseudotime. Indeed it looks for the cycle in the cell neighbourhood graph.

Approach. The classical TSP searches for a cycle in a graph. The standard approach to get the
graph from the dataset is to take a weighted graph representing the distance matrix or to exploit
the k nearest neighbours (k-NN) graph. In both cases, in the case of single cell data, the graphs
might be big and noisy. The standard trick to simplify the task if ﬁrst to cluster the data and
consider only the cluster centers instead of the initial data points. Afterwards one can consider the
weighted graph representing the distances between the clusters centers and apply TSP. By aligning
data points to the nearest graph nodes, on can quantify the pseudotime and obtain the cell cycle
phase labels and the gene expression dynamics as a function of pseudotime.

Tasks. reCAT provides estimation of the pseudotime, cell cycle phase labels (including G0),
identiﬁcation of cell cycle-associated genes. It does not provide the cell cycle removing and distin-
guishing proliferative from non-proliferative cells.

Highlights and drawbacks. The pseudotime estimation based on graph-based data representa-
tion and applying TSP is quite natural and beneﬁcial compared to the polar angle-based pseudotime.
Reports in the other packages like Tricycle (”The orderings inferred by reCAT are largely consistent
with our cell cycle position”), Peco (”we found that the orderings from reCAT agree most closely
with the gating-based classiﬁcation”) conﬁrm that in many cases the reCAT pseudotime estimation
is reasonable. However the cell cycle phase estimation is probably not the strongest point of the
package. As reported in Tricycle it requires manual cutoﬀs, which are diﬃcult or not always possi-
ble to set, in SC1CC [93] (Figure 3) a comparison is presented between the experimental cell cycle
phase labels and the ones produced by reCAT. Also CCPE [92] reports certain issues (Figure 2 and
”reCAT ... do not characterize G2/M phase in the right order after S phase.”)

In our opinion the datasets which were used in reCAT paper were too small in size to correctly

adjust the cell cycle phase labeling, as well as there were some other issues.

To conclude: reCAT exploits a natural idea for estimation of cyclic pseudotime with TSP, which
reported to be mainly consistent with other methods. However, the cell cycle phase estimation is
probably not the strongest feature of the package.

Appendix A.4. Cyclum

Cyclum Python package (using Keras with TensorFlow) is the ﬁrst to use ideas of deep learning
(more precisely autoencoders) to analyse the cell cycle using scRNA-seq data. Autoencoder is an
unsupervised neural network which consists of the encoding part which typically compress the data
to get a reduced representation, and the decoding part which regenerates the input from that reduced
representation.

Approach. The application of an autoencoder appears a natural idea to describe the periodic
processes like cell cycle.
Indeed, training the autoencoder with the one-dimensional layer corre-
sponding to the polar angle, one may hope that such one-dimensional layer will provide a cyclic
”pseudotime” for the cell cycle progression. Technically one considers not one-dimensional, but two-
dimensional embedding, having the form (sin(x), cos(x)), i.e. described by a single latent variable x.
The Cyclum architecture is slightly more complicated: the bottleneck layer consists of the expected
(sin(x), cos(x)) part which is extended by the linear variable (X linear - see the ﬁrst equalities in
Section ”Methods” [91]), so in a sense it tries to approximate the single cell data by helix.

Tasks. The Cyclum provides solutions to four main tasks of the cell cycle analysis: determining
the cell cycle phase label, calculating the pseudotime of the cell cycle progression, deﬁning the cell
cycle-associated genes, and removing the cell cycle eﬀect. The only task which is not considered in
Cyclum is deﬁning the non-proliferating/G0 cells.

Highlights and drawbacks. The Cyclum was the ﬁrst package to apply deep learning to cell
cycle analysis based on scRNA-seq data, which was an innovative approach. Cyclum can work as
a out-of-the-box solution, provided with many examples of its usage and videotutorials [139]. The
package was applied not only to the cell cycle analysis, but also for studying EMT (Epithelial-
Mesenchymal Transition). It was compared with several methods available at that time and six real

45

datasets were considered. The analysis by Cyclum of a relatively large hESC dataset with 12493
cell and 33694 genes takes about 40 minutes on a typical desktop computer. The benchmarks made
in CCPE [92] paper reported ”the overall performance of Cyclum is better than Seurat, CYCLOPS
and reCAT”, but that results were reported on one of the datasets which was originally considered
in Cyclum paper and is quite small. There are certain drawbacks, in particular benchmarks in
DeepCycle paper [35], reported poor performance of Cyclum on sevreal datasets. Our own tests
lead us to similar conclusion. The computational time of Cyclum can be prohibitive compared to
many other simpler methods such as Tricycle, which give result almost instantly. As for many other
packages the case of non-proliferating cells is not discussed, and we can expect the results will not
be adequate, since there is no warning about such possibility. The datasets with many cell types
were not considered. Overall despite strong and interesting idea of the approach, in our opinion the
package cannot be recommended at least in the ﬁrst line.

Appendix A.5. Revelio

Revelio [86] is an inﬂuential paper from N. Rajewsky Lab. The ideas presented there has been
already used in other papers like Tricycle [82]. The focus of the paper is more on theoretical modeling,
with the package itself supporting the paper conclusions, so it does not seem to be an out-of-the-box
solution. Nevertheless the ideas behind the package are interesting.

Approach. The main goal of the approach is to ﬁnd linear a system of 2d coordinates called
”dynamical components” (DC), such that the cell cycle-related data point cloud would look like a
”circle” in these coordinates. To do it one restricts to the subset of genes related to cell cycle (using
Gene Ontology and a cutoﬀ for the expression); then one considers 3 dimensional PCA; and makes
a change of coordinates in 3d, such that the exluded region (”circle”) would be seen in 2d while the
third coordinate would correspond to a slower orthogonal dynamics.

Tasks. The main focus of the paper is to prove that such construction is possible and can be
eﬀectively implemented. The paper describes a method to estimate cell cycle phases (which was
later improved in Tricycle), and emphasizes that the task of the cell cycle removal can be easily
done due to the linear nature of the method. Pseudotime is not discussed directly, but can also be
computed from the Revelio approach by taking the polar angle in 2d space.

Highlights and drawbacks. One of the clear messages with which we would rather agree is that
the linear transormation of the initial cell coordinates is the most appropriate for analysing the cell
cycle. In our experience use of non-linear methods: TSNE, UMAP, etc. are quite inappropriate to
study the cell cycle at least for the datasets containing one cell type. The cell cycle phase estimation
in Revelio is at a ﬁner granularity then in many other approaches:
it uses 5 groups of genes and
demonstrated that it gives reasonable results in several examples. These 5 groups were found early
in 2002 in [45], and later used in 2015 in [87] in scRNA-seq context, but were not widely used before
the publication of the Revelio paper.

One of the drawbacks is that some ideas described in the manuscript were not fully implemented
in the package, but that was partially improved in Tricycle. The Tricycle paper provides several
examples where Revelio approach does not seem to produce expected ”circle” [82] ( Supplementary
in particular, they
Materials Fig.S17). The reason is in the high heterogeneity of these datasets:
contain multiple cell types. In our experience this is expected and can be easily ﬁxed. For example,
one should not consider too many genes for computing the initial linear embedment: many genes
from the Gene Ontology ”cell cycle” contain not only the cell cycle signal. In our experience the
Tirosh’s set of genes sets exploited in Seurat/Scanpy is close to be optimal to ﬁnd the correct
representation because these genes’ variation is almost exclusively related to the cell cycle. One can
also at ﬁrst calculate the pseudotime using a restricted genes set and after that check all the other
genes. The dynamical (i.e. dataset dependent) nature of the coordinates has certain advantages,
however, in our experience the ﬁxed e.g. Tirosh G1/S-G2/M (as in Seurat/Scanpy) are more simple,
more easy to interpret, allows to compare several datasets in the same system of coordinates. It has
an disadvantage not to show a ”circle” for the case of the ”fast” cell cycle datasets, but that can be
ﬁxed by considering a modiﬁed gene set, as we described above. Finally one of the papaer claims
is that the shape of the cell cycle is a round circle. That seems to contradict to our experience
as well as to the majority of visualizations obtained in other papers, and can be questioned from
the known biological principles. Visualization of modern larger and good quality datasets typically

46

show the ”triangle”-like pattern (e.g. see subsection 3.2, or Tricycle [82] ( Supplementary Materials
Fig.S20). This matches better the model of existence of powerful transcription factors turning on
and oﬀ, initiating the transcription of large groups of genes in one single moment, which is seen
as turning points or segments in the cell cycle trajectory. For example E2F1 transcription factor
initiates the G1 phase. The triangle seen in many visualization is certainly a simpliﬁcation of reality,
nevertheless, the eﬀect remain striking. We are convinced that the cell cycle trajectory in the gene
expression space should be represented by a sequence of segments rather than round circle[41].

To conclude: the Revelio exploits interesting and innovative ideas, but the package itself was not
the main focus of the paper so it is not accomplished so far for its practical and universal use in cell
cycle studies.

Appendix A.6. PECO

The R-package PECO is a recent method to estimate pseudotime based on machine learning
[99]. Previously machine learning methods predicted cell cycle phases, by training on datasets with
experimentally obtained cell cycle phase labels. The novelty of PECO approach is in suggesting a
machine learning estimator for pseudotime (not cell cycle phases), using experimentally obtained
FUCCI intensities, which are continuously distributed.

Approach. The idea is to consider a dataset with both scRNA-seq and FUCCI markers available
for a large set of cells. The authors generated their own dataset and then trained a machine learning
regression model to predict the FUCCI intensities from scRNA-seq measurements. FUCCI intensities
are continuous and one can calculate the cell cycle pseudotime from them.

Tasks. The main task resolved by PECO is cell cycle pseudotime reconstruction and it can also
select cell cycle-associated genes. It does not provide automatic cell cycle removal and estimation of
proliferative/non-proliferative/G0 cells. The paper discusses the prediction of the cell cycle phase
labels based on partition around medoids (PAM) method, but it seems to be restricted to the initial
FUCCI-scores, not the predicted ones, so to the best of our understanding the package does not
provide such functionality ready to be used in practice.

Highlights and drawbacks. One of the interesting points of PECO was to demonstrate that
only 5 genes (CDK1, UBE2C, TOP2A, H4C5, and H4C3) is enough to describe the cell cycle dynam-
ics. Adding more genes did not improve the quality substantially. Let us mention that the package
PECO [99] provides functionality to estimate p-values for genes being truly cell cycle dependent,
one the basis of permutation statistics. The benchmarks in Tricycle paper [82] ( Supplementary
Fig.S16 ) on 11 datasets report results consistent with Tricycle approach. In general machine learn-
ing methods are popular and powerful, nevertheless we are not too optimistic about them for that
task, because scRNA-seq data quality is diverse and so the models trained on some datasets may
not generalize well to the others. The number of datasets with FUCCI markers available is limited
and they are of quite small size, not representing the full diversity of the scRNA-seq data, many of
these datasets are of poor signal quality. All that limits the applicability of the machine learning
methods. As the authors of the PECO concluded by themselves: ”Overall, our results suggest the
need for more research and better data to quantify the accuracy and relative performance of the
diﬀerent available methods, including ours.”

To conclude: PECO is a recent interesting method which seems to produce reasonable results
as benchmarks mentioned above show. However it seems to us other approaches e.g. Tricycle are
sometimes more robust for these tasks.

Appendix A.7. CCAF

The Tensorﬂow-powered Python package CCAF is a neural network-based classiﬁer of the cell
cycle phases with main focus on ”Neural G0”, i.e.
it is one of the rare packages which can assign
the ”G0” label [72]. The focus of the paper is on the cells of neural origin, which is related to
understanding the glioblastoma stem-like cells. Cancer stem cells is an active ﬁeld of research which
might give improvements for treatment and understanding the cancer in general. Cancer stem cells
are expected to be in some sort of ”G0”-like state.

Approach. The authors ﬁrst use unsupervised clustering to split cell cycle into several clusters,
and then train neural network ”ACTINN” (developed before [140] in order to classify cell types) to
identify these clusters in other datasets.

47

Tasks. Only the cell cycle phase labeling task is considered, and the focus is the identiﬁcation

of ”G0” label.

Highlights and drawbacks. The paper itself is a deep study of quiescent-like cell state in
”neuroepithelial-derived cell types during mammalian neurogenesis and in gliomas”. The dataset
produced is of excellent quality. The observation that ”knockout of genes associated with the
Hippo/Yap and p53 pathways diminished Neural G0 in vitro, resulting in faster G1 transit” is in
line with the known general role of p53 and consistent with our own observations on the ”fast” cell
cycle (discussed above). Hippo/Yap pathway might give a clue to understand cases of the fast cell
cycle not explained by p53. The package has been tested on non-neuroepithelial cells: ”actively
dividing human embryonic kidney (HEK293T) cells” and reported to get reasonable results, as
well as classiﬁers of S and M phases by ccAF were validated using the classical synchronized bulk-
microarray data [45]. In general the structure of ”GO” phase is not fully understood (as we discussed
above), and the ccAF paper provides interesting insights on that problem. Recent papers from the
Purvis’ lab based on single cell proteomics, provided quantiﬁcation and visualization of the degree
of quiescence/senescence, thus not only identifying the ”G0” cluster, but also characterizing its
structure [25], [108]. One may hope combining the ideas of the two papers to shed more light on the
organization of the G0-state in the future. As a drawback let us mention absence of comparison with
G1/S-G2/M plots. The use of these standard plots would probably allow one to clearly positions
the G0 subpopulation and also observe its structure as an elongated 2D part of the data point cloud
near zero. Thus it is not exactly clear how far the results are diﬀerent from the standard approach,
and how good the results of CCAF would be on the datasets with cells of other (non neural) origin
having a substantial ”G0”-part (in contrast to HEK293T which does not have G0 fraction), as well
as other subtle questions on multiple cell type datasets or the datasets without proliferating cells.

To conclude: the paper and package provide important insights. The package itself is not intended
to be serve for general purpose cell cycle analysis, but rather has a speciﬁc focus, labeling the cell
it is not yet fully clear more general
cycle phases in particular ”G0” for neural and related cells.
applicability (other cell types) but that was not a goal of the paper.

Appendix A.8. DeepCycle

Approach. DeepCycle is one the most recent papers suggesting an approach to analyse the
cell cycle using scRNA-Seq data [35].
It represents an innovative approach based on the use of
the diﬀerence between spliced/unspliced transcripts to estimate the cell cycle pseudotime. Thus,
the idea is similar to RNA velocity approach [133], [60], [61]. The approach is quite diﬀerent from
the other related approaches. On top of the use of RNAVelocity signal, a neural network-based
autoencoder is used to combine the estimates for all genes into a single pseudotime measurement.

Tasks. Deepcycle provides the estimation of the cell cycle pseudotime, cell cycle phase labeleing,
identiﬁcation of cell cycle-associated genes. It does not provide an automated cell cycle removing,
estimating the proliferative/non-proliferative and G0-phase fractions. The paper contains a detailed
discussion of the G0 part, but not in a fully automatic manner as discussed below. The obtained
results for pseudotime and phase estimation for three datasets considered look reasonable and con-
sistent with our conclusions.

Highlights and drawbacks. The most innovative part of the approach is using the spliced/unspliced

transcripts for the analysis of the cell cycle. What is impressive is that one of the considered datasets,
mESC, contains large amount of noise (the cell cycle’s ”hole” is not seen by standard visualizations
and that might be a problem for many approaches). Nevertheless, DeepCycle approach produces
reasonable results in this case. This is a good indication that the approach is robust and potentially
can work with not only the top quality datasets and be more robust than other approaches. More-
over, mESC cell cycle is not of the ”standard” cell cycle pattern, but DeepCycle successfully deals
with it.

The cell cycle phase estimation is done after (and using) pseudotime computation, i.e.

it is a
separate function that takes the pseudotime estimation as an input and computes the cell cycle
phases using the total read counts as another input. In our experience the total read counts is not
always a reliable signal. It is not clear whether the approach would work well for the case of several
cell types, and we see a potential problems here. Because it is not quite clear how consistently the
number of spliced/unspliced transcripts depends on the cell type. The cell cycle phase estimation

48

may also suﬀer in such situations. Moreover, the approach is based on a neural network autoencoder,
an approach which might require ﬁne-tuning before one can get reasonable results. So it is not clear
whether the approach can always work in a fully automated way. In particular, the authors wrote
that they excluded a part of the data before training for one dataset (the G0-like part), which is
reasonable step to perform during the data preprocessing, but diﬃcult to make it fully automated.
The time to train autoencoder especially for large datasets (with tens of thousands of cells) was not
estimated, but we can anticipate that it can be long. A technical, but important drawback is that
for many openly available scRNA-seq datasets one can easily ﬁnd the count matrices, but DeepCycle
requires counts of spliced/unspliced transcripts which are much more rarely available pre-computed.
If the splitted read counts are not available, one has to perform such computations (that are quite
heavy) using the raw sequence reads, and this also can be connected to diﬃculties (including legal
ones) of accessing the data.

To conclude: DeepCycle is an interesting innovative approach to cell cycle analysis: however, it

might be too early to recommend it for the ﬁrst line data treatment.

Appendix A.9. Tricycle

A recent R package Tricycle is probably the package one may consider to try ﬁrst today (after the
baseline Seurat/Scanpy) [82]. It uses straightforward principles, it is fast, robust and can work on
datasets with multiple cell types. The paper oﬀers one the most comprehensive benchmarks currently
available (see ”Supplementary Information , Additional ﬁle 1” [82]) with more than 12 datasets
considered, and compared with the previously developed packages: PECO, Revelio, reCAT, Cyclone,
Seurat. Also ”Tricycle is a locked-down prediction procedure. There are no tuning parameters” that
is quite convenient for the user. Still there are certain drawbacks that we mention below.

Approach. The idea of the method is surprisingly simple: one takes a high quality dataset,
appropriate set of the cell cycle genes and computes the PCA embedding. After that, one re-uses
that pre-trained PCA embedding for all the other datasets. The ”transfer learning” name of the
method is because it uses the transfer learning ideas from the modern machine learning: once pre-
trained PCA embedding is transfered to the new data.
It was shown for about dozen example
datasets that this method produces an appropriate two-dimensional embedding of the data, such
that it has ”cyclic” shape around the origin of coordinates. Thus pseudotime is introduced just as
a polar angle on the plane. The cell cycle phases are typically assigned from the polar angle by the
rule like this: ”approximately relate 0.5pi to be the start of S stage, pi to be the start of G2M stage,
1.5pi to be the middle of M stage, and 1.75pi-0.25pi to be G1/G0 stage”. Alternative cell cycle
phase label estimation is also included in the updated version of Revelio [86] based on the known
key cell cycle genes which are top expressed in the corresponding phases of the cell cycle.

The biological reasoning for the method to be successful is a strong conservation of the cell cycle

across various cell types. This, however, has certain limitations as we discuss below.

Tasks. Tricycle provides an estimation of the pseudotime, cell cycle phase labeling, analysis of
the genes along the cell cycle. It does not provide automatic cell cycle signal removal, detecting the
proliferative/non-proliferative and G0-phase fraction cells.

Highlights and drawbacks. As we discussed above many times - Tricycle is probably the
method to try, due to its simplicity, robustness and speed. Since its positive features has been
already emphasized a lot, let us mention certain drawbacks. First as authors mention by themselves
- the package most probably produce incorrect results on the datasets with no proliferating cells:
”but we caution against using tricycle or other cell-cycle inference methods on a dataset without
cycling cells.” Currently there is no internal control or a warning for a user, which automatically
generated for such situation. The second issue is more subtle: it seems the Tricycle would not work
correctly for the ”fast” cell cycle pattern (subsection 3.3), and moreover in case of the mixture of cell
cycles (subsection 3.4). The biological reason is quite clear: the Tricyle was trained on the example
of the normal cell cycle, while ”fast” cell cycle is diﬀerent and thus the transfer learning principle
fails. More technically the reason is the following: ﬁrst two principal components for the most of
the datasets with normal cell cycle approximately aling with the standard G1/S , G2/M signatures,
but G1/S-G2/M visualization does not work correctly for the ”fast” cell cycle pattern. To give a
concrete example one may look on the Supplementary ﬁgure S20i [82], the example of U2OS cell line
which contains both ”fast” and ”normal” cell cycle pattern (subsection 3.4), while the ﬁgure shows

49

recognizable ”triangle” pattern of the normal cell cycle, and the ”fast” part is shrinked into single
alongated segment, it is the same ”shrinkage” as for G1/S-G2/M plot (see subsection 3.3). The
origin of coordinates is placed in such a way that one cannot assign the pseudotime correctly for the
”fast” part. In our mind the idea to resolve that issue is quite simple: one should train two models,
one for the ”normal” cell cycle, and another one for the ”fast” one. One can ﬁrst determine the
type of the cell cycle, ”fast” or ”normal”, e.g. by computing the correlation between the G1/S and
G2/M signatures scores, and then just apply the appropriate model. What is necessary to check how
robust this approach will be. The third drawback (of limited importance) we have already discussed
in subsection 4.2.2 is connected to the pseudotime inference task. The pseudotime based on the
polar angle is less biologically meaningful than the pseudotime computed as a geodesic distance
along a trajectory, which one can potentially relate to the true physical time.

To conclude: the Tricycle provides quite transparent, robust, fast, well benchmarked approach
and it is worth to consider it. On the other hand as all the other packages it has certain limitations.
Overall the power of the Tricycle is related to the biological conservation of the cell cycle trajectory,
which allows us to transfer pre-trained embeddings to the new datasets. On the other hand, diﬀerent
cell cycle pattern might lead to incorrect results. Hopefully, these limitations might be avoided in
future using several pre-trained models and an appropriate model selection algorithm for choosing
between them.

Appendix A.10. SC1CC, CCPE, Pre-Phaser, CycleX

There are several other packages for analysing cell cycle using single cell data such as SC1CC
[93], CCPE [92], Pre-Phaser [88], CycleX [141], that are probably less well-known. Most of these
packages are not implemented in a standard Python or R framework, which probably restricts their
use. Nevertheless, we will brieﬂy review them here, highlighting some interesting points and ideas.

SC1CC (Single Cell One Cell Cycle analysis tool) provides a website (https://sc1.engr.uconn.edu/

) for the analysis of the single cell data in general and cell cycle in particular [93]. The methods rely
on the ”novel technique for ordering cells based on hierarchical clustering and optimal leaf ordering,
and a new GSS metric based on serial correlation for assessing gene expression change smoothness
along a reconstructed cell order as well as diﬀerentiating between cycling and non-cycling groups of
cells”. More details: ”Since the cell cycle is typically divided into 6 distinct phases (G1, G1/S, S,
G2, G2/M, and M, see, e.g., [142]), by default SC1CC attempts to extract up to 7 clusters from the
hierarchical clustering dendogram corresponding to the 6 cell cycle phases plus at least one potential
cluster of non-cycling cells – with a minimum cluster size threshold of 25 cells.” And ”Finally, to
generate an order of cells consistent to their position along the cell cycle, SC1CC reorders the leaves
of the hierarchical clustering dendogram (corresponding to the individual cells) by using the Optimal
Leaf Ordering (OLO) algorithm”. The package has been tested on 7 datasets and compared with
well-known packages ccRemover, Cyclone, reCAT. Benchmarking the cell cycle signal removal algo-
rithm (see Fig.S1 [93]) represents certain interest: one can see that ccRemover works not as expected
(similar conclusion as in CCPE paper - see below). In general ccRemover seems to ”overcorrect” the
cell cycle signal. Figure 3 in [93] shows the reCAT is not working as expected. SC1CC is one the
rare packages which is able to split proliferating and non-proliferating cells: the example of PMBC
datasets demonstrates its correct work. As a kind of drawback it seems that the implementation is
not provided as standalone package, neither the source code of the web-site can be found on github.
Also the standard G1/S-G2/M visualization is not provided, which is inconvenient, because it does
not allow to visually control the quality of the obtained results.

CCPE (cell cycle pseudotime estimation) [92] is a recent package using the idea is to approximate
the data by a 3 dimensional helix with two coordinates proportional to sin and cos functions of an
angle parameter, and the third one is a linear function of the angle (see equations 2 in [92]). A
linear embedding from the higher dimensional space to ﬁt the data is searched (equation 3 [92]).
The package is tested on 3 simulated and 5 real datasets, and compared with well-known packages
Cyclum, ccRemover, Seurat, reCAT. It can estimate pseudotime, cell cycle phase labels, remove the
cell cycle eﬀect. The benchmarking of the cell cycle signal removing (see Supplementary Figure S10
[92]) is interesting: one can see the diﬃculties of this task in case of application of Seurat, Cyclum and
ccRemover that work incorrectly. As a kind of a drawback let us mention its mixed implementation

50

including Matlab, R and Python, which probably restricts its usage. Also comparison with the
standard G1/S-G2/M plot is not present.

Pre-Phaser tool for the cell cycle analysis exploits a set of interesting ideas [88]. One of the
points which probably should be kept in mind by everybody who is developing cell cycle scRNA-seq
tools, is the following: take an scRNA-seq dataset, compute cell cycle phase labels, then take only
a subpart of the dataset corresponding to, for example, ”G1” and again use the tool only on that
part of the dataset. The expected outcome should be to get ”G1” label for all the cells. But it is
not the case for baseline Seurat/Scanpy, see Figure 1 in [88] . Actually, it is a typical problem for
many cell cycle analysis packages. One could argue that taking a subpart of a dataset is an artiﬁcial
situation, but it might play a role in the analysis of the cell cycle arrest (e.g., in ”G1”-phase), and
an ideal method should be able to deal with it. Of note, such an issue is not a problem for the
”transfer learning” approaches like Tricycle [82]. The Pre-Phaser suggests that we can take into
account also bulk microarray studies like [48], [45], etc. which are provided with timestamps, and
the cell cycle phase labels. The idea of the Pre-Phaser is the following: ”we can compare its proﬁle
to the best-matching microarray (or other assay such as RNA-seq) time course data series points, to
ﬁnd the precise angle position. Since we want to use several best-matching time points to zero into
the precise position, we employ nearest neighbor methods”. That is an interesting idea to compare
modern scRNA-seq studies with the seminal ones [45], [46], [48], [47], which have the actual physical
time-stamps by their construction. So the comparison might give a clue to relate ”pseudotime” with
the actual physical cell cycle time. As a kind of drawback let us mention its mixed implementation
in C++ and Python, not availability of an easy and standard intstallation procedure.

CycleX [141] uses Gaussian Process Latent Variable Model GPLVM as a computational core for
the pseudotime estimation. It is implemented in R, with a small Python fragment. Only one dataset
with only 217 cells was considered. Cell cycle phase labels were estimated by the two methods: ﬁrst
by Cyclone [89], and the second with the help of the gene sets speciﬁc to ﬁve cell cycle phases (G1/S,
S, G2/M, M, M/G1) taken from [45] and reﬁned by Macosko (2015) [87].

51

Figure 1: Five major tasks in analyzing the dynamics of the cell cycle from the single cell data. Task 1. Assign the cell
cycle (sub)phases. Task 2. Quantifty the cell cycle (pseudo)time. Task 3. Identify and analyse cell cycle-associated
genes. Task 4. Identify and analyse non-proliferating cells (G0). (Figure from [25].) Task 5. Remove the cell cycle
eﬀect. (Figure from Scanpy cell cycle tutorial [26].)

52

Figure 2: Three patterns of the cell cycle tjajectory seen at the level of transcriptome. Three ways of visualization.
Panels in the ﬁrst column correspond to non-proliferating cells (PMBC dataset); the second column corresponds to
proliferating cells with the ”standard” cell cycle pattern (CHLA9 cell line); the third column corresponds to the ”fast”
cell cycle pattern (TC71 cell line), which is typical for ESC, iPSC, cancer cells with TP53 mutation. Panels in the
ﬁrst row correspond to G1/S-G2/M visualisation; the second row to the PCA visualization is restricted to cell cycle
genes from the Tirosh’s set; the third row corresponds to the special gene signature designed to visualize the fast cell
cycle pattern (see section 3.3). The red arrows mark the approximate position of the mitosis end. Color maps the
total number of read counts per cell: a trend with maximum at mitosis is clear. Each cell is visualized with an arrow
representing the RNA-velocity vector, its direction and amplitude.

53

Figure 3: The ”standard” cell cycle trajectory, its interpretation and the toy model. A. Well-known plot of cyclins
activities. B. The G1/S-G2/M plot typical for normal proliferating cells - ”triangle” pattern. C. Toy model for cyclin
activities. D. G1/S-G2/M plot corresponding to the toy model.

54

Figure 4: The ”fast” cell cycle: seesaw pattern for G1/S vs G2/M genes, relation to TP53. A. Pictorial illustration
for the fast cell cycle ”seasaw” pattern. Expression of G1/S genes goes up, when G2/M goes down and vice versa.
B. Pseudotime proﬁle of the key cyclins for the fast cell cycle. C. The correlation of G1/S vs G2/M scores shows
signiﬁcant dependence on the fact of TP53 mutation for cell lines in Pan-cancer cell line heterogeneity Study [13].
55

Figure 5: Mixture of normal and ”fast” cell cycles for U2OS cell line proﬁled using scRNA-Seq. The data points are
colored by FUCCI phase labels. A. G1/S-G2/M plot B. PCA plot from cell cycle genes of the Turosh’s gene sets
C. The fast signature plot D. PCA computed taking into account only the ”fast” part of the trajectory E. PCA
components 1,3 computd in the space of the cell cycle genes

56

Figure 6: Gallery of cell cycle trajectory analysis examples. A-F. Normal cell cycle G. Mixture of the fast and normal
cell cycles H-K. ”Fast” cell cycle; K1-K4 demonstrates that denoising is sometimes required to detect the ”cyclic”
pattern in the data point cloud

57

Figure 7: Not quite correct cell cycle assignment by Scanpy. A. Normal (”triangle”) cell cycle pattern CHLA10 cell
line [85]. A1 - Scanpy phases - G1 is underestimated. A2 - compare with behaviour of counts. B. NIH3T3 cell line -
most cells are non-proliferating - not consistent with Scanpy labels. C. U5NPC cells [72] C1,C2 - full data; C3,C4 -
ﬁltered mainly G0-G1 - not consistent with Scanpy labels. D. TC71 cells [85] - fast cell cycle - Scanpy G1 label has
similar positions as S label along seen cycle shape on D2 plot. E. U2OS - ”fast” part only - Scanpy labels do not
correspond to FUCCI labels, G1 is absent - typical issue with Scanpy for ”fast” cell cycle pattern.

58

Figure 8: The segmented structure of the cell cycle trajectory. The genes associated with each segment are shown
using a heatmap. A. PCA plot. Segmentation of the the cell cycle trajectory by a piecewise-smooth approximation
via ElPiGraph [42]. B. G1/S-G2/M plot. Same segments as in A) are shown. C. Key representatives of the genes
speciﬁcally expressed along each segment. D. Heatmap of gene (horizontal) expression vs. cells (vertical), for the
cells arranged accordingly to the value of the cell cycle pseudotime.

59

