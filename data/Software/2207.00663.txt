2
2
0
2

l
u
J

1

]

O
C

.
t
a
t
s
[

1
v
3
6
6
0
0
.
7
0
2
2
:
v
i
X
r
a

Smooth Pycnophylactic Interpolation Produced
by Density-Equalising Map Projections

Michael T. Gastner∗, Nihal Z. Miaji and Adi Singhania

Yale-NUS College, 16 College Avenue West, #01-220, Singapore 138527
∗Corresponding author: michael.gastner@yale-nus.edu.sg

Abstract. A large amount of quantitative geospatial data are collected
and aggregated in discrete enumeration units (e.g. countries or states).
Smooth pycnophylactic interpolation aims to ﬁnd a smooth, nonnega-
tive function such that the area integral over each enumeration unit is
equal to the aggregated data. Conventionally, smooth pycnophylactic in-
terpolation is achieved by a cellular automaton algorithm that converts
a piecewise constant function into an approximately smooth function
deﬁned on a grid of coordinates on an equal-area map. An alternative
approach, proposed by Tobler in 1976, is to construct a density-equalising
map projection in which areas of enumeration units are proportional to
the aggregated data. A pycnophylactic interpolation can be obtained
from the Jacobian of this projection. Here, we describe a software imple-
mentation of this method. Although solutions are not necessarily optimal
in terms of predeﬁned quantitative measures of smoothness, our method
is computationally eﬃcient and can potentially be used in tandem with
other methods to accelerate convergence towards an optimal solution.

Keywords: spatial interpolation · pycnophylactic density · contiguous
cartogram · ﬂow-based algorithm.

1

Introduction

Quantitative geospatial data are often available only as aggregated numbers
for discrete enumeration units. For example, national statistics agencies usually
report the number of individuals living in each administrative division of a coun-
try (e.g. a census block in the United States and an Output Area in the United
Kingdom) but do not release information about each individual’s exact location.
Because it is impossible to infer exact locations, the aggregated data are often
converted into a density function (in units of people per square kilometre) that
assigns a real-valued number to each point belonging to the continuum of coor-
dinates in the country. Let us assume that a country is divided into enumeration
units U1, . . . , Un. We denote the population count in Ui by Pi and the area by
Ai. Furthermore, we assume that coordinates have already been converted from
longitude and latitude to Cartesian coordinates (x, y) using an equal-area map
projection. A bounded, nonnegative function ρ(x, y) is referred to as a pycno-
phylactic density (from the Greek words πυκνός, meaning ‘dense’, and φύλαξ,

 
 
 
 
 
 
2

Gastner, Miaji and Singhania

meaning ‘guard’) if the aggregate density in Ui is equal to the observed popula-
tion Pi:

(cid:90) (cid:90)

Ui

ρ(x, y) dx dy = Pi

for i = 1, . . . , n

(1)

The variable Pi does not need to be population in a narrow sense; it may also
refer to other data that are only available in aggregated form (e.g. gross regional
product or CO2 emissions by enumeration unit). Henceforth, we use the term
‘population’ for any type of nonnegative, spatially extensive aggregated data.

An example of a pycnophylactic density is the following piecewise constant

function:

where

ρplateau(x, y) =

(cid:26) Pi/Ai − ¯ρ if (x, y) ∈ Ui,
if (x, y) /∈ (cid:83)

0

i Ui,

¯ρ =

(cid:80)
(cid:80)

i Pi
i Ai

(2)

(3)

is the spatially averaged density. In principle, the density outside all enumer-
ation units can be chosen arbitrarily because it cannot be inferred from the
available data. However, it turns out to be mathematically convenient to impose
the condition

∀(x, y) : (x, y) /∈

Ui → ρ(x, y) = ¯ρ,

(4)

(cid:91)

i

which can be statistically interpreted as imputation of missing data by sub-
stituting the mean. Henceforth, we apply equation (4) as a condition on any
pycnophylactic density. Figure 1(a) illustrates the deﬁnition of ρplateau, using
COVID-19 cases in Croatia between 25 February 2020 and 24 March 2022 (Croa-
tian Institute of Public Health 2022). In this example, the density is obtained
by dividing the number of COVID-19 cases in a county by the county’s area.
Although ρplateau is easily calculated, piecewise constant densities are unsuitable
statistical models for COVID-19 cases and many other geospatial data because
of the discontinuities at the boundaries of enumeration units. As pointed out
by Openshaw (1984): ‘The areal units used to report census data (enumera-
tion districts, census tracts, wards, local government units) have no natural or
meaningful geographical identity.’ Thus, to reduce the artefacts introduced by
arbitrary boundaries of enumeration units, it is generally preferable to work with
a smooth density, as illustrated in Figure 1(b), instead of ρplateau, whose shape
strongly depends on the location of the boundaries.

Tobler (1979b) introduced a cellular automaton algorithm for generating
smooth pycnophylactic densities, which approximates the continuum of space
with a ﬁne-grained square grid. Each point (x, y) on the grid is initially assigned
the density ρplateau(x, y). Thereafter, the density associated with each grid point
is adjusted so that the absolute value of the discrete Laplacian is reduced, sub-
ject to the constraints that the sum of densities in each enumeration unit is
conserved and density remains nonnegative. This adjustment is iterated until

Smooth Pycnophylactic Interpolation

3

Fig. 1. Two pycnophylactic densities that represent the distribution of COVID-19 cases
in Croatia between 25 February 2020 and 24 March 2022. (a) Piecewise constant den-
sity. (b) Smooth density obtained from a density-equalising map projection.

the changes are below a small threshold value or until the number of iterations
reaches a predeﬁned limit.

Tobler’s (1979b) algorithm has become the standard technique for smooth py-
cnophylactic interpolation. The algorithm has been implemented in R (Brunsdon
2014) and Python (PySAL Developers 2021). For users of Geographic Informa-
tion Systems software, the algorithm is also available via extensions of ArcGIS
(Qiu, Zhang and Zhou 2012) and GRASS (Metz 2013). A variant of Tobler’s
(1979b) algorithm was developed by Rase (2001), in which the regular square
grid is replaced by an irregular triangular network. However, the algorithm by
Rase (2001) and its later reﬁnement by the same author (Rase 2007) keep the
essential features of Tobler’s (1979b) algorithm: iterative local averaging and
subsequent redistribution of density diﬀerences to enforce the pycnophylactic
condition of equation (1). Despite the widespread use of Tobler’s (1979b) algo-
rithm, it was not the ﬁrst method proposed by him for smooth pycnophylactic
interpolation. In an earlier publication, Tobler (1976) described an alternative
approach in which the boundaries of enumeration units are transformed into an
area cartogram (i.e. a map in which all enumeration units are depicted with an
area proportional to their population). Tobler’s (1976) proposed method requires
the area cartogram to be contiguous; that is, neighbouring enumeration units
on the surface of the earth must be neighbours in the cartogram. As noted by
Tobler (2017), contiguous cartograms are closely related to density-equalising
map projections. In this study, we brieﬂy review the connections between con-
tiguous cartograms, density-equalising map projections and smooth pycnophy-
lactic interpolation. Thereafter, we explain how to achieve smooth pycnophylac-
tic interpolation using a recently developed algorithm that generates contiguous
cartograms.

4

Gastner, Miaji and Singhania

2 Relationship between pycnophylactic interpolation and

density-equalising map projections

To construct a contiguous cartogram, the boundaries of enumeration units are
modelled as polylines. We denote the vertices of the polylines on an equal-
area map projection by (v1x, v1y), (v2x, v2y), . . . The vertices are then shifted to
new positions (w1x, w1y), (w2x, w2y), . . . such that the regions demarcated by the
transformed boundaries have an area proportional to the population of the cor-
responding enumeration units. This transformation can be regarded as the result
of a map projection t = (tx, ty) that satisﬁes the conditions tx (vjx, vjy) = wjx
and ty (vjx, vjy) = wjy for all j = 1, 2, . . . A map projection with this property
can be obtained, for example, by solving the following equation:

det Jt(x, y) =

ρ(x, y)
¯ρ

,

(5)

where det Jt = (∂tx/∂x)(∂ty/∂y) − (∂ty/∂x)(∂tx/∂y) is the Jacobian determi-
nant of t, ρ(x, y) is a pycnophylactic density [i.e. it satisﬁes equation (1)] and ¯ρ
is its spatial average given by equation (3). The quantity

ρres(x, y) = ρ(x, y) − ¯ρ det Jt(x, y)

(6)

can then be interpreted as ‘residual density’ (i.e. the diﬀerence from the mean
density that remains unexplained by the projection t), and the objective is to
ﬁnd a solution t such that ρres(x, y) = 0 for all (x, y).

Contiguous cartograms and density-equalising map projections are related to
each other in two ways. First, if ρ and (vjx, vjy) are known, it is possible to solve
equation (5) to obtain t(x, y) and then obtain the polyline vertices (wjx, wjy) of
a contiguous cartogram by applying t(x, y) to (vjx, vjy) for all j = 1, 2, . . . Sec-
ond, if (vjx, vjy) and (wjx, wjy) are known, it is possible to construct a density-
equalising map projection t(x, y) with the property t (vjx, vjy) = (wjx, wjy) and
then obtain a pycnophylactic density by inverting equation (5):

ρ(x, y) = ¯ρ det Jt(x, y).

(7)

In both cases, solutions are not unique. If ρ (x, y) is given, equation (5) al-
lows inﬁnitely many solutions t(x, y) because the number of constraints implicit
in equation (5) is 1, which is less than the number of dimensions (i.e. 2) of a
geographic map. Conversely, if all (wjx, wjy) are given, there are inﬁnitely many
ways to extend a function t with the property t (vjx, vjy) = (wjx, wjy) to the
entire mapping domain. One could impose additional constraints on t(x, y) to
make the solution unique. At ﬁrst glance, an obvious constraint would be to de-
mand that t(x, y) be conformal. However, conformality adds two constraints to
the problem in the form of the Cauchy–Riemann equations; hence, together with
the constraint of satisfying equation (5), the problem of ﬁnding t(x, y) would be
overdetermined (Gastner and Newman 2004). Instead of demanding strict con-
formality, Tobler (1973) proposed that deviations from conformality should, at

Smooth Pycnophylactic Interpolation

5

least, be minimised when constructing cartograms. However, he reported that
a computer program, designed to ﬁnd nearly conformal density-equalising map
projections, failed to converge. Furthermore, it is not evident that a conformal
map projection t(x, y) necessarily generates desirable properties for a pycno-
phylactic density ρ(x, y), calculated using equation (7). Therefore, we describe
a method that is guaranteed to ﬁnd a density-equalising map projection t(x, y)
and a smooth pycnophylactic density ρ(x, y), even if neither t(x, y) nor ρ(x, y)
satisfy predeﬁned criteria of optimality.

3 Obtaining a pycnophylactic interpolation from a

density-equalising map projection

Gastner, Seguy and More (2018) introduced a ﬂow-based algorithm that gen-
erates density-equalising map projections. In this algorithm, ρ(x, y) in equation
(5) is treated as the initial density of a ﬂuid. The algorithm proceeds by con-
structing a velocity ﬁeld that conserves the mass of the ﬂuid, is free of vortices
and equilibrates the density over time. By integrating the velocity, the algorithm
determines the ﬁnal displacement t(x, y) of any arbitrary point that is initially
at position (x, y). It can be shown that t(x, y) satisﬁes equation (5); thus, t(x, y)
is a density-equalising map projection.

For the boundary conditions chosen by Gastner, Seguy and More (2018),
t(x, y) can be calculated eﬃciently by applying a Fourier transform to the resid-
ual density ρres(x, y). Suppose that ρ(x, y) is initially chosen to be the piecewise
constant function ρplateau given by equation (2) on the unprojected map, where
det Jt = 1 ∀(x, y). Hence, the initial residual density can be expressed as follows:

ρres,1(x, y) =

(cid:40)

Pi/Ai − ¯ρ
0

if (x, y) ∈ Ui
if (x, y) /∈ (cid:83)

i Ui

,

(8)

where ¯ρ is the spatial average, deﬁned in equation (3). Figure 2(a) shows ρres,1(x, y),
using COVID-19 cases in Croatia as an example. Because ρres,1(x, y) has dis-
continuities at the boundaries of enumeration units, the Fourier transform of
ρres,1(x, y) exhibits the Gibbs phenomenon (Carslaw 1925); that is, the approx-
imation of ρres,1(x, y) by a ﬁnite Fourier series exhibits large oscillations at the
boundaries. These oscillations can cause numerical artefacts in subsequent calcu-
lations. To circumvent this problem, Gastner’s (2022) computer implementation
of the ﬂow-based algorithm removes discontinuities from ρres,1(x, y) by applying
Gaussian smoothing as a low-pass ﬁlter. Figure 2(b) illustrates the eﬀect of Gaus-
sian smoothing. The density after Gaussian smoothing can be calculated rapidly
in Fourier space. However, Gaussian smoothing tends to shift density towards
sparsely populated regions; thus, it does not produce a pycnophylactic density.
Consequently, the calculated map projection t1(x, y) is not density-equalising.
Nevertheless, by projecting the boundaries, densely populated enumeration units
tend to expand, and sparsely populated enumeration units tend to shrink, as

6

Gastner, Miaji and Singhania

shown by the county borders in Figure 2(c). We note that the algorithm replen-
ishes the density that leaks out of the interior of Croatia in Figure 2(b) before
calculating the residual density in Figure 2(c).

To improve density-equalisation, the computer program by Gastner (2022)
inserts the boundaries obtained from the initial run of the ﬂow-based algorithm
as input into a second run; that is, a new piecewise constant residual density
ρres,2(x, y) is constructed; Gaussian smoothing is applied to ρres,2(x, y), as in-
dicated in Figure 2(d); and a new projection t2(x, y) is calculated. The newly
projected boundaries, shown in Figure 2(e), can be reinserted into the algorithm,
which again calculates a piecewise constant residual density ρres,3(x, y) before
applying Gaussian smoothing, as shown in Figure 2(f). With each iteration k,
discontinuities of ρres,k(x, y) tend to become smaller. Thus, the width of the
Gaussian kernel that is used for smoothing can be made smaller after each it-
eration until the width becomes indistinguishable from zero. The colour bars in
Figure 2 show that the residual density converges towards zero as the procedure
is repeated.

Denoting the projections calculated in the k-th iteration of the ﬂow-based
algorithm by tk(x, y), a solution to equation (2) can be obtained by the function
composition t(x, y) = tl ◦ tl−1 ◦ . . . ◦ t1(x, y), provided that l is suﬃciently large.
In practice, values of l between 5 and 20 are usually suﬃcient to make the areas
of all enumeration units on the cartogram accurate to within 1%. The composed
projection t(x, y) is diﬀerentiable at the boundaries of the enumeration units
because each projection tk(x, y) is the result of Gaussian convolution and, hence,
diﬀerentiable (Gwosdek et al. 2012). The computer program approximates the
Jacobian determinant det Jt as the factor by which the areas of cells in a ﬁne-
grained square grid increase (det Jt > 1) or decrease (det Jt < 1) because of
t(x, y). In the case of Croatia, the program uses a grid with 512 horizontal and
512 vertical lines. Afterwards, equation (7) is used to solve for ρ(x, y), which
results in a ﬁnite-size approximation of a diﬀerentiable pycnophylactic density.
Figure 1(b) shows the result for COVID-19 cases in Croatia.

4 Conclusion

The program by Gastner (2022) is written in C++ and optimised for compu-
tational speed. For the map shown in Figure 1(b), the calculation needed only
an average time of 5.1 seconds for a test run on a MacBook Pro laptop with a
2.7 GHz Quad-Core Intel i7 processor. We acknowledge that a comparison with
Tobler’s (1979b) algorithm would require careful benchmarking of run times,
which we still need to implement. However, our preliminary studies suggest that
the method described above requires fewer iterations than Tobler’s (1979b) al-
gorithm. This observation is explained by the fact that, in the cartogram-based
algorithm outlined above, the density associated with any point in space already
changes after the ﬁrst iteration, even for points far from any boundary, because
of the signiﬁcant width of the initial Gaussian kernel. By contrast, in Tobler’s
(1979a) algorithm, a grid point that is m grid spacings away from the nearest

Smooth Pycnophylactic Interpolation

7

Fig. 2. Steps in the calculation of a pycnophylactic density of COVID-19 cases in
Croatia. Starting from an equal-area map in (a), a contiguous cartogram is iteratively
calculated in (b) to (f). Panels (b),(d) and (f) show the residual density after Gaussian
smoothing of the densities shown in (a), (c) and (e), respectively.

 (a) (b) (c) (e) (d) (f)ResidualDensity (km  ) –28

Gastner, Miaji and Singhania

boundary requires O(m) iterations until its density is aﬀected by a neighbouring
enumeration unit. This advantage of the cartogram-based algorithm is partly
oﬀset by the time needed to calculate Fourier transforms. However, we hypothe-
sise that the substantial reduction in the number of overall iterations more than
compensates for the cost of the Fourier transforms. As Tobler 1979a himself
noted, ‘The use of a fast Fourier transform . . . should be investigated to hasten
convergence of the algorithm.’

We also acknowledge that pycnophylactic densities generated by the algo-
rithm outlined above do not optimise any predeﬁned criterion for smoothness,
whereas Tobler’s (1979b) algorithm directly minimises

(cid:90) (cid:90) (cid:104)(cid:0)∂2ρ/∂x2 + ∂2ρ/∂y2(cid:1)2(cid:105)

dx dy.

However, the density ρ obtained from our algorithm could be used as input to
Tobler’s (1979b) algorithm, thereby combining the beneﬁts of both methods.
The potential advantages of combining the algorithms will be investigated in
future work.

5 Acknowledgements

This work was supported by the Singapore Ministry of Education (AcRF Tier
1 Grant IG18PRB104, R-607-000-401-114), a Yale-NUS College research award
(through grant number A-0000177-00-00), and the Yale-NUS Summer Research
Programme. We would like to thank Editage (www.editage.com) for English
language editing. We are grateful to Adam Tonks and two anonymous reviewers
for their insightful comments and suggestions.

6 Conﬂicts of interest

All authors declare that they have no conﬂicts of interest.

References

Brunsdon, C. (2014). pycno. Accessed 6 Feb 2022. url: https://cran.r-project.

org/package=pycno.

Carslaw, H. S. (1925). “Gibbs’ Phenomenon in Fourier’s Integrals”. In: Nature

116.2913, pp. 312–313. doi: 10.1038/116312c0.

Croatian Institute of Public Health (2022). Službena stranica Vlade za pravodobne
i točne informacije o koronavirusu. Accessed 24 Mar 2022. url: https : / /
koronavirus.hr/.

Gastner, M. T. and M. E. J. Newman (2004). “Diﬀusion-Based Method for Pro-
ducing Density-Equalizing Maps”. In: Proceedings of the National Academy
of Sciences 101.20, pp. 7499–7504. doi: 10.1073/pnas.0400280101.

Smooth Pycnophylactic Interpolation

9

Gastner, M. T., V. Seguy and P. More (2018). “Fast Flow-Based Algorithm for
Creating Density-Equalizing Map Projections”. In: Proceedings of the Na-
tional Academy of Sciences 115.10, pp. E2156–E2164. doi: 10.1073/pnas.
1712674115.

Gastner, M. T. (2022). mgastner/cartogram-cpp: C++ Cartogram Generator.

Version v0.0.0-alpha. doi: 10.5281/zenodo.6346715.

Gwosdek, P. et al. (2012). “Theoretical Foundations of Gaussian Convolution by
Extended Box Filtering”. In: Scale Space and Variational Methods in Com-
puter Vision. Ed. by A. M. Bruckstein et al. Lecture Notes in Computer
Science. Berlin: Springer, pp. 447–458. doi: 10.1007/978-3-642-24785-9_38.
Metz, M. (2013). v.surf.mass - GRASS GIS manual. Accessed 6 Feb 2022. url:

https://grass.osgeo.org/grass78/manuals/addons/v.surf.mass.html.

Openshaw, S. (1984). “Ecological Fallacies and the Analysis of Areal Census
Data”. In: Environment and Planning A: Economy and Space 16.1, pp. 17–
31. doi: 10.1068/a160017.

PySAL Developers (2021). Tobler. Accessed 6 Feb 2022. url: https://github.

com/pysal/tobler.

Qiu, F., C. Zhang and Y. Zhou (2012). “The Development of an Areal Interpola-
tion ArcGIS Extension and a Comparative Study”. In: GIScience & Remote
Sensing 49.5, pp. 644–663. doi: 10.2747/1548-1603.49.5.644.

Rase, W.-D. (2001). “Volume-Preserving Interpolation of a Smooth Surface from
Polygon-Related Data”. In: Journal of Geographical Systems 3.2, pp. 199–213.
doi: 10.1007/PL00011475.

— (2007). “Volumenerhaltende Interpolation aus polygonbezogenen Daten in
einem unregelmäßigen Dreiecksnetz (TIN)”. In: Angewandte Geoinformatik.
Beiträge zum 19. AGIT-Symposium Salzburg. Ed. by J. Strobl, T. Blaschke
and G. Griesebner. Heidelberg: Wichmann-Verlag, pp. 595–604.

Tobler, W. R. (1973). “A Continuous Transformation Useful for Districting”.
In: Annals of the New York Academy of Sciences 219.1, pp. 215–220. doi:
10.1111/j.1749-6632.1973.tb41401.x.

— (1976). “Cartograms and Cartosplines”. In: Proceedings of the 1976 Workshop
on Automated Cartography and Epidemiology. Ed. by U.S. Department of
Health, Education, and Welfare. Arlington (Virginia), USA, pp. 53–58.
— (1979a). “Rejoinder”. In: Journal of the American Statistical Association

74.367, pp. 535–536. doi: 10.1080/01621459.1979.10481649.

— (1979b). “Smooth Pycnophylactic Interpolation for Geographical Regions”.
In: Journal of the American Statistical Association 74.367, pp. 519–530. doi:
10.1080/01621459.1979.10481647.

— (2017). “Cartograms as Map Projections”. In: Choosing a Map Projection. Ed.
by M. Lapaine and E. L. Usery. Cham: Springer International Publishing,
pp. 149–159. doi: 10.1007/978-3-319-51835-0_5.

