2
2
0
2

p
e
S
4
1

]
E
S
.
s
c
[

1
v
0
7
5
6
0
.
9
0
2
2
:
v
i
X
r
a

The Impact of Model Transformation Language Features on
Quality Properties of MTLs: A Study Protocol

Stefan Höppner
Ulm University
Institute of Software Engineering and Programming
Languages
Ulm, Germany
stefan.hoeppner@uni-ulm.de

Matthias Tichy
Ulm University
Institute of Software Engineering and Programming
Languages
Ulm, Germany
matthias.tichy@uni-ulm.de

ABSTRACT
Background: Dedicated model transformation languages are claimed
to provide many benefits over the use of general purpose languages
for developing model transformations. However, the actual advan-
tages and disadvantages associated with the use of model transfor-
mation languages are poorly understood empirically. There is little
knowledge over what advantages and disadvantages hold in which
cases and where they originate from. In a prior interview study,
we elicited expert opinions on what advantages result from what
factors surrounding model transformation languages as well as a
number of moderating factors that moderate the influence.
Objective: We aim to quantitatively asses the interview results to
confirm or reject the influences and moderation effects posed by
different factors and to gain insights into how valuable different
factors are to the discussion.
Method: We gather data on the factors and quality attributes using
an online survey. To analyse the data and examine the hypothesised
influences and moderations we use universal structure modelling
based on a structural equation model. Universal structure mod-
elling will produce significance values and path coefficients for
each hypothesised and modelled interdependence between factors
and quality attributes that can be used to confirm or reject correla-
tion and to weigh the strength of influence present.
Limitations: Due to the complexity and abstractness of the con-
cepts under investigation, a measurement via reflective or formative
indicators is not possible. Instead participants are queried about
their assessment of concepts through a single item question. We
further assume that positive and negative effects of a feature are
more prominent if the feature is used more frequently.

CCS CONCEPTS
• General and reference → Empirical studies; • Software and
its engineering → Software functional properties.

KEYWORDS
model transformation language, functional properties, survey, struc-
tural equation modelling

ESEM ’22, September 19–23, 2022, Helsinki, Finland
© 2022 Association for Computing Machinery.
This is the author’s version of the work. It is posted here for your personal use. Not for
redistribution. The definitive Version of Record was published in ESEM ’22: ACM/IEEE
International Symposium on Empirical Software Engineering and Measurement, Septem-
ber 19–23, 2022 Helsinki, Finland.

ACM Reference Format:
Stefan Höppner and Matthias Tichy. 2022. The Impact of Model Transfor-
mation Language Features on Quality Properties of MTLs: A Study Protocol.
In ESEM ’22: ACM/IEEE International Symposium on Empirical Software En-
gineering and Measurement, September 19–23, 2022 Helsinki, Finland. ACM,
New York, NY, USA, 11 pages.

1 INTRODUCTION
Model transformations lie at the centre of the model driven engi-
neering (MDE) approach [26]. They are used to manipulate and
evolve models [22], to derive artefacts like source code or docu-
mentation, to simulate system behaviour and to analyse system
aspects [25].

To aid development of model transformations numerous model
transformation languages (MTLs) of different form, aim and syn-
tax [17] have been proposed. Using MTLs for the development of
model transformations is claimed to have many benefits compared
to using general purpose languages (GPLs) [11]. Claims include,
but are not limited to, better comprehensibility, productivity and
maintainability as well as easier development in general [11]. The
emergence of such claims can, in part, be attributed to the advan-
tages that are ascribed to domain specific languages (DSLs) [13, 16].
Whether these advantages exist and particularly where they
arise from is, however, still uncertain, as discussed in our prior
systematic literature review [11]. This makes it hard to convinc-
ingly argue MTLs over GPLs. Especially considering recent GPL
advancements, like Java Streams, C# LINQ or advanced pattern
matching syntax, that help reduce boilerplate code [15] and have
put them back into the discussion for transformation development.
A recent community discussion held at the 12th edition for the In-
ternational Conference on Model Transformations (ICMT’19) even
acknowledges GPLs as suitable contenders [5]. The few empirical
studies that exist on this topic also provide mixed and limited re-
sults. Hebig et al. found no direct advantage for the development of
transformations, but they did find an advantage for the comprehen-
sibility of the code in their limited setup [12]. A study conducted
by us, on the other hand, found that certain use cases favour the
use of MTLs, while in others the versatility of GPLs may be more
appropriate [15]. Overall there is a knowledge gap pertaining to
what the exact benefits are, how strong their impact is, where they
originate from and when they are valid.

To alleviate this gap we developed and executed an interview
study with 56 experts from research and industry to discuss the
topic of advantages and disadvantages [14]. During the interviews
participants were queried about their views on the advantages and

 
 
 
 
 
 
ESEM ’22, September 19–23, 2022, Helsinki, Finland

S. Höppner and M. Tichy

disadvantages of model transformation languages and the origins
thereof. Results from the interviews point towards three main-areas,
namely general purpose languages capabilities, model transformation
languages capabilities and tooling, relevant to the discussion. Inter-
viewees provided information on which claimed MTL properties
are influenced by which sub-areas and why. Interview participants
also provided us with insights on moderation effects on these inter-
dependencies caused by different use-cases, skill & experience levels
of users and choice of transformation language.

The results of our interview study are, however, purely quali-
tative and are therefore limited in their informative value. They
do not provide indication on the strength of influence between the
involved variables. Moreover, they are based on the views of a lim-
ited number of participants. It is not clear if the extracted influence
relationships are complete or whether they withstand community
scrutiny. As a result, they only represent an initial data set that
requires a quantitative and detailed analysis.

In this registered report, we detail a study protocol to confirm
or deny the interdependencies hypothesised from our interview
results. We further intend to quantify the influence strengths and to
gain insights into moderation effects suggested during the interviews.
Lastly, we aim to explore whether there are interdependencies
between factors and quality properties that were missed by our
interviewees.

This study will focus on the effects of MTL capabilities (namely
Bidirectionality, Incrementality, Mappings, Model Management,
Model Navigation, Model Traversal, Pattern Matching, Reuse Mech-
anisms and Traceability) on MTL properties (namely Comprehensi-
bility, Ease of Writing, Expressiveness, Productivity, Maintainability
and Reusability and Tool Support) in the context of bidirectional
or incremental use-cases, language choice, language skills, experi-
ence, meta-model sanity, model size, meta-model size, and semantic
gap between input and output. Further studies can follow the same
approach and focus on different areas. Short descriptions for all
MTL capabilities and MTL properties can be found in Table 2 & ??
in Appendix A. More thorough explanations can be found in our
previous works [11, 14].

We plan to use an online survey to query users of MTLs from
research and industry about the amount they use different language
features, their perception of qualitative properties of their trans-
formations and demographic data surrounding use-case, skills &
experience and used languages. The responses are used as input
for universal structure modelling (USM) [4] based on a structural
equation model developed from the interview responses. USM is a
structural equation modelling approach designed on the premise
that purely theory-testing approaches can not satisfactorily cope
with the intricacies of many modelled issues [4]. It is used to esti-
mate the influence weights between all variables within the struc-
tural equation model which can be used to gain insights about the
influence and moderation strengths and thus help confirm or reject
the hypothesised influences. It can also help discover interdepen-
dencies between variables of the model that have not been actively
modelled, to aid in developing a more complete model.

USM is chosen over its structural equation modelling alterna-
tives due to it being able to better handle uncertainty about the

completeness of the hypothesis system under investigation, it hav-
ing more capabilities to analyse moderation effects and the ability
to investigate non linear correlations [28].

With this work we aim to provide researchers and practition-
ers with a fundamental model on influences and effects on the
properties of model transformation languages. We hope that the
results can help researchers and practitioners make well-founded
decisions on which languages to use, what MTL capabilities to im-
prove and what empirical studies, to validate the appropriateness
of new techniques, should focus on. The influence weights of MTL
capabilities can be used by researchers to focus their research on
the most relevant capabilities for the properties they are interested
in improving. It can also help design appropriate empirical studies
to evaluate the effectiveness of new techniques, e.g. for model man-
agement, by revealing which properties are most impacted by them.
Similarly, it can help practitioners in their decision making process
when deciding on the use of MTLs. It can allow them to identify
relevant parts of their transformations to evaluate, depending on
what properties they are most concerned about.

The structure of this registered report is as follows: Section 2
gives a short overview over model transformation languages and
introduces universal structure modelling. Section 3 describes our
research questions and hypotheses. Afterwards in Section 4 the
execution plan for our study is introduced. Section 5 details the
variables involved in our study while Section 6 details the structure
of the survey and an excerpt of the questions used. Section 7 de-
scribes our intended target subjects and sampling methodology. In
Section 8 we describe how we plan to analyse the data produced in
the online survey and Section 9 discusses threats to validity. Lastly,
in Section 10 we present and discuss related work.

2 BACKGROUND
Model transformation languages have been developed to pro-
vide domain specific languages for developing model transforma-
tions. Similar to general purpose languages, MTLs follow different
paradigms and have various forms. The axes along which MTLs
can be distinguished have been explored in several studies, such as
by Mens et al. [21], Czarnecki et al. [6] and more recently Kahani
et al. [17].

Although many distinctions exist, the fundamental goal and
functionality provided by model transformation languages stays the
same throughout all of them. Model transformation languages are
“language[s] that provide a set of constructs for explicitly expressing,
composing, and applying transformations” [26].
Structural equation modelling (SEM) is an approach used for
confirmatory factor analysis [9]. It defines a set of methods used
to “investigate complex relationship structures between variables and
allows for quantitative estimates of interdependencies thereof. Its goal
is it to map the a-priori formulated cause-effect relationships into
a linear system of equations and to estimate the model parameters
in such a way that the initial data, collected for the variables, are
reproduced as well as possible” [28].

Structural equation modelling distinguishes between two sets of
variables manifest and latent. Manifest variables are variables that
are empirically measured and latent variables describe theoretical
constructs that are hypothesised to interact with each other. Latent

The Impact of Model Transformation Language Features on Quality Properties of MTLs: A Study Protocol

ESEM ’22, September 19–23, 2022, Helsinki, Finland

Figure 1: The makeup of a structural equation model.

variables are further divided into exogenous or independent and
endogenous or dependent variables.

So called structural equation models, a sample of which can
be seen in Figure 1, comprised of manifest and latent variables,
form the heart of analysis. They are made up of three connected
sub-models. The structure model, the measurement model of the
exogenous latent variables and the measurement model of the en-
dogenous latent variables.

The structure model defines all hypothesised interactions be-
tween exogenous (𝜉𝑒𝑥𝐼 𝐷 ) and endogenous (𝜂𝑒𝑛𝑑𝐼 𝐷 ) latent variables.
Each exogenous variable is linked, by arrow, to all endogenous
variables that are presumed to be influenced by it. Each of these
connections is given a variable (𝛾𝑒𝑥𝐼 𝐷_𝑒𝑛𝑑𝐼 𝐷 ) that measures the in-
fluence strength. If an exogenous variable moderates the influences
on a endogenous variable, the exogenous variable is depicted with
a dashed outline and connected to all endogenous variables that
are moderated by it1. For each moderated influence a separate vari-
able of the form 𝛾𝑒𝑥𝐼 𝐷_𝑒𝑛𝑑𝐼 𝐷_𝑚𝑜𝑑𝐸𝑛𝑑𝐼 𝐷 is assigned. In addition, an
residual (or error) variable is appended to each endogenous latent
variable to represent the influence of variables not represented in
the model.

Figure 1 shows an example structure equation model model for
the hypothesis that “Mappings help with the comprehensibility of
transformations, depending on the developers experience.”. The struc-
ture model seen at the centre of the figure, is comprised of the
exogenous latent variable 𝜉1 (Mappings), the moderating exoge-
nous variable 𝜉2 (Experience), the endogenous latent variable 𝜂1
(Comprehensibility), a presumed influence of Mappings on Compre-
hensibility via 𝛾11 and the error variable 𝜁1. Lastly the model also

1To illustrate moderation, arrows are usually shown from the moderating exogenous
variable to the arrow representing the moderated influence , i.e., an arrow between an
exogenous variable and an endogenous variable. However our illustration deviates from
this due to the size and makeup of our hypothesis system. For standard representations
please refer to foundation literature such as Weiber and Mühlhaus [28].

contains a moderation of Experience on all influences of Compre-
hensibility. As described earlier, this moderation effect is assigned
the variable 𝛾11_2. The moderation variables are not depicted in our
structure models because of their high number and visibility issues
caused by it.

The measurement model of the exogenous latent variables reflects
the relationships between all exogenous latent variables and their
associated manifest variables. Each manifest variable is linked, by
arrow, to all exogenous latent variables that are measured through
it. Each of these connections is given a variable that measures
the indication strength of the manifest variable for the latent vari-
able. Additionally, an error variable for each manifest variable is
introduced that represents measurement errors. In Figure 1 the
measurement model for exogenous latent variables, seen at the
left of the figure, is comprised of the exogenous latent variables
𝜉1 (Mappings) and 𝜉2 (Experience), the manifest variables 𝑥1 (%
of code using Mappings), 𝑥2 (number of years a person has been a
programmer) and 𝑥3 (number of hours per month spent developing
transformations) their measurement accuracy for Mapping usage
𝜆11 and their measurement accuracy for Experience 𝜆22 and and
𝜆32 and the associated measurement error 𝛿1 and 𝛿2 and 𝛿3.

The measurement model of the endogenous latent variables re-
flects the relationships between all endogenous latent variables
and their associated manifest variables. It is structured the same
way as the measurement model of the exogenous latent variables.
In Figure 1 it is shown on the right of the figure.

Given a structural equation model and measurements for mani-
fest variables the SEM approach calls for estimating the influence
weights and latent variables within the models. This is done in
alternation for the measurement models and the structure model
until a predefined quality criterion is reached. Traditional meth-
ods (covariance-based structural equation modeling & partial least

Comprehensibility η₁ζ₁ƛ₁₁Mappingsξ₁% Mappingsused x₁Comp.rating y₁δ₁ε₁Measurement model for exogenous latentvariablesMeasurement model for endogenouslatent variablesstructure modelγ₁₁ƛ₁ƛ₂₁Legendδ₁x₁residual variablemanifest variablelatent variableExperience ξ₂programmerfor #years x₂ƛ₂₂δ₂ξ₁moderating latent variableξ₁#hoursworking permonth x₃δ₃ƛ₃₂ESEM ’22, September 19–23, 2022, Helsinki, Finland

S. Höppner and M. Tichy

squares) use different mathematical approaches such as maximum-
likelihood estimation or least squares [28] to estimate influence
weights.
Universal structure modelling (USM) evolved from structural
equation modelling as an alternative to the commonly used methods
with the aim of coping with effects that are not initially theorized
and non-linearity of influences [4]. To do so, USM encompasses
functionality to verify hypothesised influences, estimate influence
and moderation weights between factors and methods for calcu-
lating the statistical significance and effect sizes of the estimated
results. Similar to the partial least square approach, USM also uses
least squares for estimating the measurement models but relies on
a Bayesian neural network, that is composed of a multilayer percep-
tron architecture, to estimate the structure model [4, 28]. This has
the advantage of reliably handling non-linear interdependencies
and moderation caused, for example, through co-founding variables
within the model. To translate the neural network results into a
understandable representations, USM introduces a post-processing
stage where the regression functions from the network are analysed
to extract properties of the paths, such as their influence strength,
the form of the non-linearity or the form of interactions [28].

Using USM instead of traditional structural equation modelling
approaches is suggested for studies where there are still uncertain-
ties about the completeness of the underlying hypotheses system
and for exploring non-linearity in the influences [4, 28]. Moreover
its use of a neural network also reduces the requirements for the
scale levels of data thus allowing the introduction of categorical
variables in addition to metric variables [28].

3 HYPOTHESES AND RESEARCH QUESTIONS
The goal of our study is to provide first results on the influence
strengths of interdependences between model transformation lan-
guage capabilities and claimed quality properties as perceived by
users, as well as insights into the strength of moderation expressed
by contextual properties. The study is structured around the hypoth-
esised interdependencies between these variables, and their more
detailed breakdown, extracted from the interview results. Each pre-
sumed influence of a MTL capability on a MTL property forms one
hypothesis which is to be examined and weighted in our study.
All hypotheses are extended with an assumption of moderation
through the context variables as a result of the deliberations from
the interview study. The system of hypotheses that arises from
these deliberations can be represented in a structure model, which
forms the basis for our study. The structure model is depicted in
Figure 2. The model shows exogenous variables on the left and right
and endogenous variables at the centre. Exogenous variables de-
picted in a ellipse with a dashed outline constitute the hypothesised
moderating variables.

All hypotheses investigated in our study are of the form: “<MTL
Property> is (positively or negatively) influenced by <MTL Capabil-
ity>”. They are represented by arrows from exogenous variables
on the left of Figure 2 to endogenous variable at the centre. A
moderation on the hypothesised influence is also assumed from
all exogenous variables on the right of the figure connected to

the considered endogenous variable. In total we investigate 31 hy-
pothesised influences, i.e. the number of outgoing arrows from the
exogenous variables on the left of Figure 2.

Our study is then guided by the following research questions:

RQ1 Which of the hypothesised interdependencies withstands a

test of significance?

RQ2 How strong are the influences of model transformation lan-

guage capabilities on the properties thereof?

RQ3 How strong are moderation effects expressed by the contex-

tual factors use-case, skills & experience and MTL choice?

RQ4 What additional interdependencies arise from the analysis

that were not initially hypothesised?

As the first study on this subject it contains confirmatory and
exploratory elements. We intend to confirm which of the interde-
pendencies between MTL capabilities, MTL properties and contextual
properties extracted from the expert interviews withstand quantita-
tive scrutiny (RQ1). To do so we want to explore how strong the
influence and moderation effects between variables are (RQ2 &
RQ3) to gain new insights and to confirm their significance and rel-
evance (minor influence strengths might suggest irrelevance even
if goodness of fit tests confirm a correlation that is not purely acci-
dental). Lastly, we want to make use of the exploratory elements of
USM to find potential interdependencies not hypothesised by the
experts in our interviews (RQ4).

4 EXECUTION PLAN
Our study is composed of the following steps that will be executed
sequentially.

(1) Development of online survey using an on premise version

of the survey tool LimeSurvey2.

(2) Survey review and pilot test by co-authors.
(3) Reworking survey based on pilot test.
(4) Opening online survey to public.
(5) Reaching out to potential survey subjects per mail and social

media.

(6) Second round of reaching out (2 weeks later).
(7) Closing of online survey (6 weeks after opening).
(8) Data extraction.
(9) Data analysis using the USM tool NEUSREL3.

5 VARIABLES
As seen in Figure 2 there are 26 latent variables relevant to our study.
Variables 𝜉1..19 describe exogenous variables and 𝜂1..7 describe en-
dogenous variables. Each latent variable is measured through one
or more manifest variables. Here we explain all latent variables
and their corresponding manifest variables. Extending the struc-
ture model from Figure 2 with the manifest variables produces
the complete structural equation model evaluated in this study.
Note that USM reduces the requirements for the scale levels of data
thus allowing the use of categorical variables in addition to metric
variables [28].

All latent variables related to MTL capabilities (𝜉1..9) are associ-
ated with a single manifest variable 𝑥1..9 which measures in how

2https://www.limesurvey.org/
3https://www.neusrel.com

The Impact of Model Transformation Language Features on Quality Properties of MTLs: A Study Protocol

ESEM ’22, September 19–23, 2022, Helsinki, Finland

Bidirectionality
𝜉1

Incrementality
𝜉2

Mappings 𝜉3

Model Man-
agement 𝜉4

Model
Navigation 𝜉5

Model
Traversal 𝜉6

Pattern
Matching 𝜉7

Reuse Mech-
anisms 𝜉8

Traceability
𝜉9

Reset

𝜁1

𝜁2

𝜁3

𝜁4

𝜁5

𝜁6

𝜁1

Comprehensi-
bility 𝜂1

Ease of
Writing 𝜂2

Expressiveness
𝜂3

Tool Sup-
port 𝜂4

Maintainability
𝜂5

Productivity
𝜂6

Reusability 𝜂7

Meta-model
Size 𝜉13

Model
Size 𝜉14

Transformation
Size𝜉15

Bidirectional
Use𝜉18

Language
Choice 𝜉10

Language
Skills 𝜉11

Experience
𝜉12

I/O Semantic
gap 𝜉16

Meta-model
sanity 𝜉17

Incremental
Use 𝜉19

Figure 2: Structure model depicting the influence and moderation effects of factors on MTL properties. (Due to its size, the model
has been made interactive using standard PDF features. Clicking one of the exogenous variables 𝜉1..9 will show only influences of the variable as well as all the
moderation effects on influenced endogenous variables. Clicking a endogenous variable 𝜂1..7 will show only influences and moderations on the variable. This
view can be reset by using the reset button that appears when using the interactive features. To use the interactive features please open the PDF in Adobe Reader

or okular. Other PDF viewers might work but have not been tested.)

ESEM ’22, September 19–23, 2022, Helsinki, Finland

S. Höppner and M. Tichy

many of the participants transformations they utilise the capability,
using a ratio from 0% to 100%. Similarly, latent variables related to
MTL properties (𝜂1..7) are associated with a single manifest variable
𝑦1..7 which measures the perceived quality of the property on a
5-point likert scale (e.g., very good, good, neither good nor bad,
bad, very bad).

The use of single-item scales is a debated topic. We justify their
usage for the described latent variables on multiple grounds. First,
the latent variables are of high complexity due to the abstract con-
cepts they represent. Second, our study aims to produce first results
that need to be investigated in more detail in follow up studies,
more focused on single aspects of the model. And third, due to the
size of our structural equation model multi-item scales for all latent
variables would increase the size of the survey, potentially putting
off many subjects. The validity of these deliberations for using
single-item scales is supported by Fuchs and Diamantopoulos [7].
The latent variable language choice (𝜉10) will be measured by
means of querying participants to list their 5 most recently used
transformation languages and to give an estimate on the percentage
of their respective use % (𝑥10).

Language skills (𝜉11) will be measured through 𝑥11 and 𝑥12 for
which participants are asked to give the amount of years they have
been using each language (𝑥11) and the amount of hours they use
the language per month (𝑥12).

Similarly, experience (𝜉12) is associated with the amount of years
subjects have been involved in defining model transformations (𝑥13)
and the amount of hours they spend on developing transformations
each month (𝑥14).

Meta-model size (𝜉13) and model size (𝜉14) both require partici-
pants to state the range between which their (meta-) models vary
(𝑥15, 𝑥16). This is measured by offering participants a number of
ranges of (meta-) model objects. For each range participants should
give an estimate on how much percent of the (meta-) models they
work fall within that size range. For models the ranges are: #ob-
jects ≤ 10, 10 ≤ #objects ≤ 100, 100 ≤ #objects ≤ 1000, 1000 ≤
#objects ≤ 10000, 10000 ≤ #objects ≤ 100000, 100000 ≤ #objects.
For meta-model the ranges are: #objects ≤ 10, 10 ≤ #objects ≤ 20,
20 ≤ #objects ≤ 50, 50 ≤ #objects ≤ 100, 100 ≤ #objects ≤ 1000,
1000 ≤ #objects. Similarly, Transformation size (𝜉15) is measured on
a range of lines of code (𝑥17). The options being: LOC ≤ 100, 100 ≤
LOC ≤ 500, 500 ≤ LOC ≤ 1000, 1000 ≤ LOC ≤ 5000, 5000 ≤ LOC
≤ 10000, 10000 ≤ LOC. Querying size data in this manner and the
associated ranges have been successfully applied in a prior work
the authors were involved in [10].

To formulate the semantic gap between input and output (𝜉16)
we elicit the similarity of the structure (𝑥18) and data types (𝑥19)
on a 5-point likert scale (very similar, similar, neither similar nor
dissimilar, dissimilar, very dissimilar). Participants are asked to give
the percentage of all their meta-models that fall within each of the
five assessments.

The meta-model sanity (𝜉17) is measured through means of how
well participants perceive their structure (𝑥20) and their documen-
tation (𝑥21) to be on a 5-point scale (very well, well, neither well nor
bad, bad, very bad). Participants are asked to give the percentage of
all their meta-models that fall within each of the five assessments.

Lastly, for both bidirectional uses (𝜉18) and incremental uses (𝜉19)
we query participants on the ratio of bidirectional (𝑥22) and incre-
mental (𝑥23) transformations compared to simple uni-directional
transformations they have written.

6 SURVEY STRUCTURE
We plan our online survey as a structured survey. There is no need
for open questions, because our aim is to quantitatively asses the
interdependencies between variables.

The online survey itself will be designed around the following
question groups which group related questions together. Their
order follows the suggestions by Kasunic [18] to start with easy to
answer questions and move towards questions that require subjects
to think more about their responses.

(1) Information and consent about data usage (required for fur-

ther progression).

(2) Questions on MTL capability usage (𝜉1..9, measured through

𝑥1..9).

(3) Questions about perceived quality properties of transforma-

tions and MTLs (𝜂1..7, measured through 𝑦1..7).

(4) Demographic questions (𝜉10..16, measured through 𝑥10..23).
The data in the survey is collected on the basis of the manifest
variables (𝑦1..7 & 𝑥1..23) defined in Section 5. The survey contains
one question for each manifest variable. In total there will be 30
questions spread across the three sections and we expect subjects
to require between 35 and 40 minutes on average to complete the
survey. Table 1 shows the tentative questions associated with each
manifest variable. The exact measures taken for each manifest
variable are described in Section 5.

Questions within each group follow the same style. This way
participants can familiarise themselves with the question style and
can get more efficient answering them. In this way, subjects can
quickly familiarise themselves with the questions in each group.

The questions are designed based on guidelines from Kasunic [18]
and Torchiano et al. [27]. Questions are short, concrete, use simple
words and no hypotheticals.

The MTL capability terms can have multiple, slightly different,
interpretations within the community. To prevent ambiguity we
provide a short description for each of them before the respective
questions.

7 SUBJECTS
The target subjects are both researchers and professionals from
industry that have used dedicated model transformation languages
to develop model transformations in the last five years. We use a
combination of convenience sampling and snowball sampling to
select our study participants. Both authors contact researchers and
professionals with whom they have personal contact via mail and
request them to fill out the online survey. We further reach out, via
mail, to all authors of publications listed in ACM Digital Library,
IEEE Xplore, Springer Link and Web of Science that contain the key
word model transformation from the last five years. A third source of
subjects is drawn from social media. The authors use their available
social media channels to recruit further subjects by posting about
the online-survey on the platforms. All participants are requested
to forward the online survey to people from their network that they

The Impact of Model Transformation Language Features on Quality Properties of MTLs: A Study Protocol

ESEM ’22, September 19–23, 2022, Helsinki, Finland

Table 1: Survey questions and associated manifest variables in order of appearance in the survey

Question

Which percentage of your transformations utilise Bidirectionality functionality?
Which percentage of your transformations utilise Incrementality functionality?
Which percentage of your transformations utilise Mapping functionality?
Which percentage of your transformations utilise Model Management functionality?
Which percentage of your transformations utilise Model Navigation functionality?
Which percentage of your transformations utilise Model Traversal functionality?
Which percentage of your transformations utilise Pattern Matching functionality?
Which percentage of your transformations utilise Reuse functionality?
Which percentage of your transformations utilise Tracing functionality?
How comprehensible are your transformations?
How easy is it to write transformations?
How expressive are the languages you use?
How is the tool support for the languages you use?
How maintainable are your transformations?
How productive are you when developing transformations?
How reusable are transformation(-parts) in the languages you use?
What are your 5 most recently used languages for writing transformations?
How many years have you used your languages?
How many hours do you use each language per month?
How many years have you worked on defining model transformations?
How many hours do you work on writing transformations per month?
What number of meta-model elements are used in your transformations?
What number of model elements are used in your transformations?
How long, measured in LOC, are your transformations?
How similar are input and output meta-models in your transformations?
How similar are the data types in input and output in your transformations?
How well structured are the meta-models in your transformations?
How well documented are the meta-models in your transformations?
What percentage of your transformations are bidirectional?
What percentage of your transformations are incremental?

Manifest Variable
𝑥1
𝑥2
𝑥3
𝑥4
𝑥5
𝑥6
𝑥7
𝑥8
𝑥9
𝑦1
𝑦2
𝑦3
𝑦4
𝑦5
𝑦6
𝑦7
𝑥10
𝑥11
𝑥12
𝑥13
𝑥14
𝑥15
𝑥16
𝑥17
𝑥18
𝑥19
𝑥20
𝑥21
𝑥22
𝑥23

think could also provide useful insights. Participation is voluntary
and we do not plan to pay subjects to participate. This decision is
rooted in our experience in previous studies one other survey with
83 subjects [10] and the interview study we are basing this study
on with 56 subjects [14].

Our intention behind the snowballing is to reach a larger number
of industry participants which are hard to reach using a systematic
approach based on publications.

It is suggested in literature to have between 5 to 10 times as many
participants as the largest number of parameters to be estimated
in each structural equation (i.e., the largest number of incoming
paths for a latent model variable) [4]. Thus, the minimal number of
subjects for our study to achieve stable results is 80. To gain any
meaningful results a sample size of 30 must not be undercut [4].

8 ANALYSIS PLAN
We intend to execute our analysis regardless of the final sample size
but will critically assess the results if it undercuts the thresholds of
80 and 30 respectively.

We plan on using USM to examine the hypotheses system mod-
elled by the structure model shown in Figure 2. USM requires a

declaration of an initial likelihood of an interdependence between
two variables. This is used as a starting points for calculating in-
fluence weights but can change over the course of calculation. For
this, Buckler et al. [4] suggest to only assign a value of 0 to those
relationships that are known to be wrong. We use the results of
our interview study [14], shown in the structure model, to assign
these values. For each path that is present in the model we will
assume a likelihood of 100%. To check for interdependencies that
might have been missed by interview participants we will use a
likelihood of 50% for all missing paths between 𝜉1..19 and 𝜂1..7. This
is a compromise between exclusion and inclusion, as the interview
results suggest that there is no connection, but not yet certain.

The tool NEUSREL will then be used on the extracted empirical
data and the described additional input to estimate path weights and
moderation weights within the extended structure model, i.e. the
structure model where each exogenous latent variable is connected
to all endogenous latent variables. It also runs significance tests
via a bootstrapping routine [4, 23] and produces the significance
values for each influence. The following procedures will then be
followed to answer the research questions from Section 3.

ESEM ’22, September 19–23, 2022, Helsinki, Finland

S. Höppner and M. Tichy

RQ1. We will reject all hypothesised influences, i.e. those present
in our structure model in Figure 2, that do not pass the statistical
significance test, meaning the path coefficient between two (or three
in case of moderations) latent variables produced by NEUSREL does
not exhibit a high level of significance. Furthermore we will also
reject hypothesised influences where the path coefficient is several
magnitudes lower than the median influence of all coefficients. We
assume that such low influences suggest irrelevance.

RQ2 & RQ3. All path coefficients produced that were not re-
jected in RQ1 will then provide direct values for the influence and
moderation strengths to answer RQ2 & RQ3.

RQ4. The same significance criteria we applied to all hypothe-
sised influences for RQ1, we also apply to the extended influences,
i.e. those added as potential influences with a likelihood of 50%.
Those influences that pass the significance test are added to the
initial structural model as newly discovered influences.

9 THREATS TO VALIDITY
Our study is carefully designed and follows standard procedures
for this type of study. There are, however still threats to validity
that stem from design decisions and limitations. In this section we
discuss these threats.

9.1 Internal Validity
Internal validity is threatened by manual errors and biases of the
involved researchers throughout the process.

The two activities where such errors and biases can be introduced
are the subject selection and question creation. The selection criteria
for study subjects is designed in such a way, that no ambiguities
exist during selection. This prevents researcher bias.

For the survey questions we aim to only use neutral questions

and run a pilot test to ensure this.

9.2 External Validity
External validity is threatened by our subject sampling strategy and
the limitations on the survey questions imposed by the complexity
of the subject matter.

We utilise convenience and snowball sampling. Convenience
sampling can limit how representative the final group of intervie-
wees is. Snowball sampling based on this can strengthen this effect.
Since we do not know the target populations makeup it is difficult
to asses the extend of this problem.

Using research articles as a starting point introduces a bias to-
wards researchers. There is little potential to mitigate this problem
during the study design, because there exists no systematic way to
find industry users.

Due to the complexity and abstractness of the concepts under
investigation, a measurement via reflective of formative indicators
is not possible. Instead we use single item questions. We further
assume that positive and negative effects of a feature are more
prominent if the feature is used more frequently. This can have
a negative effect on the external validity of our results. However,
we consciously decided for these limitations to be able to create a
study that concerns itself with all factors and influences at once.

9.3 Construct Validity
Construct validity is threatened by inappropriate methods used for
the study.

Using the results of online surveys as input for structural equa-
tion modelling techniques is common practice in market research [28].
It is less common in computer science. However, we argue that for
the purpose of our study it is an appropriate methodology. This is
because the goal of extracting influence strengths and moderation
effects of factors on different properties aligns with the goals of
market research studies that employ structural equation modelling.

9.4 Conclusion Validity
Conclusion validity is mainly threatened by biases of our survey
participants.

It is possible that people who do research on model transfor-
mation languages or use them for a long time are more likely to
see them in a positive light. As such there is the risk that too little
experiences will be reported on in our survey. However, this prob-
lem did not present itself in a previous study by us on the subject
matter [14]. In fact researchers were far more critical in dealing
with the subject. AS a result, there might be a slight positive bias
in the survey responses, but we believe this to be negligible.

10 RELATED WORK
There are numerous works that explore the possibilities gained
through the usage of MTLs such as automatic parallelisation [2,
3, 24], verification [19, 20] or simply the application of difficult
transformations [1].

There is, however, only a small amount of works trying to eval-
uate the languages to gain insights into where specific advantages
or disadvantages associated with the use of MTLs originate from.
Hebig et al. [12] report on a study to evaluate how the use of differ-
ent languages, namely ATL, QVT-O and Xtend affects the outcome
of students solving several transformation tasks. Götz et al. pub-
lished a study on how much complexity stems from what parts of
ATL transformations [8] and compared these results with data for
transformations written in Java [15] to elicit advantageous features
in ATL and to explore what use-cases justify the use of a general
purpose language over a model transformation language. Lastly
there is our interview study [14] on which this registered report is
based on. The interviews brought forth insights into factors from
which the advantages and disadvantages of MTLs originate from
as well as suggested a number of moderation effects on the effects
of these factors. Apart from these studies there is little effort put
into empirical investigation into model transformation languages
as shown by Götz et al. [11].

REFERENCES
[1] Kyriakos Anastasakis, Behzad Bordbar, Geri Georg, and Indrakshi Ray. 2007.
UML2Alloy: A Challenging Model Transformation. In Model Driven Engineering
Languages and Systems (Berlin, Heidelberg, 2007), Gregor Engels, Bill Opdyke,
Douglas C. Schmidt, and Frank Weil (Eds.). Springer Berlin Heidelberg, 436–450.
[2] Amine Benelallam, Abel Gómez, Massimo Tisi, and Jordi Cabot. 2015. Distributed
Model-to-model Transformation with ATL on MapReduce. In Proceedings of the
2015 ACM SIGPLAN International Conference on Software Language Engineering
(2015). 37–48.

[3] Enrico Biermann, Claudia Ermel, and Gabriele Taentzer. 2010. Lifting parallel
graph transformation concepts to model transformation based on the eclipse
modeling framework. 26 (2010).

The Impact of Model Transformation Language Features on Quality Properties of MTLs: A Study Protocol

ESEM ’22, September 19–23, 2022, Helsinki, Finland

[28] Rolf Weiber and Daniel Mühlhaus. 2021. Strukturgleichungsmodellierung: Eine
anwendungsorientierte Einführung in die Kausalanalyse mit Hilfe von AMOS,
SmartPLS und SPSS (3 ed.). Springer-Verlag. https://doi.org/10.1007/978-3-658-
32660-9

A MTL CAPABILITY AND PROPERTY

OVERVIEW

For short descriptions of all MTL capabilities see Table 2. For short
descriptions of all MTL properties see Table ??. More thorough
explanations can be found in our previous works [11, 14].

Table 2: MTL capability descriptions

MTL capability

Description

Incrementality

Bidirectionality

Capabilities to define transformations from
source to target and target to source in one
transformation rule
Capabilities to define transformations that
are applied whenever the source model
changes and only manipulate those parts
that did change
Capabilities to explicitly define correspon-
dence between input and output elements
Model Management Capabilities to read and write models from

Mappings

Model Navigation

Model Traversal

Pattern Matching

Reuse Mechanisms

Tracing

and to files
Capabilities to navigate a given model struc-
ture
Capabilities to automatically find and apply
transformations to model elements
Capabilities to automatically match patterns
of model elements and apply transforma-
tions to them
Capabilities to reuse whole transformations
or parts of transformations
Capabilities to (automatically) generate and
maintain trace links between source and tar-
get elements

[4] Frank Buckler and Thorsten Hennig-Thurau. 2008. Identifying hidden structures
in marketing’s structural models through universal structure modeling. Marketing
ZFP 30, JRM 2 (2008), 47–66.

[5] Loli Burgueño; Jordi Cabot and Sébastien Gérard. 2019. The Future of Model
Transformation Languages: An Open Community Discussion. (2019). https:
//doi.org/10.5381/jot.2019.18.3.a7

[6] K. Czarnecki and S. Helsen. 2006. Feature-based survey of model transformation

approaches. (2006). https://doi.org/10.1147/sj.453.0621

[7] Christoph Fuchs and Adamantios Diamantopoulos. 2009. Using single-item
measures for construct measurement in management research: Conceptual issues
and application guidelines. Die Betriebswirtschaft 69, 2 (2009), 195.

[8] Stefan Götz and Matthias Tichy. 2020. Investigating the Origins of Complexity

and Expressiveness in ATL Transformations. 19, 2 (2020), 12–1.

[9] Daniel Graziotin, Per Lenberg, Robert Feldt, and Stefan Wagner. 2021. Psycho-
metrics in Behavioral Software Engineering: A Methodological Introduction with
Guidelines. ACM Trans. Softw. Eng. Methodol. 31, 1, Article 7 (sep 2021), 36 pages.
https://doi.org/10.1145/3469888

[10] Raffaela Groner, Katharina Juhnke, Stefan Götz, Matthias Tichy, Steffen Becker†,
Vijayshree Vijayshree, and Sebastian Frank. 2021. A Survey on the Relevance of
the Performance of Model Transformations. Journal of Object Technology 20, 2
(2021), 2:1–27. https://doi.org/10.5381/jot.2021.20.2.a5 OPEN REGULAR ISSUE.
[11] Stefan Götz, Matthias Tichy, and Raffaela Groner. 2021. Claimed advantages
and disadvantages of (dedicated) model transformation languages: a systematic
literature review. 20, 2 (2021), 469–503. https://doi.org/10.1007/s10270-020-
00815-4

[12] Regina Hebig, Christoph Seidl, Thorsten Berger, John Kook Pedersen, and Andrzej
Wąsowski. 2018. Model Transformation Languages Under a Magnifying Glass: A
Controlled Experiment with Xtend, ATL, and QVT. In Proceedings of the 2018 26th
ACM Joint Meeting on European Software Engineering Conference and Symposium
on the Foundations of Software Engineering (2018) (ESEC/FSE 2018). https://doi.
org/10.1145/3236024.3236046

[13] Felienne Hermans, Martin Pinzger, and Arie van Deursen. 2009. Domain-Specific
Languages in Practice: A User Study on the Success Factors. In Model Driven
Engineering Languages and Systems (2009) (MODELS 2009). https://doi.org/10.
1007/978-3-642-04425-0_33

[14] Stefan Höppner, Yves Haas, Matthias Tichy, and Katharina Juhnke. 2022. Advan-
tages and disadvantages of (dedicated) model transformation languages. Empirical
Software Engineering 27, 6 (2022), 159. https://doi.org/10.1007/s10664-022-10194-
7

[15] Stefan Höppner, Timo Kehrer, and Matthias Tichy. 2021. Contrasting dedicated
model transformation languages versus general purpose languages: a historical
perspective on ATL versus Java based on complexity and size. (2021). https:
//doi.org/10.1007/s10270-021-00937-3

[16] Jendrik Johannes, Steffen Zschaler, Miguel A. Fernández, Antonio Castillo, Dim-
itrios S. Kolovos, and Richard F. Paige. 2009. Abstracting Complex Languages
through Transformation and Composition. In Model Driven Engineering Lan-
guages and Systems (2009) (MODELS 2009). https://doi.org/10.1007/978-3-642-
04425-0_41

[17] Nafiseh Kahani, Mojtaba Bagherzadeh, James R Cordy, Juergen Dingel, and Daniel
Varró. 2019. Survey and classification of model transformation tools. (2019).
https://doi.org/10.1007/s10270-018-0665-6

[18] Mark Kasunic. 2005. Designing an effective survey. Technical Report. Carnegie-

Mellon Univ Pittsburgh PA Software Engineering Inst.

[19] Jong-Won Ko, Kyung-Yong Chung, and Jung-Soo Han. 2015. Model transforma-
tion verification using similarity and graph comparison algorithm. 74, 20 (2015),
8907–8920. https://doi.org/10.1007/s11042-013-1581-y

[20] Kevin Lano, Tony Clark, and S Kolahdouz-Rahimi. 2015. A framework for model

transformation verification. 27, 1 (2015), 193–235.

[21] Tom Mens and Pieter Van Gorp. 2006. A Taxonomy of Model Transformation.

(2006). https://doi.org/10.1016/j.entcs.2005.10.021

[22] Andreas Metzger. 2005. A systematic look at model transformations. In Model-
driven Software Development. Springer, 19–33. https://doi.org/10.1007/3-540-
28554-7_2

[23] Christopher Z Mooney, Christopher F Mooney, Christopher L Mooney, Robert D
Duval, and Robert Duvall. 1993. Bootstrapping: A nonparametric approach to
statistical inference. Number 95. sage.

[24] Jesus Sanchez Cuadrado, Loli Burgueno, Manuel Wimmer, and Antonio Vallecillo.
2020. Efficient execution of ATL model transformations using static analysis and
parallelism. (2020), 1–1. https://doi.org/10.1109/TSE.2020.3011388

[25] Douglas Schmidt. 2006. Guest Editor’s Introduction: Model-Driven Engineering.

(2006). https://doi.org/10.1109/MC.2006.58

[26] S. Sendall and W. Kozaczynski. 2003. Model transformation: the heart and soul
of model-driven software development. (2003). https://doi.org/10.1109/MS.2003.
1231150

[27] Marco Torchiano, Daniel Méndez Fernández, Guilherme Horta Travassos, and
Rafael Maiani de Mello. 2017. Lessons Learnt in Conducting Survey Research. In
2017 IEEE/ACM 5th International Workshop on Conducting Empirical Studies in
Industry (CESI). 33–39. https://doi.org/10.1109/CESI.2017.5

ESEM ’22, September 19–23, 2022, Helsinki, Finland

S. Höppner and M. Tichy

The Impact of Model Transformation Language Features on Quality Properties of MTLs: A Study Protocol

ESEM ’22, September 19–23, 2022, Helsinki, Finland

