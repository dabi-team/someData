JOURNAL OF LATEX CLASS FILES, VOL.

1

Design of VR Engine Assembly Teaching System

Jiayu Zhang
Department of Computer Science and Technology, Southern University of Science and Technology
Shenzhen, China
11812425@mail.sustech.edu.cn

2
2
0
2

l
u
J

2
1

]

C
H
.
s
c
[

1
v
9
1
1
7
0
.
7
0
2
2
:
v
i
X
r
a

Abstract—Virtual reality(VR) is a hot research topic, and it has
been effectively applied in military, education and other ﬁelds.
The application prospect of virtual reality in education is very
broad. It can effectively reduce labor cost, resource consumption,
stimulate students’ interest in learning, and improve students’
knowledge level. New energy vehicles have also been widely
promoted in recent years, and the production of new energy
vehicles has played a key role in it. However, the teaching
of car engine disassembly and assembly still retains a more
traditional way. That’s why applying VR technology has high
signiﬁcance. This project uses the Unity 3D engine to develop a
VR-based engine teaching software, which aims to allow users to
use VR headsets, handles and other accessories to simulate the
disassembly and assembly of car engines in a virtual environment.
We design a modular system framework and divided the software
into two layers, the system layer and the function layer. The
system layer includes a message system and a data conﬁguration
system. The functional layer includes the user interface system,
disassembly and assembly function, and data module. In addition
to fulﬁlling functional requirements , we used the Unity UPR
tool to check out performance issues, and optimized product
performance by turning off vertical sync and turning on static
switches for some scene objects.

Index Terms—Virtual Reality, Car Engine, Teaching Mode,

Software Development, Unity 3D

I. INTRODUCTION

A. Background

With the rapid development of information technology, the
research of virtual reality has gradually become a hot topic,
and it has also been effectively applied in military, education
and other ﬁelds. In the ﬁeld of education, virtual simulation
software is also widely used, and the teaching signiﬁcance is
very far-reaching. On the one hand, the simulation experiment
teaching through software can effectively reduce labor costs
and reduce the consumption of equipment resources. On
the other hand, it can also help improve students’ sense of
participation and immersion, fully stimulate students’ interest,
and effectively improve students’ knowledge level.

The teaching of automobile engine disassembly and assem-
bly still retains the traditional theoretical teaching mode, and
the supporting practical courses are relatively scarce. There-
fore, students usually cannot fully apply theoretical knowledge
to practice, nor can they achieve the goal of consolidating and
improving theoretical level in practice.

In order to make up for the shortage of automobile engine
disassembly and assembly teaching in reality, and give full
play to the application signiﬁcance of virtual reality technol-
ogy in the ﬁeld of education, this project uses the Unity 3D
engine to develop engine disassembly and assembly teaching

software based on virtual reality. In addition to meeting the
basic functional requirements, the performance data of this
project has also been optimized to meet certain standards to
ensure that users have a good experience.

B. Related Work

1) Current situation of automotive industry teaching: With
the development of science and technology, the automotive
industry is also changing rapidly, and various models of
engines are emerging. Vocational colleges in general need to
focus on practice, and in order to keep up with the changes in
the automotive industry [1], [2], they need to regularly update
the equipment needed for practical teaching, which requires
adequate ﬁnancial support, and many vocational colleges are
currently facing the problem of insufﬁcient funding[3].

The automotive industry usually requires the use of many
bulky professional equipment, such as frame beam aligners,
complete vehicle painting rooms, etc. This leads to a particu-
larly high demand for teaching space. Classroom resources in
general vocational colleges are also very limited, and often
students are not supported by ideal teaching space [4]. In
addition, even if there are enough teaching resources, there
are still many security risks in the process of teaching practice
[5].

Due to all these difﬁculties, teaching in vocational colleges
in the automotive industry is usually based on purely theoreti-
cal teaching, and practical teaching is very scarce. This leads to
boring teaching contents, lack of interaction between students
and teachers, and serious lack of interest and concentration of
students in class. Students are often completely absent from
the classroom, making it very difﬁcult for teachers to manage
[6].

2) Research status of virtual simulation teaching software:
When virtual reality technology was ﬁrst introduced, users
needed to use many hardware devices to achieve an immersive
experience, but factors such as blurred virtual images, low real-
time performance, and a wide variety of hardware led to its not
being universally applied and developed [7], [8]. Nowadays,
with the rapid development of information technology [9],
[10], the limitation of hardware devices for virtual reality
has been broken, and the display effect of computers has
been signiﬁcantly improved, so virtual reality has entered the
public’s view again [11].

At present, the teaching software of virtual reality simula-
tion has been widely used in western countries [12]. The vir-
tual world working group jointly established by New Zealand
and Australia and Second Life (SL) researched by Linden

 
 
 
 
 
 
JOURNAL OF LATEX CLASS FILES, VOL.

2

Laboratory in the United States are typical representatives. In
the United Kingdom and the United States, SL projects have
a very high market share [13]. Since the launch of SL, the
number of internal users has grown to 37 million [14], with
over 300 universities around the world, using SL on teaching
courses or studying user behavior on SL [15]. Some special
industries have strong demand for virtual simulation teaching
software, such as pilot driving training, historical scene review
[16] and so on [17], [18].

For the automotive industry, there are also some practical
developments and applications [19], [20]. For example, North
China University of Science and Technology Fan Luning
developed a VR technology-based auto repair teaching and
training system, Paris National Mining High School devel-
oped a VR training system for disassembly and assembly of
complex mechanical equipment [21].

3) Comparison between traditional teaching and VR teach-
ing: This project
is to develop a VR teaching software
to replace the traditional engine disassembly and assembly
teaching mode to achieve better teaching effect, so we com-
pared between traditional teaching and VR teaching in various
aspects in Table I, such as the teaching venue, and the difﬁculty
of detecting the knowledge mastery after learning. From this
comparison we can get the conclusion that VR teaching has
such many advantages over traditional
is
important to apply VR to vocational teaching.

teaching that

it

TABLE I: Comparison between traditional teaching and VR
teaching

Footprint

Teacher-
student ratio

Safety issues

Inspection
difﬁculty

Students’
interest
learning

in

Traditional
teaching
more
require
equipment, occupy
a larger area [22]

class of 15-30 peo-
two teaching
ple,
teachers [23]
practical operation
may occur
safety
accidents [5]
requires
supervision,
inspection
is
more difﬁcult [11]
traditional teaching
methods are low in
learning

teacher

C. Research content and structure

VR teaching

require

VR
and
smaller

only
equipment
computer,
area
everyone
can follow
the instructions in soft-
ware to learn
relatively safe, almost
no safety problems

can

detect
software
correctness of students’
operation in real time

and

unique
novel
methods,
teaching
students are in high
interest in learning

in a modularized manner. Finally, the software is tested for
function and performance. Based on the test results,
the
software is modiﬁed and the performance differences before
and after optimization are compared, so that the performance
reaches the standard. The structure of this paper is as follows:
The ﬁrst chapter is an introduction, which mainly introduces
the project background and signiﬁcance, the teaching status of
engine disassembly and assembly, the research status of virtual
simulation teaching software, and the innovation points of the
paper;

The second chapter is the design and development of
the virtual reality engine disassembly and assembly teaching
software system, which fully expounds the design and devel-
opment process of the software system, including requirements
analysis, system architecture design, and speciﬁc implementa-
tion of key functions, etc.;

The third chapter is the test and optimization of the virtual

reality engine disassembly teaching software system;

The fourth chapter is the conclusion, which includes a
summary of the work done during our project and an outlook
on the application of virtual reality technology in the ﬁeld of
education.

D. Innovation

The simulation teaching software based on virtual reality
has been widely studied. Based on reading literature and
researching open source software, this paper summarizes with
its own ideas, and designs a virtual reality engine disassembly
teaching software system based on the requirements. The
innovations of this paper are described as follows:

1) This paper proposes the design and development of
teaching software for engine disassembly and assembly
based on virtual reality for vocational college educa-
tion in the automobile industry, which has a certain
educational signiﬁcance for vocational education in the
automobile industry, and improves the learning effect of
students while reducing education costs;

2) This paper expounds the design of the system architec-
ture of the engine disassembly and assembly teaching
software based on virtual reality, and develops the func-
tions of the user interface, assembly system, task system
and other functions in a modular way in the designed
system;

3) This paper conducts a complete functional

test and
performance test of the engine disassembly and as-
sembly teaching software based on virtual reality, and
makes a clear direction adjustment for the unsatisfactory
performance data, and ﬁnally makes the performance
data meet the standard.

The main research object of this paper is virtual reality
technology, and the application of virtual reality technology
in the vocational skill training of engine disassembly and
assembly is discussed. Firstly, the requirements of the teaching
software for disassembly and assembly of the virtual reality
engine are discussed and analyzed. Then the system archi-
tecture of the software is designed based on the analysis of
requirements, and the functional requirements are developed

II. SYSTEM DESIGN AND IMPLEMENTATION

A. Software requirements analysis

When designing and developing a software, ﬁrst of all, it
is necessary to clarify the requirements of the software. The
ultimate goal of this project is to design a teaching software
for the disassembly and assembly of Buick Willam automobile
engines based on virtual reality. There are two types of

JOURNAL OF LATEX CLASS FILES, VOL.

3

groups - one is to use this software for learning, including
vocational schools students in the automotive industry and
people who study independently for interest, industry needs
or other reasons. Their requirements are generally based on
the purpose of learning. On top of the basic requirements of
learning basic knowledge, sometimes they also require that
the process of learning be interesting enough. The other type
is teachers who use this software for auxiliary teaching. Their
requirements are generally based on the purpose of convenient
use and teaching students. In the case of ensuring the correct
teaching knowledge, it is also convenient to adjust the teaching
knowledge in the software. Various parameters should be able
to be adjusted, such as a component ID, the task sequence
and so on [24], [25], [26]. Below we provide a more detailed
analysis of the needs involved in these two groups.

For the groups who use this software for learning, we
analyze their requirements as follows. First of all, we need to
ensure that users learn the basic knowledge correctly. For this
reason, we need to design a reasonable system architecture
to ensure the modular separation of functions,
to ensure
that there are no errors during the running of the program,
and to run correctly according to the conﬁgured parameters.
Secondly ,
the user require to keep the software running
smoothly during the use process, which requires the use of
some technologies in the development process to ensure a
stable running frame rate and reduce memory consumption,
so that the program can also have high quality on devices
with lower conﬁguration. Finally, during the user’s learning
process, the art quality of the software will also affect the
user’s learning effect. The art quality generally includes model
accuracy, user interface design, texture restoration, etc. These
should also be guaranteed during the development process.

For the groups who use this software for teaching, we
analyze their requirements as follows. The general purpose of
such groups is to use software to assist their original teaching
and improve students’ learning enthusiasm and learning effect.
In the teaching process, it is inevitable that there will be some
data adjustments, such as replacing the parts used, changing
the order of task composition, etc. Here, developers need to
leave an entry for easy data adjustment during the development
process, rather than writing ﬁxed code. , so that teachers can
easily adjust in the editor.

B. System architecture design

In the requirements analysis, we mentioned that the most
basic requirements of users are satisﬁed that the software has
a good system architecture, which has a modular function
design, which can make the function boundaries clear in the
development version, and locate the problem in time when
there is a problem. In our teaching software,
the system
architecture is mainly divided into two layers, the system layer
and the function layer. The system layer contains some low-
level codes that are not related to the project, including the
message system and data conﬁguration system; the functional
layer includes some business codes that are strongly related
to the business requirements of the project, including user
interface, disassembly logic, process control, etc. .

Fig. 1: System Architecture

1) System layer design: We start from the system layer,
build the underlying framework for the project, and lay a solid
foundation for the business development of the project.

First of all, we need to implement the message system to
realize the interaction between objects and avoid code cou-
pling. We design a custom type of message through inheritance
registration, and carry the necessary parameters in the message
to pass to other objects. When an object that needs to be
notiﬁed of a message is generated, register and monitor the
necessary message type. If a message is sent by another object
in the monitored message,
the registered callback will be
called, and the speciﬁc command will be executed using the
parameters carried in the message.

Secondly, we need to standardize the conﬁguration method
of data and provide the basic data development entry, such
as the combination of tools and the process of tasks need to
use conﬁguration ﬁles. CSV ﬁles are most suitable for such
conﬁguration ﬁles . CSVs are plain text ﬁles that make data
exchange easier and format conversion easier. We need to
develop a general CSV ﬁle conversion system that reads CSV
ﬁles into custom classes and wraps the data into corresponding
objects.

2) Function layer design: At

the functional

develop the main business requirements to implement
functionality of the project itself.

layer, we
the

The ﬁrst is the user interface system (UI system), which
consists of two major parts. One is the pad system, which
contains the main non-intermediate interaction logic, including
task selection, etc. The tablet acts as a
mode selection,
Operable objects can be picked up and put down at will in
the virtual reality space. The other is a large-screen system.
The main function of the large-screen system is that users can
observe their own task progress in real time when they are
completing tasks. User can also see real-time score in training
mode.

The second is the assembly function, which consists of two
parts. One is the component system, which controls some
unique behaviors of the parts, such as colliders, rigid bodies,
grabable scripts, highlight effects, animation controls, etc.. The
other is the tool system. This part uses the conﬁguration ﬁle to
deﬁne the combination logic between tools and tools, the in-
teraction logic between tools and parts, and also speciﬁes that

System LevelMessage SystemData Configure SystemData ModuleAssembly&DisassemblyUser InterfaceFunction LevelJOURNAL OF LATEX CLASS FILES, VOL.

4

the parts need to conﬁgure the tool conditions for disassembly
and assembly of the used tools.

Finally, there is the data module, which speciﬁes the content
and process control of the task, and also includes a scoring
system, which controls the closed-loop operation of the entire
project at the top of the functional layer.

Next, this paper will select several key modules and describe

their design and implementation.

C. Implementation of key modules

1) Assembly function realization: The assembly function
is the core function of the project, which includes component
animation, component state control, tool combination, inter-
action conditions and interaction effects between components
and tools, and so on. For components and tools, there are some
general logics, such as grabbing and placing, highlighting,
prompts, collision interaction, etc.. But they also have some
unique logics. Components need to conﬁgure the assembly
conditions, and tools have a combination logic. The following
is the script logic common to components and tools:

1) Collider: Collider, a switch used to detect collisions
between objects and objects, objects and hands, and
realize parts disassembly, tool combination, etc.;

2) Advanced Interactable Obj: An interactive object
component inherited from VRTK. It is the core script
for object control, controlling the collision, grabbing,
using of objects. On the basis of the parent class, a one-
click interactive switch is added and ray interaction is
allowed;

3) Panel Spawn Tooltip Trigger: Control the display and
hide of the object prompt page to help users disassemble
and assemble.

The following will explain the realization of the assembly
function from the unique functions of the part system and the
tool system.

(1) Component system implementation
For a ﬁxed model engine, its composition generally does
not change. So we directly edit
its script and conﬁgure
properties for each component model. For components, they
can be divided into two categories: tool-dependent and non-
tool-dependent. Tool-dependent components refer to compo-
nents that need to be operated with tools of a ﬁxed type,
while non-tool-dependent components are components that
can be operated without tools. Some of these components
have preconditions, and operations cannot be performed if the
preconditions are not completed. The part-speciﬁc scripts are
as follows:

1) DA Obj Ctr: Components control script, mainly divided
into two sub-categories according to whether the tool
is dependent or not: VRDA Screw and VRDA Parts
Ctr, which mainly control the operability of parts, the
playback of disassembly animation, state control, etc.;
2) Disappear Effect: The disappearance effect of the ob-
ject, which controls the movement direction, distance,
duration, etc. of the object when the parts are disassem-
bled.

If the tool-dependent components depend on the combina-
tion of wrench tools, an additional Wrench DA Script script
needs to be added, as shown in Listing 1, in the property
interface of the editor to control the type of tools used and
other details required for disassembly.

public class WrenchDAScriptV2
{

public Transform wrenchUsePos;
public bool matchPosDirection = true;
public WrenchUseCondition
wrenchUseCondition;

public ScrewOutLevel screwOut =

ScrewOutLevel.TwoCM;
public float customOutLevel;
public bool autoFix;

}
public struct WrenchUseCondition
{

public string banshouID;
public string fixBanshouID;
public string jieganID;
public string taotongID;
public bool needJiegan;
public int minFixTorsionRange;
public int maxFixTorsionRange;

}

Listing 1: Wrench Script Class

(2) Tool system implementation
The tool system differs from the part system in that it
uses a relatively high repetition rate and relatively low coding
complexity. But because of this, it needs to be more versatile.
In the project, most of the tools used are combinations of
wrenches, posts and sockets. Other tools have special script
control. We only focus on the former, which is the commonly
used combination tools. For wrench, there are the following
script components:

1) VR Wrench Ctr: mainly controls the wrench itself,
such as the combination of data between tools,
the
update of display data, the playback of animation, etc.;
2) Wrench Combine Ctr: controls the combination logic

of wrench, post and socket.

For a post or a wrench, it is represented as a combinable
tool by adding the Combine Able Wrench Parts component,
and the combination logic of the combined tool is controlled
by this component. All the combinable tools are placed in the
toolbox, and other special tools are placed together with the
toolbox on the tool table for users to access at any time when
the program is running.

The tools vary from model to model, and so do the com-
binations. For ease of development and conﬁguration, we use
CSV ﬁles to deﬁne composition rules between control tools.
For a wrench, its Kit property deﬁnes a list of combinable tool
ids. During the actual combination process, only the tools in
this list can be combined with the wrench.

2) Task module: This project is divided into three modes
in total. For each mode, the operations that the user needs to
perform are consistent, that is, to perform step-by-step opera-
tions with a single part as the granularity under the guidance
of the task, the difference is only with or without guidance and

JOURNAL OF LATEX CLASS FILES, VOL.

5

Fig. 2: Task Composition

real-time scoring . Starting from the requirements, the entire
assembly process is divided into several large tasks, each task
is divided into step groups, and the step group is composed
of some small steps.

The ﬁrst big task of disassembly is shown in Figure 2 -
engine attachment removal. The task of engine attachment
removal can be broken down into eleven step groups, the
ﬁrst two of which are shown in the ﬁgure. Further subdi-
visions are steps. The ﬁrst few steps we complete the task
of disassembling the engine attachments are draining the
oil, removing the oil ﬁlter, removing the turbocharger nut,
removing the exhaust manifold assembly and removing the
exhaust manifold assembly heat shield. The contents of these
tasks are conﬁgured in the csv ﬁle.

In the task module, we record data such as the completion
of steps in the running process, error operations, scores, etc.,
and also provide many functions such as initializing task data,
checking the completion of steps, and submitting tasks for use
by other modules.

When the task is selected through the pad, the task module
obtains the task id that needs to be initialized from the global,
all objects determine their own state according to the task, and
provide the user with the starting scene of the task. During the
running process, whenever the state of the part changes, a state
change message will be sent, and the progress information of
the task module will be updated in the registered callback.
When submitting a task, calculate the user’s ﬁnal score and
restore the task-related information of the entire scene.

III. SYSTEM TESTING AND OPTIMIZATION

A. Testing target

1) Verify the functional integrity and correctness of the
virtual reality engine disassembly and assembly teaching
software;

2) Verify the performance requirements of the virtual real-

ity engine disassembly teaching software.

B. Testing method and content

1) Function testing: The functional test is mainly used to
verify the functional integrity and correctness of the virtual
reality engine disassembly and assembly teaching. The test
method is to package and release the software, use VR
equipment to simulate real usage scenarios, test the functions
deﬁned by the requirements one by one, and test the functions.
We need to test each function about whether it is included and
the running result is as expected. The key required function
points are as follows:

1) Pad can normally jump to the corresponding page and

execute the corresponding logic;

2) The large screen can normally display the completion

progress of the steps;

3) The tool can be assembled normally;
4) Components can be disassembled and installed nor-

mally;

5) Tools and components display correct specular effects;
6) The task steps can be carried out normally;
7) Auxiliary functions such as video learning and general

engine animation can run normally.

2) Performance testing: According to the virtual reality ex-
perience standard technical white paper, the user’s immersive
experience quality, video viewing experience, and interactive
experience quality are all important components of the quality
of virtual reality products [27], [28]. Immersive experience
quality, including screen resolution, running frame rate, etc.,
is an important performance criterion for us.

Most of the standards such as screen resolution are de-
termined by the hardware, and the running frame rate is an
indicator that we can mainly test and optimize if there are
problems. Generally speaking, VR products can only give
users a better experience when they reach 90fps. In addition, if
there is a performance indicator that is obviously not achieved,
even if the software is not signiﬁcantly stuck in subjective
experience, this indicator needs to be optimized.

We use Unity UPR, a professional performance detection
tool ofﬁcially launched by Unity, to test software performance.
When we run the packaged software and open the UPR

More steps...Dismantling of the turbochargerRemove the turbocharger nutRemove the exhaust manifold assemblyRemove the exhaust manifold assembly heat shieldOil drainage and removal of the oil filterDrain the oilRemove the oil filterEngine attachment removalJOURNAL OF LATEX CLASS FILES, VOL.

6

desktop version, we can upload the running information to
the server during local testing, and then view the performance
information on the web page.

C. Hardware environment

The environment for testing performance is as follows:
1) Desktop:

intel 8-core i7-8700 CPU, 16G memory,

NVIDIA GeForce GTX 1080 discrete graphics;

2) VR equipment: HTC Vive head-mounted display device

and accessories, HTC Vive infrared base station.

D. Testing data

TABLE II: UPR Test Data

Performance point
Average Frame Rate
Mean Frame Time
Memory Reserved Total Peak(MB)
DrawCall Peak(times)

Value
68.52
15.06ms
1523.583
880

We test the integrity and correctness of system functions
according to the test cases in section III-B1. For each use
case, we run multiple rounds of testing. The test results show
that the functions involved in each use case have been fully
implemented, and the results produced by executing the use
case are as expected.

We use Unity UPR to test the packaged program, and the
key performance data obtained are shown in Table II. We
found that the performance of the project is relatively good,
the memory consumption is kept at about 1.5GB. The project
running process is relatively smooth, and there is no lag.
But there are also problems. The average running frame rate
remains at around 68FPS, which has not met expectations. We
pick two entry points:

1) The Vsync module consumes a relatively long time, and
this module is related to the vertical synchronization
switch of the program;

2) There are too many DrawCalls. This function is related

to the rendering logic inside Unity.

In the following, we will optimize from these two per-
spectives and analyze the performance data before and after
optimization.

E. V-Sync optimization

Vertical Sync (V-Sync), from the perspective of the display
principle of CRT monitors, the entire screen is composed of
pixels. For each display screen, horizontal pixels are generated
from left to right, and then vertical pixels are generated from
top to bottom to form a complete screen. The graphics card
digital-to-analog conversion circuit (DAC) controls the refresh
rate of the display, and the graphics card DAC generates a
vertical synchronization signal after scanning a frame. Turning
on VSync in the game or engine editor means passing the
VSync signal to the graphics card for 3D graphics processing,
so that the VSync signal restricts the generation of the graphics
card’s 3D graphics to avoid screen tearing.

There are three options for vertical sync in the Unity editor:
1) Don’t Sync: Do not turn on vertical synchronization,
the display start drawing after the

and directly let
graphics card draws a picture;

2) Every V Blank: Turn on vertical sync and synchronize

on every vertical sync signal;

3) Every Second V Blank: Turn on V-Sync and synchro-

nize with the V-Sync signal every second.

By default, the Unity editor selects Every V Blank, making
the program’s frame rate completely controlled by the vertical
sync signal. When this project is running, the content in the
ﬁeld of view does not change rapidly. Turning off the vertical
sync will not cause screen tearing. Turning on the vertical sync
will cause the program to wait for the vertical sync signal to
occupy excess CPU during the running process. Therefore,
choose to turn off the vertical sync. At the same time, it is
necessary to specify a frame rate higher than expected in the
code, so that the program is really not controlled by the vertical
sync signal when it runs.

We test the applications before and after the vertical syn-
chronization is turned off. VS_On means to turn on the vertical
synchronization, and VS_Off means to turn off the vertical
synchronization. The test data is shown in Table III.

TABLE III: V-Sync Optimization

Case

VS_On
VS_Off

Maximum frame
time/ms
470.21
445.72

Average frame
time/ms
15.06
3.94

Average frame
rate
65.61
264.28

We found that after turning off VSync, both the highest
frame time and the average frame time were reduced, espe-
cially the average frame time was reduced by 74%, which
greatly optimized the performance. At the same time, the
average number of frames has increased by 300%, and the
smoothness of the picture has also been greatly improved. It
can be seen that turning off vertical synchronization is ideal
for the performance optimization of this project.

F. DrawCall optimization

In Unity, the CPU prepares data such as models, materials,
and textures, and the process of passing these data to the GPU
to draw the picture becomes a DrawCall. In order for the CPU
and GPU to work in parallel, there is a command buffer, the
CPU adds commands to it, and the GPU reads commands from
it. The CPU addition command needs to prepare the rendering
object, set the rendering state, output the rendering primitive
and other calculations. If too many DrawCalls are used to draw
the same page, it will bring huge computing pressure to the
CPU and affect the performance of the program. We found
from the performance data that the number of DrawCalls in
the program is too many, so we need to reduce the number of
DrawCalls.

Using batching techniques can reduce the number of Draw-
Calls very well. Batch processing refers to processing multiple
objects at a time, and only objects using the same material can
be processed in batches. Batch processing in Unity is divided

JOURNAL OF LATEX CLASS FILES, VOL.

7

into dynamic batch processing and static batch processing: dy-
namic batch processing is basically automatically processed by
the engine. As long as it is a dynamic object that can be moved
and transformed, the engine will determine whether to perform
dynamic batch processing, but it can really be batched. The
processed objects need to meet many requirements such as
the maximum number of vertices, lighting and shadows; static
batching means that objects that are set to be immovable can
be batched when using the same material, but may take up
more memory.

TABLE IV: DrawCall Optimization

Case

AllDynamic
SetStatic

Maximum number
of DrawCalls
880
795

Average number
of DrawCalls
796.346
663.618

We set the objects that do not need to be moved as static
objects, and test the applications before and after optimization.
AllDynamic refers to the program that did not set static objects
before optimization, and SetStatic refers to the program after
setting static objects for optimization. The test data is shown
in Table IV.

We found that after turning on the static object switch of
some objects, the maximum number of DrawCalls and the
average number of DrawCalls were reduced by 9.7% and
16.8% respectively, which greatly optimized the performance
of the project.

IV. EXPERIMENT ON TEACHING EFFECT

As a virtual reality teaching software, we should also focus
on its teaching signiﬁcance. In order to test the teaching effect
of the software, we selected two groups of students to conduct
experiments. The experimental contents were the traditional
teaching effect test and the VR teaching effect test.

The students we selected are all fourth-year students in our
school, and they have absolutely no knowledge and experience
in engine disassembly and assembly. We selected the ﬁrst
major task of disassembly as the experimental content, and
let two groups of students learn by watching the teaching
ppt and using this VR teaching software. After learning, let
two groups of students evaluate the learning process by ﬁlling
out questionnaires, and the experimental results obtained are
shown in Figure 3 and Figure 4. The questions are as followed:

1) Question 1: Do you think you have mastered the

disassembly process perfectly?

2) Question 2: Whether the learning process of this project

can increase your interest to continue learning?

3) Question 3: After completing the study, can you accu-

rately identify the tools you need to use?

%

%

60

40

20

0

60

40

20

0

5

4

3

2

1

Question 1

Question 2

Question 3

Fig. 3: Traditional teaching result

5

4

3

2

1

Question 1

Question 2

Question 3

Fig. 4: VR teaching result

V. SUMMARY

it

At present,

is difﬁcult for vocational colleges in the
automotive industry to carry out practical teaching due to
insufﬁcient funding, limited space resources and safety haz-
ards, and teaching is basically based on theoretical teaching.
This leads to insufﬁcient motivation for students to learn
and difﬁculty in mastering knowledge to the required degree.
Therefore, it makes sense to integrate virtual reality technology
into the teaching of the automotive industry. Virtual reality
technology has developed rapidly in recent years and has
been widely used in various ﬁelds of military and medical
care, so it is feasible and important to develop an engine
disassembly and assembly teaching software based on virtual
reality technology.

We found that students who use VR teaching software
to learn are more motivated and more conﬁdent
in their
learning outcomes than students who use traditional methods
of theoretical
learning. Therefore, our engine disassembly
teaching software based on virtual reality has certain educa-
tional signiﬁcance.

In this paper, we developed an engine disassembly teaching
software from scratch based on the requirements proposed by
the company from a teaching scenario using Unity 3D. A clear
and distinct system architecture was designed in the software,
and the user interface, assembly system, and task system were
developed modularly based on the designed system to develop

JOURNAL OF LATEX CLASS FILES, VOL.

8

[15] G. Siemens, “Connectivism: A learning theory for the digital age,”
international journal of instructional technology and distance learning,
2004.

[16] L. Xiao, “Virtual

interactive reproduction of historical and cultural

scenes in northwest china(in chinese),” Ph.D. dissertation, 2018.
[17] G. Lan, J. Chen, and A. E. Eiben, “Simulated and real-world evolution
of predator robots,” in 2019 IEEE Symposium Series on Computational
Intelligence (SSCI).
IEEE, 2019, pp. 1974–1981.

[18] G. Lan, J. Chen, and Eiben, A. E., “Evolutionary predator-prey robot
systems: From simulation to real world,” in Proceedings of the Genetic
and Evolutionary Computation Conference Companion, 2019, pp. 123–
124.

[19] G. Lan, J. Benito-Picazo, D. M. Roijers, E. Domínguez, and A. E. Eiben,
“Real-time robot vision on low-performance computing hardware,” in
2018 15th international conference on control, automation, robotics and
vision (ICARCV).

IEEE, 2018, pp. 1959–1965.

[20] G. Lan, L. De Vries, and S. Wang, “Evolving efﬁcient deep neural
networks for real-time object recognition,” in 2019 IEEE Symposium
Series on Computational Intelligence (SSCI).
IEEE, 2019, pp. 2571–
2578.

[21] H. Chao, T. Feng, and C. Ling Wei, “Application of vr in education and
training: A survey(in chinese),” Audio Engineering, vol. 41, no. 11, p. 8,
2017.

[22] G. Feng, Z. De Yao, L. Dan, L. Guan Fu, Y. Qian, and Y. Su Lian, “De-
velopment of ar teaching software for automobile engine construction
and maintenance based on unity 3d(in chinese).”

[23] Y. Ke Rong and Y. Li, “Thoughts on improving the teaching efﬁciency
of engine disassembly and assembly training course(in chinese),” jiaoyu
jiaoxue luntan, vol. No.455, no. 09, pp. 316–317, 2020.

[24] G. Lan, J. M. Tomczak, D. M. Roijers, and A. E. Eiben, “Time efﬁciency
in optimization with a bayesian-evolutionary algorithm,” Swarm and
Evolutionary Computation, vol. 69, p. 100970, 2022.

[25] G. Lan, M. De Carlo, F. van Diggelen, J. M. Tomczak, D. M. Roijers,
and A. E. Eiben, “Learning directed locomotion in modular robots with
evolvable morphologies,” Applied Soft Computing, vol. 111, p. 107688,
2021.

[26] G. Lan, M. van Hooft, M. De Carlo, J. M. Tomczak, and A. E. Eiben,
“Learning locomotion skills in evolvable robots,” Neurocomputing, vol.
452, pp. 294–306, 2021.

[27] G. Lan, Z. Luo, and Q. Hao, “Development of a virtual reality tele-
conference system using distributed depth sensors,” in 2016 2nd IEEE
International Conference on Computer and Communications (ICCC).
IEEE, 2016, pp. 975–978.

[28] G. Lan, J. Sun, C. Li, Z. Ou, Z. Luo, J. Liang, and Q. Hao, “Development
of uav based virtual reality systems,” in 2016 IEEE International Con-
ference on Multisensor Fusion and Integration for Intelligent Systems
(MFI).

IEEE, 2016, pp. 481–486.

and conﬁgure the required functions of the software.

After completing the functional requirements development,
we conducted a complete functional and performance test of
this software. For functional testing, we designed test cases
for the requirement points and conducted multiple rounds
of testing to verify the completeness and correctness of the
functionality. For performance testing, we used Unity UPR
to monitor and record the performance data of the running
software, and to tune the unsatisfactory performance data. We
reduced cpu time by turning off vertical synchronization to
increase frame rate. We reduced the number of DrawCall by
turning on static switches and using static batching with the
same materials whenever possible, which ultimately resulted
in performance data that met the criteria.

Finally, we delivered the product to the company for im-
plementation into practical vocational education applications.
We hope that in the future, virtual reality technology can be
applied to education more often to achieve the integration of
technology and education and cultivate more talents.

REFERENCES

[1] G. Lan, J. Liang, G. Liu, and Q. Hao, “Development of a smart ﬂoor
for target localization with bayesian binary sensing,” in 2017 IEEE
31st International Conference on Advanced Information Networking and
Applications (AINA).
IEEE, 2017, pp. 447–453.

[2] H. Xu, G. Lan, S. Wu, and Q. Hao, “Online intelligent calibration of
cameras and lidars for autonomous driving systems,” in 2019 IEEE
Intelligent Transportation Systems Conference (ITSC).
IEEE, 2019,
pp. 3913–3920.

[3] S. Ai Lian, “The application study of the virtual reality technique in
auto electronics teaching of higher vocational education(in chinese),”
Journal of Human Institute of Science and Technology, vol. 24, no. 4,
p. 3, 2011.

[4] W. Min Fei, S. Lin Yan, Z. Shuai Wu, and Z. Kai, “Application
of virtual reality technology in information teaching of automobile
repairing specialty(in chinese),” Journal of Hubei Industrial Polytechnic,
vol. 30, no. 2, p. 4, 2017.

[5] L. Tingting, D. Nannan, and Q. Chenyu, “Research on the application of
vr technology in vocational education and teaching-based on the ﬂipped
classroom teaching mode of auto repair major(in chinese),” Auto Time,
no. 20, p. 2, 2021.

[6] L. Juan, “Virtual reality and its application in teaching of automobile
maintenance(in chinese),” Xinkecheng Xuexi (shehuizonghe), no. 11,
2014.

[7] G. Lan, M. Jelisavcic, D. M. Roijers, E. Haasdijk, and A. E. Eiben,
“Directed locomotion for modular robots with evolvable morphologies,”
in International Conference on Parallel Problem Solving from Nature.
Springer, 2018, pp. 476–487.

[8] L. De Fu, “Application of 3d virtual simulation technology in auto-
mobile maintenance teaching(in chinese),” Ph.D. dissertation, Shenzhen
University, 2017.

[9] G. Lan, T. Liu, X. Wang, X. Pan, and Z. Huang, “A semantic web
technology index,” Scientiﬁc Reports, vol. 12, no. 1, pp. 1–10, 2022.

[10] Z. Gao and G. Lan, “A neat-based multiclass classiﬁcation method
with class binarization,” in Proceedings of the Genetic and Evolutionary
Computation Conference Companion, 2021, pp. 277–278.

[11] L. Min Jie, “Research on virtual simulation training teaching of sec-
ondary vocational auto repair(in chinese),” Ph.D. dissertation, Zhejiang
University of Technology, 2011.

[12] A. Ferrero and V. Piuri, “A simulation tool for virtual laboratory exper-
iments in a www environment,” IEEE Transactions on Instrumentation
and Measurement, vol. 48, no. 3, pp. 741–746, 1999.

[13] C. Su, W. Xu, and C. Feng Kuang, “A case study of augmented reality
simulation system application in a chemistry course,” Computers in
Human Behavior, vol. 37, p. 31–40, 2014.

[14] V. Potkonjak, M. Gardner, V. Callaghan, P. Mattila, C. Guetl, V. M.
Petrovic, and K. Jovanovic, “Virtual laboratories for education in sci-
ence, technology, and engineering: A review,” Computers and Education,
vol. 95, no. Apr., pp. 309–327, 2016.

