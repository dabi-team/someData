2
2
0
2

y
a
M
8
1

]
h
p
-
p
e
h
[

1
v
5
1
8
8
0
.
5
0
2
2
:
v
i
X
r
a

HIP-2022-11/TH
NORDITA 2022-030

DRalgo: a package for eﬀective ﬁeld theory approach for
thermal phase transitions

Andreas Ekstedta,b,c,∗, Philipp Schichod,†, and Tuomas V. I. Tenkanene,f,g,‡

aDepartment of Physics and Astronomy, Uppsala University,
P.O. Box 256, SE-751 05 Uppsala, Sweden

bII. Institute of Theoretical Physics, Universit¨at Hamburg, D-22761, Hamburg, Germany

cDeutsches Elektronen-Synchrotron DESY, Notkestr. 85, 22607 Hamburg, Germany

dDepartment of Physics and Helsinki Institute of Physics,
P.O. Box 64, FI-00014 University of Helsinki, Finland

eNordita, KTH Royal Institute of Technology and Stockholm University,
Roslagstullsbacken 23, SE-106 91 Stockholm, Sweden

fTsung-Dao Lee Institute & School of Physics and Astronomy,
Shanghai Jiao Tong University, Shanghai 200240, China

gShanghai Key Laboratory for Particle Physics and Cosmology, Key Laboratory for Particle
Astrophysics and Cosmology (MOE), Shanghai Jiao Tong University, Shanghai 200240,
China

Abstract

DRalgo is an algorithmic implementation that constructs an eﬀective, dimensionally reduced,
high-temperature ﬁeld theory for generic models. The corresponding Mathematica package
automatically performs the matching to next-to-leading order. This includes two-loop thermal
corrections to scalar and Debye masses as well as one-loop thermal corrections to couplings.
DRalgo also allows for integrating out additional heavy scalars. Along the way, the package
provides leading-order beta functions for general gauge-charges and fermion-families; both
in the fundamental and in the eﬀective theory. Finally, the package computes the ﬁnite-
temperature eﬀective potential within the eﬀective theory. The article explains the theory of
the underlying algorithm while introducing the software on a pedagogical level.

 
 
 
 
 
 
Contents

1 Introduction

1.1 Prologue: dimensional reduction at next-to-leading-order . . . . . . . . . . . .

2 Installation and running

2.1
Installation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 Model implementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.3 Running the dimensional-reduction algorithm . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . .
2.4
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.5 Two-loop eﬀective potential

Integrating out temporal scalars

3 Theory behind the scenes: dimensional reduction of a generic model

3.1 Lagrangian in the 4d fundamental theory . . . . . . . . . . . . . . . . . . . .
3.2 Lagrangian in the 3d eﬀective theory . . . . . . . . . . . . . . . . . . . . . . .
3.3 Matching . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.4 Beta functions and anomalous dimensions . . . . . . . . . . . . . . . . . . . .

4 Implementing beyond the Standard Model theories

4.1 Two-Higgs doublet model with fermions . . . . . . . . . . . . . . . . . . . . .

5 Miscellaneous features

5.1 User-options and features
5.2 Model-treatment in the code
5.3 Frequently asked questions

. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .

6 Outlook

A Interfacing DRalgo output

A.1 From 3d eﬀective theory to thermodynamics . . . . . . . . . . . . . . . . . . .

3
4

8
8
9
11
13
14

15
15
18
19
22

23
23

28
28
28
29

37

39
39

∗andreas.ekstedt@desy.de
†philipp.schicho@helsinki.ﬁ
‡tuomas.tenkanen@su.se

1

Program summary

Program title: Dimensional Reduction algorithm (DRalgo)
Version: 1.0
Developer’s repository link: https://github.com/DR-algo/DRalgo
Licensing provisions: GNU General Public License 3 (GPLv3)
Programming languages: Mathematica
External routines/libraries: GroupMath [57]
Nature of problem: Construction of high-temperature eﬀective ﬁeld theories for beyond the
Standard Model physics.
Solution method: Matching of n-point correlation functions using tensor-notation of cou-
plings [60–64].
Restrictions: Mathematica version 12 or above.
Operating system: macOS 11 and higher, Linux Ubuntu 18.04.

2

1.

Introduction

The origin of Baryon asymmetry [1] in the universe remains obscure. As such, much powder
has been spent throughout past decades to ﬁnd a sound explanation of this asymmetry [2–5].
Amongst the suggested mechanisms, the one based on the electroweak phase transition –
electroweak baryogenesis – stands out. While the Standard Model (SM) has no strong ﬁrst-
order transition on its own [6–8], its extensions can contain myriads of them. For new ﬁeld
content to trigger a strong ﬁrst-order phase transition, their masses have to be around the
electroweak scale, and their interaction with the SM Higgs cannot be too feeble. Beyond-the-
Standard-Model (BSM) theories that exhibit such transitions provide a direct target for many
future-generation colliders [9, 10]. Furthermore, thermal phase transitions can, perchance,
generate gravitational waves that are observable by next-generation space-based detectors
such as LISA [11], DECIGO [12], Taiji [13] and BBO [14]. These waves might open a fresh
window into the early universe – and the underlying quantum ﬁeld theory.

The interplay between BSM phenomenology and gravitational waves is among the most ac-
tively studied topics in the high-energy-physics literature [15–25]. This interplay requires solid
understanding of thermodynamic properties of diﬀerent models. It has been long known that
determining thermodynamics in theories with non-Abelian gauge ﬁelds is challenging because
of the Linde problem [26]. In short, there are non-perturbative eﬀects arising from massless
vector-bosons: these infrared (IR) eﬀects can only be captured by lattice simulations [27]. De-
spite this, leading-order perturbation theory is frequently used as an approximation. However,
it has been pointed out that such leading-order studies contain large theoretical uncertainties,
due to slow convergence of perturbation theory [20, 28–30].

Dimensional reduction [31, 32] oﬀers a way to overcome these challenges. In this frame-
work, ultraviolet (UV) modes – related to non-zero Matsubara modes in the imaginary time
formalism – are integrated out. The resulting eﬀective ﬁeld theory (EFT) [33, 34] describes
IR, or long wavelength zero modes, living in three spatial dimensions (3d) (cf. also [35–37]).
The 3d EFT can be simulated on a lattice and hence by-pass the Linde problem [27, 38].
Dimensional reduction can also be viewed as a systematic scheme for thermal resummations,
used purely within the realm of perturbation theory [29]. To leading order, dimensional re-
duction is equivalent to resummation via thermal masses. Concretely, the eﬀective potential,
that describes the free energy of thermal plasma, is commonly given in a schematic form [28]

Veﬀ ≃ VT =0 + VT + Vdaisy .

(1.1)

Here, VT =0 is the Coleman-Weinberg zero-temperature contribution, which is often aug-
mented with the eﬀective potential at one-loop level. Namely, VT is the thermal correction at
one-loop (commonly in the high-temperature expansion) and

Vdaisy ≃ −

T
12π

h

(m2 + ΠT )

3

2 − (m2)

3
2

.

(1.2)

i

3

Here m2 represents a ﬁeld-dependent mass and ΠT ∼ g2T 2 is a one-loop thermal correction.
It is the ﬁrst term in eq. (1.2) that implements the resummation.1 This resummed mass, for
zero Matsubara modes arises from thermal corrections due to non-zero Matsubara modes.
Physically, this corresponds to thermal screening: UV modes in the plasma screen IR modes.
In eq. (1.1) all contributions are evaluated at one-loop order, which means that only masses
are resummed. However, at high temperatures, the perturbative expansion is controlled by
g, rather than g2 as in a zero-temperature loop expansion. Dimensional reduction makes it
possible to systematically include higher order resummations, in particular two-loop thermal
masses and one-loop resummation of couplings and ﬁelds which are also aﬀected by thermal
screening. Hence, dimensional reduction can be used to include important next-to-leading
order thermal eﬀects. In particular, renormalization-group (RG) improvements require two-
loop computations at high temperatures [28, 30]; these are straightforward to implement in
the 3d EFT approach [29].

To date there are sundry studies using dimensional reduction in electroweak theories [20,
21,23,25,29,33,35–37,39–42]. For similar studies in hot QCD, see [43,44]. Still, many models
remain to be studied within the dimensional-reduction framework [45–48].

Along with this article, we launch the Mathematica package DRalgo to implement dimen-
sional reduction automatically for user-deﬁned models. This package calculates parameters
in the 3d EFT. For example, DRalgo calculates two-loop thermal masses, eﬀective couplings,
and beta functions. The package also allows users to integrate out heavy scalars and temporal
(Debye) scalars. Furthermore, DRalgo can be used to compute the two-loop thermal eﬀective
potential within the eﬀective theory. Subsequently, the 3d EFT matching relations can be
implemented to lattice Monte Carlo simulations. The algorithm 1 illustrates this pipeline.
This package can be applied to models previously studied in the electroweak and dark-sector
phase-transition literature.

The remainder of this article is organised as follows. Section 1.1 brieﬂy introduces dimen-
sional reduction and matching relations. Section 2 explicates the front-end of the package, its
installation, and gives a tutorial based on the Abelian-Higgs model. Section 3 reviews theory
and computations in the back-end of the package. Section 4 illustrates additional features by
implementing a two-Higgs doublet model. In section 6, we discuss future prospects and possi-
ble updates of the package. Finally, appendix A displays the computation of thermodynamical
observables using the output of DRalgo for the Abelian-Higgs model.

1.1. Prologue: dimensional reduction at next-to-leading-order

At leading order (LO) scalars obtain familiar one-loop thermal masses, while temporal (longi-
tudinal) scalars get Debye masses. At next-to-leading order (NLO) couplings are resummed,

1The second ∼ T m3 term in eq. (1.2) removes double counting; the same contribution is included VT but

with unresummed mass. This term is related to the Matsubara zero-mode contribution.

4

Algorithm 1 DRalgo algorithm outline in alignment with ﬁg. 2 of [49]. The use of lattice re-
sources is indicated as an optional path. The functions PerformDRhard[], PerformDRsoft[]
and CalculatePotentialUS[] are part of DRalgo.

Input: Four-dimensional Lagrangian L4d with parameters {c1, . . . , cn}, temperature T ,
physical parameters, heavy masses M
Start: Initialize model
Call PerformDRhard[] {

for all ci ∈ {c1, . . . , cn} do

Compute 4-dimensional β-functions β(ci)
Compute ci,3d(T, M ) by integrating out non-zero Matsubara modes

end for
Compute thermal (Debye) masses mD,i(T, M )
Compute couplings that involve temporal vector ﬁelds

}
Output/Input: Three-dimensional soft Lagrangian L3d with parameters {c1,3d, . . . , cn,3d}
Call PerformDRsoft[] {

for all ci,3d ∈ {c1,3d, . . . , cn,3d} do

Compute 3-dimensional β-functions β3d(ci,3d)
Compute ¯ci,3d(T, c1,3d, . . . , cn,3d) by integrating out massive temporal scalars

end for

}
Output: Three-dimensional ultrasoft Lagrangian ¯L3d with parameters {¯c1,3d, . . . , ¯cn,3d}
if Lattice resources then

Compute lattice continuum relations to construct Llattice
Monte Carlo simulation

3d

else

Call CalculatePotentialUS[] {

Compute eﬀective potential V 3d

eﬀ (m2

i,3d) up to two-loops

}
end if
Compute thermodynamic parameters Tc, L/T 4
c

5

and scalars receive two-loop thermal masses. DRalgo also calculates two-loop Debye masses.
Corrections at NLO are particularly important due to large logarithms. The idea with di-
mensional reduction is to render some logarithms (ln ¯µ
T ) small by matching at a high energy
(¯µ ∼ T ). The remaining logarithms can then be resummed by RG-evolution within the EFT.
Phase transitions often occur below the Debye-mass scale. In such cases temporal scalars
can also be integrated out. Thus eﬀectively removing large logarithms of the form ln mD
¯µ ,
where mD is a Debye mass. This second EFT is said to live at the ultrasoft scale, which is
characterised by energies of O(g2T ). In summary,2 the hard scale corresponds to energies
E ∼ T ; the soft scale corresponds to energies E ∼ gT ; and the ultrasoft scale corresponds to
energies E ∼ g2T .

To illustrate next-to-leading order dimensional reduction, we consider a schematic model
with scalar mass parameter µ2, scalar quartic coupling λ, and gauge coupling g. Given the
power counting µ2 ∼ g2T 2, λ ∼ g2, the matching of the mass parameter is

¯µ2

3 =

tree-level
µ2

+

1-loop
#g2T 2

1-loop
#g2µ2 +

2-loop
#g4T 2

+

+ O(g6)

(g2)

O

(g4)

O

+

1-loop
#g2mD
(g3)

O

+

2-loop
#g4

(g4)

O

+ O(g5) ,

(1.3)

where the ﬁrst line (with even powers of g) results from the ﬁrst step, and the second line
(with odd power of g) from second step of the dimensional reduction. In practice, full O(g4)
contributions are included. Going to higher orders, requires a three-loop computation for
both steps of the dimensional reduction. The situation is similar for the coupling:

¯λ3 =

tree-level
T λ

+

(g2)

O

1-loop
#g4

(g4)

O

+ O(g6)

1-loop
# g4
mD

+

2-loop
# g6
m2
D

+

+ O(g5) .

(1.4)

(g3)

O

(g4)

O
In practice for the coupling, O(g4) pieces are neglected since their numerical eﬀect is small
(despite being formally of the same order). These contributions arise during the second step
of the dimensional reduction at two-loop. Pursuing higher order, requires a two-loop compu-
tation for the ﬁrst step, and a three-loop computation for the second step of the dimensional
reduction.

2Some literature [33] interchangeably refers to the hard scale as superheavy, the soft scale as heavy, and

the ultrasoft scale as light.

6

In perturbation theory the deﬁnition of 3d EFT parameters are accompanied with a per-

turbative computation of the eﬀective potential [29]:

+ V 3d

1-loop

+ V 3d

2-loop

+O(g5) .

(1.5)

eﬀ = V 3d
V 3d
tree
(g2)

O
|{z}

(g3)

O
| {z }

(g4)

O
| {z }

Instead of expanding the result in terms of 4d parameters of the parent theory, resummed
couplings and masses are kept along. This improves the overall convergence as the result is
less sensitive to the renormalization scale [50, 51]. The order O(g5) requires a computation
at three-loop level [52–54].

Dimensional reduction from a zero-temperature EFT perspective

It is instructive to consider the same physics from a standard EFT perspective. In particular,
for equilibrium observables we can, analogous to Kaluza-Klein theories [55], view thermal
corrections as an inﬁnite tower of heavy particles. To see the connection with dimensional
reduction, we consider a theory with one light and one heavy scalar in Euclidean spacetime:

L =

1
2

(∂µφ)2 +

1
2

(∂µΦ)2 +

m2φ2 +

1
2

1
2

M 2Φ2 +

1
4

κφ2Φ2 +

1
4!

λφ4 .

(1.6)

Imagine now that there exists a hierarchy M 2 ≫ m2. This is a well-known situation, and
when calculating scattering processes one encounters large corrections to m2 scaling as κM 2
M 2 or ln ¯µ2
– analogous to the hierarchy problem. As well as large logarithms in the form ln ¯µ2
m2 .
One of these logarithms will then be large regardless the choice of the RG-scale ¯µ.

Using thermal masses is equivalent to using a resummation3 m2 → m2 + aκM 2. This re-
summation does, however, not solve our problems of large logarithms. Therefore, calculations,
even with thermal masses, are sensitive to the RG-scale. The situation is much improved by
using an EFT. Therein, the logarithms ln ¯µ2
M 2 are rendered small by matching at the scale
¯µMatch ∼ M , and the remaining logarithms ln ¯µ2
m2 are taken care of by RG-evolution in the
low-energy theory [56].

Once the scalar ﬁeld Φ has been integrated out, the resulting EFT is of the form

Leﬀ =

1
2

(∂µφ)2 +

1
2

m2

eﬀ φ2 +

1
4!

λeﬀ φ4 .

To leading order m2

eﬀ = m2 + aκM 2, and λeﬀ = λ. While at NLO

(1.7)

(1.8)

(1.9)

3This can also be viewed as a temperature-dependent renormalization δT m2 such that m2 = m2+δT m2 [23].

δm2

eﬀ = κ2M 2

b + c ln

δλeﬀ = κ2

(cid:16)
d + e ln

¯µ2
Match
M 2

,

(cid:17)

¯µ2
Match
M 2

,

(cid:17)

(cid:16)

7

where b, c, d, e are numerical coeﬃcients. It is precisely these kind of corrections that appear
in the dimensionally reduced theory.

Finally, to do calculations in the IR, we should run the couplings within the EFT from
¯µMatch ∼ M down to ¯µIR ∼ meﬀ. In this way, all large logarithms are eliminated and pertur-
bative convergence is improved.

In the case of dimensional reduction, we have an inﬁnite tower of heavy particles with
n = (2πnT )2 for all integers n 6= 0.4 Hence, the high-temperature matching scale
masses M 2
IR ∼ g2T 2. Since we are describing equilibrium
is µMatch ∼ T and the low-energy scale is µ2
(static) processes, there is no time dependence – the degrees of freedom of the EFT are static
and live in three dimensions.

2.

Installation and running

This section explains how to install DRalgo and presents a tutorial based on the Abelian-Higgs
model.

2.1.

Installation

The current version of DRalgo, 1.0, is installed by placing all the source ﬁles either in the
applications folder Mathematica/Applications or running Mathematica from the package
root directory ./DRalgo.

The required source ﬁles are outlined in ﬁg. 1. To create model ﬁles, DRalgo uses functions
from GroupMath [57]; see ibid. for its installation. This tutorial uses GroupMath Version 1.1.2
but GroupMath is not required for the dimensional reduction itself. If a model ﬁle is already
available, it can be loaded independently of GroupMath (cf. sec. Q.1). Since GroupMath is an
external package, any use of the model-creation features in DRalgo should be accompanied
by a citation of [57].

To load DRalgo from the Mathematica applications folder Mathematica/Applications,

the following commands need to be executed:

SetDirectory[NotebookDirectory[]];
$LoadGroupMath=True;
<<DRalgo`

Subsequently, we demonstrate the deﬁnition of models, the dimensional reduction, and the
calculation of the two-loop eﬀective potential. All steps are mirrored in the accompanying
./examples/ah.m.

4Fermions have masses of Mn = (2n + 1)πT .

8

DRalgo

DRalgo.m ....................................................package file
Debye.m ........................Creates and organizes temporal scalars
EffPot.m ..........Computation of the effective potential in the EFT
HardToSoft.m ..................................... Matching hard to soft
SoftToUS.m ..................................Matching soft to ultrasoft
ModelCreation.m ........................................Creating a model
examples/..........................................Model example library
ah.m...............................................Abelian-Higgs model
sm.m .................................................... Standard Model
xsm.m ........................... Standard Model and one real scalars
2xsm.m .......................... Standard Model and two real scalars
cxsm.m........................Standard Model and one complex scalar
2hdm.m........................................Two-Higgs Doublet model
3hdm.m......................................Three-Higgs Doublet model
htm.m.....................Standard Model and one real SU(2) triplet
SU5.m.......................................................SU(5) model
LRSymmetric.m.............................Left-Right symmetric model
WessZumino.m........................................Wess-Zumino model
smZp.m .................................. Standard Model and Z ′-bosons

README.md
LICENSE

Figure 1: Outline of the structure of DRalgo. The most relevant ﬁles for this article are
highlighted. Speciﬁc models are discussed in sec. 2 for ah.m and sec. 4 for 2hdm.m.

2.2. Model implementation

As an example, we consider the Abelian-Higgs model with the Euclidean Lagrangian

L =

1
4

Fµν F µν + (Dµφ)† (Dµφ) + V (φ, φ†) ,

V (φ, φ†) = m2φ†φ + λ

φ†φ

2 ,

(2.1)

(2.2)

(cid:0)
where the covariant derivative is Dµ = ∂µ − ig1YφAµ and the corresponding ﬁeld-strength
tensor is Fµν = ∂µAν − ∂νAµ. Here, the ﬁeld Aµ is an U(1) gauge ﬁeld with gauge coupling
g1 and φ is a complex scalar ﬁeld charged under U(1) with general charge Yφ.

(cid:1)

The zero, or temporal, component of the vector ﬁeld receives a thermally induced mass in
the 3d theory. This temporal scalar transforms as a singlet under U(1) and has a Lagrangian

Ltemporal =

1
2

(∂iA0)2 +

1
2

µsqU1A2

0 +

1
4!

λVLL[1]A4

0 +

1
2

λVL[1]A2

0φ†φ ,

(2.3)

where indices i ∈ {1, . . . , d} are spatial. Here, µsqU1 is the temporal-scalar Debye mass
(squared), λVLL[1] is the self-interaction coupling, and λVL[1] is the portal coupling to φ.
The notation above is aligned with the systematic notation of DRalgo. For earlier studies of
this model in the literature, we refer to [35–37, 58, 59].

9

To create a model in DRalgo, we have to specify the gauge group and the scalar represen-

tation. In DRalgo this is done via

Group={"U1"};
CouplingName={g1};
RepAdjoint={0};
Higgs={{Yφ},"C"};
RepScalar={Higgs};
RepFermion={};

Here, the adjoint (vector) representation is trivial for the Abelian Higgs model. In the def-
inition of the Higgs scalar {{Yφ},"C<R>"}, Yφ denotes the gauge charge. One additional
argument is passed depending on if the scalar has a real (R) or a complex (C) representation.
In this simple example, fermions are absent and the corresponding bracket is empty. While
not relevant for this model, note that fermions are never part of the 3d EFT Lagrangian as
they are integrated out during the ﬁrst step of the dimensional reduction. The model-input
from the gauge sector is generated with the command

{gvvv,gvff,gvss,λ1,λ3,λ4,µij,µIJ,µIJC,Ysff,YsffC}=

AllocateTensors[Group,RepAdjoint,CouplingName,RepFermion,RepScalar];

The tensors listed above have the following correspondence

gvvv
gvff
gvss
λ1
λ3
λ4
µij
µIJ, µIJC

structure constants
vector-fermion trilinear couplings
vector-scalar trilinear couplings
scalar tadpole couplings
cubic couplings
quartic couplings
scalar-mass matrix
fermion-mass matrices

Ysff, YsffC Yukawa couplings

and their purpose is described in depth in sec. 3. By default all these tensors, except for the
gauge ones, are empty. While their order on the left hand side of AllocateTensors is ﬁxed,
the above naming of {gvvv,...,YsffC} is arbitrary.

The next task is to specify the scalar potential. Let us start with the mass matrix. There

is only one allowed term: φφ†. This term is selected via

InputInv={{1,1},{True,False}};
MassTerm1=CreateInvariant[Group,RepScalar,InputInv][[1]]//Simplify;
VMass=msq*MassTerm1; (* corresponds to a term 1

2 m2φφ† *)

10

µij=GradMass[VMass];

To understand the syntax, recall that we deﬁned our scalar as RepScalar={Higgs}. Then
{1,1} speciﬁes that we are after a term with two (RepScalar[[1]]) φ ﬁelds. For general
models, the index 1 can be replaced by any index in RepScalar as deﬁned by the user. In
addition, {True,False} speciﬁes that we are after the φφ† term and conversely {True,True}
corresponds to a φφ term. The latter term, however, is not allowed in this example due to
gauge invariance. Since this example exhibits merely one U(1) invariant combination of φ and
φ†, we specify [[1]] in the CreateInvariant output.

For the quartic tensor only one possible term arises, namely (φφ†)2. We already created a

(φφ†) term above, which can be reused to ﬁnd the quartic:

VQuartic=λ*MassTerm1^2;
λ4=GradQuartic[VQuartic]

To see how quartic and mass terms are composed of scalar-ﬁeld components, one can inspect
the variables VMass and VQuartic.

This completes the model implementation, and we now have all ingredients to do the

dimensional-reduction step.

2.3. Running the dimensional-reduction algorithm

First we need to load the model with the command

ImportModelDRalgo[Group,gvvv,gvff,gvss,λ1,λ3,λ4,µij,µIJ,µIJC,Ysff,YsffC,Verbose->False];

Since the gauge group was previously deﬁned, the corresponding Debye masses are automat-
ically generated and named. The option Verbose->False disables all progress messages.

The actual dimensional reduction is performed with the command

PerformDRhard[];

This calculates all thermal masses, eﬀective couplings, β-functions and anomalous dimensions.
For example, gauge and scalar couplings are given by

PrintCouplings[]
4
1 LbT Y
1T − g
ng13d2 → g2
48π2

2
φ

, λ3d → T (g

4
1 Y

4
φ (2−3Lb)+6g

2
φ λLb+2λ(8π

2
1 Y
16π2

2

−5λLb))

o

where the output is a replacement rule. The variables Lb and Lf are dependent on the 4d-

11

renormalization scale (¯µ) and the temperature (T ) [29, 33]. They are

¯µ2
T 2

(cid:16)

(cid:17)

Lb = ln

+ 2γE − 2 ln(4π) ,

Lf = Lb + 4 ln(2) ,

(2.4)

where γE is the Euler-Mascheroni constant. Further information about the functional basis of
the eﬀective parameters is collected in sec. Q.11. The corresponding deﬁnitions of constants,
along with other shorthand notations, are shown with the command

PrintConstants[]

The above RG-scale ¯µ is the hard matching scale, and should be chosen as ¯µ ∼ T to avoid
large logarithms.5 Eﬀective mass parameters are divided into scalar and temporal-scalars.
The scalar masses are given by

PrintScalarMass["LO"]
PrintScalarMass["NLO"]

Here, the LO command prints tree-level masses together with one-loop thermal contributions;
the NLO command prints two-loop thermal masses. By default these NLO masses contain
the running from the matching scale (¯µ) to an arbitrary 3d scale (¯µ3).6 The resulting Debye
masses are displayed by

PrintDebyeMass["LO"]
PrintDebyeMass["NLO"]

Mixed temporal-scalar couplings (to NLO) are printed with

PrintTemporalScalarCouplings[]

Such temporal-scalar couplings are denoted as λVLL[a] for V 4 couplings, λVVSL[a] for V 2S
couplings and λVL[a] for V 2S2 couplings, where S represents scalar ﬁelds and V temporal
scalar ﬁelds. The index ‘a’ systematically labels all linearly independent terms.

The coeﬃcient of the unit operator [34], or the hard-mode contribution to the symmetric-

phase pressure, is given by

PrintPressure["LO"]
PrintPressure["NLO"]
PrintPressure["NNLO"]

5In DRalgo the renormalization scales are denoted by µ = ¯µ for the hard scale and µ3 = ¯µ3 for the soft

scale.

6There are diﬀerent ways to express the NLO masses. We refer to sec. Q.11 for further details.

12

Here, LO corresponds to one-loop, NLO to two-loop, and NNLO to three-loop level. The
LO result describes the pressure of an ideal gas, and is given by PLO(T ) = N π2
90 T 4, where
N represents the number of degrees of freedom. For the Abelian Higgs model N = 4 with 2
from the photon and 2 from the complex scalar.

DRalgo also provides anomalous dimensions and beta functions in the parent 4d theory;

see sec. 3.4. Beta functions are printed with the command

BetaFunctions4D[]

Next, to ﬁnd anomalous dimensions we ﬁrst need to specify for which particles we want
them. As DRalgo stores everything in tensor form, we need to ﬁnd the positions of all particles

PosScalar=PrintScalarRepPositions[];

To determine the anomalous dimension of e.g. ScalarRep[[1]], we would write

AnomDim4D["S",{PosScalar[[1]],PosScalar[[1]]}]

See sec. Q.4 for how to obtain anomalous dimensions for vector-bosons and fermions.

2.4.

Integrating out temporal scalars

Temporal scalars are often heavy compared to the ﬁelds driving the phase transition, and can
be integrated out [29, 33]. It should be stressed that this is a user-dependent optional step.
The resulting EFT is said to describe ultrasoft physics. The command is

PerformDRsoft[{}];

Couplings at the ultrasoft scale are given by

PrintCouplingsUS[];

And eﬀective scalar masses are given by

PrintScalarMassUS["LO"];
PrintScalarMassUS["NLO"];

Finally, β-functions for the ultrasoft masses are provided with the command

BetaFunctions3DUS[];

13

In the 3-dimensional theory only scalar masses have non-zero beta functions.

This concludes our tutorial of the dimensional reduction of the Abelian-Higgs model.

2.5. Two-loop eﬀective potential

Once the model is loaded, we can calculate the eﬀective potential. This can be done by
the user, either in the soft or the ultrasoft theory. Alternatively, DRalgo can calculate the
eﬀective potential in the ultrasoft theory. First, we need to create ﬁeld-dependent masses
which requires to specify a vacuum expectation value direction:

DefineNewTensorsUS[µij,λ4,λ3,gvss,gvvv];
φvev={0,φ}//SparseArray;
DefineVEVS[φvev];

Here the vacuum expectation value is in the second, imaginary, Higgs component.

For the calculation to proceed, all mass matrices must be diagonal. If not, an error message
is printed and it is up for the user to diagonalize the matrices; see section Q.16 for an example.
For the model at hand, the mass matrix is diagonal, which the user can conﬁrm by printing
the ﬁeld-dependent masses

FieldMasses=PrintTensorsVEV[]

The eﬀective potential is calculated via

CalculatePotentialUS[]

The results are given by

PrintEffectivePotential["LO"]
PrintEffectivePotential["NLO"]
PrintEffectivePotential["NNLO"]

Here, LO refers to the tree-level, NLO to the one-loop, and NNLO to the two-loop eﬀective
potential. Note that all results are given in Landau gauge. In the (two-loop) NNLO part, the
renormalization scale is denoted by µ3 = ¯µ3.

This completes the ﬁrst tutorial on quick installation and running. Output from the 3d
EFT matching relations can be implemented either to non-perturbative lattice codes, or
perturbative analyses in terms of the eﬀective potential. While such implementations are
left to the user, appendix A displays how to interface DRalgo output in a Mathematica
implementation that determines selected thermodynamic quantities for the Abelian-Higgs

14

model.

3. Theory behind the scenes: dimensional reduction of a generic model

In this section, we dig deeper into the theory and computations in the back-end of the
software. The implementation for dimensional reduction of a generic model is based on tensor-
notation [60–64] that separates Lorentz algebra from group algebra. The Lorentz algebra is
hard-coded, with contractions done by FeynCalc [65, 66] and FORM [20, 67], while the group-
structure is provided by the user.

3.1. Lagrangian in the 4d fundamental theory

Consider a general Lagrangian in Minkowski spacetime with mostly-plus metric: gµν =
diag(−1, 1, 1, 1), {σµ, σν} = −2gµν . In terms of the functional-integral measure and the action
D eiS . Correspondingly, the sigma matrices are deﬁned as
S, the partition function is Z =

where σi are Pauli matrices.

R
σµ =

1, σi

,

σµ =

−1, σi

,

(cid:0)

(cid:1)

(cid:0)

(cid:1)

(3.1)

To write down the Lagrangian, in a ﬂattened form, we employ a basis where all scalars and
vectors are real. In addition, all fermions are composed of two-component Weyl-spinors [68].
The most general, four dimensional, Lagrangian in Minkowski space is [34, 60, 61]

L = −

1
2

Ri(−δij∂µ∂µ + µij)Rj −

− ∂µηa∂µηa + iψ†I σµ∂µψI −

1
2

µν F µν,aδab −
F a

1
4
(M IJ ψI ψJ + h.c.) + Lint ,

1
2ξa

(∂µAa,µ)2

Lint = −λiRi −

λijkRiRjRk −

λjklmRiRjRkRm −

1
3!
µψ†I σµψJ − ga

jkAa

1
4!
µRj∂µRk −

1
2

(Y iIJ RiψI ψJ + h.c)

knAa

µAµ,bRjRk − gabcAµ,aAν,b∂µAc
ν

+ ga

IJ Aa
1
4

−

gabegcdeAµaAνbAc

µAd

ν + gabcAa

jngb
ga

1
2
µηb∂µηc ,

(3.2)

(3.3)

where Lint is the interaction Lagrangian and Fµν = i
g [Dµ, Dν ] is the ﬁeld strength tensor with
the corresponding gauge coupling g. In this notation, the ﬁeld Ri denotes a real scalar-ﬁeld
with scalar-index i. In the Standard Model, i corresponds to the Higgs, neutral Goldstone,
and real/imaginary component of the charged Goldstone. Further, the ﬁeld Aa
µ corresponds
to a real vector-ﬁeld with vector-index a, the ﬁeld η is a ghost-ﬁeld and the ﬁeld ψI is a Weyl-
spinor with fermion-index I. In addition, µij denote (squared) scalar masses, and MIJ fermion
masses. Repeated indices are always summed over irrespective of their vertical placement.

15

Above we denoted YiIJ as Yukawa couplings, λijkl as scalar quartic, λijk as scalar cubic, and
λi as scalar tadpole couplings. The gauge couplings ga
jk are (anti-symmetric) representation
matrices. For example, for an adjoint scalar-representation in SO(3) ga
jk = ǫajk. The abbre-
viation h.c. stands for the hermitian conjugate. The vertical placement of fermion indices is
important; e.g. M IJ = M ∗IJ . We refer to [68] for further details.

In the dimensional-reduction step, hard modes with masses ∼ πT are integrated out.
This is done by matching the fundamental Lagrangian above to the eﬀective Lagrangian
living in three-dimensions. To avoid large logarithms this matching should be performed
close to ¯µ = πT where ¯µ is the RG-scale. This three-dimensional Lagrangian does not contain
fermions. Moreover, in the dimensional-reduction step the temporal component of vectors –
represented by temporal scalar ﬁelds in the EFT – obtain Debye masses, as well as thermally
generated interactions with other scalars.

The matching is straightforward using Euclidean signature. This is achieved by redeﬁning

0 ≡ iAE,a
AM,a

0

,

i = −iσE
σM
i ,

t = −iτ ,

0 = i∂E
∂M
0 ,

(∂µR ∂µR)M = (∂µR ∂µR)E ,

/D M = i /D E ,

{σµ, σν}E = 2δµν ,

(3.4)

(3.5)

where quantities are denoted either in Minkowskian (M ) or Euclidean (E) metric. Henceforth,
we suppress these subscripts and implicitly assume an Euclidean metric.
With the above redeﬁnitions, the partition function is deﬁned as ZE =

SE with the

D e−

most general tree-level Lagrangian in Euclidean signature

R

L =

1
2

Ri(δij∂µ∂µ + µij)Rj +

+ ∂µηa∂µηa + ψ†I σµ∂µψI +

1
4
1
2

µν F µν,aδab +
F a

1
2ξa

(∂µAa,µ)2

(M IJ ψI ψJ + h.c.) + Lint ,

Lint = λiRi +

1
3!

λijkRiRjRk +

1
4!

1
2

(Y iIJ RiψI ψJ + h.c.)

+ iga

IJ Aa

µψ†I σµψJ + ga

jkAa

µRj∂µRk +

µAµ,bRjRk + gabcAµ,aAν,b∂µAc
ν

λjklmRiRjRkRm +
1
2
µηb∂µηc .

jngb
ga

knAa

+

1
4

gabegcdeAµaAνbAc

µAd

ν − gabcAa

(3.6)

(3.7)

All Lorentz indices are contracted using the Euclidean metric δµν = diag(+1, +1, +1, +1).
The Feynman rules for the vertices are

RiRjRkRl : −λijkl ,

RiRjRk : −λijk ,

Ri : −λi ,

RiψI ψJ : −YiIJ ,

16

(3.8)

(3.9)

(3.10)

(3.11)

IJ σµ ,
ij(p + q)µ ,

ψI ψJ Aa
RiRjAa
Aa
µAb
ν Ac
ρAd
ν Ac
µAb
ηaηbAc
µAb

µ : −iga
µ : iga
ρ : igabcTµνρ ,
σ : −Gabcd
µνρσ ,
µ : igabcpµ ,
ingb
ga
ν : δµν

RiRjAb

Aa

nj + ga

jngb
ni

(3.12)

(3.13)

(3.14)

(3.15)

(3.16)

(3.17)

≡ δµν H ab
ij ,

where Gabcd
µνρσ and Tµνρ are deﬁned in [61]. Since we only focus on the matching, only the sym-
metric phase is relevant and vacuum expectation values are not introduced. The propagators
are

(cid:0)

(cid:1)

hRi(p)Rj(q)i =

hAa

µ(p)Ab

ν (q)i =

hηa(p)ηb(q)i =

hψI (p)ψJ (q)i =

δijδ(p + q)
p2
δabδ(p + q)
p2
δabδ(p − q)
p2

,

Pµν (p) ,

,

δIJ δ(p − q)ipµσµ
p2

,

where all momenta are incoming by convention and

Pµν (p) = δµν − (1 − ξ)

pµpν
p2

,

(3.18)

(3.19)

where ξ is the corresponding gauge parameter which for our investigations in Landau gauge
is set to ξ = 0. All the Lorentz structure is contained in the vertices, and the generalized
coupling constants take care of the group structure.

To do the matching we need to renormalize our theory. The matching can, and will, in-
troduce kinetic mixing. To allow for this, we express the bare (b) ﬁelds and scalar masses
as

Ri(b) = Z 1/2

ij Rj , µij(b) = Z µ

ij = µij + δµij , Aa

µ(b) = Z 1/2

ab Ab

µ , ψI(b) = Z 1/2

IJ ψJ .

By construction all propagators should be diagonal at tree-level, to wit

ik Z 1/2
Z 1/2

kj = δij + δZij , Z 1/2

ac Z 1/2

cb = δab + δZ ab .

(3.20)

(3.21)

Assumed size of masses and couplings

For the current problem there are three energy scales: πT , gT , and g2T . Denoted as the hard,
soft, and ultrasoft scale, respectively. In DRalgo it is assumed that all scalar (fermion) masses

17

scale as gT or g2T . If, on the contrary, some masses would be hard, then they should formally
be integrated out together with high-temperature modes.7 After hard modes are integrated
out, it is up to the user whether soft-scale (gT ) ﬁelds are integrated out as well. By default
all temporal scalars have masses of this order, but some models might also have additional
scalars with soft masses. For the couplings, DRalgo assumes that all quartics and cubics scale
as g2. This scaling is chosen so that scalar masses of O(gT ) can be integrated out safely [23].

In summary, DRalgo assumes the following scaling

λijkl ∼ g2 ,
µij ∼ g2T 2 ,

λijk ∼ g2 ,
MIJ ∼ gT ,

λi ∼ g2 ,
YiIJ ∼ g ,

IJ ∼ ga
ga

ij ∼ gabc ∼ g .

(3.22)

It is of course possible to consider smaller couplings and masses than those above.

3.2. Lagrangian in the 3d eﬀective theory

The three-dimensional theory is of the form

L =

1
2

Ri(δij ∂µ∂µ + µij)Rj +

1
4

µν F µν,aδab +
F a

1
2ξa

(∂µAa,µ)2

1
2

D Aa
µab

0Ab

0 + Lint ,

hjklmRiRjRkRm

0 +
1
4!

µAµ,bRjRk + gabcAµ,aAν,b∂µAc
ν

Lint = hiRi +

+ ∂µηa∂µηa +

1
2

∂µAa

0∂µAa

1
3!

hijkRiRjRk +
1
2
gabegcdeAµaAνbAc

µRj∂µRk +

Aa

+ ga

jkAa
1
4
A Aa
+ λabcd

+

ν − gabcAa
µAd
0Ab
ij Aa
ab

µηb∂µηc
0RiRj + gabc

0Ab

0Ac

0Ad

0 + g0

0 Aa

µAb

0∂µAc
0 ,

(3.23)

(3.24)

where Lorentz indices range between µ, ν = {1, . . . , 3}. In renormalizing the ﬁelds, we deﬁne

ik Z 1/2
Z 1/2

kj = δij + δZ3,ij , Z 1/2

ac Z 1/2

cb = δab + δZ ab

3 , Z 1/2

ac,LZ 1/2

cb,L = δab + δZ ab,L

3

.

(3.25)

Here, the term δZ ab,L
corresponds to temporal vectors. The propagators of this theory are
as in eq. (3.18) in three dimensions with the absence of the fermionic propagator and the
inclusion of the temporal-vector propagator

3

hAa

0(p)Ab

0(q)i =

δabδ(p + q)
p2

.

(3.26)

The counterterm Feynman rules are the same as above, barring the new temporal-vector
diagram

0 : −p2δZ ab,L
7This will be implemented in future versions of DRalgo.

0Ab

Aa

3 − δµab
D .

(3.27)

18

n

a

i

j

i

n

i

j

i

l

j

n

a

j

i

I

J

j

Figure 2: Diagrams contributing to the thermal scalar masses. A wiggly line denotes gauge
bosons, a black line scalar particles, and a directed black line fermions. A black dot represents
corresponding counterterms.

3.3. Matching

Self-energies and general n-point correlations are calculated both in the original 4d theory
and the eﬀective 3d theory. The 3-dimensional parameters are chosen, or matched, to give
the same correlators as the original theory [29, 33].

One-loop thermal scalar masses

We start with the matching for scalar masses. For the matching we assume to be in a regime
of soft or ultrasoft external momenta p ∼ gT or p ∼ g2T . The corresponding diagrams at
one-loop level are illustrated in ﬁg. 2. In their computation, we need the master integrals [69]

I 4b
α =

I 4f
α =

Z Q
P

1
[Q2]α =

(cid:18)

¯µ2eγE
4π

ǫ

2T

[2πT ]d

2α

Γ

−
d
2

(4π)

ǫ

2T

(cid:19)

[2πT ]d

2α

Γ

−
d
2

(4π)

α − d
2
Γ(α)
(cid:0)

(cid:1)
α − d
2
Γ(α)
(cid:0)

(cid:19)
¯µ2eγE
4π

ζ2α

d ,

−

1
[Q2]α =

(cid:18)

Q

Z
P
{

}

1 − 2d
−

2α

ζ2α

−

d ,

(cid:1)

(cid:1)

(cid:0)

(3.28)

(3.29)

where ζs = ζ(s) is the Riemann zeta function. The d-dimensional bosonic integral measure is
deﬁned as

≡ T

Z Q
P

qn (cid:18)
X

¯µ2eγE
4π

ǫ

(cid:19)

Z

ddq
(2π)d ,

(3.30)

while for fermions the summation is written as Σ
n + q2 =
four-momenta Q2 = q2

(2n + σ)πT

R

{Q}. We set d = 3 − 2ǫ with Euclidean

2 + q2, and σ = 0(1) for bosons(fermions).

The ﬁrst diagram in ﬁg. 2 gives

(cid:2)

(cid:3)

Dij

1 = −

1
2

λijnnI 4b
1 ,

where the factor of 1

2 is the symmetry factor, −λijnn is the Feynman rule, and

I 4b
1 =

T 2
12

+ O(ǫ) .

(3.31)

(3.32)

The zero Matsubara mode is here ignored. The reason for this is that the zero Matsubara
mode corresponds to soft momenta, and should not be integrated out. Conversely, since the

19

n = 0 mode exists both in the EFT and the parent theory, this contribution cancels in the
matching. The second diagram is likewise (neglecting higher ǫ terms)

Dij

2 =

1
2

H aa

ij dI 4b
1 ,

dI 4b

1 =

T 2
4

,

where we used the shorthand notation for H ab

ij from eq. (3.17).

The remaining diagrams give

Dij

3 = i2ga

inga
nj

3
(4π)2ǫb

p2 , Dij

4 =

1
2

λijnl µnl

1
(4π)2ǫb

.

(3.33)

(3.34)

The ﬁrst diagram contains the external momentum is p, and the last diagram is the contribu-
tion from a scalar-mass insertion. With the assumed power-counting (3.22), this contribution
is formally of higher order. Finally, there is the fermion loop

Dij

5 =

1
2

Y iIJ YjIJ + YiIJ Y jIJ

(cid:0)

−

T 2
12

− p2

1
(4π)2ǫf (cid:21)

.

(cid:20)
(cid:1)

(3.35)

The second coupling-constant term above is the hermitian conjugate. Also, above we use ǫb
and ǫf to denote ǫ poles, albeit with some additional factors. They are deﬁned in [29,33], and
are

1
ǫb

=

1
ǫ

+ Lb,

1
ǫf

=

1
ǫ

+ Lf,

(3.36)

where Lb and Lf are given in eq. (2.4).

To perform the matching, we demand

d4xhRiRji4d = T −

1

d3xhRiRji4d =

d3xhRiRji3d .

(3.37)

Z

Z

Z

At leading order, 3d ﬁelds are rescaled by a factor T −
One ﬁnds

1/2. Next, consider the self-energies.

−δZijp2 − δµij − µij + Π(0)ij + p2Π′(0)ij

=

4d

−δZ3,ijp2 − δµ3,ij − µ3,ij

,

3d

(3.38)

(cid:0)

(cid:1)
where Πij(p) = (D1 + · · · + D5)ij. To avoid confusion we added a subscript 3 to three-
dimensional quantities.

(cid:0)

(cid:1)

Here −δZijp2 − δµij are 4d counterterms, and cancel all ǫ poles. The matching gives

µ3,ij = µij − Π(0)ij ,

δZ3,ij = δZij − Π′(0)ij .

(3.39)

In this step all the Lorentz structure is stripped away, leaving mere group-theory factors.

20

i

j

n

m

k

l

i

j

a

b

k

l

i
J
j

I

K

k
L
l

Figure 3: Diagrams contributing to the thermal corrections to the scalar quartics. Indices
correspond to the line notation in ﬁg. 2.

One-loop scalar quartics

Next, we consider scalar quartics. Before calculating the actual diagrams, it is useful to look
at what happens on the 3d side. The relevant terms in the Lagrangian are

RiRjRkRl hijkl .

(3.40)

There are two contributions to the matching. First, the coupling constant, h, receives contri-
butions from diﬀerent loop orders

hijkl = h0

ijkl + h1

ijkl + . . .

(3.41)

Second, as shown in the previous section, 3d ﬁelds are renormalized. In terms of the scalar
counterterm, δZ3,ij , this renormalization is (to leading order) Ri(b) = Ri + 1
2 δZ3,ijRj. Com-
bined, these considerations imply that the contribution from the 3d side is

hRiRjRkRli3d = −h0

ijkl − h1

ijkl

−

1
2

δZ3,imh0

mjkl + δZ3,jmh0

imkl + δZ3,kmh0

ijml + δZ3,lmh0

ijkm

In the 4d theory, the ﬁrst and second diagrams give

(cid:0)

Dijkl

1 =

Dijkl

2 =

1
2
1
2

(cid:16)
H ab
(cid:16)

λijnmλnmkl + λiknmλnmjl + λilnmλnmkj

ij H ab

kl + H ab

ik H ab

jl + H ab

il H ab
kj

(cid:1)

,

1
16π2ǫb
1
8π

.

(cid:21)

(cid:17)
−

3
(4π)2ǫb

(cid:17)(cid:20)

Finally, the fermion contribution is

Dijkl

3 =

1
2

YiIJ Y jJKYkKLY lLI + (jkl)

1
(4π)2ǫf

+ h.c.

where the terms (jkl) contain all permutations over indices j, k, l.

(cid:0)

.

(3.42)

(3.43)

(3.44)

(3.45)

The matching is performed by demanding

d4xhRiRjRkRli4d = T −

1

d3xhRiRjRkRli4d =

d3xhRiRjRkRli3d .

(3.46)

Z

Z

In the light of the discussion at the beginning of this section, this implies

(cid:1)

Z

T

−λijkl + Λijkl

(cid:16)

= −h0

ijkl − h1

ijkl

(cid:17)

−

1
2

(cid:0)

δZ3,imh0

mjkl + δZ3,jmh0

imkl + δZ3,kmh0

ijml + δZ3,lmh0

ijkm

.

(3.47)

(cid:1)

21

The renormalized sum of the diagrams above was denoted as Λijkl = (D1 + D2 + D3)ijkl and
one ﬁnds

h0
ijkl = T λijkl,

(3.48)

h1
ijklT −

1 = −

1
2

(cid:16)

δZ3,imλmjkl + δZ3,jmλimkl + δZ3,kmλijml + δZ3,lmλijkm

− Λijkl ,

(3.49)

(cid:17)

where δZ3,km was given in the previous section.

Higher loop levels

When performing dimensional reduction at NLO, two-loop contributions are required for
scalar thermal masses. Here, we do not show details of the two-loop computation, as they are
analogous to the one-loop computation presented above. Naturally the number of required
diagrams is larger. Due to the use of integration-by-parts identities (IBP) [70–72] it can be
shown that to the given order, the two-loop master sum-integrals factorize into the one-loop
master integrals given in eqs. (3.28) and (3.29). While this streamlines the computation at
NLO signiﬁcantly, contributions at higher orders are non-factorizable. Nonetheless, DRalgo
also implements a generic computation of two-loop thermal masses and other 3d parameters
at NLO.

3.4. Beta functions and anomalous dimensions

DRalgo calculates beta functions and anomalous dimensions by renormalizing 4d parameters
(cf. [62–64]). As an example, consider the scalar sector. We have renormalized our ﬁelds and
couplings as

Ri(b) = Z 1/2

ij Rj =

δij +

δZij

Rj ,

1
2

Ri(b)Rj(b)Rk(b)Rl(b)λijkl(b) = RiRjRkRl

(cid:16)

(cid:17)
λijkl + δλijkl

¯µ2ǫ.

(3.50)

(3.51)

On the 4d side, we assume the MS scheme, so δZij, δµij, and δλijkl are chosen to only cancel
ǫ poles.

(cid:0)

(cid:1)

We demand that bare parameters are independent of the RG-scale ¯µ. To leading order in

ǫ, we ﬁnd (t = log ¯µ)

∂tλijkl = −2ǫλijkl ,

∂tδZij = −2ǫδZij .

(3.52)

Using this we can ﬁnd the anomalous dimensions by demanding that ∂tRi(b) = 0:

=⇒ ∂tRi = ǫZijRj ≡ γijRj ,

(3.53)

22

where we have introduced the anomalous dimension γij. Then, the quartic beta function is
determined by

0 = ¯µ−

2ǫ∂tλijkl(b) = 2ǫ
=⇒ ∂tλijkl = −2ǫλijkl + 2ǫδλijkl .
(cid:0)

λijkl + δλijkl

(cid:1)

+ ∂tδλijkl + ∂tλijkl ,

(3.54)

Where we have used ∂tδλijkl = −4ǫδλijkl; which follows from counting powers of couplings
in δλijkl. We identify 2ǫδλijkl with the beta function for λijkl.

This beta function can be written in an equivalent form by writing the counterterm, for λ,

as the sum of a bare term and ﬁeld renormalization:

δλijkl = ¯λijkl +

1
2

Using this one ﬁnds

(δZimλmjkl + δZjmλimkl + δZkmλijml + δZlmλijkm) .

(3.55)

∂tλijkl = −2ǫλijkl + 2ǫ¯λijkl − (γλ)(ijkl) ,

(3.56)

where the last term denotes all possible contractions between one index of λijkl and one index
of γij. Other beta functions are calculated analogously.

All gauge beta functions in DRalgo are deﬁned with couplings squared, viz. ∂tg2. Conversely
beta functions for masses, scalar couplings, and Yukawa couplings are deﬁned as linear in the
parameters, i.e. ∂tλ and so forth. These conventions are also shown in the DRalgo output.

In the 3-dimensional theory only scalar masses have non-zero beta functions.

4.

Implementing beyond the Standard Model theories

In this section, we demonstrate the use of DRalgo for BSM theories based on the example of
the Two-Higgs doublet model (2HDM).

4.1. Two-Higgs doublet model with fermions

Consider the 2HDM potential [73, 74]

V (φ1, φ2) = m2

1φ1φ†1 + m2

2φ2φ†2 − (m2

12φ1φ†2 + h.c.) + λ1(φ1φ†1)2 + λ2(φ2φ†2)2

+ λ3(φ1φ†1)(φ2φ†2) + λ4(φ1φ†2)(φ2φ†1) +

λ5
2
(φ†1φ2) + h.c.

(φ1φ†2)2 + (φ2φ†1)2

h
.

i

(4.1)

+

λ6(φ1φ†1) + λ7(φ2φ†2)
i

nh

The scalars are SU(2) doublets with hypercharge Yφ = 1. This means that the covariant
derivative is given by8

8We use the convention that (φ1φ†

Dµφ1,2 =

∂µ − ig1

Yφ
2
1φ†,I
1φ1) = φI

(cid:16)
1) = (φ†

(cid:17)
1 , where I = 1, 2.

Bµ − ig2

Aa
µ

φ1,2 ,

(4.2)

o

τ a
2

23

where τ a are Pauli matrices. We further assume that all Standard-Model fermions are present,
and consider Yukawa interactions of the form

LYuk = yiqLφ†i qR + h.c.

(4.3)

We deﬁne the group structure and scalar representations via

Group={"SU3","SU2","U1"};
RepAdjoint={{1,1},{2},0};
HiggsDoublet1={{{0,0},{1},1/2},"C"};
HiggsDoublet2={{{0,0},{1},1/2},"C"};
RepScalar={HiggsDoublet1,HiggsDoublet2};
CouplingName={g3,g2,g1};

All representations are speciﬁed according to their Dynkin coeﬃcients (see e.g. [57, 75, 76]).
For example, gauge bosons transforms as (1, 1), or an octet, under SU(3). Next we need to
create the fermions. Let us start by creating a single generation

Rep1={{{1,0},{1}, 1/6},"L"}; (*qL*)
Rep2={{{1,0},{0}, 2/3},"R"}; (*uR*)
Rep3={{{1,0},{0},-1/3},"R"}; (*dR*)
Rep4={{{0,0},{1},-1/2},"L"}; (*ℓL*)
Rep5={{{0,0},{0},-1},"R"}; (*eR*)
RepFermion1Gen={Rep1,Rep2,Rep3,Rep4,Rep5};

In the deﬁnition of a fermion representation {{{1,0},{1},Y/2},"L<R>"} the last argument
depends on if the fermion left-handed (L) or right-handed (R) and Y is the corresponding
hypercharge. For the Standard Model, we have

Yq =

1
3

,

Yu =

4
3

,

Yd = −

2
3

,

Yℓ = −1 ,

Ye = −2 .

(4.4)

The above notation identiﬁes Rep1 as the left-handed quark doublet, Rep2 as the right-handed
up-quark and so forth. The extra factor of 1
2 for hypercharges in the deﬁnition of e.g. Rep1
arises from the deﬁnition of the covariant derivative similar to eq. (4.2).

Additional fermion-families can be added by grouping multiple instances of RepFermion1Gen

together:

RepFermion3Gen={RepFermion1Gen,RepFermion1Gen,RepFermion1Gen}//Flatten[#,1]&;

where the number of generations is chosen to be nf = 3. When creating Yukawa interactions
the user decides which index contains which family. For example, above we stacked all genera-
tions after each other in RepFermion3Gen. Hence, in RepFermion3Gen indices 1–5 correspond

24

to the ﬁrst generation, indices 6–10 to the second, and indices 11–15 to the last. Thus the
user could use index 1, 6, or 11 as the top quark. An alternative way to add an arbitrary
number of fermion families nf is given in sec. Q.9.

Next, to create the tensors, we write

{gvvv,gvff,gvss,λ1,λ3,λ4,µij,µIJ,µIJC,Ysff,YsffC}=

AllocateTensors[Group,RepAdjoint,CouplingName,RepFermion3Gen,RepScalar];

The mass terms in the potential in eq. (4.1) are

V (φ1, φ2) ⊃ m2

1φ1φ†1 + m2

2φ2φ†2 − (m2

12φ1φ†2 + h.c.) ,

(4.5)

and due to the presence of two Higgs doublets, we need to specify the doublet for each term:

1*)

InputInv={{1,1},{True,False}}; (*φ1φ†
MassTerm1=CreateInvariant[Group,RepScalar,InputInv][[1]]//Simplify;
InputInv={{2,2},{True,False}}; (*φ2φ†
MassTerm2=CreateInvariant[Group,RepScalar,InputInv][[1]]//Simplify;
InputInv={{1,2},{True,False}}; (*φ1φ†
MassTerm3=CreateInvariant[Group,RepScalar,InputInv][[1]]//Simplify;
InputInv={{2,1},{True,False}}; (*φ2φ†
MassTerm4=CreateInvariant[Group,RepScalar,InputInv][[1]]//Simplify;

2*)

1*)

2*)

The mass matrix is then generated by the GradMass[] command:

VMass=(

+m1*MassTerm1
+m2*MassTerm2
-(m12R+I*m12I)(MassTerm3)
-(m12R-I*m12I)(MassTerm4)
);

µij=GradMass[VMass]//Simplify;

We allowed m2
quartics in eq. (4.1) the corresponding part of the potential is

12 to be complex, with real part m12R, and imaginary part m12I. For the scalar

V (φ1, φ2) = λ1(φ1φ†1)2 + λ2(φ2φ†2)2 + λ3(φ1φ†1)(φ2φ†2)

+ λ4(φ1φ†2)(φ2φ†1) +

λ5
2

(φ1φ†2)2 + (φ2φ†1)2

+

(cid:2)
λ6(φ1φ†1) + λ7(φ2φ†2)

(φ†1φ2) + h.c.

(cid:3)
,

(4.6)

for which we already created all the building blocks. Thus, the quartics can be constructed
as

n(cid:2)

(cid:3)

o

25

1)2*)
2)2*)

QuarticTerm1=MassTerm1^2; (*(φ1φ†
QuarticTerm2=MassTerm2^2; (*(φ2φ†
1)(φ2φ†
QuarticTerm3=MassTerm1*MassTerm2; (*(φ1φ†
QuarticTerm4=MassTerm3*MassTerm4; (*(φ1φ†
2)(φ2φ†
QuarticTerm5=(MassTerm3^2+MassTerm4^2); (*(φ1φ†
QuarticTerm6=MassTerm1*MassTerm3+MassTerm1*MassTerm4; (*(φ1φ†
1)
QuarticTerm7=MassTerm2*MassTerm3+MassTerm2*MassTerm4; (*(φ2φ†
2)

2)*)
1)*)
2)2 + (φ2φ†

1)2*)

(φ1φ†
(φ1φ†

2) + (φ2φ†
1)
2) + (φ2φ†
1)

*)
*)

(cid:3)
(cid:3)

(cid:2)
(cid:2)

Consequently, the quartic tensor itself is deﬁned as

VQuartic=(

+λ1H*QuarticTerm1
+λ2H*QuarticTerm2
+λ3H*QuarticTerm3
+λ4H*QuarticTerm4
+λ5H/2*QuarticTerm5
+λ6H*QuarticTerm6
+λ7H*QuarticTerm7
);

λ4=GradQuartic[VQuartic];

For simplicity, we assumed above that λ5H, λ6H, and λ7H are real. One can allow for complex
couplings by adding them, and their conjugates, directly in QuarticTerm6 and QuarticTerm7.
To create a complex coupling λ6H, we would write

QuarticTerm6=(λ6HR+I*λ6HI)*MassTerm1*MassTerm3+(λ6HR-I*λ6HI)*MassTerm1*MassTerm4;

For Yukawa couplings, we only consider the top-quark coupling. If we choose the ﬁrst
family to contain the top-quark, then a Yukawa term ∼ φ†qLuR would involve fermion repre-
sentations number 1 and 2. When deﬁning a Yukawa interaction, representations should be
speciﬁed in the order: scalar, ﬁrst fermion, second fermion. With this in mind, the Yukawa
coupling of the ﬁrst Higgs doublet is9

InputInv={{1,1,2},{False,False,True}}; (*φ†
1qLuR*)
YukawaDoublet1=CreateInvariantYukawa[Group,RepScalar,RepFermion3Gen,InputInv][[1]]//Simplify;

Here, {1,1,2} speciﬁes

First Higgs doublet × Left-handed top-quark × Right-handed top-quark ,

9Here we assume that the top quark resides in the ﬁrst generation. This has nothing to do with how the
top-quark is usually placed in the third generation. Rather, we here place it in the ﬁrst for simplicity as
normally only the top-quark has a sizeable Yukawa coupling.

26

and {False,False,True} speciﬁes that the Higgs and left-handed quarks are conjugated.
The coupling to the second Higgs doublet is

InputInv={{2,1,2},{False,False,True}}; (*φ†
2qLuR*)
YukawaDoublet2=CreateInvariantYukawa[Group,RepScalar,RepFermion3Gen,InputInv][[1]]//Simplify;

The complete Yukawa tensor is

Ysff=-GradYukawa[yt1*YukawaDoublet1+yt2*YukawaDoublet2];

For the sake of generality, we assumed that both Higgs doublets couple to the top-quark.
Note that this is not allowed for a realistic model due to ﬂavor-changing-neutral-current
constraints.

Finally, assuming that the Yukawa couplings are real, we can deﬁne

YsffC=Simplify[Conjugate[Ysff//Normal],Assumptions->{yt1>0,yt2>0}]//SparseArray;

Above we did not consider Yukawa couplings between diﬀerent generations but such cou-
plings can be added. To wit, when we deﬁned RepFermion3Gen we put the ﬁrst generation
on indices 1–5; the second on indices 6–10; and the third on indices 11–15. To deﬁne a cou-
pling between, e.g. the left-handed top quark (assumed to reside in generation 1) and the
right-handed charm quark (assumed to reside in generation 2), we would write

InputInv={{1,1,7},{False,False,True}};
YukawaTopCharm=CreateInvariantYukawa[Group,RepScalar,RepFermion3Gen,InputInv]//Simplify;

With the model implementation complete, all dimensional-reduction commands are identical
to those of the Abelian-Higgs model. We refer to [77–79] for earlier results in the literature.

Integrating out temporal scalars

For the Abelian-Higgs case in sec. 2 we only had one scalar ﬁeld, whereas with the 2HDM
we have two. When integrating out temporal scalars we have two options. First, all scalars
are light and we have two active, dynamical doublets. Second, one doublet is heavy and is
integrated out when going from the soft to the ultrasoft scale.

For the ﬁrst case, the corresponding command is

PerformDRsoft[{}];

For the second case, we assume that the second doublet is heavy. It can then be integrated

27

out via

PerformDRsoft[{5,6,7,8}];

To understand the above syntax, note that the indices of all representations are given by

PosScalars=PrintScalarRepPositions[];

So the second Higgs doublet resides at PosScalars[[2]]=5;;8.

There is one complication when integrating out one of the Higgs doublets. Namely, generally
the two doublets mix through the m2
12 term. For a complete treatment the mass matrix needs
to be diagonalized before the heavy doublet can be integrated out. This lies beyond DRalgo
and is an optional step for the user. Instead, the code by default assumes that m2
12 is small –
of O(g2T ) in power counting – and performs the diagonalization perturbatively to ﬁrst order
in m2

12.

5. Miscellaneous features

In this section, we discuss speciﬁc features of the software on a case-by-case basis.

5.1. User-options and features

Lower-order dimensional reduction for speed

The user has several options to control what is calculated and how the code operates. For
example, if the model has many degrees of freedom, the user might wish to save running-time
and only calculate one-loop thermal masses and couplings. This works by specifying Mode->1
when loading the model

Group={"U1"};
ImportModelDRalgo[Group,gvvv,gvff,gvss,λ1,λ3,λ4,µij,µIJ,µIJC,Ysff,YsffC,Mode->1];

The default is Mode->2, in which case everything is calculated to NLO. And for the most bare-
bone/fast option select Mode->0; in this case only one-loop thermal masses are calculated.

5.2. Model-treatment in the code

DRalgo works by factorizing all group and Lorentz algebra. The Lorentz algebra is hard-coded
while the group algebra is supplied by the user. All particles are indexed by the order they
appear. If the user has an SU(3) × SU(2) model with gauge bosons, the vectors in the SU(3)

28

group have 8 components, while those of the SU(2) group have 3. The code indexes these
components by a =
. Therein, α runs from 1–8, β from 1–3, and a from 1–11.
For example, the Debye mass tensor µab
D stores the information of both groups. For most
(cid:0)
(cid:1)
cases this mass tensor is diagonal.

SU(3), 3β
8α

SU(2)

The scalars are treated diﬀerently since DRalgo only deals with real scalar components. For
example, a complex scalar Φ is rewritten Φ = 1
(φ + iψ). Hence the scalar indices would
√2
in this case be i = (φ, ψ). Further, the scalar-mass matrix is stored as µS,ij. For example,
a m2φ2 mass term resides at µS,11. Consider now a complex representation with n scalar
components labelled by I, J. In a complex basis vector-scalar-scalar trilinear couplings are of
, where Ga
IJ are representation matrices. To convert
the form Aµ
to a real basis each scalar component is split as ΦI = 1
(φI + iψI ). The components are
√2
then reordered with the real components ﬁrst: i = (φI , ψI ), so i = 1, . . . , 2n. If we call the
scalars in the real basis ϕi, our vector-scalar-scalar trilinear couplings become

IJ ∂µΦI Φ∗J + Ga,

∗IJ ∂µΦ∗I ΦJ

Ga

(cid:0)

(cid:1)

Aµga

ij∂µϕiϕj ,

ga
ij =

Im(Ga
− Re(Ga

IJ ) Re(Ga
Im(Ga
IJ )

IJ )
IJ )!

.

(5.1)

Thus, ga

ij is automatically antisymmetric under i ↔ j.

As an example, consider a U(1) theory with a complex scalar. The vector-scalar-scalar

coupling is igAµ (∂µΦΦ∗ − ∂µΦ∗Φ). In a real basis Φ = 1
√2

(φ + iψ), this becomes

gAµ∂µ (φ, ψ)

0
− 1
2

1
2
0!  

φ
ψ!

,

and gij = g

0
− 1
2

1
2
0!

.

(5.2)

5.3. Frequently asked questions

Below, we discuss various questions and problems the user might have encountered.

Q.1. How to save and load my model?

Saving and loading a model is straightforward with DRalgo built-in functions. Once a model
is created, and loaded with ImportModelDRalgo (see the .m ﬁles in the example folder), it
can be saved by writing

SaveModelDRalgo[ModelInfo,"<modelname>.txt"],

Here, ModelInfo is a string and should contain information about the authors, DRalgo ver-
sion, and citations to relevant articles. See ./examples/ah.m or ./examples/2hdm.m for some
examples. To load the model write

{Group,gvvv,gvff,gvss,λ1,λ3,λ4,µij,µIJ,µIJC,Ysff,YsffC}=LoadModelDRalgo["<modelname>.txt"];

29

 
 
 
The loaded model can be your own, or perhaps one of the provided DRalgo model repository.
We also encourage you to make your own models available for the community which is possible
by submitting the model ﬁle via the Issue Tracker on https://github.com/DR-algo/DRalgo.
The model will then be veriﬁed and added to the model repository. When submitting a model,
please refer to a paper or explicitly write out the Lagrangian in an accompanying notebook.

Q.2. How do I order semi-simple groups?

If the user-deﬁned model contains multiple groups, the groups and corresponding represen-
tations must be ordered as: SO(n), SU(n), SP(n), G2, F4 E6, E7, E8, U(1). For example, if
the user has a model with gauge group G = SU(5) ⊗ SO(10) ⊗ E6 ⊗ U(1), the model-input
should be deﬁned as

Group={"SO10","SU5","E6","U1"};

The internal order of groups is not restricted. Hence, for a group such as G = SU(3) ⊗ SU(2),
the following deﬁnitions are equivalent

Group={"SU3","SU2"};
Group={"SU2","SU3"};

Q.3. How do I check that my model is anomaly free?

Once you have deﬁned your model, the anomaly-free condition is that

Table[Tr[(a.b+b.a).c],{a,gvff},{b,gvff},{c,gvff}]

vanishes identically. Since this condition is not automatically fulﬁlled for general, non-numeric,
U(1) charges, it is the responsibility of the user to choose U(1) charges such that all anomalies
cancel.

Q.4. How do I calculate anomalous dimensions?

First ﬁnd the position of all representations:

PosScalar=PrintScalarRepPositions[];
PosVector=PrintGaugeRepPositions[];
PosFermion=PrintFermionRepPositions[];

All anomalous dimensions are then found via

30

Table[AnomDim4D["S",{i,j}],{i,PosScalar},{j,PosScalar}]
Table[AnomDim4D["V",{i,j}],{i,PosVector},{j,PosVector}]
Table[AnomDim4D["F",{i,j}],{i,PosFermion},{j,PosFermion}]

For more details regarding anomalous dimensions and beta functions cf. sec. 3.4.

Q.5. Temporal scalar mixing

In most models the temporal-scalar masses are diagonal. However, in cases with multiple
U(1) groups there can be mixing. In such a case, the code automatically recognizes this. For
example, if the group is

Group={"U1","U1","U1"};

the code creates the mixed U(1) masses with the convention that µU1Mix1 is the mixing
between groups 1 and 2, µU1Mix2 is the mixing between groups 1 and 3, and µU1Mix3 is
the mixing between groups 2 and 3. These masses are displayed with the PrintDebyeMass
command. See the ./examples/SMZp.m for an example.

Q.6. What if I miss some couplings?

By default DRalgo assumes that the user has deﬁned all couplings allowed by symmetry in
their 4d theory. The code runs even though some couplings are missed. For example, consider
the 2HDM with scalar potential as in eq. (4.1) but without λ6 and λ7 couplings. For a φ1 ↔ φ2
symmetric model no λ6/λ7-type scalar quartic couplings are induced. However, if the model
breaks this symmetry by e.g. a Yukawa sector, then λ7 and λ6 couplings are generated at
one-loop. In this case DRalgo would still calculate these induced couplings; with the crux
that only the λ1, . . . , λ5 couplings are printed by the PrintCouplings[] command, while
the induced λ7 and λ6 couplings must be found manually via the PrintTensorDRalgo[]
command. In addition, DRalgo automatically alerts the user with a message if some new
couplings are generated at one-loop. This is a cross-check that no couplings are forgotten.

Q.7. Can I run DRalgo without specifying the representation?

For general groups no. However, it is possible for the user to specify arbitrary (non-numeric)
U(1) charges. With non-numeric charges the code does not check that various quartic or
Yukawa terms are allowed. Hence, it is the responsibility of the user to ensure gauge invariance.

31

Q.8. How large representations can I use?

In principle any group and representations can be used. In practice the code slows down for
huge representations. The code has been tested on general models with ∼100–200 compo-
nents in a given representation. For example an SO(10) model with a 120-dimensional scalar.
Since DRalgo was purposely written to deal with any quartic and Yukawa sector, these are
often the bottlenecks. If the user wants to omit two-loop contributions, signiﬁcantly larger
representations are possible. Further still, if the user only wants one-loop thermal masses,
almost any model (within reason) can be run in quick order.

Q.9. Can I include an arbitrary number of fermion generations?

Yes, take for example the 2HDM. As described in sec. 4.1, a single family of SM fermions is
deﬁned via

Rep1={{{1,0},{1}, 1/6},"L"}; (*qL*)
Rep2={{{1,0},{0}, 2/3},"R"}; (*uR*)
Rep3={{{1,0},{0},-1/3},"R"}; (*dR*)
Rep4={{{0,0},{1},-1/2},"L"}; (*ℓL*)
Rep5={{{0,0},{0},-1},"R"}; (*eR*)
RepFermion1Gen={Rep1,Rep2,Rep3,Rep4,Rep5};

Deﬁning Yukawa and scalar couplings proceed as before, and the model is loaded with

ImportModelDRalgo[Group,gvvv,gvff,gvss,λ1,λ3,λ4,µij,µIJ,µIJC,Ysff,YsffC,Verbose->False];

The user can then deﬁne nf = nF fermion families by writing10

PosFermion=PrintFermionRepPositions[];
FermionMat=Table[{nF,i},{i,PosFermion}];
DefineNF[FermionMat]

These commands should be used before running

PerformDRhard[];

Adding nf fermion families in this way does not add new Yukawa or scalar couplings as the
extra (nf − 1) families only have gauge interactions. To deﬁne cross-family Yukawa couplings,
one should follow the procedure in sec. 4.1.

10This adds nF copies of all fermions.

32

Q.10. How do I compare with the literature?

Most outputs from DRalgo can directly be compared with the literature. For temporal scalars
this requires some care. For example, if the original 4d theory has a SU(2) triplet, then two
types of A2

0Σ2 couplings are allowed:

L3d ⊃ κ1(Aa

0Aa

0)(ΣaΣa) + κ2(Aa

0Σa)2 .

(5.3)

0Ab

0ΣcΣdλabcd

DRalgo does not distinguish between these two terms since its output is stored in the form
1
4! Aa
K . To compare with the two parametrizations, the user can rewrite the
κ1/κ2 basis in tensor form. To this end, it is necessary to additionally deﬁne the relevant
terms of the eﬀective model and compare to its Lagrangian. This procedure is analogous
to creating the fundamental model where invariants can be compared using the command
CompareInvariants[]. See the htm.m ﬁle for a worked example of the Higgs triplet model
(HTM).

The matching of all possible allowed operators in the EFT is automatic in DRalgo. This
way also previously disregarded eﬀective coeﬃcients can be determined. One example is a
L3d ⊃ κTr C 3
0 B0 operator in the Standard Model. Here, C0 is the gluon (temporal) ﬁeld, and
B0 is the temporal hypercharge ﬁeld. The output from DRalgo gives κ ∝ (2Yq + Yd + Yu).
See eq. (4.4) for the corresponding hypercharges and the 2hdm.m example ﬁle for the full
expression

Q.11. What is the functional basis used in the matching?

In addition to the variables Lb and Lf deﬁned in eq. (2.4), two-loop diagrams also contain
factors of

c =

1
2

ln

8π
9

(cid:16)

(cid:16)

(cid:17)

(cid:17)

+ (ln ζ2)′ − 2γE

,

(5.4)

where ζs = ζ(s) is the Riemann zeta function and (ln ζs)′ = ζ ′(s)/ζ(s). By default DRalgo
uses the relations ln(2π) − (ln ζ2)′ = 1 − γE + (ln ζ
1)′ = 12 ln A, where A is
the Glaisher-Kinkelin constant. It is possible to convert the output of DRalgo to the conven-
tions of [33] by using the replacement rule Log[Glaisher]->-1/12(Lb+2cplus-EulerGamma),
where cplus=(c+Log[3T/µ]). This rule is implemented as PrintGenericBasis[] in DRalgo.

1)′ and 1 + (ln ζ

−

−

Q.12. How do I deﬁne scalar cubic operators?

Scalar cubics are created analogously to quartics. Consider for example a SU(2) theory with
a scalar doublet φ and a singlet S. We can then create the cubic operator (φφ†)S via

InputInv={{1,1,2},{True,False,True}}; (*φφ†S*)

33

CubicTerm1=CreateInvariant[Group,RepScalar,InputInv][[1]]//Simplify;
VCubic=λC*CubicTerm1;

The corresponding tensor is deﬁned with the command

λ3=GradCubic[VCubic];

Tadpoles are deﬁned analogously. See the 2xsm.m ﬁle for a worked example with two real
scalars.

Q.13. Do I need to deﬁne tadpoles?

If tadpoles are allowed by symmetry we encourage the user to deﬁne them – even if they are
absent at tree-level.

Q.14. How do I deﬁne Dirac and Majorana masses?

Fermion masses are deﬁned analogously to scalar masses. We stress that DRalgo only works
with Weyl fermions. For example, assume a theory with two Weyl fermions ψ1 and ψ2. The
following terms are then possible

m1ψ1ψ1 + m2ψ2ψ2 + mDψ1ψ2 + h.c.

(5.5)

Where the ﬁrst two terms are Majorana masses, and the third is a Dirac-type mass. These
masses can be deﬁned in DRalgo via

InputInv={{1,1},{True,True}}; (*ψ1ψ1*)
MassTerm1=CreateInvariantFermion[Group,RepFermion,InputInv][[1]]//Simplify;
InputInv={{2,2},{True,True}}; (*ψ2ψ2*)
MassTerm2=CreateInvariantFermion[Group,RepFermion,InputInv][[1]]//Simplify;
InputInv={{1,2},{True,True}}; (*ψ1ψ2*)
MassTerm3=CreateInvariantFermion[Group,RepFermion,InputInv][[1]]//Simplify;

The mass matrix is given by

FermionMasses=1/2*m1*MassTerm1+1/2*m2*MassTerm2+mD MassTerm3;
µIJ=GradMassFermion[FermionMasses];
µIJC=SparseArray[Simplify[Conjugate[µIJ]//Normal,Assumptions->{m1>0,m2>0,mD>0}]];

See the WessZumino.m notebook for a worked example.

34

Q.15. What if a model has Ψ1γ5Ψ2 terms?

Since DRalgo only uses Weyl fermions, the inclusion of other fermionic bilinear operators
requires some extra work. One example is the operator Ψ1γ5Ψ2 which can be expanded in
Weyl spinors

Ψ1 =

ψL
1
ψR
1 !

, Ψ2 =

ψL
2
ψR
2 !

,

such that

1 ψL
Ψ1Ψ2 = ψR
Ψ1γ5Ψ2 = −ψR

2 + ψL
1 ψL

1 ψR
2 ,
1 ψR
2 + ψL
2 .

(5.6)

(5.7)

(5.8)

These terms can then be implemented in DRalgo as explained in earlier examples.

Q.16. My mass matrix is not diagonal. Is the eﬀective potential still calculable?

Yes, it is still possible to calculate the eﬀective potential, just not in general. It is up to
the user to diagonalize the mass matrix. But once done, the user has two choices. First,
diagonalization-matrices can be given to DRalgo. Second, the user can do all the diagonal-
ization themselves and reload the model. The ﬁrst option is quick, but becomes protracted if
the diagonalization is complicated or needs to be done perturbatively.

Consider for example the Standard Model. As before, ﬁeld-dependent masses can be created

via

DefineNewTensorsUS[µij,λ4,λ3,gvss,gvvv];
φvev={0,0,0,φ}//SparseArray;
DefineVEVS[φvev];
PrintTensorsVEV[];

To diagonalize the vector-bosons, we ﬁrst need to extract the ﬁeld-dependent mass-tensor:

MassMatrix=PrintTensorsVEV[];
VectorMass=MassMatrix[[2]]//Normal;
VectorEigenvectors=FullSimplify[

Transpose[Normalize/@Eigenvectors[VectorMass[[11;;12,11;;12]]]],
Assumptions->{g1>0,g2>0,φ>0}];

DVRot={{IdentityMatrix[10],0},{0,VectorEigenvectors}}//ArrayFlatten;
DSRot=IdentityMatrix[4];
RotateTensorsUSPostVEV[DSRot,DVRot];

After this the eﬀective-potential calculation proceeds as before.

35

 
 
Q.17. Can DRalgo handle non-renormalizable operators?

Currently no. This features will be implemented in future versions.

Q.18. How do I deﬁne complicated scalar potentials?

For most cases, scalar quartics can be easily deﬁned using the examples above. For non-
standard representations, the model-building tools in DRalgo might diﬀer by a basis change
from other conventions in the literature. Let us take an example, a SU(5) model with an
adjoint scalar. Commonly this scalar is written as Φ = ΦaT a where T a are traceless hermitian
matrices satisfying Tr T aT b = 1

2 δab. The most general (quartic) potential is

V1 = δ1(Tr Φ2)2 + δ2Tr Φ4 .

(5.9)

By default DRalgo uses GroupMath, which deﬁnes its invariants diﬀerently to those above. In
fact, the two scalar quartic operators given in GroupMath can be linear combinations of those
above. Thus, the result from DRalgo would be in the form

V2 = λH inv1(Φ4) + λSinv2(Φ4) ,

(5.10)

where the invariants inv1,2 are the output from the CreateInvariant command. Fortunately,
it is quite easy to ﬁnd the relations between the V1 and the V2 basis. To do so, ﬁrst, rewrite
everything in tensor form

V1 = 1/4!λ1,ijklΦiΦjΦkΦl ,

and likewise for the DRalgo output

V2 = 1/4!λ2,ijklΦiΦjΦkΦl .

(5.11)

(5.12)

Since λ1 and λ2 are deﬁned in diﬀerent bases, we want to compare invariants. Here we only
need three:

λijklδijδkl ,

λijklλijkl , λijnmλnmklλklij .

(5.13)

Comparing the invariants one ﬁnds

λH =

1
960 r

23
14

(130δ1 + 47δ2) , λS = −

5
64 r

13
42

(2δ1 − δ2) .

(5.14)

The above procedure works for any representation as long as the user can write the quartic
operator from DRalgo in their preferred form. See SU5.m for a concrete example.

36

Q.19. Can I use dimensionally reduced theory for calculating nucleation rates?

Certainly. The user can use the eﬀective theory and directly ﬁnd the bounce in the 3d. To
S3d, where S3d is the bounce action in the dimen-
ﬁrst approximation the nucleation rate is e−
sionally reduced theory. See [80] for the original work, and [58, 81–83] for recent examples.

Q.20. Can I study GUT models with DRalgo?

Most GUT models can be readily studied with DRalgo. However, for models with large
representations the running-time rises rather rapidly. The bottleneck is not the complexity of
e.g. the scalar potential but rather the size of the representations of particles. For example,
DRalgo rapidly handles the general Pati-Salam, SU(5), 3HDM, or left-right symmetric model
– even with 20–30 free parameters in the potential. See SU5.m, 3hdm.m, and LRSymmetric.m
for explicit implementations.

Q.21. How much RAM does DRalgo require?

The required RAM is negligible for most models. However, for models with 50–100 dimen-
sional representations, the requirements start to rise. And for said scenario around 1 GB of
RAM is required. If the package drains too much RAM, it is recommended to not include
two-loop contributions.

Q.22. How should I report possible bugs?

We are grateful if any bugs are reported. We kindly ask users to supply both a short de-
scription and a Mathematica ﬁle describing the error. These reports and attached ﬁles can
provided via the Issue Tracker on https://github.com/DR-algo/DRalgo.

6. Outlook

High-temperature ﬁeld theory is pestered by large radiative corrections, which compromises
perturbative calculations. In eﬀect, perturbation theory needs to be reorganized in terms of
thermal resummations. While at leading order only thermally corrected masses are required,
new contributions to couplings arise at higher orders. In addition, there are currently sev-
eral diﬀerent schemes for incorporating thermal masses – all depending substantially on the
renormalization scale.

As an eﬀective ﬁeld theory, dimensional reduction by-passes these issues. The ultraviolet
sector of the theory is controlled by a matching computation and the infrared sector is
resummed to all orders. Indeed, as discussed in this paper, using a three dimensional EFT
unambiguously resums masses and couplings. Using the framework is simple from a practical

37

standpoint since three-dimensional theories are super renormalizable. Concretely, only mass
parameters are RG-scale dependent and their beta functions are exact at two-loop level. This
property not only allows for a straightforward perturbative treatment, but also provides an
attractive framework to a non-perturbative lattice study of the 3d EFT since in the eﬀective
theory relations between continuum and lattice parameters are exact at two-loop level [84].

Hitherto, dimensional reduction has been used sparsely. With this paper and the associated
software, we aim to change this by automating the EFT construction. In summary, DRalgo
calculates all eﬀective couplings and masses in the eﬀective theory, the leading-order beta
functions both in the 4d parent and 3d eﬀective theory, as well as the eﬀective potential
within the EFT. This facilitates studying models with dimensional reduction and requires
merely three-dimensional calculations that are analogous to zero-temperature computations.
Since the eﬀective theory is fully bosonic, the perturbative calculation can be compared with
lattice simulations. This has one clear beneﬁt as a large number of fundamental 4d theories
can map into the same eﬀective theory given the mass hierarchy of the additional scalars.
Not only does the lattice provide an invaluable cross-check, but pre-existing simulations can
be reused and applied to new BSM theories.

In conclusion, gravitational waves have opened up a new gateway to the early universe,
and particle physics stands at its threshold. Upcoming experiments are fast approaching both
at future particle colliders and gravitational wave observatories. It is therefore important to
control theoretical uncertainties at unprecedented precision. In this venture, dimensional
reduction is the tool of choice, and DRalgo its harbinger.

Acknowledgements

We thank Renato Fonseca and Johan L¨ofgren for illuminating discussions during the inception
of this project. We express our gratitude to Lauri Niemi and Jorinde van de Vis for testing
the alpha version of the software and providing invaluable feedback. We also thank Oliver
Gould, Joonas Hirvonen, Johan L¨ofgren, and Juuso ¨Osterman for interesting discussions. The
work of Andreas Ekstedt has been supported by the Deutsche Forschungsgemeinschaft under
the Germany Excellence Strategy - EXC 2121 Quantum Universe - 390833306; and by the
Swedish Research Council, project number VR:2021-00363. Philipp Schicho was supported
by the European Research Council, grant no. 725369, and by the Academy of Finland, grant
no. 1322507. The work of Tuomas V. I. Tenkanen has been supported in part by the National
Science Foundation of China grant no. 19Z103010239.

38

A.

Interfacing DRalgo output

In this appendix, we collect additional material that is not part of the package itself.

A.1. From 3d eﬀective theory to thermodynamics

A possible interface between the output of DRalgo, in the 3-dimensional theory, and the
determination of thermodynamic quantities is implemented in ./examples/ah-thermo.m.
This implementation comes with a disclaimer: we present a simpliﬁed algorithm suitable
for the simple case of the Abelian-Higgs model (cf. eq. (2.1)) but this is not part of the
package itself. We encourage users to implement their own numerical minimisation routines
for thermodynamics optimized for individual models. The algorithm given here is not gauge
invariant and should be used with discretion.

The algorithm 2 illustrates our implementation. In the simpliﬁed algorithm ah-thermo.m

Algorithm 2 The DRalgo algorithm output is interfaced in ./examples/ah-thermo.m with
functions solveBetas[], DRstep[] and Veff3d[], which are called by findThermo[].
Input: Four-dimensional theory parameters ci ∈ {c1, . . . , cn} and scale factor X
for all ci ∈ {c1, . . . , cn} do

Call findThermo[X,ci] {

Call ci(¯µ) = solveBetas[ci]
for all Ti ∈ {Tmin, . . . , Tmax} do

// e.g. binary search

Fix T -dependent RG-scale: ¯µ = XπT
Call ci,3d = DRstep[T ,¯µ,ci]
Minimize the eﬀective potential by NMinimize[Re[Veff3d[φ,ci,3d]]]

end for
Return {Tc, φc/Tc, L/T 4

c }, based on degenerate minima.

}
end for
Output: Thermodynamics as function of {c1, . . . , cn}
Export the data
Plot by Python: .examples/ah-thermo-python-plots/plot.py

the loop over 4-dimensional variables ci contains only a single λ and for simplicity and faster
running time M = 100 and g2 = 0.42 are ﬁxed. Here, M is the Higgs mass in arbitrary units
related to the MS mass parameter by the tree-level relation µ2 = −M 2/2. The critical tem-
perature Tc is deﬁned from the condition that the eﬀective potential at the broken minimum
vanishes since the potential at the symmetric minimum at the origin is normalized to zero.
To ﬁnd this condition, we use an elementary binary search.

39

c
T

340

300

260

220

¯µ = 0.5πT
¯µ = 2.0πT

0.005

0.015
λ

0.025

4

3

2

1

0

c
T
/
c
φ

0.005

0.015
λ

0.025

4 c
T
/
L

1.0
0.8
0.6
0.4
0.2
0.0

0.005

0.015
λ

0.025

Figure 4: Thermodynamics of the Abelian-Higgs model as function of λ (cf. eq. (2.1)) at ﬁxed
g2 = 0.42 and M = 100 as obtained in ./examples/ah-thermo.m. Both M and T are in
arbitrary units of mass. The RG-scale is varied at the edges of the interval ¯µ = (0.5 . . . 2.0)πT .
While the curves are barely discernible, this showcases that the scale-dependence is indeed a
higher-order eﬀect once at full NLO dimensional reduction. The additional RG-scale of the
3d EFT is not varied in the plots.

As an indicator of the transition strength, we also output the value of the background
ﬁeld at the critical temperature, φc/Tc, that describes the discontinuity of the minima at Tc.
Since φc/Tc is gauge-dependent, it should not be given physical meaning but used as a rough
indicator that correlates positively with the phase transition strength. This strength can be
deﬁned in terms of the released latent heat at the critical temperature Tc

L = T ∆p′ = T ∆

dV 4d
eﬀ
dT

= T 2∆

dV 3d
eﬀ
dT

,

(A.1)

where p′ is the derivative of the pressure with respect to temperature and ∆ ≡ (. . . )low-T −
(. . . )high-T denotes the diﬀerence between the broken and symmetric phase. The T -derivative
is approximated as a ﬁnite diﬀerence dT = 0.1. The symmetric-phase part does not con-
tribute here since we normalized the eﬀective potential to zero at all T at the origin. For a
commented documentation of the technicalities of this implementation see directly the source
ah-thermo.m.

The described perturbative determination is done in Landau gauge with ξ = 0 in eq. (3.19)
and the results for Tc and L/T 4
c are gauge-dependent. Despite this simple user-friendly exam-
ple, a recipe for a more sophisticated, gauge-invariant determination can be found in e.g. [85]
(cf. refs. therein). The ﬁnal output data for thermodynamics is
stored in ./examples/ah-thermo-python-plots/*.dat,
plotted in ./examples/ah-thermo-python-plots/plot.py, and shown in ﬁg. 4.

We encourage DRalgo users to develop and optimize their individual implementations for
algorithms to determine thermodynamic properties. While including eﬃcient algorithms for
determining thermodynamics is conceivable for future versions of DRalgo, in the current
version 1.0 these features are not implemented in the package itself.

40

References

[1] L. Canetti, M. Drewes, and M. Shaposhnikov, Matter and Antimatter in the Universe, New J.

Phys. 14 (2012) 095012 [1204.4186].

[2] G. Elor et al., New Ideas in Baryogenesis: A Snowmass White Paper, in 2022 Snowmass Summer

Study, 3, 2022 [2203.05010].

[3] M. E. Shaposhnikov, Baryon Asymmetry of the Universe in Standard Electroweak Theory, Nucl.

Phys. B 287 (1987) 757.

[4] M. E. Shaposhnikov, Possible Appearance of the Baryon Asymmetry of the Universe in an

Electroweak Theory, JETP Lett. 44 (1986) 465.

[5] V. A. Kuzmin, V. A. Rubakov, and M. E. Shaposhnikov, On the Anomalous Electroweak Baryon

Number Nonconservation in the Early Universe, Phys. Lett. B 155 (1985) 36.

[6] K. Kajantie, M. Laine, K. Rummukainen, and M. E. Shaposhnikov, The Electroweak phase
transition: A Nonperturbative analysis, Nucl. Phys. B 466 (1996) 189 [hep-lat/9510020].

[7] M. G¨urtler, E.-M. Ilgenfritz, and A. Schiller, Where the electroweak phase transition ends, Phys.

Rev. D 56 (1997) 3888 [hep-lat/9704013].

[8] K. Kajantie, M. Laine, K. Rummukainen, and M. E. Shaposhnikov, Is there a hot elec-
troweak phase transition at m(H) larger or equal to m(W)?, Phys. Rev. Lett. 77 (1996) 2887
[hep-ph/9605288].

[9] M. J. Ramsey-Musolf, The electroweak phase transition: a collider target, JHEP 09 (2020) 179

[1912.07189].

[10] L. S. Friedrich, M. J. Ramsey-Musolf, T. V. I. Tenkanen, and V. Q. Tran, Addressing the

Gravitational Wave - Collider Inverse Problem, [2203.05889].

[11] LISA Collaboration, P. Amaro-Seoane et al., Laser

Interferometer Space Antenna,

[1702.00786].

[12] S. Kawamura et al., The Japanese space gravitational wave antenna DECIGO, Class. Quant.

Grav. 23 (2006) S125.

[13] W.-H. Ruan, Z.-K. Guo, R.-G. Cai, and Y.-Z. Zhang, Taiji program: Gravitational-wave sources,

Int. J. Mod. Phys. A 35 (2020) 2050075 [1807.09495].

[14] G. M. Harry, P. Fritschel, D. A. Shaddock, W. Folkner, and E. S. Phinney, Laser interferometry

for the big bang observer, Class. Quant. Grav. 23 (2006) 4887.

[15] J. de Vries, M. Postma, J. van de Vis, and G. White, Electroweak Baryogenesis and the Standard

Model Eﬀective Field Theory, JHEP 01 (2018) 089 [1710.04061].

[16] G. C. Dorsch, S. J. Huber, and T. Konstandin, Bubble wall velocities in the Standard Model and

beyond, JCAP 12 (2018) 034 [1809.04907].

[17] E. Hall, T. Konstandin, R. McGehee, H. Murayama, and G. Servant, Baryogenesis From a Dark

First-Order Phase Transition, JHEP 04 (2020) 042 [1910.08068].

41

[18] I. Baldes and G. Servant, High scale electroweak phase transition: baryogenesis \& symmetry

non-restoration, JHEP 10 (2018) 053 [1807.08770].

[19] M. Chala, M. Ramos, and M. Spannowsky, Gravitational wave and collider probes of a triplet

Higgs sector with a low cutoﬀ, Eur. Phys. J. C 79 (2019) 156 [1812.01901].

[20] D. Croon, O. Gould, P. Schicho, T. V. I. Tenkanen, and G. White, Theoretical uncertainties for

cosmological ﬁrst-order phase transitions, JHEP 04 (2021) 055 [2009.10080].

[21] O. Gould, Real scalar phase transitions: a nonperturbative analysis, JHEP 04 (2021) 057

[2101.05528].

[22] A. Alves, T. Ghosh, H.-K. Guo, K. Sinha, and D. Vagie, Collider and Gravitational Wave
Complementarity in Exploring the Singlet Extension of the Standard Model, JHEP 04 (2019)
052 [1812.09333].

[23] L. Niemi, P. Schicho, and T. V. I. Tenkanen, Singlet-assisted electroweak phase transition at two

loops, Phys. Rev. D 103 (2021) 115035 [2103.07467].

[24] N. F. Bell, M. J. Dolan, L. S. Friedrich, M. J. Ramsey-Musolf, and R. R. Volkas, A Real Triplet-
Singlet Extended Standard Model: Dark Matter and Collider Phenomenology, JHEP 21 (2020)
098 [2010.13376].

[25] L. Niemi, M. J. Ramsey-Musolf, T. V. I. Tenkanen, and D. J. Weir, Thermodynamics of a
Two-Step Electroweak Phase Transition, Phys. Rev. Lett. 126 (2021) 171802 [2005.11332].

[26] A. D. Linde, Infrared Problem in Thermodynamics of the Yang-Mills Gas, Phys. Lett. B 96

(1980) 289.

[27] E. Braaten, Solution to the perturbative infrared catastrophe of hot gauge theories, Phys. Rev.

Lett. 74 (1995) 2164 [hep-ph/9409434].

[28] P. B. Arnold and O. Espinosa, The Eﬀective potential and ﬁrst order phase transitions: Beyond

leading-order, Phys. Rev. D 47 (1993) 3546 [hep-ph/9212235].

[29] K. Farakos, K. Kajantie, K. Rummukainen, and M. E. Shaposhnikov, 3-D physics and the elec-
troweak phase transition: Perturbation theory, Nucl. Phys. B 425 (1994) 67 [hep-ph/9404201].

[30] O. Gould and T. V. I. Tenkanen, On the perturbative expansion at high temperature and impli-

cations for cosmological phase transitions, JHEP 06 (2021) 069 [2104.04399].

[31] P. H. Ginsparg, First Order and Second Order Phase Transitions in Gauge Theories at Finite

Temperature, Nucl. Phys. B170 (1980) 388.

[32] T. Appelquist and R. D. Pisarski, High-Temperature Yang-Mills Theories and Three-

Dimensional Quantum Chromodynamics, Phys. Rev. D23 (1981) 2305.

[33] K. Kajantie, M. Laine, K. Rummukainen, and M. E. Shaposhnikov, Generic rules for high
temperature dimensional reduction and their application to the standard model, Nucl. Phys. B
458 (1996) 90 [hep-ph/9508379].

[34] E. Braaten and A. Nieto, Eﬀective ﬁeld theory approach to high temperature thermodynamics,

Phys. Rev. D 51 (1995) 6990 [hep-ph/9501375].

42

[35] K. Kajantie, M. Karjalainen, M. Laine, and J. Peisa, Three-dimensional U(1) gauge + Higgs
theory as an eﬀective theory for ﬁnite temperature phase transitions, Nucl. Phys. B 520 (1998)
345 [hep-lat/9711048].

[36] J. O. Andersen, 3-D eﬀective ﬁeld theory for ﬁnite temperature scalar electrodynamics, Phys.

Rev. D 59 (1999) 065015 [hep-ph/9709418].

[37] J. O. Andersen, The Electric screening mass in scalar electrodynamics at high temperature, Z.

Phys. C 75 (1997) 147 [hep-ph/9606357].

[38] K. Farakos, K. Kajantie, K. Rummukainen, and M. E. Shaposhnikov, 3-d physics and the elec-
troweak phase transition: A Framework for lattice Monte Carlo analysis, Nucl. Phys. B 442
(1995) 317 [hep-lat/9412091].

[39] J. O. Andersen, T. Gorda, A. Helset, et al., Nonperturbative Analysis of the Electroweak Phase
Transition in the Two Higgs Doublet Model, Phys. Rev. Lett. 121 (2018) 191802 [1711.09849].

[40] L. Niemi, H. H. Patel, M. J. Ramsey-Musolf, T. V. I. Tenkanen, and D. J. Weir, Electroweak
phase transition in the real triplet extension of the SM: Dimensional reduction, Phys. Rev. D
100 (2019) 035002 [1802.10500].

[41] J. Hirvonen, Intuitive method for constructing eﬀective ﬁeld theories, [2205.02687].

[42] A. Rajantie, SU(5) + adjoint Higgs model at ﬁnite temperature, Nucl. Phys. B 501 (1997) 521

[hep-ph/9702255].

[43] J. O. Andersen, N. Haque, M. G. Mustafa, and M. Strickland, Three-loop hard-thermal-loop per-
turbation theory thermodynamics at ﬁnite temperature and ﬁnite baryonic and isospin chemical
potential, Phys. Rev. D 93 (2016) 054045 [1511.04660].

[44] J. O. Andersen, E. Braaten, E. Petitgirard, and M. Strickland, HTL perturbation theory to two

loops, Phys. Rev. D 66 (2002) 085016 [hep-ph/0205085].

[45] S. Baum, M. Carena, N. R. Shah, C. E. M. Wagner, and Y. Wang, Nucleation is more than
critical: A case study of the electroweak phase transition in the NMSSM, JHEP 03 (2021) 055
[2009.10743].

[46] I. P. Ivanov and C. C. Nishi, Symmetry breaking patterns in 3HDM, JHEP 01 (2015) 021

[1410.6139].

[47] P. S. Bhupal Dev, R. N. Mohapatra, W. Rodejohann, and X.-J. Xu, Vacuum structure of the

left-right symmetric model, JHEP 02 (2019) 154 [1811.06869].

[48] T. Appelquist, B. A. Dobrescu, and A. R. Hopper, Nonexotic Neutral Gauge Bosons, Phys. Rev.

D 68 (2003) 035012 [hep-ph/0212073].

[49] P. M. Schicho, T. V. I. Tenkanen, and J. ¨Osterman, Robust approach to thermal resummation:

Standard Model meets a singlet, JHEP 06 (2021) 130 [2102.11145].

[50] M. Laine and Y. Schr¨oder, Quark mass thresholds in QCD thermodynamics, Phys. Rev. D 73

(2006) 085009 [hep-ph/0603048].

43

[51] J. Ghiglieri, A. Kurkela, M. Strickland, and A. Vuorinen, Perturbative Thermal QCD: Formalism

and Applications, Phys. Rept. 880 (2020) 1 [2002.10188].

[52] A. K. Rajantie, Feynman diagrams to three loops in three-dimensional ﬁeld theory, Nucl. Phys.

B 480 (1996) 729 [hep-ph/9606216].

[53] J. M¨oller and Y. Schr¨oder, Three-loop matching coeﬃcients for hot QCD: Reduction and gauge

independence, JHEP 08 (2012) 025 [1207.1309].

[54] M. Laine, P. Schicho, and Y. Schr¨oder, Soft thermal contributions to 3-loop gauge coupling,

JHEP 05 (2018) 037 [1803.08689].

[55] J. M. Overduin and P. S. Wesson, Kaluza-Klein gravity, Phys. Rept. 283 (1997) 303

[gr-qc/9805018].

[56] T. Cohen, As Scales Become Separated: Lectures on Eﬀective Field Theory, PoS TASI2018

(2019) 011 [1903.03622].

[57] R. M. Fonseca, GroupMath: A Mathematica package for group theory calculations, Comput.

Phys. Commun. 267 (2021) 108085 [2011.01764].

[58] J. Hirvonen, J. L¨ofgren, M. J. Ramsey-Musolf, P. Schicho, and T. V. I. Tenkanen, Computing the
gauge-invariant bubble nucleation rate in ﬁnite temperature eﬀective ﬁeld theory, [2112.08912].

[59] M. Karjalainen and J. Peisa, Dimensionally reduced U(1) + Higgs theory in the broken phase,

Z. Phys. C 76 (1997) 319 [hep-lat/9607023].

[60] S. P. Martin, Eﬀective potential at three loops, Phys. Rev. D 96 (2017) 096005 [1709.02397].

[61] S. P. Martin and H. H. Patel, Two-loop eﬀective potential for generalized gauge ﬁxing, Phys.

Rev. D 98 (2018) 076008 [1808.07615].

[62] M. E. Machacek and M. T. Vaughn, Two Loop Renormalization Group Equations in a General

Quantum Field Theory. 3. Scalar Quartic Couplings, Nucl. Phys. B 249 (1985) 70.

[63] M. E. Machacek and M. T. Vaughn, Two Loop Renormalization Group Equations in a General

Quantum Field Theory. 2. Yukawa Couplings, Nucl. Phys. B 236 (1984) 221.

[64] M. E. Machacek and M. T. Vaughn, Two Loop Renormalization Group Equations in a General
Quantum Field Theory. 1. Wave Function Renormalization, Nucl. Phys. B 222 (1983) 83.

[65] V. Shtabovenko, R. Mertig, and F. Orellana, New Developments in FeynCalc 9.0 Comput. Phys.

Commun. 207 (2016) 432 [1601.01167].

[66] V. Shtabovenko, R. Mertig, and F. Orellana, FeynCalc 9.3: New features and improvements,

Comput. Phys. Commun. 256 (2020) 107478 [2001.04407].

[67] B. Ruijl, T. Ueda, and J. Vermaseren, FORM version 4.2 [1707.06453].

[68] H. K. Dreiner, H. E. Haber, and S. P. Martin, Two-component spinor techniques and Feynman
rules for quantum ﬁeld theory and supersymmetry, Phys. Rept. 494 (2010) 1 [0812.1594].

[69] E. Braaten and A. Nieto, Free energy of QCD at high temperature, Phys. Rev. D 53 (1996) 3421

[hep-ph/9510408].

44

[70] K. G. Chetyrkin and F. V. Tkachov, Integration by Parts: The Algorithm to Calculate beta

Functions in 4 Loops, Nucl. Phys. B 192 (1981) 159.

[71] F. V. Tkachov, A Theorem on Analytical Calculability of Four Loop Renormalization Group

Functions, Phys. Lett. B 100 (1981) 65.

[72] M. Nishimura and Y. Schr¨oder, IBP methods at ﬁnite temperature, JHEP 09 (2012) 051

[1207.4042].

[73] G. C. Branco, P. M. Ferreira, L. Lavoura, M. N. Rebelo, M. Sher, and J. P. Silva, Theory and

phenomenology of two-Higgs-doublet models, Phys. Rept. 516 (2012) 1 [1106.0034].

[74] J. F. Gunion, H. E. Haber, G. L. Kane, and S. Dawson, The Higgs Hunter’s Guide, vol. 80.

2000.

[75] H. Georgi, Lie algebras in particle physics, vol. 54. Perseus Books, Reading, MA, 2nd ed. ed.,

1999.

[76] R. Slansky, Group Theory for Uniﬁed Model Building, Phys. Rept. 79 (1981) 1.

[77] M. Losada, High temperature dimensional reduction of the MSSM and other multiscalar models,

Phys. Rev. D 56 (1997) 2893 [hep-ph/9605266].

[78] J. O. Andersen, Dimensional reduction of the two Higgs doublet model at high temperature, Eur.

Phys. J. C 11 (1999) 563 [hep-ph/9804280].

[79] T. Gorda, A. Helset, L. Niemi, T. V. I. Tenkanen, and D. J. Weir, Three-dimensional eﬀective
theories for the two Higgs doublet model at high temperature, JHEP 02 (2019) 081 [1802.05056].

[80] A. D. Linde, Decay of the False Vacuum at Finite Temperature, Nucl. Phys. B 216 (1983) 421.

[81] O. Gould and J. Hirvonen, Eﬀective ﬁeld theory approach to thermal bubble nucleation, Phys.

Rev. D 104 (2021) 096015 [2108.04377].

[82] A. Ekstedt, Higher-order corrections to the bubble-nucleation rate at ﬁnite temperature, Eur.

Phys. J. C 82 (2022) 173 [2104.11804].

[83] A. Ekstedt, Bubble Nucleation to All Orders, [2201.07331].

[84] M. Laine and A. Rajantie, Lattice continuum relations for 3-D SU(N) + Higgs theories, Nucl.

Phys. B 513 (1998) 471 [hep-lat/9705003].

[85] P. Schicho, T. V. I. Tenkanen, and G. White, Combining thermal resummation and gauge in-

variance for electroweak phase transition, [2203.04284].

45

