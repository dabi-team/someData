2
2
0
2

l
u
J

0
1

]

A
N
.
h
t
a
m

[

1
v
3
4
4
4
0
.
7
0
2
2
:
v
i
X
r
a

OPENCFS: OPEN SOURCE FINITE ELEMENT SOFTWARE FOR
COUPLED FIELD SIMULATION - PART ACOUSTICS

A PREPRINT

Stefan Schoder
Group of Aeroacoustics and Vibroacoustics, IGTE
TU Graz
Inffeldgasse 18, 8010 Graz
stefan.schoder@tugraz.at

Klaus Roppert
Group of Multiphysics, IGTE
TU Graz
Inffeldgasse 18, 8010 Graz
klaus.roppert@tugraz.at

July 12, 2022

ABSTRACT

Although many numerical simulation tools have been developed and are on the market, there is still
a strong need for appropriate tools capable to simulate multi-ﬁeld problems. Therefore, openCFS
provides an open-source framework for implementing partial differential equations using the ﬁ-
nite element method. Since 2000, the software has been developed continuously. The result of is
openCFS (before 2020 known as CFS++ Coupled Field Simulations written in C++). In this paper,
we present for the ﬁrst time the open-source software with a focus on the acoustic module.

Keywords Open Source FEM Software · Multiphysics Simulation · C++ · Acoustics · Aero-Acoustics · openCFS

1

Introduction

Since its initial foundation phase in 2000 by Manfred Kaltenbacher at the Department of Sensor Technology of the
Friedrich-Alexander-University Erlangen-Nuremberg, several university institutes were involved in the development
of the former ﬁnite element software CFS++ [1]. In 2020, CFS++ went open source and provides an object-oriented
ﬁnite element framework for research. The software includes several physical ﬁelds

• Acoustics (openCFS-Acoustics)

• Electrodynamics (openCFS-Edyn)

• Mechanics (openCFS-Mechanics)

• Piezoelectrics (openCFS-Piezo)

• Heat transfer (openCFS-Heat)

and is specialized on coupling those ﬁelds [13]. Within this contribution, we concentrate on the openCFS module
openCFS-Acoustics. An application of this module for an aeroacoustic simulation of a ducted fan is given in Fig. 1.
The paper is organized as follows: In Sec. 3, we provide the generic ﬁnite element formulation of the wave equation
as implemented in openCFS. In Sec. 2, 3, 4, and 5, we show how to implement a ﬁnite element formulation in the
framework of openCFS. We start by stating the wave equation and derive its weak formulation for ﬁnite element
implementation, discuss the calling structure of openCFS and show the implementation. In Sec. 6, we show the basic
building blocks of a ﬁnite element simulation using openCFS. Section 7 references publications and developments
using openCFS. The motivation of this publication is to encourage users to use and develop openCFS with us (the
usage is free of charge under the MIT license). Finally, in Sec. 8, we summarize the topics of the software and
motivate future research.

 
 
 
 
 
 
openCFS Software

A PREPRINT

Figure 1: Aeroacoustic simulation of a ducted fan.

2 Wave equation

Equation 2.1 (Wave equation) Given c, pa
t ∈ [0, T ] ﬁnd pa such that

0(x), dpa

0(x), pa
ΓD

(x, t)|ΓD , ua

nΓN

(x, t)|ΓN , domain x ∈ Ω, and time

1. Partial differential equation:

1
c2

∂2pa
∂t2 − ∇ · ∇pa = f

in Ω × [0, T ]

2. Boundary conditions:

3. Initial conditions:

pa(x, t) = pa

ΓD
∇pa(x, t) · n = ua

(x, t) at ΓD × [0, T ]

(x, t) at ΓN × [0, T ]

nΓN

pa(x, 0) = pa

0(x) ∀x ∈ Ω

∂
∂t

pa(x, 0) = ˙pa(x, 0) = dpa

0(x) ∀x ∈ Ω

Regarding the deﬁnition of the wave equation on the domain Ω, the Dirichlet boundary ΓD, and the Neumann boundary
ΓN (see Fig. 2), we derive the weak formulation of the wave equation.

Figure 2: Domain of the wave equation.

2

openCFS Software

A PREPRINT

3 Finite Element Formulation

We deﬁne the solution function space for the acoustic pressure pa ∈ V = {v ∈ H 1(Ω)|v = pa
0 at ΓD} and the
test function space w ∈ W = {u ∈ H 1(Ω)|u = 0 at ΓD}. Using this function space, we can obtain the weak
formulation of the wave equation. Additionally, we restrict the function spaces to a discrete (limited number of
a ∈ V h ⊂ V; V h = {vh ∈ H 1(Ω)|vh = pa
functions) solution function spaceph
0 at ΓD} and a discrete test function
space wh ∈ W h ⊂ W; W h = {uh ∈ H 1(Ω)|uh = 0 at ΓD}. In doing so, we obtain the semi-discrete ﬁnite element
form.

Equation 3.1 (Weak formulation (semi-discrete)) Given c, pa
x ∈ Ω, and time t ∈ [0, T ]. Find ph

a ∈ V h such that ∀ wh ∈ W h the equation holds:

0(x), pa
ΓD

0(x), dpa

(x, t)|ΓD , ua

nΓN

(x, t)|ΓN , domain

1. Weak form:

(cid:90)

Ω

1
c2 wh ¨ph

a dΩ +

(cid:90)

Ω

∇wh · ∇ph

a dΩ −

(cid:90)

ΓN

whua

nΓN

ds =

whf dΩ

(cid:90)

Ω

2. Boundary conditions:

3. Initial conditions:

pa(x, t) = pa

ΓD

(x, t) at ΓD × [0, T ]

pa(x, 0) = pa

0(x) ∀x ∈ Ω

∂
∂t

pa(x, 0) = ˙pa(x, 0) = dpa

0(x) ∀x ∈ Ω

Inserting the ﬁnite element ansatz (nn number of ﬁnite element nodes)

pa ≈ ph

a =

w ≈ wh =

nn(cid:88)

b=1

nn(cid:88)

a=1

Nbpa,b ;

Nawa ;

The basis functions are known. The coefﬁcients are the unknowns and model the physical solution. The semi-discrete
form (space discrete, time continuous) can be expressed by an algebraic system of equations

In openCFS, the operators of the weak form are implemented and the discretization of the equation system is done by
the software and the underlying mesh of the domain.

M¨p
a

+ Kp
a

= f + f

N eumann

.

4 Software module openCFS-Acoustics

The ﬁnite element software is object-oriented and programmed in C++. As a typical ﬁnite element software the
following time discretization is possible:

• Time is discretized by a time-stepping scheme.

• Time is transformed into the Fourier space (time-harmonic simulation).

• The system of equations is transformed into an eigenvalue system.

Important for the general understanding of the software is the life-cycle structure during an openCFS run (see Fig. 3).

5

Implementation details

We assume that one only implements a partial differential equation and no adaptions to the driver have to be made.
The core concepts are ﬁrst the ﬁnite element space, ﬁnite element function, and ﬁnite element forms.

3

openCFS Software

A PREPRINT

Figure 3: openCFS life-cycle during a run.

4

openCFS Software

A PREPRINT

• Finite element space manages the equation numbers for the associated unknowns.

It holds and manages
associated reference elements. It also knows how to incorporate boundary conditions. Furthermore, it distin-
guishes between geometrical elements (mesh representation) and computational elements (how the physical
quantities are approximated).

• Finite element function is the representation of the function space and knows its particular selection from

different possibilities.

• Linear forms are integrators for the right-hand side of a partial differential equation.
• Bilinear forms, also called integrators, are the realizations of the left-hand side of a weak formulation and are
constructed by the operators (e.g. a gradient operator). In the case of the presented wave equation, we use
symmetric bilinear forms to construct the algebraic system.

6 Application details

The simulation ﬁle of openCFS is an XML based input format [2]. The underlying structure of our XML ﬁles is
deﬁned via a so-called XML-scheme. The path to this scheme is deﬁned in the header of every XML ﬁle and per
default it points to our default public scheme, provided on our gitlab server:

<?xml version="1.0"?>
<cfsSimulation xmlns="http://www.cfs++.org"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.cfs++.org
\protect\vrule width0pt\protect\href{http://cfs-doc.mdmt.tuwien.ac.at/xml/CFS-Simulation/CFS.xsd}{http://cfs-doc.mdmt.tuwien.ac.at/xml/CFS-Simulation/CFS.xsd}">

In general, an OpenCFS XML ﬁle consists of three main parts:

• ﬁleFormats: deﬁnition of input-/output- and material-ﬁles
• domain: region deﬁnitions (assign material to different regions)
• sequenceStep: contains the deﬁnition of the analysis type and the PDE.

Several sequenceSteps can be concatenated and results from previous sequenceSteps can be processed to produce the
desired result.

<!-- define which files are needed for simulation input & output-->
<fileFormats>
<input>

<!-- read mesh -->

</input>
<output>

<!-- define output -->

</output>
<materialData file="../material/mat.xml" format="xml"/>

</fileFormats>

<domain geometryType="3d">

<regionList>

<!-- region definition -->

</regionList>

</domain>

<sequenceStep index="1">

<analysis>

<!-- analysis type: static, transient, harmonic, multiharmonic, eigenfrequency -->

</analysis>
<pdeList>

<!--for example consider the acoustic PDE-->
<acoustic>

<regionList>

<!--define on which regions the PDE is solved-->

</regionList>
<bcsAndLoads>

<!--define appropriate BC’s and Loads-->

5

openCFS Software

A PREPRINT

</bcsAndLoads>
<storeResults>

<!--define the results to be stored-->

</storeResults>

</acoustic>

</pdeList>

</sequenceStep>
</cfsSimulation>

Detailed information about the XML-input ﬁles can be found online [2].

7 Selected Application

7.1 Methods

Inside openCFS-Acoustics, non-conforming interfaces for stationary and rotating domains [13, 10, 15, 38, 23], per-
fectly matched layer [11, 12] and inﬁnite domains [35], higher order ﬁnite element basis functions [9], and special
aeroacoustic source models [16, 34, 25, 27, 43, 26], and special wave equation models [5, 17] are available.

7.2 Vibroacoustics and Aeroacoustics

Since 2016, the software provided solutions for challenges in acoustical engineering and medicine. Car frame noise
[3, 6, 29, 43], fan noise [24, 39, 14, 19, 37, 40] noise emissions of the turbocharger compressor [18, 7], HVAC
systems [20, 8], wind turbines [42] were computed. For post-processing, the ﬂuid ﬁeld was decomposed into a
longitudinal and transversal processes [33, 32, 28]. Furthermore, the human phonation process is studied in detail
[36, 41, 44, 30, 4, 21, 22, 31].

8 Conclusion

Although in the last years many commercial simulation tools have been developed and are on the market, there is
still a strong need for appropriate tools capable to simulate multi-ﬁeld problems. An implementation of a new partial
differential equation (PDE) or physical coupling between PDEs into a commercial software, e.g. using provided
interfaces via user routines, results in most cases in very inefﬁcient numerical schemes. For this reason, we have
decided to develop our own tool, based on the Finite Element (FE) method. The result of our effort is openCFS
(before 2020 knows as CFS++ Coupled Field Simulations written in C++).

9 Acknowledge

We would like to acknowledge the authors of openCFS: Angermeier, Katharina; Bahr, Ludwig; Dev, Chaitanya; Eiser,
Sebastian; Escobar, Max; Freidhager, Clemens; Grabinger, Jens; Greifenstein, Jannis; Guess, Thomas; Hassanpour
Guilvaiee, Hamideh; Hauck, Andreas; Hofer, Fred; H¨ubner, Daniel; H¨uppe, Andreas; Jaganathan, Srikrishna; Junger,
Clemens; Kaltenbacher, Manferd; Landes, Herman; Link, Gerhard; Mayrhofer, Dominik; Michalke, Simon; Mohr,
Markus; Nierla, Michael; Perchtold, Dominik; Roppert, Klaus; Schmidt, Bastian; Schoder, Stefan; Schury, Fabian;
Seebacher, Philipp; Shaposhnikov, Kirill; Tautz, Matthias; Toth, Florian; Triebenbacher, Simon; Volk, Adian; Vu,
Bich Ngoc; Wein, Fabian; Zhelezina, Elena; Z¨orner, Stefan.

Sketches in this work have been partly created using the Adobe Illustrator plug-in LaTeX2AI (https://github.
com/stoani89/LaTeX2AI).

References

[1] Angermeier K., Bahr L., Dev C., Eiser S., Escobar M., Freidhager C., Grabinger J., Greifenstein J., Guess T.,
Hassanpour Guilvaiee H., Hauck A., Hofer F., H¨ubner D., H¨uppe A., Jaganathan S., Junger C., Kaltenbacher
M., Landes H., Link G., Mayrhofer D., Michalke S., Mohr M., Nierla M., Perchtold D., Roppert K., Schmidt B.,
Schoder S., Schury F., Seebacher P., Shaposhnikov K., Tautz M., Toth F., Triebenbacher S., Volk A., Vu B. N.,
Wein F., Zhelezina E., Z¨orner S. openCFS - open source ﬁnite element software for multi-physical simulation.
https://gitlab.com/openCFS/cfs, 2020. Accessed: 2020-10-30.

6

openCFS Software

A PREPRINT

[2] Angermeier K., Bahr L., Dev C., Eiser S., Escobar M., Freidhager C., Grabinger J., Greifenstein J., Guess T.,
Hassanpour Guilvaiee H., Hauck A., Hofer F., H¨ubner D., H¨uppe A., Jaganathan S., Junger C., Kaltenbacher
M., Landes H., Link G., Mayrhofer D., Michalke S., Mohr M., Nierla M., Perchtold D., Roppert K., Schmidt B.,
Schoder S., Schury F., Seebacher P., Shaposhnikov K., Tautz M., Toth F., Triebenbacher S., Volk A., Vu B. N.,
Wein F., Zhelezina E., Z¨orner S. openCFS - open source ﬁnite element software for multi-physical simulation.
https://opencfs.gitlab.io/userdocu, 2020. Accessed: 2020-10-30.

[3] R. Engelmann, C. Gabriel, S. Schoder, and M. Kaltenbacher. A generic testbody for low-frequency aeroacoustic

buffeting. Technical report, SAE Technical Paper, 2020.

[4] S. Falk, S. Kniesburges, S. Schoder, B. Jakubaß, P. Maurerlehner, M. Echternach, M. Kaltenbacher, and
M. D¨ollinger. 3d-fv-fe aeroacoustic larynx model for investigation of functional based voice disorders. Frontiers
in physiology, 12:616985, 2021.

[5] S. Floss and M. Kaltenbacher. Finite element scheme based on an equivalent ﬂuid model for the design of micro-
perforated panel absorbers. In INTER-NOISE and NOISE-CON Congress and Conference Proceedings, volume
259, pages 4020–4030. Institute of Noise Control Engineering, 2019.

[6] C. Freidhager, P. Maurerlehner, K. Roppert, A. Wurzinger, A. Hauser, M. Heinisch, S. Schoder, and
M. Kaltenbacher. Simulationen von str¨omungsakustik in rotierenden bauteilen zur entwicklung von antrieb-
skonzepten der autos der zukunft. e & i Elektrotechnik und Informationstechnik, 138(3):212–218, 2021.

[7] C. Freidhager, S. Schoder, and M. Kaltenbacher. The inﬂuences of spatial and temporal discretization in ﬂow
simulation on lighthill’s aeroacoustic source terms applied to a turbocharger. In AIAA AVIATION 2020 FORUM,
page 2546, 2020.

[8] J. Grabinger, M. Kaltenbacher, S. Becker, and F. Zenger. Efﬁcient prediction of ﬂow-induced sound sources and

emission from a hvac blower. Technical report, SAE Technical Paper, 2018.

[9] A. Hueppe and M. Kaltenbacher. Spectral ﬁnite elements for computational aeroacoustics using acoustic pertur-

bation equations. Journal of Computational Acoustics, 20(02):1240005, 2012.

[10] A. H¨uppe, J. Grabinger, M. Kaltenbacher, A. Reppenhagen, G. Dutzler, and W. K¨uhnel. A Non-Conforming
Finite Element Method for Computational Aeroacoustics in Rotating Systems. In 20th AIAA/CEAS Aeroacoustics
Conference, page 2739, 2014.

[11] A. H¨uppe and M. Kaltenbacher. Stable matched layer for the acoustic conservation equations in the time domain.

Journal of Computational Acoustics, 20(01):1250004, 2012.

[12] B. Kaltenbacher, M. Kaltenbacher, and I. Sim. A modiﬁed and stable version of a perfectly matched layer
technique for the 3-d second order wave equation in time domain with an application to aeroacoustics. Journal
of computational physics, 235:407–422, 2013.

[13] M. Kaltenbacher. Numerical Simulation of Mechatronic Sensors and Actuators: Finite Elements for Computa-

tional Multiphysics. Springer Berlin Heidelberg, 2015.

[14] M. Kaltenbacher. Computational Acoustics. CISM International Centre for Mechanical Sciences. Springer

International Publishing, 2017.

[15] M. Kaltenbacher. Non-conforming ﬁnite elements for ﬂexible discretization with applications to aeroacoustics.

In Computational Acoustics, pages 35–67. Springer, 2018.

[16] M. Kaltenbacher, M. Escobar, I. Ali, and S. Becker. Numerical Simulation of Flow-Induced Noise Us-
International Journal for Numerical Methods in Fluids,

ing LES/SAS and Lighthill’s Acoustics Analogy.
63(9):1103–1122, 2010.

[17] M. Kaltenbacher and S. Floss. Nonconforming ﬁnite elements based on nitsche-type mortaring for inhomoge-

neous wave equation. Journal of theoretical and computational acoustics, 26(03):1850028, 2018.

[18] M. Kaltenbacher, C. Freidhager, and S. Schoder. Modelling and numerical simulation of the noise generated by

automotive turbocharger compressor. Technical report, SAE Technical Paper, 2020.

[19] M. Kaltenbacher, A. H¨uppe, J. Grabinger, and B. Wohlmuth. Modeling and Finite Element Formulation for

Acoustic Problems Including Rotating Domains. AIAA Journal, 2016.

[20] M. Kaltenbacher, A. H¨uppe, A. Reppenhagen, M. Tautz, S. Becker, and W. Kuehnel. Computational aeroacous-
tics for hvac systems utilizing a hybrid approach. SAE International Journal of Passenger Cars-Mechanical
Systems, 9(2016-01-1808):1047–1052, 2016.

[21] M. Lasota, P. ˇSidlof, M. Kaltenbacher, and S. Schoder. Impact of the sub-grid scale turbulence model in aeroa-

coustic simulation of human voice. Applied Sciences, 11(4):1970, 2021.

7

openCFS Software

A PREPRINT

[22] P. Maurerlehner, S. Schoder, C. Freidhager, A. Wurzinger, A. Hauser, F. Kraxberger, S. Falk, S. Kniesburges,
M. Echternach, M. D¨ollinger, et al. Efﬁcient numerical simulation of the human voice. e & i Elektrotechnik und
Informationstechnik, 138(3):219–228, 2021.

[23] K. Roppert, S. Schoder, M. Kaltenbacher, and F. Toth. Non-conforming ﬁnite elements. International Compumag

Society Newsletter, 2018(3), 2018.

[24] S. Schoder, C. Junger, and M. Kaltenbacher. Computational aeroacoustics of the eaa benchmark case of an axial

fan. Acta Acustica, 4(5):22, 2020.

[25] S. Schoder, C. Junger, K. Roppert, and M. Kaltenbacher. Radial basis function interpolation for computational

aeroacoustics. In AIAA AVIATION 2020 FORUM, page 2511, 2020.

[26] S. Schoder, C. Junger, M. Weitz, and M. Kaltenbacher. Conservative source term interpolation for hybrid aeroa-

coustic computations. In 25th AIAA/CEAS aeroacoustics conference, page 2538, 2019.

[27] S. Schoder and M. Kaltenbacher. Hybrid aeroacoustic computations: State of art and new achievements. Journal

of Theoretical and Computational Acoustics, 27(04):1950020, 2019.

[28] S. Schoder, M. Kaltenbacher, and K. Roppert. Helmholtz’s decomposition applied to aeroacoustics.

In 25th

AIAA/CEAS Aeroacoustics Conference, 2019-2561.

[29] S. Schoder, I. Lazarov, and M. Kaltenbacher. Numerical investigation of a deep cavity with an overhanging lip

considering aeroacoustic feedback mechanism. arXiv preprint arXiv:2006.03279, 2020.

[30] S. Schoder, P. Maurerlehner, A. Wurzinger, A. Hauser, S. Falk, S. Kniesburges, M. D¨ollinger, and
M. Kaltenbacher. Aeroacoustic sound source characterization of the human voice production-perturbed con-
vective wave equation. Applied Sciences, 11(6):2614, 2021.

[31] S. Schoder and K. Roppert. Learning expertise actively to model domain knowledge (lead) with application to

human phonation. arXiv, 2022.

[32] S. Schoder, K. Roppert, and M. Kaltenbacher. Helmholtz’s decomposition for compressible ﬂows and its appli-

cation to computational aeroacoustics. SN Partial Differ. Equ. Appl., pages 1–20, 2020.

[33] S. Schoder, K. Roppert, and M. Kaltenbacher. Postprocessing of direct aeroacoustic simulations using helmholtz

decomposition. AIAA Journal, pages 1–9, 2020.

[34] S. Schoder, K. Roppert, M. Weitz, C. Junger, and M. Kaltenbacher. Aeroacoustic source term computation based
on radial basis functions. International Journal for Numerical Methods in Engineering, 121(9):2051–2067, 2020.
[35] S. Schoder, F. Toth, C. Freidhager, and M. Kaltenbacher. Revisiting inﬁnite mapping layer for open domain

problems. Journal of Computational Physics, 392:354–367, 2019.

[36] S. Schoder, M. Weitz, P. Maurerlehner, A. Hauser, S. Falk, S. Kniesburges, M. D¨ollinger, and M. Kaltenbacher.
Hybrid aeroacoustic approach for the efﬁcient numerical simulation of human phonation. The Journal of the
Acoustical Society of America, 147(2):1179–1194, 2020.

[37] S. Schoder, A. Wurzinger, C. Junger, M. Weitz, C. Freidhager, K. Roppert, and M. Kaltenbacher. Application
limits of conservative source interpolation methods using a low mach number hybrid aeroacoustic workﬂow.
Journal of Theoretical and Computational Acoustics, 29(01):2050032, 2021.

[38] S. J. Schoder. Aeroacoustic analogies based on compressible ﬂow data. PhD thesis, Wien, 2018.
[39] M. Tautz, K. Besserer, S. Becker, and M. Kaltenbacher. Source formulations and boundary treatments for

lighthill’s analogy applied to incompressible ﬂows. AIAA Journal, 56(7):2769–2781, 2018.

[40] L. Tieghi, S. Becker, A. Corsini, G. Delibra, S. Schoder, and F. Czwielong. Machine-learning clustering methods
applied to detection of noise sources in low-speed axial fan. In 2022 Turbomachinery Technical Conference &
Exposition: ASME Turbo Expo 2022, 2022.

[41] J. Val´aˇsek, M. Kaltenbacher, and P. Sv´aˇcek. On the application of acoustic analogies in the numerical simulation

of human phonation process. Flow, Turbulence and Combustion, 102(1):129–143, 2019.

[42] J. Weber, M. Tautz, S. Becker, A. H¨uppe, and M. Kaltenbacher. Computational aeroacoustic simulations of small
vertical axis wind turbine. In INTER-NOISE and NOISE-CON Congress and Conference Proceedings, volume
253, pages 4254–4262. Institute of Noise Control Engineering, 2016.

[43] M. Weitz, S. Schoder, and M. Kaltenbacher. Numerical investigation of the resonance behavior of ﬂow-excited

helmholtz resonators. PAMM, 19(1):e201900033, 2019.

[44] S. Z¨orner, P. ˇSidlof, A. H¨uppe, and M. Kaltenbacher. Flow and acoustic effects in the larynx for varying geome-

tries. Acta Acustica united with Acustica, 102(2):257–267, 2016.

8

