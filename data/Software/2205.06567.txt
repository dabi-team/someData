2
2
0
2

y
a
M
3
1

]

R
C
.
s
c
[

1
v
7
6
5
6
0
.
5
0
2
2
:
v
i
X
r
a

Millimeter-Wave Automotive Radar Spooﬁng

Mihai Ordean, Flavio D. Garcia
{m.ordean, f.garcia}@cs.bham.ac.uk
University of Birmingham

Abstract
Millimeter-wave radar systems are one of the core compo-
nents of the safety-critical Advanced Driver Assistant System
(ADAS) of a modern vehicle. Due to their ability to operate
efﬁciently despite bad weather conditions and poor visibility,
they are often the only reliable sensor a car has to detect and
evaluate potential dangers in the surrounding environment.

In this paper, we propose several attacks against automotive
radars for the purposes of assessing their reliability in real-
world scenarios. Using COTS hardware, we are able to suc-
cessfully interfere with automotive-grade FMCW radars oper-
ating in the commonly used 77GHz frequency band, deployed
in real-world, truly wireless environments. Our strongest type
of interference is able to trick the victim into detecting virtual
(moving) objects. We also extend this attack with a novel
method that leverages noise to remove real-world objects,
thus complementing the aforementioned object spooﬁng at-
tack. We evaluate the viability of our attacks in two ways.
First, we establish a baseline by implementing and evaluating
an unrealistically powerful adversary which requires synchro-
nization to the victim in a limited setup that uses wire-based
chirp synchronization. Later, we implement, for the ﬁrst time,
a truly wireless attack that evaluates a weaker but realistic
adversary which is non-synchronized and does not require
any adjustment feedback from the victim. Finally, we provide
theoretical fundamentals for our ﬁndings, and discuss the ef-
ﬁciency of potential countermeasures against the proposed
attacks. We plan to release our software as open-source.

1 Introduction

Radar systems have been part of military and large com-
mercial applications for decades, however, in recent years
they have also become integral components of modern cars,
e.g., in adaptive cruise control systems. Together with high-
resolution cameras and LiDARs, millimeter-wave (mmWave)
radars are the sensors through which modern vehicles per-
ceive the surrounding environment and are an integral safety-
related component of Advanced Driver Assistant Systems

(ADAS). As part of ADAS, mmWave radars assist with ob-
ject identiﬁcation and tracking in situations where the other
sensors are unable to perform optimally, such as in difﬁcult
light conditions or in the absence of direct line-of-sight. As
such, for safety reasons, it is important for radars to produce
accurate measurements that represent true depictions of the
environment.

In recent years, the safety and reliability of sensors has
come under scrutiny, mostly in the context of autonomous
vehicles. LiDAR and camera systems have been thoroughly
studied, and numerous successful object spooﬁng attacks have
been demonstrated [1–7]. However, attacks against radar
systems, and especially the frequency-modulated continuous
wave (FMCW) radars used in cars, face fundamentally differ-
ent challenges to LiDARs, and, have only been studied in arti-
ﬁcial, either simulated or wired, environments. The complex
nature of radar’s hardware-physical level, e.g., use of high-
frequency signals, specialized hardware, fast internal clocks,
and protections against signal-noise, have made adversarial
interference difﬁcult. So far, only partial success has been
shown in constrained environments [8–10], with the majority
of research being focused on potential, mostly theoretical,
countermeasures [11, 12]. This is also noted in [10], which
mentions that deploying spooﬁng attacks against commercial
automotive radars operating in the mmWave frequency range,
poses signiﬁcant difﬁculties when compared to evaluations
conducted in simulated or constrained wired setups. The two
most important highlights of their ﬁndings are, ﬁrst, the dif-
ﬁculty of synchronizing to the victim’s carrier frequency (or
start frequency), and second, the problem of accounting for,
and then minimizing self-interference due to coupling and
reﬂections.

In this work, we extend the state-of-the-art by analyzing the
viability of spooﬁng attacks against truly wireless automotive-
grade radars operating at 77GHz. Using COTS hardware in
a self-built physical testing framework, we show that such
attacks are indeed possible, and provide both theoretical and
practical details about how our attacks can be constructed and
deployed.

1

 
 
 
 
 
 
1.1 Contributions

We propose (to the best of our knowledge) the ﬁrst truly
wireless attacks against automotive-grade mmWave FMCW
radars operating in actively used automotive frequency range
of 76-78GHz. Speciﬁcally, in this paper we show:

1. The ﬁrst object spooﬁng attack against an automotive

radar which consists of virtual moving objects.

2. A new practical method of injecting multiple virtual

objects at custom angles.

3. A novel approach to generating and leveraging noise
constructively, to remove physical objects and enhance
object spooﬁng attacks.

4. An in-depth analysis of radar signal processing compo-
nents and algorithms from an adversarial point of view
using real, automotive-grade radar devices deployed in
the wild.

In addition to the above contributions, we also review the most
efﬁcient countermeasures currently proposed in the literature
and place them in the context of our attacks.

A demo of our attack, highlighting multiple moving virtual
objects and the constructive noise generation, i.e. (1), (2) and
(3) above, is available at: https://mega.nz/file/o58Ek
KCI#5paFa3KFLIqn3WNyxHLhobRFg8NUyiwiWm8Lx3rsn
bM.

2 Background: Automotive radar fundamen-

tals

In the automotive setting, radar systems are used primarily
to identify objects in the environment. The identiﬁed objects
movements are then tracked and assessed in order to deter-
mine the threat to the radar equipped vehicle. Being part
of a vehicle’s safety system, the accurate identiﬁcation and
constant monitoring of objects are necessary requirements.
These two actions are based on three measurements: object
distance or range, object velocity and object angle-of-arrival,
all with respect to the radar system.

Measurements of range, or distance are done by leveraging
three physical properties of electromagnetic energy: physical
objects reﬂect electromagnetic waves, electromagnetic waves
or signals travel through air at a constant speed (i.e., speed of
light) and ﬁnally energy travels through space in a straight line.
Pulse radars are designed to measure distance using sequential
transmit and listen cycles where waves are emitted in pulses
during a transmit cycle, which is immediately followed up by
a listen cycle where the radar monitors for incoming signals
to detect reﬂections. The big disadvantage of this approach is
that measurements are done in chunks, which lead to potential
gaps of knowledge.

Figure 1: Radar block diagram (left), a minimalistic attacker (right)
and the signals between the two (middle).

Continuous-wave radars (CW radar) address this problem
by transmitting continuously, on a known stable frequency, a
wave of electromagnetic energy while also listening for waves
from any reﬂecting objects. Moving objects can be detected
using the Doppler effect, which causes the received signal to
have a different frequency from the transmitted wave. How-
ever, the reliance on Doppler-shift detection means that un-
modulated continuous wave radars cannot measure distance,
only the velocity of moving objects.

CW radars can be further improved by modulating the fre-
quency of their transmitted signal combining the properties
of both pulse and CW radars into the frequency-modulated
continuous wave radar, enabling both distance and speed
measurements as needed in order to distinguish and track ob-
jects in an automotive setting. Automotive FMCW radar sys-
tems operate on high frequencies (e.g., between 76GHz and
81GHz) which enable very precise distance measurements
(e.g., ≈ 10−2m) and also facilitate target measurements in
close proximity both to one another and to the radar system
itself (i.e., the minimal measured range is proportional to the
transmitted wavelength).

In this paper we are looking at several attacks which tamper
with these safety critical measurements by generating precise
electromagnetic waves that are misinterpreted by the victim
radar, therefore in order to understand these it is important to
ﬁrst clarify the radars components that play a role in our attack
and how the measurements are performed in the absence of an
attacking party. As such, in the following we give details on
the building blocks of a radar system followed by an overview
on how FMCW radars measure range, velocity and angle-of-
arrival of objects.

2.1 Radar system structure

In order to attack a radar system, one needs to understand
how signals are processed inside a radar ECU. We start with
the FMCW radar block diagram shown in Fig. 1-left1. The
measurement process starts on the transmit chain, from the

1Fig. 1-middle and right sections depict our attacker and the observed RF

signals, both detailed in Section 3.2.

2

RXADCDACSig GenSig GenFFTSig ProcTXRXTXnCvRvCaRF int.Automotive radar system (victim)AttackernnLP FilterAmp.DividerTX ChainRX Chainby a slope S which depends on b and tc i.e., b = S · tc, which
describes the rate at which the chirp ramps up (see Fig. 2a).
Once the chirp is emitted, it travels to the target object, which
reﬂects it back. The reﬂection signal is received by the radar
using a separate RX antenna. Inside the radar system, the
TX and RX signals are mixed together. The frequency of the
resulting combined signal is called intermediate frequency
(IF) and represents the difference between the instantaneous
frequency of the TX-chirp and RX-chirp. Any single object
in front of the radar will produce an IF signal that has con-
stant frequency tone. The frequency of this tone will be sτ,
and represents the value which allows the computation of the
distance to the object d, as shown below:

sτ =

S2d
c0

; d =

c0sτ
2S

=

c0τ
2

(1)

where τ is the round-trip duration of the signal and c0 is the
speed of light.

The above equation describes the situation when the radar
has detected a single object, however FMCW radars can de-
tect multiple objects within one chirp. If multiple objects
exist in front of the radar, then each of them will reﬂect the
TX chirp, and the RX chirps received will be delayed propor-
tional to the distance to each of the objects (see Fig. 2b). The
Fourier transform is used to process the IF signal comprised of
the TX chirp and the RX reﬂections to extract the individual
frequencies corresponding to each object. The range resolu-
tion, or the ability to distinguish between multiple objects, is
thus given by the ability to separate the frequencies that make
up the IF signal. This is proportional to the bandwidth b of
the transmitted chirp signal and is derived from the Fourier
transform theory as dres = c0
2b .

2.3 Object velocity measurement

In addition to range measurements, FMCW radars can also
measure relative velocity of objects. This measurement is im-
portant because it allows a radar to further distinguish between
objects located at a speciﬁc distance based on their relative
velocities. Our non-synchronized adversary, described in Sec-
tion 4.4, exploits some of the limitations of this measuring
technique, in order to generate non-static virtual objects.

Intuitively, the relative velocity of an object can be com-
puted as the distance travelled by the object between the two
positions over a known time interval tc. These distances can
be measured using the range-FFT described above, using only
two chirps separated by the time tc. This type of measure-
ment is, however, not suitable in practice, because the high-
frequency velocity measurements that are needed to support
real-time tracking of cars, obstacles, etc., are not achievable
even with very small values of tc. One important reason for
this it that the reﬂections produced by these closely grouped
chirps will have identical tonalities for the IF signal, making

(a) Chirp signal waveform where:
TX line represents the transmitted
signal shown as a frequency varia-
tion over time; RX line as the re-
ceived signal; b and S are the band-
width and slope of the TX and RX
signals; τ is the delay time between
the TX and the RX chirps and tc is
the chirp duration. sτ is the IF, a
constant frequency corresponding
to a reﬂected object.

(b) The radar receives a combina-
tion of RX reﬂections correspond-
ing to physical objects. These re-
ﬂections are combined internally
with the TX signal to obtain the
intermediate frequency (IF) signal.
sτ1...3 are the individual IF tones cor-
responding to each reﬂected objects
and are extracted using the Fourier
transform.

Figure 2: Radar chirp parameters

signal generator component (e.g., Sig Gen) which produces a
sequence of chirps (i.e., chirp frame) according to internally
conﬁgured parameters such as: chirp bandwidth b, chirp dura-
tion tc, chirps per frame N, and frame duration t f . This digital
signal is converted to analog and then sent out using a TX
antenna array. This outbound analog signal is also internally
routed to the receive chain using a power divider in order to
provide the TX component of the intermediate frequency (IF)
signal.

On the receive chain, reﬂections are measured by the RX
antenna array. The measured signal is ampliﬁed and then
combined with the internally routed TX signal to construct
the IF. After the combination, ﬁltering is performed on the
analog IF signal in order to eliminate unwanted noise. Fi-
nally, the IF is converted into digital format and fed into a
signal processing component which can process this signal
and extract the distance, velocity, and angle-of-arrival of the
objects in front of the radar using FFT, CFAR and Windowing
techniques as described in the following.

2.2 Object range measurement

The distance measurement is the main method of identifying
objects in the environment and, therefore, manipulating this
measurement is one of the main components of a successful
object spooﬁng attack. In the following, we give a high level
description on how ranges are measured by standard radar
system. In Section 3, we build on this and show how attacker
generated signals can be constructed in order to trick the
victim radar into identifying non-existing, virtual objects.

The measurement process begins with a signal called chirp
which is transmitted towards a target using a dedicated TX
antenna. Modern automotive radars use a saw-tooth wave-
form chirp that is characterized by a starting frequency fs,
a bandwidth b, and duration tc. The chirp is also described

3

TX chirpRX chirptcτ sτ btfSTX chirpreflected signalsIF windowtfsτ1 sτ3 sτ2 Figure 3: Chirp frame with duration t f comprised of N uniformly
distributed identical chirps, each of duration tc. The signal acquisi-
tion/sampling for the IF only happens during the frequency ramp-up
period (solid blue line) and the ramp-down (dotted blue line) is
ignored.

Figure 4: Angle of arrival. Left: radar view of two objects as given by
angles θ{1,2}. Right: θ computation using two simultaneous distance
measurements d and d + ∆d done at antennas RX{1,2} respectively,
and the ﬁxed distance between them l.

velocity measurements impossible using just frequency in-
formation. To address this, FMCW radars rely on the phase
information contained in the reﬂected signal. By measuring
phase changes between the chirps, small motions of objects
can be detected which otherwise would remain undetected by
the range-FFT.

Velocity measurements are therefore done in several steps.
Initially, the radar system transmits and measures a sequence
of N equally spaced chirps grouped together in a chirp frame
as shown in Fig. 3. Then a range-FFT is computed for each
of the N chirps inside the frame. The range-FFT will show
identical peaks for each chirp in the chirp frame, but each
peak will contain multiple phase contributions. A second FFT,
called Doppler-FFT, is then used to extract this phase informa-
tion as a phase difference, ∆φ. This difference corresponds to
the small movements that occurred during the measurement
interval and enables the computation of the velocity as:

v =

λ∆φ
4πtc

(2)

where λ is the wavelength of the reﬂected signal.

2.4 Object angle-of-arrival measurement

Lastly, FMCW radars are also able to identify objects based
on their angle-of-arrival (AoA) (see Fig. 4). Our multiple vir-
tual object generation attack, shown in Section 3.5, exploits
the internal details of this measurement in order to generate
several virtual objects using a single adversarial device. A
brief description of how radars compute AoA is presented in
the following.

The angle-of-arrival measurement is similar to the object
velocity measurement in the sense that it leverages the FMCW
radars ability to detect small phase changes in the peaks ob-
tained from the range-FFT or Doppler-FFT which correspond
to variations in the distance travelled by the reﬂected signal.
However, instead of measuring the phase difference between
multiple chirps, angle estimation relies instead on the ability
to measure the phase difference between multiple physically
separated locations for a single chirp. Therefore, in order to

conduct AoA measurements, the radar system needs to be
equipped with at least two RX antennas.

For a horizontal plane and two receive antennas i.e., RX{1,2}
separated by a physical distance l, as shown in Fig. 4 the extra
distance travelled by the reﬂected signal, ∆d, to reach RX2 can
be computed as ∆d = lsin(θ), where θ is the angle-of-arrival.
However, this distance can also be deﬁned as a function of
the phase difference ∆d = λ∆φ
2π . This enables the computation
of the AoA from the measured ∆φ as:

θ = arcsin(

λ∆φ
2πl

)

(3)

2.5 Signal processing

In radar systems, signal processing algorithms play the crucial
role of determining which reﬂected signals represent noise
and which ones represent actual objects by working in con-
junction with the measurements types described above. It
follows that, in order to successfully generate virtual objects
in an adversarial setup, one needs to understand the function-
ality and inner workings of these algorithms. In the following
we present their standard mode of operation and in Section 3.6
we detail how adversarial generated signals can bias the in-
ternal state of these algorithms to aid in constructive physical
object removal, which complements virtual object generation
and identiﬁcation.

2.5.1 Constant false alarm rate (CFAR) algorithms

One important challenge in object detection is to determine
whether the FFT spectrum peaks produced by the radar front-
end correspond to an objects or not. Threshold values can
be used to distinguish between noise and objects, however
computing these values statically, in ideal situations, leads
to unpredictable results such as either too many false alarms
if the threshold is too low, or poor object detection if the
threshold is too high. The constant false alarm rate (CFAR)
algorithms mitigate the issue by dynamically computing a
noise ﬂoor that is adapted to the environment measured. This
ensures that the number of false alarms does not depend on

4

tfTX1tctfTX2TXNθ1radarθ2θ1radarθ2objectRX1RX2TXdd+Δd lobjectRX1RX2TXdd+Δd lx1

g1

y

g2

xnc

noise estimation function

ne

t

sc

X

comparator

(y is ob j) ∈ {0, 1}

Figure 6: CFAR block diagram for evaluating a range cell y. First, a
noise estimation function is applied on y’s neighboring cells x1..nc.
Two or more guard cells (e.g., g1,2) are used to isolate y, the target
cell, from the rest of the values in the noise reference window. The
noise estimation function’s output, ne, is scaled using a precomputed
value sc to obtain the noise threshold t of the window. Finally, y is
compared to the noise threshold to determine whether it represents
an object or not.

− 1
nc
sc = nc(P
FA − 1) using statistical properties of the probabil-
ity density functions associated to the range cells after square
law is applied [13], and the probability density function of
the test cell y. Complete details for deriving the equation are
available in [14].

After computing threshold values t for each reference win-
dow, the CA-CFAR algorithm returns a Boolean array which
states if the test range cell y has exceeded the adaptive noise
threshold computed or not.
OS-CFAR. The ordered-static CFAR algorithm has the same
design as CA-CFAR (see Fig. 6). The only signiﬁcant differ-
ence comes from the noise estimation function used. Where
CA-CFAR used a mean value function to estimate the noise in
a reference window, the OS-CFAR algorithm uses an ordered-
static function where noise is estimated by looking at the kth
order value in a set comprised of the values associated to
the neighboring cells, sorted in ascended order. As such, if
multiple objects are located in the reference window, they
do not affect the detection in the cell under test y. Accord-
ing to [15] the probability of false alarm for an OS-CFAR
algorithm evaluated on a value k can be reduced to:

PFA = k

(cid:18)nc
k

(cid:19) (k − 1)!(sc + nc − k)!
(sc + nc)!

By solving the above equation the scaling factor, sc, can
be obtained for suitable ﬁxed values of PFA. We discuss the
speciﬁc parameters we used for each CFAR algorithm in order
to verify our attacks in Section 4.2.

2.5.2 Windowing algorithms

Weighting functions, also known as windowing functions, are
algorithms used to address issues related to spectral leakage.
As stated previously, the FFT of a reﬂected signal tends to
spread into adjacent frequency bins, causing the phenomenon
known as spectral leakage. Ignoring the spectral leakage can

Figure 5: CFAR range-FFT plot. Highlighted peaks represent the
physical objects identiﬁed by OS-CFAR (top) and CA-CFAR (bot-
tom). Range (cm) is shown on the 0x axis and signal strength of
the reﬂections (dBm) is shown on the 0y axis. The green vertical
asymptote (at x = 40) represents the minimum measurement range
imposed by the CFAR window.

the noise power level, and facilitate detection rate adjustments
such that both safety and environment noise constraints are
taken into account. In the following, we describe the most
common CFAR algorithms used by the automotive radars
to estimate the noise ﬂoor: cell averaging (CA)-CFAR and
ordered static (OS)-CFAR. The reference output of these
can be seen in Fig. 5. We have used both algorithms in the
evaluation of our attacks.
CA-CFAR. The cell-averaging CFAR algorithm begins by
splitting the raw measurements from the FMCW radar system
into range cells. A sliding-window technique is then used to
determine the noise threshold for each tested cell by averaging
over nc neighboring cells, x1..nc, as shown in Fig. 6. Cells are
derived from the frequency bins generated by the FFT from
the raw signal received by the radar. Each nc value window is
made up of three types of cells: the test cell which is selected
to be in the middle of the interval, the noise neighbor cells
which are split evenly to the left and to the right of the target
cell, and ﬁnally guarding cells which are cells adjacent to
the test cell but which are not used by the noise estimation
function. Guarding cells are especially important because
when measuring physical objects, FFT peaks often spread
over several frequency bins, extending into neighboring range
cells. Another important aspect to note is that the minimum
measurement range of a radar using CFAR is deﬁned by the
size of the window. This is because the ﬁrst test cell that can
be evaluated needs to be located at least nc
2 + 1 range cells
away from the radar front. As such, for a reference window
of nc values, the basis for the noise estimation function used
by CA-CFAR is a mean value function: ne = 1

nc ∑nc

i=1 xi.

Adaptive threshold radar systems, however, are charac-
terized by ﬁxed probability of a false alarm PFA values and
window size values nc. Thus, in order to use the result from
the averaging process ne to compute the noise threshold value
t, and determine whether the tested cell is an object or not a
scaling factor value, sc, is used. This value is computed as:

5

result in the non-detection of target signals and therefore of
objects. CFAR algorithms use guarding cells to mitigate these
effects, however windowing functions are a more efﬁcient,
complementary method of dealing with the issue.

Windowing functions are applied to the captured signal
before it passes to the FFT stage, thus before frequency bins
are extracted, behaving more or less like an electronic sig-
nal ﬁlter. For distances smaller than 31 nautical-miles (e.g.
57 km) there is no signiﬁcant difference between windowing
algorithms, however Hann still remains one of the recom-
mended windowing functions for reducing spectral leakage
and enhancing frequency resolution [16]. The radars we use
have hardware level implementations of the Hann windowing
algorithm, and thus we evaluate our attacks against a victim
which ﬁlter signals using this technique in order to enhance
the practicality of our evaluation.

3 Attacking FMCW radars

3.1 Threat model

Our threat model has been introduced previously in Fig. 1. In
our model, we only have two requirements. First, the adver-
sary needs access to a radio interface such as a secondary radar
device. These are usually available as COTS devices [17]
or can be retroﬁtted from existing automotive radar ECUs.
Alternatively, a specialized SDR capable of generating chirps
in the victim’s frequency range (e.g., 76-78GHz) could be
used. As far as we are aware such SDRs do not exist, which,
we speculate, is why truly wireless attacks have not been
demonstrated up until now. Second, the adversary also re-
quires some generic information about the implementation of
the victim’s radar ECU, in order to narrow down the suitable
attack parameters. Fortunately, obtaining these constant pa-
rameters is a one-off effort which can easily be accomplished
by surveying commercial radar specs such as ECU user manu-
als or promotional materials. Furthermore, we have observed
that these are common across radar units [18, 19].

As such, the ﬁrst step of the attack consists of obtaining
the victim’s chirp parameters, i.e., the starting frequency ( fs),
the bandwidth b and the chirp duration tc, along with the
frame length N and the frame duration t f . At this point,
based on how these parameters are conﬁgured, we distinguish
two types of adversaries: synchronized and non-synchronized.
The synchronized adversary is stronger, and leverages prior
synchronization with the victim before deploying the attack,
as well as constant adjustment feedback throughout the attack.
The weaker non-synchronized adversary does not require any
type of synchronization, and only leverages knowledge of the
initial parameters.

Following the initial parameter learning and conﬁguration,
the attack continues with the main objective: generating vir-
tual objects using adversary generated signals. We strictly
require that these objects must be indistinguishable from ac-

tual physical object reﬂections, when observed by the victim
radar. In order to achieve this, attacker generated signals need
to be able to reach the signal processing component (e.g., Sig
Proc) of the receive chain of the victim (see Fig. 1) while still
possessing all the characteristics of an actual reﬂection. The
attack is considered successful if the victim is able to infer
the existence of objects by computing range, velocity or AoA
using these signals.

3.2 Preliminary: adversarial signals

From an adversary point of view, the ﬁrst challenge in generat-
ing virtual objects, is to inﬂuence the intermediate frequency
signal of the victim. This, however, is a difﬁcult undertaking
given that the adversary has only partial control of the signals
observed by the victim and, therefore, limited capability to
inﬂuence them. In order to get a better picture, brieﬂy, let
us consider the following signals observable at the radar’s
RF interface (also shown in Fig. 1): Cv the victim’s transmit-
ted chirps, Rv the legitimate reﬂections of physical objects,
and Ca the adversary transmitted chirps. Then, by deﬁnition,
when the victim’s transmitted signal is T Xv = Cv, its received
signal is RXv = Rv ⊗Ca. The victim’s intermediate frequency
signal IFv is therefore:

IFv = Cv ⊗ (Rv ⊗Ca)

However, out of these three signals comprising IFv, the ad-
versary can only affect the victim’s intermediate frequency,
through its generated signals Ca. Victim transmitted chirps
Cv can only be leveraged to gain information about the inter-
nal parameters of the victim radar and, most importantly, the
adversary has no ability to measure or observe Rv, the physi-
cal object reﬂections as seen from the victim’s point of view.
This represents one of the biggest challenges in deploying
object-spooﬁng attacks in truly wireless environments [10].
In Section 4 we detail our method to overcome this.

3.2.1 Adversarial parameters for object generation

Successful virtual object generation requires an adversary
that is able to control the following three components: signal
shape, delay and power. The signal shape aspect refers to
the adversary’s ability to produce signals that are identical to
signals produced by physical objects when they are illumi-
nated by the victim transmitted signals. An adversary with
knowledge of the chirp parameters of the victim will be able
to produce valid signals, given that the signals reﬂected by
real objects will be identical to those with which they were
illuminated.

The delay aspect refers to the adversary’s ability to control
the time delay of its injected signals or chirps with respect
to the victim’s transmitted chirps. Given that distance to ob-
jects is derived based on measurements of this delay (see

6

Figure 7: Synchronized adversarial scenario. Top represents a stan-
dard sequence of chirps (i.e., frame) sent by a victim radar device.
The expected reﬂected signal is shown as a dotted green line. Bottom
represents the attacking radar’s chirps, which are identical to the
victim radar’s chirps, but at a slight offset. tc is the chirp duration
during which the victim radar samples (i.e., listens to) the RF signals.
Tc is the chirp period of the victim. τ is the time delay of a signal
reﬂected by a physical object. τa is an attacker controlled delay
which, if chosen appropriately, results in aligned signals which are
valid reﬂections when received by the victim radar.

Section 2.2) it represents the main component in virtual ob-
ject generation. Controlling delay however is not trivial for
several reasons. First, a typical radar system will only listen to
signals (i.e., perform data acquisition) while also transmitting
them. This is required in order to generate the IF signal, and
it is fundamental to the functionality of FMCW radars. A
successful adversary will need to be sufﬁciently synchronized
to the victim in order to be able to inject any signals. Sec-
ond, radar transmitted signals are not individual chirps but
rather chirp frames, thus requiring the adversary to synchro-
nize with multiple chirps consistently. And ﬁnally, due to
reasons related to energy consumption, the transmission (and
listening) time within a frame represents ≈ 1% of the total
frame duration2 which adds further, even higher constraints,
on the precision requirements of the adversary.

Lastly, the power aspect refers to the adversary’s ability
to transmit signals with intensities/amplitudes comparable
to those generated by the illuminated objects. The intensity
of this signal, considering its path as starting from a source
radar, going to an object and then getting back to the radar, is
inversely proportional to the square of the distance, according
to the inverse square law, but applied twice as the signal
travels in both directions, namely I ∝ 1
d4 . This, however, is
not trivial as the adversarial injected signals need to match
this intensity in order to circumvent noise ﬁltering hardware
(e.g., electronic low-pass ﬁlters) and software techniques (e.g.,
CFAR) whilst travelling the distance only once.

In the following, we describe, ﬁrst, the classic adversarial

2A typical frame with duration t f rame = 200ms consisting of 50 chirps
with duration tc = 51.2µs has an active transmission time of 1.28% or 2.56ms.

Figure 8: Non-synchronized adversarial scenario. Top represents
a standard sequence of chirps (blue) and expected reﬂected signal
(green) as perceived by the victim radar device. Middle represents
the attacking radar’s chirps. Bottom shows the actual signals re-
ceived by the victim radar: a combination of legitimate reﬂected
chirps (green) and the injected chirps (orange). Notation as in Fig. 7
except for: (1) the chirp period of the attacker Ta is different from
the chirp period of the victim Tc and (2) the attacker transmits more
chirps per frame than the victim.

scenario which relies on a synchronized adversary. Then we
introduce our new non-synchronized adversary. Finally, we
show two new capabilities of the non-synchronized adversary
that were previously not known: multi-object generation, and
a constructive noise generation method that removes physical
objects and highlights virtual ones.

3.3 Baseline scenario: synchronized adver-

sary

Intuitively, when thinking of radar spooﬁng attacks, the ones
expected to have the highest chances to succeed are those
which use a synchronized adversarial model. We speculate
that this model has been primarily chosen based on its suc-
cess against other automotive sensors such as LiDAR [1–5].
Due to the increased complexity of radar sensors (as com-
pared to LiDAR and camera systems), however, only partial
success has been demonstrated in constrained, simulated en-
vironments [8, 9].

We begin with the analysis of the synchronized adversary
due to its familiarity and simplicity. We evaluate it later
in Section 4.3 in order to establish an attack baseline. Our
main attacker, however, is the non-synchronized attacker,
introduced in Section 3.4 which is a weaker, more ﬂexible
attacker which does not require synchronization and achieves
signiﬁcantly better results.

7

τa tctfTX1TXNref.signalref.signalvictim TXTX1tfTXNattacker TXτ τa Tcτa tfTX1TXNref.signalref.signalvictim TXTX1tfTXMattacker TXtfvictim RXτ tatcTcTaAs such, in the synchronized adversarial scenario, the ad-
versary deploys its attack in two stages. First, the adversary
attempts to synchronize with a victim through passive listen-
ing, and learn the period of the victim transmitted chirps, Tc.
If this can be accomplished successfully, then the attacker
continues with the second stage, in which it attempts to main-
tain chirp-level and/or frame-level synchronization in order
to correctly align its self-generated signals to the victim’s
and produce valid reﬂections. The relationship between the
victim and the attacker radars is shown in Fig. 7 and works as
follows. After the adversary learns the victim’s chirp period
Tc, it will compute a ﬁxed time offset τa calculated based on
the victim’s chirp start time. The attacker then starts trans-
mitting chirps identical to the victim’s at Tc + τa intervals. If
chirp-level synchronization is maintained, and the value of
τa is smaller than the listening window of the victim (tc) then
the chirps generated by the attacker will be included in the
IFv of the victim. This will result in an attacker controlled
virtual object whose location can be computed using eq. 1 as:
dvo = c0τa
2 .

3.4 Realistic scenario: non-synchronized ad-

versary

In the non-synchronized adversarial scenario, we are analyz-
ing a realistic adversary which does not require any form of
feedback from the victim radar and is completely detached
from the victim, both physically and logically. We discuss
our results for this adversary in Section 4. We consider this
to be a much more realistic adversary in the real world, when
compared to the synchronized one, because maintaining any
level of synchronization between the victim and the attacker
is extremely difﬁcult in practice, mainly due to physical con-
straints and issues related to hardware differences between
the victim and the attacker.

Thus, a non-synchronized adversarial radar is required to
generate valid chirps (i.e., chirps that are interpreted as reﬂec-
tions by the victim), without accurately matching the period
of these chirps to the victim. A summary of this scenario is
presented in Fig. 8. The main difference between the synchro-
nized and non-synchronized attacker scenarios is as follows.
In the non-synchronized version, the adversary does not gen-
erate its chirps at ﬁxed delays computed as an offset from the
victim’s transmitted signals. Instead, the attacker computes
an independent chirp period Ta that is smaller than the vic-
tim’s. By carefully adjusting the ratio between Ta and the
victim’s period Tc, the adversary can achieve a high degree of
overlap with the listening periods tc of the victim, and thus
inﬂuence its intermediate frequency signal. Even though τa is
not constant between chirps from the victim’s point of view,
in this attack, the adversary can still leverage this variability
and generate moving virtual objects. This objects will have
a computable speed equal to vvo = ∆dvo
, where ∆dvo is the
Tc
distance travelled by a virtual object between two separate

Figure 9: An attacker can generate one virtual object per TX antenna.
By adjusting the physical position of its antennas relative to one
another, e.g., (lx, ly), the attacker can inﬂuence the victim perceived
spatial position of the virtual object generated. The distance between
antennas, on the ly direction, is usually ﬁxed.

chirps, where the attacker injected signal is at offsets τ(cid:48)
a and
τ(cid:48)(cid:48)
a. Our experimental results related to this attacker are shown
in Section 4.4.

3.5 Multiple virtual object generation

The multiple virtual object generation scenario is a comple-
mentary attack to the above and can be employed both by
the synchronized and the non-synchronized adversaries. Nor-
mally distance to a physical object, e.g., on the Ox axis, can
be measured by extracting frequency tones from reﬂected
signals as shown in Section 2.2. Brieﬂy, a radar unit pro-
cesses its intermediate-frequency signal using its RX chain,
and extracts frequency tones for each physical or virtual ob-
ject. These tones are then used to determine the distance
to the object approximate to a given resolution, also known
as a range bin. However, when physical objects are located
in close proximity to one another, the frequency tones are
no longer enough to distinguish between individual objects
and end up being grouped together in the same range bin. In
Section 2.4 we explain that it is still possible to distinguish
between multiple objects in the same range bin by measuring
changes to the phase of the signal.

In this new attack scenario, the adversary leverages the
above properties of radars systems to generate multiple ob-
jects. This plays an important role as it can be used by the
adversary to generate objects that are placed at an angle offset
compared to the position of the transmitted antenna, greatly
increasing the capabilities of the attacker. An outline of our
attack is presented in Fig. 9. The attack assumes a standard
victim radar equipped with multiple receive antennas (RX)
which enable angle-of-arrival measurements. On the attacker
side, the adversary is equipped with two or more transmit
antennas (TX) which are all generating identical chirps. The
attack consists of physically altering the distance between
these in a controlled manner for speciﬁc lengths, e.g., (lx, ly)
along the Ox and Oy axis. Given the small relative distances
of lx and ly the antenna movement is not sufﬁcient to alter the
frequency tone produced by each one, however these move-
ments are enough to affect the phases of the attack signals

8

victimattackerlyTX2TX1RX1RX2lxdd+Δdtronic components, such as band-ﬁlters and ampliﬁers, which
ensure that only the suitable frequencies used to generate the
chirp are processed by the receive chain. Furthermore, CFAR
and Windowing algorithms (see Section 2.5) complement the
electronic protections by enabling dynamic noise adjustment
and rejection of outlying signals. Nonetheless, efﬁcient ver-
sions for noise attacks have been known in military setups for
quite some time [20], and have been demonstrated in realis-
tic scenarios such as [21]. However, although these attacks
are able to prevent radar operability, they are still detectable
through noise level measurements across the radar’s observed
spectrum.

The goals of the attacker proposed here, however, are dif-
ferent to those highlighted above. First, our adversary aims
to generate noise that can bypass the hardware ﬁltering of
the victim and is of a suitable intensity such that the attack
remains undetectable. This is a signiﬁcant challenge because
it requires a signiﬁcant reduction and dynamic adjustments
to the power output of its TX signals in order to match the
victim’s expected signal intensity levels; and speciﬁc adjust-
ments to the ways in which noise is generated such that attack
signals generated are not rejected by the CFAR and Window-
ing ﬁltering algorithms.

The second goal of our attacker is to constructively lever-
age the noise generated to aid the detection of virtual objects.
This task is accomplished in the following two steps. First,
existing physical objects are removed from the victim radar’s
view by carefully manipulating the inputs to the CFAR and
Windowing algorithms. This step effectively raises the noise
ﬂoor just enough to establish a new environment baseline, but
still low enough as to not trigger any for of rejection. This is
achieved by the attacker through of its TX signal power levels,
mainly by adjusting distance to the victim and/or by mod-
ifying antenna gains, and through careful signal alignment
such as the one described in for our synchronized and non-
synchronized adversaries above. Virtual object highlighting
can then be performed by overlapping the TX signal corre-
sponding to the generated virtual objects on top of this noise
at the appropriate intervals. We detail our results for this
attack in Section 4.4.

4 Experimental setup and results

Our experimental setup consists of two identical INRAS
Radarbook 2 automotive-grade radars used in the automotive
industry as reference radars for calibrating and testing ADAS
systems [22], with plans to also be used in the aeronautical
industry for electric airplane guidance [23].

Each device consists of on an Arria 10 ARM System-On-
Chip board equipped with a 77-GHz FMCW Frontend [17].
The 77-GHz FMCW Frontend is implemented on an FPGA
and supports 16 RX channels and 2 TX channels. The
unit is capable of computing range-Doppler maps with up
to 2048 range bins and 512 velocity bins, and has built-in

Figure 10: Constructive object removal through noise. The signal-
noise is raised to 80dBm. This obfuscates all real-world objects
that would have been identiﬁed by the CA-CFAR (bottom). The
OS-CFAR (top) can still identify one real-world object, a perfect
target (e.g., corner reﬂector target). Range (cm) is shown on the 0x
axis, and signal strength of the reﬂections (dBm) is shown on the 0y
axis.

generated. The effects observed by the victim, regardless of
the direction of translation performed by the attacker, will
be in the phase spectrum. More speciﬁcally, the victim will
perceive a cluster of objects, one for each of the attacker’s TX
antennas, all located at the same range from the victim (i.e.,
all objects are located in the same range bin), but at different
angles as given by the phase alterations induced by (lx, ly)
translations.

3.6 Constructive physical object

removal

through noise

The constructive physical object removal is our second ex-
tended attack which shows for the ﬁrst time that noise can
be leveraged to remove physical objects and highlight virtual
objects, going further than the traditional destructive interfer-
ence that usually just blinds the victim (Fig. 10).

One of the challenges in spooﬁng radar objects is related to
the lack of adversary’s control over signal reﬂected by physi-
cal objects present in the victim’s environment. Noise inser-
tion has always been viewed as a low-hanging fruit type of
attack, where the adversary saturates the victim’s bandwidth
with high intensity signals in order to blind the victim and
hinder detection. However, modern FMCW radars are able to
keep track of hundreds of objects and have built methods for
detecting, and possibly mitigating, these types of attacks. As
far as we have observed, mitigations consist mainly of elec-

9

ration uses fs = 77GHz, b = 1GHz, tc = 512µs and a frame
size of N = 50 chirps. This radar system is measuring range
and angle-of-arrival using all active receive channels for the
purposes of object identiﬁcation. Signal ﬁltering and object
extraction algorithms involve standard OS and CS CFAR im-
plementations, each conﬁgured with two guarding cells and
nc = 80 neighbor cells. For the OS-CFAR a scale factor of
sc = 0.95 and an order k = 0.75 · nc are used [13, 24]. The
CA-CFAR is conﬁgured to use a dynamic scaling factor with
a false-alarm probability PFA = 0.39 which yields a similar
scaling probability, sc = 0.9528 (see Section 2.5.1). In ad-
dition to the CFAR, radar input signals are also ﬁltered by
applying a Hann window.

Our attacking radar system is using the same chirp conﬁgu-
ration as the victim (e.g., fs = 77GHz, b = 1GHz, tc = 512µs)
but has no additional knowledge with respect to its internal
conﬁguration. The attacker is not synchronized to the victim
in any way and is not performing any synchronization proce-
dure prior to the attack. In order to maintain as much control
as possible, the attacker is using frame sizes of N = 1 chirp.
In our experiments, we used digital signal ampliﬁcation in
the range of -5dB to 31dB. As expected, the best results were
obtained at the lower end of the range, thus all results should
assume a signal strength of -5dB.

4.3 Baseline attack results

In this section, we present the fundamental lessons learned
from our synchronized adversary. We present this more intu-
itive scenario ﬁrst, but highlight the fact that the results for
our main contributions are presented in Section 4.4.

We outlined the theoretical aspects of this attack in previ-
ous sections (mainly Section 3.3), and while they seem fairly
straight forward, in practice we discovered that achieving
perfect synchronization with a victim is a difﬁcult endeavor
due to several reasons. First, the main limiting factor is the
requirement of specialized hardware which not only supports
continuous signal listening in the mmWave bandwidth range
(e.g., 76-78GHz), but is also able to behave like a radar unit
with respect to generating chirps and computing IFs. To the
best of our knowledge, no COTS device of this type currently
exists. Mainly due to this ﬁrst reason, for our real-world exper-
iments, we decided to forgo the complicated procedures out-
lined in literature [8] and opted instead for an out-of-bounds
synchronization via a physical cable between the adversary
and the victim radar unit, while maintaining the rest of the
interaction between the victim and the attacker in the wireless
RF domain. We recognize that this scenario is not suitable
for any practical real-world attacks, however it has allowed
us to better understand the constraints that affect the signal
readings and processing done by radar systems in real-world
wireless adversarial settings, and led us to develop our fully
wireless non-synchronized attacker model. We continue by
detailing the identiﬁed challenges for this attacker and our

Figure 11: Main physical setup. Two radar units are positioned
facing each other at an orthogonal distance of 4m. The attacker is
offset from the victim with 0.4m. The victim’s view is restricted
to a measurement distance of 6m. A control target, in the form of
a corner reﬂector, is positioned 2.55m from the victim, facing it.
T1 and T2 are objects used for the evaluation of our constructive
physical object removal.

hardware support for an FFT processing framework, as well
as an imaging and synthetic-aperture radar (SAR) process-
ing frameworks used to create two-dimensional images or
three-dimensional reconstructions of objects.

4.1 Physical setup

Our physical setup is outlined in Fig. 11. This was used
to test both the wired synchronized attacker and the non-
synchronized wireless one. We intentionally chose a small
and ﬁxed measurement distance for benchmarking between
the victim radar and the attacker, i.e., 4m, to determine the
impact of the attacker signal intensity on the victim as shown
in Fig. 11. It is important to note that in the case of the wire-
less attack, this distance can easily be adjusted to increase or
decrease the intensity of the attacker’s signal. Furthermore,
we have observed that larger distances (e.g. 10m) greatly im-
prove the viability of the attack by allowing better control of
the injected signal’s power, which directly affects the victim
perceived noise.

4.2 Software conﬁguration

For our real-world experiments and benchmarking, we have
additionally implemented CFAR, and windowing algorithms
in software. Due to the high computational requirements
associated with live signal processing, we were restricted
to the built-in hardware FFT functionality when computing
range, velocity and AoA bins. When multiple algorithm
versions were available, we were able to replicate the results
both using the hardware implementation, as well as our own
software based analogues. The speciﬁc numerical parameters
detailed in the following were set to values commonly used
by automotive radar manufacturers, and were obtained by
surveying commercial radar specs [18, 19].

On the victim radar system, we used all 16 available RX
channels and one TX channel. The internal chirp conﬁgu-

10

4m2.55mAttacker6mVictimCornerReflectorCornerReflector0.4mT1T1Figure 12: The adversary starts its chirp at the same time as the
victim, but from a different, lower frequency fa = fs − ∆ fa. The
adversary reaches the victim’s starting frequency fs after the in-
tended delay τa. The part of the attacker’s generated chirp with the
frequency below fs will not be included in the IF computed by the
victim, and any signal processing will therefore not be affected by
this chirp component.

workarounds.

4.3.1 Identiﬁed attack challenges

The main problem we identiﬁed is related to the difﬁculty
of maintaining a synchronized state between the victim and
the attacker. The limiting factor here is that all electromag-
netic waves travel with the same speed, namely the speed
of light. This includes radar chirps and reﬂections, as well
as synchronization pulses sent via the synchronization cable.
This constraint poses a problem both in our case, and in the
case of the classic radio synced attacker, because it forces
the adversary to precisely know, and take into account, the
distance from the victim in order to compute an accurate
synchronization offset. More speciﬁcally, for a successful
attack, the adversary is required to accurately compute the
chirp time value Tc as a function dependent on its distance to
the victim. This is especially challenging when the attacker
and the victim are in relative motion to each other.

Our second immediate observation was that even though we
are using identical radar devices for our victim and attacker,
the internal clocks they are equipped with are functioning
at slightly different frequencies. This manifests as a drift
between the two units and requires periodic synchronization
pulses, ideally before every chirp. This is important because
noise ﬁltering algorithms, e.g., CFAR, will reject signals
that are not consistent between multiple chirps and frames.
However, in practice, perfect chirp-level synchronization is
impossible to achieve due to the tight time constraints related
to signal generation and measurement.

Finally, the last issue we identiﬁed is related to the adver-
sary’s ability to generate chirps with sufﬁciently small delays,
τa (see Section 3.3, Fig. 7), such that they resemble reﬂections
i.e., they reach the victim during its listening period. Our ob-
servations revealed that the timing adjustments available for

11

Figure 13: Plot showing angle-of-arrival (left) together with OS-
CFAR (top-right) and CA-CFAR (bottom-right) range detection
for attacker generated virtual targets. CFAR identiﬁed objects are
highlighted on the CFAR range plots (i.e., OS-CFAR detected three
objects and CA-CFAR one). Some range identiﬁed objects are
comprised of multiple adjacent objects, as shown on the AoA plot.

our COTS radar unit were not precise enough to allow this and
enable us to achieve our goals. On our test devices, the vic-
tim radar simply rejected/ignored the pulses if the computed
attacker delay was τa ≥ 10µs.

4.3.2 Workarounds

We designed our workarounds considering an adversary that is
only able to use COTS devices. We assume that more efﬁcient
methods can be devised to overcome the above-mentioned
physical limitations with custom designed hardware.

We address the synchronization problem by performing
frame level synchronization. Even though this solution is
not perfect, it allows us to maintain partial synchronization
between the two devices with a minimal overhead. With this
solution synchronization pulses are sent between frames after
which each radar unit observes a ﬁxed time delay (i.e., 200ms)
before starting to send its own chirps. The challenge here is
choosing the size of the chirp frame to be sufﬁciently large
such that the sync pulses are minimal, yet small enough such
that the drift does not manifest. Through experimentation, we
were able to determine that no signiﬁcant drift appears for
frame sizes of N ≤ 50 chirps. Additionally, we have observed
that if range-Doppler measurements are not performed by the
victim radar then one-chirp frames can be conﬁgured which
result in perfect synchronization, however with the caveat of
larger delays between chirps and therefore lower real-time
tracking precision.

Given that we are able to synchronize the two boards, we
decided to leverage this when addressing the issue related to
the precision of the adversary’s generated signal delay. Our
solution is outlined in Fig. 12 and works as follows. For a cho-
sen ﬁxed delay τa, and a chirp slope S, the adversary computes
a new starting frequency fa lower than the victim’s starting fre-
quency fs such that fs = fa + S · τa. The synchronized attacker
then proceeds to send its chirps starting from fa at the same
time as the victim. This gives the attacker a frequency-based
control of the delay value τa without adding any noise due to
the fact that frequencies outside the range [ fs, fs + S · tc) are
automatically rejected by the victim radar. We are also able

τa tctftfτ τa ΔfafsfsfaFigure 14: Plots showing a group of virtual objects moving towards the victim radar, i.e., radar front is at the bottom. The two strongest
reﬂections are directly generated by the attacking radar. The secondary reﬂections are uncontrolled reﬂections introduced by the environment.
The plots shown are sampled from a screen capture recording of the attack.

to leverage this ﬁnding for our non-synchronized adversary
in order to better control the movement of virtual objects.

4.4 Real-world attack results

Prior research [8] suggests that synchronization is required to
generate virtual objects. In this section we present our results
which show that this, in fact, is not the case. Basic knowledge
of the chirp parameters ( fs, b and tc) is enough to generate
targets in a victim radar without requiring any additional
synchronization feedback. In order to successfully deploy our
non-synchronized attack, we leverage the theoretical concepts
detailed in Section 3.4 as well as the insights from our baseline
synchronized attacker. In our evaluation, we found that the
attack procedure presented in the following is deterministic
on the devices tested.

We begin with an example of our attack which generates
two virtual objects as shown in Fig. 13. The these results
demonstrate the capabilities of a non-synchronized adversary
which uses two transmit antennas to generate two adjacent
objects placed in the same range bin. This adversary is also
raising the ambient noise levels to remove most of the physical
objects present in the environment. We further explain these
ﬁndings below.

Constructive noise generation. Using the example above,
we analyze the difﬁculty of generating useful noise, for the
purposes of hindering measurements on the victim device,
and obfuscating real physical objects. The ﬁrst goal is to
determine the minimum and maximum frequency, relative to
the victim’s fs and b, that the attacker can use to inﬂuence
the victim’s IF. Our approach is different to standard noise
attack methods, which tend to blanket the victim’s full radio
spectrum. The problem with full spectrum blanking is that
reﬂections are no longer detected at all due to high environ-
mental noise levels [20, 21]. So, through experimentation, we
determine that variations to the chirps starting frequency, fs,
with ±105Hz outside the conﬁgured chirp frequency range
(i.e 77 · 109 ± 105Hz) do not interfere at all with the victim
radar and are, in fact, ﬁltered out by the hardware signal ﬁl-
ters and internal signal processing algorithms, rendering them
useless for the purposes of a constructive noise attack. The
cause for this behavior is that a victim’s listening period ends
with the end of its TX chirp and, given longer time intervals
are required to reach the higher frequencies, they end up not

being sampled. As such, we bound the search space for the
injected chirp’s starting frequency to the above interval and
determine hard bounds for the ∆ fa parameter (see Fig. 12).
In turn, we observe an overall increase in the victim’s per-
ceived noise levels, and signiﬁcant alterations of the victim’s
IF, produced by the injected chirps that were restricted to the
appropriate interval (e.g. ±0.1MHz), shown in Fig 10. This,
however, does not completely remove strong reﬂective objects
(e.g. corner reﬂectors) from the victim’s view. It is enough,
though, to bias the CFAR algorithm baseline such that when
even stronger reﬂections (i.e. virtual objects) are placed in the
view they end up obfuscating the remaining physical objects.
We detail our virtual object generation next.

Virtual target generation. For our virtual object generation,
the goal is to ﬁnd suitable values for the attacker chirp period
Ta. We observed a successful attack strategy that starts with
the attacker computing a chirp period that is a denominator to
the victim’s Tc period. Then the attacker can freely choose any
Ta value strictly smaller than the previously computed value.
This conﬁguration allows the most ﬂexibility for the attacker,
but requires victim chirps to be loosely spread out within the
frame (or an attacker with more powerfully hardware). Using
this strategy, we were able to generate virtual objects that
are positioned both in front and behind the physical attacking
radar device. We further experiment with the limit case where
the attacker chirp period is equal to the victim, Ta = Tc. We
observe that this type of attack is also possible. The chirps
tend to converge but only after long periods of time, which, as
expected, are closely related to the initial alignment, i.e., the
time difference between the victim’s chirp and the attacker’s
chirp at the moment the attacker starts transmitting for the
ﬁrst time. We speculate that this convergence is possible due
to the internal clock drift between the two units.

Multiple object generation. In our last experiment, we look
at the impact of using several TX antennas on the attacker
radar to generate multiple virtual objects. We were able to
conﬁrm our hypothesis outlined in Section 3.5.

Moving virtual objects. Our results are presented in Fig. 14.
We are able to generate several moving objects positioned
at different angles with respect to the victim radar using the
antennas on the attacking radar device. The virtual objects
shown are moving towards the victim radar with a velocity of
≈ 0.016m/s (≈ 0.5km/h). As can also be seen, the attacker
injected signal is also raising the overall noise levels observed

12

shift to the incoming victim RF signal before retransmitting
it. Using a prototype in a non-standard radar frequency (e.g.,
5.8GHz) authors demonstrate that the modulated RF signal
creates an illusion of a real target in the victim. They also
propose a hybrid-chirp approach to distinguish real targets
from a spoofed one.

In [12] authors propose a spatio-temporal challenge-
response (STCR) method to detect and mitigate sensor spoof-
ing attacks. SCTR works by dividing the radar bandwidth
into narrower beams and randomly selecting one for each
transition. Reﬂections that cannot be paired with a transmit-
ted beam are considered attack signals and are rejected by
the radar unit. The solution has only been implemented in
software using an adaptive cruise control package in Matlab.
In [27] authors introduce a FMCW radar scheme called
BlueFMCW that mitigates both interference and spooﬁng
signals by randomly hopping frequency. They are able to
maintain high radar resolution and protect against phase dis-
continuity using their proposed phase alignment algorithm.
They support their ﬁndings using simulations.

5.1 Radar object spooﬁng mitigations

Based on the attacks we have demonstrated, and the partial
results already available in the state of the art, we consider that
it is important that mitigations against spooﬁng attacks should
be added to radar systems. Solutions based on randomization
such as the ones reviewed in [8, 9] could be efﬁcient against
our attacks. In the following, we brieﬂy list the most relevant
of these and reason about their efﬁciency.

Frequency and Phase Randomization. As we have shown
previously, in order to successfully execute our attacks and
generate artiﬁcial objects an adversary needs to have some
prior knowledge about the victim’s operating parameters, e.g.,
starting frequency, bandwidth and chirp duration, thus attacks
can be prevented by hiding these parameters. This can be
achieved by randomizing the parameters of chirps. Unfortu-
nately, bandwidth and chirp duration directly inﬂuence the
measurement by affecting the resolution and the freshness,
respectively. Thus, the only viable candidate remains the start-
ing frequency. In [9,25,27] a couple of solutions are proposed
to implement frequency randomization, results about their ef-
fectiveness is only provided through numeric simulations.
Real-world implementations of these countermeasures would
require additional hardware, however, if proven to work they
would make our attacks impossible to deploy.

Another chirp related parameter that can be randomized is
the phase of the signal. This has been mentioned in [8] as an
effective countermeasure to their simulated velocity spooﬁng
attack, which requires the victim radar to receive a signal with
the same phase as the one transmitted. The authors note that
complex circuity would be required for implementing it, and
mention that the process could be very error-prone. Based
on our experiments, we do not expect this countermeasure

Figure 15: Constructive object removal. Left: AoA view of the vic-
tim without any interference from the attacker. Strongest reﬂections
from top-to-bottom are: T1, Corner reﬂector and T2 (CFAR view is
shown in Fig. 5). Right: AoA view of the victim with constructive
object removal and target generation. Strongest reﬂections represent
virtual objects.

by the victim, which removes the physical objects from the
scene. Fig. 15 shows the victim’s view before the attack (left),
when a multitude of objects and reﬂections are detected, and
during the attack (right), when only the virtual generated
objects are identiﬁed.

5 Discussion and Related Work

Spooﬁng attacks against radar systems have been known to
exist for quite some time [11], however prior to this work no
spooﬁng attack has been demonstrated against radar systems
deployed in a real-world, unrestricted environment. We give
a summary of recent work in the following.

In [8] Kommissarov at al. propose an attack against automo-
tive FMCW mmWave radars using an emulated environment
comprised of two bladeRF SDRs connected by 15m-long RF
cables. Their attack consists of two phases: a synchronization
phase based on signal time-of-arrival, and a signal injection
phase. Using simulations, the authors show that by spooﬁng
the distance and velocity, they can trick a victim into detect-
ing a phantom stop or acceleration. They evaluate several
known, but not in-use, countermeasures such as sensor fu-
sion with LiDAR/camera, phase randomization and frequency
randomization, against their attacks.

In [9, 25] authors present a low-cost distance-spooﬁng at-
tack in using a wired connection between the victim and the
attacker. The victim is a 24GHz mmWave FMCW radar us-
ing a VCO ADF5901 module, a triangular wave generator
ADF4159, and a down conversion mixer ADI ADF5904. The
attacking device is an Arduino Due module. A half-chirp
modulation scheme is used to overcome crystal oscillators
timing constraints, while a two-step delay insertion scheme
precisely controls relative delay difference between the par-
ticipants. Counter-measures are also proposed in the form of
random-chirp modulation and its security level is evaluated
under the proposed attack.

In [26] authors develop a hardware based spooﬁng device
that uses a single-sideband mixer to introduce a frequency

13

to be particularly efﬁcient against our attacks. As we have
shown in Section 3.5 phase variations directly affects both
velocity and AoA measurements in ways that enhance the
attack. As such, in order to be effective as a countermeasure,
phase randomization needs to be paired with additional signal
ﬁltering, further increasing the complexity of the system.

RSSI Measurements. Our non-synchronized attacks un-
avoidably affect the signal-noise in the environment. A Re-
ceived Signal Strength Indicator (RSSI) based countermea-
sure could prove effective in detecting our attacks if the victim
is able to differentiate between the normal signal power of its
reﬂections and the signal power of the injected signal, which
should be elevated in the area of the attack. Another, more
advanced technique, is proposed in [8], where the victim at-
tempts to detect patterns of n weak chirps out of the total N
chirps in the frame. This technique however might fail as they
uniformly raise the noise level in the environment, effectively
cancelling out all the victim’s reﬂections.

LiDAR/Camera sensor integration. Multi-sensor integra-
tion is another solution that has been proposed in literature
as a potential countermeasure to radar object-spooﬁng at-
tacks [28]. This works by measuring the same physical vari-
ables in the environment using different sensors and verifying
the measurements between these. This method however is
unlikely to be effective in practice due to safety requirements,
which currently favor combining sensors using logical OR
functions rather than AND functions. These requirements
ensure that if a dangerous situation is encountered, and is then
identiﬁed even by just one of the sensors, then the safe action
is executed and not ignored.

6 Conclusions

FMCW radar devices are an integral part of the automotive
safety-critical ADAS, and often the only reliable sensor. Due
to their hardware complexity they have, until now, only been
evaluated in constrained or simulated environments. In this
work, we reviewed some of the low-level functional details
of these devices and identiﬁed several methods in which they
can be exploited by an adversary. We have demonstrated sev-
eral object spooﬁng attacks against automotive-grade radars
deployed in truly wireless environments. We have shown that
synchronization with the victim is not required for a success-
ful attack and can, in fact, help the adversary. On our radar
devices, we have also shown that object removal through
noise is a trivial endeavor if the attacker mimics the chirps of
the victim and does not exceed the chirp’s bandwidth by more
than 0.1MHz. Given the relatively low-bar required to deploy
these attacks, and the importance of this safety critical com-
ponent, we believe that radar manufacturers and automotive
industry stake-holders should consider integrating efﬁcient ob-
ject spooﬁng countermeasures, such as randomized frequency
hopping, as a matter of urgency.

References

[1] H. Shin, D. Kim, Y. Kwon, and Y. Kim, “Illusion and
dazzle: Adversarial optical channel exploits against li-
dars for automotive applications,” in International Con-
ference on Cryptographic Hardware and Embedded Sys-
tems, pp. 445–467, Springer, 2017.

[2] J. Petit, B. Stottelaar, M. Feiri, and F. Kargl, “Remote
attacks on automated vehicles sensors: Experiments on
camera and lidar,” Black Hat Europe, vol. 11, no. 2015,
p. 995, 2015.

[3] J. Sun, Y. Cao, Q. A. Chen, and Z. M. Mao, “Towards
robust lidar-based perception in autonomous driving:
General black-box adversarial sensor attack and coun-
termeasures,” in 29th {USENIX} Security Symposium
({USENIX} Security 20), pp. 877–894, 2020.

[4] Z. Hau, K. T. Co, S. Demetriou, and E. C. Lupu, “Object
removal attacks on lidar-based 3d object detectors,” in
AutoSec, NDSS 2021, AutoSec ’21, 2021.

[5] Y. Cao, C. Xiao, B. Cyr, Y. Zhou, W. Park, S. Rampazzi,
Q. A. Chen, K. Fu, and Z. M. Mao, “Adversarial sensor
attack on lidar-based perception in autonomous driving,”
in Proceedings of the 2019 ACM SIGSAC Conference
on Computer and Communications Security, CCS ’19,
(New York, NY, USA), p. 2267–2281, Association for
Computing Machinery, 2019.

[6] Z. Wang, Y. Wu, and Q. Niu, “Multi-sensor fusion in
automated driving: A survey,” IEEE Access, vol. 8,
pp. 2847–2868, 2020.

[7] M. L. Fung, M. Z. Chen, and Y. H. Chen, “Sen-
sor fusion: A review of methods and applications,” in
2017 29th Chinese Control And Decision Conference
(CCDC), pp. 3853–3860, IEEE, 2017.

[8] R. Komissarov and A. Wool, “Spooﬁng attacks against
vehicular FMCW radar,” in Proceedings of the 5th Work-
shop on Attacks and Solutions in Hardware Security,
ASHES ’21, (New York, NY, USA), p. 91–97, Associa-
tion for Computing Machinery, 2021.

[9] S. Nashimoto, D. Suzuki, N. Miura, T. Machida, K. Mat-
suda, and M. Nagata, “Low-cost distance-spooﬁng at-
tack on FMCW radar and its feasibility study on counter-
measure,” Journal of Cryptographic Engineering, pp. 1–
10, 2021.

[10] R. Chauhan, A platform for false data injection in fre-
quency modulated continuous wave radar. Utah State
University, 2014.

14

[23] J. Aviation, “Joby Completes Acquisition of Radar De-
veloper Inras GmbH.” https://www.jobyaviation
.com/news/joby-completes-acquisition-radar
-developer-inras/. Accessed: 2022-05-05.

[24] M. A. Habib, M. Barkat, B. Aissa, and T. Denidni, “Ca-
cfar detection performance of radar targets embedded
in “non centered chi-2 gamma” clutter,” Progress In
Electromagnetics Research, vol. 88, pp. 135–148, 2008.

[25] N. Miura, T. Machida, K. Matsuda, M. Nagata,
S. Nashimoto, and D. Suzuki, “A low-cost replica-based
distance-spooﬁng attack on mmWave FMCW radar,” in
Proceedings of the 3rd ACM Workshop on Attacks and
Solutions in Hardware Security Workshop, ASHES’19,
(New York, NY, USA), p. 95–100, Association for Com-
puting Machinery, 2019.

[26] P. Nallabolu and C. Li, “A frequency-domain spooﬁng
attack on FMCW radars and its mitigation technique
based on a hybrid-chirp waveform,” IEEE Transactions
on Microwave Theory and Techniques, vol. 69, no. 11,
pp. 5086–5098, 2021.

[27] T. Moon, J. Park, and S. Kim, “Bluefmcw: Random
frequency hopping radar for mitigation of interference
and spooﬁng,” arXiv preprint arXiv:2008.00624, 2020.

[28] T. Yang and C. Lv, “A secure sensor fusion framework
for connected and automated vehicles under sensor at-
tacks,” arXiv preprint arXiv:2103.00883, 2021.

[11] F. Katsilieris, P. Braca, and S. Coraluppi, “Detection
of malicious ais position spooﬁng by exploiting radar
information,” in proceedings of the 16th international
conference on information fusion, pp. 1196–1203, IEEE,
2013.

[12] P. Kapoor, A. Vora, and K.-D. Kang, “Detecting and
mitigating spooﬁng attack against an automotive radar,”
in 2018 IEEE 88th Vehicular Technology Conference
(VTC-Fall), pp. 1–6, 2018.

[13] A. Melebari, A. K. Mishra, and M. Y. Abdul Gaffar,
“Comparison of square law, linear and bessel detectors
for ca and OS-CFAR algorithms,” in 2015 IEEE Radar
Conference, pp. 383–388, 2015.

[14] C. Katzlberger and D. Gerstmair, Object Detection
with Automotive Radar Sensors using CFAR Algorithms.
PhD thesis, Johannes Kepler University Linz, Linz, Aus-
tria, 2018.

[15] S. Blake, “OS-CFAR theory for multiple targets and
nonuniform clutter,” IEEE Transactions on Aerospace
and Electronic Systems, vol. 24, no. 6, pp. 785–790,
1988.

[16] F. D. Enggar, A. M. Muthiah, O. D. Winarko, O. N.
Samijayani, and S. Rahmatia, “Performance comparison
of various windowing on fmcw radar signal processing,”
in 2016 International Symposium on Electronics and
Smart Devices (ISESD), pp. 326–330, 2016.

[17] I. GmbH, “INRAS Radarbook2.” https://inras.at

/en/radarbook2/. Accessed: 2021-01-10.

[18] Continental, “ARS 4-A Long Range Radar Sensor 77
GHz.” img009.hc360.cn/k2/M0A/BF/43/wKhQxVq
53tuEEmCQAAAAACS5hks768.pdf. Accessed: 2022-
05-05.

[19] Continental, “ARS-408-21 Radar.” https://github
.com/ApolloAuto/apollo/blob/master/docs/sp
ecs/Radar/Continental_ARS408-21_Radar_Ins
tallation_Guide.md. Accessed: 2022-05-05.

[20] G. Fonte, Radar and Electronic Warfare Fundamentals.

Nuts & Volts Magazine, 2006.

[21] O. Toker and S. Alsweiss, “Design of a cyberattack
resilient 77 ghz automotive radar sensor,” Electronics,
vol. 9, no. 4, 2020.

[22] Rohde-Schwarz, “Automotive radar sensors - transmit
signal analysis and inference tests.” https://scdn.r
ohde-schwarz.com/ur/pws/dl_downloads/dl_a
pplication/application_notes/1ma267/1MA267
_1e_automotive_Radar.pdf. Accessed: 2021-01-10.

15

