2
2
0
2

n
u
J

3
1

]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[

1
v
6
2
5
7
0
.
6
0
2
2
:
v
i
X
r
a

A generalized nonlinear Schr¨odinger Python module implementing diﬀerent
models of input pulse quantum noise

O. Melcherta,b,∗, A. Demircana,b

aLeibniz Universit¨at Hannover, Institute of Quantum Optics (IQO), 30167 Hannover, Germany
bCluster of Excellence PhoenixD (Photonics, Optics, and Engineering - Innovation Across Disciplines), Hannover, Germany

Abstract

We provide Python tools enabling numerical simulation and analysis of the propagation dynamics of ultrashort
laser pulses in nonlinear waveguides. The modeling approach is based on the widely used generalized nonlinear
Schr¨odinger equation for the pulse envelope. The presented software implements the eﬀects of linear dispersion,
pulse self-steepening, and the Raman eﬀect. The focus lies on the implementation of input pulse shot noise, i.e. classi-
cal background ﬁelds that mimick quantum noise, which are often not thoroughly presented in the scientiﬁc literature.
We discuss and implement commonly adopted quantum noise models based on pure spectral phase noise, as well as
Gaussian noise. Coherence properties of the resulting spectra can be calculated. We demonstrate the functionality of
the software by reproducing results for a supercontinuum generation process in a photonic crystal ﬁber, documented
in the scientiﬁc literature. The presented Python tools are are open-source and released under the MIT license in a
publicly available software repository.

Keywords: Generalized nonlinear Schr¨odinger equation, quantum noise, spectral coherence, Python

Contents

1 Introduction

2 Scientiﬁc problem solved by the software

3 Software description

.
.

.
.

.
.

. . . . .
3.1 Software Functionalities
. . . . .
Implementation details .
3.2
. . . .
3.2.1 The GNLS data structure .
Implemented noise models
3.2.2
. . .
Functions for calculating coher-
3.2.3
. . .
ence properties .

.
.

.

.

.

.

.

.

4 Sample results

∗Corresponding author
Email addresses: melchert@iqo.uni-hannover.de (O.
Melchert), demircan@iqo.uni-hannover.de (A. Demircan)

1

2

3
3
4
4
5

7

8

4.1 A minimal working example . . . . . . .
. .
4.2 Using GNLS with py-fmas . . . . .

5

Impact and conclusions

References

1. Introduction

8
9

9

11

The propagation of laser pulses in nonlinear waveg-
uides supports the generation of supercontinuum spectra
[1, 2, 3]. Starting from a spectrally narrow input pulse, the
interplay of linear and nonlinear eﬀects induces tremen-
dous spectral broadening, yielding ﬂat spectra that can
extend from the violet to the infrared [4]. Such eﬀects
can be achieved, e.g., in photonic crystal ﬁbers (PCFs)
[5, 6], wherein supercontinuum spectra can be produced
using ∼ 100 fs-duration pulses, peak powers ∼ 10 kW and
propagation lengths on the order of 1 m [4]. The resulting

 
 
 
 
 
 
broad, ﬂat spectra with high spectral density ﬁnd applica-
tion, e.g., in optical frequency metrology [7], and optical
technologies [2].

A ﬂexible theoretical framework for studying the com-
plex physical processes associated with the generation of
supercontinuum spectra is provided by the generalized
nonlinear Schr¨odinger equation (GNLS) [1]. In order to
model the propagation dynamics of laser pulses it com-
bines the eﬀects of linear dispersion, pulse self-steepening
[8, 9], and the Raman eﬀect [10]. This accounts for var-
ious processes that support the generation of widely ex-
tended supercontinuum spectra, such as the modulation
istability [11], soliton-ﬁssion [12, 13], and self-frequency
shift of Raman solitons [10]. It furthers forms the basis
for modeling optical rouge waves [14, 15, 16, 17], and the
interaction of solitons and dispersive waves in presence of
an optical event-horizon [18, 19, 20, 21]. The GNLS de-
scribes the real-valued optical ﬁeld in terms of a complex-
valued envelope at a ﬁxed reference frequency using a
nonlinear wave equation of ﬁrst order in the propagation
coordinate. It has proven to yield reliable results even in
the single cycle regime [22]. Overall, the GNLS provides
a classical description of the propagation dynamics of in-
put pulses. Basic phenomena described by the GNLS are
susceptible to the presence of noise. When attempting
to model noise on the quantum level, a fundamental is-
sue arises since the rigorous description of quantum noise
sources requires the introduction of quantum mechanical
operators [23, 24, 25, 26], which are incompatible with
classical ﬁelds. When the number of photons in the in-
put pulse is large, however, semiclassical approaches ex-
ist that account for quantum ﬂuctuations by randomizing
physical interactions using a classical background ﬁeld of
low power, entering the GNLS via the initial condition.
Such input pulse noise is modeled by simply adding to
the coherent input pulse an incoherent, stochastic noise
ﬁeld. We consider commonly adopted one photon per
frequency mode [3, 27, 28, 29, 30], and half a photon
per temporal mode [31, 32, 33] noise models, and further
implement a background ﬁeld based on a classical ana-
log of the zero-point ﬁeld of quantum ﬁeld theory (QFT)
[34]. Including noise by perturbing the initial conditions
is in accord with the Wigner method, an eﬃcient compu-
tational approach for modeling quantum noise in optical
ﬁbers [26, 25, 35]. Considering an ensemble of indepen-
dent simulation runs perturbed by noise, coherence prop-

erties of the simulated spectra can be investigated. Ac-
counting for shot-to-shot ﬂuctuations in numerical simu-
lations appears essential for the dynamics and enables a
better comparison to actual experiments, employing mul-
tishot measurement techniques [27, 28].

In this article we present software tools allowing to reli-
ably simulate and analyze basic phenomena described by
the GNLS in presence of various types of input pulse shot
noise. We detail the scientiﬁc problem addressed by the
provided software in Sec. 2, and discuss its implementa-
tion, with emphasis on input pulse noise models, in Sec. 3.
Section 4 reports veriﬁcation tests, reproducing results for
a supercontinuum generation process in a photonic crystal
ﬁber, well documented in the scientiﬁc literature, where it
has been used for illustrating nonlinear-optics eﬀects [3],
and for benchmarking algorithms [36, 37, 38, 39, 40]. We
comment on impact and conclude in Sec. 5.

2. Scientiﬁc problem solved by the software

The provided Python tools enable simulation and anal-
ysis of the dynamics of ultrashort laser pulses, gov-
erned by the generalized nonlinear Schr¨odinger equation
(GNLS) [1, 3]

∂zu = i

(cid:88)

n≥2

βn
n!

(i∂t)nu + iγ

(cid:33)

(cid:32)

1 + i∂t
ω0

(cid:34)

(cid:90)

×

u(z, t)

R(t(cid:48))|u(z, t − t(cid:48))|2 dt(cid:48)

(cid:35)

,

(1)

for a complex-valued ﬁeld envelope u ≡ u(z, t) on a pe-
riodic time-domain of extend T with boundary condition
u(z, −T/2) = u(z, T/2) and propagation distance z. An ini-
tial condition u(z = 0, t) = u0(t) needs to be speciﬁed. In
Eq. (1), βn (in units of psn/µm) is the n-th order dispersion
coeﬃcient, γ (W−1/µm) is a scalar nonlinear coeﬃcient,
and ω0 (rad/ps) a reference frequency. t is a retarded time,
measured in a reference frame moving with the group ve-
locity at ω0. The Raman eﬀect is included via the total
response function

R(t) = (1 − fR) δ(t) + fR hR(t),

(2)

where the ﬁrst term results in an instantaneous Kerr-type
nonlinear response, and where the Raman response func-
tion hR(t) enters with fractional contribution fR [41, 42].

2

A generic two-parameter model is

hR(t) =

+ τ2
τ2
1
2
τ1τ2
2

e−t/τ2 sin(t/τ1) Θ(t),

(3)

with the Heaviside step function Θ(t) ensuring causality
[41]. Based on a single damped harmonic-oscillator ap-
proximation of molecular responses, this simple model
reproduces the Raman gain spectrum measured for silica
glass reasonably well. For silica ﬁbers, numerical values
for the three relevant model parameters are fR = 0.18,
τ1 = 12.2 fs, and τ2 = 32 fs [41]. More complex response
functions, based on improved response models and valid
In this framework,
for other media, exist [43, 44, 45].
using a discrete sequence of angular frequency detunings
Ω ∈ 2π
T

Z relative to ω0, the expressions
(cid:90) T/2

F[u(z, t)] ≡

1
T
F−1[uΩ(z)] ≡

u(z, t) eiΩt dt = uΩ(z),

(cid:88)

−T/2
uΩ(z) e−iΩt = u(z, t),

(4a)

(4b)

Ω

specify forward [Eq. (4a)], and inverse [Eq. (4b)] Fourier
transforms, relating the ﬁeld envelope u(z, t) to the spec-
tral envelope uΩ(z). Using Parseval’s identity for the
transforms (4), the energy in both domains is

E(z) =

(cid:90) T/2

−T/2

|u(z, t)|2 dt = T

(cid:88)

Ω

|uΩ(z)|2,

(5)

with instantaneous power |u(z, t)|2 (W = J/s) and power
spectrum |uΩ(z)|2 (W). While Eq. (1) represents the GNLS
in its time-domain formulation, a consistent formulation
in the frequency domain is also possible [46].

Input pulse noise is modeled by simply adding to the
coherent input pulse u0(t) an incoherent, stochastic noise
ﬁeld ∆u(t) with properties
(cid:104)u(t)(cid:105) = 0,
(cid:104)∆u(t)∆u∗(0)(cid:105) = σ2δ(t),

(6b)

(6a)

where (cid:104). . .(cid:105) denotes an ensemble average over indepen-
dent instances of noise, and σ2 is the noise variance.
According to Eq. (6a), at each point t, this background
ﬁeld has zero mean. The δ-function in the autocorrela-
tion (6b) indicates that the noise varies fast in compari-
son to any reasonable ﬁeld u0(t), and that subsequent ac-
tions of the noise are uncorrelated. For instance, consid-
ering half a photon with energy (cid:126)ω0 per temporal mode

3

[31, 32, 33], the noise variance is σ2 = (cid:126)ω0/2 with re-
duced Planck constant (cid:126). Noise models for treating more
speciﬁc pump laser spectra exist [47, 48]. Let us note that
there also exist formulations of the propagation dynamics
in terms of stochastic nonlinear Schr¨odinger equations,
which are equivalent to quantum ﬁeld operator equations
and account for vaccuum ﬂuctuations during propagation
[49, 50, 51].

In the frequency domain, shot-to-shot ﬂuctuations of
the ﬁeld can then be characterized by the spectrally re-
solved modulus of ﬁrst order coherence for zero time-lag

|g12(Ω)| =

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

Ω,k(cid:105)m(cid:44)k

(cid:104)uΩ,mu∗
(cid:104)|uΩ,m|2(cid:105)(cid:104)|uΩ,k|2(cid:105)

(cid:112)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

,

(7)

where the angular brackets specify an average over non-
identical pairs of ﬁelds, labeled m and k, obtained from an
ensemble of M simulation runs with independent noise
ﬁelds [27, 28, 3]. At a given angular frequency detun-
ing Ω, 0 ≤ |g12(Ω)| ≤ 1, where |g12(Ω)| ≈ 1 indicates
good stability in amplitude and phase. Diﬀerent from this
measure of interpulse coherence, the modiﬁed intrapulse
coherence

˜Γ(Ω1, Ω2) =

|(cid:104)uΩ1,mu∗
(cid:104)|uΩ1,mu∗

Ω2,m(cid:105)|
Ω2,m|(cid:105)

(8)

allows to assess the coherence between diﬀerent spectral
components within a pulse. With focus on f -to-2 f ( f =
frequency) setups, the intrapulse coherence was shown to
play an important role in carrier-envelope phase measure-
ment and stabilization of ultrashort pulses [52]. Equa-
tion (8) modiﬁes the intrapulse coherence of Ref. [52] by
relaxing the f /2 f condition. Instead, two general distinct
frequencies Ω1, and Ω2 are considered.

3. Software description

GNLStools is written using the Python programming
language [53], and depends on the functionality of numpy,
scipy [54], and matplotlib [55]. It can be cloned directly
from GitHub [56], where it is available under the MIT
license.

3.1. Software Functionalities

The current version of GNLStools features:

• A data structure for the GNLS (1), which can be eas-

3.2.1. The GNLS data structure

ily tailored to a speciﬁc nonlinear waveguide.

• Functions that implement optional input pulse noise
models considering both, pure spectral phase noise
as well as Gaussian noise.

• Functions for calculating the coherence properties of

simulated spectra.

The software can be used on its own, it includes a basic
driver script implementing a ﬁxed stepsize “fourth-order
Runge Kutta in the interaction picture” (RK4IP) solver
[36] (Sec. 4.1), or as extension module for py-fmas [40]
(Sec. 4.2). In the latter case, a user can take advantage of
variable stepsize z-propagtion algorithms and more elab-
orate Raman-response functions. The presented software
is not overly feature-rich, but allows to reliably simulate
the complex physical processes that enable generation of
supercontinuum spectra in nonlinear waveguides [3].

3.2. Implementation details

Solving the GNLS in the time-domain formulation
Eq. (1) presents several disadvantages. Higher-oder dis-
persion is diﬃcult to handle. Even for the lowest or-
der t-derivatives, introduction of ﬁnite-diﬀerence opera-
tions comes with unwanted truncation errors. It is there-
fore advantageous to perform some of the operations
in the frequency-domain, allowing to employ spectral
t u = F−1[(−iΩ)n uΩ]. The operating prin-
derivatives ∂n
ciples of common algorithms for the solution of nonlin-
ear Schr¨odinger-type equations, like the split-step Fourier
method [57, 58], the RK4IP method [36], and the variable
step-size conservation quantity error method [37, 38],
exploit this. To facilitate implementation, the interval
−T/2 . . . T/2 is divided into N equal subintervals with
temporal grid spacing ∆t = N/T , yielding discrete grid
points tm = m ∆t, and detuning grid points Ωm = m ∆Ω,
∆Ω = 2π/T , with m = −N/2, . . . , N/2 − 1. Subsequently
= uΩm (z). Re-
we write u(z, t)|t=tm
specting the sign choice and normalization of the trans-
forms (4), we use the numpy native discrete Fourier trans-
form (DFT) routine ifft to implement Eq. (4a), and fft
to implement Eq. (4b) [59].

= um(z), and uΩ(z)|Ω=Ωm

4

Instantiating an instance of the class GNLS requires a
user to specify several input parameters. Below, they are
listed as “parameter name (data type): description”:

• w (array, ﬂoat):

discrete angular

frequencies

(Ωm)N/2−1

m=−N/2 in units of rad/fs;

• beta n (array, ﬂoat): ordered sequence of disper-
= (β2, β3, . . . , βNmax), with

sion parameters (βn)Nmax
n=2
Nmax ≥ 2 and βn in units of fsn/µm;

• gamma (ﬂoat): nonlinear parameter γ (W−1/µm);

• w0 (ﬂoat): reference angular frequency ω0 (rad/fs);

• fR (ﬂoat): Raman contribution fR (default: 0.18);

• tau1 (ﬂoat): time-scale τ1 (fs) (default: 12.2 fs);

• tau2 (ﬂoat): time-scale τ2 (fs) (default: 32 fs).

While the angular frequency grid w is passed as
positional argument, all other parameters are passed
as keyword arguments. An example is discussed in
Sect. 4.1.
For using an instance of the GNLS class
with a z-propagation algorithm, several instance meth-
ods are available. Below, they are listed in the format
“method name(arg1,arg2,...): description”:

Lw(self): Using spectral derivatives, the frequency do-
main representation of the linear operator L ≡
i (cid:80)
βn
n! (i∂t)n on the right-hand-side (rhs) of Eq. (1)
can be written as

n≥2

LΩ ≡ i

Nmax(cid:88)

n=2

βn
n!

Ωn.

(9a)

For practical reasons, the sum has to be truncated at
a ﬁnite integer number Nmax ≥ 2. This class method
returns LΩ, evaluated at the points (Ωm)N/2−1

m=−N/2.

Input parameters:

• The method relies on class attributes only.

Output parameters:

• Lw (array): LΩ [Eq. (9a)] at the points

(Ωm)N/2−1

m=−N/2.

The method is decorated as @property, so it can be
conveniently used as gnls_instance.Lw.

Nw(self, uw): Using the convolution theorem for the
transforms (4), the second term on the rhs of Eq. (1)
can be written in a mixed representation as
Ω) F (cid:2)(1− fR)I1 + fRI2

NΩ(u) ≡ iγ(1 + ω−1
0

(9b)

(cid:3) ,

where I1 = |u|2u, I2 = F−1[˜hR(Ω)F[|u|2]]u, and

˜hR(Ω) ≡ T F[hR(t)] =

τ−2
1

+ τ−2
2

1 − (Ω + iτ−1
τ−2
2 )2

.

(9c)

The method takes on input the spectral envelope uΩ,
retrieves u = F−1[uΩ], and evaluates and returns
Eq. (9b) at (Ωm)N/2−1

m=−N/2.

Input parameters:

• uw (array): Spectral envelope uΩm at the
angular frequency grid points (Ωm)N/2−1
m=−N/2.

Output parameters:

• Nw (array): NΩ [Eq. (9b)] at the points

(Ωm)N/2−1

m=−N/2.

claw Ph(self,i,zi,w,uw): Class method evaluating
a conservation law of the GNLS (1), related to the
classical analog of the photon number [41]. This
method considers the energy (5) in the form E =
(cid:126) (cid:80)
Ω nΩ (ω0 + Ω), where the dimensionless quantity
nΩ ≡ T |uΩ|2/[(cid:126)(ω0 + Ω)] speciﬁes the number of
photons with energy (cid:126)(ω0 +Ω). The total number of
photons is then given by

CPh(z) ≡

(cid:88)

Ω

nΩ = 2π
(cid:126)∆Ω

(cid:88)

Ω

|uΩ(z)|2
ω0 + Ω .

(9d)

In a rigorous quantum mechanical treatment,
the
photon number is instead deﬁned using photon cre-
ation and annihilation operators [24]. Let us note
that while the GNLS (1) conserves the total number
of photons Eq. (9d), it does not conserve the pulse
energy Eq. (5) [41].

• zi (ﬂoat): Current propagation distance.
• w (array):
Angular
(Ωm)N/2−1
m=−N/2.

frequency grid

• uw (array): Spectral envelope uΩm at the
angular frequency grid points (Ωm)N/2−1
m=−N/2.

Output parameters:

• Cph (ﬂoat): Total number of photons CPh

at the current point along z [Eq. 9d].

The method has the structure of an user-action func-
tion for use with py-fmas [40] (Sec. 4.2).

3.2.2. Implemented noise models

We provide optional functions for generating time-
domain representations of input pulse noise, consistent
with Eqs. (6). Below,
they are listed in the format
“function name(arg1,arg2,...): description”:

noise model 01(t,w0,s0): Function generating an
instance of noise by directly sampling in the time-
domain. The underlying noise model assumes nor-
mally distributed amplitudes.

Input parameters:

• t (array): Time-grid (tm)N/2−1
• w0 (ﬂoat): Pulse center frequency ω0.
• s0 (int): Integer seed s0 for pseudo ran-

m=−N/2.

dom number generator.

Output parameters:
• du t (array):

time-domain noise.

Instance (∆um)N/2−1

m=−N/2 of

An instance of this type of noise is obtained by di-
rectly sampling a sequence (∆um)N/2−1
m=−N/2 of complex-
valued noise-amplitudes in the time domain as
(cid:114) (cid:126)ω0
4∆t

(X + iY),

∆um =

(10a)

Input parameters:

• i (int):

Integer label of the current z-

propagation step.

where the independent random variables X and Y
yield independent identically distributed (iid) stan-
dard normal random numbers [i.e. X, Y ∼ N(0, 1)].

5

Performing an ensemble average, this type of noise
exhibits the properties

(cid:104)∆um(cid:105) = 0,

(cid:104)∆um∆u∗

0(cid:105) =

(cid:126)ω0
2∆t

δm0,

(10b)

(10c)

i.e. the average ﬁeld is zero and the autocorrelation
(10c) is equivalent to Eq. (6b) on a discrete grid
with grid spacing ∆t [31]. An instance of this noise
has average energy (cid:104)(cid:80)
m |um|2∆t(cid:105) = N(cid:126)ω0/2, corre-
sponding, on average, to half a photon with energy
(cid:126)ω0 per temporal mode.

noise model 02(t,w0,s0): Function generating an
instance of
time-domain noise by sampling its
Fourier representation. The underlying noise model
assumes pure phase noise.

Input parameters:

• t (array): Time-grid (tm)N/2−1
• w0 (ﬂoat): Pulse center frequency ω0.
• s0 (int): Integer seed s0 for pseudo ran-

m=−N/2.

dom number generator.

Output parameters:
• du t (array):

time-domain noise.

Instance (∆um)N/2−1

m=−N/2 of

An instance of this type of noise is obtained us-
ing a Fourier method by ﬁrst sampling a sequence
(∆uΩm)N/2−1
m=−N/2 of random complex-valued spectral
amplitudes

∆uΩm ≡

(cid:114) (cid:126)(ω0 +Ωm)
T

e−iΦ,

(11a)

where the random variable Φ yields iid phase-angles
uniformly distributed in the range 0 . . . 2π [i.e. Φ ∼
U(0, 2π)]; an inverse Fourier transform, consistent
with Eq. (4b), is then used to obtain the sequence
(∆um)N/2−1
m=−N/2 of time-domain noise amplitudes.
For this type of noise, the magnitude of the spec-
tral amplitudes (11a) is deﬁnite and the energy per
mode Ω is T |uΩ|2 = (cid:126)(ω0 + Ω). With the num-
ber of photons nΩ as per Eq. (9d), adding noise as

6

uΩ → uΩ + ∆uΩ results in nΩ → nΩ + 1. The pho-
ton occupation number is thus increased by the mini-
mal deﬁnite amount of one (entire) photon per mode.
The phase of this photon is, however, entirely indeﬁ-
nite and the noise in diﬀerent modes has no particular
phase relationship. An instance of the noise has total
energy T (cid:80)

Ω |uΩ|2 = N(cid:126)ω0.

noise model 03(t,w0,s0): Function generating an
time-domain noise by sampling its
instance of
Fourier representation. The underlying noise model
assumes normally distributed spectral amplitudes.

Input parameters:

• t (array): Time-grid (tm)N/2−1
• w0 (ﬂoat): Pulse center frequency ω0.
• s0 (int): Integer seed s0 for pseudo ran-

m=−N/2.

dom number generator.

Output parameters:
• du t (array):

time-domain noise.

Instance (∆um)N/2−1

m=−N/2 of

An instance of this type of noise is obtained us-
ing a Fourier method by ﬁrst sampling a sequence
(∆uΩm )N/2−1
m=−N/2 of random complex-valued spectral
amplitudes

∆uΩm ≡

(cid:114) (cid:126)(ω0 +Ωm)
T

√

Ie−iΦ,

(12)

where the random variable I obeys an exponential
distribution with rate parameter 2 [i.e. I ∼ Exp(2)
with expectation value (cid:104)I(cid:105) = 1/2], and Φ is uni-
formly distributed in 0 . . . 2π [i.e. Φ ∼ U(0, 2π)]; an
inverse Fourier transform, consistent with Eq. (4b),
is then used to obtain the sequence (∆um)N/2−1
m=−N/2 of
time-domain noise amplitudes.
Averaging over the noise in a mode Ω yields energy
(cid:104)T |∆uΩ|2(cid:105) = (cid:126)(ω0 + Ω)(cid:104)I(cid:105) = (cid:126)(ω0 + Ω)/2, corre-
sponding, on average, to half a photon per mode. In
contrast to the pure phase noise model implemented
by noise model 02, this type of noise exhibits in-
stance to instance ﬂuctuations of the energy in each
mode. Thereby, the random variable I takes the role
of an occupation number with support I ∈ [0, ∞).
On average, an instance of this noise has energy

√

(cid:104)T (cid:80)
Ω |uΩ|2(cid:105) = N(cid:126)ω0/2. Alternatively, using the
Ie−iΦ,
Box-M¨uller transform [60], we may rewrite
with I ∼ Exp(2), Φ ∼ U(0, 2π), in Eq. (12) as
(X + iY)/2, with X, Y ∼ N(0, 1) two iid standard
normal random variables. This noise model is based
on a classical analog of the zero-point ﬁeld of QFT,
which exactly reproduces the statistics of the electro-
magnetic vacuum [34].

Fourier methods that obtain time-domain noise by sam-
pling frequency dependent spectral noise amplitudes gen-
erally result in correlations (cid:104)∆um∆u∗
0(cid:105) ∼ |tm|−1. This is
demonstrated in Fig. 1, where the ensemble averaged ﬁeld
and autocorrelation for the three noise models are shown.
As evident from the inset in Fig. 1(b), both Fourier meth-
ods result in correlations that persist over many grid spac-
ings ∆t.

√

Let us note that the above noise models diﬀer with
respect to details of implementation and interpretation.
Nevertheless, with some degree of approximation, they
can easily be related to each other. For instance, un-
der the assumption that the required bandwidth of the
computational domain is small compared to the pulse
center frequency, i.e. N∆Ω (cid:28) ω0, we may approximate
(cid:126)ω0/T exp(−Φ). All terms in the
Eq. (11a) by ∆uΩm ≈
inverse Fourier transform [Eq. (4b)] of these noise spec-
tral amplitudes are then identically distributed. Approxi-
mating these sums using the central limit theorem yields
√
Eq. (10a) times a factor of
2 (this is a consequence of
one model assuming one entire photon per mode, while
the other assumes half-a photon per mode). Let us note
that this approximation is accompanied by diﬃculties: it
corresponds to one (entire) photon per mode if the energy
(5) is written as E = (cid:126)ω0
Ω ≡ T |uΩ|2/((cid:126)ω0).
Ω n(cid:48)
Thus, irrespective of Ω, all photons are assumed to con-
tribute the same energy (cid:126)ω0. Put into the context of pulse
propagation models, this is a feature of standard nonlinear
Schr¨odinger-type equations for which energy conserva-
tion and photon number conservation are trivially linked.
This, however, is at odds with the GNLS (1) which con-
serves the number of photons but not the energy [41].
Under the same assumption and approximation, Eq. (12)
can easily be related to Eq. (10a): applying the inverse
Fourier transform, we may rewrite the individual terms
using the Box-M¨uller transform [60] to directly obtain
Eq. (10a). Moreover, in terms of a Fourier method and

Ω, with n(cid:48)

(cid:80)

Figure 1: Ensemble averaged noise moments. (a) Real part of the time-
domain noise amplitudes as function of the grid point index m = tm/∆t.
(b) Scaled autocorrelation. The inset shows a close up view of the index
range −6 . . . 6. Noise is sampled on a grid with temporal extent T =
4 (ps), N = 213 grid points, and for ω0 = 2.2559 rad/fs. Averages are
performed over 104 independent instances of noise.

in the above approximation, practically any iid spectral
amplitudes will yield time-domain noise with properties
Eqs. (6) [61]. As a technical detail, let us note that when
using a Fourier method to set up noise, the noise spec-
tral amplitudes also depend on the normalization of the
transform pair (4). For instance, in Ref. [30], a GNLS
on the inﬁnite t-domain with a diﬀerent transform pair
and, consequently, spectral noise amplitudes with diﬀer-
ent normalization, was considered.

3.2.3. Functions for calculating coherence properties

We

provide

optional

functions

calculat-
ing the coherence properties of
spectra obtained
from pulse propagation simulations in terms of the
GNLS (1).
they are listed in the format
“function name(arg1,arg2,...): description”:

Below,

for

coherence interpulse(w,uw list): Function com-

puting the interpulse coherence Eq. (7).

Input parameters:
• w

(array):
m=−N/2.

(Ωm)N/2−1

Angular-frequency

grid

7

• uw list (array): List [uw1, uw2, ...],
spectra
the
for

comprising
uw1, uw2, ...,
for
same propagation distance z but
diﬀerent instances of input pulse noise.

independent
obtained

Output parameters:

• g12 (array): g12(Ω) [Eq. (7)] at the points

(Ωm)N/2−1

m=−N/2.

coherence intrapulse(w,uw list,w1,w2):

Function computing the
Eq. (8).

intrapulse

coherence

Input parameters:
• w

(array):
m=−N/2.

(Ωm)N/2−1

Angular-frequency

grid

• uw list (array): List [uw1, uw2, ...],
spectra
the
for

comprising
uw1, uw2, ...,
for
same propagation distance z but
diﬀerent instances of input pulse noise.
• w1 (ﬂoat): Reference angular frequency

independent
obtained

Ω1.

• w2 (ﬂoat): Reference angular frequency

Ω2.
Output parameters:

• G (ﬂoat): ˜ΓCEP(Ω1, Ω2) [Eq. 8].

4. Sample results

As a veriﬁcation test of the presented Python tools,
we consider a supercontinuum generation process in a
photonic crystal ﬁber, detailed in Ref. [3].
Speciﬁ-
cally, we perform simulations in terms of the GNLS (1),
using the sequence of dispersion coeﬃcients β2 =
−1.183 × 10−2 fs2/µm, β3 = 8.10383 × 10−2 fs3/µm,
β4 = −9.5205 × 10−2 fs4/µm, β5 = 0.20737 fs5/µm,
1.3486 fs7/µm,
β6
β8 = −2.5495 fs8/µm, β9 = 3.0524 fs9/µm, β10 =
−1.7140 fs10/µm, and γ = 0.11 × 10−6 W−1/µm. For
the Raman response we use the standard values for sil-
ica ﬁbers fR = 0.18, τ1 = 12.2 fs, and τ2 = 32 fs [41].
As initial condition we take a hyperbolic-secant pulse

−0.53943 fs6/µm, β7

=

=

√

P0 sech(t/t0), with duration t0 = 28.4 fs, peak
u0(t) =
power P0 = 10 kW, and pump wavelength λ0 = 835 nm
corresponding to ω0 = 2πc/λ0 ≈ 2.2559 rad/fs (with
speed of light c = 0.29979 µm/fs). The number of pho-
tons [Eq. (9d)] in this pulse amounts to Cph ≈ 2.4 × 109.
The z-propagation dynamics of the above propagation
scenario without noise background, followed over 14 cm,
is shown in Figs. 2(a-d).

4.1. A minimal working example

To demonstrate how to initialize and use the GNLS data
structure for performing pulse propagation in terms of
Eq. (1), we provide a minimal example in code-listing 1.
The provided code initializes the GNLS data structure in
lines 10–28, sets up the input pulse in line 30, retrieves an
instance of input pulse noise in line 31, and propagates the

Figure 2: Supercontinuum generation in a photonic crystal ﬁber.
(a)
Instantaneous power, and, (b) spectrum after 14 cm of propagation. In
(b), result of the presented implementation (labeled A) is compared to
pyNLO [62] (labeled B). (c) Propagation of the instantaneous power,
and, (d) spectrum as function of propagation distance. White boxes in
(c) show a close-up view of the soliton ﬁssion process. (d) Normalized
deviation of photon number (CPh) and energy (E) along the ﬁber.

8

initial ﬁeld for 10 cm using the fourth-order Runge Kutta
in the interaction picture (RK4IP) method [36]. This type
of algorithmic approach is also referred to as integrating
factor method [63], or linearly exact Runge Kutta method
[64]. Pulse propagation is performed in lines 35–42 us-
ing a ﬁxed stepsize of 10 µm, and using a temporal do-
main of extent T = 7 ps with N = 213 grid points. The
script terminates in just under 15 sec. (Apple M1 chip @
3.2 GHz) and reproduces Figs. 2(a,b) [cf. Figs. 18(a,b) of
Ref. [3], Fig. 2(a) of Ref. [36], Fig. 1(a) of Ref. [38], and
Fig. 2(b,c) of Ref. [40]]. The script shown in listing 1
is located in project folder numExp01 provided with the
code [56].

4.2. Using GNLS with py-fmas
Integration with py-fmas. Figure 2 is produced by using
the GNLS data structure in conjunction with py-fmas [40],
a Python package for the numerical simulation of the z-
propagation dynamics of ultrashort optical pulses in terms
of the analytic signal of the optical ﬁeld. GNLStools
can be used as an elaboration module, providing an en-
velope based model which integrates well with the prop-
agation algorithms provided by py-fmas. Speciﬁcally,
pulse propagation in Figs. 2-4 is performed by the variable
stepsize conservation quantity error method [37, 38, 40],
using Eq. (9d) to guide step-size selection. Figure 2(e)
shows the numerical error accumlated for the photon
number [Eq. (9d)] and energy [Eq. (5)], showing that CPh
is conserved up to order 10−8, while E is not conserved
[41].

Considering CPh, the feature at z ≈ 1 cm indicates the
onset of soliton-ﬁssion (close-up view in Fig. 2c), and the
change of the trend at z ≈ 7 cm indicates the onset of
the interaction of a soliton and a dispersive wave which
mainly determines the interaction dynamics and genera-
tion of supercontinuum spectra. A small project work-
ﬂow with a driver script that performs the simulation, and
a postprocessing script that generates Fig. 2, are located
in project folder numExp02 provided with the code [56].

Shot-to-shot ﬂuctuations. Figure 3 demonstrates shot-to-
shot variations in pulse intensity and spectrum after 10 cm
of propagation, arising from the inclusion of input pulse
noise for an input pulse with duration t0 = 85.1 fs. The
noise is generated via noise model 1, i.e. by direct sam-
pling in the time-domain. A small project workﬂow with

Figure 3: Shot-to-shot ﬂuctuations of (a) instantaneous power, and, (b)
corresponding spectra, for input pulses with t0 = 85.0 fs duration input
pulses and 10 cm of propagation (cf. Fig. 18 of Ref. [3]).

a driver script that performs the simulation, and a postpro-
cessing script that generates Fig. 3, are located in project
folder numExp03_noise_model_01, provided with the
code [56].

Coherence properties. The coherence properties of input
pulses of diﬀerent duration, obtained by performing en-
semble averages over 200 independent simulation runs
with diﬀerent noise seeds, are shown in Fig. 4. Fig-
ure 4 reproduces Fig. 19 of Ref. [3], wherein a detailed
discussion of the eﬀects of input pulse noise and the
interpretation of the coherence can be found.
In ad-
dition, in Fig. 4 we also show the modiﬁed intrapulse
coherence [Eq. 8] discussed in Ref. [52]. A postpro-
cessing script that generates Fig. 4 is located in folder
numExp03_noise_model_01 provided with the code [?
]. From our experience, the slight correlations introduced
by the Fourier method based noise models, see Sect. 3.2.2
and Fig. 1, do not aﬀect the coherence properties of the
obtained supercontinuum spectra.

5. Impact and conclusions

The presented GNLStools comprise a data struc-
ture implementing the generalized nonlinear Schr¨odinger

9

Listing 1: Python code for solving the GNLS (1) using the fourth-order Runge Kutta in the interaction picture method [36].

1 import numpy as np
2 import matplotlib . pyplot as plt
3 from GNLStools import GNLS , noise_mod el_01
4
5 # -- SET COMPUTATIONAL GRID
6 z , dz = np . linspace (0 , 0.1 e6 , 10000 , retstep = True )
7 t = np . linspace ( -3500 , 3500 , 2**13 , endpoint = False )
8 w = np . fft . fftfreq ( t . size , d = t [1] - t [0]) *2* np . pi
9 # -- INSTANTIATE GENERALIZED NONLINEAR SCHROEDINGER EQUATION
10 gnls = GNLS (
w ,
11
beta_n = [

# ( rad / fs )

12

# ( fs ^2/ micron ) beta_2
-1.1830 e -2 ,
8.1038 e -2 ,
# ( fs ^3/ micron ) beta_3
-0.95205 e -1 , # ( fs ^4/ micron ) beta_4
# ( fs ^5/ micron ) beta_5
2.0737 e -1 ,
# ( fs ^6/ micron ) beta_6
-5.3943 e -1 ,
# ( fs ^7/ micron ) beta_7
1.3486 ,
# ( fs ^8/ micron ) beta_8
-2.5495 ,
# ( fs ^9/ micron ) beta_9
3.0524 ,
-1.7140 ,
# ( fs ^10/ micron ) beta_10
] ,

gamma =0.11 e -6 ,
w0 = 2.2559 ,
fR = 0.18 ,
tau1 = 12.2 ,
tau2 = 32.0
)

# (1/ W / micron )
# ( rad / fs )
# ( -)
# ( fs )
# ( fs )

28
29 # -- SPECIFY INITIAL PULSE
30 ut = np . sqrt (1 e4 ) / np . cosh ( t /28.4)
31 dut = no ise_model_01 (t , 2.2559 , 1)
32 uw = np . fft . ifft ( ut + dut )
33
34 # -- RK4IP PULSE PROPAGATION
35 P = np . exp ( gnls . Lw * dz /2)
36 for n in range (1 , z . size ) :
37

uw_I = P * uw
k1 = P * gnls . Nw ( uw ) * dz
k2 = gnls . Nw ( uw_I + k1 /2) * dz
k3 = gnls . Nw ( uw_I + k2 /2) * dz
k4 = gnls . Nw ( P * uw_I + k3 ) * dz
uw = P *( uw_I + k1 /6 + k2 /3 + k3 /3) + k4 /6

13

14

15

16

17

18

19

20

21

22

23

24

25

26

27

38

39

40

41

42

43
44 # -- PLOT RESULTS
45 fig , ( ax1 , ax2 ) = plt . subplots (1 , 2 , figsize =(8 , 3) )
46 I = np . abs ( np . fft . fft ( uw ) ) **2
47 ax1 . plot (t , I *1 e -3)
48 ax1 . set_xlim ( -200 ,3200) ; ax1 . set_xlabel ( r " Time $t$ ( fs ) " )
49 ax1 . set_ylim (0 ,6) ; ax1 . set_ylabel ( r " Intensity $ | u |^2 $ ( kW ) " )
50 Iw = np . abs ( uw ) **2
51 ax2 . plot (2* np . pi *0.29979/( w +2.2559) , 10* np . log10 ( Iw / np . max ( Iw ) ) )
52 ax2 . set_xlim (0.45 ,1.4) ; ax2 . set_xlabel ( r " Wavelength $ \ lambda$ ( micron ) " )
53 ax2 . set_ylim ( -60 ,0) ; ax2 . set_ylabel ( r " Spectrum $ | u_ \ lambda |^2 $ ( dB ) " )
54 fig . tight_layout () ; plt . show ()

10

two commonly adopted models of quantum
equation,
noise and a further noise model based on a classical ana-
log of the zero-point ﬁeld of QFT, and functions for as-
sessing the coherence properties of simulated spectra. It
provides all features required for studying basic phenom-
ena supported by the GNLS in the presence of input pulse
shot noise. The provided software can be used on its
own, as demonstrated in Sec. 4.1, or as elaboration mod-
ule for use with the propagation algorithms provided by
the py-fmas package [40], as demonstrated in Sec. 4.2.

With the provided software we hope to shed some more
light on the implementation of quantum noise models for
use in pulse propagation studies, an issue that is often not
thoroughly presented in the scientiﬁc literature. We hope
to directly beneﬁt students and researchers alike, which
are new to the ﬁeld of nonlinear optics and seek a tutorial-
type introduction on how to perform pulse propagation
simulations including quantum noise, and assess the co-
herence properties of the resulting spectra. The minimal
example in Sec. 4.1 can very well serve as classroom code
or as starting point for seminar projects in computation
oriented courses, aimed at demonstrating algorithmic ap-
proaches that go beyond simple split-step Fourier meth-
ods commonly used for solving nonlinear Schr¨odinger-
type equations [1, 57, 58].

Finally, we would like to reference original research ap-
plying the presented GNLS tools. In Ref. [21] we used the
presented software to demonstrate an eﬃcient all-optical
switching scheme, based on controlling the features of
soliton ﬁssion induced supercontinuum spectra using a
time-delayed dispersive wave.

Declaration of competing interests

The authors conﬁrm that there are no known conﬂicts

of interest associated with this publication.

Acknowledgements

We

support

acknowledge

from the Deutsche
Forschungsgemeinschaft
under Germany’s
Excellence Strategy within the Cluster of Excellence
PhoenixD (Photonics, Optics, and Engineering – In-
novation Across Disciplines)
(EXC 2122, projectID
390833453).

(DFG)

Figure 4: Coherence properties of supercontinuum spectra after 10 cm of
propagation (cf. Fig. 19 of Ref. [3]). (a) from top to bottom: exemplary
single-shot output intensity, ensemble averaged spectrum, and degrees
of coherence |g12| [Eq. (7)], and ˜Γ [Eq. (8)], as function of wavelength
λ = 2πc/(ω0 + Ω). For the calculation of the modiﬁed intrapulse co-
herence ˜Γ(Ω1, Ω2), Ω1 = Ω, and Ω2 = −0.96 rad/fs, corresponding to
λ1 = λ, and λ2 = 1.45 nm. Duration of the input pulses is t0 = 28.4 fs.
(b) same for t0 = 56.7 fs, and (c) same for t0 = 85.0 fs.

References

[1] G. P. Agrawal, Nonlinear Fiber Optics, Academic

Press, 2019.

[2] F. Mitschke, Fiber Optics: Physics and Technology,

Springer, 2016.

[3] J. M. Dudley, G. Genty, S. Coen, Supercontinuum
generation in photonic crystal ﬁber, Rev. Mod. Phys.
78 (2009) 1135.

[4] J. K. Ranka, R. S. Windeler, A. J. Stentz, Visi-
ble continuum generation in air–silica microstruc-
ture optical ﬁbers with anomalous dispersion at 800
nm, Opt. Lett. 25 (2000) 25.

11

[5] J. C. Knight, Photonic crystal ﬁbres, Nature 424

(2003) 847.

[6] T. A. Birks, J. C. Knight, P. S. J. Russell, End-
lessly single-mode photonic crystal ﬁber, Opt. Lett.
22 (1997) 961.

[7] D. J. Jones, S. A. Diddams, J. K. Ranka, A. Stentz,
R. S. Windeler, J. L. Hall, S. T. Cundiﬀ, Carrier-
Envelope Phase Control of Femtosecond Mode-
Locked Lasers and Direct Optical Frequency Syn-
thesis, Science 288 (2000) 635.

[17] J. M. Dudley, F. Dias, M. Erkintalo, G. Genty, In-
stabilities, breathers and rogue waves in optics, Nat.
Photonics 8 (2014) 755–764.

[18] A. Demircan, S. Amiranashvili, G. Steinmeyer,
Controlling Light by Light with an Optical Event
Horizon, Phys. Rev. Lett. 106 (2011) 163901.

[19] A. Demircan,

S. Amiranashvili, C. Br´ee,
U. Morgner, G. Steinmeyer, Supercontinuum
generation by multiple scatterings at a group veloc-
ity horizon, Opt. Express 22 (2014) 3866–3879.

[8] F. DeMartini, C. H. Townes, T. K. Gustafson, P. L.
Kelley, Self-Steepening of Light Pulses, Phys. Rev.
164 (1967) 312.

[20] D. V. Skryabin, A. V. Gorbach, Colloquium: Look-
ing at a soliton through the prism of optical super-
continuum, Rev. Mod. Phys. 82 (2010) 1287–1299.

[9] J. R. de Oliveira, M. A. de Moura, J. M. Hickmann,
A. S. L. Gomes, Self-steepening of optical pulses in
dispersive media, J. Opt. Soc. Am. B 9 (1992) 2025.

[10] J. P. Gordon, Theory of the soliton self-frequency

shift, Opt. Lett. 11 (1986) 662.

[11] A. Demircan, U. Bandelow, Supercontinuum gener-
ation by the modulation instability, Opt. Commun.
244 (2005) 181–185.

[12] A. V. Husakou, J. Herrmann, Supercontinuum Gen-
eration of Higher-Order Solitons by Fission in Pho-
tonic Crystal Fibers, Phys. Rev. Lett. 87 (2001)
203901.

[13] A. Demircan, U. Bandelow, Analysis of the inter-
play between soliton ﬁssion and modulation insta-
bility in supercontinuum generation, Appl. Phys. B
86 (2007) 31.

[14] D. R. Solli, C. Ropers, P. Koonath, B. Jalali, Optical
rouge waves, Nature 450 (2007) 1054–1057.

[15] D. R. Solli, C. Ropers, B. Jalali, Active Control of
Rogue Waves for Stimulated Supercontinuum Gen-
eration, Phys. Rev. Lett. 101 (2008) 233902.

[16] A. Demircan,

S. Amiranashvili, C. Br´ee,
C. Mahnke, F. Mitschke, G. Steinmeyer, Rogue
events in the group velocity horizon, Sci. Rep. 2
(2012) 850.

[21] O. Melchert, C. Br´ee, A. Tajalli, A. Pape,
R. Arkhipov, S. Willms, I. Babushkin, D. Skryabin,
G. Steinmeyer, U. Morgner, A. Demircan, All-
optical supercontinuum switching, Communications
Physics 3 (2020) 146.

[22] T. Brabec, F. Krausz, Nonlinear Optical Pulse Prop-
agation in the Single-Cycle Regime, Phys. Rev. Lett.
78 (1997) 3282.

[23] H. A. Haus, Y. Lai, Quantum theory of soliton
squeezing: a linearized approach, J. Opt. Soc. Am.
B 7 (1990) 386.

[24] C. H. Henry, R. F. Kazarinov, Quantum noise in pho-

tonics, Rev. Mod. Phys. 68 (1996) 801.

[25] P. D. Drummond, J. F. Corney, Quantum noise in
optical ﬁbers. I. Stochastic equations, J. Opt. Soc.
Am. B 18 (2) (2001) 139.

[26] J. F. Corney, P. D. Drummond, Quantum noise in
optical ﬁbers. II. Raman jitter in soliton communi-
cations, J. Opt. Soc. Am. B 18 (2001) 153.

[27] J. M. Dudley, S. Coen, Numerical Simulations and
Coherence Properties of Supercontinuum Genera-
tion in Photonic Crystal and Tapered Optical Fibers,
IEEE J. Sel. Top. Quantum Electron. 8 (2002) 651.

[28] J. M. Dudley, S. Coen, Coherence properties of su-
percontinuum spectra generated in photonic crystal
and tapered optical ﬁbers, Opt. Lett. 27 (2002) 1180.

12

[29] S. M. Kobtsev, S. V. Smirnov, Modelling of high-
power supercontinuum generation in highly nonlin-
ear, dispersion shifted ﬁbers at CW pump, Opt. Ex-
press 13 (2005) 6912–6918.

[39] S. Balac, A. Fernandez, SPIP: A computer pro-
gram implementing the Interaction Picture method
for simulation of light-wave propagation in optical
ﬁbre, Comp. Phys. Commun. 199 (2016) 139.

[30] E. Genier, P. Bowen, T. Sylvestre, J. M. Dudley,
P. Moselund, O. Bang, Amplitude noise and coher-
ence degradation of femtosecond supercontinuum
generation in all-normal-dispersion ﬁbers, J. Opt.
Soc. Am. B 36 (2019) A161–A167.

[31] R. Paschotta, Noise of mode-locked lasers (Part I):
numerical model, Appl. Phys. B 79 (2004) 153.

[32] A. Ruehl, M. J. Martin, K. C. Cossel, L. Chen,
H. McKay, B. Thomas, C. Benko, L. Dong, J. M.
Dudley, M. E. Fermann, I. Hartl, J. Ye, Ultrabroad-
band coherent supercontinuum frequency comb,
Phys. Rev. A 84 (2011) 011806.

[33] B. Zhou, M. Bache, Invited Article: Multiple-octave
spanning high-energy mid-IR supercontinuum gen-
eration in bulk quadratic nonlinear crystals, APL
Photonics 1 (2016) 050802.

[34] M. Ibison, B. Haisch, Quantum and classical statis-
tics of the electromagnetic zero-point ﬁeld, Phys.
Rev. A 54 (1996) 2737–2744.

[35] M. J. Werner, M. G. Raymer, M. Beck, P. D. Drum-
mond, Ultrashort pulsed squeezing by optical para-
metric ampliﬁcation, Phys. Rev. A 52 (1995) 4202.

[36] J. Hult, A Fourth-Order Runge–Kutta in the Interac-
tion Picture Method for Simulating Supercontinuum
Generation in Optical Fibers, J. Lightwave Tech.
25 (12) (2007) 3770.

[37] A. M. Heidt, Eﬃcient Adaptive Step Size Method
for the Simulation of Supercontinuum Generation in
Optical Fibers, J. Lightwave Tech. 27 (18) (2009)
3984.

[38] A. A. Rieznik, A. M. Heidt, P. G. Konig, V. A.
Bettachini, D. F. Grosz, Optimum integration pro-
cedures for supercontinuum simulation, IEEE Pho-
tonics Journal 4 (2012) 552–560.

[40] O. Melchert, A. Demircan, py-fmas: A python pack-
age for ultrashort optical pulse propagation in terms
of forward models for the analytic signal, Computer
Physics Communications 273 (2022) 108257.

[41] K. J. Blow, D. Wood, Theoretical Description of
Transient Stimulated Raman Scattering in Optical
Fibers, IEEE J. Quantum Electron. 25 (1989) 2665.

[42] R. H. Stolen, J. P. Gordon, W. J. Tomlinson, Raman
response function of silica-core ﬁbers, J. Opt. Soc.
Am. B 6 (1989) 1159.

[43] Q. Lin, G. P. Agrawal, Raman response function for

silica ﬁbers, Opt. Lett. 31 (2006) 3086.

[44] D. Hollenbeck, C. D. Cantrell, Multiple-vibrational-
mode model for ﬁber-optic Raman gain spectrum
and response function, J. Opt. Soc. Am. B 19 (2002)
2886.

[45] C. Agger, C. Petersen, S. Dupont, H. Steﬀensen,
J. K. Lyngsø, C. L. Thomsen, J. Thøgersen, S. R.
Keiding, O. Bang, Supercontinuum generation in
zblan ﬁbers—detailed comparison between mea-
surement and simulation, J. Opt. Soc. Am. B 29
(2012) 635.

[46] P. L. Franc¸ois, Nonlinear propagation of ultrashort
pulses in optical ﬁbers: total ﬁeld formulation in the
frequency domain, J. Opt. Soc. Am. B 8 (1991) 276–
293.

[47] M. H. Frosz, O. Bang, A. Bjarklev, Soliton colli-
sion and Raman gain regimes in continuous-wave
pumped supercontinuum generation, Opt. Express
14 (2006) 9391.

[48] M. H. Frosz, Validation of input-noise model for
simulations of supercontinuum generation and rogue
waves, Opt. Express 18 (2010) 14778.

[49] S. J. Carter, P. D. Drummond, M. D. Reid, R. M.
Shelby, Squeezing of quantum solitons, Phys. Rev.
Lett. 58 (1987) 1841–1844.

13

[50] P. D. Drummond, S. J. Carter, Quantum-ﬁeld theory
of squeezing in solitons, J. Opt. Soc. Am. B 4 (10)
(1987) 1565–1573.

[60] G. E. P. Box, M. E. Muller, A Note on the Gener-
ation of Random Normal Deviates, The Annals of
Mathematical Statistics 29 (2) (1958) 610 – 611.

[51] E. Brainis, D. Amans, S. Massar, Scalar and vector
modulation instabilities induced by vacuum ﬂuctu-
ations in ﬁbers: Numerical study, Phys. Rev. A 71
(2005) 023808.

[52] N. Raabe, T. Feng, T. Witting, A. Demircan,
C. Br´ee, G. Steinmeyer, Role of Intrapulse Coher-
ence in Carrier-Envelope Phase Stabilization, Phys.
Rev. Lett. 119 (2017) 123901.

[61] G. H. Goedecke, Stochastic Electrodynamics. I.
On the Stochastic Zero-Point Field, Foundations of
Physics 13 (1983) 1101.

[62] G. Ycas, pynlo: Nonlinear optics modeling
for python, https://github.com/pyNLO/PyNLO
(2013).

[63] L. Trefethen, Spectral Methods in MATLAB, SIAM,

Philadelphia, 2000.

[53] G. Rossum, Python Reference Manual, Tech. rep.,
Amsterdam, The Netherlands, The Netherlands
(1995).

[64] B. Garc´ıa-Archilla, Some Practical Experience with
the Time Integration of Dissipative Equations, J.
Comp. Phys. 25 (1995) 122.

[54] P. Virtanen, R. Gommers, T. E. e. a. Oliphant, SciPy
1.0: fundamental algorithms for scientiﬁc comput-
ing in Python, Nature Methods 17 (2020) 261.

[55] J. D. Hunter, Matplotlib: A 2D graphics envi-
ronment, Computing in Science & Engineering 9
(2007) 90.

[56] O. Melchert, GNLStools – Data structures and
functions for simulation and analysis of the prop-
agation dynamics of
laser pulses in nonlinear
waveguides, https://github.com/omelchert/
GNLStools.git, [Online; accessed 2022-06-07]
(2022).

[57] T. Taha, M. Ablowitz, Analytical and Numerical
Aspects of Certain Nonlinear Evolution Equations.
II. Numerical, Nonlinear Schr¨odinger Equation, J.
Comp. Phys. 55 (1984) 203.

[58] P. DeVries, Application of the Split Operator Fourier
Transform method to the solution of the nonlinear
Schr¨odinger equation, AIP Conf. Proc. 160 (1987)
269.

[59] On the discrete computational grid we identify F
with ifft, and F−1 with fft. Consequently, the
spectral envelope in the provided implementation
diﬀers from the one deﬁned by Eq. (4a) by an unim-
portant phase factor.

14

