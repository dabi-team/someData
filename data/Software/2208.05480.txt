2
2
0
2

g
u
A
8
1

]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[

2
v
0
8
4
5
0
.
8
0
2
2
:
v
i
X
r
a

NIDN: Neural Inverse Design of Nanostructures

Pablo G ´omez1,*, H ˚avard Hem Toftevaag1, Torbjørn Bogen-Storø1, Derek Aranguren van
Egmond1, and Jos ´e M. Llorens2

1European Space Agency, Advanced Concepts Team, Noordwijk, 2201AZ, The Netherlands
2Instituto de Micro y Nanotecnolog´ıa, IMN-CNM, CSIC (CEI UAM+CSIC) Isaac Newton, 8, E-28760, Tres Cantos,
Madrid, Spain
*Corresponding author, pablo.gomez@esa.int

ABSTRACT

In the recent decade, computational tools have become central in material design, allowing rapid development cycles at
reduced costs. Machine learning tools are especially on the rise in photonics. However, the inversion of the Maxwell equations
needed for the design is particularly challenging from an optimization standpoint, requiring sophisticated software.
We present an innovative, open-source software tool called Neural Inverse Design of Nanostructures (NIDN) that allows
designing complex, stacked material nanostructures using a physics-based deep learning approach. Instead of a derivative-free
or data-driven optimization or learning method, we perform a gradient-based neural network training where we directly optimize
the material and its structure based on its spectral characteristics. NIDN supports two different solvers, rigorous coupled-wave
analysis and a ﬁnite-difference time-domain method. The utility and validity of NIDN are demonstrated on several synthetic
examples as well as the design of a 1550 nm ﬁlter and anti-reﬂection coating. Results match experimental baselines, other
simulation tools, and the desired spectral characteristics.
Given its full modularity in regard to network architectures and Maxwell solvers as well as open-source, permissive availability,
NIDN will be able to support computational material design processes in a broad range of applications.

Introduction

Computational tools have been playing an increasingly central role in material design in recent decades. With lower costs and
rapid development cycles they are an efﬁcient starting point in the material design process that can later be complemented
with experimental validation and reﬁnement1. Especially machine learning techniques have recently seen widespread adoption
in applications ranging from predicting material properties to designing nanostructures2, 3 and this work aims to advance and
support these efforts.

Brute-force parameter sweeps are increasingly being replaced by more sophisticated optimization methods in the design
of metamaterials and nanophotonic devices4–10. And, instead of letting human intuition and analytically derived parameters
determine the architecture, nanostructured devices can now be autonomously designed for high performance, made possible by
the exhaustive exploration of the design space that such algorithms perform7. In this context, this process of determining the
physical characteristics from certain properties11, e.g., ﬁnding the geometry of a structure for a given optical response, is called
inverse design. Recently, there have been a lot of works on inverse design for nanophotonics using different techniques, such as
generative adversarial networks4, variational auto-encoders5 and other machine learning and optimization methods1–3.

One area where this has received a lot of attention is the space sector, where reducing the size, weight, power, and cost
of objects put into orbit is not only a high priority, but can in many cases also determine the feasibility of the project. One
example are photon sails, which must have sail thicknesses on the order of only a few micrometers (the IKAROS solar sail
was only 7.5 µm thick12) in order to avoid an unsuitable weight. Recently, there has been research on using metasurfaces for
solar sails, made with both conventional design13 and inverse design14 methods. These metasurfaces might offer, for instance,
attitude control13 and mass reduction14 while maintaining a high efﬁciency.

Recent works have also applied metamaterial knowledge to the optical solar reﬂector (OSR), a structure placed on the
external surface of a spacecraft that simultaneously reﬂects incoming sunlight and emit infrared radiation. Instead of using
the conventional design of planar structures, Sun et al. showed that a simple metasurface can reduce the thickness15, 16. The
terrestrial cousin of the OSR, radiative cooling structures, have followed a similar trend recently17.

Overall, these methods rely on sophisticated software tools and datasets which has inspired efforts to make those available
openly as, e.g., in the work of Jiang et al.18. In a similar vain, in this work, we present an open-source software package called
Neural Inverse Design of Nanostructures (NIDN) that allows designing nanostructures with neural networks using two different,
fully differentiable implementations of Maxwell equations solvers based on the ﬁnite-difference time-domain (FDTD) method19
and rigorous coupled-wave analysis (RCWA)20. RCWA is a natural and efﬁcient choice for stacked materials designed with

 
 
 
 
 
 
Figure 1. Training setup for NIDN; regression and classiﬁcation as well as RCWA and FDTD are described in detail in
Methods.

NIDN. FDTD complements it by supporting design in the visible light range of the spectrum and - depending on geometry -
providing higher accuracy21. Both enable the machine-learning-based design of multilayer materials with patterned nanoscale
grids to achieve a desired spectrum of reﬂectance, transmittance and absorptance. Thus, NIDN has the potential to support a
wide range of the aforementioned applications. In comparison to previous similar efforts such as those by Jiang et al.22 we
utilize a fundamentally different technique relying on directly encoding the material inside a neural network.
Building on advances in physics-based deep learning23, in NIDN, we directly optimize the nanostructure described by the
neural network to achieve one speciﬁc spectrum. In this approach, no prior knowledge or training datasets are required as
gradients are backpropagated through a (differentiable) numerical solver. Also, as the neural network does not need to solve the
problem of fully describing the relationship between any material and spectral characteristics the task is more tractable. In
many previous approaches24, 25, neural networks effectively need to invert the Maxwell equations to match material and spectral
characteristics to each other. In NIDN, by solving for a speciﬁc reﬂectance, transmittance and absorptance spectrum, we –
from a mathematical perspective – constrain the inversion to a speciﬁc solution of the Maxwell equations. This furthermore
avoids being limited to only a few degrees of freedom, such as placing a speciﬁc structure on top of another, in the material
design25, 26; instead we can fully explore the entire search space of structures. Several nanosurface modiﬁcation strategies
have been employed to tune spectral response in optical devices. NIDN speciﬁcally excels in the parametric optimization of
heterogeneous, multi-layer devices, which use local composition to tune electromagnetic properties. This is in contrast to the
geometric structuring of a single material surface, which has limited local spectral tunability.

In fact, the neural network learn to produce a spatially continuous function describing the material permittivity. We
demonstrate the validity and versatility of the approach by comparing to existing implementations that we built on. We
showcase several examples ranging from simple uniform layers to practical applications related to photonic ﬁlter design and
perfect anti-reﬂection. NIDN is also capable of running on graphics cards (GPUs) and is available open-source online.1 The
authors hope to build a community around the software, extending its capabilities and ﬁdelity even further in the future.

Results

In the following, we showcase results demonstrating NIDN’s capabilities. In particular, we ﬁrst validate the numerical Maxwell
solvers in NIDN against baselines, then show the efﬁcacy of the inverse design on some simple materials, and, ﬁnally, investigate
two common design scenarios from the literature.

1https://github.com/esa/NIDN Accessed: 2022-04-21

2/16

Loss FunctionNeural NetworkDesigned MaterialTarget Spectral CharacteristicsClassification BackpropagationSimulation with  RCWA / FDTDRegression /Designed Spectral CharacteristicsMaterial Design Setup
The following results were obtained using NIDN and its Maxwell solvers derived from the RCWA implementations by Jin et
al.14 and an adaption of an open-source implementation of FDTD in PyTorch 1.9.2 Both are described in more detail in the
Section Methods. NIDN utilizes PyTorch 1.9 to enable automatic differentiation and neural network training to design materials
of stacked layers such as shown in Figure 1. Details on neural network architectures and training as well as the detailed training
setup are given in the Section Methods. Data on material permittivity are obtained from an online database.3 More detailed info
on speciﬁc references for each material are provided in the integrated database of materials in NIDN.4
Permittivity between provided measurement points is interpolated linearly. Layer thickness if not speciﬁed otherwise is
1 µm. Grid dimensions if not speciﬁed are 1 µm × 1 µm. In general, NIDN supports two modes of inverse design which
are described in more detail in the Section Methods: The ﬁrst one is referred to as regression, where the permittivity of the
material is predicted within some value range to investigate hypothetical materials achieving the target spectral characteristics.
If not speciﬁed otherwise, the range for relative permittivity εr considered by the network is [0.01, 20 + 3i]. All references to
permittivity refer to relative permittivity. The second approach is called classiﬁcation and the permittivity in this case is chosen
as a linear combination of reported permittivity of real materials. All considered materials are listed in the codebase. At present,
only normal incidence is considered. Figure 1 gives a high-level overview of the training process.
The number of training iterations depended on the task and solver; for RCWA between 1000 and 5000 training iterations were
used, for FDTD not more than 150 iterations due to the higher computation time. No dispersion model is used and frequencies
are computed independently. For a single uniform layer, a single training iteration with FDTD requires about eight seconds
per frequency, with RCWA it takes six milliseconds per frequency per iteration. L1 errors reported in the ﬁgures refer to the
mean absolute error between the target and obtained spectrum. Inversion with FDTD used a coarser grid in the numerical
discretization than for validation to keep the computational cost manageable (32 instead of 100).

Validation and Numerical Stability
NIDN contains a fully differentiable RCWA implementation that is derived from the Python module GRCWA14. In contrast
to GRCWA, NIDN utilizes PyTorch. Extensive tests are performed to validate both implementations against the original
implementations and results of these can be found in the Supplementary Information.
NIDN adapts the FDTD implementation from the Python module with the same name (fdtd5) but adds support for gradient ﬂow
through it and performs post processing. A comparison with an experimental baseline is given to validate the implemented post
processing. Further, we directly compare results with the original Python module to validate our changes to it.
A comparison with an experimental measurement of the transmission spectrum of TiO2 is performed for both. The TiO2 layer
in the experiment by Wojcieszak et al.27 was 380 nm thick and transmission of wavelengths between 300 nm and 900 nm were
measured using a spectrophotometer. Figure 2 displays transmittance obtained with NIDN RCWA and FDTD using continuous
waves with wavelengths from 300 nm to 900 nm as well as the experimental result. Overall, it can be seen that the transmittance
in NIDN resembles the one observed in the experiment. Point clustering in the FDTD version is a discretization effect due to
the number of grid points used in the simulation.

Material and Structure Inference
As a ﬁrst demonstration of NIDN’s capabilities, we present results on some rudimentary examples. These examples aim to
reconstruct a material for which the spectral characteristics were computed with RCWA / FDTD, thus the inversion is certain to
have a solution obtainable by the network. In particular, these results show that, depending on the complexity of the spectral
characteristics, almost perfect results can be obtained. Furthermore, we can investigate how unique solutions are by studying
the similarity of designed materials with the ground-truth baseline.

Uniform TiO2 Layer Inversion
First, we show that NIDN is capable of recreating the permittivity of a single layer of TiO2, with FDTD in the visible range of
the spectrum (for RCWA a more complex three-layer example is tested).
Figure 3 showcases these results. Note that to save computational time, a limited number of frequency points, i.e. 20, were
investigated. A clear convergence towards the ground truth is visible. However, the predicted permittivity clearly differs from
the real one.

Even though the inversion with the regression approach was successful, it was not constrained to realistic materials. In
Figure 4 we show results for the classiﬁcation approach for this single-layer material. Overall, the inversion is successful and

2https://github.com/flaport/fdtd Accessed: 2022-04-21
3https://refractiveindex.info Accessed: 2022-04-21
4https://github.com/esa/NIDN/tree/main/nidn/materials/data Accessed 2022-04-21
5https://github.com/flaport/fdtd Accessed: 2022-04-21

3/16

(a) NIDN RCWA TiO2 Layer Spectrum

(b) NIDN FDTD TiO2 Layer Spectrum

(c) Experimental results by Wojcieszak et al.27
(reprinted with permission)

Figure 2. Comparison of the transmittance of a 380 nm thick layer of TiO2 in NIDN and experimentally measured

the obtained spectral characteristics are even closer to the target. Furthermore, as seen in Figure 4b, the used epsilon value now
corresponds well to the experimental permittivity of TiO2.

Three-Layer Uniform Material

The second example is the design of a three-layer material consisting of TiO2, Germanium (Ge) and Ta2O5. Figure 5 displays
the regression results with RCWA for this material. Again, the design of the spectral properties is successful. However,
permittivities of the different layers are notably further from real materials. The obtained permittivity is not resemblant of the
used materials.
In contrast, with the classiﬁcation and RCWA approach, the restriction for the permittivity actually leads to the network
learning the permittivity of the utilized materials for each layer, as can be seen in Figure 6. Furthermore, the achieved spectral
characteristics also almost perfectly match the design goal of the ground truth.

4/16

(a) Target and Obtained Spectrum

Figure 3. Inversion results for a single-layer TiO2 material using FDTD and regression; a) displays target and produced
spectra, b) shows the utilized permittivity; differences to Figure 2 are due to smaller number of discretization grid points

(b) Predicted Permittivity

Two-Layer Patterned Material
The last case based on a ground truth from the forward models (i.e., the RCWA and FDTD implementations) is a two-layer
patterned material consisting of TiO2 and Ge with a square pattern in the center similar to those shown in the Supplementary
Information. In the upper layer the square is made of TiO2 and surroundings of Ge and vice versa for the bottom layer. This
test case is only studied with RCWA as support for patterned layers is currently still in development for FDTD.
Figure 7 displays the obtained spectral characteristics with regression and RCWA. The desired spectrum is reproduced very
well as can be seen in Figure 7a. However, the utilized permittivity is not close to any material available in NIDN as 7b shows
and the reconstructed pattern is not resemblant of the ground truth.
For the classiﬁcation approach and RCWA, shown in Figure 8, comparable errors are obtained. In this case – as can be seen in
Figure 8b – the permittivity chosen by the network is close to those of used in the ground truth, i.e., TiO2 and Ge. The pattern
of the ground truth was not reconstructed implying that the network found a good solution without it.

Filter Design
The ﬁrst test case closer to a potential application is the design of a bandpass ﬁlter. In this case, the target spectral properties are
deﬁned manually. Hence, the spectral characteristics may actually not be obtainable with the material properties the network is
allowed to utilize. A stack of ten uniform layers is used to design the material. Due to the larger computational cost of FDTD,
only RCWA was studied in this case. Also, the classiﬁcation for this test case did not converge - likely because the available
materials in database did not sufﬁce to ﬁnd a solution for this problem.

Regression
With the regression, the chosen range for the relative permittivity is εr ∈ [0, 20 + 1i]. The achieved spectral characteristics
with regression and RCWA of the designed ﬁlter are shown in Figure 9. The designed material captures the gap at the chosen
wavelength around 1550 nm very well. Notably, the utilized permittivity is not similar to those of existing materials with erratic
peaks in the real component of the permittivity for some of the layers.

5/16

(a) Target and Obtained Spectrum

Figure 4. Inversion results for a single-layer TiO2 material using FDTD and classiﬁcation; a) displays target and produced
spectra, b) shows the utilized permittivity; differences to Figure 2 are due to smaller number of discretization grid points

(b) Predicted Permittivity

Perfect Anti-Reﬂection Coating
This second test case related to an application explores the scenario of building a perfect anti-reﬂection on top of a substrate
with relative permittivity εr = 16. This is closely related to the research described by Kim & Park28. Thus, we use a stack of
eight 0.1 µm thick layers on top of the higher permittivity substrate to achieve an anti-reﬂection coating (ARC).

Regression
For the regression with RCWA, Figure 10 displays the achieved spectral characteristics. The obtained transmittance is above
0.9975 for the entire range between 400 nm and 700 nm, a peak transmittance of 0.9990 is achieved, the average is 0.9985.
However, once again we can observe – as seen in Figure 10b – that the chosen permittivity does not resemble real material
properties.

Classiﬁcation
With the classiﬁcation approach, the material design is still successful as can be seen in Figure 11. On average, the transmittance
is 0.9011 with all values being over 0.7822 and a peak at 0.9756. As discernible in Figure 11b, the chosen materials for the
layers in this approach are similar to existing ones such as Silicon Nitride and TiO2.

Discussion

Overall, the results presented in this work clearly highlight the capabilities and potential of NIDN. We have shown it is able to
correctly reproduce the material properties of several synthetic examples, which demonstrates that the inversion and training
is successful for both, RCWA and FDTD. Similarly, the creation of both a 1550 nm ﬁlter and a perfect ARC are achieved.
However, especially the regression approach is susceptible to ﬁnding solutions which are not plausible for real materials. The
main reason for this is the lack of constraints on the chosen permittivity. Currently, the constraints on physical plausibility
in NIDN are implicitly given through the numerical simulations for determining the spectral characteristics. An additional
component that checks if the predicted permittivity matches a realistic permittivity may be needed. The classiﬁcation approach

6/16

(a) Target and Obtained Spectrum

Figure 5. Inversion results for a three-layer material using RCWA and regression; a) displays target and produced spectra, b)
shows the utilized permittivity for each layer

(b) Predicted Permittivity

is able to partially remedy this, but for the real-world examples of ﬁlter design and ARC it is less effective at matching desired
spectral characteristics. This is likely due to the limited number (12) of materials currently available in NIDN. The number can
be increased, however, this also creates a harder classiﬁcation problem which may in turn require ﬁnding an optimal trade-off
of the number and diversity of available materials vs. the design limitations induced by fewer available materials.

One aspect where NIDN is more versatile than previous approaches25 is that no imposition of shape or form is required or
performed. In fact, even the discretization into a grid is not a constraint as it is only required by the solver (RCWA or FDTD);
the neural network output is spatially continuous. One thing that has been observed is, however, that the simpler case of having
uniform layers beneﬁts training convergence when utilizing RCWA. The reason for this is likely the need to iteratively solve an
eigenvalue problem if non-uniform layers are present which may deteriorate gradients. This may be remedied, e.g., by returning
to a stochastic setting where gradients are averaged over several tested materials to make the training more robust. This does
come at an increased computational cost but may be parallelized.

In summary, NIDN demonstrates the ﬂexibility of physics-based deep learning methods. The range of applications for the
software goes well beyond the shown test cases of ﬁlters and ARC as it conceivably can be used for a broad range applications
such as radiative materials15, 16 or solar sails14. With RCWA and FDTD, two complementary solvers are integrated, RCWA
being fast and well-suited for higher wavelength and FDTD being more potent and capable to investigate nanostructures in
the visible and infrared spectrum. In the future, optimization and parallelization of the solvers will be critical to improve
performance as especially training with FDTD for complex materials becomes prohibitively computationally expensive. Further,
FDTD can also be used for the design of non-periodic structures which is a feature not yet implemented in NIDN.

Methods

Rigorous Coupled-Wave Analysis (RCWA)
The RCWA method is a well-established tool for modeling scattering of stacked structures20. In the NIDN implementation,
single material as well as patterned layers can be stacked. A detailed overview of the capabilities can be found in the
documentation of the Python module grcwa14 which NIDN’s implementation is derived from. Note that the numerical stability

7/16

(a) Target and Obtained Spectrum

Figure 6. Inversion results for a three-layer material using RCWA and classiﬁcation; a) displays target and produced spectra,
b) shows the utilized permittivity for each layer

(b) Predicted Permittivity

of RCWA is dependent on the ratio of the size of the material grid to the investigated wavelength, i.e., for ratios above one
RCWA may produce non-physical results.
The implementation in NIDN supports specifying a top or bottom layer in addition to the material; by default a vacuum layer is
placed at both. The grid dimensions, number of layers and thicknesses of all layers can be speciﬁed manually. The default
truncation order for simulations is 11 to keep computational costs low but it is conﬁgurable. The implementation employs a
relaxation by adding a ﬁctitious material absorption loss14, 29. For now, we only investigated inversion with perpendicular light
incidence angles and polarized light, however, both are also conﬁgurable in the RCWA implementation.

Finite-Difference Time-Domain (FDTD)
FDTD is a simulation method that models the electric and magnetic ﬁeld using a regular grid as a spatial discretization with a
ﬁnite difference method30. The electric and magnetic ﬁelds at each grid point are calculated with numerical approximations
of Maxwell’s equations; more speciﬁcally the electric ﬁeld at each point is calculated using the curl of the magnetic ﬁeld
surrounding the point, and the magnetic ﬁeld is calculated using the curl of the electric ﬁeld surrounding the point.

The grid size is set to one tenth of the smallest wavelength used in the simulations, based on recommendations from the
fdtd module’s documentation.6 The time step is set according to the Courant-Friedrichs-Lewy Condition31, to ensure numerical
stability:

∆t =

Sc · ∆x
u

(1)

where ∆t is the time step, u is the wave velocity, ∆x is the spatial resolution and Sc =

√

dim =

√

2 is the Courant number.

In this work, the FDTD simulations were setup with periodic boundaries in the directions orthogonal to the wave-propagation
to simulate an inﬁnite plane. In the direction of propagation, Perfectly Matching Layers (PML) were used. PMLs aim to absorb
as much of the electromagnetic-wave as possible to avoid reﬂections at the boundaries of the grid. In the propagation direction,

6https://fdtd.readthedocs.io/en/latest/ Accessed: 2022-05-02

8/16

(a) Target and Obtained Spectrum

Figure 7. Inversion results for a two-layer patterned material using RCWA and regression; a) displays target and produced
spectra, b) each line shows the utilized permittivity for a grid cell

(b) Predicted Permittivity

the grid is built up by a PML layer of 1.5 µm, a vacuum layer of 1.0 µm, the material(s) chosen with the speciﬁed thicknesses, a
vacuum layer of 1.0 µm and ﬁnally another PML layer of 1.5 µm. The source is a line across the width of the grid, radiating a
continuous wave, placed at the interface between the ﬁrst PML-layer and the free-space layer.

We measure the electromagnetic wave at placed detectors in the FDTD simulations such that the signal is independent of the
direction of the incoming wave. Due to this, a correction of the reﬂected signal is necessary as the raw signal contains both the
forward-going wave before reﬂection and the reﬂected wave. For the correction, we use an identical simulation setup without a
material, the so-called free-space case, and subtract the measured signal from this simulation from the one with a material.

The transmission and reﬂection coefﬁcients are calculated by comparing the energy of the wave after the transmission and a

free-space case where there is no loss from a material such that

T =

Pi
Pt

=

E2
0i
E2
0t

(2)

where the subscripts i,t and 0 refer to incident wave, transmitted wave and amplitude of the wave, respectively. Since the
E2
0
2 , the mean squared value is used to calculate the
mean squared value of an integer number of periods of a sine wave equals
transmission coefﬁcients. The same is the case for the corrected reﬂection signal. No dispersion model has been implemented
as frequencies are computed independently. By running the simulation for all desired wavelengths, the coefﬁcients from each
simulation were accumulated to obtain a transmission and reﬂection spectrum. The absorption spectrum is calculated by
A = 1 − T − R.

The number of time steps were chosen such that both the reﬂected signal and transmitted signal have at least two peaks, such
that the mean square can be calculated over at least one period. The loss from a material in FDTD comes from the conductivity
parameter. This is included in the AbsorbingObject from the fdtd module, which is the only object/material type currently
implemented in NIDN. The conductivity σ is set to σ = ε (cid:48)(cid:48) · ε0 · ω

Model Inversion Approach
The inversion process in NIDN is inspired by recent research related to physics-based deep learning23 and in directly optimizing
physical properties using differentiable simulations32. The main advantage of these approaches is that gradients in training

9/16

(a) Target and Obtained Spectrum

Figure 8. Inversion results for a two-layer patterned material using RCWA and classiﬁcation; a) displays target and produced
spectra, b) each line shows the utilized permittivity for a grid cell

(b) Predicted Permittivity

neural networks are propagated directly through a numerical simulation (also referred to as forward model in the context of
inverse problems). Thus, there is no need to build a dataset of any kind. In particular, the process in NIDN consists of the
following steps which are also depicted in Figure 1:

1. Specify target spectral characteristics (reﬂectance, transmittance, absorptance) and material properties (size, allowed

permittivity, simulation parameters)

2. Randomly initialize a neural network that prompted with a position returns the material’s permittivity at that position

3. Perform an evaluation of the numerical model for all target frequencies, i.e., compute the spectral characteristics for the

materials as described by the network

4. Compute the loss, i.e., the difference in the target spectral characteristics and those obtained through the network’s

material

5. Backpropagate the gradients and update the network parameters to iteratively minimize the difference between target and

obtained spectral characteristics

6. Until results are satisfactory, return to Step 3

After this process, the network is directly encoding the designed material by providing a permittivity for each position in the
material. Herein, the conversion from a position to a permittivity is a particularly critical aspect to allow successful inverse
design which will now be described in more detail.

Direct Permittivity Inference
NIDN implements two different ways to determine the relative permittivity ε P
r at a point P = (x, y, z, f ) where x and y are the
point’s location in a layer, z is the index of the layer it is on and f is the frequency at which we are evaluating. The ﬁrst way is
referred to as regression because the network herein directly infers a permittivity mapping P (cid:55)→ ε P
r . The values are then clipped
at some speciﬁed range to restrict it to physically plausible permittivity values. However, as can be seen in the results section,

10/16

(a) Target and Obtained Spectrum

Figure 9. Inversion results for designing a bandpass ﬁlter with a ten layer stack using RCWA and regression; a) displays target
and produced spectra, b) shows the utilized permittivity for each layer and closest material in NIDN (dashed)

(b) Predicted Permittivity

the frequency-dependent permittivity is still fairly unconstrained, allowing for materials that are not plausible as they, e.g., do
not necessarily satisfy the Kramers-Kronig relationship33. But, the advantage of this approach is the direct optimization of the
material permittivity to obtain a solution that – at least with regard to the Maxwell solver – is plausible and can give a ﬁrst idea
of the hypothetical feasibility of some spectral characteristic assuming few constraints on permittivity. Permittivity values close
to 0 are clipped to ±0.01 to avoid singularities in the Maxwell solvers.

Material Classiﬁcation
In order to obtain materials of higher physical ﬁdelity, NIDN implements a second way of encoding material permittivity in the
neural network. Naively, one may assume that it would be easiest to have the network perform a classiﬁcation by assigning
one speciﬁc material (and hence its permittivity) to each grid cell. Unfortunately, this is infeasible as the necessary argmax
operation in a classiﬁcation (to select the most probable material) is not differentiable and thus would break the gradient ﬂow.
As an alternative, NIDN features a collection of N - at time of writing twelve - materials from which we determine the relative
permittivity εr at a point P through a linear combination such that

ε P
r =

N
∑
i=1

yPε i
r,

(3)

where yP ∈ [0, 1]N is the neural network output for point P and its i-th entry describes the probability of the i-th material at the
point P and ε i
r is the relative permittivity of the i-th material in NIDN, respectively. Thus, the produced permittivity is strongly
resemblant of real experimental permittivity as can be seen in the results for the classiﬁcation approach. Furthermore, to push
the network towards picking one material without breaking gradient ﬂow, the output yP is passed through a softmax function
with β = 16.

Neural Network Training
The neural network training in NIDN is inspired by several previous works in the ﬁeld of differentiable models32, 34–36. Thus,
dense neural networks, namely the NeRF35 and Siren36 architecture are employed. NIDN allows a variety of losses such as
absolute mean error or L2 error. For the classiﬁcation, an additional regularization loss is used penalizing probabilities for

11/16

(a) Target and Obtained Spectrum

Figure 10. Inversion results for designing an anti-reﬂection coating with an eight layer stack using RCWA and regression; a)
displays target and produced spectra, b) shows the utilized permittivity for each layer and closest material in NIDN (dashed)

(b) Predicted Permittivity

their distance from the values 0 and 1. Training uses the Adam optimizer, a default learning rate of 8 · 10−5 and a learning rate
scheduler to reduce the learning rate upon encountering a plateauing loss.

Software Structure
In general, NIDN enables users with two potential use cases: The ﬁrst is to run forward model simulations using either RCWA
or FDTD to obtain the spectral characteristics of a material. The second is the inverse design using neural network models to
describe a material structure that produces certain spectral characteristics. NIDN’s software repository has Jupyter notebooks
describing both processes in detail for RCWA and FDTD to enable users to run their own experiments. The project is open to
contributions and under a permissive GPL-3 open-source license to allow customization.
NIDN is designed with modularity in mind, allowing for arbitrary neural network models and Maxwell solvers to be plugged in.
It uses a continuous integration methodology with automated unit tests to ensure the correctness of the implementation. Several
plotting utilities, such as those used for the ﬁgures in this work are available. It is the authors’ hope that the described steps and
features will allow others to build and improve upon it.

12/16

(a) Target and Obtained Spectrum

Figure 11. Inversion results for designing an anti-reﬂection coating with an eight layer stack using RCWA and classiﬁcation;
a) displays target and produced spectra, b) shows the utilized permittivity for each layer and closest material in NIDN (dashed)

(b) Predicted Permittivity

References

1. Wei, J. et al. Machine learning in materials science. InfoMat 1, 338–358 (2019).

2. Liu, Y., Zhao, T., Ju, W. & Shi, S. Materials discovery and design using machine learning. J. Materiomics 3, 159–177

(2017).

3. Jiang, J., Chen, M. & Fan, J. A. Deep neural networks for the evaluation and design of photonic devices. Nat. Rev. Mater.

6, 679–700 (2021).

4. Liu, Z., Zhu, D., Rodrigues, S. P., Lee, K.-T. & Cai, W. Generative model for the inverse design of metasurfaces. Nano

Lett. 18, 6570–6576, DOI: 10.1021/acs.nanolett.8b03171 (2018).

5. Ma, W., Cheng, F., Xu, Y., Wen, Q. & Liu, Y. Probabilistic representation and inverse design of metamaterials based on a
deep generative model with semi-supervised learning strategy. Adv. Mater. 31, 1901111, DOI: 10.1002/adma.201901111
(2019).

6. Tahersima, M. H. et al. Deep neural network inverse design of integrated photonic power splitters. Sci. Reports 9, DOI:

10.1038/s41598-018-37952-2 (2019).

7. Piggott, A. Y., Petykiewicz, J., Su, L. & Vuˇckovi´c, J. Fabrication-constrained nanophotonic inverse design. Sci. Reports 7,

DOI: 10.1038/s41598-017-01939-2 (2017).

8. Rodríguez, J. A. et al. Inverse design of plasma metamaterial devices for optical computing. Phys. Rev. Appl. 16, DOI:

10.1103/physrevapplied.16.014023 (2021).

9. Sajedian, I., Badloe, T. & Rho, J. Finding the best design parameters for optical nanostructures using reinforcement

learning. arXiv preprint arXiv:1810.10964 (2018).

10. Sajedian, I., Badloe, T. & Rho, J. Optimisation of colour generation from dielectric nanostructures using reinforcement

learning. Opt. express 27, 5874–5883 (2019).

11. Molesky, S. et al. Inverse design in nanophotonics. Nat. Photonics 12, 659–670, DOI: 10.1038/s41566-018-0246-9 (2018).

13/16

12. MORI, O. et al. First solar power sail demonstration by IKAROS. Transactions Jpn. Soc. for Aeronaut. Space Sci. Aerosp.

Technol. Jpn. 8, To_4_25–To_4_31, DOI: 10.2322/tastj.8.to_4_25 (2010).

13. Ullery, D. C. et al. Strong solar radiation forces from anomalously reﬂecting metasurfaces for solar sail attitude control.

Sci. Reports 8, DOI: 10.1038/s41598-018-28133-2 (2018).

14. Jin, W., Li, W., Orenstein, M. & Fan, S. Inverse design of lightweight broadband reﬂector for relativistic lightsail propulsion.

ACS Photonics 7, 2350–2355, DOI: 10.1021/acsphotonics.0c00768 (2020).

15. Sun, K. et al. Metasurface optical solar reﬂectors using AZO transparent conducting oxides for radiative cooling of

spacecraft. ACS Photonics 5, 495–501, DOI: 10.1021/acsphotonics.7b00991 (2017).

16. Sun, K. et al. VO2 thermochromic metamaterial-based smart optical solar reﬂector. ACS Photonics 5, 2280–2286, DOI:

10.1021/acsphotonics.8b00119 (2018).

17. Hossain, M. M., Jia, B. & Gu, M. A metamaterial emitter for highly efﬁcient radiative cooling. Adv. Opt. Mater. 3,

1047–1051, DOI: 10.1002/adom.201500119 (2015).

18. Jiang, J. et al. Metanet: a new paradigm for data sharing in photonics research. Opt. Express 28, 13670–13681 (2020).
19. Sullivan, D. M. Electromagnetic simulation using the FDTD method (John Wiley & Sons, 2013).
20. Moharam, M. & Gaylord, T. Rigorous coupled-wave analysis of planar-grating diffraction. JOSA 71, 811–818 (1981).
21. Han, K. & Chang, C.-H. Numerical modeling of sub-wavelength anti-reﬂective structures for solar module applications.

Nanomaterials 4, 87–128 (2014).

22. Jiang, X. et al. Implementation of radiative cooling with an inverse-designed selective emitter. Opt. Commun. 497, 127209,

DOI: 10.1016/j.optcom.2021.127209 (2021).

23. Thuerey, N. et al. Physics-based deep learning. arXiv preprint arXiv:2109.05237 (2021).
24. Ma, W. & Liu, Y. A data-efﬁcient self-supervised deep learning model for design and characterization of nanophotonic

structures. Sci. China Physics, Mech. & Astron. 63, DOI: 10.1007/s11433-020-1575-2 (2020).

25. Nadell, C. C., Huang, B., Malof, J. M. & Padilla, W. J. Deep learning for accelerated all-dielectric metasurface design.

Opt. Express 27, 27523, DOI: 10.1364/oe.27.027523 (2019).

26. Colburn, S. & Majumdar, A. Inverse design and ﬂexible parameterization of meta-optics using algorithmic differentiation.

Commun. Phys. 4, DOI: 10.1038/s42005-021-00568-6 (2021).

27. Wojcieszak, D., Kaczmarek, D. & Domaradzki, J. Analysis of surface properties of semiconducting (ti,pd,eu)ox thin ﬁlms.

Opto-Electronics Rev. 24, 15–19, DOI: doi:10.1515/oere-2016-0003 (2016).

28. Kim, K.-H. & Park, Q.-H. Perfect anti-reﬂection from ﬁrst principles. Sci. reports 3, 1–5 (2013).
29. Liang, X. & Johnson, S. G. Formulation for scalable optimization of microcavities via the frequency-averaged local density

of states. Opt. express 21, 30812–30841 (2013).

30. Schneider, J. B. Understanding the ﬁnite-difference time-domain method (2010).
31. De Moura, C. A. & Kubrusly, C. S. The courant–friedrichs–lewy (cﬂ) condition. AMC 10 (2013).
32. Izzo, D. & Gómez, P. Geodesy of irregular small bodies via neural density ﬁelds: geodesynets. arXiv preprint

arXiv:2105.13031 (2021).

33. Lucarini, V., Saarinen, J. J., Peiponen, K.-E. & Vartiainen, E. M. Kramers-Kronig relations in optical materials research,

vol. 110 (Springer Science & Business Media, 2005).

34. von Looz, M., Gomez, P. & Izzo, D. Study of the asteroid bennu using geodesyanns and osiris-rex data. arXiv preprint

arXiv:2109.14427 (2021).

35. Mildenhall, B. et al. Nerf: Representing scenes as neural radiance ﬁelds for view synthesis. In European conference on

computer vision, 405–421 (Springer, 2020).

36. Sitzmann, V., Martel, J., Bergman, A., Lindell, D. & Wetzstein, G. Implicit neural representations with periodic activation

functions. Adv. Neural Inf. Process. Syst. 33, 7462–7473 (2020).

Author contributions statement

P.G. and H.H.T. conceived of the presented idea, P.G., H.H.T and T.B.S. developed the computational framework and performed
computations, P.G. and T.B.S. conducted the simulations, H.H.T, T.B.S., D.A.E. and J.M.L. contributed to the interpretation
of results. J.M.L. provided supporting software and calculations. P.G. took the lead in writing the manuscript. All authors
provided critical feedback and helped shape the research, analysis and manuscript.

14/16

Data availability statement

All code and results presented in this paper are available open-source and open-access in the associated GitHub repository
under https://github.com/esa/NIDN. Jupyter notebooks in the repository contain all data shown in this article.

Additional information

The authors declare no competing interests.

A Supplementary Information

We show the numerical comparison between the original implementation of RCWA in the Python package grcwa with the
implementation in NIDN. Figure A.1 contains the details of the uniform and patterned unit cells. Figure A.2 shows the
comparison in reﬂectance and transmittance of the unit cell from Figure A.1a and, correspondingly, Figure A.3 from Figure
A.1b.

The validation of the FDTD impelementation in NIDN with respect to the original package fdtd is shown in Figure A.4

through the electric ﬁeld in a TiO2 slab of 300 nm.

(a) Uniform Grid Test Case

(b) Patterned Grid Test Case

Figure A.1. Geometry of test cases for validation against the original implementation of RCWA in the Python module grcwa.
A three-layer homogeneous material and a two-layer patterned material are investigated.

Figure A.2. A three-layer uniform material with a layer of Germanium, Titanium Dioxide (TiO2) and Tantalum Pentoxide
(Ta2O5), respectively. The spectral characteristics are investigated at wavelengths between 1 µm and 50 µm. The mean absolute
error between GRCWA and NIDN is 7.90 · 10−5. Overall, the spectra are very similar and differences are likely in the range of
numerical errors.

15/16

Figure A.3. The second test case is a material consisting of two patterned 0.1 µm × 0.1 µm layers consisting of Ta2O5 with an
embedded square and circle component of ZnO and TiO2 in the center, respectively. A range of 1 µm to 10 µm is chosen.
Obtained mean absolute error are between the spectra is 1.70 · 10−3. Again, the obtained spectra match almost perfectly.

(a) fdtd vs. NIDN signal

(b) Error between fdtd and NIDN

Figure A.4. Direct comparison of a single 300 nm thick TiO2 layer obtained with NIDN’s FDTD implementation and the one
from the fdtd Python module for a continuous light source at a wavelength 1 µm. The mean absolute error between the original
FDTD and NIDN is 6.88 · 10−7. Overall, results remain virtually identical apart from numerical errors.

16/16

