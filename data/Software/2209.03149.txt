MultiViz : A Gephi Plugin for Scalable
Visualization of Multi-Layer Networks

Jayamohan Pillai C.S, Ayan Chatterjee, Geetha M, and Amitava Mukherjee

1

2
2
0
2

p
e
S
6

]
I
S
.
s
c
[

1
v
9
4
1
3
0
.
9
0
2
2
:
v
i
X
r
a

Abstract—The process of visually presenting networks is an effective way to understand entity relationships within the networks since
it reveals the overall structure and topology of the network. Real networks are extremely difﬁcult to visualize due to their immense
complexity, which includes vast amounts of data, several types of interactions, various subsystems and several levels of connectivity as
well as changes over time. This paper introduces the ”MultiViz Plugin,” a plugin for gephi, an open-source software tool for graph
visualization and modiﬁcation, in order to to visualize complex networks in a multi-layer manner. A collection of settings are availabe
through the plugin to transform an existing network into a multi-layered network. The plugin supports several layout algorithms and lets
user to choose which property of the network to be used as the layer. The goal of the study is to give the user complete control over
how the network is visualized in a multi-layer fashion. We demonstrate the ability of the plugin to visualize multi-layer data using a
real-life complex multi-layer datasets. The plugin is open-source and is freely available at https://github.com/JSiv/MultiViz.

Index Terms—Multilayer Networks, Gephi Plugin, Graph Visualization, Network Visualization

(cid:70)

1 INTRODUCTION

U NDERSTANDING complex networks enable us to un-

derstand a wide range of real systems, ranging from
technological to biological networks systems. Protein inter-
action networks, transportation networks, and social net-
works are all examples of complex networks. Initially, net-
work studies treated networks as conventional graphs, with
nodes (vertices) representing entities or agents and edges
acting as a link between nodes. When exploring more re-
alistic and complex systems, however, many factors must
be considered, such as directed graphs [1] [2] [3], weighted
graphs [4] [5] [2], bipartite graphs [1] [2] [6], network of
networks [7], and so on.

Different forms of complex network graphs with multi-
ple subsystems can be found in the domains of life sciences,
sociology, digital humanities and many other ﬁelds [8].
Interdependent networks in which nodes from two or more
basic networks are connected via ”dependency edges,” with
any failure in the dependency edges potentially affecting
all networks connected by it. Interconnected networks and
networks of networks where nodes from different networks
are adjacent to one another, but are not dependent on each
other. Multitype networks [9] with nodes of the same or
different ”type” adjacent to each other.K-partite networks [1]
[2], in which nodes of the same colour or type cannot be
connected by an edge. Multiplex networks [10] [11] [12] [13]
are complex networks containing various types of edges,

•

Jayamohan Pillai (Corresponding author) and Geetha M are with the
Department of Computer Science, Amrita School of Computing, Amrita
Vishwa Vidyapeetham, Amritapuri, Kerala, India,
E-mail: amenp2cse20006@am.students.amrita.edu
(kanha.jay@gmail.com), geetham@am.amrita.edu,

• Ayan Chatterjee is with Network Science Institute, Northeastern Univer-

sity, Boston, MA, USA.
E-mail: chatterjee.ay@northeastern.edu

• Amitava Mukherjee is withAmrita School of Computing, Amrita Vishwa
Vidyapeetham, Amritapuri, India and College of Nanoscale Science and
Engineering, SUNY Polytechnic Institute, Albany, NY.
Email: amitavamukherjee@am.amrita.edu

with each sub network sharing at least one node with the
others. Hypergraphs [14] are a type of complex network
in which any number of nodes can be connected to any
number of edges.

Most of these complex networks can be fashioned into
a multi-layer network by considering another dimension
called layers, along with the standard graph (G = V, E)
representation of the network, using nodes which represent
an entity or an agent and edges that connect a pair of nodes.
Multi-layer visualization (G = V, E, L) can be explained
as a multi-dimensional representation of complex networks,
where V is the number of vertices, E is the edges that
connect a pair of vertices and L denotes a set of layers.
Each layer can include any subset of nodes, with nodes
in one layer connecting to nodes in another layer (inter-
layer edges) and nodes in the same layer connecting to
each other (intra-layer edges) [15]. We can generalize multi-
layer networks in to two types,
layer-disjoint networks
and node-aligned networks [15]. Layer disjoint networks
feature different set of nodes in each layer, and node-aligned
networks can have the same nodes in different layers.

There are numerous applications available for visualiz-
ing networks. Gephi is one of the major generic large-scale
network visualization and analysis tools out there [16]. But
despite being the most cited and widely used [17], gephi
lacks a proper multi-layer visualization plugin.

The proposed method is based on an existing plugin
named Network Splitter 3D [18]. The Network Splitter plu-
gin helps to vertically separate a network into Z levels/user-
deﬁned clusters. We adapt and enhance this technique to
visualize a multi-layer network by adding various function-
alities to the plugin.

2 RELATED WORKS

Visualization is a critical aspect that provides humans with
a signiﬁcant edge in identifying useful features in data or a

 
 
 
 
 
 
network. We live in a complex world where everything is
connected. Large scale data-sets are abounded in every ﬁeld
of human activity, from biology to medicine, economics and
climate research. These datasets portray massive real-world
complex networks. These networks are rich in obscured
domain-speciﬁc data which can be extracted and studied
using multi-layer visualization.

Some of the major tools for multi-layer network vi-
sualization make use of python and R-language libraries.
NetworkX [19], a python module for creating, manipulating,
and studying the structure, dynamics, and functions of
complex networks. and Matplotlib [20], a python package
that allows you to create static, animated, and interactive
visualizations are employed by several applications such
as MultinetX [21] and Py3Plex [22] to display multi-layer
networks. These applications expect some amount of pro-
gramming knowledge from the user. R-language users usu-
ally prefer the igraph library [23] for network visualization.
Muxviz [24] is a multi-layer network visualization and
analysis tool-kit for the R environment. It enables GUI-based
analysis solutions, unlike networkX-based tools. Arena3D
[25] focuses on visualizing multi-layer networks in 3D.

In this big data era, we are dealing with massive net-
works with various features and topologies with millions
of nodes and connections. The activities of visualization
and exploration have become extremely computationally
demanding. Gephi [26], Cytoscape [27] [28], and Pajek [29]
are currently the strongest candidates for large-scale net-
work visualization.

Cytoscape [28] is the most extensively used 2D network
visualisation tool in biology and health sciences. But its
layouts are highly memory and CPU hungry and it can’t
handle enormous amounts of data. Pajek [29], a Microsoft
Windows-based network visualisation program that outper-
forms every other tool in the ﬁeld in visualising millions of
nodes with billions of connections in an average computer
but it only accepts a few ﬁle formats and its lack of op-
erating system interoperability, input ﬁle format ﬂexibility,
and appealing visualisations prevent it from being used for
complex visualisations. Gephi is a free open-source network
visualization and exploration application and a better can-
didate than its counterparts when coming to visualization
of generic large-scale networks [16]. It is more memory
efﬁcient, user friendly and stable than Cytoscape and it
also supports a wide variety of input ﬁle types such as
GEXF, GDF, GML, GraphML [30], Pajek (NET), GraphViz
(DOT) [31], CSV, UCINET (DL), Tulip (TPL) [32], Netdraw
(VNA), and Excel spreadsheets. In this paper, we propose
to visualize multilayer complex networks using the Gephi
Application.

3 MULTIVIZ : MULTI-LAYER NETWORK VISUAL-
IZATION

Visualizing complex networks in a multi-layer fashion helps
in identifying the structures hidden in the network. The
network can be partitioned into layers based on their prop-
erties, each layer can be a community, a sub-network or a
group of nodes. Even multiple networks can be compared
with each other by considering each network as a layer.
For instance, by comparing a person’s various social media

2

accounts such as Facebook and Twitter, we can spot trends
in the types of people or topics they connect with and
provide answers to questions like: Are they more likely
to connect with their friends and co-workers? Or are they
more interested in politics or celebrity news? Or do they
connect with the same ”type” of people or topic across all
of their social media accounts?, Or do they use each account
for a different purposes? In this scenario, each social media
account may be thought of as a layer, with nodes and edges
that can be coloured or sized to highlight various features in
the dataset. Communities can be detected in each layer, and
nodes can be coloured or categorised in accordance with the
communities that have been identiﬁed. By visualising this
network, we can spot trends in each layer, aiding in further
network research.

Complex real world networks have many features and
dimensions, but not all of them can be represented by a con-
ventional graph. Hidden dimensions of a complex network
can be visualized through layers. Consider a network for air
travel where the nodes are the airports and the edges are
the routes that connect each airport; the size of the node de-
pends on the number of routes that pass through the airport;
the position of the nodes can be determined by the location
of each airport; the colour of the nodes can be determined
by the country to which the airport belongs; and the colour
of the edges can be determined by another aspect or feature
of the dataset. However, the dataset may also contain a wide
range of other information, such as all the planes that pass
through a speciﬁc airport and different types of aeroplanes,
among other things. We can utilise layers to display these
additional network dimensions. Each layer could represent
a speciﬁc type of aircraft (e.g., jumbo jets, mid-size jets, etc.)
or airline ( eg: Air India, Japan Airlines, United Airlines etc).
Some features like node colour, position etc will be similar
in both layers, Other features like node size will change as
each layer now shows only routes limited to an airline or
aeroplane type. Therefore, by splitting the network we can
compare different ﬂight paths or aeroplane routes. Users
can identify similar trends in different layers, connections
between two layers and so on when visualizing network in
a multilayer fashion.

Most real-world complicated networks are enormous,
necessitating the need for a special tool to visualize them.
We are utilising the Gephi application to visualize multi-
layer networks in this research. Users can import and
generate networks in Gephi. Our multi-layer visualization
plugin then allows them to perform several visualization
algorithms (force atlas2 [33], Fruchterman reingold [34],
and so on...) in a multi-layer fashion. In this section, we
showcase the MultiViz plugin and its implementation.

4 METHODOLOGY AND IMPLEMENTATION

The visualization approach using multiviz plugin is aimed
at resolving the problem of displaying complex real-world
networks with multiple layers of connectedness. The pre-
sented layout algorithm implementation is given in detail
below.

3

is selected and the following layer is placed at a constant
distance from that selected node. The distance between two
layers can be edited by the user. By default, the multilayer
network is visualized in a vertical manner by stacking one
layer on top of another. The user can option to view the
network in a horizontal plane by selecting the option in the
plugin.

Algorithm 1 Splitting network into layers
Require: nodes, edges ←nodes in the network and edges

between them

Require: isHorizontal ← horizontal or vertical

layer

placement

Require: is3D ← 3D or 2D layer visualization

selectedLayer ← user selected feature as layer
layerDistance ← user deﬁned
each node is assigned to the layer it belongs
layers ← [node.property == selectedLayer]
previousLayer = f irstLayer
for currentLayer in layers do

f arthest ← farthest node from the previous layer
biggest ← biggest node in the current layer
if previousLayer (cid:54)= currentLayer then
f y ← f arthest.y() + f arthest.size()
f y ← f y + layerDistance

else

f y ← f irstLayer.getnodes[0].y

end if
area ← biggest.size() + biggest.label ∗ nodes.size()
layerN odes ← currentLayer.getnodes()
if isHorizontal then

for node in layerN odes do

θ ← 270 ∗ π/180
x ← node.x, y ← node.y + f y
node.x ← xCosθ − ySinθ
node.y ← yCosθ + xSinθ

end for

else

for node in layerN odes do
node.y ← node.y + f y

end for

end if
if is3D then

θ ← 65 ∗ π/180
for node in layerN odes do

node.y ← node.y ∗ Cosθ − node.z ∗ Sinθ
node.z ← random ∗ 0.01

end for

end if
previousLayer = currentLayer

end for

When working with force-based layouts, it is possible to
create several random force points or layer points to attract
the nodes belonging to each layer thereby splitting the
network in to multiple layers. Each of these points will act as
a placeholder for the layers. It is seen from the experiments
that the attractive force in these points should be greater
than the default attractive force for the layer split to happen.
We haven’t integrated this algorithm in the plugin since

Fig. 1. MultiViz plugin for Gephi. The Select Layer option lets user
choose the network feature which is to be considered as the layer.
User can control the distance between two layers, number of iterations,
speed, area and gravity for force directed layouts. User can also choose
which layout algorithm to apply in each layer. After providing required
values in the layout plugin user clicks the ’Run’ button, by which the
multiviz plugin create a multilayer visualization of the network which they
have loaded in gephi

4.1 User Options

Users can either import a network into gephi or they can
create their own graph. The data laboratory of gephi pro-
vides the user with a node table and an edge table which
allows users to add, delete, duplicate and merge columns in
the tables and they can also add, edit and delete nodes and
edges in the network.

Multiviz plugin (Figure 1) allows users to choose the
distance between two layers, the graph feature which is to
be used as a layer, whether to display the graph vertically
or horizontally and the number of iterations, speed and
gravity for forced directed layouts. The plugin uses either
force directed layouts (Fruchterman-reingold, forceatlas) or
basic layouts (circle, grid and linear layouts) to visualize the
network.Option to sort the layers based on the number of
nodes in each layer is also possible with the plugin. The
split-by-level option lets user run the selected layout algo-
rithm on the whole network and then split the network into
layers thereby keeping the positions on the node similar to
that of the underlying network. This option works similar to
Network Splitter 3D [18] plugin in gephi. If the split-by-level
option is not selected, the selected layout algorithm will be
applied on each layer. When level splitter is selected the
output network can be used to view the exploded view [35]
of the network. The multilayer network visualized without
level splitter can be used to compare multiple layers as
networks to identify similar structures, trends and patterns.

4.2 Layer Splitting Algorithm

The multiviz plugin initially assigns each node to a layer,
based on the user input. The user-selected layout algorithm
is then applied on the ﬁrst layer. When the node placements
on the ﬁrst layer is completed, the farthest node on the layer

these new attractive forces greatly affect the shape of the
layer and may lead to a biased placement of the nodes.

4.3 Layout Algorithms

We have used multiple layout algorithms in our multiviz
plugin, including some basic layouts like Circle, Linear,
Random and Grid Layout, and force-directed layouts like
Fruchterman Reingold and Force Atlas. When determining
the distance between two nodes in the layout algorithms,
we took into account the size of the nodes as well as the size
of their labels to avoid overlapping.

4.3.0.1 Basic Layouts: The circle layout is a simple
layout which arranges nodes in a circle. The grid layout
arranges all the nodes in a grid format and the linear layout
arranges all nodes linearly one after the other in a single line.
In the random layout, each node is randomly placed inside a
layer. The size of the nodes is not taken into account, and
the arrangement may result in node overlap. These layouts
are available by selecting Layout -> Layout Name. When
the sort option is enabled, the layers will be stacked based
on the number of nodes within the layer, with layers with
less number of nodes placed at the bottom.

4.3.0.2 Force Directed Layouts: Multiple force-
directed layouts are implemented in this plugin. In the
Fruchterman-Reingold force-directed layout algorithm, the
nodes are considered steel rings, and the edges are the
springs that connect them. The repulsive force used is
analogous to the electrical force, and the attractive force
is comparable to the spring force. The main goal of the
algorithm is to lower the system’s energy usage by re-
locating the nodes and altering the forces between them.
The sum of the force vectors determines which direction a
node should go and when the system’s energy is reduced,
the nodes cease moving and the system ﬁnds equilibrium.
The Force Atlas layout algorithm is another force-directed
algorithm used here. It is a spatial layout algorithm for
real-world networks. In this algorithm, the quality of layout
is given more importance than the speed with which the
layout is computed. ForceAtlas2 is an updated force atlas
layout. It is the default layout algorithm for Gephi. It in-
corporates several methodologies such as the Barnes Hut
simulation, degree-dependent repulsive force, and local and
global adaptive temperatures to improve on the force atlas
methodology.

5 RESULTS

Multiple sorts of relationships between system elements can
add complexity to real-world networks. In the ﬁeld of social
network analysis multiple forms of social connection be-
tween people can be represented by multiple types of links.
To accommodate the presence of more than one type of
link, a multi-layer network G = (V, E, L) can be employed,
where L is a set of layers (or dimensions), each of which
represents a distinct type of link.

In this study, we have developed a plugin tool for
the Gephi application, to visualize a given network in a
multi-layer fashion to help researchers take advantage of
the multi-layer properties of complex networks in their
research.

4

Algorithm 2 Complete Multilayer Random Layout Algo-
rithm
Require: nodes, edges ←nodes in the network and edges

between them

Require: column ← user selected layer
Require: layer distance ← distance between layers

layers ← [node.property == column] nodes are as-
signed to the layer it belongs to.
previous layer ← f irst layer
for layer in layers do

top ← farthest node in the previous layer
big ← biggest node in the current layer
if layer (cid:54)= f irst layer then

adding some distance between two layers
y ← top.y() + top.size() + layer distance

else

y ← n.pos.y

end if
node.y ← y
establishing area of a layer for placement of nodes
area ← big.size() + big.label ∗ nodes.size()
for each node n do

x ← n.pos.x + (−area/2 + a × random())
y ← n.pos.y + (−area/2 + a × random())
node.set(x, y)

end for
previous layer ← layer

end for

To demonstrate the ability of MultiViz plugin to visual-
ize layered networks, we consider three different multilayer
networks. A complex network that shows the types of ge-
netic interactions for Candida Albicans in Biological General
Repository for Interaction Datasets (BioGRID [36]) acquired
from manliodedomenico.com [37] [38]. Candida Albicans is
a common pathogen found in human gut ﬂora. BioGrid is a
public database that archives and disseminates genetic and
protein interaction data from humans and model organisms.
The data used is from BioGRID 3.2.108 (updated 1 Jan 2014).
Seven layers considered in this network: (a) Additive ge-
netic interaction deﬁned by inequality, (b) Synthetic genetic
interaction deﬁned by inequality, (c) Physical association,
(d) Direct interaction, (e) Suppressive genetic interaction
deﬁned by inequality, (f) Association, (g) Colocalization. The
Diseasome [39] [40] Network is a multilayer network that
represent genes and symptom relationship that is visualized
using multiviz plugin in this paper. Usually the diseases that
share genes tend share similar symptoms. Genes associated
with similar disorders show both a higher likelihood of
physical interactions between their products and higher
expression proﬁling similarity for their transcripts, sup-
porting the existence of distinct disease-speciﬁc functional
modules. The third network which we have visualized is
the London Multiplex Transport Network [41]. The data is
from 2013 released by the website of transport for London
(https://www.tﬂ.gov.uk/). The nodes is the networks are
train stations in London and edges are the existing routes
between those stations. Three types of train stations are con-
sidered :Underground, Overground and DLR. The datasets
used here are acquired from manliodomenico.com.

5

(a) Candida Albicans Genetic Interaction Network

(b) Multilayer Fruchterman-Reingold visualization of Candida Albicans ge-
netic interaction network

(c) Multilayer ForceAtlas Candida Albicans genetic interaction network.

(d) Multilayer Circular Candida Albicans Genetic Interaction Network

Fig. 2. The above networks, Figure 2a, 2b and 2c,shows genetic interaction network of Candida Albicans, a most common fungal pathogen. Figure
2b and 2c shows the candida network in a multilayer fashion, the former used Fruchterman-reingold layout algorithm to arrange nodes and edges
in each layer and the latter used forceAtlas layout for the visualization. Each layer can be identiﬁed with the color of the edges or links. The size of
the nodes depends on the average degree of the node

MEP2NPR1CaJ7_0018ESS1RPB7ESA1SAS2TSA1TUP1FHL1CaO19.4282TBF1RAP1CBK1ACT1ADE4ADH1CaO19.409ATP3CCC1CCT7CDH1ENO1GPD2HXT63HXT61HSP60ILV3CaO19.8955MAF1MET2CMP65NSP1PGK1POL5RGD2RPL15SFL1SLK19SMI1SNZ99SSD1TRM1CaO19.1354VPS13OCH1TRX1HSP90HOS2CKB1CaO19.7381CKB2CaO19.5664YAP3CaO19.223LRG1CaO19.12893CaO19.12215CaO19.658CaO19.10999CKA1CaO19.9331IRE1CaO19.1141HAL93CaO19.1907CaO19.431SLA2CaO19.4243ECM22APL5CaO19.4139CaO19.1795CaO19.467CaO19.1826CaO19.2054MIG1MIG2ROD1DIE2HST7AAT22DAL80RTG1PTP1CaO19.1276BMH1CaO19.9115CaO19.4776ARO80CaO19.5412CaO19.3751YCK21CDC10RIM15CaO19.10169PPR1ARG81CaO19.12598SSN8SNT1DOA4WSC3CPH1STB5ADA2HOC1CaO19.11598NGG1SPT7PDE2VPS16CDR1SEF1CaO19.6845CaO19.4529CaO19.166LPG20CEK2TEC1TAF14WRY6CaO19.11450CaO19.6970PEX14HYZ99CaO19.2647HAP5NUP84AZF1CaO19.6182PZF1THI20RAD18CaO19.1694RGT1CaO19.695RIC1CaO19.7410CaO19.3678CaO19.7576CMK1SSN3CaO19.4474PBS2ECM32ZFU1CaO19.9326RTG3SNF5VPS15CaO19.3876PNA1CaO19.2808DAL81STB4KNS1CaO19.861CZF1CaO19.12307IME4SYG1CaO19.5571CaO19.7194PAN3CaO19.4252HSL1PSK2HOG1PKC1LPF1CaO19.4568CaO19.1497CaO19.2745CWC24CaO19.3869CaO19.422CaO19.723SPT3UBP14CaO19.13396CaO19.1729TFC3BUB1ECM25SUN4ECM17CaO19.1178GUA1COG3GCD14CaO19.4084PKH1KIN1MKC1SIP3CaO19.5253STE11MKK2SNF7MNN9TPS1CaO19.59YNG2VPS28CNA1UBC1CaO19.7693CaO19.5651CaO19.4981SRB8CaO19.3744CTA4CaO19.681TEL1PIB1HAL92CFP1RPH2ALP13CaO19.4214LIP6ARR3CaO19.5023CaO19.411PRR1KIN3LEU3RIM11CaO19.2508CaO19.6763EAP1UBC13CaO19.5337MMS2CaO19.13655ADR1PHO23CaO19.1277ECM38CaO19.14215CaO19.1969CaO19.2476CaO19.251HWP2HYR1PHR3SPR1CaO19.2296CaO19.2336ECM14BEM2CAP1SIP5CaO19.3088CaO19.2612CaO19.1496CaO19.7025SNT2CaO19.1219FMO3ALS7CaO19.1331GAP1CaO19.1341VPS34HIT1VTI1FRQ1TAF11PCL5GCN4NOP1SIK1UTP21NOP58CaJ7_0484CaO19.1633UTP5CaO19.11092CaO19.14002RPL3CaO19.5430PWP2NAN1UTP8DIP2CaO19.5225RRP9RPL16CaO19.11744CaO19.2127FAR1ERK1GNA1CaO19.7539SNF4CLN3CDC28SIN3OPI1CaO19.5061RAS1CYR1SUA71SEC20TIP20CRK1CDC37CaO19.3192INP51CaO19.6953CYC8CaO19.6734VMA7CET1CEG1VRP1LAS17MYO5SNF1CaO19.4997CDC4GPH1DBP8MRPL40HMT1THR1CaO19.3689CaO19.425GPA2GPR1CGR1SSE1CaO19.610CaO19.1093BUD6MOB2RPP1ARPP2BRPP1BCaO19.6403CDC11SHS1CaO19.4378RFA2CaO19.3685MED8SSN2Gal11RGR1CaO19.1808SIN4CaO19.826CaO19.4091CaO19.1878MED7MED6CaO19.7165CaO19.4415SRB7CaJ7_0143NUT2SOH1SRB6CaO19.7663SMC46

(a) Network of Disorders and Disease Genes

(b) Multilayer Fruchterman-Reingold Disorder-Gene Asso-
ciation Network with Level-Split

(c) Multilayer Fruchterman-Reingold Disorder-Gene Associ-
ation Network without Level-Split

(d) Multilayer Fruchterman-Reingold Disorder-Gene Asso-
ciation Network (Vertical) with Level-Split

Fig. 3. The above Figures ( 3a, 3b, 3c and 3d) shows Diseasome [40], a network of disorders and disease genes linked by the known disorder–gene
associations, indicating the common genetic origin of many diseases. Figures( 3b, 3c and 3d) shows Diseasome network in a multilayer fashion
using Fruchterman reingold layout algorithm. In Figures 3b and 3c, the layers are stacked horizontally where each layer is place one after the
other and each layer is displayed in a 3D plane. In Figure 3d, layers are stacked on top of each other. The color of nodes shows the different types
of disorders. The ﬁrst layer shows all disorders and the second layer shows the corresponding disease genes

7

(a) London Transportation Network

(b) Multilayer ForceAtlas Visualization of London Trans-
portation Network

(c) Multilayer ForceAtlas Visualization of London Trans-
portation Network

(d) Multilayer Circular Layout Visualization of London
Transportation Network

Fig. 4. Figures 4a and 4b shows London multiplex transportation network [41], collected in 2013. Nodes are the train stations in London and
edges are the existing route between stations. Stations on the underground, overground, and DLR (Docklands Light Railway) are considered in this
network. This multiplex network makes use of three layers which are, the network of stations connected by the Tube, network of stations connected
by Overground, and network of stations connected by DLR. The node size indicates the number of routes pass through each station and edge color
indicates type of transportation

6 CONCLUSION AND FUTURE WORK

In the ﬁelds of social network analysis [42] [43], economics,
urban and international transportation [44] [45] [41], ecology
[46] [47] [48] [49], psychology [50] [51], medicine, biology
[38], commerce, climatology, physics [52], computational
neuroscience [53] [54] [55], operations management, and
ﬁnance, increasingly sophisticated attempts to model real-
world systems as multidimensional networks have yielded
valuable insight. By visualizing the complex networks in
a multi-layer manner, users can further research into vari-
ous properties of complex networks including multi-layer
neighbours (all nodes connected to a node across layers),
multi-layer path length [56], dimension relevance (under-
stand how important a particular layer is over the others for
the connectivity of a node), network of layers [42] (layers
might be interconnected in such a way that their structure
can be described by a network) community discovery [57]
[58] [59],clustering coefﬁcients [43] [60] shortest path discov-
ery [61], information and disease spread through multi-layer
networks [62] and so on.

By employing multi-dimensional/ multi-line multi-layer
networks where each layer is of multiple dimensions or each
layer has different sub-layers, more data can be visualized
and researchers can take advantage of enhanced resolution
in real-world data sets and exploit the current availability of
big data to extract the ultimate and optimal representation
of the underlying complex systems and mechanisms. Many
other visualization techniques like kamada kawai [63], Yifan
Hu [64], OpenOrd [65], GEM [66] will be implemented in the
plugin in future.

8

[7] D’Agostino, G., Scala, A.: Networks of Networks: the Last Frontier

of Complexity vol. 340. Springer, (2014)

[8] Mcgee, F., Ghoniem, M., Melanc¸on, G., Otjacques, B., Pinaud,
B.: The state of the art in multilayer network visualization. In:
Computer Graphics Forum, vol. 38, pp. 125–149 (2019). Wiley
Online Library

[9] Cai, D., Shao, Z., He, X., Yan, X., Han, J.: Community mining from
multi-relational networks. In: European Conference on Principles
of Data Mining and Knowledge Discovery, pp. 445–452 (2005).
Springer

[10] Nicosia, V., Bianconi, G., Latora, V., Barthelemy, M.: Growing

multiplex networks. Physical review letters 111(5), 058701 (2013)

[11] Verbrugge, L.M.: Multiplexity in adult friendships. Social Forces

57(4), 1286–1309 (1979)

[12] Bianconi, G.: Statistical mechanics of multiplex networks: Entropy

and overlap. Physical Review E 87(6), 062806 (2013)

[13] Cellai, D., L’opez, E., Zhou, J., Gleeson, J.P., Bianconi, G.: Percola-
tion in multiplex networks with overlap. Physical Review E 88(5),
052811 (2013)

[14] Berge, C.: Hypergraphs: Combinatorics of Finite Sets vol. 45.

Elsevier, (1984)

[15] Kivel¨a, M., Arenas, A., Barthelemy, M., Gleeson, J.P., Moreno, Y.,
Porter, M.A.: Multilayer networks. Journal of complex networks
2(3), 203–271 (2014)

[16] Pavlopoulos, G.A., Paez-Espino, D., Kyrpides, N.C., Iliopoulos,
I.: Empirical comparison of visualization tools for larger-scale
network analysis. Advances in bioinformatics 2017 (2017)

J.: The Gephi Paper Gets

[17] Mathieu,
of
12/the-gephi-paper-gets-the-icwsm-test-of-time-award/
comment-page-1/

ICWSM Test
https://gephi.wordpress.com/2019/06/

Award.

Time

the

[18] Alexandre, B.: Network Splitter 3D (2014)
[19] Hagberg, A., Swart, P., S Chult, D.: Exploring network structure,
dynamics, and function using networkx. Technical report, Los
Alamos National Lab.(LANL), Los Alamos, NM (United States)
(2008)

[20] Hunter,

J.D.: Matplotlib: A 2d

environment.
Computing in Science & Engineering 9(3), 90–95 (2007).
doi:10.1109/MCSE.2007.55

graphics

APPENDIX
ABBREVATIONS

MLN - Multi-layer Networks
GDF - Graph Data Format
GML - Graph Modeling Language
DOT - GraphViz File Format
CSV - Comma Separated Files
TPL - Tulip Format
JSON - Javascript Object Notation
GEXF - Graph Exchange XML Format
SIF - Simple Interaction File Format
NNF - Nested Network Format
XGMML - Extensible Graph Markup and Modelling Lan-
guage
SBML - Systems Biology Markup Language

REFERENCES

[1] Barab’asi, A.-L., Albert, R.: Emergence of scaling in random net-

works. science 286(5439), 509–512 (1999)

[2] Clauset, A., Shalizi, C.R., Newman, M.E.: Power-law distributions

in empirical data. SIAM review 51(4), 661–703 (2009)

[3] Bang-Jensen, J., Gutin, G.Z.: Digraphs: Theory, Algorithms and

Applications. Springer, (2008)

[4] Newman, M.E.: Analysis of weighted networks. Physical review

E 70(5), 056131 (2004)

[5] Barrat, A., Barthelemy, M., Pastor-Satorras, R., Vespignani, A.: The
architecture of complex weighted networks. Proceedings of the
national academy of sciences 101(11), 3747–3752 (2004)

[6] Breiger, R.L.: The duality of persons and groups. Social forces

53(2), 181–190 (1974)

[21] Kouvaris Nikos, K.M.: multiNetX (2015)
[22]

ˇSkrlj, B., Kralj, J., Lavraˇc, N.: Py3plex: a library for scalable
multilayer network analysis and visualization. In: International
Conference on Complex Networks and Their Applications, pp.
757–768 (2018). Springer

[23] Csardi, G., Nepusz, T., et al.: The igraph software package for
complex network research. InterJournal, complex systems 1695(5),
1–9 (2006)

[24] De Domenico, M., Porter, M.A., Arenas, A.: Muxviz: a tool for mul-
tilayer analysis and visualization of networks. Journal of Complex
Networks 3(2), 159–176 (2015)

[25] Pavlopoulos, G.A., O’Donoghue, S.I., Satagopam, V.P., Soldatos,
T.G., Paﬁlis, E., Schneider, R.: Arena3d: visualization of biological
networks in 3d. BMC systems biology 2(1), 1–7 (2008)

[26] Bastian, M., Heymann, S., Jacomy, M.: Gephi: an open source soft-
ware for exploring and manipulating networks. In: Proceedings of
the International AAAI Conference on Web and Social Media, vol.
3, pp. 361–362 (2009)

[27] Shannon, P., Markiel, A., Ozier, O., Baliga, N.S., Wang, J.T.,
Ramage, D., Amin, N., Schwikowski, B., Ideker, T.: Cytoscape:
a software environment for integrated models of biomolecular
interaction networks. Genome research 13(11), 2498–2504 (2003)

[28] Smoot, M.E., Ono, K., Ruscheinski, J., Wang, P.-L., Ideker, T.:
Cytoscape 2.8: new features for data integration and network
visualization. Bioinformatics 27(3), 431–432 (2011)

[29] Batagelj, V., Mrvar, A.: Pajek-analysis and visualization of large
networks. In: Graph Drawing Software, pp. 77–103. Springer,
(2004)

[30] Brandes, U., Eiglsperger, M., Lerner, J., Pich, C.: Graph markup

language (GraphML) (2013)

[31] Ellson, J., Gansner, E., Koutsoﬁos, L., North, S.C., Woodhull,
G.: Graphviz-open source graph drawing tools. In: International
Symposium on Graph Drawing, pp. 483–484 (2001). Springer
[32] Auber, D., Archambault, D., Bourqui, R., Delest, M., Dubois, J.,
Lambert, A., Mary, P., Mathiaut, M., Melanc¸on, G., Pinaud, B., et
al.: TULIP 5. Springer (2017)

[33] Jacomy, M., Venturini, T., Heymann, S., Bastian, M.: Forceatlas2, a
continuous graph layout algorithm for handy network visualiza-
tion designed for the gephi software. PloS one 9(6), 98679 (2014)

[34] Fruchterman, T.M., Reingold, E.M.: Graph drawing by force-
directed placement. Software: Practice and experience 21(11),
1129–1164 (1991)

[35] Wikipedia: Exploded-view drawing.

In Wikipedia. https
//en.wikipedia.org/wiki/Exploded − view drawing (2022)
[36] Stark, C., Breitkreutz, B.-J., Reguly, T., Boucher, L., Breitkreutz, A.,
Tyers, M.: Biogrid: a general repository for interaction datasets.
Nucleic acids research 34(suppl 1), 535–539 (2006)

:

[37] De Domenico, M.: CANDIDA MULTIPLEX GPI NETWORK
[38] De Domenico, M., Nicosia, V., Arenas, A., Latora, V.: Structural
reducibility of multilayer networks. Nature communications 6(1),
1–9 (2015)

[39] Halu, A. De Domenico, M. Arenas, A. Sharma, A. The multiplex
network of human diseases. NPJ systems biology and applications
5(15), (2019)

[40] Goh, K.-I., Cusick, M.E., Valle, D., Childs, B., Vidal, M., Barab´asi,
A.-L.: The human disease network. Proceedings of the National
Academy of Sciences 104(21), 8685–8690 (2007)

[41] De Domenico, M., Sol´e-Ribalta, A., G ´omez, S., Arenas, A.: Navi-
gability of interconnected networks under random failures. Pro-
ceedings of the National Academy of Sciences 111(23), 8351–8356
(2014)

[42] De Domenico, M., Sol´e-Ribalta, A., Cozzo, E., Kivel¨a, M., Moreno,
Y., Porter, M.A., G ´omez, S., Arenas, A.: Mathematical formulation
of multilayer networks. Physical Review X 3(4), 041022 (2013)
[43] Battiston, F., Nicosia, V., Latora, V.: Structural measures for multi-

plex networks. Physical Review E 89(3), 032804 (2014)

[44] Cardillo, A., G ´omez-Gardenes, J., Zanin, M., Romance, M., Papo,
D., Pozo, F.d., Boccaletti, S.: Emergence of network features from
multiplexity. Scientiﬁc reports 3(1), 1–6 (2013)

[45] Gallotti, R., Barthelemy, M.: Anatomy and efﬁciency of urban

multimodal mobility. Scientiﬁc reports 4(1), 1–9 (2014)

[46] Stella, M., Andreazzi, C.S., Selakovic, S., Goudarzi, A., Antonioni,
A.: Parasite spreading in spatial ecological multiplex networks.
Journal of Complex Networks 5(3), 486–511 (2017)

[47] Pilosof, S., Porter, M.A., Pascual, M., K´eﬁ, S.: The multilayer nature
of ecological networks. Nature Ecology & Evolution 1(4), 1–9
(2017)

[48] Tim ´oteo, S., Correia, M., Rodr´ıguez-Echeverr´ıa, S., Freitas, H.,
Heleno, R.: Multilayer networks reveal the spatial structure of
seed-dispersal interactions across the great rift landscapes. Nature
Communications 9(1), 1–11 (2018)

[49] Costa, J.M., Ramos, J.A., Tim ´oteo, S., da Silva, L.P., Ceia, R.S., He-
leno, R.H.: Species activity promote the stability of fruit-frugivore
interactions across a ﬁve-year multilayer network. BioRxiv, 421941
(2018)

[50] Fiori, K.L., Smith, J., Antonucci, T.C.: Social network types among
older adults: A multidimensional approach. The Journals of
Gerontology Series B: Psychological Sciences and Social Sciences
62(6), 322–330 (2007)

[51] Stella, M., Beckage, N.M., Brede, M.: Multiplex lexical networks
reveal patterns in early word acquisition in children. Scientiﬁc
reports 7(1), 1–10 (2017)

[52] De Domenico, M., Granell, C., Porter, M.A., Arenas, A.: The
physics of spreading processes in multilayer networks. Nature
Physics 12(10), 901–906 (2016)

[53] Timme, N., Ito, S., Myroshnychenko, M., Yeh, F.-C., Hiolski, E.,
Hottowy, P., Beggs, J.M.: Multiplex networks of cortical and hip-
pocampal neurons revealed at different timescales. PloS one 9(12),
115764 (2014)

[54] De Domenico, M., Sasai, S., Arenas, A.: Mapping multiplex hubs
in human functional brain networks. Frontiers in neuroscience 10,
326 (2016)

[55] Battiston, F., Nicosia, V., Chavez, M., Latora, V.: Multilayer motif
analysis of brain networks. Chaos: An Interdisciplinary Journal of
Nonlinear Science 27(4), 047404 (2017)

[56] Magnani, M., Monreale, A., Rossetti, G., Giannotti, F.: On multidi-
mensional network measures. In: SEBD, pp. 215–222 (2013)
[57] Mucha, P.J., Richardson, T., Macon, K., Porter, M.A., Onnela, J.-P.:
Community structure in time-dependent, multiscale, and multi-
plex networks. science 328(5980), 876–878 (2010)

[58] De Domenico, M., Lancichinetti, A., Arenas, A., Rosvall, M.: Iden-
tifying modular ﬂows on multilayer networks reveals highly over-

9

lapping organization in interconnected systems. Physical Review
X 5(1), 011027 (2015)

[59] Berlingerio, M., Pinelli, F., Calabrese, F.: Abacus: frequent pat-
tern mining-based community discovery in multidimensional net-
works. Data Mining and Knowledge Discovery 27(3), 294–320
(2013)

[60] Cozzo, E., Kivel¨a, M., De Domenico, M., Sol´e-Ribalta, A., Arenas,
A., G ´omez, S., Porter, M.A., Moreno, Y.: Structure of triadic rela-
tions in multiplex networks. New Journal of Physics 17(7), 073029
(2015)

[61] Br ´odka, P., Stawiak, P., Kazienko, P.: Shortest path discovery in the
multi-layered social network. In: 2011 International Conference on
Advances in Social Networks Analysis and Mining, pp. 497–501
(2011). IEEE

[62] Granell, C., G ´omez, S., Arenas, A.: Dynamical interplay between
awareness and epidemic spreading in multiplex networks. Physi-
cal review letters 111(12), 128701 (2013)

[63] Kamada, T., Kawai, S., et al.: An algorithm for drawing gen-
eral undirected graphs. Information processing letters 31(1), 7–15
(1989)

[64] Hu, Y.: Efﬁcient, high-quality force-directed graph drawing. Math-

ematica journal 10(1), 37–71 (2005)

[65] Martin, S., Brown, W.M., Klavans, R., Boyack, K.W.: Openord:
an open-source toolbox for large graph layout. In: Visualization
and Data Analysis 2011, vol. 7868, p. 786806 (2011). International
Society for Optics and Photonics

[66] Frick, A., Ludwig, A., Mehldau, H.: A fast adaptive layout al-
gorithm for undirected graphs (extended abstract and system
demonstration). In: International Symposium on Graph Drawing,
pp. 388–403 (1994). Springer

Jayamohan Pillai is currently a master’s student in Computer Sci-
ence and Engineering of Amrita School of Computing, Amrita Vishwa
Vidyapeetham, Amritapuri, India. He got his B.E in Computer Science
and Engineering from Anna University, Chennai, India. His research
interests are in network science, machine learning , learning analytics
and artiﬁcial intelligence.

Ayan Chatterjee is a doctoral student advised by Professor Tina Eliassi-
Rad. His interests are in graph machine learning, speciﬁcally link pre-
diction tasks. He got his B.E in Electronics and Telecommunication
Engineering from Jadavpur University, India and a Master’s degree in
Electronic Systems Engineering from the Indian Institute of Science. He
worked with NVIDIA Graphics in developing GPU architectures for AI
and Video Processing.

Geetha M. received her B.Tech degree in Computer Science and En-
gineering from Kerala University, India in 2003, M.Tech degree in Com-
puter Vision and Image Processing from Amrita University, Coimbatore
India in 2005. She has been involved in teaching and research since
2006 and is currently with the faculty of the department of Computer
Science and Engineering, Amrita Vishwa Vidyapeetham, Amrita Uni-
versity, Amritapuri, India. Her current research areas include computer
vision, deep learning, video analytics, and brain network analysis. She
is the receipient of a project funt from MeitY for providing Sign Language
Accessibility to deaf community at the E-Governance Services of Govt.
of India. She also has a patent published in the area of Sign Language
Recognition.

Amitava Mukherjee is a Professor at School of Computing, Amrita
Vishwa Vidyapeetham, Amritapuri, India. Dr. Mukherjee is a Courtesy
Adjunct Professor at College of Nanoscale Science and Engineering,
SUNY Polytechnic Institute, Albany, NY since Aug, 2021. He got his
Ph.D. in Computer Science and Engineering from Jadavpur University
Kolkata, India. He has served as Dean at the School of Engineering
and Technology and Head of the Department of Computer Science and
Engineering at Adamas University, Barasat, Kolkata, India, as well as a
visiting Professor on sabbatical at the University of New South Wales,
Sydney and Royal Institute of Technology, Stockholm. He has extensive
experience in realizing computational solutions to interdisciplinary ﬁelds
of engineering, telecommunications, and biomedicine as well as global
strategy implementation. He has worked as as senior manager of IBM
India and principal consultant for PWC India.

