Sustainability in Software Architecture:
A Systematic Mapping Study

Vasilios Andrikopoulos
University of Groningen
Groningen, the Netherlands
v.andrikopoulos@rug.nl

Rares-Dorian Boza
University of Groningen
Groningen, the Netherlands
r.d.boza@student.rug.nl

Carlos Perales
Vrije Universiteit Amsterdam
Amsterdam, the Netherlands
c.peraleslinan@student.vu.nl

Patricia Lago
Vrije Universiteit Amsterdam
Amsterdam, the Netherlands
p.lago@vu.nl

2
2
0
2

r
p
A
5
2

]
E
S
.
s
c
[

1
v
7
5
6
1
1
.
4
0
2
2
:
v
i
X
r
a

Abstract—Sustainability is an increasingly-studied topic in
software engineering in general, and in software architecture
in particular. There are already a number of secondary studies
addressing sustainability in software engineering, but no such
study focusing explicitly on software architecture. This work aims
to ﬁll this gap by conducting a systematic mapping study on
the intersection between sustainability and software architecture
research with the intention of (i) reﬂecting on the current state of
the art, and (ii) identifying the needs for further research. Our
results show that, overall, existing works have focused dispropor-
tionately on speciﬁc aspects of sustainability, and in particular
on the most technical and “inward facing” ones. This comes
at the expense of the holistic perspective required to address a
multi-faceted concern such as sustainability. Furthermore, more
reﬂection-oriented research works, and better coverage of the
activities in the architecting life cycle are required to further the
maturity of the area. Based on our ﬁndings we then propose a
research agenda for sustainability-aware software architecture.

I. INTRODUCTION

The developments of the last decades have generated a
raising awareness of sustainability in an increasingly digital
world run by software systems [1], [2]. With software systems
being deeply embedded in most sectors of our society, a unique
opportunity is being offered for a shared intervention across
sectors towards a more sustainable world [3]. Reﬂecting this
need, in the recent years sustainability has been acknowledged
as an essential software quality across four dimensions [4]:
a technical one referring to the ability of a software system
to evolve and remain used over a long period of time, an
economic one concerned with the preservation and creation of
capital and value, an environmental one aiming to minimize
the impact of the system on natural resources, and a social
one focusing on the continuity of communities using it.

The state of the art in sustainable software engineering in
general has evolved signiﬁcantly in the last couple of decades,
starting with a focus on ‘green’ software, that is, focusing
on the environmental dimension, e.g. [5], [6], [7], [8], but
expanding also to the other ones, e.g. [9], [10], [11]. A recent
survey of sustainable software research based on the 5Ws
formula (why, when, who, where, and what) [12], shows that
this is a very active and collaborative area of research, with
a good level of maturity. The research community, or more
precisely its intersection with that of software engineering, is
also mapped out in terms of major outlets and collaborative
efforts by the surveys of Calero and Piattini [13] and Lago and

Penzenstadler [14], indicating the existence of active research
groups in the area.

Despite however the availability of secondary studies such
as the ones mentioned above discussing sustainability in
software engineering, there are fewer works describing the
state of the art in the intersection between sustainability and
software architecture. Focusing speciﬁcally on architecture
is essential since architecting practices allow us to reason
and evaluate sustainability as a system quality throughout the
system’s lifecycle. This is especially important since there is
still a lot of ground to be covered with respect to establishing
and exploiting the relation between software architecture and
sustainability as a software quality [15].

The secondary studies that do exist on the topic have
their own limitations. The survey by Venters et al. [15], for
example, provides a good overview of this area but it is not
conducted systematically. Some surveys either focus on tech-
nical sustainability, e.g. the one by Koziolek on sustainability
evaluation metrics for software architectures [16], or the ones
on the sustainability of reference architectures [17] and their
description [18]. Verdecchia et al. [19] discuss technical in
combination with economic sustainability in the context of
architectural technical debt, while Volpato et al. [20] and Grua
et al. [21] look into the implications of software architecture on
the social dimension. No systematic survey so far, to the extent
of our knowledge, attempts to organize the state of the art of
sustainability in software architecture across all sustainability
dimensions and architecting activities. This is a need that this
work aims to address by mapping out the research efforts in
the ﬁeld and thus identifying areas of future research. For this
purpose, in this paper we report on our systematic mapping
study on this topic, following well-established guidelines [22],
[23] for the study design, execution, and reporting.

As a consequence, the rest of this paper is organized as
follows. Section II discusses the methodological aspects of this
study and presents the actions we took as part of conducting
it. Section III summarizes the ﬁndings of the study, aiming
to answer the research questions we have identiﬁed in the
process. Section IV synthesizes these ﬁndings into a research
agenda for sustainability-aware software architecture for the
coming years. Finally, Section V discusses the threats to the
validity of this work, and Section VI concludes it with a
summary of its main points.

 
 
 
 
 
 
Fig. 1. The study protocol as a ﬂowchart.

II. STUDY DESIGN

A. Methodology

To conduct our mapping study in a systematic manner, we
are following the guidelines of Petersen et al. [22], [23] for
this type of studies in software engineering. The systematic
mapping process prescribed by these guidelines can be roughly
broken down into the following phases:

1) Deﬁnition of research questions to scope the study.
2) Searching and ﬁltering of relevant papers through well

deﬁned inclusion and exclusion criteria.

3) Classiﬁcation of the selected papers through keywording

of the abstracts.

4) Extraction of relevant data and preparation of the map.

For the purposes of our study we have adopted this process
with some amendments as shown in Fig. 1. More speciﬁcally,
keyword extraction from abstracts alone proved insufﬁcient
in the majority of cases to properly characterize the primary
studies, pushing their characterization to the next step (data
extraction). The same insufﬁciency also applied in many cases
to the ﬁltering of papers, requiring the reading of the whole
paper to control for some of the inclusion/exclusion criteria we
deﬁned. We therefore found more natural to ﬁnalize the ﬁlter-
ing of the papers together with doing data extraction. This last
stage of ﬁltering was performed manually and complements
a previous stage of automated ﬁltering for criteria that could
be checked through scripting. Furthermore, and as a result of
doing ﬁltering and extraction together, we also had to push
snowballing [24] for locating additional relevant studies at a
later stage, doing data extraction separately for those studies.
In the following we discuss each of these phases in detail.

B. Deﬁnition of Research Questions

As the goal of this work is to provide an overview of the
research on sustainability in software architecture we pose
questions from three distinct perspectives. First, we ask what
are the overall publication trends in this research area in the
last years, and how mature is the related literature. Second,
from a software architecture perspective, we are interested in
which activities of the architecting life cycle [25], [26] are
taken into consideration when sustainability is of concern for
the systems under study. Third, from a sustainability research
perspective, we want to know which of the dimensions of
sustainability as a software quality [4] are discussed in the
literature.

These perspectives translate into the following research

questions:

RQ1 What are the existing approaches related to sus-
tainability in the ﬁeld of software architecture as
reﬂected by the literature?

RQ2 To what extent are the activities of the architecting

life cycle covered by these approaches?

RQ3 To what extent are the dimensions of sustainability

covered by the same approaches?

C. Search Process

As per the recommendation of Petersen et al. [23], we focus
only on the Population and Intervention dimensions of the
PICO strategy [27] for identifying keywords and formulating
search strings from the research questions. More speciﬁcally,
as the intended Population of our study we deﬁne “all primary
studies discussing the architecture of sustainable software
systems and relevant activities” where an Intervention of “one
or more dimensions of sustainability as a software quality
is the target of the presented approach” takes place. Based
on this deﬁnition and after extensive piloting to calibrate the
efﬁcacy of our search we decided on using the query:
"software architect*" AND sustainab* AND
(requirements OR design OR implementation OR
evaluation OR decision)

which allows searching for publications using variations of
the main concepts (sustainable and sustainability, and software
architecture, architecting, and architects) in combination with
activities that are indicative of actually discussing software
architecture (e.g. eliciting requirements, system design, etc.)
Five online bibliographical sources were used for the search
as shown in Table I. The query was adjusted accordingly
for each source based on the syntax and limitations of their
respective search engines. The search took place in June
2021. It was additionally constrained to publications after 2000
since previous secondary studies on sustainability in software
engineering [9], [11], [12] report ﬁndings only after this year
anyway. Table I shows the result of this search per source, for
a total of 373 candidate publications identiﬁed by our search.

TABLE I
SEARCH RESULTS FOR THE DEFINED QUERY PER ONLINE
BIBLIOGRAPHICAL SOURCE

Source

#Publications

ACM Digital Library
IEEE eXplore
Science Direct
Scopus
Wiley Online Library

Total:

22
138
20
187
6

373

D. Publications Filtering

In alignment with our research questions we deﬁned the

following inclusion criteria for this study:
IC1 Publication focuses on software architecture.
IC2 Publication is related to one or more sustainability

dimensions.

IC3 Publication is peer reviewed (journal articles, conference

and workshop proceedings, magazine articles).

A publication was excluded from our study if one or more

of the following criteria were satisﬁed:
EC1 Publication is not published in English.
EC2 The publication full text is not publicly accessible.
EC3 Publication is a duplicate of another study.
EC4 Publication is a secondary study.
Both the last inclusion and the ﬁrst three exclusion criteria
can be checked quite easily automatically. For this purpose
we created a set of scripts that took the search result lists
from the previous step as an input, retrieved all references
and publication metadata in a uniﬁed format, merged the lists
and removed duplicates, and checked the language and type of
the publication based on its bibliographical data. Publications
that could not be automatically retrieved were ﬂagged for
possible manual retrieval, with 71 publications being found to
be completely irretrievable for various reasons. This resulted
in a set of 220 publications after this automated ﬁltering for
further processing as shown in Fig. 1.

The last exclusion criterion (EC4), however, and the ﬁrst two
inclusion criteria (IC1 and IC2) required reading the whole
publication in order to decide if it was admissible to the
study. Especially the latter two criteria proved quite elusive and
needed further deliberations for their application. Ultimately,
we consider that a publication focuses on software architecture
if we are able to identify which architectural activities it
concerns itself with. This is irrespective of whether the work
in question is explicitly contributing to the study of software
architectures in general, or discusses a reusable architecting
approach to a speciﬁc problem across a whole domain. The
relation to sustainability, on the other hand, is established
through the primary study providing sufﬁcient details on
how its content relates to one or more of the sustainability
dimensions as they pertain to software systems. With respect
to the latter point we found quite common for publications
to use sustainability as a keyword in their opening and/or
closing sections without however providing any connection to
the concept throughout their main body. As a result we ended
up removing quite a lot of publications from the ﬁnal sample
due to their superﬁcial relation with sustainability. Out of the
220 publications from the automated ﬁltering step, 50 were
selected for inclusion in our study through this process.

Since both the identiﬁcation of the discussed sustainability
dimension(s) and the architecting phase(s) is part of the data
extraction, as will be discussed further in the following, we
ended up doing this second stage of ﬁltering together with the
data extraction one. In order to minimize the introduced bias,
two co-authors worked on these two tasks independently but

TABLE II
DATA EXTRACTION FORM USED IN THIS STUDY; FIELDS MARKED WITH
ASTERISK EXTRACTED AUTOMATICALLY

Field

Values

Publication Venue*
Venue Type*
Publication Date*
Keywords

Research Facet

Contribution Viewpoint

Architecting Phases

Sustainability Dimensions

Full name of venue
Journal or Conference
Year of publication
Comma-separated list of keywords
One of
the facets identiﬁed by
Wieringa et al. [28], as per [22]
One of the viewpoints identiﬁed in
Venters et al. [15]

One or more from the phases iden-
tiﬁed by Tang et al. [26]

One or more from the dimensions
identiﬁed by Lago et al. [4]

RQ

RQ1

RQ2

RQ3

at the same time. Disagreements between them concerning
the inclusion/exclusion of a primary study were resolved in
iterative consensus meetings mediated by a third author who
also read through all publications.

E. Data Extraction & Snowballing

Table II summarizes the form used for data extraction from
the (primary) studies, following the example of Petersen et
al. [22]. Keywords were extracted from the title and abstract
of each study, reusing in some, but not all cases the keywords
provided in the publication itself. Obvious keywords such as
‘software architecture’ or ‘sustainability’ and derivatives were
not included since they were used for the ﬁltering of the study.
Publication venue types were bundled into two categories:
journals, including also magazines, and conferences, including
also workshop proceedings. Together with the publication
date, these venue-related ﬁelds were extracted automatically
from the metadata of the publications with occasional manual
interventions for providing missing data. Research facets use
the classiﬁcation of Wieringa et al. [28] to categorize research
efforts into validation or evaluation research, solution propos-
als, or philosophical, opinion, or experience papers. Following
Venters et al. [15] we characterize primary studies depend-
ing on whether they discuss sustainable software, where the
software system and its architecting process is the goal of
the study, or sustainability through software, where delivering
sustainability to the stakeholders is the product of this process.
Instead of the more widely accepted but less comprehensive
categorization scheme of Hofmeister et al. [25], we use the
one by Tang et al. [26] to identify architecture-related activ-
ities in ﬁve phases: analysis, synthesis (design), evaluation,
implementation, and maintenance (covering also evolution). To
characterize the sustainability dimension(s) addressed by the
primary study we use the Lago et al. [4] proposal of looking
at the economic, environmental, social, and technical aspects
of sustainability as a software quality. More than one phases
or dimensions could be addressed by the same study, so both
these ﬁelds are structured as comma-separated lists of elements
from the respective categorization scheme.

Fig. 2. Publication year and venue type; proceedings include both conference
and workshop proceedings.

TABLE III
PUBLICATION VENUES WITH MORE THAN ONE STUDY; CONFERENCES
INCLUDE ALSO CO-LOCATED WORKSHOPS, EXCEPT IF PUBLISHED
INDEPENDENTLY FROM THE MAIN CONFERENCE.

Venue

Type

#Studies

European Conference on Software Architec-
ture (ECSA)
Working IEEE/IFIP Conference on Software
Architecture (WICSA) — later renamed to:
IEEE International Conference on Software
Architecture (ICSA)
IEEE Software
Information and Software Technology
IEEE Access
International Workshop on Requirements En-
gineering for Sustainable Systems (RE4SuSy)

Conference

8

Conference

7(5 + 2)

Journal
Journal
Journal

Conference

4
3
2

2

As discussed above, extracting data for these latter two
ﬁelds provided us with the means of verifying IC1 and IC2: if
no phase or dimension could be extracted for a study then
it was treated as a strong indication that it had failed the
respective inclusion criterion. This however meant that we
could perform a search for additional studies through back-
ward snowballing [24] only after the combined ﬁltering and
extraction was ﬁnalized. In practice, this turned out not being
a major issue; we found 8 additional studies by snowballing
through the 50 studies that were ﬁltered by this stage and
carried out an additional extraction for them. The results of the
mapping process presented in the following section aggregate
both sets of 58 primary studies. The ﬁnal list of primary
studies, together with the outcomes of the previous steps of
the process are available online1.

A. RQ1 — State of the Art overview

III. FINDINGS

To answer our ﬁrst research question we start by looking
at the publication of the selected studies using descriptive

1https://ﬁgshare.com/s/a8a25157bf3feace9714

Fig. 3. Top keywords categories after consolidation; multiple categories per
study are possible.

Fig. 4. Research facets of the studies, together with their viewpoint with
respect to sustainability

statistics. Fig. 2 summarizes the number of publications per
year after 2000 and per publication venue type: journal or
magazine articles, and workshop or conference proceedings.
Publications in proceedings dominate with 67% of the to-
tal,
indicating space for more mature works to appear in
the literature. Table III outlines the publication venues with
n > 1 from the selected studies. Perhaps unsurprisingly, the
most popular venues for publishing on the topic appear to
be the European and International Conferences on Software
Architecture (ECSA and ICSA respectively), the latter in both
its incarnations as WICSA and later ICSA. The Software
and Access IEEE journals, and the Information and Software
Technology (IST) journal seem to be also preferred venues
for publishing on the topic. Of special mention is the Interna-
tional Workshop on Requirements Engineering for Sustainable
Systems (Re4SuSy) run in conjunction with the Requirements
Engineering (RE) conference. The fact that the remaining 32
studies are published in 32 different venues is possibly a sign
of a need for more concentrated targeting of the research
output by the community.

Further, we use the extracted keywords to identify the

Fig. 5. Architecting phases addressed in the primary studies and their intersections.

most popular topics covered by the studies in the ﬁeld. Since
the keywords themselves are deﬁned at different levels of
abstraction and exhibit a high degree of variability in the use
of terms for the same concepts, we ﬁrst organize them into
categories. Fig. 3 presents the top ten such categories ordered
by popularity. The topics that are most frequently discussed
fall within the architectural concepts category, aggregating
such topics as architectural principles, patterns, and tactics,
design decisions and the respective principles and patterns,
and software product lines and variability-related keywords.

Going beyond these simpler descriptive statistics, we next
look into how to analyze and synthesize the remaining ex-
tracted data into a richer mapping of the state of the art. The
“traditional” way of achieving this result is through a bubble
plot a la Petersen et al. [22], with e.g. the research facets,
architecting phases, and sustainability dimensions as the axes
of the plot, and the size of the bubbles signifying the number of
studies in the intersection of the axes. However, we have two
categorical variables that can take multiple values at the same
time (phases and dimensions), and one variable (contribution
viewpoint) that is by deﬁnition correlated with another variable
(sustainable software being usually an expression of technical
sustainability [15]). As such, we feel that the bubble plot only
diffuses the presented information instead of illustrating it,
and we thus opt to present this information distributed across
multiple complementary plots.

For the ﬁrst part we are looking at the research facet of
the primary studies, and their contribution viewpoint. Fig. 4
synthesizes the extracted information from these ﬁelds to allow

us to discuss the type of research conducted in the ﬁeld. From
the ﬁgure we can conclude the following:

1) While the majority of studies focus on sustainable soft-
ware (∼64%), the ones aiming to deliver sustainability
through software is not insigniﬁcant (∼36%). Given the
fact that the former viewpoint is heavily associated with
the technical dimension, this is somewhat expected.
2) Sustainable software-focused studies dominate only two
i.e. solu-
out of the three “applied” research facets,
tion proposals and validation research, with evaluation
research studies being split equally between the two
viewpoints. This can be interpreted as a sign of both
viewpoints perceived as the potential target for adoption
by practitioners.

3) There is a distinct lack of the more reﬂection-aiming
types of studies (opinion papers, experience papers, and
particularly philosophical papers). This lack needs to be
addressed: having more such studies in the future can
facilitate further the maturation of the research topic.
Before moving on to also combine phases and dimensions, we
ﬁrst examine each of these extracted ﬁelds in isolation as the
means of answering RQ2 and RQ3, respectively.

B. RQ2 — Architecting phases coverage

In order to answer RQ2 we summarize the architecting
phases addressed by the primary studies and their intersec-
tions using an UpSet plot [29]. As seen in Fig. 5, activities
related to architecture synthesis are overall addressed the most,
appearing in ∼64% of the studies. However, maintenance (and

Fig. 6. Sustainability dimensions addressed in the primary studies and their intersections

evolution) is the most popular phase discussed individually, as
hinted already by the popularity of the respective keywords.
On the other hand,
implementation, referring to the low
level design of the system, is clearly the least-studied phase,
discussed in only ∼10% of the studies. Also, we noticed that
only 15 studies (∼26%) are addressing more than 3 phases at
the same time, and 10 out of these 15 are due to the prevalence
of combining analysis-synthesis-evaluation. Furthermore, the
majority of primary studies (37 out of 58, ∼64%) are staying
within the Hofmeister et al. model of architecting activities
(i.e. analysis, synthesis, and evaluation, or a combination
thereof). Only 3 studies (a meager 5%) address 4 phases or
more, and only 1 addresses all ﬁve.

C. RQ3 — Sustainability dimensions coverage

Similarly to the architecting phases, we use the UpSet plot
of Fig. 6 to answer RQ3. As shown in the ﬁgure, the technical
dimension is by far the most popular one in the selected
primary studies, appearing in a staggering ∼86% of all studies.
As a matter of fact, it is more popular than all other dimensions
put together including their combinations, and it is also dis-
cussed in most combinations with any other dimension. Social,
in turn, is the most under-addressed dimension (13 studies,
∼22%), and almost always discussed in combination with
other dimensions. Similarly, the economic dimension, while
discussed as much as the environmental one, is always treated
together with another dimension and usually the technical
one. Perhaps more importantly, however, it appears that the
focus on the technical dimension outweighs the number of
approaches dealing with multiple dimensions: only 10 studies

Fig. 7. Co-occurrences of sustainability dimensions and architecting phases
addressed by the primary studies

(∼17%) address 3 or more dimensions, and only 4 studies
(∼7%) all four of them.

D. Combining phases and dimensions

Returning now to RQ1, we plot the co-occurrences of the
phases and dimensions appearing in each primary study as a
heatmap in Fig. 7. This provides us with an eagle eye’s view of
their interactions. As shown in the ﬁgure, for example, only
two dimensions are discussed across all phases of software
architecting: the technical and economic ones; however, the
former is much more popular than the latter (50 out of 58
studies, as discussed above). There are also obvious gaps in

phases discussed in conjunction with the environmental and
social dimensions, and a need for more research addressing
the non-technical dimensions in general.

IV. DISCUSSION

In the previous section we presented our analysis of the
state of the art of the intersection of sustainability and software
architecture. We stayed clearly away from identifying this area
as “sustainable software architecture” since it has been histor-
ically associated with a very speciﬁc inward-facing meaning
of sustainability in the literature associated with its resilience
under change. We focused on mapping out the most popular
aspects of the state of the art, and more importantly, on iden-
tifying gaps. One point that was perhaps lost in this analysis
is the set of possibilities created by the accumulated work in
the area. To be more speciﬁc: the number of available works
and their apparent increasing maturity present an opportunity
for the establishment of sustainability-aware architecture as a
separate ﬁeld of study. Such ﬁeld would concern itself ﬁrst and
foremost with the interaction between architecting activities
from across the system lifecycle and the various dimensions
of sustainability as a software-system quality property.

An important step towards realizing this vision is addressing
ﬁrst the diagnosed gaps in our knowledge of the topic. To this
aim, we identiﬁed a list of research items we ﬁnd promising
for the research community to work on in the coming years:
Item #1: Actively pursuing reﬂection-oriented studies. As dis-
cussed in Section III-A, the literature seems to favor the
more practical types of research at the expense of the more
reﬂection-oriented ones such as opinion, experience, and
philosophical papers. This difference should become smaller
as the ﬁeld continues to mature and more knowledge is
accumulated by the involved researchers. However, actively
pursuing more of these types of studies already offers the
opportunity for performing a sanity check to a still growing
ﬁeld such as the one discussed here.

Item #2: Wider coverage of the architecting lifecycle. Fig-
ures 5 and 7 paint a picture of inequalities in the current
works with respect to their treatment of phases. With the
exception of works exclusively focusing on maintenance,
there are few works going beyond the core Hofmeister et al.
analysis-synthesis-evaluation combination of phases. More
works addressing ideally the whole lifecycle are therefore
necessary, or at least considering the implementation and
maintenance phases, and speciﬁcally going beyond the in-
tersection of the latter with the technical dimension.

Item #3: Going beyond the technical dimension. In a similar
manner, and by combining Fig. 6 with 7, we can easily
observe how pervasive is the technical dimension in the
current discourse. To some extent, this is to be expected: the
notion of sustainable software itself has been equated for
many publications with that of maintainability, adaptability,
resilience, and other concepts under the technical sustain-
ability umbrella [15]. However, and especially in the more
recent years, the research community has been stressing

the need for a multi-dimensional approach to dealing with
sustainability as formulated by the Karlskrona manifesto [1].
As such, there is an urgent need for approaches incorporating
as many dimensions as possible, and addressing especially
the least popular ones (environmental, economic, and social).

Item #4: Towards a sustainability-aware architecting frame-
work. There is no primary study in our sample which covers
all dimensions and phases at the same time. This might
have been understandable and acceptable while the ﬁeld
was still in its inception, but with its increasing maturity
it becomes important to be able to deal with the multi-
dimensionality of sustainability in a structured and holistic
manner. Assuming that the identiﬁed gaps in the state of
the art begin to be covered by the previous items in this
agenda, an appropriate architecting framework as discussed
in [30] would then be necessary for integrating them into
one coherent solution. The most important element of this
framework would be providing a connection between the
various architecting activities and their effect, both direct
and indirect, to each dimension. Outlining the vision for this
framework is an important work item on its own. We plan
to pursue this by extending the SAF Toolkit [31].

V. THREADS TO VALIDITY

For the discussion on the threats to the validity of this work,
and the mitigating measures we took, we use Ampatzoglou et
al. [32] as our guide. Accordingly, we acknowledge potential
issues along all three of the there-deﬁned threat categories:
Study Selection Validity: This category aggregates threats
rising from the ﬁrst two phases of secondary studies, i.e. search
and ﬁltering. The publications used for the mapping process in
this study were retrieved by querying 5 online databases using
as broad query terms as possible. The query string used was
constructed in alignment with the PI(COC) search strategy,
and was piloted over multiple iterations before converging
to the form used in this study. Duplicate studies were au-
tomatically removed from the ﬁnal sample, and snowballing
was performed to provide additional depth to our search. In
addition, selection criteria were deﬁned following the research
questions, and their application was performed ﬁrst indepen-
dently and then after consensus’ building to minimize the bias.
Data Validity: This category includes threats applying to
the data extraction and analysis phases of the secondary
study. These threats are roughly organized in three groups:
limitations of the dataset, data extraction bias, and research-
introduced bias. With respect to the ﬁrst, and by including
primary studies that propose (reusable) architectures in addi-
tion to works that study explicitly architecture as a topic, we
increased both the size and heterogeneity of the dataset. To
mitigate the issues that arise from data extraction, and similarly
to the ﬁltering process, we performed the extraction ﬁrst inde-
pendently and then developed a consensus through discussion
among the researchers. The senior researchers involved in
this study have provided separate quality assessment to this
goal. Finally, to minimize research-introduced bias we adopted

widely accepted conceptual frameworks (architecting phases
deﬁned by Tang et al. [26] and sustainability dimensions by
Lago et al. [4]) for classiﬁcation purposes.
Research Validity: This last category is concerned with the
overall research design; it applies throughout the phases of the
study and focuses mainly on two aspects: generalizability and
repeatability. With respect to the former, our research questions
are motivated by both the lack of a similar review in the
literature, and the necessity of the topic itself. With respect
to the latter, the replication package for the study has been
made available online, even though at this stage as a shared
private link only.

VI. CONCLUSION

Software engineering studies have been increasingly con-
cerned with the topic of sustainability, both as it is delivered
by the systems they study, and of the software systems
themselves. A number of secondary studies from the last years
are attesting to the existence of a vibrant community working
on various related research topics. One such topic, that of the
intersection of software architecture and sustainability, is the
focus of this work. Having no other secondary study speciﬁ-
cally addressing this topic, in this work we systematically map
existing approaches from the literature on both sustainable
architectures and sustainability through architecture.

Our ﬁndings show a quickly maturing research community
that however needs to address speciﬁc deﬁciencies in its
coverage of both architecting activities and sustainability di-
mensions. Based on our analysis, we propose a list of research
items for the following years towards the establishment of
sustainability-aware (software) architecture as a new ﬁeld of
study. The items in this research agenda are the focus of our
future work.

REFERENCES

[1] C. Becker et al., “The Karlskrona manifesto for sustainability design,”
Tech. Rep., oct 2014. [Online]. Available: http://arxiv.org/abs/1410.6968
[2] GeSI, “Digital with Purpose: Delivering a SMARTer 2030,” GeSI, Tech.

Rep., 2019.

[3] B. Penzenstadler et al., “Safety, security, now sustainability: The non-
functional requirement for the 21st century,” IEEE Software, vol. 31,
no. 3, pp. 40–47, 2014.

[4] P. Lago et al., “Framing sustainability as a property of software quality,”
Communications of the ACM, vol. 58, no. 10, pp. 70–78, sep 2015.
[5] S. Naumann et al., “The GREENSOFT Model: A reference model
for green and sustainable software and its engineering,” Sustainable
Computing: Informatics and Systems, vol. 1, no. 4, pp. 294–304, Dec.
2011.

[6] S. S. Mahmoud and I. Ahmad, “A green model for sustainable software
engineering,” International Journal of Software Engineering and Its
Applications, vol. 7, no. 4, pp. 55–74, 2013.

[7] E. Kern et al., “Impacts of software and its engineering on the carbon
footprint of ICT,” Environmental Impact Assessment Review, vol. 52,
pp. 53–61, Apr. 2015.

[8] A. Hindle, “Green Software Engineering: The Curse of Methodology,”
in 2016 IEEE 23rd International Conference on Software Analysis,
Evolution, and Reengineering (SANER).
Institute of Electrical and
Electronics Engineers (IEEE), May 2016, pp. 46–55.

[9] B. Penzenstadler et al., “Sustainability in software engineering: A
systematic literature review,” in International Conference on Evaluation
& Assessment in Software Engineering (EASE).
IET, 2012, pp. 32–41.

[10] G. A. Garc´ıa-Mireles et al., “Interactions between environmental sus-
tainability goals and software product quality: A mapping study,” in
Information and Software Technology, 2018, vol. 95, pp. 108–129.
[11] N. Wolfram, P. Lago, and F. Osborne, “Sustainability in software
engineering,” in IFIP Conference on Sustainable Internet and ICT for
Sustainability (SustainIT).

IEEE, Jun. 2018, pp. 1–7.

[12] C. Calero et al., “5Ws of green and sustainable software,” Tsinghua
Science and Technology, vol. 25, no. 3, pp. 401–414, Jun. 2020.
[13] C. Calero and M. Piattini, “Puzzling out Software Sustainability,”
Sustainable Computing: Informatics and Systems, vol. 16, pp. 117–124,
Dec. 2017.

[14] P. Lago and B. Penzenstadler, “Editorial: Reality check for software en-
gineering for sustainability-pragmatism required,” Journal of Software:
Evolution and Process, vol. 29, no. 2, Feb. 2017.

[15] C. C. Venters et al., “Software sustainability: Research and practice from
a software architecture viewpoint,” The Journal of Systems and Software,
vol. 138, pp. 174–188, 2018.

[16] H. Koziolek, “Sustainability evaluation of software architectures: a
systematic review,” in Joint ACM SIGSOFT conference on Quality of
software architectures–QoSA and architecting critical systems–ISARCS,
2011, pp. 3–12.

[17] T. Volpato et al., “Two perspectives on reference architecture sustain-
ability,” in Proceedings of the 11th European Conference on Software
Architecture: Companion Proceedings, 2017, pp. 188–194.

[18] P. H. D. Valle et al., “Towards suitable description of reference archi-

tectures,” PeerJ Computer Science, vol. 7, p. e392, 2021.

[19] R. Verdecchia, I. Malavolta, and P. Lago, “Architectural technical debt
identiﬁcation: The research landscape,” in 2018 IEEE/ACM International
Conference on Technical Debt (TechDebt).

IEEE, 2018, pp. 11–20.

[20] T. Volpato, A. Allian, and E. Y. Nakagawa, “Has social sustainability
been addressed in software architectures?” in ECSA ’19: Proceedings
the 13th European Conference on Software Architecture, vol. 2.
of
New York, New York, USA: ACM, sep 2019, pp. 245–252. [Online].
Available: http://dl.acm.org/citation.cfm?doid=3344948.3344979
[21] E. M. Grua et al., “Social Sustainability in the e-Health Domain via
Personalized and Self-Adaptive Mobile Apps,” in Software Sustainabil-
ity, C. Calero, M. ´A. Moraga, and M. Piattini, Eds.
Springer, 2021,
pp. 301–328.

[22] K. Petersen et al., “Systematic mapping studies in software engineering,”
in 12th International Conference on Evaluation and Assessment
in
Software Engineering (EASE) 12, 2008, pp. 1–10.

[23] K. Petersen, S. Vakkalanka, and L. Kuzniarz, “Guidelines for conduct-
ing systematic mapping studies in software engineering: An update,”
Information and Software Technology, vol. 64, pp. 1–18, 2015.
[24] S. Jalali and C. Wohlin, “Systematic literature studies: database searches
vs. backward snowballing,” in Proceedings of the 2012 ACM-IEEE
international symposium on empirical software engineering and mea-
surement.

IEEE, 2012, pp. 29–38.

[25] C. Hofmeister et al., “A general model of software architecture design
derived from ﬁve industrial approaches,” Journal of Systems and Soft-
ware, vol. 80, no. 1, pp. 106–126, Jan. 2007.

[26] A. Tang et al., “A comparative study of architecture knowledge man-
agement tools,” Journal of Systems and Software, vol. 83, no. 3, pp.
352–370, 2010.

[27] B. Kitchenham and S. Charters, “Guidelines for performing systematic
literature reviews in software engineering,” EBSE Technical Report,
Tech. Rep., 2007.

[28] R. Wieringa et al., “Requirements engineering paper classiﬁcation and
evaluation criteria: a proposal and a discussion,” Requirements engineer-
ing, vol. 11, no. 1, pp. 102–107, 2006.

[29] A. Lex et al., “Upset: visualization of intersecting sets,” IEEE trans-
actions on visualization and computer graphics, vol. 20, no. 12, pp.
1983–1992, 2014.

[30] V. Andrikopoulos and P. Lago, “Software sustainability in the age of
everything as a service,” in Next-Generation Digital Services - Essays
Dedicated to Mike Papazoglou, ser. LNCS. Springer.

[31] P. Lago and N. Condori-Fernandez, “The Sustainability Assessment
Framework (SAF) Toolkit: Instruments to help Sustainability-driven
Software Architecture Design Decision Making,” Apr. 2022. [Online].
Available: https://github.com/S2-group/SAF-Toolkit

[32] A. Ampatzoglou et al., “Identifying, categorizing and mitigating threats
to validity in software engineering secondary studies,” Information and
Software Technology, vol. 106, pp. 201–230, 2019.

