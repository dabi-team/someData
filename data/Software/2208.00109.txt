Traveler:NavigatingTaskParallelTracesforPerformanceAnalysisSayefAzadSakin,AlexBigelow,R.Tohid,ConnorScully-Allison,CarlosScheidegger,StevenR.Brandt,ChristopherTaylor,KevinA.Huck,HartmutKaiser,KatherineE.IsaacsFig.1.TheTravelerinterface.Travelerisavisualizationplatformsupportingvisualperformanceanalysisofasynchronoustaskparallelprograms.TheUtilizationView(a)showstheselectedprimitive(tasktype)accountsformostoftheutilizationintheprogram.TheGanttView(b)showshowindividualtasksarescheduledacrossthesystemwhiletheAggregatedGanttView(c)showsutilizationandextentsduetogroupsoftasks.AFunctionalBoxPlotView(d)summarizesperformancemetricsacrossresourcesandovertime.SelectiondetailsareshownintheSelectionInfoView(e)andsourcecodeintheSourceCodeView(f).TheDependencyTreeView(g)showsrelationsamongtasktypes.ThedistributionoftaskdurationscanbeexploredintheIntervalHistogramView(h).Abstract—Understandingthebehaviorofsoftwareinexecutionisakeystepinidentifyingandﬁxingperformanceissues.Thisisespeciallyimportantinhighperformancecomputingcontextswhereevenminorperformancetweakscantranslateintolargesavingsintermsofcomputationalresourceuse.Toaidperformanceanalysis,developersmaycollectanexecutiontrace—achronologicallogofprogramactivityduringexecution.Astracesrepresentthefullhistory,developerscandiscoverawidearrayofpossiblypreviouslyunknownperformanceissues,makingthemanimportantartifactforexploratoryperformanceanalysis.However,interactivetracevisualizationisdifﬁcultduetoissuesofdatasizeandcomplexityofmeaning.Tracesrepresentnanosecond-leveleventsacrossmanyparallelprocesses,meaningthecollecteddataisoftenlargeanddifﬁculttoexplore.Theriseofasynchronoustaskparallelprogrammingparadigmscomplicatestherelationbetweeneventsandtheirprobablecause.Toaddressthesechallenges,weconductacontinuingdesignstudyincollaborationwithhighperformancecomputingresearchers.Wedevelopdiverseandhierarchicalwaystonavigateandrepresentexecutiontracedatainsupportoftheirtraceanalysistasks.Throughaniterativedesignprocess,wedevelopedTraveler,anintegratedvisualizationplatformfortaskparalleltraces.Travelerprovidesmultiplelinkedinterfacestohelpnavigatetracedatafrommultiplecontexts.WeevaluatetheutilityofTravelerthroughfeedbackfromusersandacasestudy,ﬁndingthatintegratingmultiplemodesofnavigationinourdesignsupportedperformanceanalysistasksandledtothediscoveryofpreviouslyunknownbehaviorinadistributedarraylibrary.IndexTerms—softwarevisualization,parallelcomputing,traces,performanceanalysis,eventsequencevisualization1INTRODUCTION•SayefAzadSakinandConnorScully-AllisonarewiththeUniversityofArizona.E-mail:{sayefsakin,cscullyallison}@arizona.edu.•AlexBigelowiswithStardog.•R.Tohid,StevenR.Brandt,andHartmutKaiserarewiththeLouisianaStateUniversity.E-mail:mraste2@cct.lsu.edu,{sbrandt,hkaiser}@lsu.edu•CarlosScheideggeriswithRStudio.•ChristopherTayloriswithTacticalComputingLabs.•KevinA.HuckiswiththeUniversityofOregon.E-mail:khuck@cs.uoregon.edu•KatherineE.IsaacsiswiththeUniversityofUtah.E-mail:kisaacs@sci.utah.edu.Highperformancecomputing(HPC)isessentialinscientiﬁcsimulationanddiscovery.HPCresourceshoweverarelimitedandcostly.Thereisagreatneedtooptimizetheperformanceofprogramsrunningonthem,asevenaslightperformanceimprovementcanleadtoasigniﬁ-cantreductioninresourcesused[5],therebyallowingmorescientiﬁcapplicationstoexecute.Manuscriptreceivedxxxxx.201x;acceptedxxxxx.201x.DateofPublicationxxxxx.201x;dateofcurrentversionxxxxx.201x.Forinformationonobtainingreprintsofthisarticle,pleasesende-mailto:reprints@ieee.org.DigitalObjectIdentiﬁer:xx.xxxx/TVCG.201x.xxxxxxxarXiv:2208.00109v3  [cs.HC]  3 Sep 2022Understandingtheperformanceoftheseprograms,aﬁrststepto-wardsoptimization,isdifﬁcultduetothecomplicatednatureofunderly-inghardwarecomponents,intermediateexecutionschedulingsystems,andtheapplicationsthemselves[37].Onecommonapproachtoexam-iningthisbehavioristoanalyzeanexecutiontrace—achronologicalrecordofper-resourceeventscapturedduringprogramexecution.Tracespermitreconstructionofwhatoccurredduringexecution,butgainingsuchinsightsatausefullevelischallengingasthescaleofeventsisordersofmagnitudesmallerthanthelengthofthetrace.Identifyingbehaviorsoftheprogramorsystemfromthetraceeventsthatleadtothemrequiresnavigatingalargespacewheredetailsmatter.ExecutiontracesaretypicallyvisualizedusingaGanttchart.Toviewdetails,usersmustexamineverysmalltimeslicesduetotheshortdurationoftraceevents.Statisticaloverviews,suchasstackedareachartsshowingthemixofexecutingitems,helpnavigatetosomedegree,butthevastnessofthetracestillrequiresalotofmanualsearching.WedesignTraveler,amultiplecoordinatedviewsystemforexecutiontraces,withmultiplelevelsofmeaningfulabstractionfortaskparallelprograms.TravelerlinkstheexpressiontreeoftheprogramandprovidesaggregatedGanttviewstohelpusersrelatetraceeventstocodeandshowhowindividualiterationsmanifestonthesystem.WedesignedTravelerthroughaniterativeprocesswithanactiveHPCdevelopmentteam.WefollowedtheDesignStudyMethodol-ogy[35]withtherecommendationsforevolvingdataandconcernsofWilliamsetal.[38].Throughthisprocess,wedocumentedthechang-ingneedsofourcollaboratorsovertimeandextendedanexistingtaskanalysisforperformanceanalysis.Wediscussbeneﬁtsandchallengesofanongoing,evolvingdesignstudyinSect.7.WevalidateTravelerthroughacasestudy,aninterviewwithanexpertuserofseveralmonths,andfeedbacksessionswithnoviceusers.OurcasestudydescribeshowTravelerwasusedtoexplainperformancedifferencesbetweentwoprogramimplementationsandtoidentifyaperformancebug,leadingtoaﬁxintheapplication’ssourcecode.Thecontributionsofthisstudyareasfollows:•Adataandtaskanalysisforperformanceanalysisoftaskparalleltraceswithevolvingconcerns,•ThedesignandimplementationofTraveler,avisualizationsystemforperformanceanalysisoftaskparalleltraces,and•Reﬂectionsandrecommendationsforongoingdesignstudycol-laborationsandforvisualizationdesignoflargeexecutiontraces.2TASKPARALLELPROGRAMSANDEXECUTIONTRACESParallelprogramsaimtoachievefastercomputationbydividingworkamongmanyresources(e.g.,CPUs,hardwarethreads)executinginparallel.Werefertoconcernssuchasthetime-to-solutionandefﬁ-ciencyofresourceuseasperformance.Goodperformanceallowsthescientiﬁccommunitytorunlargerormorenumeroussimulationsandcomputations.Insomecasesperformanceimprovementsarerequiredforaparticularproblemtobefeasiblycomputedatall.Analyzingper-formanceisdifﬁcultbecause“goodperformance”doesnothaveacleardeﬁnitionandthereisavastspaceofpossibleperformanceproblems.Itisunknownwhethertheobservedexecutiontimeofaprogramisnearoptimalorlongerthannecessaryduetoaperformanceissue.WeconsideraclassofparallelprogramsthataremanagedbyanAsynchronousTaskingRuntime(ATR).Wecalltheseprogramstaskparallel.IntheATRparadigm,theprogramwillbreakaproblemintonumeroustasks—unitsofcomputationalwork.Sometaskswillgenerateothertasksastheproblemisfurtherdivided.Theassumptionisthattherewillbemanymoretasksthanresources.TheATRthenschedulesthetasksforexecutionontheparallelresourcesandmaymovetasksbetweentheseresourcestobetterutilizethem.Hence,oneperformancemetricofinterestforATRsisutilization—theamountofparallelresourcesactive(i.e.,notidle)throughouttheexecution.ATRsaredifferentfrombulksynchronousparallelapplications,whereresourcesrunthesamecomputationondifferentpartsofthedata,synchronize,andrepeatthecycle.Inabulksynchronousparadigm,whentheworkrequiredforeachportionofthedataisdifferent,re-sourceswithlessworkmaybeidlewhilewaitingforothers.ATRsaimtotakeadvantageofthiswastebyassigningtheidlingresourcestoother,potentiallydifferentwork.Incomparisontobulksynchronousapplications,taskparallelprogramshavesmallerandmorenumeroustasksthatmaynotbescheduledinaregularfashionduetoamorecomplicatedschedulingapproach,makingitdifﬁculttodeterminewhatthesystemisdoingandwhyatanygiventime.ExecutionTracesareaformofperformancedatathatlogstemporaleventsandtheirlocation,i.e.,theresourceonwhichtheyoccurred.InATRs,taskstarttimeandendtimearetypicallyrecordedaspointeventsandtheninterpretedasasingledurationalevent.Thedurationoftheseeventsistypicallymanyordersofmagnitudesmallerthantheentirelengthofthetrace.Insomeexecutiontraces,includingours,dependencydatabetweentasksisalsorecorded.Inourcase,adependencyindicatesaparent-childrelationship,thatonetaskcausedanothertasktobecreatedandultimatelyexecuted.Executiontracescanbeseenaseventsequencedata.IntermsofthesurveybyGuoetal.[14],tracesarehigh-dimensional—tasktypesaredeﬁnedbytheirmethod/sourcecodeandthustheremaybehundreds,ifnotmore,differenttypes;tracesare(ideally)dense,atleastwhenutilizationishigh;tracesareirregularastasksareasynchronouslyscheduled;andtraceeventsoccurinparallelacrossresources.Unlikeprevalentformsofeventsequencedata,executiontracesdescribeeventsgeneratedbycomputerprogramsratherthanhumanactors.Thus,ratherthandiscoveringfrequentpatternsofevents,analysistasksforexecutiontracesareoftenmorefocusedonidentifyingevents,correlatingthemwithcode,andunderstandinghowthestateofthesystemandthecodeworkedintandemtoachievetheobservedperformance.WediscussperformanceanalysistasksfurtherinSect.4.3.3RELATEDWORKVisualizationhasbeenwidely-usedforperformanceanalysisanddebug-ginginhighperformancecomputing[11,19].Amongthem,executiontracedataistypicallyvisualizedwithGanttcharts[4,9,13,28,30,32,39,41,42]—avisualidiomwhereparalleltimelinesforeachcomputingresourcearearrangedasrowsandevents,suchasfunctioncalls,aredrawnasrectangleswithinthoserows,spanningtheirtimeofexecution.Dependencies,ifdepicted,arerepresentedaslinesconnectingevents.Ganttchartsareoftenpairedwithotherstatisticalviews.Overviewsofeventtypeorutilizationareparticularlycommon.SmartTraces[29]implementedadrag-and-dropsystemoflinkedviews,includingadata-ﬂowgraph.Travelersimilarlyhasaconﬁgurablesystemofauxiliaryviews.Weaddtwostructuralviews,anAggregatedGanttViewandaDependencyTreeViewtoshowmeaningfullevelsofabstractionbetweenoverviewanddetail.Datascalehasbeenapersistentissueinexecutiontracevisualization.Inadditiontoresponsivenessissues,thevastdifferenceinscalebetweenthelengthofthetraceandtheindividualeventscanmakeGanttchartshardtointerpret,especiallywhendependenciesarepresent.Sync-Trace[20]hasaresource-centricapproachwherethetimelineofoneresourceisshowninmultiplelevelsofdetailwiththemostzoomedinshowingconnectionstootherresources.Ravel[18]usedanidealizedunittimeaxistoshowdependencypatterns.However,thisapproachassumesabulksynchronousparadigmthatisnotpresentinourdata.Haugenetal.[16]showdependenciesonlyforaselectedinterval.Wesimilarlyprovidedependenciesoninteraction,butshowtheentirechainofdependenciesrelatedtoaneventratherthanjustdirectconnections.SeveralapproacheseschewtheGanttchartandploteventsormetricsaboutresourcesinthesamespace[12,22,24,26,27].Wealsoaggregatemetricdatabyresourceinourmetricviews.However,theseapproachesdonotpreservedependenciesbetweentheevents,oneofthereasonswechoosetopreservetheGanttchart.Non-timelineapproachesusesummaries,animation,ornetworks.Sigovanetal.[36]showeventsbubblingupadurationaxis,usinganimationfortime.Sandersonetal.[34]showstreamingdataforper-formanceanalysisandsteering,withstatisticalplotsandtheprojectingofmetricsontothe3Dsimulationspaceandmachineroomlayout.Chuimbuko[21]alsoshowsstreamingdata,withstatisticalplotsandacallstackplotofstreamingdata.Ofthese,onlyChimbuko’scallstackplotshowsdependenciesandlikeSyncTraceitislimitedtoaspeciﬁctimerangeandfocusresource.Ourusershavetasksrequiringmoreﬁdelityinhowresources,events,anddependenciesworkinconcert.Asschedulingintaskparallelprogramsisdeﬁnedbyanexecutiongraph,per-eventlayerednode-linkdiagramshavealsobeenused[17,25,33],butthesimpliﬁcationtechniquestokeepthegraphscalablerelyonafork-joinparallelismmodelthatdoesnotmatchourdata.4OURDESIGNPROCESSWedescribethedesignprocessofTravelerintermsoftheDesignStudyMethodologyofSedlmairetal.[35].WeﬁrstdescribethecontextofthecollaborationinwhichTravelerwasdesigned,insupportofahighlyactiveopen-sourceresearchsoftwareendeavor,makingday-to-dayneedsa“movingtarget”[38].Fromthisframingwedescriberolesintheprojectandourdiscoveryprocess.Finally,wepresentourtaskanalysis,whichextendsandmodiﬁesanexistinggoal-tasklattice[38].4.1CollaborationOverviewandBackgroundWedesignedanddevelopedTravelerinsupportofandasoneofthegoalsofamulti-institutionalresearchproject,Phylanx.Theoverallgoaloftheprojectistosupportdistributedprocessingofdatascienceprograms,thusincreasingthesizeofprogramsthatcanbecomputedandthespeedinwhichtheyarecomputed.ThePhylanxworkﬂowtranspilesPython/NumPyprogramsandrunsthemasdistributedHPXapplications.HPXisanasynchronoustaskingruntime.Performanceanalysisandvisualizationsupportaresub-goalsofthePhylanxprojectsupportingthedevelopmentofboththecorePhylanxlibraryaswellasHPX,applicationanalysisbyadvancedPhylanxusers,andcommunicationofPhylanxconceptstopotentialusers.AsbothPhylanxandHPXareactivelydeveloped,speciﬁc(visual)analysisgoalsoffocuschangeovertime,requiringcarefulobservationofevolvingneedsindesigningvisualizations.Williamsetal.[38]documentedthisprocessinthedesignofanotherperformancevisu-alization,Atria.WhileTravelerfocusesonexecutiontraceanalysis,Atriawasdesignedforproﬁledata—adifferenttypeofperformanceanalysisdatawheremeasurementsareaggregatedratherthanpresentedintime.WediscusstheseimplicationsofthisdifferenceinSect.4.3.TheassignmentofgeneralrolesandthediscoveryprocessweusehereareconsistentwiththatofAtria.ParticipantsandRoles.ThePhylanxprojectiscomposedofthreeteams.TheRuntimeTeamdevelopstheHPXandthecorePhylanxlibrary.ThePerformanceAnalysisTeamdevelopsperformancecol-lectiontools,automatedperformanceoptimizationapproaches,andnightlyregressionscripts.TheVisualizationTeamdevelopsperfor-mancevisualizationtools.ThisstructureisunchangedfromAtria’sdevelopment,thoughthemembershipofeachteamhaschangedovertimeaspeoplejoinedorlefttheproject.AswithAtria,theRuntimeTeamleadservedastheprimarygate-keeperandencouragedthecastingofstudentsandpost-doctoralfellowsintheirteamasfrontlineanalysts.4.2DataWedescribethedataanddataabstractionsusedinTraveler.ExecutionTraceData.TravelervisualizesexecutiontracedatafromOpenTraceFormatversion2(OTF2)[10]archives,awidely-usedformatinHPC.Aspreviouslystated,tracesareaformofeventsequencedata.Weabstractthefundamentalunitofthetrace(i.e.,thedurationalevent)asaninterval.InATRterms,anintervalissimilartoatask,butweavoidusingtheterm“task”becauseHPXtaskscanbefurtherdivided,sosomeintervalsarenotfulltasks,andbecausetheword“task”hasadifferentmeaninginvisualization,oneweusethroughouttherestofthedocument.Anintervalhasastartandendtime,agloballyuniqueidentiﬁer(GUID),alocation(computationalresource,e.g.,hardwarethread)onwhichitexecuted,andaprimitivenamedescribingwhatwasexecuted(e.g.,functionnameorprogrammingconstruct).Theprimitiveisessentiallytheeventtype.AnintervalmayalsohaveaParentGUID,theGUIDoftheintervalthatspawnedit,ifitsparentwascollectedduringexecution.GUIDandParentGUIDdatainHPXwerenotcollectedpriortothePhylanxcollaboration.TheseattributeswereaddedtothetracedatacollectioncapabilitiesbythePerformanceAnalysisTeamleadafterdiscussionwiththeVisualizationandRuntimeteamsforsomeofthesub-goalswepresentinourtaskanalysis,anexampleofevolvingdatathatarosefromthecollaboration.Thetraceﬁlemayalsoincludeperformancecounterdata.Aper-formancecounteraccumulatesametricovertimesuchasthenumberofCPUcyclesorL1cachemisses.Thevalueofthisaccumulatorcanbesampledatregulartemporalintervalsorattracepointevents.Subtractingthecountervaluefromitspreviouslysampledoneresultsinanabsolutecountoftheeventsitmeasuredinthepastinterval.ExecutionTree.Wederiveanexecutiontreefromthetracedata,usingtherelationshipsdescribedbyParentGUIDs.Theexecutiontreeaggregatestheintervalsbyprimitivenameandsequenceofprimitivesleadingtoit,similartoacallingcontexttree.Wethusrefertoeachnodeasbeingaprimitivecontext.Eachnodeinthetreehasanassociatedprimitivenameandaggregateddurationofallintervalswiththesamecontext(i.e.,sequenceofparentprimitives).Recursivecallsmaythusgeneratedeepsubtrees.TheexecutiontreeisdifferentfromAtria’sexecutiongraphwhichwascollecteddirectlyratherthanderivedfromthetrace.Typicallythederivedexecutiontreeismoredetailedduetoinstrumentationdifferences.SourceCode.SourcecodeisanoptionaldatasourceinTraveler.FourTypesofDataEntities.Themostﬁne-grainedentityweasso-ciatedatawithistheinterval.However,performanceanalystsoftenthinkintermsofotherentitiesthatcanbeassociatedthroughthedata:thecomputationalresources,functionsinprogram(primitives),orlinesofsourcecode.Wediscusstheseinourtaskanalysis.4.3TaskAnalysisWilliamsetal.[38]developedataskanalysiswiththegoalofnotonlysupportingAtria,butofinformingperformancedatacollectioneffortsintheotherteamsandpreparingforfuturevisualanalysisneedsasthePhylanxprojectcontinued.Thetaskanalysiswasbasedonfullteammeetings,focusedvisualizationorperformancemeetings,e-mailmessages,andinformalinterviews.Throughthisprocess,theoccurrenceoftaskswastrackedovertimetoprioritizetaskswhichremainedrelevantdespitebytheshiftingneedsoftheproject.WecontinuedthisdiscoveryprocessindevelopingTraveler,addinganadditional181noteartifactstotheprior152,andinturncontinuedtobuildandreﬁnethetaskanalysis.Twoauthorsseparatelyreviewednotesandproposedextensionstotheexistingtaskanalysisandthendiscussedandintegratedtheirproposals,resultinginthetaskanalysiswepresenthere.Weoriginallyorganizedtasksfrombroadumbrellaconcerns,togoalsandsub-goals,andthenﬁnallylow-leveltasks,referringtothestructureasagoal-tasklatticeasthereweremultipleconnectionsbetweenlayers.Forexample,somegoalssupportmultipleumbrellaconcerns.Ourrevisedgoal-tasklatticerecognizesconnectionsbetweenlayersthatbecameapparentinouranalysis.Anothersigniﬁcantchangewasthatweoriginallyanalyzedtasksforaggregatedexecutiongraphdataonly,usingthenetworktasktaxonomyofLeeetal.[23].HoweverTravelerfocusesonexecutiontraces,aformofeventsequences,butalsoincorporatesanexecutiongraphview,preservingthosenetwork-basedtasks.WethuschosetoapplytheinteractiontasktaxonomyofYietal.[40]fornon-networktasks.Wechosethistasktaxonomyduetotheprevalenceofconnecttaskssuggestedbyoursub-goals.Wedescribetheunchangedpartsofthetaskanalysisbrieﬂyandelaborateonthechanges.Fig.2providesanoverviewofthenewanalysisanditsdifferencesfromthepreviousones.Umbrellaconcerns.Thethreeumbrellaconcernsdidnotchange.U1,ProgramComprehension,describeshowpeoplewanttounderstandandbuildmentalmodelsofhowaprogramtranslatestoexecution.U2,PerformanceAnalysis,describesunderstandingefﬁciencyconcernsoftheexecution.U3,Communication,describesconcernsinexplain-ingthesystemandapproachtoothers,suchaspotentialusersortheacademiccommunitythroughpublications.Fig.2.Agoal-to-tasklattice,showingrelationshipsbetweenhigh-levelumbrellaconcerns,goals,sub-goals,tasks,andthetasktaxonomiesinLeeetal.[23]andYietal.[40].Additionalgoals,sub-goals,tasks,andframeworks,relativetoWilliamsetal.[38],areshowningold.Goals.Thesixoriginalgoalsdidnotchange,butfourofthemweredesignatedadditionalsub-goalsandaseventhoverallgoalwasadded.Wedescribeeachgoalsanditssub-goalsandtasks,withfocusontheadditionsforexecutiontracedata.G1:OverviewofExecution.Inallthreeumbrellaconcerns,peoplewantedanoverviewoftheexecution—ageneralsenseofhowthecodewastranslatedintoparalleltasks,whichwererunfrequently,andhowtimeandresourceswereallocated.Withtheexecutiongraph,thiscanbeviewedwithoverview,followdependencies,andﬁndingsubstructurestasks.WeaddabstractandexploretasksfromYietal.withtheinclusionoftracedata.G2:RelateCode.Understandinghowbehaviorrelatestocodeisimportantbecausethecodeiswhatthedeveloperscanchange.Runtimedevelopersneedtoknowrelationshipstocodetoimproveruntimepolicies.Thisisthusanimportantgoalforprogramcomprehensionandperformanceanalysis.InAtria,thesub-goalswererelatingprimitivetocode(analyzeattributes)andcodetoprimitives(ﬁndsubsets).Intervalsarethefundamentalunitintracedata,soweaddsub-goalsthatalsorelateintervals.These,aswellastheprevioussub-goals,aredescribedbyYietal.’sconnecttask.G3:UnderstandingTimingInformation.Timinginformationisatthecoreofperformanceanalysis.Peoplewanttoknowwhattookasigniﬁcantoranabnormalamountoftimeandalsowanttocomparetimingsacrossiterationsorruns.Thus,wekeeppreviouslydeclaredsub-goalsofﬁndinghotspots,hotpaths,timinganomalies,andcomparingacrossruns.Thedetailedtemporaldataaboutintervalsandresourcesavailableinexecutiontracesledourcollaboratorstodiscusssub-goalsfocusingonthem,threeofwhichcross-cutseveralgoals.Thecross-cuttingsub-goalsare(a)correlatingintervalswithtime,(b)correlatingresourceswithtime,and(c)correlatingprimitiveusewithtime.Peoplewanttoknowthearrangementofintervalsandresourcesintimeandatahigherlevelofabstraction:theprimitiveuseintime.Asthetimespanisvastincomparisontointervaldurations,severallevelsofdetailareneeded,leadingustoassignabstract/elaborate,reconﬁgure,andencodetasks.Weidentiﬁedtwomoretiminginformationsub-goalswhicharehighlyrelated:analyzetheintervaldistributionandﬁndextremeinter-vals.Developersandperformanceanalystshavequestionsregardingthedurationanddistributionofintervals.Longintervalsmayindicateananomalyortargetofoptimizationdependingonnumeracy.Manyshortintervalscanalsoleadtopoorperformanceduetotheoverheadinmanagingthem.Understandingtheseinatimelineisunmanageable,suggestinganencodetask.G4:UnderstandRuntimeDecisions.AnATRmanagesparalleltaskstoachievegoodperformance.UnderstandingthedecisionsmadeduringexecutionisthusimportantfordeveloperstobestusetheATRandforRuntimeTeammemberstoimprovetheATR.Ouroriginaltaskanalysisrecognizedseveralnetworktasks.Withexecutiontracedata,thecross-cuttingsub-goalsalsoexplainruntimedecisionsastheassignmentofintervalsandresourcesismanagedbytheruntime.G5:UnderstandUtilization.Utilizationdescribeshowcomputa-tionalresourcesareexercisedduringexecution.Highutilizationmeansmostoftheresourcesareworkingatcapacityandthuslikelywillachievetheresultmorequickly.Lowutilizationmeansmanyresourcesareidle,wastingpowerwithoutcontributingtotheresult.Inourpriorstudy,utilizationwasidentiﬁedasagoal,butnotonethedatayetpermitted.Allutilizationsub-goalsarethusnewlyidentiﬁed.Thecross-cuttingsub-goalsarecentraltoutilizationasrefertostateinformationaboutresourcesintime.Additionalsub-goalsare(a)correlatingintervalswithresourceuse,explainingwhatcomputationisoccurringifaresourceisinuse,and(b)correlatingresourceusewithresourceuse—comparingacrossresources.Againasthetimescaleislarge,abstract/elaborateandarrangetasksarenecessary.Somequestions,likeotherattributesofresources,requireanencodetask.GoalsG3,G4,andG5inﬂuenceeachother,leadingtothecross-cuttingsub-goals.Runtimedecisionsaffecttheutilization,bututiliza-tioninformsruntimedecisions.Similarly,timinginformationisanoutcomeofruntimedecisions,butlikeutilization,alsoinformsthem.ThisrelationshipbecamemoreapparenttousastheUtilizationgoalwasexpandedupon.G6:Export/Save.SharingofresultssupportstheCommunicationconcern.Thisisunchangedfromtheoriginaltaskanalysis.G7(New):ManageDatasets.Withmoredatasetsaswellasregres-sionanalysesandcomparisonsacrossversionsorprocessorcounts,ourcollaboratorsstarteddiscussingtheneedtomanagemultipledatasetsduringtheiranalyses.Wefocusonexecutiontracevisualizationinthisworkandthusdonotfurtherdiscussthisgoal.5TRAVELERWepresentthedesignofTraveler(Fig.1),avisualizationplatformforperformanceanalysisoftaskparallelexecutiontraces.InSect.5.1,weprovideanoverviewofTraveler’sviews,explaininghowtheymatchwiththefourdataitemstypesinourdata(intervals,primitives,re-sources,andcode)andhowwebuildahierarchyoflevelsofabstractionthataremeaningfulinthetrace.Wethendiscussdesignsofthemajorviews,temporal(Sect.5.2)andnon-temporal(Sect.5.3),andhowtheyfulﬁllourdataandtaskanalysis.Finallywediscussourimplementation(Sect.5.4)andstrategiesweusedtokeepthevisualizationresponsive.5.1AnOverviewofTravelerViewsInsupportofthedataandnumeroustasksdiscussedinSect.4,Travelerisaconﬁgurablemultiplecoordinatedviewsystem.Userscanre-size,arrange,hide,andcloseviewsasneededfortheiranalysisgoals.ThereareninetypesofviewsinTraveler,someofwhichtheusermayplacemultipletimeswithdifferentfacetsofthedata.Oftheviews,weconsiderthreetobethenativeviewsofthefourdataitemtypesinexecutiontraces.IntervalsandresourcestateareshowntogetherinaGanttView,awidely-usedidiomfortracedata(seeSect.3)thatleveragesuserfamiliarity.Primitivesareshownwiththeircontext(i.e.,creationprovenance)inanode-linkdiagramshowingtheprogram’sexecutiontree,followingtheidiomusedinAtria[38].Sourcecodeisshowninitsnativetextformat(Fig.1(f))withsyntaxhighlighting.ComplimentingtheGanttchart,whichcanshowindividualeventdetails,weprovidetwoothertemporalviewsathigherlevelsofab-stractionthataremeaningfultoperformanceanalysis:autilizationviewandanaggregatedGanttchartwhichsummarizesthebehaviorofmeaningfulgroupsoftasks.Travelerhastwoadditionalviewsforshowingsummarizedintervalorresourceattributes(metrics)intime,adifferentfacetoftheintervalsandresources.Ahistogramviewofintervaldurationprovidesanotherselectionandnavigationmechanismintothetracedata.Selectionsinthenon-temporalviewshighlightthecorrespondingintervalsintheGanttViewandshowtheirdistributionintimeontheUtilizationView.AnalystscanthenusetheUtilizationViewtocoarselynavigatetoatime-spanofinterestandthenusepanandzoomingfeaturestoﬁne-tunetheGanttView.TheSelectionInfoView(Fig.1(e))showsdetailssuchasadditionalattributedataforanysetofselecteditemsfromtheotherviews.5.2TemporalviewsTravelerhasﬁveviewsthatusetimeforthehorizontalaxis,aGanttchart,thenovelAggregatedGanttchart,aUtilizationView,andtwometricviews:asimpleLineChartandtheFunctionalBoxPlotView.TheUtilizationViewisﬁxedtothefulldurationoftheexecutiontrace.AllothertemporalviewshavelinkedpanningandzoomingaswellaslinkedrandomaccessthroughUtilizationViewbrushing.TheUtilizationView(Fig.1(a))showsthetotalutilizationovertimeusinganareachart.Theheightoftheareachartatanypixelisthetotalamountofresourceactivityinthattimespandividedbythetotaltimespan,suchthatthemaximumwouldbethetotalnumberofresources.ThisviewsupportsG5(understandingutilization)andatasummarylevel,cross-cutsub-goalCC.2,correlatingresourceusewithtime.TheUtilizationViewalsoactsasanavigationaidandprovidescontexttotheotherviews.Aninteractiverectangularbrushshowsandcanalterthetimespanintheothertemporalviews,supportingabstract/elaborateandreconﬁguretasks.Primitiveorgroupintervalselectionsfromotherviewswilldrawasecondareainyellow,denotingtheutilizationduetotheselection.Thisfeaturesupportscross-cutsub-goalsCC1andCC3,correlatingintervalsandprimitiveswithtime.Fig.3.GanttViewrepresentingparent-childdependencybetweentwointervals.Here,thehighlightedyellowintervalbarbhasparenta.bhasthreechildren—c,d,ande.TheGanttView(Fig.1(b))representsresourcestateovertimeasrowsandintervalsintimeasrectangularbarsontheresourcesonwhichtheyexecuted.Thisviewsupportscrosscuttingsub-goalsCC.1andCC.2,correlatingintervalsandresourceswithtime,aswellasG5.1,correlatingintervalswithresources.WelabelresourcesbytheirCPUandthreadIDascoreID−threadID.Inadditiontopanningandzoomingintime,userscanpanandzoomoverthespaceofresources.Userscanselectanindividualintervalonclick,whichwillhighlighttheintervalinyellowandupdatetheSelectionInfoViewandUtilizationView.Additionally,parent-childrelationshipsrelatedtotheselectedintervalwillbeshownusingyellowlinesdrawnbetweenthebars(Fig.3).Byshowingtheserelationships,userscanpanandzoomtofollowhotpaths(G3.2).Therelationshipsalsogivetheminsightintounderstandingruntimedecisions(G4).Wechosetoshowparent-childrelationshipson-demand-onlybe-causeshowingallofthemisinfeasibletointerpret.Whileintervalsofinterestcanbeselectedforfurtherexaminationthroughvisualinspec-tion,thenon-temporalviewsthathelppickprimitivesbyname,context,ordurationhelpnavigatetopotentialtargetsofinvestigation.AstheGanttViewisthenativedisplayoftheintervals,itmakesthedetailsofindividualeventsanddependenciesavailable,butcannotsummarizetheirbehavior.TheUtilizationViewontheotherhandistoohigh-leveltoseeallbutthelargestcollectionsofevents.Wethusaddaviewinbetweenthatsummarizessmallergroupsofrelatedintervals:theAggregatedGanttView.Fig.4.SelectingaprimitiveintheDependencyTreeViewwillhigh-lightinstancesofthatprimitive’ssubtreeintheGanttViewandcreateaggregatedbarsforthesubtreeintheAggregatedGanttView.TheAggregatedGanttView(Fig.1(c))providesatemporallayouttomeaningfulgroupsofintervals,asdeﬁnedbytheexecutiontreeoftheprogram.ItispopulatedusingtheDependencyTreeView(Sect.5.3).TheAggregatedGanttViewprovidesasimpliﬁedviewatahigherlevelofabstractionthanindividualintervalsoftheGanttViewbutamoredetailedlevelofabstractionthantheaggregatedprimitivesoftheexecutiontree,furthersupportingthecorrelationofprimitivesintime(cross-cutsub-goalCC3).EachbarintheAggregatedGanttViewrepresentsaspeciﬁcinstanceofaprimitivecreatedbyasequenceofdependenciesasshowninFig.4.Forexample,consideraprimitiveblockofcodewithinaforloop.Thoughthereareseveralblocksthroughouttheprogram,thechainofdependenciesleadingtoaparticularblockuniquelydeﬁnesitincomparisontotheothers.Becauseitisinaforloop,itrunsktimes.IfshownintheAggregatedGanttView,theblockwillgeneratekbars,showingwhereeachwasexecutedintime.Ratherthanshowingonlytheblockinterval,newaggregatedin-tervalsarecreatedfromalltheintervalsoriginallyspawnedbythatparticularblockinstance,inotherwords,anyintervaltheblockwasanancestorof.Thehorizontalpositionandlengthofeachbarshowsthestartingtimeofitsﬁrstintervalandtheendingtimeofitslast.Becausethedifferentintervalsspawnedbytheblockinstancemayoccurondifferentresources,wecannotassignittoasingleresource.Instead,welayoutthebarsinagreedyfashiontoavoidcollision.Thus,theverticalpositionshowshowmanyofthesebars(e.g.,loopiterations)runconcurrently.Withineachaggregatedbar,wedrawayellowareachartshowingtheutilizationduetothatinstanceofthesubtree.ThebackgroundofeachbarisshadedinpurplewiththesubsumedintervalsinthemainGanttViewcoloredthesameshade,aidingusersincorrelatingintervalswithprimitives(sub-goalG2.4).FunctionalBoxPlotandLineChartViews.AsexplainedinSect.4.2,performancecounter(metric)datacanbecollectedalongwiththetraceinoneoftwoways:sampledwiththeintervaleventsorsampledintime.Performancecountersdescribesomeattributeoftheresourceonwhichtheyaresampled.Travelerofferstwoviewstoshowthesemetricsintime,supportingcross-cutsub-goalCC.2,correlatingresourceusewithtime.Furthermore,sincetheseviewsarelinkedwiththeGanttViewandmultipleofeachoftheseviewsmaybeopenedwithdifferentperformancecounters,theyalsosupportcorrelatingresourceusewithresourceuse,sub-goalG5.2.Asperformancecounterdatamaybesampledirregularly,theyaremoremeaningfullyrepresentedasarate.Foraconsecutive(time1,value1)and(time2,value2)pairswheretime1>time2,therateiscalculatedas,rate=value1−value2time1−time2.Weusethisderivedrateinourperformancecounterviews.TheFunctionalBoxPlotviewsummarizesperformancecounterratesacrossresources.Wedrawthreelinesrepresentingthemaximumvalueacrossresources,theminimum,andtheaverage.Ashadedgrayareaaroundtheaverageshowsastandarddeviation.Fig.1(d)showstheFunctionalBoxPlotviewforthePAPI(PerformanceApplicationProgrammingInterface)[7]metricCPUcycles.5.3Non-temporalviewsTravelerhasfournon-temporalviews:theDependencyTree(executiontree)View,anIntervalHistogramView,aSourceCodeView,andaSelectionInfoView.WehavepreviouslydescribedtheSourceCodeViewandSelectionInfoView.Wediscusstheothertwoviewsbelow.TheDependencyTreeView(Fig.1(g))isthenativeviewforprimitives.WeleveragethisknowledgeanddesignfromAtria.Itisanode-linktreevisualizationwhereeverynoderepresentsadistinctprimitivecallasdeﬁnedbyitsdependencies(e.g.,theyellowlinesintheGanttView).Asanexample,awhileprimitivemaybegeneratedfrommultipleplacesinthesourcecode.Bydeﬁningthesequenceoftasksthatgeneratedaparticularwhileinterval,wecangroupallwhileprimitivesassociatedwiththesameoverallactioninthecode.Thisissimilartoacallingcontexttreeinserialorsynchronousprograms.Thedifferenceisthattheparentnode—theprimitivethatcreatedthechildnode—neednotwaitforitschildrentocomplete.TheDependencyTreeViewisalsoanexpressiontreedescribinghowthesourcecodeistransformedintotasktypeswithdependencieswhicharethenscheduledforexecution.EachnodeintheDependencyTreeViewrepresentsnumerousintervalsallwiththesameprimitivetypeandcontext.AswebuildtheDependencyTreeViewfromtheintervaldependenciesfoundinthetrace,wecanalsoderiveaggregatemetricsforthetotaltimeattributabletoeachnode.Weuseapurplevalueramptoindicatethisaggregatedtimevalue,supportingsubgoalsG3.1-G3.4inthesamewayAtriadid.SelectinganodeintheDependencyTreeViewwillhighlightthecorrespondingintervalsintheGanttView,drawahighlightedareaontheUtilizationViewshowingutilizationduetothenode,andgeneratethecorrespondingbarsintheAggregatedGanttView.Thislinkingsupportsthecross-cuttingsubgoalCC3,correlatingprimitiveswithtime.ThelinktotheGanttchartinparticularalsosupportssubgoalG2.4,relatingprimitivestointervals.Astheexecutiontreecangetquitelarge,weonlydrawouttheﬁrstﬁvelevelsbydefault.Userscancollapseorexpandsubtreesbyclickingonthearrowintheupperrightofeachnode.Toreduceclutter,wedonotlabeleverynode.Primitivenamesareavailableonhover.TheIntervalHistogramView(Fig.1(h))showsintervalsbinnedbytheirduration.Bydefault,allintervalsareshown.AdropdownmenuenablesﬁlteringtoaparticularprimitivecontextasintheDependencyTreeview.Binsinthehistogramcanbeselectedviabrushing.Whenselected,allintervalscontributingtoabinwillbehighlightedintheGanttViewandUtilizationView.Thisviewdirectlysupportsthesub-goalsG3.5andG3.6,analyzingtheintervaldistributionandﬁndingextremeintervals.Outliersappearasisolatedclustersofbarsonfarendsofthehistogram,asshowninFig.5(d).5.4ImplementationTravelerisaweb-basedclient-serverapplication.ItusesaUvicornserverthatcommunicateswiththefront-endusingfastapiinaREST-fulmanner.Theback-endpre-processestheOTF2ﬁle,buildingalldatastructuresneededfordatalookupandfastrenderingandstoringthemusingDiskCache[3].Additionally,theback-endrenderstheprimarydrawingspaceofalltemporalviewsaswellastheIntervalHistogramViewfordisplayingonthefrontendusingHTML5Canvas.Axesandbrushesareimplementedonthefront-endinJavascriptusingD3[6].Weprovideasystemdiagraminthesupplementalmaterial.DataStructures.Weusedsummedareatables[8]toenablefastgenerationofthetemporalandhistogramviewsandweusedanintervaltreeforfastlookupofdataattributesfortheSelectionInfoView.ThesedatastructuresarecalculatedatthetimethedataisinitiallygiventoTraveler,inaprocesswecallbundling.BundleddatasetsaresavedbyTravelersothepre-processingsteponlyoccursonce.Speciﬁcallywepre-calculatesummedareatablesforCPUutilization,hardwarecounters,anddurationcountforeachofthethread-corelocationandprimitives,bothindividuallyandcombined.Whenthefront-endsendsarequestwiththenumberofpixelsavailableandthetimerangeselected,weusetherelevantsummedareatablestogenerateabitmapofpixelvalueswhicharerenderedonthefrontendusingHTMLcanvas.Retrievingnewbitmapinformationinduceslatency,soweoverdrawtohidethisoverheadwhentheuserpanstheview.6EVALUATIONWevalidateTravelerthroughacasestudywhichidentiﬁedapreviouslyunknownperformancebugandresultedinchangestoourcollaborator’scode.ThisstudywasdonecollaborativelybetweenonememberoftheRuntimeTeamandonememberoftheVisualizationTeamandveriﬁedbytheRuntimeTeamPI.Wethenprovidefeedbackfromanon-authormemberoftheRuntimeTeamwhousedTraveleroverthecourseofseveralmonths.WealsodiscussfeedbackfromnoviceRuntimeTeammembersthatwegatheredduringhour-longevaluationsessionsonaclouddeployment.6.1CaseStudyWepresentacasestudyshowingtheutilityofTravelerinanalyzingperformanceinarealscenario.TheworkwascollaborationbetweenaRuntimeTeammember(RTM,apost-docwithseveralyearsofPhy-lanxexperience)andaVisualizationTeammember(VTM,agraduatestudent)tryingtounderstandthedifferencesinperformancebetweendifferentimplementationsofPhylanxforalineofresearchtheRTMwasleading.Theanalysistookplaceoverthecourseoffourmonthsin-terspersedwithotherprioritiesandactivitiesforbothteammembers,asperformanceanalysisisonlyonepartofthedomainexpert’sactivities.WeshowhowTravelerassistedinidentifyingandcomparingcom-putationalresourceutilizationamongmultipleexecutionsandhelpedrevealandultimatelyﬁxaperformancebug.AnalysisProblemandData.TheRuntimeTeammemberisinvesti-gatingpotentialbeneﬁtsofusingHalideinPhylanxincomparisontoBlaze.Halide[31]isaframeworkforautomaticallysynthesizingcodeformulti-platformsystemswithhighlycustomizabletaskschedulinganddatamanagementfeatures.Blaze[1]isanopen-sourceC++librarysupportinghighperformanceparallellinearalgebra.WerefertothePhylanxusingHalideasPhylanx-HalideandthePhylanxusingBlazeasPhylanx-Blaze.InexploringthedifferencesbetweenPhylanx-HalideandPhylanx-Blaze,theRTMuseddgemm[2],awell-knownmatrix-matrixkernel,asanexampleapplicationbecauseitexercisesmatrixmultiplication,scaling,andaddition.InitialperformanceresultsshowedthatthePhylanx-HalideversionwasnearlytwiceasfastasthePhylanx-Blazeversion.Totrytounderstandwhy,theRTMcollectedexecutiontraces.TheVTMusedTravelertoinvestigatethesetracesandthensharedﬁndingswiththeRTMviatext,screenshots,andmovies.InvestigationwithTraveler.ViewingbothexecutiontracesinTrav-eler,weopenedtheIntervalHistogramView(Fig.5)tocompare(GoalG3.4)thedistributionsinintervaldurations(G3.5).ThePhylanx-Blazedistributionismuchwider,withmanyintervalslongerthanthelongestonesinPhylanx-Halide,indicatingsometasksaretakingmuchlongerinPhylanx-Blaze.Weselectthelongintervalsinbothtraces(G3.6).ThehighlightedintervalsintheGanttshowusthetasksareshorterandmoreevenlydistributedinPhylanx-Halide.TheSelectionInfoViewFig.5.ThedistributionofintervalsinPhylanx-Blaze(left)andPhylanx-Halide(right).TheSelectionInfoView(a)showstheexactdurationoftheselectedbarswhiletheGanttView(b)showswheretheyoccurintimeandonwhatresources.TheUtilizationView(c)showstheirimpactcomparedtothewholeprogram,whichismuchhigherinPhylanx-Blaze.TheIntervalHistogramView(d)showsthelongestintervalsinbothhavebeenselectedviabrush.revealstheextremePhylanx-BlazeintervalissixtimeslongerthanthelongestoneinPhylanx-Halide,contributingtothelongerexecutiontime.Insight:Phylanx-Blazeintervalsrequiremoretimeforthesameworkandaremoreunbalanced.TheRTMsuspectsthattheremaybedatamovementdifferencesbecausedatamanagementisafeatureofHalide.WeopenmultipleFunctionalBoxPlotviewstochecktheL1andL2Cachemissrates(Sub-goalCC.2).(Figuresareavailableinthesupplementalmaterial.)Ahighermissratesuggestsmoretimeisbeingspentreadingfromslowermemory.WebrushovertheUtilizationViewtofocusonthesecondareaofhighactivityinthecomputation.WeseethatwhiletheﬂuctuationsinL1cachemissesaresimilar,thePhylanx-BlazeversionhasasteadilyincreasingrateofL2cachemisseswhilethePhylanx-Halideversionremainsﬂat.Insight:thePhylanx-Halideversionismanagingdatamoreeffectivelyassuspected.Duringthepreviousanalyses,wenotedthelonglow-utilizationperiodsbetweenthetwohigh-utilizationphasesoftheprogramintheUtilizationView(GoalG5).WeusedtheDependencyTreeViewtounderstandthemappingbetweenprimitivesneartheroot(highleveloperations)andutilization(Sub-goalCC.3).AsshowninFig.6(left),someofthelowutilizationcanbeattributedsolelytothedeclarationofthevariableA,asseenwiththeyellowareaintheutilizationview.WerepeatedtheprocesswithneighboringnodesforvariablesBandC—eachwastheonlyactiveprimitiveinaseparateareaoflowutilization.Insight:Thedeclarationsareserialized.Inthesourcecodeview,wesawthateachdeclarationwasoftheformvariable=np.ones((N,N)).Insight:Thedeclarationscouldbeexecutedconcurrently.TheRTMwasnotsurewhythiswashappening,sowebroughtittotheattentionoftheRuntimeTeamlead.TheRuntimeleadexplaineditwasaperformanceerrorbecausethewayinwhichthedgemmwasimplementeddidnotindicatetheoperationscouldbeparallelizedsafely.HesuggestedawaythattakesadvantageofPhylanx’sexpressiontreeparallelization.Afterupdatingthecode,weregeneratedtheOTF2data,resultinginFig.6(right).ThesmallergapbetweenthetwopeaksintheutilizationviewveriﬁesthatthedeclarationofthevariablesA,B,andCoccurredinparallel.ThisbugﬁxwasmergedintothePhylanxrepository.6.2FeedbackfromRuntimeTeamWediscussfeedbackcollectedfromRuntimeTeammembers.First,weinterviewaformerRuntimeTeammemberwhousedTravelerforseveralmonths.Then,weintroduceTravelertonoviceRuntimeTeammembersandgathertheirfeedback.FeedbackfromanExpertUser.OneRuntimeTeammember(R1)usedTraveleroveraperiodofsevenmonths.R1communicatedques-tionsandreportedbugsviae-mails.AftertheylefttheRuntimeTeam,weconductedasemi-structuredinterviewwithR1regardingtheirexpe-rience.WesummarizeR1’sfeedbackandassociatetheirgoalswithourtaskanalysis(Sect.4.3).R1saidtheyswitchedfromVampir[28]toTravelerbecausethelatterisfree.Theynoted“itwasassatisfyingasVampir”.R1describedtheirtypicalprocessasannotatingtheircode,collectingatracewiththeannotations,andthencheckinginTravelertoverifytheannotatedintervalswerescheduledastheirannotationsexpected.Thisanalysisrelatestosub-goalG5.1,correlatingintervalswithresourceuse.R1frequentlyusedtheGanttView,theUtilizationView,andtheSelectionInfoViewinthisendeavor.Theysaidtheyprimarilynavigatedviascrollingastheirtraceswerenotlarge.Later,theyswitchedfromtheprogramcomprehensionandveriﬁ-cationconcerntoaperformanceanalysisone.Fortheirperformanceanalysiswork,theysaidtheyfocusedonthedistributionofintervals(“tasks”)onresources(“cores”)andthedependenciesbetweenthem:“Ithinkweweremostlywantingtoseehowtasksaredistributedamongthecoresandhowtheyarebeing,howarethedependencies,howanothercoretakesthatpart,whatgetscontinuedonanothercore”.ThisisanotherexampleofG5.1,alongwithG4intermsoffollowingdependenciessetbytheruntime.WeaskedabouttheIntervalHistogramandtheDependencyTreeViewsasothersupportfortheirgoals.However,theynotedthesefeatureswerenotyetavailablewhiletheywereusingTraveler.WeaskediftheyalsousedVTunefortheirgeneralperformanceanalysis,asweareawareofotherRuntimeTeammemberswhouseit.TheyexplainedoncetheyﬁguredoutTraveler,theymostlyusedit,noting,“Travelerwasgivinguseverythingweneeded.”WeaskedaboutissuesinTraveler.R1discussedthebugsdiscoveredduringthedevelopmentprocess,whichtheyhadpreviouslye-mailedusabout,andourin-developmenttaggingsystemformanagingdatasets.NoviceTeamMemberSessions.WeconductedfeedbacksessionswithfournoviceRuntimeTeammembers(P1-P4)individually.Eachsessionwasonehourlongandconductedovervideoconferencing.Thesessionstartedwithabrieﬁng,followedbyademonstrationwiththedgemmdataset.Participantswerethenaskedtosharetheirscreenandattemptaseriesoftaskswithanewdatasetcollectedfromanexecutionofthekmeansalgorithm.Wethenaskedtheparticipantsabouttheirexperienceandthendebriefedthem.Priortothesession,theparticipantswereprovidedwithTravelerdocumentation,avideotutorial,andalinktoalivedemonstration.OnlyP4saidtheyviewedthesematerials.Wedesignedthefollowingtaskstoexercisethegoalsfromthetaskanalysis,asannotatedinparentheses.Eachtaskcouldbecompletedinmultipleways.ParticipantsstartedinthebaseTravelerconﬁgurationwithonlytheUtilization,Gantt,SelectionInfo,andSourceCodeviews.WeaskedtheparticipantstoloadtheFunctionalBoxPlotViewforE5:E1.Take5minutestoexplorethedataset.Whatdoyounotice?(G1)E2.Locatethelongestintervalbar.(G3,G4)E3.Findtheprimitivewithhighestoccurrence,intermsoftotalexe-cutiontime.(G3)Fig.6.Travelerhelpedusidentifyaperformancebugrelatedtoserializationofvariableinstantiation(left)leadingtoaﬁxthatshortensexecutiontime(right)andwasmergedintothePhylanxrepository.Ontheleft,weselectaprimitiveAintheDependencyTreeView(d)thatitisexecutingaloneasshowinalltemporalviews(a,b,c).Afterweidentiﬁedandﬁxedthisbug,weareabletocreatemultiplevariablesconcurrently(right).E4.LocatehighestCPUutilizationandﬁndtheresponsibleprimi-tive(s).(G2,G5)E5.ExploretherelationshipbetweenutilizationandL1/L2datacachemisses.(G3,G4,G5)Wethenconductedasemi-structuredinterviewwiththeparticipants.Thefollowingquestionswereaskedduringtheinterview:Q1.Whichviewhelpedthemosttoperformthetasks?Q2.whichfeaturedidyoulikemost?Q3.Whatothertoolsyouhaveusedandhowdotheycompare?Q4.Arethereadditionalfeatureswhichwecouldinclude?Q5.HowlonghaveyoubeenworkingwiththeHPXteam?Q6.Doyouhaveanyothercomments?P1hadnopriorexperiencewithHPX,P2hadninemonths,andP3had“afew”months.P4hadbeenwiththeteamfortwoyears,butnotworkedwithHPXfortheentiretime.P1-P3hadnoexperienceusingaperformancevisualizationtool.P4hadexperiencewithVTune.Duringthetaskphase,P1andP3struggledwiththesystemasawhole,includingoperationssuchasadjustingtabsandpanningtheview.Theydidnotcompleteanytasksexceptﬁndingthehighestutilization,soweomitdiscussingthemfurther.Thetranscriptsfortheirsessionsalongwiththeothersareavailableinthesupplementalmaterials.InE1,P2exploredmostoftheviews,startingbyreadingthesourcecode,explainingit,andthenusingtheDependencyTreeViewandUti-lizationViewtorecognizehighutilizationduetoaprimitivekmeanst.AsP2wasfamiliarwithHPXbutnotPhylanx,theyaskedquestionsaboutwhatsomeleafnodesinthetreedid.P4tookadifferentstrategyofbrowsingtheGanttViewviazooming.WeaskedwhytheydidnotusetheUtilizationViewtozoomfaster—theydidnotnoticethebrushwhichwasscaledtothefullchartatﬁrst.P4notedtheintervalsweremuchshorterincomparisontothetutorialtrace.P2completedE2,ﬁndingthelongestinterval,quicklywiththeIntervalHistogramView.P4triedbrowsingtheGanttViewbutwasconfusedbytheillusionofmanytinyintervalsasonelargebar.Withasuggestionfromthefacilitator,theycompletedthetask.InE3,ﬁndingtheprimtivewiththehighestoccurrence,P2lookedattheIntervalHistogramViewbeforebrowsingtheDependencyTreeViewanddeterminingtheanswer.P4browsedtheDependencyTreeViewbutdidnotsuggestananswer.Whenweexplainedtheresult,P4saidhehadnotunderstoodwhatwasbeingaskedandhadactuallynoticedthenodeofinterestfairlyearly.E4hadtwosub-trials—locatinghighestCPUutilizationandﬁndingouttheresponsibleprimitiveforthehighestCPUutilization.BothP2andP4wereabletoquicklydeterminethehighestutilizationandthensuccessfullydeterminedthesourceusingtheDependencyTreeViewandtrace-backdependenciesintheGanttView,althoughsomehintswereprovidedtoP4inthesecondpart.InE5participantswereaskedtoexplaindatacachemissesinasso-ciationwithCPUutilization.P2discernedtherelationshipbetweenthelevel1datacachemissandhowCPUutilizationaffectedthat.P4alsoidentiﬁedtheﬂuctuationsinlevel1datacachemisses.Neitherparticipantcommentedonlevel2datacachemiss.NoviceFeedbackDiscussion.P2wasabletocompletealltasks.InE1,theoverview(G1)task,theyexplainedtheprogramandwentastepfurtherwiththeinsightofidentifyinghighutilization(G5)andattributeittoaprimitive(CC.3),preemptivelyperformingtaskE4.Theyaccomplishedtheextremeinterval(E2:G3.6)andcorrelationofL1cacheandutilization(E5:CC.4,G5)quickly.Thelatterledtotheinsightthathigherutilizationledtomorecachemisses.E3,ﬁndingtheprimitiveresponsibleforthemosttime(CC.3)tookmoretimeastheyﬁrstselectedtheviewshowingdistributionoflengthsratherthanaggregatedtime.P4wasabletocompletemosttasksbutneededremindersdespitebeingtheonewhohadconsultedthematerialsbeforehand.WhileP2’sresultswereencouraging,weacknowledgethesearelimitedresults.Duringtheinterview,bothP2andP4saidtheDependencyTreeViewwasuseful.P2alsospokeabouttheUtilizationandFunctionalBoxPlotViews,withtheFunctionalBoxPlotbeingtheirfavorite.P4alsomentionedtheGanttView,sayingtheyneededboththatandtheDependencyTreeViewfortheirwork.Thelinkingbetweenmultipleviewswastheirmost-likedfeature.Intermsofrequestedfeatures,P2suggestedamulti-selectforinter-valbarsintheGanttView.P4suggestedcoloringtheintervalbarsbyametric,suchastheperformancecounters.Wenoticedsomeusabilityissues.Participantswerelessfamiliarwithbrushing,wantingtoclickontheIntervalHistogramViewbarsornotnoticingthebrushintheUtilizationView.Also,whentheGanttViewhasmanysmallintervals,itdrawsthemwiththeoutlinecolor(darkgray)only.Familiaruserscandistinguish,butnewusersthoughttheywereseeingonelargebar,suggestingothersigniﬁersareneededwhenintervalsaredense.LocalversusCloudPerformance.Intheevaluationsessions,wenoticedadditionallatencyinupdatingtheGanttView.Weproﬁledavarietyofinteractionsonthekmeanstestdataset(29Ktraceevents)deployedlocallyandonlineforthestudy.Locally,GanttViewupdatestookbetween446ms(singleclickselection)and3,643ms(zooming).Intheclouddeployment,theinteractionextentswerebetween907msand4,018msrespectively.Bothversionstookbetween63and1,863msforclient-siderendering,butthecloudversionexperienceda56.8%increaseinnetworktransferandresourceloadingtimes.Someofthedifferencemayalsobeduetothelimitationsofthecloudservicetierused,whichoffers500MBofRAMcomparedtothe16GBinthelocaldeployment.Moredetailsregardingthispreliminaryperformanceanalysisareinthesupplementalmaterials.Eveninthelocalcasewiththisrelativelysmalldataset,someupdatescouldtakeseconds,thoughnotallzoominteractionstookthatlong.Furtherperformanceanalysisandoptimizationisneededtoimproveinteractivescalability,includingacrossotherviewsandwithfocusonbothclientandserversideoperations.6.3LimitationsandThreatstoValidityInthecasestudy,theVisualizationTeammemberwastheprimaryuserofTravelerfortheﬁndingsshown,thoughtheRuntimeTeammemberhaduseditforoverviewspreviously.Thecasestudyresultedinnewinsights,butdidnotexercisetheusabilityofTravelerdirectlywithamemberofthetargetusergroup.TheinterviewwiththeexpertuserR1wasoverthreemonthssincetheyhadlastusedTravelerandsaidtheydidnotremembersomedetails.Also,R1’scasedidnotrequirealargedataset.TheiruseofTravelerwasbeforealloftheviewspresentedherewerecompleted,sowedonothavedeploymentfeedbackrelatedtothosenewerviews.Wecollectedfeedbackfromonlyﬁvepeople,ofwhichonlyonewasatrueexpert.Thus,ourresultsarepreliminaryandlimited.Further-more,aswearecollaboratorswiththeRuntimeTeam,andthoughwehadnotmetthenoviceusersbefore,allusersmayhavebeenbiasedtowardspositivefeedback.ManyofthenoviceusershadbeenworkingwiththeRuntimeTeamforayearorlessandthushadverylittleexperience.Wehadpilotedtheevaluationsessionwithoneexpertandonepersonwithpassingknowledge,becauseatthetimewedidrealizehownewtheteammemberswouldbecomparedtoprevioussessionswehaddonewiththeRuntimeteam.Thus,ourexplanationsmaynothavebeenappropriatetotheparticipants’experiencelevels.TheclouddeploymentofTravelerincurredmoreinteractionlatencythanthelocalversion,whichmayhaveaffectedtheparticipants’analy-sisprocess.However,bothversionscansometimesexperienceseveralseconddelayswiththegivendatasets,mitigatingthedifferences.7REFLECTIONSANDLESSONSLEARNEDWereﬂectonthedesignofTraveler,inparticularon(a)ourobserva-tionsregardinganewvisualizationinanongoingcollaborationwithrapidlychangingconcernsaswellas(b)ourexperiencewithmulti-scale,conﬁgurabledesignsforexecutiontracedata.Wewereabletoleverageanexistingtaskanalysis,buttherewerechallengesasthedatasigniﬁcantlychanged.Thetaskanalysispre-sentedinSect.4.3isarevisionofataskanalysisperformedearlierinthecollaborationwhenwewerefocusingonexecutiontreeproﬁledata—datathatisaggregatedbyprimitivecontext.Aswehadbefore,wecontinuedtotracktasksoverourmeetings,reinforcingtasksthatre-peatedovertimewhilede-prioritizingtasksthatappearedinfrequently.Thehigherlevelsofthetaskanalysis,whichwereferredtoasum-brellaconcernsandgoals,weremostlyunchanged,whilesub-goalsproliferated.Therelativestabilityofgoalsgaveusconﬁdenceinourprioritizationoffeatures,especiallyoneswherethenewdataallowedustoexpandoursupportforanexistinggoalorsub-goal.Furthermore,asthemanyofthegoalsbehindtheearlierworkweremaintainedovertime,wewereabletotransferpartsofthepreviousvisualizationde-signasaviewinTraveler,againwithaprioritizationofwhichdesignfeaturesshouldbeported.However,weranintodifﬁcultiesattheabstractvisualizationtasklevelbecausetheprimarydataabstractionchangedfromtheexecutiontreegraphtoaparallelexecutiontrace.Withtheexecutiontree,wehadappliedthenetworktasktaxonomyofLeeetal.[23],whichnolongerfullydescribedourdata.Wechosetouseanothertasktaxonomy[40]intandemanddescribeneedstoourbesteffort.Wedidnotﬁndthisprocessashelpfulasinthepreviousproject,wherethetaskssoclearlypointedtoavisualidiom.Wequestionhowmuchrichnesswasaddedoveroursub-goals.Theseexperiencesmayindicatethateitherthesub-goalsareenough,weneedtofurthersub-dividesub-goals,orweneedtoﬁndabetterﬁtindescribingtheperformanceanalysisprocess.Thereismuchmoreopportunitytodesignacrossexperiencelev-els,butitisunclearhowtoprioritize.ThenewestRuntimeTeammembersstruggledtouseTraveler.Thosewithalittlemoreexperiencecompletedmosttasks,thoughsomewithhelp.Ourdomainexpertusersaidtheywereabletoswitchfromacommercialtracevisualizationtoolseamlesslybutdidnotexplorenewerviews.IntegratingsomeformoftrainingintoTravelermayhelpallofthoseclassesofusers.Weoffereddocumentationwithexampleanalyses,images,andamovie,buttheoneparticipantwhoengagedwiththemstillhaddifﬁ-culties.Itisunclearhowmuchtrainingisnecessaryandhowitcanbedoneinascalablemanner.Immersivepractices[15]duringthecasestudyhelpedreﬁnethetool.EarlyTravelerdevelopmentusedseveraldatasetstotestfeaturesandvisualizationperformance,buttherewerenotanalysisgoalsas-sociatedwiththem.Thecasestudyprovidedarealanalysisgoal.Bydrivingthevisualizationthroughthecasestudy,theVisualizationTeamidentiﬁednewbugsandperformancebottlenecksinTraveleraswellasworkﬂowandinteractionissues.Itisbeneﬁcialtoautomatetechniquesfordeploymentassoonaspossible,butunfortunatelynotalwayspractical.Asthisdesignstudyisacollaborationwitharapidlydevelopedopen-sourceproject,meaningfuldata,e.g.,datarepresentingthelateststateoftheruntime,wasconstantlychanging.AutomatingthepipelinefromlibraryupdatestoapplicationupdatestonewtracedatarepresentingthoseupdatestoTraveler’spre-processingandultimatelythevisualizationwasaboontokeepingtheVisualizationTeaminstep.However,havingautomatedourownpipeline,weoverlookedthepipelinesofourcollaborators.RuntimeTeammemberswereoftenunawareofnewfeaturesanddidnotfetchthelatestTravelerversion.Multiplelevelsofabstractionbetweenoverviewanddetailhelpedusnavigatethetrace.Thescaledifferencebetweentheentireexe-cutionlengthofthetrace,representedbytheUtilizationView,andindividualintervals,shownintheGanttView,isvast.Weimplementedmultiplelevelsofabstractioninbetween,leveragingtheknownstruc-turesofthesourcecode,whichorganizesbyline,andtheindividualprimitiveswithinalineofsourcecode,asaccessedthroughtheDepen-dencyTreeViewandAggregatedGanttView.Weusedtheseintermedi-aryabstractionstodiscoverthevariableinstantiationperformancebuginourcasestudy.Participantsmademuchuseoftheconﬁgurableviews.Theoverviewwastheonlyconstant.Duringourevaluationsessions,weobservedthateachparticipantrearrangedandresizedviewsthroughoutthetasks.ThisbehaviorisresonantasTravelerhasmanyviews,someofwhichsupportfewersub-goalsthanothers,sousersconﬁguringtheviewsforasub-goaloffocuswasintendedbythedesign.Wedidnotnoticetrendsintheirarrangements,butournumberofparticipantswassmall.Wedidnoticeoneconstantintheirchoiceofviews—theUtilizationViewwasalwayspresent.Itservedasamajornavigationalaidfortemporalviewsaswellasrepresentedoneofthehighlevelgoalsofperformanceanalysis,G5,understandingutilization.8CONCLUSIONWepresentedthedesignofTraveler,ahighlylinkedmulti-viewcoor-dinatedvisualizationforvisualexplorationoftaskparallelexecutiontraces.Tomanagethevastscaledifferencesinthetracedataandtheirregularnatureofasynchronoustaskschedulinginawayuserscouldrelatetotheircode,weintroducedlinkedexecutiontreeandaggregatedGanttviews.Wefurthersupportedanalysistaskswiththroughlinkedperformancecountersummariesandanintervalhistogram.Inourcasestudy,wewereabletoexplainperformancebehaviorofaruntimeandfoundaperformancebugthatwasultimatelyﬁxedandcommit-tedtoourcollaborator’srepository.Inadditiontoourvisualizationdesignandstrategy,throughthisdesignstudywecontributefurtherinsightsaboutongoingdesigncollaborations,adaptingtaskanalysesandconsiderationsforthechangingteam.ACKNOWLEDGMENTSThisworkwassupportedbytheUnitedStatesDepartmentofDefensethroughDTICContractFA8075-14-D-002-007,theDepartmentofEnergyunderDE-SC0022044,andtheNationalScienceFoundationunderNSFIIS-1844573.REFERENCES[1]Blaze.https://bitbucket.org/blaze-lib/blaze/.Accessed:2021-09-10.[2]dgemm.https://docs.oracle.com/cd/E19422-01/819-3691/dgemm.html.Accessed:2022-03-24.[3]Diskcache:Diskbackedcache.https://grantjenks.com/docs/diskcache/.Accessed:2022-03-29.[4]L.Adhianto,S.Banerjee,M.Fagan,M.Krentel,G.Marin,J.Mellor-Crummey,andN.R.Tallent.Hpctoolkit:Toolsforperformanceanalysisofoptimizedparallelprograms.ConcurrencyandComputation:PracticeandExperience,22(6):685–701,2010.[5]S.Ashby,P.Beckman,J.Chen,P.Colella,B.Collins,D.Crawford,J.Dongarra,D.Kothe,R.Lusk,P.Messina,etal.Theopportunitiesandchallengesofexascalecomputing.SummaryReportoftheAdvancedScientiﬁcComputingAdvisoryCommittee(ASCAC)Subcommittee,pp.1–77,2010.[6]M.Bostock,V.Ogievetsky,andJ.Heer.D3data-drivendocuments.IEEEtransactionsonvisualizationandcomputergraphics,17(12):2301–2309,2011.[7]S.Browne,J.Dongarra,N.Garner,G.Ho,andP.Mucci.Aportableprogramminginterfaceforperformanceevaluationonmodernprocessors.Theinternationaljournalofhighperformancecomputingapplications,14(3):189–204,2000.[8]F.C.Crow.Summed-areatablesfortexturemapping.InProceedingsofthe11thAnnualConferenceonComputerGraphicsandInteractiveTechniques,SIGGRAPH’84,p.207–212.AssociationforComputingMachinery,NewYork,NY,USA,1984.doi:10.1145/800031.808600[9]A.Drebes,A.Pop,K.Heydemann,A.Cohen,andN.Drach-Temam.Aftermath:Agraphicaltoolforperformanceanalysisanddebuggingofﬁne-grainedtask-parallelprogramsandrun-timesystems.MULTIPROG,2014.[10]D.Eschweiler,M.Wagner,M.Geimer,A.Kn¨upfer,W.Nagel,andF.Wolf.Opentraceformat2:Thenextgenerationofscalabletraceformatsandsupportlibraries.vol.22,pp.481–490,012012.doi:10.3233/978-1-61499-041-3-481[11]N.Ezzati-JivanandM.R.Dagenais.Multi-scalenavigationoflargetracedata:Asurvey.ConcurrencyandComputation:PracticeandExperience,29(10):e4068,2017.[12]T.Fujiwara,J.K.Li,M.Mubarak,C.Ross,C.D.Carothers,R.B.Ross,andK.-L.Ma.Avisualanalyticssystemforoptimizingtheperformanceoflarge-scalenetworksinsupercomputingsystems.VisualInformatics,2(1):98–110,2018.[13]S.L.Graham,P.B.Kessler,andM.K.McKusick.Gprof:Acallgraphexecutionproﬁler.ACMSigplanNotices,39(4):49–57,2004.[14]Y.Guo,S.Guo,Z.Jin,S.Kaul,D.Gotz,andN.Cao.Asurveyonvisualanalysisofeventsequencedata.IEEETransactionsonVisualizationandComputerGraphics,2021.[15]K.W.Hall,A.J.Bradley,U.Hinrichs,S.Huron,J.Wood,C.Collins,andS.Carpendale.Designbyimmersion:Atransdisciplinaryapproachtoproblem-drivenvisualizations.IEEETransactionsonVisualizationandComputerGraphics(Proc.IEEEInfoVis2019),26(1):109–118,2020.doi:10.1109/TVCG.2019.2934790[16]B.Haugen,S.Richmond,J.Kurzak,C.Steed,andJ.Dongarra.Visualiz-ingexecutiontraceswithtaskdependencies.InProceedingsofthe2ndWorkshoponVisualPerformanceAnalysis,VPA,Nov2015.[17]A.Huynh,D.Thain,M.Pericas,andK.Taura.DAGViz:ADAGvisual-izationtoolforanalyzingtask-parallelprogramtraces.InProceedingsofthe2ndWorkshoponVisualPerformanceAnalysis,VPA,Nov2015.[18]K.E.Isaacs,P.-T.Bremer,I.Jusuﬁ,T.Gamblin,A.Bhatele,M.Schulz,andB.Hamann.Combingthecommunicationhairball:Visualizingparallelexecutiontracesusinglogicaltime.IEEEtransactionsonvisualizationandcomputergraphics,20(12):2349–2358,2014.[19]K.E.Isaacs,A.Gim´enez,I.Jusuﬁ,T.Gamblin,A.Bhatele,M.Schulz,B.Hamann,andP.-T.Bremer.Stateoftheartofperformancevisualization.InEuroVis(STARs),2014.[20]B.Karran,J.Tr¨umper,andJ.D¨ollner.Synctrace:Visualthread-interplayanalysis.InProceedingsofthe1stWorkingConferenceonSoftwareVisualization,VISSOFT,p.10.IEEEComputerSociety,2013.doi:10.1109/VISSOFT.2013.6650534[21]C.Kelly,S.Ha,K.Huck,H.VanDam,L.Pouchard,G.Matyasfalvi,L.Tang,N.D’Imperio,W.Xu,S.Yoo,etal.Chimbuko:Aworkﬂow-levelscalableperformancetraceanalysistool.InISAV’20InSituInfrastructuresforEnablingExtreme-ScaleAnalysisandVisualization,pp.15–19.2020.[22]S.P.Kesavan,T.Fujiwara,J.K.Li,C.Ross,M.Mubarak,C.D.Carothers,R.B.Ross,andK.-L.Ma.Avisualanalyticsframeworkforreviewingstreamingperformancedata.In2020IEEEPaciﬁcVisualizationSympo-sium(PaciﬁcVis),pp.206–215.IEEE,2020.[23]B.Lee,C.Plaisant,C.S.Parr,J.-D.Fekete,andN.Henry.Tasktaxonomyforgraphvisualization.InProceedingsofthe2006AVIBELIVWorkshop,BELIV’06,pp.1–5.ACM,2006.doi:10.1145/1168149.1168168[24]J.K.Li,T.Fujiwara,S.P.Kesavan,C.Ross,M.Mubarak,C.D.Carothers,R.B.Ross,andK.-L.Ma.Avisualanalyticsframeworkforanalyzingpar-allelanddistributedcomputingapplications.In2019IEEEVisualizationinDataScience(VDS),pp.1–9.IEEE,2019.[25]A.Muddukrishna,P.A.Jonsson,A.Podobas,andM.Brorsson.GrainGraphs:OpenMPperformanceanalysismadeeasy.InProceedingsofthe21stACMSIGPLANSymposiumonPrinciplesandPracticeofParallelProgramming,PPoPP,pp.28:1–28:13.ACM,2016.doi:10.1145/2851141.2851156[26]C.Muelder,F.Gygi,andK.-L.Ma.Visualanalysisofinter-processcommunicationforlarge-scaleparallelcomputing.IEEETransactionsonVisualizationandComputerGraphics,15(6):1129–1136,2009.[27]C.Muelder,B.Zhu,W.Chen,H.Zhang,andK.-L.Ma.Visualanalysisofcloudcomputingperformanceusingbehaviorallines.IEEEtransactionsonvisualizationandcomputergraphics,22(6):1694–1704,2016.[28]W.E.Nagel,A.Arnold,M.Weber,H.-C.Hoppe,andK.Solchenbach.Vampir:Visualizationandanalysisofmpiresources.1996.[29]D.K.Osmari,H.T.Vo,C.T.Silva,J.L.Comba,andL.Lins.Visualizationandanalysisofparalleldataﬂowexecutionwithsmarttraces.In201427thSIBGRAPIConferenceonGraphics,PatternsandImages,SIBGRAPI,pp.165–172,Aug2014.doi:10.1109/SIBGRAPI.2014.2[30]V.G.Pinto,L.Stanisic,A.Legrand,L.M.Schnorr,S.Thibault,andV.Danjean.Analyzingdynamictask-basedapplicationsonhybridplat-forms:anagilescriptingapproach.2016.[31]J.Ragan-Kelley,A.Adams,D.Sharlet,C.Barnes,S.Paris,M.Levoy,S.Amarasinghe,andF.Durand.Halide:Decouplingalgorithmsfromschedulesforhigh-performanceimageprocessing.CommunicationsoftheACM,61(1):106–115,2017.[32]J.Reinders.VTuneperformanceanalyzeressentials,vol.9.IntelPressSantaClara,2005.[33]N.Reissmann,M.Jahre,andA.Muddukrishna.TowardsaggregatedGrainGraphs.InProceedingsoftheFourthInternationalWorkshoponVisualPerformanceAnalysis,VPA,nov,2017.[34]A.Sanderson,A.Humphrey,J.Schmidt,andR.Sisneros.Couplingtheuintahframeworkandthevisittoolkitforparallelinsitudataanalysisandvisualizationandcomputationalsteering.InInternationalConferenceonHighPerformanceComputing,pp.201–214.Springer,2018.[35]M.Sedlmair,M.Meyer,andT.Munzner.Designstudymethodology:Reﬂectionsfromthetrenchesandthestacks.IEEEtransactionsonvisual-izationandcomputergraphics,18(12):2431–2440,2012.[36]C.Sigovan,C.W.Muelder,andK.-L.Ma.Visualizinglarge-scaleparallelcommunicationtracesusingaparticleanimationtechnique.InComputerGraphicsForum,vol.32,pp.141–150.WileyOnlineLibrary,2013.[37]J.VetterandJ.S.Vetter.Contemporaryhighperformancecomputing.ChapmanandHall/CRC,2017.[38]K.Williams,A.Bigelow,andK.E.Isaacs.Visualizingamovingtarget:Adesignstudyontaskparallelprogramsinthepresenceofevolvingdataandconcerns.IEEETransactionsonVisualizationandComputerGraphics(ProceedingsofInfoVis’19),Jan.2020.doi:10.1109/TVCG.2019.2934285[39]C.Xie,W.Xu,andK.Mueller.Avisualanalyticsframeworkforthedetectionofanomalouscallstacktreesinhighperformancecomputingapplications.IEEEtransactionsonvisualizationandcomputergraphics,25(1):215–224,2018.[40]J.S.Yi,Y.ahKang,J.Stasko,andJ.A.Jacko.Towardadeeperun-derstandingoftheroleofinteractionininformationvisualization.IEEEtransactionsonvisualizationandcomputergraphics,13(6):1224–1231,2007.[41]O.Zaki,E.Lusk,W.Gropp,andD.Swider.Towardscalableperfor-mancevisualizationwithjumpshot.TheInternationalJournalofHighPerformanceComputingApplications,13(3):277–288,1999.[42]I.Zhukov,C.Feld,M.Geimer,M.Knobloch,B.Mohr,andP.Saviankou.Scalascav2:Backtothefuture.InToolsforhighperformancecomputing2014,pp.1–24.Springer,2015.Traveler:NavigatingTaskParallelTracesforPerformanceAnalysis–SupplementalMaterialSayefAzadSakin,AlexBigelow,R.Tohid,ConnorScully-Allison,CarlosScheidegger,StevenR.Brandt,ChristopherTaylor,KevinA.Huck,HartmutKaiser,KatherineE.Isaacs1GUIDETOSUPPLEMENTALMATERIALSThisdocumentcontainsdescriptionofallsupplementalmaterialﬁles(below).WethenprovidemoredetailsregardingtheTravelersystemdesign,includinglinkstotherepositoryandlivedemo.Wefollowthiswithdetailsaboutthecasestudysettingsandﬁguresthatwecouldnotﬁtinthemaindocument.Finally,weprovidedetailsregardingtheprocedureforourpreliminaryquantitativeperformanceanalysisfortheGanttView.2INCLUDEDFILESAllmaterialsareincludedintheaccompanying.zipﬁleas:•TravelerDemonstration.mp4(Length6minute28seconds)-VideodemonstrationofavailablefeaturesofferedbyTravelerforperformanceanalysisoftaskparalleltraces.•TaskAnalysisUpdateAnonymized.md-Taskanalysis.•CaseStudyAnalysis.md-CaseStudySummaryPresentedtotheRuntimeTeam.•cachemisses.JPG-CachemissreportedtotheRuntimeteam.•CaseStudyFeedbackEmail1.txt-Firstfeedbackemailsonthecasestudybytheruntimeteam.•CaseStudyFeedbackEmail2.txt-Secondfeedbackemailsonthecasestudybytheruntimeteam.•ContinuousDeploymentEmails.txt-Emailsduringcontinuousdeployments.•interviewscriptR1.txt-Interviewscriptforcollectingfeedbackfromnon-authoermember(R1)ofruntimeteam.•recordingtranscriptR1.txt-InterviewRecordingtranscriptofR1.•transcriptR1coded.txt-CodedinterviewrecordingtranscriptofR1.•R1codesummary.md-Mergedcodesandsummaryofinter-viewrecordingtranscriptofR1.•interviewscript2.txt-Interviewscriptforcollectingfeedbackfromnoviceteammembersofruntimeteam.•SayefAzadSakinandConnorScully-AllisonarewiththeUniversityofArizona.E-mail:sayefsakin@email.arizona.edu.•AlexBigelowiswithStardog.•R.Tohid,StevenR.Brandt,andHartmutKaiserarewithLouisianaStateUniversity•CarlosScheideggeriswithRStudio.•ChristopherTayloriswithTacticalComputingLabs.•KatherineE.IsaacsiswiththeUniversityofUtah.E-mail:kisaacs@sci.utah.edu.Manuscriptreceivedxxxxx.201x;acceptedxxxxx.201x.DateofPublicationxxxxx.201x;dateofcurrentversionxxxxx.201x.Forinformationonobtainingreprintsofthisarticle,pleasesende-mailto:reprints@ieee.org.DigitalObjectIdentiﬁer:xx.xxxx/TVCG.201x.xxxxxxx•TravelerIntro.md-AnintroductorydocumentationofTravelerdescribingallavailablefeatures.•TravelerSampleTasks.md-Astepbystepwalk-throughwithscreenshotsofsomesampletasksinTraveler.•interviewrecordingtranscriptP1.txt-InterviewrecordingtranscriptofP1.•interviewrecordingtranscriptP1coded.txt-Codedinter-viewrecordingtranscriptofP1.•interviewrecordingtranscriptP1summary.md-MergedcodesandsummaryofinterviewrecordingtranscriptofP1.•interviewrecordingtranscriptP2.txt-InterviewrecordingtranscriptofP2.•interviewrecordingtranscriptP2coded.txt-Codedinter-viewrecordingtranscriptofP2.•interviewrecordingtranscriptP2summary.md-MergedcodesandsummaryofinterviewrecordingtranscriptofP2.•interviewrecordingtranscriptP3.txt-InterviewrecordingtranscriptofP3.•interviewrecordingtranscriptP3coded.txt-Codedinter-viewrecordingtranscriptofP3.•interviewrecordingtranscriptP3summary.md-MergedcodesandsummaryofinterviewrecordingtranscriptofP3.•interviewrecordingtranscriptP4.txt-InterviewrecordingtranscriptofP4.•interviewrecordingtranscriptP4coded.txt-Codedinter-viewrecordingtranscriptofP4.•interviewrecordingtranscriptP4summary.md-MergedcodesandsummaryofinterviewrecordingtranscriptofP4.•travelerqeval.xlsx-Quantitativeanalysisspreadsheet.•QuantitativeEval.zip-InspectionrecordsofGoogleChromeduringquantitativeanalysis.3TRAVELERTravelerlivedemolink(herokuapp.com):TravelerTravelerGithublocationlink:Traveler-gitTravelerSystemArchitecture:Travelersystemarchitectureispro-videdinFig.1.TheTravelerfollowsMVC(model-view-controller)designpatternfordevelopingtheuserinterface,partitioningprogram-minglogic,andbackenddatahandling.Whilelogicandcomponentsforthefrontend(viewandcontroller)arewrittenonjavascriptandpresentedonaninteractiveweb-interface,thelogicforbackenddatastructure,handling,parsing,storing,queryingarewrittenonpython.ThelibrariesandprogramminglanguagesusedinthebackendandfrontedaresummarizeinTable1andTable2respectively.arXiv:2208.00109v3  [cs.HC]  3 Sep 2022Fig.1.TravelerSystemArchitecture.TheFrontendinterfacecontainstheinteractiveviews.Thebackendreads,stores,andpreapretracedataforthefrontendinterface.AnintermediateAPIinterfaceisusedtosupplydatabetweenthebackendandfrontendinterface.Table1.Librariesandlanguagesusedinthebackendnewick≥1.0.0,sortedcontainers≥2.4.0,aioﬁles≥0.5.0,fastapi==0.65.2,uvicorn==0.11.7,python-multipart≥0.0.5,diskcache≥4.1.0,numpy≥1.19.1,cfﬁ≥1.14.1,intervaltree-[Redacted]4CASESTUDYFig.2showsthedifferencesbetweencachebehaviorthatTravelerhelpedusidentify.AllrelevantexperimentsforthecasestudywasconductedontheRos-tamclusterattheCenterforComputationandTechnologyatLouisianaStateUniversity(LSU).TheplatformspeciﬁcationissummarizedinTa-ble3.ThelibrariesusedduringthecasestudyhavebeensummarizedinTable4.5GANTTVIEWPERFORMANCEANALYSISWeconductaquantitativeproﬁlingofTravelerbyestimatingthein-teractiontime,thetimedifferencebetweenuser’sinteractionwiththeinterface(mouseclick,scrolling,panning)andinterfaceupdateﬁnishtime.WeutilizedtheperformanceproﬁlingtoolofGoogleChrometoconductthequantitativeanalysis.Weexecuteourexperimentwhilerun-ningtheTravelerserverbothlocallyandonaCloudplatform.WeusedGoogleChromeclientbrowsertobrowsetheTravelerinterface.Thenusingtheinspectfeature,werecordedourinteractionsandconductedproﬁling.Thelocalplatformspeciﬁcationis,•CPU:IntelCorei7-8750HCPU@2.20GHzTable2.Librariesandlanguagesusedinthefrontendukijs/ui≥0.2.5,codemirror≥5.60.0,d3≥6.6.1,golden-layout≥1.5.9,jquery≥3.6.0,less≥4.1.1,oboe≥2.1.5,uki≥0.7.9Table3.RostamClusterSpeciﬁcationCPUModelIntel(R)Xeon(R)Gold5118CUUClockSpeed2.30GHzNumberofCores24RAM96GBTable4.LibraryversionslibraryCommitHPXdc79a36c92Phylanx295b5f82ccHalideVersion12.0.1Phylanx-Halide12ab94bc3aBlazec4d9e85414BlazeTensor4b6ec2c6b2Travelerea668d7349Fig.2.TravelerhelpsidentifycachebehaviordifferencesbetweenPhylanx-Blaze(top)andPhylanx-Halide(bottom).TheFunctionalBoxPlotsofL1(a)andL2(b)cachemissratesshowtheL2raterisessteadilyduringtheexecutioninPhylanx-BlazewhilethePhylanx-Halideversionremainsﬂat.•RAM:16GB•OS:Windows10Duringtheanalysis,theremoteplatformspeciﬁcationis,•CloudPlatform:FreeHerokuDyno.•RAM:512MB.•OS:Ubuntu20.04TherecordedproﬁleddataisinQuantitativeEval.zipandsummarizedinteractionsovertheGanttViewisintravelerqeval.xlsx.