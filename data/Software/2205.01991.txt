2
2
0
2

y
a
M
4

]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[

1
v
1
9
9
1
0
.
5
0
2
2
:
v
i
X
r
a

MateriApps LIVE! and MateriApps Installer:
Environment for starting and scaling up materials
science simulations

Yuichi Motoyamaa, Kazuyoshi Yoshimia, Takeo Katoa, Synge Todob,c,a

aInstitute for Solid State Physics, The University of Tokyo, Chiba 277-8581, Japan
bDepartment of Physics, The University of Tokyo, Tokyo 113-0033, Japan
cInstitute for Physics of Intelligence, The University of Tokyo, Tokyo 113-0033, Japan

Abstract

In our current era, numerical simulations have become indispensable theo-
retical and experimental tools for use in daily research activities, particularly
in the materials science ﬁelds. However, the installation processes for such
simulations frequently become problematic because they depend strongly on
the device environment, and troubleshooting those processes is a challeng-
ing task for beginners. To minimize such diﬃculties, we created MateriApps
LIVE! and MateriApps Installer, which can solve most of the related issues.
Speciﬁcally, MateriApps LIVE! oﬀers a virtual environment in which users
can quickly try out computational materials science simulations on a per-
sonal computer while MateriApps Installer provides a comprehensive set of
shell scripts for use when installing software on Unix, Linux, macOS, and
supercomputer systems. Herein, we provide detailed descriptions of Materi-
Apps LIVE! and MateriApps Installer together with illustrative examples of
their use.

Keywords: Materials science simulation, High-performance computing,
Open-source software, Virtual machine, Strongly correlated systems,
Quantum chemistry, First-principles calculation, Molecular dynamics,
Visualization

Preprint submitted to SoftwareX

May 5, 2022

 
 
 
 
 
 
C1 Current code version

C2 Permanent link to code/repository

used for this code version

3.3 (MateriApps LIVE!), 1.1.0 (MateriApps
Installer)
https://sourceforge.net/projects/materiappslive
(MateriApps
https://github.com/wistaria/MateriAppsInstaller
(MateriApps Installer)

LIVE!),

C3 Code Ocean compute capsule
C4 Legal Code License
C5 Code versioning system used
C6 Software code languages, tools, and

GPL v3
git
shell script

services used

C7 Compilation requirements, operat-

Unix, Linux, macOS, Windows

C8

ing environments & dependencies
If available Link to developer docu-
mentation/manual

C9 Support email for questions

mainstaller-dev@issp.u-tokyo.ac.jp

Table 1: Code metadata

1. Motivation and Signiﬁcance

Numerical simulations are now indispensable tools for both theorists and
experimentalists in materials science because precise simulations can help
elucidate mechanisms behind novel phenomena, predict the various physical
properties of new materials, and help identify candidate materials with de-
sired performance characteristics. In computational materials science, new
methods are being proposed daily and a wide range of software is being devel-
oped actively. Now, because of diverse cutting-edge software developments,
users can easily employ highly parallelized numerical simulations based on
eﬃcient algorithms and state-of-the-art functionalities without the necessity
of writing code by themselves. In an eﬀort to consolidate and disseminate in-
formation on materials science software, we launched the MateriApps portal
site for material science simulations in 2013 [1, 2], thus providing a well-
organized forum where users could quickly search and ﬁnd materials science
software with desired functionalities, as well as obtain detailed information
on each application.

However, while the promotion of such software dissemination activities
requires preparing environments in which users can quickly start testing ma-
terials science software, the process of installing such software frequently
becomes problematic. This is because most such software requires the use
of a command-line interface on the terminal window, which is an extremely

2

high barrier for beginners to overcome. Furthermore, even during hands-on
software sessions in which instructors teach software installation processes in
detail, such procedures are still troublesome because they depend on the par-
ticipant’s personal computer (PC) environment. Nevertheless, it is clear that
most such issues could be resolved by utilizing an environment in which users
can easily install software without concerning themselves with operating sys-
tem (OS) and software details. For this purpose, we developed MateriApps
LIVE! [3], which oﬀers a virtual environment in which users can quickly try
out computational materials science simulation on PCs.

Suppose users want to execute simulations for real problems that require
signiﬁcant system resources. In such cases, virtual environments are not prac-
tical because the memory size is minimal, and there is a non-negligible virtu-
alization overhead. In addition, there are numerous situations where virtual
environments are unavailable due to machine architectures, company regula-
tions, computer system operating policies, and other issues. In those cases,
users must install and maintain the software by themselves while also mak-
ing the appropriate setting changes to the compiler options and numerical
libraries that will leverage the computer system’s performance. Another crit-
ical issue is the need to manage the installation scripts consistently and orga-
nize them appropriately for reuse. This is particularly important when prein-
stalling software on large-scale supercomputers. To overcome these problems,
we have developed MateriApps Installer [4], which provides a comprehensive
set of shell scripts for software installations on Debian GNU/Linux (Ubuntu),
CentOS (RedHat), macOS, and many supercomputer system environments.
We summarize common usage images of MateriApps, MateriApps LIVE!,
and Materials Installer in Fig. 1 (a). First, users utilize the MateriApps portal
site to ﬁnd the suitable software for their purposes. Next, they try software
on their PCs using MateriApps LIVE!. Finally, if they hope to maximize
software’s performance, they start to use MateriApps Installer. The target
computers that are assumed in MateriApps LIVE! and MateriApps Installer
are also summarized in Fig. 1 (b).

The remainder of this paper is organized as follows: In Sec. 2, we provide
a detailed explanation of the architecture and functionalities of MateriApps
LIVE! and MateriApps Installer, while in Sec. 3, we give illustrative examples
of how to use both products. In Sec. 4, we discuss the eﬀects of MateriApps
LIVE! and MateriApps Installer on the promotion of materials science sim-
ulations, while in Sec. 5, we provide concluding remarks.

3

Figure 1: (a) Three-step ﬂow diagram, indicating the relationships among MateriApps,
MateriApps LIVE!, and MateriApps Installer. (b) Schematic of computing environments
supported by MateriApps LIVE! and MateriApps Installer.

2. Software Description

2.1. Software Architecture

MateriApps LIVE!, which is a Debian GNU/Linux OS that includes vari-
ous preinstalled materials science software packages, is distributed as a virtual
machine snapshot in the open virtualization appliance (OVA) format. As a
ﬁrst step, each simulation software package is prepared as a Debian pack-
age and uploaded to the MateriApps package repository, where it is man-
aged with Debian’s advanced packaging tool (APT). Later, as each original
software version is upgraded, its corresponding Debian package is updated
and uploaded accordingly so that users can promptly use the latest version
of the simulation software. The MateriApps LIVE! OVA ﬁle is generated
automatically using the Packer image-building tool. Note that Debian pack-
ages are freely available from the MateriApps package repository and can
be installed, via APT, on systems already running on Debian GNU/Linux
(bullseye/buster/stretch) and Ubuntu (focal/bionic).

Separately, MateriApps Installer is a collection of shell scripts (compatible
with the POSIX standard) that is intended for use when installing materials
science programs. As a matter of design policy, MateriApps Installer limits
its requirements to just a few fundamental tools such as POSIX-compatible
shells, make, and tar. However, in addition to materials science programs,
MateriApps Installer oﬀers install scripts for dependencies such as GCC and
CMake, even though the oﬃcial or standard package managers (e.g., Debian

4

Personal computersComputer clustersHPC supercomputersFlagship machines(a)(b)3rd step: Install the softwareCollection of install scripts1st step: Search softwarePortal site2nd step: Try out the softwareVirtual machinepackages, RedHat RPM, and Homebrew) are normally recommended.
In
use, MateriApps Installer installs each version of each tool/application into
a separate directory. For example, in the case of CMake 3.22.3, all ﬁles are
installed into

$MA_ROOT/cmake/cmake-3.22.3-1

so they do not interfere with the previous versions and other tools. The last
number added, 1, denotes the MateriApps Installer script revision (e.g., the
set of compile options). Note that users can choose a diﬀerent installation
location for each software package by changing the $MA_ROOT environment
variable. Additionally, since MateriApps Installer installs shell scripts for set-
ting environment variables, such as $PATH, for each tool/application/version,
users can activate each software package as needed. When designing Materi-
Apps Installer, we separated the installation procedure from the linking pro-
cess, so new software installations do not aﬀect anything else until the link-
ing is complete. Additionally, the software version is maintained as closely
as possible to MateriApps LIVE!, and for ease of maintenance, MateriApps
LIVE! and MateriApps Installer utilize the same source code patches.

2.2. Software Functionalities

MateriApps LIVE! oﬀers an environment in which users can “test drive”
computational materials science simulations freely using user’s PC or similar
device. The entire environment required to launch the tutorials, including
the OS (Debian GNU/Linux), editors, materials science applications, and
visualization tools, is provided as an OVA ﬁle. After the OVA ﬁle is im-
ported into a virtual machine software product such as VirtualBox, various
computational materials science simulators immediately become available.

On the other hand, MateriApps Installer is a collection of shell scripts de-
signed to assist users when installing computational material science applica-
tions that includes all the necessary tools and libraries for various computing
environments. Currently, MateriApps Installer supports Debian GNU/Linux
(Ubuntu), CentOS (RedHat), macOS, and many major supercomputer sys-
tems. In Table 2, we summarize the software packages and tools that are
currently preinstalled in MateriApps LIVE! and supported by MateriApps
Installer (in bold). Here, we marked ∗ to 2dmat in the table since 2dmat
is supported by MateriApps Installer but not preinstalled in MateriApps
LIVE!. This is because 2dmat is the software using MPI parallelization for
large size of computations and thus it is expected that eﬃcient calculations
are not performed on MateriApps LIVE!.

5

Type
Applications

Visualization /
modeling tools

Data analysis /
supplementary
tools
Editors
Development
tools
Libraries

Software names
AkaiKKR [5, 6], ALPS [7, 8, 9, 10], CASINO (only
setup tool) [11, 12], CONQUEST [13, 14], DCore [15,
16], DDMRG [17], DSQSS [18, 19], GAMESS (only
setup tool) [20, 21], Gromacs [22, 23, 24, 25], HPhi [26,
27], LAMMPS [28, 29], mVMC [30, 31], OCTA [32],
OpenMX [33, 34, 35], Quantum ESPRESSO [36,
37, 38], RESPACK [39, 40], SALMON [41, 42],
SMASH [43], TeNeS [44, 45], TRIQS/CTHYB [46,
47], TRIQS/DFT tools [48, 49], xTAPP [50],
2dmat∗ [51, 52]
C-Tools [53], CIF2Cell [54, 55], FermiSurfer [56, 57],
gnuplot, Open Babel [58, 59], OpenDX [60], OVITO [61,
62], ParaView [63], Pymol [64, 65], Rasmol [66, 67],
Tapioca [68], VESTA [69, 70], VMD (only setup
tool) [71, 72], XCrySDen [73, 74], Wannier90 [75, 76]
ALAMODE [77, 78], ALPSCore [79, 80], BSA [81],
PHYSBO [82, 83]

Mousepad, Nano, Vim, Emacs
GCC (gcc, g++, gfortran), CMake, Git, Python,
etc
BLAS (OpenBLAS), Boost, Eigen3, HDF5, LA-
PACK, etc

Table 2: List of software packages and tools preinstalled in MateriApps LIVE!
and supported by MateriApps Installer (in bold). Here, 2dmat is marked
with ∗ because it is supported by MateriApps Installer but not preinstalled
on MateriApps LIVE!.

3. Illustrative Examples

3.1. MateriApps LIVE!
3.1.1. Starting MateriApps LIVE!

MateriApps LIVE! is distributed as a snapshot image of the virtual ma-
chine (OVA ﬁle) and can be booted within virtualization software such as
VirtualBox. The MateriApps LIVE! distribution package can be downloaded
from the oﬃcial site https://cmsi.github.io/MateriAppsLive/ and can
be launched by installing the downloaded package into the virtualization
software. For example, if a user uses VirtualBox, MateriApps LIVE! can be
installed by double-clicking the icon of the distribution package.

6

In MateriApps LIVE!, a user with the username “user” is predeﬁned with
the password “live”. After logging into MateriApps LIVE!, the user opens
LXTerminal from the “Start Menu” (the leftmost icon on the menu bar), then
navigates → System Tools, and then → LXTerminal (Figure 2). This shows
that it is possible to execute various software packages in the terminal window
without a cumbersome installation process or worrying about environment
variable setting. The executable binary ﬁles of the software packages are
located in /usr/bin, and the utility tools and example ﬁles are installed in
/usr/share/software name directory.

3.1.2. Updating software

Numerous software packages are being actively developed, and many are
being frequently updated. In the MateriApps LIVE! development system,
Debian packages are continuously updated according to their upstream up-
grades, which means users can easily update their application packages via
the following steps:1

$ sudo apt update
$ sudo apt upgrade

3.1.3. Running a simulation

As an example, we will now demonstrate how to perform the exact diago-
nalization for quantum lattice models by using the HΦ[27] software package.
Let us start by showing how to calculate the temperature dependence of
the magnetic susceptibility of the antiferromagnetic Heisenberg (AFH) chain
using the thermal pure quantum (TPQ) method [84, 85].

First, we copy the sample ﬁles from /usr/share/hphi/samples to a

working directory, e.g., $HOME/hphi:

$ cd
$ mkdir hphi && cd hphi
$ cp -r /usr/share/hphi/samples ./

In HΦ v3.5.0, which is currently the latest version, users can ﬁnd the sample
input ﬁle for the TPQ calculation of the AFH chain at tutorial 2.1/stan3.in.
At that point, the user executes HΦ using the following commands:

$ cd $HOME/hphi/samples/tutorial_2.1
$ HPhi -s stan3.in

1This procedure updates all the packages in MateriApps LIVE!.

If a user wants to
update a speciﬁc package, e.g., HΦ, he or she should use sudo apt install hphi in the
second step.

7

Figure 2: How to start LXTerminal. Open “Start Menu” by clicking the leftmost bottom
button, and then click “LXTerminal” in “System Tools”.

The results are then saved into the output directory. By using a postpro-
cessing script AveFlct.py to calculate susceptibility, users can generate the
magnetic susceptibility as follows:

$ python3 AveFlct.py

The generated data are then saved into a ﬁle named ave Flct.dat. Finally,
the result is visualized by using Gnuplot (Fig. 3):

$ gnuplot
gnuplot> set log x
gnuplot> set colors classic
gnuplot> set xlabel "T/J"
gnuplot> set ylabel "chi"
gnuplot> pl "ave_Flct.dat" u 1:5:6 w ye lc rgb "#FFBBBB" pt 6 t"", \
"" u 1:5 w lp lt 1 pt 6 t"chi

For HΦ details, please refer to the oﬃcial tutorial [26].

8

Figure 3: Magnetic susceptibility of an antiferromagnetic Heisenberg chain calculated via
HΦ running on MateriApps LIVE! using the TPQ method.

9

3.2. MateriApps Installer

In this section, we describe how to set up MateriApps Installer and install
tools and applications on Linux OS. A MateriApps Installer zip ﬁle can be
downloaded from the oﬃcial website [4]. After opening the zip ﬁle, users can
obtain all the shell scripts included in MateriApps Installer. If Git is avail-
able, MateriApps Installer can be cloned by typing the following command:

$ git clone https://github.com/wistaria/MateriAppsInstaller

The MateriApps Installer directory structure is as follows:

|- apps
|- docs
|- macos
|- scripts
|- setup
|- tools
|- README.md
|- check_prefix.sh

The following scripts and ﬁle directories are available.

• check_prefix.sh: Displays variables that are commonly used in each

script, such as the top installation directory.

• docs directory: A directory containing the manual and its source code.

• macos directory: A directory containing scripts used to install the nec-

essary tools using Macports.

• setup directory: A directory containing scripts used to prepare for

software installation.

The directory structure in setup, tools, and apps is given as follows:

-- software_name

|- README.md
|- download.sh
|- link.sh
|- setup.sh
|- version.sh
|- install.sh
|- patch
|- config

10

Each ﬁle and directory is described as shown below:

• README.md: Includes a brief introduction of the software and the URLs

of the oﬃcial website.

• download.sh*: Download the source code archive.

• install.sh*: Build and install the software.

• link.sh *: Create symbolic links to installed directories and conﬁgu-

ration ﬁles.

• setup.sh*: Extract the prepared source code archive and apply the

patch (if it exists).

• version.sh*: Specify the version to download.

• patch directory: The directory where the patches are stored.

• config directory: Additional settings for installation other than the

default settings, such as when using the Intel Compiler.

Here, a ﬁle marked with an * indicates a ﬁle that must always be present in
the directory. Below, we show how to install the tools and software through
a step-by-step demonstration.

3.2.1. Installing tools

First, perform the initial setup by entering the MateriApps Installer

source directory and executing the following command:

$ sh setup/setup.sh

This command prepares the directory where tools and applications will be
installed. The default location is $HOME/materiapps/.2 Next, the compiler
is installed. Here, it should be noted that while the compiler installed in
the system can also be used for installing other tools and applications, some
applications may not compile well with the old version of GCC. If users have
little experience in solving compilation problems, it is strongly recommended
that they use the GCC installed by MateriApps Installer. To install GCC
10, execute the following commands:

2The install

$HOME/.mainstaller.

location can be speciﬁed by adding MA ROOT=directory name in

11

$ cd tools/gcc10
$ sh install.sh

After ﬁnishing the installation, execute

$ sh link.sh

to set up an appropriate symbolic link.

Many recent tools and applications, including the major Linux distribu-
tions, include CMake to facilitate installation processes. However, to avoid
potential installation problems, it is recommended that the latest CMake
version is installed by MateriApps Installer. To install CMake, execute the
following commands in the MateriApps Installer source directory:

$ cd tools/cmake
$ sh install.sh
$ sh link.sh

The other tools can be installed using the same process. Note that GCC,
Git, libﬃ, and Python3 must be installed in that order before the other
tools can be installed. After installing the above tools, the user should in-
stall the remaining tools required for applications, e.g., in alphabetical order
(e.g., Boost, Eigen3, FFTW, GSL, HDF5, LAPACK, OpenMPI, OpenSSL,
ScaLAPACK, TclTk, and Zlib).

3.2.2. Installing applications

After installing the tools, users can install the application by entering
the directory of the application to be installed and executing the installation
script install.sh as follows:

$ sh install.sh

Users can then check whether the installation was successful by running the
check script using the following command:

$ sh runtest.sh

It should also be noted that if the application installation was termi-
nated during the process, some ﬁles may remain in incomplete form in
$HOME/materiapps/application name— directory and will cause errors when
reinstallation is attempted. In such cases, users have to remove the directory
of the target application by hand. If errors are encountered during installa-
tion, please read the error messages carefully. Most errors result when the
required tools are not installed.

Once the test has been completed, execute the following command to

prepare an appropriate link to the application setting script:

$ sh link.sh

12

3.2.3. Running applications

Before running the application, the environment variables must be set.

The following command sets the variables required for HΦ: 3

$ source $HOME/materiapps/hphi/hphivars.sh

The sample ﬁles can be found in $HPHI ROOT/samples. Users can execute
HΦ using the same process described in Sec. 3.1:

$ cd
$ mkdir hphi && cd hphi
$ cp -r $HPHI_ROOT/samples ./
$ cd $HOME/hphi/samples/tutorial_2.1
$ HPhi -s stan3.in

4. Impact

MateriApps LIVE! allows computer simulation non-experts to start a sim-
ulation in just a few minutes, while MateriApps Installer makes it easy to run
simulations on computer clusters and supercomputers, thereby facilitating
larger-scale and more accurate simulations than ever before. As a result, Ma-
teriApps LIVE! and MateriApps Installer free users from cumbersome sim-
ulation software installation and upgrade processes, thereby enabling them
to seamlessly use the same version of the software on any device from users’
PCs to state-of-the-art supercomputers (see also Fig. 1 (b)). These signiﬁcant
advantages, which cannot be achieved by previous approaches, are expected
to contribute signiﬁcantly to the promotion of computational simulation re-
search by encouraging an increasing number of experimental and industrial
researchers to engage in new simulations.

The use of MateriApps LIVE! and MateriApps Installer for materials
science simulations has been progressing steadily. In fact, MateriApps LIVE!
has been downloaded more than 10,000 times since its ﬁrst release in 2013 and
won Open Source Excellence Award from SourceForge in 2022. Additionally,
the MateriApps LIVE! environment has been used in more than 30 lectures
and workshops attended by more than 1,000 participants. It has also been
utilized in internal corporate training, hands-on seminars, and in universities
for undergraduate and graduate student classes.

Separately, the use of MateriApps Installer has been gradually increas-
ing since the release of version 1.0.0 in March 2021, and it has already been

3For other applications, use $HOME/materiapps/application name/application namevars.sh

instead.

13

used for installing materials science software on supercomputers at the In-
stitute for Solid State Physics (ISSP) at the University of Tokyo, and the
High-Performance Computing Infrastructure (HPCI) in Japan. We antic-
ipate that other companies will soon provide support, simulation services,
and consulting for computational materials science simulations based on the
MateriApps environment.

5. Conclusions

In this paper, we showed how MateriApps LIVE! and MateriApps In-
staller help users get started with materials science simulations. More speciﬁ-
cally, we showed that MateriApps LIVE! provides a virtual environment that
immediately enables users to try out materials science simulations on users’
PC. This environment dramatically reduces the barriers encountered by non-
experts who want to start utilizing various simulation packages in uniﬁed OS
settings. Separately, MateriApps Installer provides a comprehensive set of
shell scripts to facilitate the installation of software on Unix, Linux, macOS,
and supercomputer systems. Conducting installations via this script collec-
tion enables users to maximize the performance of high-end workstations,
laboratory-level computer clusters, and supercomputers in materials science
simulations. Since our ultimate goal is promoting further research and devel-
opment in computational materials science, we believe that it is crucial for us
to continue the development of MateriApps LIVE! and MateriApps Installer,
as well as the MateriApps portal site, by adding new software packages and
updating the currently included software products.

Acknowledgements

MateriApps Installer was developed under the support of the “Project
for advancement of software usability in materials science” (PASUMS) in
the ﬁscal year 2020 by the Institute for Solid State Physics (ISSP) at the
University of Tokyo. MateriApps is supported by the ISSP, the University of
Tokyo, and the Elements Strategy Initiative Center for Magnetic Materials
(ESICMM). KY was supported by the Japan Society for the Promotion of
Science (JSPS) KAKENHI Grant No. 19K03649.

References

[1] https://ma.issp.u-tokyo.ac.jp/en/.

[2] Y. Konishi, R. Igarashi, S. Kasamatsu, T. Kato, N. Kawashima,
T. Kawatsu, H. Kouta, M. Noda, S. Sasaki, Y. Terada, S. Todo,

14

S. Tsuchida, K. Yoshimi, K. Yoshizawa, Materiapps — a portal site of
materials science simulation, in: Proceedings of Computational Science
Workshop 2014 (CSW2014), JPS Conf. Proc, Vol. 5, 2015, p. 011007.
doi:10.7566/JPSCP.5.011007.
URL https://journals.jps.jp/doi/abs/10.7566/JPSCP.5.011007

[3] http://cmsi.github.io/MateriAppsLive/.

[4] https://github.com/wistaria/MateriAppsInstaller.

[5] http://kkr.issp.u-tokyo.ac.jp.

[6] H. Akai, Electronic Structure Ni–Pd Alloys Calculated by the Self-
Consistent KKR-CPA Method, J. Phys. Soc. Jpn. 51 (2) (1982) 468–
474. doi:10.1143/JPSJ.51.468.
URL https://doi.org/10.1143/JPSJ.51.468

[7] http://alps.comp-phys.org.

[8] F. Alet, P. Dayal, A. Grzesik, A. Honecker, M. K¨orner, A. L¨auchli,
S. R. Manmana, I. P. McCulloch, F. Michel, R. M. Noack, G. Schmid,
U. Schollw¨ock, F. St¨ockli, S. Todo, S. Trebst, M. Troyer, P. Werner,
S. Wessel, The ALPS Project: Open Source Software for Strongly Cor-
related Systems, J. Phys. Soc. Jpn. 74 (Suppl) (2005) 30–35. doi:
10.1143/JPSJS.74S.30.
URL https://doi.org/10.1143/JPSJS.74S.30

[9] A. Albuquerque, F. Alet, P. Corboz, P. Dayal, A. Feiguin, S. Fuchs,
L. Gamper, E. Gull, S. G¨urtler, A. Honecker, R. Igarashi, M. K¨orner,
A. Kozhevnikov, A. L¨auchli, S. Manmana, M. Matsumoto, I. Mc-
Culloch, F. Michel, R. Noack, G. Paw(cid:32)lowski, L. Pollet, T. Pruschke,
U. Schollw¨ock, S. Todo, S. Trebst, M. Troyer, P. Werner, S. Wessel, The
ALPS project release 1.3: Open-source software for strongly correlated
systems, J. Magn. Magn. Mater. 310 (2, Part 2) (2007) 1187–1193,
proceedings of the 17th International Conference on Magnetism.
doi:https://doi.org/10.1016/j.jmmm.2006.10.304.
URL
S0304885306014983

https://www.sciencedirect.com/science/article/pii/

[10] B. Bauer, L. D. Carr, H. G. Evertz, A. Feiguin, J. Freire, S. Fuchs,
L. Gamper, J. Gukelberger, E. Gull, S. Guertler, A. Hehn, R. Igarashi,
S. V. Isakov, D. Koop, P. N. Ma, P. Mates, H. Matsuo, O. Parcol-
let, G. Paw(cid:32)lowski, J. D. Picon, L. Pollet, E. Santos, V. W. Scarola,

15

U. Schollw¨ock, C. Silva, B. Surer, S. Todo, S. Trebst, M. Troyer, M. L.
Wall, P. Werner, S. Wessel, The ALPS project release 2.0: open source
software for strongly correlated systems, J. Stat. Mech. Theory Exp.
2011 (05) (2011) P05001. doi:10.1088/1742-5468/2011/05/p05001.
URL https://doi.org/10.1088/1742-5468/2011/05/p05001

[11] http://www.tcm.phy.cam.ac.uk/~mdt26/casino2.html.

[12] R. J. Needs, M. D. Towler, N. D. Drummond, P. L´opez R´ıos, J. R.
Trail, Variational and diﬀusion quantum Monte Carlo calculations with
the CASINO code, J. Chem. Phys. 152 (15) (2020) 154106. doi:10.
1063/1.5144288.
URL https://doi.org/10.1063/1.5144288

[13] http://www.order-n.org.

[14] D. Bowler, R. Choudhury, M. Gillan, T. Miyazaki, Recent progress with
large-scale ab initio calculations: the CONQUEST code, Phys Status
Solidi B 243 (5) (2006) 989–1000.

[15] https://issp-center-dev.github.io/DCore/index.html.

[16] H. Shinaoka, J. Otsuki, M. Kawamura, N. Takemori, K. Yoshimi, DCore:
Integrated DMFT software for correlated electrons, SciPost Phys. 10
(2021) 117. doi:10.21468/SciPostPhys.10.5.117.
URL https://scipost.org/10.21468/SciPostPhys.10.5.117

[17] https://www.r-ccs.riken.jp/labs/cms/DMRG/Dynamical_DMRG_en.

html.

[18] https://github.com/issp-center-dev/dsqss.

[19] Y. Motoyama, K. Yoshimi, A. Masaki-Kato, T. Kato, N. Kawashima,
DSQSS: Discrete Space Quantum Systems Solver, Comput. Phys.
Commun. 264 (2021) 107944. doi:https://doi.org/10.1016/j.cpc.
2021.107944.
URL
S0010465521000692

https://www.sciencedirect.com/science/article/pii/

[20] http://www.msg.chem.iastate.edu/gamess/index.html.

[21] G. M. J. Barca, C. Bertoni, L. Carrington, D. Datta, N. De Silva,
J. E. Deustua, D. G. Fedorov, J. R. Gour, A. O. Gunina, E. Guidez,
T. Harville, S. Irle, J. Ivanic, K. Kowalski, S. S. Leang, H. Li, W. Li,

16

J. J. Lutz, I. Magoulas, J. Mato, V. Mironov, H. Nakata, B. Q. Pham,
P. Piecuch, D. Poole, S. R. Pruitt, A. P. Rendell, L. B. Roskop, K. Rue-
denberg, T. Sattasathuchana, M. W. Schmidt, J. Shen, L. Slipchenko,
M. Sosonkina, V. Sundriyal, A. Tiwari, J. L. Galvez Vallejo, B. West-
heimer, M. W(cid:32)loch, P. Xu, F. Zahariev, M. S. Gordon, Recent develop-
ments in the general atomic and molecular electronic structure system,
J. Chem. Phys. 152 (15) (2020) 154102. doi:10.1063/5.0005188.
URL https://doi.org/10.1063/5.0005188

[22] http://www.gromacs.org/.

[23] S. Pronk, S. P´all, R. Schulz, P. Larsson, P. Bjelkmar, R. Apos-
tolov, M. R. Shirts, J. C. Smith, P. M. Kasson, D. van der Spoel,
B. Hess, E. Lindahl, GROMACS 4.5:
a high-throughput and
highly parallel open source molecular simulation toolkit, J. Bioin-
form. 29 (7) (2013) 845–854.
arXiv:https://academic.oup.com/
bioinformatics/article-pdf/29/7/845/17343875/btt055.pdf,
doi:10.1093/bioinformatics/btt055.
URL https://doi.org/10.1093/bioinformatics/btt055

simulations

[24] M. J. Abraham, T. Murtola, R. Schulz, S. P´all, J. C. Smith,
B. Hess, E. Lindahl, GROMACS: High performance molec-
through multi-level parallelism from laptops
ular
to supercomputers, SoftwareX 1-2 (2015) 19–25.
doi:https:
//doi.org/10.1016/j.softx.2015.06.001.
URL
S2352711015000059

https://www.sciencedirect.com/science/article/pii/

[25] S. P´all, M. J. Abraham, C. Kutzner, B. Hess, E. Lindahl, Tackling
Exascale Software Challenges in Molecular Dynamics Simulations with
GROMACS, in: S. Markidis, E. Laure (Eds.), Solving Software Chal-
lenges for Exascale, Springer International Publishing, Cham, 2015, pp.
3–27.

[26] http://www.pasums.issp.u-tokyo.ac.jp/hphi/en/.

[27] M. Kawamura, K. Yoshimi, T. Misawa, Y. Yamaji, S. Todo,
N. Kawashima, Quantum lattice model solver HΦ, Comput. Phys.
Commun. 217 (2017) 180–192.
doi:https://doi.org/10.1016/j.
cpc.2017.04.006.
URL
S0010465517301200

https://www.sciencedirect.com/science/article/pii/

17

[28] https://lammps.sandia.gov.

[29] A. P. Thompson, H. M. Aktulga, R. Berger, D. S. Bolintineanu, W. M.
Brown, P. S. Crozier, P. J. in ’t Veld, A. Kohlmeyer, S. G. Moore, T. D.
Nguyen, R. Shan, M. J. Stevens, J. Tranchida, C. Trott, S. J. Plimp-
ton, LAMMPS - a ﬂexible simulation tool for particle-based materials
modeling at the atomic, meso, and continuum scales, Comput. Phys.
Commun. 271 (2022) 108171. doi:10.1016/j.cpc.2021.108171.

[30] http://www.pasums.issp.u-tokyo.ac.jp/mvmc/en/.

[31] T. Misawa, S. Morita, K. Yoshimi, M. Kawamura, Y. Motoyama, K. Ido,
T. Ohgoe, M. Imada, T. Kato, mVMC—Open-source software for many-
variable variational Monte Carlo method, Comput. Phys. Commun. 235
(2019) 447–462. doi:https://doi.org/10.1016/j.cpc.2018.08.014.
URL
https://www.sciencedirect.com/science/article/pii/
S0010465518303102,https://github.com/issp-center-dev/mVMC

[32] https://octa.jp.

[33] http://www.openmx-square.org/.

[34] T. Ozaki, Variationally optimized atomic orbitals for large-scale elec-
doi:10.1103/

tronic structures, Phys. Rev. B 67 (2003) 155108.
PhysRevB.67.155108.
URL https://link.aps.org/doi/10.1103/PhysRevB.67.155108

[35] T. Ozaki, H. Kino, Numerical atomic basis orbitals from H to Kr, Phys.

Rev. B 69 (2004) 195113. doi:10.1103/PhysRevB.69.195113.
URL https://link.aps.org/doi/10.1103/PhysRevB.69.195113

[36] http://www.quantum-espresso.org/.

[37] P. Giannozzi, S. Baroni, N. Bonini, M. Calandra, R. Car, C. Cavaz-
zoni, D. Ceresoli, G. L. Chiarotti, M. Cococcioni, I. Dabo, A. Dal
Corso, S. de Gironcoli, S. Fabris, G. Fratesi, R. Gebauer, U. Gerstmann,
C. Gougoussis, A. Kokalj, M. Lazzeri, L. Martin-Samos, N. Marzari,
F. Mauri, R. Mazzarello, S. Paolini, A. Pasquarello, L. Paulatto,
C. Sbraccia, S. Scandolo, G. Sclauzero, A. P. Seitsonen, A. Smogunov,
P. Umari, R. M. Wentzcovitch, QUANTUM ESPRESSO: a modular
and open-source software project for quantum simulations of materials,
J. Phys. Condens. Matter 21 (39) (2009) 395502 (19pp).
URL http://www.quantum-espresso.org

18

[38] P. Giannozzi, O. Andreussi, T. Brumme, O. Bunau, M. B. Nardelli,
M. Calandra, R. Car, C. Cavazzoni, D. Ceresoli, M. Cococcioni,
N. Colonna, I. Carnimeo, A. D. Corso, S. de Gironcoli, P. Delugas,
R. A. D. Jr, A. Ferretti, A. Floris, G. Fratesi, G. Fugallo, R. Gebauer,
U. Gerstmann, F. Giustino, T. Gorni, J. Jia, M. Kawamura, H.-Y. Ko,
A. Kokalj, E. K¨u¸c¨ukbenli, M. Lazzeri, M. Marsili, N. Marzari, F. Mauri,
N. L. Nguyen, H.-V. Nguyen, A. O. de-la Roza, L. Paulatto, S. Ponc´e,
D. Rocca, R. Sabatini, B. Santra, M. Schlipf, A. P. Seitsonen, A. Smo-
gunov, I. Timrov, T. Thonhauser, P. Umari, N. Vast, X. Wu, S. Ba-
roni, Advanced capabilities for materials modelling with QUANTUM
ESPRESSO, J. Phys. Condens. Matter 29 (46) (2017) 465901.
URL http://stacks.iop.org/0953-8984/29/i=46/a=465901

[39] https://sites.google.com/view/kazuma7k6r.

[40] K. Nakamura, Y. Yoshimoto, Y. Nomura, T. Tadano, M. Kawa-
mura, T. Kosugi, K. Yoshimi, T. Misawa, Y. Motoyama,
for derivation of eﬀective low-energy
Respack: An ab initio tool
model of material, Comput. Phys. Commun. 261 (2021) 107781.
doi:https://doi.org/10.1016/j.cpc.2020.107781.
URL
S001046552030391X

https://www.sciencedirect.com/science/article/pii/

[41] http://salmon-tddft.jp.

[42] M. Noda, S. A. Sato, Y. Hirokawa, M. Uemoto, T. Takeuchi, S. Yamada,
A. Yamada, Y. Shinohara, M. Yamaguchi, K. Iida, I. Floss, T. Otobe,
K.-M. Lee, K. Ishimura, T. Boku, G. F. Bertsch, K. Nobusada,
K. Yabana, SALMON: Scalable Ab-initio Light–Matter simulator for
Optics and Nanoscience, Comput. Phys. Commun. 235 (2019) 356–365.
doi:https://doi.org/10.1016/j.cpc.2018.09.018.
URL
S0010465518303412

https://www.sciencedirect.com/science/article/pii/

[43] http://smash-qc.sourceforge.net/.

[44] https://github.com/issp-center-dev/TeNeS.

[45] Y. Motoyama, T. Okubo, K. Yoshimi, S. Morita, T. Kato,
N. Kawashima, Tenes: Tensor network solver for quantum lattice sys-
tems (2021). arXiv:2112.13184.

[46] https://triqs.github.io/cthyb/latest/index.html.

19

[47] P. Seth, I. Krivenko, M. Ferrero, O. Parcollet, TRIQS/CTHYB: A
continuous-time quantum Monte Carlo hybridisation expansion solver
for quantum impurity problems, Comput. Phys. Commun. 200 (2016)
274 – 284. doi:http://dx.doi.org/10.1016/j.cpc.2015.10.023.
URL
S001046551500404X

http://www.sciencedirect.com/science/article/pii/

[48] https://triqs.github.io/dft_tools/latest/.

[49] M. Aichhorn, L. Pourovskii, P. Seth, V. Vildosola, M. Zingl, O. E.
Peil, X. Deng, J. Mravlje, G. J. Kraberger, C. Martins, M. Ferrero,
O. Parcollet, TRIQS/DFTTools: A {TRIQS} application for ab initio
calculations of correlated materials, Comput. Phys. Commun. 204 (2016)
200 – 208. doi:http://dx.doi.org/10.1016/j.cpc.2016.03.014.
URL
S0010465516300728

http://www.sciencedirect.com/science/article/pii/

[50] http://xtapp.cp.is.s.u-tokyo.ac.jp/.

[51] https://www.pasums.issp.u-tokyo.ac.jp/2dmat/en/.

[52] Y. Motoyama, K. Yoshimi, H. Iwamoto, H. Ichinose, T. Hoshi, Data-
analysis software framework 2dmat and its application to experimental
measurements for two-dimensional material structures (2022). doi:10.
48550/ARXIV.2204.04484.
URL https://arxiv.org/abs/2204.04484

[53] https://sourceforge.net/projects/c-tools/.

[54] https://sourceforge.net/projects/cif2cell/.

[55] T. Bj¨orkman, CIF2Cell: Generating geometries for electronic structure
programs, Comput. Phys. Commun. 182 (5) (2011) 1183 – 1186.
doi:10.1016/j.cpc.2011.01.013.
URL
S0010465511000336

http://www.sciencedirect.com/science/article/pii/

[56] http://fermisurfer.osdn.jp/index.html.

[57] M. Kawamura, Fermisurfer: Fermi-surface viewer providing multiple
representation schemes, Comput. Phys. Commun. 239 (2019) 197–203.
doi:https://doi.org/10.1016/j.cpc.2019.01.017.
URL
S0010465519300347

https://www.sciencedirect.com/science/article/pii/

20

[58] http://openbabel.org/wiki/Main_Page.

[59] N. M. O’Boyle, M. Banck, C. A. James, C. Morley, T. Vandermeersch,
G. R. Hutchison, Open Babel: An open chemical toolbox, J. Chemin-
formatics 3 (33) (2011) 1–14.

[60] http://www.opendx.org/.

[61] https://www.ovito.org.

[62] A. Stukowski, Visualization and analysis of atomistic simulation data
with OVITO-the Open Visualization Tool, Model Simul Mat Sci Eng
18 (1) (JAN 2010). doi:{10.1088/0965-0393/18/1/015012}.

[63] https://www.paraview.org.

[64] https://www.pymol.org/.

[65] The PyMOL Molecular Graphics System, Version 1.2r3pre, Schr¨odinger,

LLC.

[66] http://rasmol.org/.

for

[67] R. A. Sayle, E. Milner-White, RASMOL: biomolecular graph-
374–376.

all, Trends Biochem. Sci.

ics
(1995)
doi:https://doi.org/10.1016/S0968-0004(00)89080-5.
URL
S0968000400890805

https://www.sciencedirect.com/science/article/pii/

(9)

20

[68] http://sourceforge.net/projects/xtapp-tapioca.

[69] http://jp-minerals.org/vesta/en/.

[70] K. Momma, F. Izumi, VESTA3 for three-dimensional visualization of
crystal, volumetric and morphology data, J. Appl. Crystallogr. 44 (6)
(2011) 1272–1276. doi:10.1107/S0021889811038970.
URL https://doi.org/10.1107/S0021889811038970

[71] http://www.ks.uiuc.edu/Research/vmd/.

[72] W. Humphrey, A. Dalke, K. Schulten, VMD – Visual Molecular Dynam-

ics, J. Mol. Graph. 14 (1996) 33–38.

[73] http://www.xcrysden.org/.

21

[74] A. Kokalj, XCrySDen—a new program for displaying crystalline
structures and electron densities, J. Mol. Graph. Model. 17 (3) (1999)
176–179. doi:https://doi.org/10.1016/S1093-3263(99)00028-5.
URL
S1093326399000285

https://www.sciencedirect.com/science/article/pii/

[75] http://www.wannier.org.

[76] G. Pizzi, V. Vitale, R. Arita, S. Bl¨ugel, F. Freimuth, G. G´eranton,
M. Gibertini, D. Gresch, C. Johnson, T. Koretsune, J. Iba˜nez-Azpiroz,
H. Lee, J.-M. Lihm, D. Marchand, A. Marrazzo, Y. Mokrousov, J. I.
Mustafa, Y. Nohara, Y. Nomura, L. Paulatto, S. Ponc´e, T. Ponweiser,
J. Qiao, F. Th¨ole, S. S. Tsirkin, M. Wierzbowska, N. Marzari, D. Van-
derbilt, I. Souza, A. A. Mostoﬁ, J. R. Yates, Wannier90 as a community
code: new features and applications, J. Phys. Condens. Matter 32 (16)
(2020) 165902. doi:10.1088/1361-648x/ab51ff.
URL https://doi.org/10.1088%2F1361-648x%2Fab51ff

[77] http://ttadano.github.io/alamode/.

[78] T. Tadano, Y. Gohda, S. Tsuneyuki, Anharmonic force constants ex-
tracted from ﬁrst-principles molecular dynamics: applications to heat
transfer simulations, J. Phys. Condens. Matter 26 (22) (2014) 225402.
doi:10.1088/0953-8984/26/22/225402.
URL https://doi.org/10.1088/0953-8984/26/22/225402

[79] https://alpscore.org/.

[80] M. Wallerberger, S. Iskakov, A. Gaenko, J. Kleinhenz, I. Krivenko,
R. Levy, J. Li, H. Shinaoka, S. Todo, T. Chen, X. Chen, J. P. F. LeBlanc,
J. E. Paki, H. Terletska, M. Troyer, E. Gull, Updated Core Libraries of
the ALPS Project (2018). arXiv:1811.08331.
URL https://doi.org/10.48550/arXiv.1811.08331

[81] http://kenjiharada.github.io/BSA/.

[82] https://www.pasums.issp.u-tokyo.ac.jp/physbo/en/.

[83] Y. Motoyama, R. Tamura, K. Yoshimi, K. Terayama, T. Ueno,
K. Tsuda, Bayesian optimization package: Physbo (2021). arXiv:
2110.07900.

[84] S. Sugiura, A. Shimizu, Thermal pure quantum states at ﬁnite tempera-
ture, Phy. Rev. Lett. 108 (24) (Jun. 2012). doi:10.1103/physrevlett.
108.240401.

22

[85] S. Sugiura, A. Shimizu, Canonical thermal pure quantum state, Phys.
Rev. Lett. 111 (1) (Jul. 2013). doi:10.1103/physrevlett.111.010401.

23

