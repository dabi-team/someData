Ensemble Learning for Efﬁcient VVC Bitrate Ladder
Prediction

2
2
0
2

l
u
J

3
2

]

V

I
.
s
s
e
e
[

2
v
7
1
3
0
1
.
7
0
2
2
:
v
i
X
r
a

Fatemeh Nasiri1,2,3, Wassim Hamidouche1,2, Luce Morin1,2, Nicolas Dholland3 and Jean-Yves Aubi´e1
1 IRT b<>com, 35510 Cesson-S´evign´e, France,
2 Univ Rennes, INSA Rennes, CNRS, IETR - UMR 6164, 35000 Rennes, France
3 AVIWEST-Haivision, 35760, Saint-Gr´egoire, France

Abstract—Changing the encoding parameters, in particular
the video resolution, is a common practice before transcoding.
To this end, streaming and broadcast platforms beneﬁt from so-
called bitrate ladders to determine the optimal resolution for
given bitrates. However, the task of determining the bitrate ladder
can usually be challenging as, on one hand, so-called ﬁt-for-all
static ladders would waste bandwidth, and on the other hand,
fully specialized ladders are often not affordable in terms of
computational complexity. In this paper, we propose an ML-
based scheme for predicting the bitrate ladder based on the
content of the video. The baseline of our solution predicts the
bitrate ladder using two constituent methods, which require
no encoding passes. To further enhance the performance of
the constituent methods, we integrate a conditional ensemble
method to aggregate their decisions, with a negligibly limited
number of encoding passes. The experiment, carried out on the
optimized software encoder implementation of the VVC standard,
called VVenC, shows signiﬁcant performance improvement. When
compared to static bitrate ladder, the proposed method can offer
about 13% bitrate reduction in terms of BD-BR with a negligible
additional computational overhead. Conversely, when compared
to the fully specialized bitrate ladder method, the proposed
method can offer about 86% to 92% complexity reduction, at
cost the of only 0.8% to 0.9% coding efﬁciency drop in terms of
BD-BR.

Keywords—Bitrate Ladder, Adaptive Video Streaming, Rate-

Quality Curves, VVC.

I.

INTRODUCTION

Network heterogeneity, varying users’ display size, and
various video contents with different spatio-temporal features
are all factors that could impact the performance of live video
streaming or Video On Demand (VOD) services. As a result,
Dynamic Adaptive Streaming over HTTP (DASH) [1] and
HTTP Live Streaming (HLS) [2] are two main industrial
technologies that have been widely adopted in the media
industry to incorporate heterogeneous network conditions. In
both technologies, the input video is potentially down-sampled
from its native resolution changes before encoding, in order to
meet the available constraints such as bandwidth, complexity
and latency.

The traditional approach to change the resolution is per-
formed by employing the so-called “bitrate ladder” [3]. A
bitrate ladder recommends the resolution for a given bitrate,
by dividing the bitrate range into a set of predeﬁned bitrate
intervals and associating ascending resolutions to consecutive
intervals. The simplest implementation of this idea is called
static bitrate ladder, where one ladder is ﬁt for all
types
of video contents. The main drawback of a static bitrate

ladder is that its recommendation scheme is the same for all
video contents, regardless of their spatio-temporal features.
To elaborate this shortcoming, Fig. 1 shows how the optimal
points for changing from one resolution to another might vary,
depending on spatio-temporal features.

540p

720p

1080p

2160p

R
N
S
P
-
d
e
l
a
c
S

45

40

35

30

25

45

40

35

30

540p

720p

1080p

2160p

10

15

log2 of bit/sec

10

15

log2 of bit/sec

Fig. 1: Bitrate points for switching between resolutions for two
sequences with different spatio-temporal characteristics. Left:
complex motion and texture, right: simple motion and texture.

There are mainly two categories of solution for bitrate
ladder prediction. The ﬁrst category relies on an exhaustive
encoding, while proposing to accelerate the encoding process
to make their complexity affordable. In the work presented
in [4], the coding information extracted from encoding in
the lowest resolution are used to speed up the encoding
process at higher resolutions. In this work, the coding decisions
including Coding Unit (CU) quad-tree structure and Prediction
Unit (PU) predictions, coding modes and Motion Vectors
(MVs) information are derived from low resolution video
to reduce the overall number of Rate Distortion Optimiza-
tion (RDO) calculation at higher resolutions. Furthermore,
Brightcove proposes a multi-codec bitrate ladder in which two
codecs including Advanced Video Coding (AVC) and High
Efﬁciency Video Coding (HEVC) are considered to be used
by clients [5]. Finally, in [6], an Artiﬁcial Neural Network
(ANN)-based approach is used for a fast multi-resolution and
multi-rate encoding. For multi-rate encoding, the lowest bitrate
representation and for multi-resolution encoding, the highest
bitrate from the lowest resolution representation are chosen as
the reference, respectively. Then the Coding Tree Unit (CTU)
split decisions are predicted by using the pixel values from the
target resolution and encoding information from the reference
representation.

In the second category of solutions, the additional en-
codings are partially or entirely replaced by methods that

 
 
 
 
 
 
directly or indirectly predict the ladder. In one of the simplest
realization of this category, the work presented in [7] trains
separate bitrate ladders for different pre-deﬁned categories of
video contents. As a result, each new video has to be ﬁrst
classiﬁed, then adopt one of the trained ladders. In another
solution proposed by Bitmovin [8], ﬁrst, a variety of features
such as frame rate, resolution and resulting bitrate from
multiple encodings is extracted from the source video. Then,
a Machine Learning (ML)-based method is used to predict
the convex hull and adjust an optimized proﬁle for encoding
the video. Likewise, Cambria [9] proposes a method named
Source Adaptive Bitrate Ladder (SABL). They run a fast
Constant Rate Factor (CRF) encoding to estimate the encoding
complexity. The obtained results from this encoding are then
used to adjust the encoding ladder up or down. Moreover,
MUX [10] proposes a neural network based solution for esti-
mating the bitrate ladder which the new videos loaded into the
network are contributed back to the training set. Furthermore,
the work presented in [11] introduces a method to predict the
Quantization Parameters (QPs) of the crossover points between
the RD curves of two consecutive resolutions, that ﬁnally
construct the bitrate ladder by performing several encodings
in the predicted crossover QPs. In the work of [12], the bitrate
ladder identiﬁcation problem was solved using integer linear
programming, while maximizing Quality of Experience (QoE)
measured using National Telecommunications and Information
Administration Video Quality Metrics (NTIA VQM) [13].

In this work, the prediction of the bitrate ladder is based on
an ensemble learning method that aggregates the decision of
two constituent ML-based methods. If necessary, the proposed
aggregator might conduct limited additional encodings to make
the ﬁnal decision about
ladder. The two ML
methods are trained by the low-level features extracted from
the video in its native resolution and the corresponding bitrate-
quality-resolution points.

the optimal

The remaining of the paper is organized as follows. Sec-
tion II formulates the problem deﬁnition of bitrate ladder
prediction, while Section III explains the proposed ML-based
method. The experimental results and discussions showing the
coding efﬁciency of the proposed method are presented in
Section IV, and ﬁnally, Section V concludes this paper.

II. PROBLEM FORMULATION

Let v be an input video sequence and S = {s1, s2, ..., s|S|}
a set of resolutions in which v can be encoded. An encoder is
also given whose task can be simpliﬁed in a function, denoted
as E, which receives v and a resolution si ∈ S, as well
as a target bitrate r. The simpliﬁed output of this encoder
is a quality index q. Without loss of generality, we assume
that the quality metric can potentially be any of the common
objective metrics such as Peak Signal-to-Noise Ratio (PSNR),
Video Multi-Method Assessment Fusion (VMAF) or Multi-
Scale Structural SIMilarity (MS-SSIM).

Encoding a video sequence v at resolution si and bitrate r

with an output quality q can be expressed as:

q = E(v, r, si),

where si ∈ S.

(1)

For a video sequence v, by varying the two parameters r
and si, the output qualities of encoder E generate a diagram of

R
N
S
P

d
e
l
a
c
S

R
N
S
P

d
e
l
a
c
S

45

40

35

30

10

15

log2 of bit/sec

(a) Full rate-quality points

45

40

35

30

Pv (s3)

Pv (s2)

Pv (s1)

10

15

log2 of bit/sec

R
N
S
P

d
e
l
a
c
S

R
N
S
P

d
e
l
a
c
S

45

40

35

30

4

3

2

1

4

4 4 4 4 4

4

4

4
4
4

3
3
3
3
3
2
2
2

1

1

1

10

15

log2 of bit/sec

(b) Convex hull

10

15

log2 of bit/sec

(c) Cross-points

(d) Bitrate ladder

Fig. 2: Four stages of constructing the bitrate ladder (d) from
the full rate-quality points (a), through the convex-hull (b) and
cross-over bitrate computations (c).

full rate-quality operating points, as shown in Fig. 2-(a). This
diagram is used as the starting point for the task of bitrate
ladder prediction.

Given a full rate-quality operating point diagram,
the
convex hull of a video v can be expressed as a function of
rate r as follows:

q∗ = Cv(r) where E(v, r, si) ≤ q∗

for all si ∈ S

(2)

In other words, the convex hull function Cv(r) determines
the highest quality that can be obtained for a video v after
encoding with E in the available resolutions S. This function
has been visualized in Fig. 2-(b), where labels and colorization
at given bitrate points indicate the resolution that is resulting
in the optimal quality q∗.

In this work, we assume that convex hulls are monotonic,
and moreover, each resolution switch is imperatively from
resolution si (where 1 ≤ i < |s|) to resolution si+1, which is
the immediate next larger available resolution. Therefore, for
each resolution si, a bitrate point can be calculated in which
the resolution switch must be applied. This bitrate is called the
cross-over bitrate of resolution si in the rest of this paper and
is expressed as:

two potentially different ladders, which are then used as inputs
to the ensemble aggregator for producing the ﬁnal bitrate
ladder prediction.

(3)

r∗
i = Pv(si) where
Cv(r∗
i ) = E(v, r∗
i + (cid:15)) = E(v, r∗

i , si) and
i + (cid:15), si+1).

Cv(r∗

In other words, Eq. (3) computes for a given resolution si,
the largest bitrate point as r∗
i , where the highest quality q∗ is
obtained by encoding in resolution si. While after that point
(i.e. addition of (cid:15), where (cid:15) > 0), a resolution switch to si+1
is needed. Fig. 2-(c) demonstrates an example computation of
cross-over bitrates.

The bitrate ladder of a sequence is deﬁned as a function
that determines the optimal resolution for any given bitrate. A
trivial approach to compute the bitrate ladder of sequence is
to actually encode it in all available resolutions and sufﬁcient
number of bitrates. By doing so, one can obtain the full rate-
quality operating points needed for Eq. (2) and Eq. (3). At
this point, the reference bitrate ladder of video v in resolutions
deﬁned in S, can be expressed as in Eq. (4). Fig. 2-d visualizes
an example of reference bitrate ladder computed from all
operational rate-quality points.

i∗ = L∗

v,S(r) where Pv(si−1) < r ≤ Pv(si).

(4)

In this paper, a ML-based method is used to learn how to
construct bitrate ladder of a video sequence, without having to
encode it in all resolutions:

ˆLv,S = F (v, S),

(5)

III. PROPOSED ENSEMBLE BITRATE LADDER PREDICTION

A. Framework

The main contribution of this paper is the deployment
of ensemble machine learning model, which is a mechanism
that allows combining multiple predictions coming from its
constituent learning algorithms. The number of constituent
methods can vary from two to several methods depending
on the performance of the methods. The prediction process
and inputs can be different in each ML method, however,
eventually the best resolution for a given bitrate is the output.
In the proposed framework, we use an ensemble aggregator
method to collect the output of all constituent methods and
provide the ﬁnal bitrate ladder.

Fig. 3 shows the overall framework of our proposed
method, including two main phases of “train” and “test”. These
two phases share a feature extraction step, which serves for
the training and testing of the two constituent bitrate ladder
prediction methods. The input video(s) v is to be represented
in the highest possible resolution, speciﬁed by S. In the train
phase, the goal is to independently train the two constituent
methods, such that they can individually predict the bitrate
ladder for any given video in the test phase. To do so, the
high resolution input is down-sampled, encoded, decoded and
ﬁnally up-sampled,
in order to provide the bitrate-quality
points needed to construct the ground-truth bitrate ladder. In
the test phase, the two constituent methods are used to predict

B. Classiﬁer constituent predictor

As the ﬁrst constituent bitrate ladder prediction method, a
multi-class classiﬁer is used. At the core of this method, model
M Cl is trained that receives as input, the video sequence v and
the target bitrate r, while the output is the index of predicted
optimal resolution, deﬁned in S:

ˆi = M Cl

S (v, r).

(6)

In other words, the ﬁrst method directly predicts the value
i in Eq. (4), without having to compute the cross-over points
Pv, denoted in Eq. (3). Therefore, by applying the core model
M Cl
S to all bitrate values, one can express the global operation
of the classiﬁer constituent predictor as:

ˆLCl

v,S = F Cl(v, S).

(7)

C. Regressor constituent predictor

In the second method, a regressor is used to predict the
cross-over bitrate points. Given a resolution si (where 1 ≤
i < |S|) of the video sequence v, the regressor model that has
learned the operation in Eq. (3), predicts at which bitrate the
resolution should be switched to si+1:

ˆri = M Rg

S (v, si).

(8)

By applying the regressor model in Eq. (4), to identify
the cross-over bitrates, one can express the second constituent
predictor as:

ˆLRg
v,S = F Rg(v, S)

(9)

D. Ensemble aggregator

Once the two predictions of the bitrate ladder are computed
by the constituent methods, the ensemble aggregator combines
the two ladders and produces the ﬁnal output, as:
ˆLv,S = Agr(F Cl, F Rg) = F (v, S).

(10)

Algorithm 1 describes how the function Agr in Eq. (10)
computes the ﬁnal predicted bitrate ladder. The goal of this
function is to take into account the two predictions made by
the two constituents and determine the ﬁnal resolution for each
bitrate point. In case that the two constituent predictions are
the same, the aggregation is simply done by choosing the
common prediction. However, in case of different predictions,
additional encodings by E are carried out to make the ﬁnal
decision. The number of encodings depends on a parameter,
denoted as isF ast in Algorithm 1. If the fast mode is used,
encoding is carried out only with the two resolutions predicted
by the constituent methods. Otherwise, all possible resolutions
are tested. In contrast with the “fast” mode, this mode is called
the “full” mode in the rest of this paper. Either mode, the
resolution that provides the highest quality among the tested
encodings is selected.

Fig. 3: Framework of proposed method, including the ”train” and ”test” phases. The parallel arrows indicate the process has
been carried out in all available resolutions of S.

Algorithm 1 Ensemble aggregator Agr

v,S, ˆLRg

input: ˆLCl
output: ˆLv,S
for r := MinRate to MaxRate do

v,S, isFast, MinRate, MaxRate

ˆiCl ← LCl
ˆiRg ← LRg
if ˆiCl = ˆiRg then

v,S(r)
v,S(r)

i∗ ← ˆiCl

else

if isFast then

i∗ ← arg maxi E(v; r, si) where i ∈ {ˆiCl,ˆiRg}

i∗ ← arg maxi E(v; r, si) where 1 ≤ i ≤ S

else

end if

end if
ˆLv,S(r) ← i∗

end for

E. Training process

I
T

30

20

10

0

0

20

40

60

80

100

SI

Fig. 4: The joint distribution of Spatial information (SI) and
Temporal information (TI)

spatial and temporal characteristics.

1) Dataset: One of the crucial steps in ML based methods
is to have a large number of sequences for training the models.
Therefore, we gathered a dataset of 100 videos from public and
private sources including: BVI SR [14], Derf collection [15],
MCML [16], SJTU [17] and UGV [18]. All sequences have
the native resolution of 3840×2160p with the frame rate of
60 fps. We have converted sequences in 10 bits to 8 bits and
all the other color formats to 4:2:0 format. As the sequences
have different duration, they have been split into chunks of one
second (64 frames). It is worth mentioning that an additional
scene change detection has been applied in order to ensure
content homogeneity within each chunk and content diversity
between different chunks.

In order to show the diversity of the dataset, we have
computed SI and TI descriptors [19]. In Fig. 4, the distribution
of these two spatial and temporal descriptors are shown. As
can be seen, the selected dataset covers a wide range of the

2) Features: The videos with a complex spatial charac-
teristics are likely to have larger difference between neigh-
boring pixels. Thus, in this work, we use Gray Level Co-
occurrence Matrix (GLCM) [20] which is a traditional spatial
features descriptor and has been used in many studies for
demonstrating the spatial complexity. GLCM is composed
of intensity contrast of neighboring pixels in a video frame.
Therefore, we can capture the level of coarseness as well as
directional information of the video texture. GLCM has ﬁve
main descriptors: contrast, correlation, energy, homogeneity
and entropy. In addition, to capture the temporal characteristics
of the video, we have extracted the Temporal Coherency (TC)
from two consecutive frames through the frames of the video.
Prior to using these features to predict the bitrate ladder, we
have used the recursive feature elimination method [21] to
select the most effective features.

Down ScaleEncDecUpScaleBitrateQualityConvex hullTrain model 1Train model 2Model 1EnsembleModel 2SSSSSSSSTrainTestFeatureextractionF. ML methods

In order to ﬁnd the proper ML methods for regression
and classiﬁcation, we trained and tested several methods. For
classiﬁcation, the decision tree classiﬁer with gradient boost
methods provided the best result compared to other kernels.
Similarly, for the regressor models, after testing several meth-
ods, Gaussian Process (GP) provided the best results compared
to other methods. Thus, we used the GP as the regressor for
predicting the three cross-over bitrates.

IV. EXPERIMENTAL RESULTS

A. Experiment setting

In the experiment, four resolutions are employed such that
S = {2160p, 1080p, 720p, 540p}. For down-scaling the video
sequences, the Ffmpeg [22] implementation of the Lanczos
ﬁlter [23] has been used. In order to upscale the videos, we
use the same ﬁlter in FFMPEG to bring back the down-scaled
videos into their native resolution. As all PSNR computations
are computed in the native resolution (e.g. 2160p), the scaled
PSNR metric has been used [24].

The VVC codec that has been used is the latest version
of VVenC [25], in the “faster” quality preset. As VVC has
not been widely used in any sector of the streaming/broadcast
ecosystem, there is neither ofﬁcially nor unofﬁcially no deﬁned
static Versatile Video Coding (VVC) bitrate ladder in the
literature/industry. In order to address this issue and pro-
to our performance measurements,
vide a reference point
we calculated the average bitrate ladder through our training
dataset and considered it as the static VVC bitrate ladder
in the experiments. In addition to the static ladder, the fully
specialized bitrate ladders computed from exhaustive encoding
in different resolutions for each sequence in the dataset have
also been used as benchmark. This ladder is referred to as the
Ground-Truth (GT) ladder in the results section.

For the evaluation, different metrics such as Bjøntegaard
Delta Bit Rate (BD-BR) [26] and prediction accuracy are used.
For comparing the bitrate ladders, we constructed R-D curves
of available rate and distortions values and compared them
with BD-BR metrics. To compute the BD-BR metric given
two bitrate ladders, one ladder is chosen as the “reference”,
while the other one as the “test”. Video sequences are then
encoded in several bitrates, while their resolution is determined
once by the “reference” ladder and once by the “test” ladder.
The bitrate and scaled PSNR values are then collected and
used with a mildly modiﬁed BD-BR computation in order to
enable it with more than four operational bitrate-quality points.
Finally, in order to avoid over-ﬁtting, the results are the output
of tenfold cross-validation, and all the metrics are averaged
over the ten folds.

B. Results

Table I summarizes the coding efﬁciency evaluation of
different settings of the proposed method. Notably, the ﬁrst two
rows present the performance of the two constituent predictors,
when used outside the proposed ensemble framework. The last
two rows are consequently the proposed ensemble method,
when the “fast” and “full” modes are used, respectively.

The ﬁrst metric demonstrates the accuracy of each method
in exact prediction of the optimal resolution over all tested
bitrates. While the second and third metrics indicate the BD-
BR performance versus the GT and static bitrate ladders, re-
spectively. It is noteworthy that the negative values of the BD-
BR metric indicate bitrate saving in the same level of quality,
hence, should be considered as improvement of performance.

The ﬁrst observation is that the regressor method glob-
ally has a better performance than the classiﬁcation method.
However, both ensemble methods (with fast and full encoding)
outperform the regressor method, in all three metrics. This
proves that the ensemble approach is indeed helping the grasp
the best out of each constituent predictor.

TABLE I: Average performance metrics of four different
versions of the proposed method.

Method
Classiﬁcation
Regressor
Ensemble (fast)
Ensemble (full)

Accuracy
0.76
0.83
0.90
0.92

BD-BR vs. GT
2.97%
1.37%
0.89%
0.77%

BD-BR vs. static
-11.45%
-12.63%
-13.05%
-13.14%

Fig. 5 provides a more detailed view on the BD-BR
performance. Each diagram in this ﬁgure presents histogram
of BD-BR metric on the test sequences. At
the GT
ladder has been used as reference and positive BD-BR values
indicate bitrate increase. Hence, being smaller is better. In
this sense, both ensemble methods signiﬁcantly outperform
the classiﬁcation and regressor methods. Inversely, the results
presented at right are obtained by using the static bitrate ladder
as reference. Hence, more negative values means more gain.

left,

The additional gain brought by the ensemble methods is
at the cost of encodings needed to aggregate decisions. To
understand this impact, Fig. 6 demonstrates the average bitrate
gain compared to the static bitrate ladder of different methods
with respect to their complexity. The complexity metric of this
experiment was the total encoding time spent for generating
necessary bitrate-quality points of each method. As shown, the
GT bitrate ladder method is highly complexity-intensive, while
a signiﬁcant portion of its BD-BR gain can be achieved by the
proposed methods at much lower complexity. Conversely on
the low complexity extreme of the diagram, the two methods
of classiﬁcation and regressor impose no complexity overhead.
However, their performance can be noticeably improved with
a limited number of additional encodings.

V. CONCLUSION

This paper proposes an ML-based method for predicting
the bitrate ladder in adaptive streaming use-cases. The pro-
posed method ﬁts two supervised machine learning methods on
a set of spatio-temporal features extracted from each sequence,
in order to learn their ground truth bitrate ladder. An ensemble
aggregation method is then used to improve the performance of
the two constituent methods at the cost of additional encodings.
The performance of the proposed solution is assessed using
a static and fully customized ground-truth bitrate ladders as
benchmark methods. Compared to static ladder, the proposed
method is able to achieve 13% coding efﬁciency gain in
terms of BD-BR, with negligible added complexity. While,

s
e
c
n
e
u
q
e
S

#

s
e
c
n
e
u
q
e
S

#

s
e
c
n
e
u
q
e
S

#

s
e
c
n
e
u
q
e
S

#

r
e
d
d
a
l

c
i
t
a
t
s

.
t
.
r
.

w

)

%

(

-

R
B
D
B

40

30

20

10

0

0

5

10

15

20

−20 −15 −10 −5

0

BD-BR (%) w.r.t. GT ladder

BD-BR (%) w.r.t. static ladder

(a) Classiﬁcation

40

30

20

10

0

0

5

10

15

20

−20 −15 −10 −5

0

BD-BR (%) w.r.t. GT ladder

BD-BR (%) w.r.t. static ladder

(b) Regressor

40

30

20

10

0

0

5

10

15

20

−20 −15 −10 −5

0

BD-BR (%) w.r.t. GT ladder

BD-BR (%) w.r.t. static ladder

(c) Ensemble (fast)

40

30

20

10

0

60

40

20

0

60

40

20

0

60

40

20

0

60

40

20

0

0

5

10

15

20

−20 −15 −10 −5

0

BD-BR (%) w.r.t. GT ladder

BD-BR (%) w.r.t. static ladder

(d) Ensemble (full)

Fig. 5: Distribution of BD-BR on test sequences

Classiﬁcation (0%)

−12

Regression (0%)

−13

Ensemble fast (8%)

Ensemble full (14%)

Ground truth (100%)

0

0.2

0.4

0.6

0.8

1

1.2

Encoding time (sec) needed for ladder computation

·107

Fig. 6: BD-BR vs. complexity evolution of different methods.
The numbers in parenthesis indicate the overhead in terms of
encoding time with respect to the GT method as reference.

compared to the fully customized ladder, the proposed method
can signiﬁcantly reduce the complexity at the cost of only
0.77% BD-BR coding efﬁciency loss.

REFERENCES

[1]

I. Sodagar. The MPEG-DASH standard for multimedia streaming over
the internet. IEEE multimedia, 18(4):62–67, 2011.

[2] Apple. HTTP live streaming. https://bitmovin.com/whitepapers/Bitmovin-

Per-Title.pdf.

[3] R. Kaafarani et al. Evaluation of bitrate ladders for Versatile Video
In 2021 International Conference on Visual Communications

Coder.
and Image Processing (VCIP), pages 1–5. IEEE, 2021.

[4] K. Goswami et al. Adaptive multi-resolution encoding for ABR
In 2018 25th IEEE International Conference on Image

streaming.
Processing (ICIP), pages 1008–1012. IEEE, 2018.

[5] Y. Reznik et al. Optimal multi-codec adaptive bitrate streaming.

In
2019 IEEE International Conference on Multimedia Expo Workshops
(ICMEW), pages 348–353. IEEE, 2019.

[6] E. C¸ etinkaya et al. Fast multi-resolution and multi-rate encoding for
HTTP adaptive streaming using machine learning. IEEE Open Journal
of Signal Processing, 2:484–495, 2021.

[7] S. Lederer et al. Dynamic adaptive streaming over HTTP dataset. In
Proceedings of the 3rd multimedia systems conference, pages 89–94,
2012.
[8] Bitmovin.

title
https://bitmovin.com/whitepapers/Bitmovin-Per-Title.pdf.

encoding.

paper:

White

Per

[9] Cambria.

Feature: Source

adaptive bitrate

ladder

(SABL).

https://www:capellasystems:net/capella wp/wp-content/uploads/
2018/01/CambriaFTC SABL:pdf.
Instant

encoding.

per-title

https://mux.com/blog/

[10] MUX.

instant-per-title-encoding/.

[11] A. Katsenou et al. Efﬁcient bitrate ladder construction for content-
IEEE Open Journal of Signal

optimised adaptive video streaming.
Processing, 2021.

[12] L. Toni et al. Optimal selection of adaptive streaming representations.
ACM Transactions on Multimedia Computing, Communications, and
Applications (TOMM), 11(2s):1–26, 2015.
ITU Telecommunication Standardization Sector. Objective perceptual
multimedia video quality measurement in the presence of a full refer-
ence. ITU-T Recommendation J, 247:18, 2008.

[13]

[14] A. Mackin et al. A study of subjective video quality at various spatial
In 2018 25th IEEE International Conference on Image

resolutions.
Processing (ICIP), pages 2830–2834. IEEE, 2018.

[15] Derf’s collection. https://media.xiph.org/video/derf/.
[16] M. Cheon et al. Subjective and objective quality assessment of com-
pressed 4K UHD videos for immersive experience. IEEE Transactions
on Circuits and Systems for Video Technology, 28(7):1467–1480, 2017.
In 2013 Fifth
International Workshop on Quality of Multimedia Experience (QoMEX),
pages 34–35. IEEE, 2013.

[17] L. Song et al. The SJTU 4K video sequence dataset.

[18] A. Mercat et al. Uvg dataset: 50/120fps 4K sequences for video codec
analysis and development. In Proceedings of the 11th ACM Multimedia
Systems Conference, pages 297–302, 2020.

[19] S. Winkler. Analysis of public image and video databases for quality
IEEE Journal of Selected Topics in Signal Processing,

assessment.
6(6):616–625, 2012.

[20] R. M. Haralick et al. Textural features for image classiﬁcation. IEEE

Transactions on systems, man, and cybernetics, (6):610–621, 1973.

[21] M. Kuhn et al. Applied predictive modeling, volume 26. Springer, 2013.
[22] FFMPEG. https://www.ffmpeg.org/.
[23] C. Duchon. Lanczos ﬁltering in one and two dimensions. Journal of
Applied Meteorology and Climatology, 18(8):1016–1022, 1979.
[24] C. Helmrich et al. A study of the extended perceptually weighted peak
signal-to-noise ratio (XPSNR) for video compression with different
resolutions and bit depths. ITU Journal: ICT Discoveries, 3(1):65–72,
2020.

[25] A. Wieckowski et al. VVenC: An open and optimized VVC encoder
implementation. In 2021 IEEE International Conference on Multimedia
& Expo Workshops (ICMEW), pages 1–2. IEEE, 2021.

[26] G. Bjontegaard. Calculation of average PSNR differences between RD-

curves. VCEG-M33, 2001.

