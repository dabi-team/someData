2
2
0
2

t
c
O
9
1

]

M
G
.
h
t
a
m

[

4
v
9
5
4
2
0
.
6
0
2
2
:
v
i
X
r
a

A bit better: Variants of duality in geometric algebras with
degenerate metrics

Charles Gunn, Ph. D.
Raum+Gegenraum
Falkensee, Germany

October 20, 2022

Abstract

Multiplication by the pseudoscalar I has been traditionally used in geometric
algebra to perform non-metric operations such as calculating coordinates and the
regressive product.
In algebras with degenerate metrics, such as euclidean PGA
𝑃(R∗
3,0,1), this approach breaks down, leading to a search for non-metric forms of
duality. The article compares the dual coordinate map 𝐽 : 𝐺 → 𝐺∗, a double algebra
duality, and Hodge duality 𝐻 : 𝐺 → 𝐺, a single algebra duality for this purpose.
While the two maps are computationally identical, only 𝐽 is coordinate-free and
provides direct support for geometric duality, whereby every geometric primitive
appears twice, once as a point-based and once as a plane-based form, an essential
feature not only of projective geometry but also of euclidean kinematics and dynam-
ics. The article concludes with a proposed duality-neutral software implementation,
requiring a single bit field per multi-vector.

1 History

Until recently, almost all literature on geometric algebras assumed that the metric was
non-degenerate. A typical justification for this assumption can be found in [HLR01],
Sec. 13.8:

Any degenerate algebra can be embedded in a non-degenerate algebra of
larger dimension, and it is almost always a good idea to do so. Otherwise,
there will be subspaces without a complete basis of dual vectors, which will
complicate algebraic manipulations.

In this context, the dual of a multi-vector 𝑋 in a geometric algebra 𝐺 is meant the
orthogonal complement, obtained by pseudoscalar multiplication 𝑃 : 𝑃(𝑋) := 𝑋 𝐼 (or
some closely-related variant). When 𝐼2 ≠ 0, 𝑃 is a grade-reversing map that is a vector
space isomorphism on each (cid:211)𝑘. 𝑃 can then be used to carry out crucial computations
such as the calculating coordinates and the regressive product (see Secs. 4 and 6 below).

1

 
 
 
 
 
 
When the metric is degenerate (𝐼2 = 0), however, 𝑃 is no longer an isomorphism and
these algorithms cease to function.

At about the same time as the above citation, Jon Selig ([Sel00]) announced the
existence of a geometric algebra for 𝑛-dimensional euclidean space E𝑛 with degenerate
signature (𝑛, 0, 1), that is, one basis vector that squares to 0. This algebra was worked
out in more detail by the current author in [Gun11a],[Gun11b],[Gun17b], and [Gun17a].
Selig and Gunn suggested different approaches to avoid the use of 𝑃, based on the
common observation that the calculations in question are intrinsically non-metric, and
that the use of 𝑃 is a matter of convenience, not necessity.

In the meantime a further alternative to 𝑃 has been proposed. Combined with the
original 𝑃, these four variants present a daunting complexity to the newcomer to the
field. This article gives an overview of these different approaches, point out differences
and similarities, and propose a simple software design allowing all to co-exist peacefully
to a large extent. The article also proposes a terminology to allow the different forms of
duality to be conceptually differentiated.

2 Outline

The article begins with reviewing some prerequisites for understanding its contents in
Sec. 3. It then turns to consider metric and non-metric strategies for calculating coordi-
nates in Sec. 4. This discussion leads to the introduction of the right complement map in
Sec. 5, which plays a large role in what follows. Sec. 6 addresses strategies to calculate
the regressive product. This features four different approaches: the metric one (valid
only for non-degenerate metrics), the shuffle product (from the theory of Grassmann-
Cayley algebras), the right complement map (also known as Hodge duality), and the
dual coordinate map (also known as Poincar´e duality). A more detailed comparison of
Hodge and Poincar´e duality follows in Sec. 7. It is shown that in terms of a given basis,
the underlying calculations are identical, differing only in how the results are interpreted:
as elements of 𝐺 (Hodge) or of 𝐺∗ (Poincar´e). But 𝐽, in contrast to 𝐻, is a natural map.
Finally, it introduces the terms single algebra, resp., double algebra representation to
distinguish the results. Sec. 8 introduces geometric duality, a powerful but little-known
feature of the double algebra approach that plays a key role in euclidean rigid body me-
chanics. Sec. 9 then proposes a unified software implementation that offers advantages
to both double and single algebra approaches. Sec. 10 sums up the results presented.

3 Projective geometric algebra

The discussion assumes basic familiarity with geometric algebra and linear algebra.

Projective geometric algebra ([Gun11b], [Gun17b], [Gun19]) introduces the distinc-
tion of “point-based” or “plane-based” geometric algebras, depending on whether 1-
vectors are interpreted to be elements of R𝑃𝑛 (points) or of its dual space R𝑃𝑛∗ (hyper-

2

planes). The wedge product ∧ is accordingly join, resp., meet. These two approaches
lead to the standard, resp., dual construction of space. In general we let 𝐺 represent any
PGA – either point- or plane-based – and 𝐺∗ its dual algebra, representing the same
projective space but using the opposite construction. In the context of PGA, then, every
geometric primitive appears doubled: once in plane-based form and once in point-based
form. The existence of this little-known but pervasive geometric duality is explored more
fully in Sec. 8. It plays a key role in the considerations presented here.

This article focuses on the case of most practical interest: 𝐺 = 𝑃(R∗

3,0,1), 3D euclidean
PGA, which we also refer to as EPGA. We assume that 𝐺∗ has the same signature and
is hence the algebra 𝑃(R3,0,1), dual euclidean space (DES), discussed more in Sec. 8.6.2.
The metric of 𝐺∗ plays only a small role in this article since it is focused on non-metric
computations.

4 Calculating coordinates

As an introduction to the use of duality in geometric algebra, we begin by showing how
the 𝑃 map above can be used to obtain the coordinates of 1-vectors with respect to a
given basis. Readers who are familiar with this topic are encouraged to skip ahead to
the discussion of the right complement map in Sec. 5.

4.1 Calculating coordinates using reciprocal frames

Let 𝐺 be an 𝑛-dimensional geometric algebra such that I2 ≠ 0. Let e𝑖 be a basis of the
1-vectors (cid:211)1. Then the reciprocal basis e𝑖 of (cid:211)1 is defined as:

e𝑖 := (−1) (𝑖−1) (e1 ∧ e2... ∧ (cid:98)e𝑖 ∧ ... ∧ e𝑛) · I−1

(1)

Here (cid:98)e𝑖 means to omit the e𝑖 element from the wedge product, while · represents the
generalized inner product of two blades, that is the lowest-grade part of their geometric
product.

Exercise: e𝑖 is an orthonormal basis ⇐⇒ e𝑖 = e𝑖 for all 𝑖.

One of the main purposes of the reciprocal frame is to quickly compute the coordinates
of a vector with respect to a non-orthogonal basis (as discussed in Sec 3.8 of [DFM07]
and later in the discussion of directional derivative). In fact, the reciprocal basis is so
constructed that if b = 𝑏𝑖e𝑖 is a 1-vector, then 𝑏𝑖 = e𝑖 · b. We now turn to a method to
calculate coordinates that doesn’t depend on the metric.

4.2 Calculating coordinates without a metric

There is no logical necessity for invoking a metric in order to calculate coordinates with
respect to a basis. They are well-defined in any real vector space. ([Gun17b], Sec. 4.1.2).

3

We present some results in the vector space setting; the transition to the projective
setting doesn’t present any difficulties since “calculating coordinates” commutes with
“projectivization” (of course up to multiplication by a non-zero scalar!).

4.2.1 Canonical dual basis
The key step is to construct the canonical dual basis in (cid:211)𝑛−1, the space of co-vectors.
𝑖 } to distinguish it from the reciprocal frame. This is a basis {e∗
We use the notation {e∗
𝑖 }
for the (𝑛 − 1)-vectors (cid:211)𝑛−1 such that e𝑖 ∧ e∗
𝑖 := (−1) (𝑖−1) e1 ∧ ... ∧(cid:98)ei ∧ ...e𝑛.
Then it’s easy to verify e𝑖 ∧ e∗
𝑖 I so it satisfies the definition of canonical dual basis.

𝑖 I. Define e∗

𝑗 = 𝛿 𝑗

𝑗 = 𝛿 𝑗

Remark. This construction is identical to that of the reciprocal frame, but leaving out
the pseudoscalar multiplication.

1 = I. Construct the canonical dual bases with respect to these two bases:
, e(cid:48)∗

The canonical dual basis is not coordinate-free. To see this, in any 2D PGA,
1} = {e0, e0 + e1}. Then I(cid:48) =
consider replacing e1 with e0 + e1 so the new basis {e(cid:48)
0
e(cid:48)
0 ∧ e(cid:48)
for
the first basis {e∗
1} =
0
0} = {e0 + e1, −e0} where the second equality follows from substituting. So the
{e(cid:48)
dual of e0 = e(cid:48)
0 with respect to the first basis is e1 while with respect to the second basis
it is e(cid:48)

1} = {e1, −e0}, while with respect to the second basis {e(cid:48)∗

1 = e0 + e1. So this is not coordinate-free.

1, −e(cid:48)

, e∗

, e(cid:48)

0

4.2.2 Calculating coordinates using the dual basis
Let b be an arbitrary 1-vector b = (cid:205) 𝑏𝑖e𝑖. That is, we know by general principles that
the coordinates 𝑏𝑖 exist, the challenge is to calculate them.

First, introduce the linear map 𝑆 : (cid:211)𝑛 → R satisfying p = 𝑆(p)I, the coordinate of p

with respect to the unit pseudoscalar I. Then define:

^𝑏𝑖 = 𝑆(b ∧ e∗
𝑖 )

and (cid:98)b :=

∑︁ ^𝑏𝑖e𝑖

We show that b = (cid:98)b. Indeed, consider the 𝑛 quantities (b − (cid:98)b) ∧ e∗
𝑗 = ((cid:205) ^𝑏𝑖e𝑖) ∧ e∗

𝑗 = ^𝑏 𝑗I by
𝑗 = ^𝑏 𝑗I by definition of dual basis. Hence

𝑗. b ∧ e∗

definition of ^𝑏 𝑗, while (cid:98)b ∧ e∗
(b − (cid:98)b) ∧ e∗

𝑗 = 0 for all 𝑗, which can only happen if b − (cid:98)b = 0, so b = (cid:98)b.

Example. This metric-neutral approach faithfully mirrors the nature of coordinates as
seen in this example. Begin with a non-orthogonal basis {𝑒𝑖 } for R3 and consider the dual
basis, consisting of the 3 planes {𝑒∗
𝑘 := 𝑒𝑖 ∧ 𝑒 𝑗 } spanned by pairs of these basis vectors.
Choose an arbitrary point P. Then P can be represented uniquely as the intersection
of three planes obtained by parallel displacement of {𝑒∗
𝑘 }. The coordinates of P are just
the magnitude of these displacements. The wedge products P ∧ 𝑒∗
𝑘 that appear in the
coordinate calculations measure these displacements.

4

4.3 Comparison of the two methods

Note that the metric is applied twice when using the reciprocal frame to calculate co-
ordinates: first in calculating the reciprocal frame, and secondly when computing the
individual coordinate components of the 1-vector. The approach using the dual basis ba-
sically omits the first inner product and replaces the second with a wedge product. This
is a typical pattern in the usage of pseudoscalar multiplication to compute non-metric
quantities: by applying it twice, the metric dependence is nullified, since I2 = ±1.

4.4 Canonical dual basis for general 𝑘-vectors
The canonical dual basis can be defined for (cid:211)𝑘 for any 𝑘. Since this will be important
for the sequel we introduce it here. We sketch the construction for general dimension 𝑛
but focus then on the case 𝑛 = 4. The preferred condition remains that for a basis vector
𝑒𝐼 with index set 𝐼 ⊂ {1, 2, ..., 𝑛} (written as a 𝑘-digit integer) we want that e𝐼 ∧ e∗
𝐼 = I
where e∗

𝐼 is a basis vector of grade (𝑛 − 𝑘).
When (𝑛 − 𝑘) > 1, we can calculate e∗

𝐼 in the following way. Choose an index set 𝐼⊥
such that the concatenation (𝐼 𝐼⊥) is an even permutation of (1234). For example when
𝐼 = 1, 𝐼⊥ = 032. Since #(𝐼⊥) = (𝑛 − 𝑘) > 1, we can always swap elements if necessary to
𝐼 := e𝐼 ⊥. For example, when 𝐼 = {02}, then
obtain the desired condition. Then define e∗
𝐼 ⊥ = 31 since (0231) is an even permutation, and e∗

𝐼 ⊥ = e31.
When 𝑘 = 𝑛 − 1, #(𝐼⊥) = 1, say 𝐼⊥ = {𝑖}. Then define e∗

𝐼 := (−1) (𝑛−1) e𝑖.
Consult the row of Table 1 labeled 𝐻 for a full listing for the case 𝑛 = 4.

Correction. The original description of the calculation of this index set in [Gun11a],
Sec. 2.3.1.3, overlooked the special case 𝑘 = 𝑛 − 1 and the consequent introduction of
some minus signs in the dual basis vectors.

5 The right complement map 𝐻

In the context of a geometric algebra the canonical dual basis is closely related to the
right complement map, which plays a key role in the discussion of the regressive product
below. The same results can also be obtained using left complements; the two approaches
are equivalent. We turn now to discuss the right complement map.

A “right complement” of an element x in a geometric algebra 𝐺 is an element x∗
satisfying xx∗ = I. When x−1 exists, then this right complement is unique and can be
directly computed as x∗ = x−1I. However, when the metric is degenerate, the right
complement is no longer well-defined.

Projective formulation. In projective geometry, two elements x and y are considered
equivalent when x = 𝜆y for 𝜆 ∈ R, 𝜆 ≠ 0. Since the focus of this article is projective
geometric algebra, we rephrase the condition of right complement to be xx∗ = 𝜆I for
some 𝜆 ≠ 0. Of course it’s always possible to scale x∗ by 𝜆−1 so that xx∗ = I. In this case

5

Figure 1: Right complement of −e021 is not well-defined in 𝑃(R∗
the form 𝑧 = 𝛼 are right complements.

3,0,1). All the planes of

we say x∗ is the strict right complement of x. Unless we say otherwise we assume in the
sequel we are dealing with the projective right complement.

Example. When the metric is degenerate, as with euclidean PGA, and x2 = 0, then the
right complement is not well-defined. For example, let x = −e021, the ideal point in the
negative z-direction. Then x∗ := e3 (e3 is the z-plane) certainly satisfies xx∗ = I but so
does x∗
0 = 0.

𝛼 := e3 + 𝛼e0 for any 𝛼 ∈ R since e2

Geometric interpretation. x∗
𝛼 represents the plane parallel to e3 at a signed distance
of 𝛼 from it. We conclude that if a plane p is a right complement then all planes parallel
to p are also a right complement. Hence the “right complement” isn’t well-defined in
this case. See Fig. 1.

5.1 Defining the right complement using the dual basis

If we want to have a well-defined right complement map in the presence of null elements
it’s clear from the above that it can’t depend on the metric. In the following we obtain
a non-metric form of right complement. The price, as we shall see, is that it is not
coordinate-free.

Define the right complement map 𝐻 with respect to the basis e𝑖 as follows. If b =

(cid:205) 𝑏𝑖e𝑖, then

1
(cid:219)

→

𝑛−1
(cid:219)

𝐻 :

: 𝐻 (b) :=

∑︁ 𝑏𝑖e∗

𝑖

6

where e∗

𝑖 is the canonical dual basis defined in Sec. 4.2.1.

Verify that 1) b ∧ 𝐻 (b) = 𝜆I, where 𝜆 := (cid:205) 𝑏2

𝑖 , hence 2) 𝜆−1𝐻 (b) is the strict right

complement, and 3) 𝐻 (b) is the projective right complement of b.

5.1.1 Geometric interpretation

Notice that this converts a 1-vector to an (𝑛 − 1)-vector by interpreting its coordinates
with respect to the canonical dual basis of (𝑛 − 1)-vectors. Or, expressed in other words,
it is the linear extension of the dual basis map e𝑖 → e∗
𝑖 to the whole vector space. Since
it is defined in terms of the canonical dual basis, 𝐻 is not coordinate-free.

5.1.2 Right complement and Hodge duality

It can be shown that 𝐻 induces a non-degenerate inner product (cid:104), (cid:105)𝐻 on the 1-vectors
such that

X ∧ 𝐻 (Y) = (cid:104)X, Y(cid:105)𝐻 I

In this form it is well-known as the Hodge star map, or Hodge duality. This in effect
overcomes the absence of a non-degenerate metric by creating a new one. We’ll see below
in Sec. 6.3 how Poincar´e duality avoids this and is also coordinate-free. The extension
of 𝐻 to the full algebra is not difficult and can be found in standard texts.

6 Calculating the regressive product

We assume that 𝐺 is euclidean PGA, that is, the plane-based algebra 𝐺 = 𝑃(R∗
3,0,1),
so that ∧ is meet. We want to investigate how to compute the join of two elements.
To distinguish this operation from the standard wedge operation ∧ which is sometimes
called the progressive product, it is called the regressive product and written ∨. (Similar
remarks apply in a standard PGA; there the 1-vectors are points and the regressive
product is join, but since euclidean PGA is the focus of this article, we focus on a
plane-based 𝐺).

Notice that the regressive product X ∨ Y of a 𝑘- and an 𝑚-vector will be 0 unless

𝑘 + 𝑚 ≥ 4.

We begin by describing how the regressive product has been traditionally com-
puted using pseudoscalar multiplication, followed by descriptions of three non-metric
approaches, all of which yield the same results.

6.1 Via non-degenerate metric

In the terminology of projective geometry, the map 𝑃 is the polarity on the metric
quadric. As such, it maps a subspace onto its orthogonal complement. When I2 ≠ 0,
then 𝑃2(𝑋) (cid:27) 𝑋 (up to projective equivalence) and maps each point to a unique plane

7

and vice-versa, that is, it is a grade-reversing involution. It has been traditionally used
to calculate the regressive product in either of two forms:

X ∨ Y := I−1(IY ∧ IX)

(= (YI−1 ∧ XI−1)I)

This formula is widely available in the literature, e.g., Formula 21.8 in [Dor11], p.

443.

However, when the metric is degenerate, I−1 doesn’t exist, and 𝑃 is not injective.
In EPGA, for example, 𝑃 collapses the whole of euclidean space onto the ideal plane:
the orthogonal complement of any euclidean multi-vector is ideal. A plane is mapped
to its normal direction (an ideal point); a line is mapped to the ideal line of directions
perpendicular to the direction of the line; every point is mapped to the ideal plane. This
behavior is related to that discussed in Sec. 5 and shown in Fig. 1. In this and other
degenerate cases non-metric methods are required to obtain the regressive product.

6.2 Via shuffle product

Historically, Grassmann-Cayley algebras were developed to meet this need in a coordinate-
free way through the definition of a so-called shuffle product ([Sel05], Ch. 10, [Whi95]).
For an 𝑗- and 𝑘-blades a = 𝑎1 ∧ 𝑎2 ∧ ... ∧ 𝑎 𝑗 and b = 𝑏1 ∧ 𝑏2 ∧ ... ∧ 𝑏𝑘 where 𝑗 + 𝑘 ≥ 𝑛,
the shuffle product is defined as:

a∨b :=

1
(𝑛 − 𝑘)!( 𝑗 + 𝑘 − 𝑛)!

∑︁

𝜎

sign(𝜎)(det(𝑎 𝜎 (1) , ..., 𝑎 𝜎 (𝑛−𝑘) , 𝑏1, ...𝑏𝑘)𝑎 𝜎 (𝑛−𝑘+1) , ..., 𝑎 𝜎 ( 𝑗)

where 𝜎 is a permutation of 1, 2, ..., 𝑗.

Exercises. Calculate the shuffle products a) e123 ∨ e032 and b) e0 ∨ e123. [Answers: a)
e23, b) 1].

6.3 Via dual coordinate map (Poincar´e duality)

[Gun11a], [Gun19] describes an alternative duality map known in the world of multilinear
algebra as Poincar´e duality 𝐽 : 𝐺 → 𝐺∗ ([Gre67]). The action of 𝐽 is the essence of
simplicity:
it maps an element in the first algebra to the element of the dual algebra
that represents the same geometric entity. Since it converts back and forth between
coordinates in the point-based and plane-based algebras, 𝐽 has historically been known
also as the dual coordinate map. Like 𝑃, 𝐽 is a grade-reversing map that is a vector space
isomorphism on each grade. We’ll see below in Sec. 7.1 that 𝐽 is essentially an identity
map and plays an essential role in the discussion of geometric duality in Sec. 8.

To better understand 𝐽 we look more closely at its action in projective space R𝑃3.

8

Figure 2: The fundamental tetrahedron for R𝑃3.

6.3.1 The fundamental tetrahedron

𝐽 is defined by its action on the standard bases shown in Fig. 2.This shows the funda-
mental tetrahedron of projective 3-space R𝑃3. The vertices, edge-lines, and face-planes
of the fundamental tetrahedron represent the basis vectors for the exterior algebra. Su-
perscripts are used for the standard construction, where the vertices are 1-vectors, edge-
lines are 2-vectors, and face-planes are 3-vectors, while subscripts are used for the dual
construction where planes are 1-vectors, lines are 2-vectors, and points are 3-vectors.

3-vectors are represented by capital letters according to the rule E𝑖 := e 𝑗 𝑘𝑙, E𝑖 := e 𝑗 𝑘𝑙
whereby the defining condition is that (𝑖 𝑗 𝑘𝑙) is an even permutation of (0123) and is
alphabetically the least such permutation: E1 = e032. Two-vectors are paired in this
way with 2-vectors. For example, the left green line is e31 = e3 ∧ e1 in 𝐺 (plane-based
coordinates, ∧ is meet) while in the dual algebra the same line is represented by e02 since
e02 = e0 ∧ e2 in 𝐺∗ (point-based coordinates, ∧ is join). We use e31 since (0231) is an
even permutation. Table 1 shows a complete listing of 𝐽 : 𝐺 → 𝐺∗. Note that the index
sets that appear are exactly the same as those produced by 𝑃, the (non-deganerate)
metric polarity.

In EPGA, the plane e0 is the ideal plane; the point E0 is the origin, the lines e0𝑖 for

𝑖 ∈ {1, 2, 3} are the coordinate axes, etc.

9

2301ee=0231ee=1203ee=3102ee=0312ee=e3e1E1=0123ee=e3E3=e0E0=e2E2=E3=e1E1=e2E2=e0E0=6.3.2

𝐽 in terms of a basis

Expressing 𝐽 in terms of a basis proceeds exactly as the definition of 𝐻 described in Sec.
4.4. However where 𝐻 (e𝐼 ) := e𝐼 ⊥, one has 𝐽 (e𝐼 ) := e𝐼 ⊥
: the target domain is 𝐺∗, not 𝐺.
See Tab. 1, the row labeled 𝐽.

Consider e12, the meeting plane of e1 (the 𝑥 = 0 plane) and e2 (the 𝑦 = 0 plane).
According to the table, 𝐽 (e12) = e03, the joining line of e0, the origin, and e3, the ideal
point in the 𝑧-direction. Our choice of 𝐼⊥ as complementary to 𝐼 guarantees that both
points are contained in both planes e1 and e2 and hence join to form their common line
e12.

In general, if e𝐼 represents the meet of the 𝑘 planes 𝔓 := {e𝑖1

, ...e𝑖𝑘 }, then the
(𝑛 − 𝑘) points represented by the indices of 𝐼⊥ will be exactly the basis vectors of 𝐺∗
that are incident with all of the planes in 𝔓. Hence their join lies in e𝐼 . Reversing the
argument establishes that the meet must lie in the join, so that e𝐼 and 𝐽 (e𝐼 ) are the
same geometric entity.

, e𝑖2

6.4 Via right complement map (Hodge duality)

The right complement map 𝐻 or Hodge duality, provides another way to calculate the
regressive product when the metric of 𝐺 is degenerate. Again, the formula is isomorphic
to the preceding two:

X ∨ Y := 𝐻−1(𝐻 (X) ∧ 𝐻 (Y))

As noted above in Sec. 5.1.2, Hodge duality is equivalent to defining a second (non-
degenerate) metric on 𝐺. We discuss that and other related issues in the next section.

6.5 Comparison of the different approaches

The shuffle product is quite different from the other approaches since it calculates the
regressive product directly from its arguments. Leaving it to the side, the remaining
three approaches can be expressed using some progressive product:

Metric polarity: X ∨ Y := I−1(IY ∧ IX)
Poincar´e duality: X ∨ Y := 𝐽−1(𝐽 (X) ∧ 𝐽 (Y))

Hodge duality: X ∨ Y := 𝐻−1(𝐻 (X) ∧ 𝐻 (Y))

e
𝑃(e)
𝐽 (e)
𝐻 (e)

1

e0123
e0123

e0123

e0

e123
e123

e123

e1

e032
e032

e032

e2

e013
e013

e013

e3

e021
e021

e021

e01

e23
e23

e23

e02

e31
e31

e31

e03

e12
e12

e12

e12

e03
e03

e03

e31

e02
e02

e02

e23

e123

e032

e013

e021

e01 −e0
e01 −e0

e01 −e0

−e1
−e1

−e1

−e2
−e2

−e2

−e3
−e3

−e3

I

1

1

1

Table 1: Metric polarity 𝑃, dual coordinate 𝐽 and right complement 𝐻 maps for R𝑃3.

10

Notice however that the first formula reverses the order of its arguments. This reflects
the fact that the metric polarity is expressed using the geometric product while the other
two forms of duality involve algebra maps. 𝐽 and 𝐻 differ in their target algebra. Table
1 contains a full listing of the action of all three duality maps on a basis set. The index
sets for the image basis set agree in all cases.

For future reference the inverse maps 𝑃−1, 𝐽−1, and 𝐻−1 are given in Table 2. Note

the slight differences to Table 1 occasioned by the minus signs in the latter.

7 Comparison of Poincar´e and Hodge duality

Since we are interested here with non-metric duality, we now compare the duality maps
𝐽 and 𝐻. Tab. 1 reveals that, expressed in coordinates, the two maps are identical but
have different target spaces. Accordingly, the only difference is that the index set of the
values appears in 𝐽 as superscripts while 𝐻 uses them as subscripts.

In light of this, it might seem surprising that only 𝐽 is coordinate-free. How can we
understand this? We define a map 𝑅 : 𝐺 → 𝐺∗ by 𝑅 = 𝐽 ◦ 𝐻−1. Consult the diagram
below In the special coordinates that we have introduced above, 𝑅 simply raises the
indices. What is 𝑅 doing geometrically?

((cid:211)𝑛−𝑘)∗ ⊂ 𝐺∗

𝑅

𝐽

(cid:211)𝑛−𝑘 ⊂ 𝐺

𝐻

(cid:211)𝑘 ⊂ 𝐺

Theorem 1. 𝑅(X) is the left complement of 𝐽 (X) in 𝐺∗.

Proof. We write the wedge product in 𝐺∗ as ∧∗ and the pseudoscalar of 𝐺∗ as I∗.

𝑅(X) ∧∗ 𝐽 (X) =
𝑅(X) ∧∗ 𝑅(𝐻 (X)) =

𝑅(X ∧ 𝐻 (X)) = 𝑅(I) = I∗

The step from (3) → (4) follows from the fact that 𝑅 is an algebra isomorphism.

(2)

(3)

(4)

(cid:3)

e
𝑃−1(e)
𝐽−1(e)
𝐻−1(e)

1

e0

e1

e2

e3

e0123 −e123 −e032 −e013 −e021
e0123 −e123 −e032 −e013 −e021

e0123 −e123 −e032 −e013 −e021

e01

e23
e23

e23

e02

e31
e31

e31

e03

e12
e12

e12

e12

e03
e03

e03

e31

e02
e02

e02

e23

e01
e01

e01

e123

e032

e013

e021

e0
e0

e0

e1
e1

e1

e2
e2

e2

e3
e3

e3

I

1

1

1

Table 2: Inverses of the 𝑃, 𝐽 and 𝐻 maps for R𝑃3.

11

Example: When X = e1, then 𝑅(X) = 𝐽 (𝐻−1(X)) = 𝐽 (−e032) = e1, 𝐽 (𝑋) = e032, and

𝑅(X) ∧∗ 𝐽 (X) = I∗.

We present without proof the following restatement of the theorem:

Corollary 1. 𝐽−1(𝑅(X)) is the left complement of X in G.

That is, the 𝐽 pull-back of 𝑅 is the inverse of 𝐻, hence the left-complement in 𝐺.

7.1

𝐽 is a natural map

Writing 𝐽 = 𝑅 ◦ 𝐻, we can see that the above theorem provides another proof that 𝐽
is the “identity map” on geometric primitives, since, at the level of geometry, it is the
composition of right complement with left complement, which is trivially the identity
map. More importantly this factorization makes clear why 𝐽 is coordinate-free and 𝐻 is
not: whatever coordinate dependence is present in 𝐻 (right complement) is undone by
the application of 𝑅 (left complement). Or, in other words, 𝐽 is a natural map while 𝐻
is not.

7.2 Double algebra versus single algebra

We can characterize Poincar´e duality as a double algebra approach since every invocation
of the dual map 𝐽 (𝑋) moves the geometric primitive 𝑋 back and forth between 𝐺 and 𝐺∗.
Invocations of 𝐻 (𝑋), Hodge duality, on the other hand, remains in the algebra 𝐺 and is
equivalent, as noted above, to multiplication by a second, non-degenerate pseudoscalar.
It turns out that the double algebra approach is equivalent to geometric duality, a little-
known but powerful feature of projective geometry that we now turn to discuss.

8 Geometry duality: the double nature of geometric prim-

itives in PGA

As everyone who has begun to learn it has found out, one of the challenges of learning
euclidean PGA 𝐺 = 𝑃(R∗
3,0,1) is that it is a plane-based algebra. See Fig. 3. 1-vectors
represent planes, the wedge product (∧) implements the meet operator and the regres-
sive product ∨ is the join operator. That means that a line ℓ ∈ (cid:211)2 ⊂ 𝐺 arises as the
intersection of two planes, and that a point P ∈ (cid:211)3 ⊂ 𝐺 arises as the intersection of
three planes. The plane, as building block, is an indivisible, 0-dimensional primitive.

We are much more used to considering 1-vectors as points, and constructing lines
and planes by joining points together.
Indeed, this approach leads to the common
assumption that points are 0-dimensional, lines are 1-dimensional, and planes are 2-
dimensional. From this perspective, it might appear that in a plane-based algebra, we
are building up objects of lower dimension from those of higher dimension, for example,
a line is the meet of two planes. How can we understand this paradox?

A clear definition of dimension resolves this dilemma. We turn now to that task.

12

Figure 3: Building up space with the wedge operator in point-based (left) and plane-
based (right) algebras.

PRIMITIVES

generic name

point

line

plane

Point-based

Plane-based

name

point

point range (spear)

point field

dimension

name

dimension

0

1

2

plane bundle

plane pencil (axis)

plane

2

1

0

Table 3: Double nature of geometric primitives in 3D PGA.

8.1 Point-based lines and planes

For example the join 𝑚 := 𝑃1 ∧ 𝑃2 of two points in a point-based algebra is a 2-vector
representing the joining line of the two points. The line is 1-dimensional since an ar-
bitrary point 𝑃 incident with 𝑚 (that is, satisfying 𝑚 ∧ 𝑃 = 0) can be represented by
the family of points 𝑃1 + 𝛽𝑃2 for 𝛽 ∈ R (to include 𝑃2 in this expression you can use
1-dimensional homogeneous coordinate 𝛼 : 𝛽 in 𝛼𝑃1 + 𝛽𝑃2). The line 𝑚 in this sense is
conceived of as consisting of all the points incident with it, called a point range in clas-
sical projective geometry. It’s also an example of an outer product null space (OPNS) in
the terminology of exterior algebra. Similar remarks apply to a plane 𝑝 = 𝑃1 ∧ 𝑃2 ∧ 𝑃3
as a 2-dimensional set of points, called a point field in projective geometry. To sum up:
the dimension 𝑑 of a geometric primitive in the standard construction depends on how
many linearly independent points 𝑛 you need to generate the primitive ( 𝑑 = 𝑛 − 1).

13

8.2 Plane-based lines and points

What does this look like in a plane-based algebra? Now we build up all the other
primitives out of planes. A plane in the dual construction is just as simple, indivisible,
and 0-dimensional as a point is in the standard construction. Planes are combined by
intersecting them. Let 𝑚 = 𝑝1 ∧ 𝑝2 be the intersection line of two planes. A third plane
𝑝 is incident with this line if it satisfies 𝑚 ∧ 𝑝 = 0. This set of incident planes is called
a plane pencil and is exactly analogous to the point range defined above. Just as in the
point-based algebra we say that “the joining line consists of all the points incident with
it” in the plane-based algebra we say that “the intersection line consists of all the planes
incident with it.” This pencil can be parametrized (exactly as above) as 𝛼𝑝1 + 𝛽𝑝2 for
{𝛼, 𝛽} ∈ R𝑃1, so it’s 1-dimensional (with respect to the 0-dimensional building block,
the plane).

Similar remarks apply to the wedge of 3 planes to produce a point: 𝑃 = 𝑝1 ∧ 𝑝2 ∧ 𝑝3.
The set of planes 𝑝 incident to this point satisfy 𝑝 ∧ 𝑃 = 0. Just as the plane in the
standard construction can be thought of as all the points incident to it, the point in the
dual construction can be thought of as consisting of all the planes that are incident with
it. This set of planes is dual to the point field above and is called a plane bundle in
projective geometry.

Fig. 4 shows the difference between a line (bi-vector) in the plane-based algebra
(where it is a plane pencil, or axis) and its representation in a point-based algebra (as a
point range, or spear ). We’ll come back to this below when we see that this distinction
plays a key role in rigid body mechanics.

Figure 4: Line as axis (plane pencil) and as spear (point range).

14

AxisSpearFigure 5: The elemental triangle showing the 3 spaces (corners), the 6 composite prim-
itives (sides), and the line pencil (middle).

8.3 There are no lines in 3D PGA

The above line of thought leads to the insight that in geometric algebra, all geometric
primitives appear in a double form, once built out of points, once out of planes. See
Table 3 and Figures 3 and 4. In a point-based algebra, the point qua point is present,
while in a plane-based algebra, the plane qua plane is present. But in neither algebra is
a line qua line present; every line is a one-dimensional composite object; in a point-based
algebra it’s a spear (point range), in a plane-based algebra it’s an axis (plane pencil).
The dual coordinate map 𝐽 of PGA is exactly what is needed to switch easily back and
forth between these two representations.

15

8.4 The elemental triangle and the 10 fundamental forms

If we widen our viewpoint a bit, we can obtain a beautiful representation of possible
geometric primitives for 3D projective space ([LE86], p. 11). In this triangular arrange-
ment, points, lines, and planes have equal rights; each occupies one corner of the triangle.
Consult Fig. 5. To begin with they exist alone and for themselves: point qua point, line
qua line, plane qua plane.

8.4.1 Relationship through incidence

The other entries in the elemental triangle arise by considering incidence relationships.
Two primitives of different types come into a relationship via their incidence properties.
For example, given a point 𝑃 and a plane 𝑝, does the point lie on the plane; equivalently,
does the plane pass through the point? If so, 𝑃 and 𝑝 are said to be incident. One can
ask, given a point 𝑃, which planes are incident with 𝑃? Or, which points are incident
with a plane 𝑝?

The other entries in the triangle are obtained by taking an element from one corner
and “dropping it” into another corner of the triangle and observing the resulting inci-
dence relationships that arise. For example, drop a plane 𝑝 (lower left corner) into the
space of points (lower right). Imagine that any point incident with 𝑝 “lights up”. Which
figure will be thereby illuminated? In this case, all the points of 𝑝 will light up. The
resulting composite object is called a point field. It is shown on the lower edge of the
triangle to the left of the space of points. Similar combinations lead to the other 5 forms
on the boundary of the triangle.

8.4.2 Line-based forms

Notice that the lower left three (plane, plane pencil, plane bundle) occur in plane-based
algebras, the lower right three (point, point range, point field) occur in point-based
algebras. The upper three entries do not occur in the geometric algebra framework
discussed above. But since for this discussion we are treating the line as an indivisible
element in its own right, we obtain two further 2D composite forms, the line field and
line bundle, consisting of all the lines incident with a plane, resp., with a point. They
are dual to each other. Finally, in the center of the triangle is a primitive combining all
three types, the line pencil : the set of all lines incident with a point and with a plane
that is incident with the point. It is self-dual.

8.4.3 Dimensions of the forms

The 10 entries of the triangle have different dimensions. The three corners: point space,
line space, and plane space, have dimensions 3, 4, 3 resp. The line and point fields, and
the plane and line bundles, have dimension 2. The point range, line and plane pencil have
dimension 1. By duality, all 2-dimensional forms (fields and bundles) are structurally
identical from the point of view of projective geometry, as are all 1-dimensional forms.

16

They are sometimes referred to as as 2D-, resp., 1D-extents.

8.4.4 Concluding remarks

The resulting arrangement is called the elemental triangle and the entries are called the
10 fundamental forms of R𝑃3, projective 3-space. In contrast to traditional geometry,
this approach gives equal rights to each of the three fundamental entities point – line
– plane. With these entities alone however no geometry is possible. That arises only
when the seven composite forms are created out of incidence relationships among these
three. In this framework, what traditional geometry calls ”point – line – plane” are just
the three entries in the lower right corner of the triangle: point qua point – point range
(line of points) – point field (plane of points) . Through the magic of geometric duality,
this limited vocabulary is extended to the full decad depicted in the elemental triangle.
A whole new world of geometry opens up with this extended vocabulary. This article
can only touch on the possibilities.

8.5 The duck test for double algebra representations

The duck test is used to show the equivalence of two entities based on their behaviors:

If it looks like a duck, swims like a duck, and quacks like a duck, then it
probably is a duck.

In our case, we have shown that a double algebra approach supports geometric duality;
we now argue that a system that supports geometric duality is in fact a double algebra
representation. Indeed, the foundation for the double algebra representation is the dual
coordinate map 𝐽 : 𝐺 ↔ 𝐺∗ that maps a geometric entity to its dual representation. On
the other hand, if I support geometric duality, then I can map a geometric entity 𝑋 to
its dual form. But that is equivalent to knowing the dual coordinate 𝐽 and hence I have
a double algebra representation. We conclude:

Support for geometric duality ⇔ support for double algebra representation

8.6 Geometric duality and the real world

Geometric duality can be seen and appreciated as a deep principle within the realm of
geometry. But it’s not only a mathematical wonder. The distinction between point-based
and plane-based primitives appears also within natural science. We turn now to indicate
two sorts of such appearances. The first comes from the realm of classical euclidean rigid
body mechanics. The second moves beyond euclidean space (our 𝐺 algebra) and brings
in dual euclidean space (𝐺∗ here) as a tool for scientific investigation.

17

8.6.1 Example: rigid body kinematics and dynamics in euclidean PGA

It may come as a surprise to find out that geometric duality plays a key role in euclidean
rigid body motion. In 3D EPGA, both velocities and momenta, accelerations and forces,
are all represented by bivectors (see [Gun11b] for an introductory treatment). These
kinematic and dynamical bivectors can be distinguished on the basis of geometric duality.

Kinematics is plane-based. The kinematic entities (velocities and accelerations) arise
naturally as bivectors in 𝐺, that is, as intersections of planes. For example, a rotation
is the geometric product of reflections in two planes that intersect in the axis of rotation
and meet at half the angle of the rotation, and the logarithm of such a rotation is a
scalar multiple of the bivector part. As mentioned above, such a plane-wise line is called
an axis. See Fig. 4, left.

Dynamics is point-based. Momenta and forces, on the other hand, are related to
velocities and accelerations by the action of the inertia tensor. The inertia tensor 𝐴 :
(cid:211)2 → ((cid:211)2)∗ is symmetric bilinear form that maps plane-based kinematic vectors (in
𝐺) that to point-based dynamic bivectors in 𝐺∗. Its inverse 𝐴−1 does the reverse. A
momentum or force is then naturally a spear. See Fig. 4, right. You can also verify
this in your own experience:
if someone pushes on you with their finger, you can feel
the spear, the line of force in its point-wise aspect, exerting directional pressure on your
chest. This is the line in its spear aspect.

A further nice feature of the double algebra approach is that it is consistent with
the traditional representation of the inertia tensor as a diagonal operator 𝐺 → 𝐺∗. In
a single-algebra approach the distinction between spears and axes does not exist; every
bivector is an axis and the matrix form is anti-diagonal.

Duality and outermorphisms. Technically, the inertia tensor is implemented within
PGA as an outermorphism 𝐿 : 𝐺 → 𝐺∗. In the language of projective geometry, such a
map is called a correlation (since it maps points to planes), while a map 𝐿 : 𝐺 → 𝐺 is
called a collineation. Extending the standard concept of outermorphism, which is based
on collineations, to include correlations is straightforward to achieve within the double
algebra since the dual algebra 𝐺∗ is directly accessible via 𝐽.

Historical remarks. This relation of rigid body mechanics to 3D projective line geom-
etry were established by Eduard Study in his ground-breaking work [Stu03]. He gave the
two types of bivectors the suggestive names kineme and dyname, and also introduced
the terms spear and axis.

For a fuller discussion of rigid body mechanics in (euclidean and non-euclidean) PGA

see ([Gun11a], Ch. 8 and 9.

8.6.2 Dual euclidean space

The dual algebra 𝐺∗ can be considered in its own right, as the point-based algebra
𝑃(R∗
In this respect, it models the metric relationships in dual euclidean space

𝑛,0,1).

18

(DES). An introduction to DES and scientific applications can be found in Ch. 10 of
[Gun11a]. DES is obtained by dualizing euclidean space (ES) within projective space.
Example: The absolute quadric of ES is the ideal plane and all its points and lines, DES
features a single ideal point and all its planes and lines. If we think of ES as the result
of expanding a sphere until it becomes a flat plane, DES arises in the opposite process,
whereby the space contracts until all curvature is concentrated in a point.

In his habilitation speech (1855) Bernard Riemannian announced his ground-breaking
”empirical space” program (1855), whereby the metric properties of space are to be
determined by empirical observation. DES fills a hole in the “circle of geometries”
available for this empirical determination. The classical geometries of constant curvature
(hyperbolic, euclidean, elliptic) are traditionally located on a real line parametrized by
their curvature. By adding DEG (corresponding to curvature ∞), this line can be bent
to a closed, self-dual circle (the ”one-point compactification” of the line) that opens up
a whole new world of metric relationships available to scientific inquiry.

This chapter in [Gun11a] includes an overview of research in the last hundred years
devoted to preliminary results of the applications of DES in this way in the last 100
years. See for example [AW80], [Ada59], [Leh14] (especially Ch. 9), [Tho09], [Die21].
In almost all of this research, DES is considered as an active partner of ES, neither
alone seems to provide the necessary framework. This naturally lends itself to a double
algebra approach where ES and DES are equal citizens and represents an important
infrastructure tool for this research agenda.

In short, having direct access to the point-based as well as plane-based algebra serves

not just mathematical and pedagogical goals, but also important scientific ones.

8.7 Geometric duality: Summing up

Here are the chief results of the above considerations:

1. Dimension isn’t inherent in the geometric primitive but depends on how space is

conceptualized.

2. In a point-based algebra, points are 0-dimensional and planes are 2-dimensional
(a point field); in a plane-based algebra, planes are 0-dimensional and points are
2-dimensional (a plane bundle).

3. The projective geometric principle of duality provides a logically rigorous and

historically well-established basis for this dual conceptualization of space.

4. Every geometric primitive has two representations: a plane-based one and a point-

based one.

5. Poincar´e duality 𝐽 maps between these two representations. We call the result a
double-algebra representation, Hodge duality 𝐻 results in a single algebra approach.

19

6. Support for geometric duality is equivalent to having a double algebra representa-

tion.

7. Geometric duality is built into the structure of the physical world.

9 A bit better: Implementing the double algebra approach

We come now to the end of our discussion. We began with the multiplicity of different
“duality maps” used in geometric algebra and ended up focusing our attention on two
candidates that work for degenenerate metrics, Poincar´e and Hodge duality. Sec. 6.5
established that the coordinates obtained for the maps 𝐽 and 𝐻 are identical (and agree
with 𝑃, in the case that the metric is non-degenerate). The only difference remaining
is how the coordinates are interpreted. This led to the distinction between a double
algebra representation (Poincar´e) versus a single algebra one (Hodge). We introduced
the concept of geometric duality and established it is equivalent to the double algebra
representation.

In this section we want to sketch a simple implementation of the double algebra
approach. Once we have established it, we show how the implementation also has ad-
vantages for the single algebra approach. Hence the proposal can be seen as a single
duality-neutral solution with advantages for the whole community.

This section is a placeholder for a treatment that takes into account the concrete
details of modern software design. It’s included here since the first step in planning a
trip is to clarify the destination.

In this sense the duality maps we have examined share a common root. We denote

it by D and leave open whether it represents 𝐽 or 𝐻 duality.

The key requirement for supporting geometric duality is a mark showing whether a
given multivector is in 𝐺 or in 𝐺∗. To keep track of this, add a boolean field isDual
to the multi-vector instance with default value false; in euclidean PGA, that means
that all multi-vectors start out in 𝐺, the plane-based algebra. In dual euclidean PGA
𝑃(R𝑛,0,1), the default value would be true, since this is a point-based algebra. In their
return value, D and D−1 flip the value of the isDual bit from the argument value,
indicating that argument has been mapped to its geometrically dual form.

In fact we can use the isDual field to simplify the API for D. The idea is simple: D(𝑥)
is only valid when x.isDual==false, while D−1 only applies when x.isDual==true.
Denoting the existing maps as 𝐷𝑜 and 𝐷 𝐼𝑜, resp., we can express the new single duality
map D as follows:

D(x) := {

var dx = (!x.isDual) ? Do(x) : DIo(x);
dx.isDual = !x.isDual;
return dx;

}

20

This simplifies the API by replacing the two versions of the duality map (forward and
back) with a single map that uses the isDual field to decide whether to invoke the
𝐺 → 𝐺∗ or the 𝐺∗ → 𝐺 version.

9.1 Safe and correct duality

We’ve seen that in the double algebra approach, calls to D and D−1 alternate. A glance
at the three formulas for the regressive product in Sec. 6.5 show that in these formulas
the same is true for single algebra duality. In all these formulas, D is invoked on both
arguments, a product is applied, and D−1 is then applied to the result. Correct results
are obtained only by alternating calls to D and D−1. I am aware of no valid use case
involving D and D−1 in which this principle of alternation is not respected. The isDual
field provides a simple means to guarantee this alternation.

Takeaway. Even users who see no direct need for a double algebra representation will
profit from the isDual field since it simplifies the API (as seen above) and guarantees
correct alternation in calls to D and D−1.

9.2 Technical aspects of the isDual bitfield

The introduction of a new field into a data structure has to be checked and integrated
with the existing fields and functionality. We have shown above how it is to be used and
set when the duality map D is called.

How does the isDual field interact with algebra products? We focus on the geometric
product since others are derived from it. Suppose 𝑎 and 𝑏 are two multi-vectors. Then
we could write pseudo-code for the geometric product when the isDual fields are the
same:

gp(a,b) := {

(a.isDual == b.isDual) ?
{var ab = a*b; ab.isDual = a.isDual; return ab;} :
{??}

}

Here the a*b is the geometric product in the respective algebra (G when isDual =
false, 𝐺∗ when isDual = true. But when the isDual fields differ (indicated by the
?? text), what should happen?

9.3 When the isDual fields don’t match

Exceptions are in the mind of the beholder. What one programmer considers an error
may be for another a feature. This leads to two strategies for dealing with exceptional
values of the isDual field.

Strict interpretation: When the geometric product is called on two multi-vectors
whose isDual fields differ, the geometric product is not defined. In the double algebra

21

representation, this is self-evident. And in the single algebra interpretation, we pointed
out above that the proper alternation of the isDual field is important to obtain correct
answers. Conclusion: this exception should signal an error. Such a strategy can be
useful for programmers to improve their code.

Lenient interpretation: It’s not an error, it’s a type conversion challenge. Type
conversion is well-known and understood topic in numerical mathematics. Consider the
product of two real numbers 𝑎 ∗ 𝑏. Each of 𝑎 and 𝑏 has a specific type: int, float,
double,.... At the hardware level, multiplication is only defined for arguments of
In order to handle all possible combinations of types, a hierarchy of
the same type.
promotions has been developed and embedded in compilers so that the output value has
optimal properties, in this case, retains the maximal precision. If for example int a =
5; double b = 10; a*b; will implicitly convert 𝑎 to a double value before calculating
𝑎 ∗ 𝑏, which then is of type double.

The double algebra approach invites a similar treatment. 𝐽 maps between two dif-
ferent representations of the same geometric element, one plane-based, one point-base,
analogous to having float and double representations of a real number. In this analogy,
when 𝑎 and 𝑏 are in different algebras, we establish a type promotion rule to obtain
elements of the same algebra before carrying out the operation. When we are doing
euclidean geometry, the primary algebra of interest is 𝐺, so we promote the element of
𝐺∗ to 𝐺 before carrying out the calculation. The complete pseudo-code becomes:

gp(a,b) := {

if (a.isDual != b.isDual) {a.isDual ? a = D(a) : b = D(b);}
var ab = a*b; ab.isDual = a.isDual; return ab;

}

Note that this treatment only applies when the isDual fields of the original two argu-
ments don’t match. If the arguments match, the multiplication takes place in the algebra
implied by the isDual fields.

Similar remarks apply to handling exceptions raised when calling the unified duality

map D introduced above. In all cases there is a strict and a lenient interpretation.

In general, users should be able to control how the isDual field is configured and

how associated exceptions are handled.

9.4 Summing up

To sum up, introducing the isDual field to the multi-vector class yields the following
valuable features:

1. It provides checks that the proper alternation of calls to D and D−1 are observed.

2. It allows unifying the duality map and its inverse into a single map.

22

3. It identifies whether a multi-vector is in 𝐺 or 𝐺∗. For example, visualization of
a simple bivector can take into account the difference mentioned above between
spears (lines in a point-based algebra) and axes (lines in a plane-based algebra).

4. This also allows the fundamental duality noted above between kinematics (𝐺) and
dynamics (𝐺∗) to be directly mirrored in the underlying computational framework.

10 Conclusions

In geometric algebras with degenerate metrics, such as the algebra 𝑃(R∗
𝑛,0,1) for eu-
clidean space E𝑛, non-metric methods are required in order to carry our important tasks
that traditionally have been carried out using a non-degenerate pseudoscalar, such as
coordinate computation and regressive product.

We have focused on two grade-reversing maps to replace multiplication by the pseu-
doscalar: the dual coordinate map 𝐽 : 𝐺 → 𝐺∗ and the right complement map 𝐻 : 𝐺 →
𝐺. In fact, we showed that in terms of a standard basis, the two maps take identical
forms. The only difference between 𝐽 and 𝐻 is one of interpretation: whether the result-
ing coordinate index set should be interpreted as superscripts (in 𝐺∗) or as subscripts
(in 𝐺).

This isomorphism hides an important difference. Only 𝐽 is coordinate-free. This
follows from the decomposition of 𝐽 = 𝑅 ◦ 𝐻 into right complement (𝐻) followed by left
complement (𝑅), yielding the well-known fact that 𝐽 is an identity map on geometric
primitives, and hence a natural map. This also is consistent with the traditional name,
dual coordinate map, for this form of duality.

We introduced the concept of geometric duality to capture the double nature of all
geometric primitives, appearing once in the plane-based and once in the point-based
algebra. We discussed the scientific examples, such as rigid body mechanics, where
geometric duality plays a crucial role. We saw that geometric duality naturally maps
onto a double algebra representation (e. g., Poincar´e duality) but not onto a single
algebra representation (e.g., Hodge duality).

Based on these observations, we proposed a software design designed in the first place
to produce a double algebra representation, but which also has advantages for the single
algebra approach. It introduces a bit field in the multi-vector data structure marking
whether that multi-vector is an element of 𝐺 or 𝐺∗. Calls to the duality function D flip
that bit. We also showed that exceptions related to such a bit field can be handled using
promotion rules modeled on the familiar promotion rules used for multiplying numbers
of different data types together, rather than treating such exceptions as errors.

The goal is creating software frameworks for PGA that are “a bit better”, providing
support for all members of the community regardless of their duality affiliation. This
would produce a welcome “unity in duality”.

23

References

[Ada59] George Adams. Universalkr¨afte in der Mechanik, volume 20 of Mathematisch-

astronomische Bl¨atter. Verlag am Goetheanum, Dornach, 1959.

[AW80] George Adams and Olive Whicher. The Plant Between Earth and Sun. Rudolf

Steiner Press, London, 1980.

[DFM07] Leo Dorst, Daniel Fontijne, and Stephen Mann. Geometric Algebra for Com-

puter Science. Morgan Kaufmann, San Francisco, 2007.

[Die21]

[Dor11]

Immo Diener. Polareuklidische Geometrie: Unendlichferne Peripherie und
absoluter Mittelpunkt: Eine duale Erweiterung der klassischen Geometrie.
Springer Spektrum, Berlin Heidelberg, 2021.

Leo Dorst. Tutorial appendix: Structure preserving representation of eu-
clidean motions through conformal geometric algebra. In Leo Dorst and Joan
Lasenby, editors, Guide to Geometric Algebra in Practice, pages 435–453.
Springer London, 2011.

[Gre67] W. H. Greub. Multilinear Algebra. Springer, 1967.

[Gun11a] Charles Gunn. Geometry, Kinematics, and Rigid Body Mechanics in Cayley-
Klein Geometries. PhD thesis, Technical University Berlin, 2011. http://
opus.kobv.de/tuberlin/volltexte/2011/3322.

[Gun11b] Charles Gunn. On the homogeneous model of euclidean geometry.

In Leo
Dorst and Joan Lasenby, editors, A Guide to Geometric Algebra in Practice,
chapter 15, pages 297–327. Springer, 2011.

[Gun17a] Charles Gunn. Doing euclidean plane geometry using projective geometric
algebra. Advances in Applied Clifford Algebras, 27(2):1203–1232, 2017. http:
//arxiv.org/abs/1501.06511.

[Gun17b] Charles Gunn. Geometric algebras for euclidean geometry. Advances in Ap-
plied Clifford Algebras, 27(1):185–208, 2017. http://arxiv.org/abs/1411.
6502.

[Gun19] Charles Gunn. Geometric algebra for computer craphics. In ACM SIGGRAPH
2019 courses, SIGGRAPH ’19. ACM, 2019. https://arxiv.org/abs/2002.
04509.

[HLR01] David Hestenes, Hongbo Li, and Alyn Rockwood. A unified algebraic approach
for classical geometries. In Gerald Sommer, editor, Geometric Computing with
Clifford Algebra, pages 3–27. Springer, 2001.

[LE86]

Louis Locher-Ernst. Raum und Gegenraum. Verlag am Goetheanum, Dornach,
Switzerland, 1986.

[Leh14] Ernst Lehrs. Man or Matter. Rudolf Steiner Press, London, 2014.

24

[Sel00]

Jon Selig. Clifford algebra of points, lines, and planes. Robotica, 18:545–556,
2000.

[Sel05]

Jon Selig. Geometric Fundamentals of Robotics. Springer, 2005.

[Stu03]

Eduard Study. Geometrie der Dynamen. Tuebner, Leibzig, 1903.

[Tho09] Nick Thomas. Space and Counterspace: A New Science of Gravity, Time and

Light. Floris Books, London, 2009.

[Whi95] Neil White. A tutorial on cayley-grassmann algebras. In Invariant Methods

in Discrete and Computational Geometry, pages 93–107. Kluwer, 1995.

25

