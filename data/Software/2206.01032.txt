2
2
0
2

n
u
J

2

]
E
S
.
s
c
[

1
v
2
3
0
1
0
.
6
0
2
2
:
v
i
X
r
a

A more abstract bounded exploration postulate

Yuri Gurevich and Tatiana Yavorskaya

Abstract

In article “Sequential abstract state machines capture sequential al-
gorithms”, one of us axiomatized sequential algorithms by means of
three postulates: sequential time, abstract state, and bounded explo-
ration postulates. Here we give a more abstract version of the bounded
exploration postulate which is closer in spirit to the abstract state pos-
tulate. In the presence of the sequential time and abstract state postu-
lates, our postulate is equivalent to the origingal bounded exploration
postulate.

1

Introduction

This paper is essentially an oversized footnote to [1] where sequential algo-
rithms are axiomatized by means of three postulates: sequential time, abstract
state, and bounded exploration postulates. To make our exposition more self-
contained, we restate the postulates.

Deﬁnition 1.1 (Sequential Algorithms). A sequential algorithm A is deﬁned
by means of the sequential time, abstract state, and bounded exploration
⊳
postulates below.

Postulate 1 (Sequential Time). A is associated with a nonempty set S(A)
(of states), a nonempty subset I(A) (of initial states), and a map τA : S(A) →
⊳
S(A) (the one-step transformation).

We write simply S, I, and τ when A is clear from the context. The original
version of the postulate in [1] did not require that S and I be nonempty. This
reasonable modiﬁcation is due to [3].

Postulate 2 (Abstract State).

• The states are ﬁrst-order structures of the same vocabulary Υ (or Υ(A),

the vocabulary of A), and S, I are closed under isomorphisms.

• The one-step transformation τ does not change the base set of any state,
and any isomorphism from a state X to a state Y is also an isomorphism
⊳
from τ (X) to τ (Y ).

Symbols in Υ are function symbols; relation symbols are viewed as function
symbols whose interpretations taking Boolean values. Each function symbol f
has some number j of argument places; j is the arity of f . The arity may be
zero; in the logic literature nullary functions symbols are often called constants.

1

 
 
 
 
 
 
Terms are built as usual from nullary symbols but means of symbols of positive
arity.

The vocabulary Υ contains logical symbols true, false, undef, the equality
sign, and the standard propositional connectives; the other symbols in Υ are
nonlogical. In any (ﬁrst-order) Υ structure, the values of true, false, and undef
are distinct logical elements; the other elements are nonlogical.

Let X be a state, f range over Υ, j be the arity of f , and x0, x1, . . . , xj
range over the base set |X| of X. A triple (f, (x1, . . . , xj), x0) is an update of
X if x0 = f (x1, . . . , xja) in τ (X). An update (f, ¯a, b) is nontrivial if x0 6=
f (x1, . . . , xj) in X. The update set ∆(X) of the algorithm A at state X is the
set of nontrivial updates of X.

States X and Y coincide over a set T of Υ terms, symbolically X T

= Y , if

every t ∈ T has the same value in X and Y .

Postulate 3 (Bounded Exploration). There exists a ﬁnite set T of closed Υ
terms (called a bounded exploration witness) such that

X T

= Y =⇒ ∆(X) = ∆(Y )

for all states X, Y.

⊳

If T ⊆ T ′ are sets of terms and T is a bounded exploration witness, then
T ′ is also a bounded exploration witness. For example, T ′ could comprise T
and all subterms of terms in T , so that T ′ is closed under subterms.

This completes the deﬁnition of sequential algorithms.

The bounded exploration postulate arguably contradicts the spirit of the
abstract state postulate according to which a state is just a presentation of its
isomorphism type so that only the isomorphism type of the state is important.
In the bounded exploration postulate above, it is essential that the states X
and Y are concrete.

In technical report [2] we gave a more abstract form of the bounded explo-
ration postulate that is in the spirit of the abstract state postulate and that
is equivalent to the original bounded exploration postulate in the presence of
the sequential time and abstract state postulates. We republish the relevant
part (Part 1) of the technical report here (with slight modiﬁcations) to make
it easier to access.

2 The new bounded exploration postulate

If f is a function symbol in Υ, X is a state of A, t is an Υ term, and T is a
set of Υ terms, then fX is the interpretation of f in X, VX(t) is the value of t
in X, and VX(T ) = {VX(t) : t ∈ T }.

Deﬁnition 2.1. States X, Y are T -similar if

VX (s) = VX(t) ⇐⇒ VY (s) = VY (t)

for all s, t ∈ T.

If states X, Y are T -similar then

σ(VX(t)) = VY (t)

is a bijection, the similarity function, from VX(T ) to VY (T ).

⊳

(1)

⊳

2

Lemma 2.2. Suppose that T is closed under subterms, X and Y are T -similar,
and let term t = f (t1, . . . , tj) ∈ T and xi = VX(ti) for i = 1, . . . , j. Then

σ(fX (x1, . . . , xj)) = fY (σ(x1), . . . , σ(xj)).

(2)

Proof.

σ(fX(x1, . . . , xj)) = σ(fX(VX (t1), . . . , VX(tj))) = σ(VX(t)) =

VY (t) = fY (VY (t1), . . . , VY (tj)) = fY (σ(x1), . . . , σ(xj)).

Remark 2.3. One may think that, under the hypotheses of Lemma 2, σ is a
partial isomorphism from X to Y , so that (2) holds whenever x1, . . . , xj and
fX(x1, . . . , xj) are in the domain of σ. But this is not necessarily true. For
example, let a, b be nonlogical nullary symbols and f a unary functional symbol
in Υ. Set T = {a, b} and consider states X and Y with nonlogical elements
1, 2, 3 where fX (1) = fY (1) = 2, fX (2) = fY (2) = 3, fX(3) = fY (3) = 1, and

aX = aY = 1,

bX = 2,

bY = 3.

The states X and Y are T -similar; in both cases the values of a, b are distinct.
But σ is not a partial isomorphism because σ(fX(1)) = σ(2) = σ(bX ) = bY = 3
⊳
while fY (σ(1)) = fY (σ(aX )) = fY (aY ) = 2.

Deﬁnition 2.4. An element x of state X is T -accessible if x = VX(t) for some
t ∈ T . An update u = (f, (x1, . . . , xj), x0) of X is T -accessible if all elements
xi are T -accessible. A set of updates of X is T -accessible if every update in
the set is T -accessible.

Further, if states X, Y are T -similar, σ : VX(T ) → VY (T ) is the similarity
function, and if u = (f, (x1, . . . , xj), x0) is a T -accessible update of X, deﬁne

σ(u) = (cid:0)f, (σ(x1), . . . , σ(xj)), σ(x0)(cid:1).

⊳

Postulate 4 (New Bounded Exploration Postulate). There exists a ﬁnite set
T of Υ terms that is closed under subterms and such that

(i) ∆(X) is T -accessible for every state X, and

(ii) if states X, Y are T -similar, σ : VX (T ) → VY (T ) is the similarity func-

tion, and u is an accessible update of X, then

u ∈ ∆(X) ⇐⇒ σ(u) ∈ ∆(Y ).

In other words, if terms t0 and f (t1, . . . , tj) belong to T , xi = VX (ti),
and yi = VY (ti), then

(f, (x1, . . . , xj), x0) ∈ ∆(X) ⇐⇒ (f, (y1, . . . , yj), y0) ∈ ∆(Y ).

⊳

The original bounded exploration postulate did not require the accessibility

of updates. The accessibility was derived [1].

If T ⊆ T ′ are sets of terms closed under subterms, and if T is a bounded

exploration witness, then T ′ is also a bounded exploration witness.

3

Example 2.5. We illustrate the necessity of requirement (i). The vocabulary
Υ of our system A comprises a single nonlogical function symbol f which is
nullary. Every state X of A has exactly two nonlogical elements, and the
element fX is nonlogical; all states are initial. Every transition of A changes
the value of fX ; if a, b are the nonlogical elements of X and fX = a, then
fτ (X) = b. Clearly, A satisﬁes the abstract state postulates.

Let T be an arbitrary set of Υ terms. Then T ⊆ {true, false, undef, f } and
T is closed under subterms. If X is a state with nonlogical elements a, b and
fX = a, then the unique update (f, b) of X is (f, b) which is not T -accessible.
Accordingly, T fails requirement (i). But, since there are no accessible updates,
T satisﬁes requirement (ii).

A does not satisfy the original bounded exploration postulate either. In-
deed, let X be a state with nonlogical elements a, b where fX = a, and let Y
be obtained from X by replacing b with a fresh element c. Then X and Y
coincide over every set T of terms but ∆(X) = {(f, b)} 6= {(f, c)} = ∆(Y ). ⊳

3 Equivalence of two bounded exploration pos-

tulates

We abbreviate “bounded exploration” to BE.

Theorem 3.1. Suppose that A satisﬁes the sequential state and abstract state
postulates. Then A satisﬁes the new BE postulate if and only if it satisﬁes the
original one.

Proof.

Only if. We assume that A satisﬁes the new BE postulate with some BE
witness T , and we prove that it satisﬁes the original one with the same BE
witness T . Suppose that the states X and Y of A coincide over T . Then X, Y
are T -similar and the similarity function σ is the identity function from VX(T )
onto VY (T ). By the new BE postulate, ∆(X) = ∆(Y ).

If. We assume that A satisﬁes the original BE postulate with a BE witness
T . Without loss of generality, T is closed under subterms. We prove that A
satisﬁes the original BE postulate with the same BE witness T .

Statement (i) is proven in [1, Lemma 6.2]. To prove statement (ii), suppose
that X and Y are T -similar states of A, t0 = f (t1, . . . , tj) ∈ T , xi = VX(ti), and
yi = VY (ti). By symmetry, it suﬃces to prove that (f, (y1, . . . , yj), y0) ∈ ∆(Y )
if (f, (x1, . . . , xj), x0) ∈ ∆(X). Suppose that (f, (x1, . . . , xj), x0) ∈ ∆(X).
Case 1: VX(T ) ∩ VY (T ) = ∅. Create a new state X ′ from X by replacing VX (t)
with VY (t) for every t ∈ T . States X ′ and Y coincide over T . By the old BE
postulate, ∆(X ′) = ∆(Y ).

There is an isomorphism ξ : X → X ′ that coincides with the similarity
function on VX(T ) and is identity otherwise. ξ naturally lifts to locations,
updates and sets of updates, and we have

(f, (y1, . . . , yj), y0) = ξ((f, (x1, . . . , xj), x0)) ∈ ξ(∆(X)) = ∆(X ′) = ∆(Y ).

Case 2: VX(T ) ∩ VY (T ) 6= ∅. Let η be an isomorphism from X to a state X ′
of A such that VX ′(T ) ∩ VY (T ) = ∅. Lifting η as above, we have VX ′(ti) = ηxi

4

and

(f, (ηx1, . . . , ηxj), ηx0) = η((f, (x1, . . . , xj), x0)) ∈ η(∆(X)) = ∆(X ′

).

Obviously X ′ and Y are T -similar. We have Case 1 with X ′ playing the role
of X and ηxi playing the role of xi. Thus (f, (y1, . . . , yj), y0) ∈ ∆(Y ).

References

[1] Yuri Gurevich. “Sequential abstract state machines capture sequential
algorithms,” ACM Trans. on Computational Logic 1:1 (2000) 77–111

[2] Yuri Gurevich and Tanya Yavorskaya, “On bounded exploration and
bounded nondeterminism,” Technical report MSR-TR-2006-07, Mi-
crosoft Research, January 2006

[3] Andreas Blass and Yuri Gurevich, “Ordinary small-step algorithms,

Part I, ACM Trans. on Computational Logic 7:2 (2006) 363–419

5

