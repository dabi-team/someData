RayPC: Interactive Ray Tracing Meets Parallel Coordinates

Jonathan Fritsch*

Markus Flatken

Simon Schneegans
Christian H ¨uttig

Andreas Gerndt

Ana-Catalina Plesa

German Aerospace Center (DLR)

2
2
0
2

l
u
J

5
2

]

R
G
.
s
c
[

1
v
1
1
0
2
1
.
7
0
2
2
:
v
i
X
r
a

Figure 1: Interactive visualisation and analysis of mantle ﬂow in the Earth’s interior: hot mantle plumes (left image), mantle
plumes with associated pathlines and cold downwellings shown in blue color (center image), stagnated cold material (light blue)
and pathlines indicating sinking of downwellings in the lower mantle (right image).

ABSTRACT
Large-scale numerical simulations of planetary interiors require
dedicated visualization algorithms that are able to efﬁciently extract
a large amount of information in an interactive and user-friendly
way. Here we present a software framework for the visualization of
mantle convection data. This framework combines real-time volume
rendering, pathline visualization, and parallel coordinates to explore
the ﬂuid dynamics in an interactive way and to identify correlations
between various output variables.

1 MOTIVATION
Over the past decades, with the increase of processing power and
available memory, global-scale computational models have become
state-of-the-art to investigate the complex physical processes in the
interior of the Earth and other rocky planets in the Solar System,
e.g., [1,2,4]. Numerical models that employ a high spatial resolution
are widely used to link the evolution of mantle ﬂow to the formation
and evolution of surface structures, such as volcanoes and tectonic
plates. Depending on the research question, the size of each snapshot
ﬁle, which is typically written during a simulation and contains
output quantities such as the temperature ﬁeld, velocity, thermal
conductivity and expansivity etc., can increase considerably. This
requires a dedicated visualization software that can handle a large
volume of data and present it in a user friendly way. In particular,
such a visualization software needs to be able to quickly react to user
input, increasing the level of interactivity, and to provide an intuitive
option to identify potential correlations between output quantities.
In this study, we present a new plugin for the open-source software
CosmoScout VR [3], which can visualize large-scale simulation data
of a planet’s interior. In Section 2, we give some implementation
details. We used the plugin to fulﬁll the ﬁve given tasks and present
the results in Section 3 and conclude with a discussion and plans for
future work in Section 4.

*e-mail: jonathan.fritsch@dlr.de

©2021 IEEE
Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any
current or future media, including reprinting/republishing this material for advertising or promotional purposes,
creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted
component of this work in other works.
https://virtual.ieeevis.org/year/2021/paper a-sciviscontest-1006.html

2 APPROACH

The idea of our implementation is to use well-known visualization
approaches from different domains in one interactive 3D rendering
application. We combine real-time volume rendering and pathline
visualization with a parallel coordinates plot which is usually used in
the ﬁeld of information visualization. Figure 2 shows an example of
the parallel coordinates. This not only allows users to visually detect
correlations between variables, but also enables the speciﬁcation
of upper and lower bounds for each variable. These bounds are
then used during rendering to only visualize a subset of the data
(brushing and linking). This mechanism enables efﬁcient isolation
of structures such as plumes or cold slabs. Additionally, we display
pathlines spawned inside the currently selected subset of the data.
This provides an idea of where the selected material will move to.
In order to achieve interactive volume visualization we use an
asynchronous rendering approach. The frame rate of the OSPRay
based ray tracing is decoupled from the main render thread. In
order to hide the varying frame rates and latencies an image-warping
technique is used. To further increase the performance of our volume
rendering, we use a level-of-detail data structure and progressive
render passes. All together, this enables explorative data analysis
and interactive visualization.

2.1 Data Preprocessing

To reduce the memory and I/O requirements, as well as to enhance
the data with derived information, we introduce a preprocessing
step. First, we generate an octree-based level-of-detail data structure
with two lower resolution levels. Each level only contains 1/8th
the number of cells as the previous level. Second, we compute
additional derived variables (radial velocity and altitude) which help
the identiﬁcation of plumes or slabs at speciﬁc heights using the
parallel coordinates. Third, we randomly select up to 100 000 cells
and store their scalar information in a ﬁle. This is later used to
draw the lines of the parallel coordinates. Lastly, in order to be able
to correlate volume structures (plumes or slabs) with the velocity
ﬂow ﬁeld, we generate pathlines seeded at critical points of the
temperature anomaly ﬁeld. The critical points of each time step were
identiﬁed by using the TopologyToolkit (TTK) [5] and then traced
forward for 10 time steps (20 Myrs). This enables the visualization
of dynamic behavior in a static image as it depicts where the selected
material will move to.

 
 
 
 
 
 
Figure 2: A parallel coordinates plot enables efﬁcient data selection
and visual exploration of correlations between variables.

2.2 Rendering

Our volume rendering is based on the open-source ray tracing engine
OSPRay from Intel1. We implemented an asynchronous rendering
approach, so that the application frame rate does not depend on the
frame rate of the volume rendering. The missing frames are interpo-
lated by using an image-warping technique. This guarantees stable
and high frame rates which is key for an immersive experience in
virtual reality. While the virtual camera is stationary, the previously
rendered image is enhanced by running additional render passes.
This increases the number of samples, that are available per pixel
and reduces the image noise inherent to ray traced images.

For interactive feature selection using the parallel coordinates, the
OSPRay renderer was extended to query all relevant variables during
ray-marching. If the queried values for a volume sample do not
satisfy the restrictions deﬁned in the parallel coordinates, the sample
is discarded and does not contribute to the ray’s ﬁnal color. As this
approach iterates over all restricted variables for each volume sample,
there is an overhead in comparison to render without any restrictions,
that scales linearly with the number of restricted variables. However,
since the volume data is not modiﬁed when changing the restrictions,
no acceleration structures have to be rebuild. This results in a
minimal latency between changing the restrictions and displaying
the resulting volume. Also, it allows a more interactive evaluation of
different parallel coordinate conﬁgurations. The user interface of our
application employs the Chromium Embedded Framework, which
lets us use the parcoords-es2 library for drawing and interacting with
the parallel coordinates.

The pathlines generated in the preprocessing step are rendered
with OSPRay, too. This results in an easier composition with the
volume and enables the usage of OSPRay’s ambient occlusion to
enhance the visual quality of the pathlines. By default, all pathlines
spawned during the last 10 time steps, that started in the current
volume selection are displayed. Optionally, the visible pathlines can
be further reﬁned by using another parallel coordinates plot.

3 RESULTS

We applied our visualization software to address the ﬁve given tasks
using the data set provided by the Pysklywec Lab of the University
of Toronto. Snapshots of the interactive visualization are provided
in the appendix. The accompanying video extensively demonstrates
the visualization features.
Task 1: Here we show stagnated or diverted cold slabs (descending
mantle material) at ∼ 660 km (upper and lower mantle boundary)
depth. To this end, we use the parallel coordinates and select an
altitude range of ±100 km around 660 km depth, a non-positive
radial velocity, suggesting stagnated and sinking material, and a
negative temperature anomaly, indicative of cold downwellings. We
use the radial velocity as transfer function, to color the areas of
stagnated slabs (radial velocity ∼ 0). Sinking slabs can also be seen
in the volume rendering since we selected a non-positive range for
the radial velocity.

1https://www.ospray.org/
2https://github.com/BigFatDog/parcoords-es

Task 2: In this task, we visualize stagnated or diverted cold slabs at
∼ 1600 km (mid-mantle) depth. As before, we select a negative tem-
perature anomaly for volume rendering. However, this time we did
not restrict the depth in order to see where the cold material comes
from and where it moves to. We select the spin transition-induced
density anomaly as color. A positive density anomaly indicates
sinking downwellings, while a negative one shows stagnating down-
wellings. By selecting the entire altitude range we can observe the
behavior of downwellings over the entire mantle (i.e., stagnated
at 660-phase transition, stagnated or diverted in the mid-mantle or
sinking to the core-mantle boundary).
Task 3: Here we identify stagnated or diverted hot plumes (rising
hot mantle material) at ∼ 1600 km depth and their rise to the upper
regions of the lower mantle. In the parallel coordinates we select
the regions with a positive temperature anomaly and the entire alti-
tude range. This actually allows to observe stagnated and deﬂected
plumes both in the mid-mantle and at 660 km depth. We distinguish
between stagnating and rising plumes by using the spin-transition
induced density anomaly as color for volume rendering. A nega-
tive density anomaly indicates rising plumes, while a positive one
indicates stagnating plumes.
Task 4: Stagnated or diverted hot plumes at ∼ 660 km depth have
been already seen in the previous task. An additional way to identify
these features is to select a positive temperature anomaly, choose
an altitude around ∼ 660 km, and use the radial velocity for the
coloring. This shows stagnating and rising slabs at ∼ 660 km in a
similar fashion as the downwellings in Task 1.
Task 5: Correlations between the variables and the ﬂow patterns
can be easily identiﬁed in our framework through the parallel coor-
dinates. The user can choose various value ranges for simulation
variables and selected ﬂow patterns. For instance, a positive thermal
expansivity and temperature anomaly can be used to select plumes in
the lower mantle. Cold material in the upper mantle can be selected
by a negative expansivity and temperature anomaly. More complex
correlations can be derived by including additional variables (e.g.,
spin transition). Additionally, pathlines can help visualize the mantle
ﬂow (i.e., if material rises/sinks or glides along boundaries).

4 DISCUSSION AND FUTURE WORK

In this study, we presented an open-source software framework that
offers volume rendering, pathlines and parallel coordinates to ana-
lyze large-scale data from geodynamic models. It provides a high
level of interactivity and the ability to easily identify correlations be-
tween various output variables. By fulﬁlling the tasks of the contest,
we demonstrated that our framework is suitable for the visualization
of mantle plumes and downwellings. However, our approach is
not limited to these features and can be used also for many other
tasks. For example, tasks which involve the tracking of material
ﬂow rather than stagnating regions can beneﬁt especially from the
pathline feature. In the future, we plan to apply our framework to
various tasks, data sets, or applications (e.g., climate data).

REFERENCES

[1] F. Crameri and P. J. Tackley. Spontaneous development of arcuate single-
sided subduction in global 3-d mantle convection models with a free
surface. JGR: Solid Earth, 119(7):5921–5942, 2014.

[2] A.-C. Plesa, S. Padovan, N. Tosi, D. Breuer, M. Grott, M. Wieczorek,
T. Spohn, S. Smrekar, and W. Banerdt. The thermal state and interior
structure of mars. GRL, 45(22):12–198, 2018.

[3] S. Schneegans, M. Flatken, and A. Gerndt. CosmoScout VR 1.4.0, Mar.

2021. doi: 10.5281/zenodo.4646924

[4] M. Shahnas, D. Yuen, and R. Pysklywec. Mid-mantle heterogeneities
and iron spin transition in the lower mantle: Implications for mid-mantle
slab stagnation. EPSL, 458:293–304, 2017.

[5] J. Tierny, G. Favelier, J. A. Levine, C. Gueunet, and M. Michaux. The
topology toolkit. IEEE Transactions on Visualization and Computer
Graphics, 24(1):832–842, Jan 2018. doi: 10.1109/tvcg.2017.2743938

Figure 3: Using the system on a stereoscopic output device with head-tracking signiﬁcantly improves the understanding
of the complex plume geometry.

Figure 4: Here we used the transfer function editor to highlight regions of a high (orange) and low (blue) temperature
anomaly.

Figure 5: Here we used the parallel coordinates to select regions with a high absolute temperature. The pathlines show
where the selected material will move in the future. Convection cells are clearly visible.

Figure 6: We can use the parallel coordinates not only to limit the volume based on scalars but also based on Cartesian
coordinates. This can be used to create cuts through the volume.

Figure 7: For Task 1, we selected a non-positive radial velocity, a negative temperature anomaly, and a depth range around
660 km. While the cold slabs are well visible in this image, their behavior is much more apparent while playing the animation.
The transfer function uses the radial velocity: Stagnating slabs are shown in white while sinking slabs are colored blue.

Figure 8: For Task 2, we select a negative temperature anomaly and colorize the downwellings according to the spin transition-
induced density anomaly. A negative density anomaly (blue color) causes the downwellings to stagnate and move laterally at
mid-mantle depth (∼ 1600 km). A positive density anomaly (red color) indicates a downward acceleration of the downwellings.
Especially in the upper left area of this time step, we can clearly see how cold material ﬂows downward until it slows down and
spreads out as it approaches the iron-spin transition at about 1600 km depth.

Figure 9: We used a positive temperature anomaly for Task 3. The transfer function is based on the spin transition-induced
density anomaly. A negative density anomaly (blue color) indicates rising plumes. A positive density anomaly (red color) causes
the plumes to stagnate and move laterally at mid-mantle depth (∼ 1600 km). We also show density anomaly values close to zero
(purple regions) that are attained at depths shallower than 1500 km. Here, the endothermic phase transition at 660-km depth is
clearly visible, being indicated by the thickening and thinning of plumes in the upper mantle. Some plumes are deﬂected at
around 1600 km depth and additionally at the 660-phase boundary (see structure at about three o’clock).

Figure 10: Pathlines and their color can be used to visualize the ﬂow of material (blue pathline color: starting point of a ﬂuid
parcel, red pathline color: its location after 20 Myrs).

Figure 11: For Task 4, we selected a depth around 660 km and a positive temperature anomaly. The transfer function uses the
radial velocity. This causes rising material to be shown in red color while stagnating material is shown in white. In this time step
there are several good examples of rising plumes with stagnated material at 660-phase boundary (at about two, four, ﬁve, and six
o’clock).

Figure 12: As an example for Task 5, we select a negative thermal expansivity. The lines of the parallel coordinates plot clearly show a
separation of the data into two distinct regions. We can use further selections in the parallel coordinates to choose the individual regions. The
transfer function uses the temperature anomaly.

Figure 13: The relatively cold region at high altitudes.

Figure 14: The relatively hot region at low altitudes.

Figure 15: If we select a positive thermal expansivity, the data is also separated into two distinct regions. We can use further selections in the
parallel coordinates to choose the individual regions. The transfer function again uses the temperature anomaly.

Figure 16: The relatively cold region at low altitudes.

Figure 17: The relatively hot region at high altitudes.

