2
2
0
2

n
u
J

8
2

]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[

1
v
1
6
0
4
1
.
6
0
2
2
:
v
i
X
r
a

Computational Model for Granular Flows based on the
Lagrangian Particle Method

Mario Zepedaa, Roman Samulyaka,b,∗

aDepartment of Applied Mathematics and Statistics, Stony Brook University, Stony
Brook, New York 11794, USA.
bComputational Science Initiative, Brookhaven National Laboratory, Upton, New York
11973, USA.

Abstract

A numerical model and parallel software for 3D simulations of granular ﬂows

have been developed based on the Lagrangian particle (LP) method [R.

Samulyak, X. Wang, H.-C. Chen, Lagrangian particle method for compress-

ible ﬂuid dynamics, J. Comput. Phys. 362 (2018) 1–19], originally developed

for compressible hydrodynamic ﬂows, including free surface / multiphase

problems. LP uses local polynomial least square ﬁttings on particle-based

stencils that ensure numerical convergence to the prescribed order. The

granular ﬂow model implements continuum equations with a µ(I)-rheology

closure that is capable of describing two-directional transitions of the ﬂow

between various regimes characterized by solid-, liquid-, and gas-like fea-

tures. The granular ﬂow code has been parallelized for distributed memory

supercomputers and validated by comparing 3D simulations to experimental

data on the collapse of granular columns. Numerical simulations showing

the granular ﬂow transition to a gas-like regime have also been presented.

Keywords: Lagrangian Particle Method, Granular Flow, Granular

∗Corresponding author
Email address: roman.samulyak@stonybrook.edu (Roman Samulyak)

Preprint submitted to Computer Methods in Applied Mechanics and EngineeringJune 29, 2022

 
 
 
 
 
 
Column, µ(I)-rheology

1. Introduction

A continuum description of granular ﬂow is of fundamental importance

for industrial applications and ongoing scientiﬁc research. Industrial appli-

cations are typical in agriculture, geophysics, and the pharmaceutical sector,

to name a few. In geophysical sciences, simulations are particularly useful

for the prediction of natural phenomena such as landslides or avalanches

which could represent a hazard to human life [1]. They are also important

in industrial applications that deal with the transportation of solid mate-

rial in powder or grain through channels and narrow passages where the

design of bulk material handling equipment requires a deep understanding

of the mechanical properties of the granular material [2]. Another class of

applications use motion to separate grains of varied sizes and properties [3].

Granular ﬂow also has applications in the pharmaceutical industry where

granulation i.e., the process of producing grains or granules from a solid

substance or a powder is commonly used and the compression properties of

materials need to be understood for creating pills and solvable products [4].

Granular ﬂows are also subject of scientiﬁc research. One example is the

study of tungsten powder interacting with high energy proton beams [5]. It

is expected that tungsten powder, as a high-atomic number material, may

be useful as a target material for future high energy particle accelerators.

The purpose of targets is to convert relativistic particle beams that can be

easily obtained and accelerated, such as proton beams, into beams of other

elementary articles such as pions or neutrons [6]. The tungsten powder

will be able to withstand great thermal loads imposed by particle beams.

2

New advanced simulation tools are needed to fully explore the feasibility of

granular tungsten targets for future accelerators.

The study of granular ﬂow has been an active area of research over last

decades, resulting in the development of methods that are very diﬀerent in

numerical approximations and applicability range. The Discrete Element

Method (DEM) [7, 8, 9] computes direct interactions between grains. While

DEM is gaining more popularity with the increase of computing hardware

capabilities, it is still computationally impracticable for large systems and

long times.

In the continuum modeling framework, diﬃculties arise because the gran-

ular media can change its behavior between diﬀerent ﬂow regimes. Granular

ﬂow studies typically outline the following three regimes [10]:

1. In the quasi-static regime the grain inertia is negligible; this regime

is usually described using solid plasticity models.

2. In the gas-like regime the grains are strongly agitated and usually

far apart of each other. This regime has been modeled by analogy

with the kinetic theory of gases in which the grains interact by binary

collisions.

3. By far the most controversial of the three regimes is the one in which

the grains behave like a dense liquid, usually called inertial regime.

In this dense ﬂow regime, many diﬀerent constitutive models have been

proposed but there no general consensus has yet been reached.

As of today, there are no constitutive equations capable of describing the

dynamics of a physical process that changes through the diﬀerent regimes.

However, a variety of closure equations using plasticity theory [11, 12, 13]

and using kinetic theory of granular ﬂow [14, 15] produce acceptable results

3

within the quasi-static regime and the gas-like regime respectively. As for

the inertial regime, the µ(I)-rheology proposed in [16, 17] lead to a progress

in obtaining closure equations in [18] and more recently in [19, 20], where

the inertial compressible I-dependent rheology was introduced.

With any appropriate choice of the closure model, simulations of granu-

lar ﬂows based on continuous equations may use the conventional grid-based

approaches or other approximations. Some features of granular ﬂows such

as large deformations and complex free surfaces create diﬃculties for using

mesh-based methods. Material Point Method (MPM) and Smooth Parti-

cle Hydrodynamics (SPH) methods better handle transitions through dense

and disconnected states as shown in [21, 22] and [23, 24]. However, it is

known that the discretization of spatial derivative in the SPH method suf-

fers from accuracy issues. It is widely accepted [25, 26] that the traditional

SPH discretization has zeroth-order convergence for widely used kernels and

numerous methods have been developed to improve the SPH discretization

of ﬂuid dynamics equations.

In this paper, we proposed a 3D numerical model and parallel software

for granular ﬂows based on the Lagrangian particle (LP) method for com-

pressible hydrodynamics [27]. In the LP method, approximations of spatial

derivatives are obtained by employing a local polynomial ﬁtting known also

as the generalized ﬁnite diﬀerence (GFD) method [28], which is always accu-

rate to a prescribed order. The LP method for compressible hydrodynamics

is second-order accurate in space and time and it is extendable to higher

order accuracy. In addition to compressible hydrodynamics, the LP code

implements equations of low magnetic Reynolds number magnetohydrody-

namics [29]. Our granular ﬂow model uses a µ(I)-rheology model for the

inertial ﬂow regime, a linear pressure-density relation in the quasi-static

4

regime, and it supports the transition to a gas-like regime when the density

decreases below a minimum value for the inertial regime.

The paper is organized as follows. In Section 2, the governing system

of equations (conservation laws) is described followed by the µ(I)-rheology

model and the description of transitions between various ﬂow regimes. Nu-

merical implementation of the granular ﬂow model using the Lagrangian

particle framework is described in Section 3. The main ideas of paralleliza-

tion of particle data structures and particle handling for massively parallel

supercomputers and scalability tests are also presented. In Section 4, we

report results of the code validation by comparing numerical simulations

with experimental data on the collapse of a granular column, followed by

a demonstration of the code capabilities to handle transitions between ﬂow

regimes. Finally, we conclude this paper with a summary of our results and

plans for the future work.

2. Mathematical model for granular ﬂows

2.1. Conservation law equations

In continuum modeling, granular ﬂows are described by the solid frac-

tion (also known as volume fraction) φ, the velocity vector u = (u, v, w),

and the symmetric Cauchy stress tensor σ = (σij). These quantities are re-

lated by the mass and momentum conservation equations in the Lagrangian

5

formulation as:

φt = −φ

(cid:19)

,

+

(cid:18) ∂u
∂x
(cid:18) ∂σxx
∂x
(cid:18) ∂σyx
∂x
(cid:18) ∂σzx
∂x

∂v
∂y

+

+

+

1
φsφ
1
φsφ
1
φsφ

+

∂w
∂z
∂σxy
∂y
∂σyy
∂y
∂σzy
∂y

+

+

+

(cid:19)

(cid:19)

(cid:19)

∂σxz
∂z
∂σyz
∂z
∂σzz
∂z

+ gx,

+ gy,

+ gz,

ut =

vt =

wt =

(1)

(2)

(3)

(4)

where φs is the constant material density of grains and gα represents an

external force. In order to obtain expressions for the Cauchy stress tensor

σ, we start by decomposing it into a diagonal pressure term and a trace-free

tensor τ :

σij = −P δij + τij.

(5)

The tensor τ is called the shear stress tensor or the deviatoric stress tensor.

To close the system, a formulation for the pressure and the deviatoric

stress tensor in terms of velocity and density is required. This formulation

will depend on the ﬂow regime. For the inertial regime, the µ(I)-rheology

constitutive model is presented in the next section.

2.2. Constitutive relations

A constitutive model widely used for the inertial regime, called µ(I)-

rheology [17], considers the following conﬁguration: a granular material is

conﬁned under a normal stress P between two rough planes, undergoing a

rate ˙γ shear by a shear stress τ , as shown in ﬁgure 1.

The shear rate tensor ˙γ is completely determined in terms of velocity as

˙γij = Dij −

1
3

div(u)δij,

(6)

6

Figure 1: Schematic of normal pressure P , shear stress τ and shear rate ˙γ in the simple

plane shear conﬁguration.

where D is the strain rate tensor given by:

Dij =

1
2

(cid:18) ∂ui
∂xj

+

(cid:19)

.

∂uj
∂xi

(7)

It was shown in [30] and [31] that the system can be described using a

dimensionless parameter called the inertial number I. The inertial number

can be interpreted in terms of the macroscopic time scale and a inertial time

scale. Consider the motion of one grain during a simple shear as shown in

ﬁgure 1. The grain obeys the deformation given by | ˙γ| ocurring in time

Tmacro =

1
2 | ˙γ|

until it passes over a void region; at that moment the grain is pushed down-

ward due to the conﬁning pressure. The time it takes for this rearrangement

to occur can be estimated by the free fall of the grain of diameter d and den-

sity φs under a force P d2 across a distance d:

Tinertial =

d
(cid:112)P/φs

7

The inertial number is deﬁned as the ratio of the inertial time scale and the

macroscopic time scale as

I =

Tinertial
Tmacro

=

2 | ˙γ| d
(cid:112)P/φs

.

(8)

Using dimensional arguments, it can be shown that the shear stress τ

is proportional to the pressure P , with a coeﬃcient of proportionality µ(I)

which depends only on I:

|τ | = µ(I)P,

(9)

where µ(I) is the eﬀective friction coeﬃcient. This relation is usually referred

as the yield condition or friction constitutive equation for µ(I)-rheology.

The friction constitutive equation implicitly expresses the idea that a gran-

ular material cannot deform unless the shear stress is suﬃcient to overcome

friction. It was observed in [32] and [33] that µ(I) can be described as a

rational function

µ(I) = µs +

µ2 − µs
I0/I + 1

(10)

ranging from value µs at zero shear rate and converging asymptotically to a

limit value µ2 for large I. The parameter µs corresponds to the tangent of the

static angle of repose. This material dependent angle is the slope at which

ﬂow stops for certain granular material. The coeﬃcient µ2 corresponds to

the tangent of the angle of motion which is the critical angle at which the

material starts moving in a granular heap. I0 is a constant that scales the

inertial number and depends on the ﬂow layer thickness, the depth-averaged

velocity and some material-dependent constants [34].

The volume fraction is also a function of the inertial number, therefore

there is a function Φ such that

φ = Φ(I).

8

(11)

This function implicitly gives a constitutive equation relating the inertial

number and the solid fraction. Experiments and numerical simulations have

shown that this function is a decreasing function of I. The time-averaged

quantity is gives [35] as

φ =

Tinertialφmin + (Tmacro − Tinertial)φc
Tmacro

,

that is equivalent to

φ = φc − (φc − φmin)I.

(12)

(13)

Here φc is the critical density or the upper bound for the solid fraction state

and φmin is the lower bound or the solid fraction density at which grains

lose contact among themselves.

Deﬁning a = φc − φmin and using equations (8) and (13), we describe

the pressure as a function of the solid fraction and the norm of the shear

rate tensor:

P (φ) = φs

(cid:18) 2ad | ˙γ|
φc − φ

(cid:19)2

.

(14)

Note that the pressure depends on the square of the shear rate tensor and

the grain diameter, consistent with Bagnold scaling [36].

To obtain an expression for the shear stress tensor, it is assumed that

the deviatoric stress tensor satisﬁes the alignment constitutive equation

[19] which takes the form:

τij
|τ |

=

˙γij
| ˙γ|

.

Using equations (9) and (15), we obtain the shear stress tensor as

τij = η(| ˙γ| , P ) ˙γij =

µ(I)P
| ˙γ|

˙γij,

(15)

(16)

where η is an eﬀective viscosity which goes to inﬁnity when the shear rate

goes to zero. Therefore, a yield criterion mush exist and the material starts

9

ﬂowing only if the following condition is satisﬁed

|τ | > µsP.

(17)

2.2.1. Transition to other ﬂow regimes

In this work, we propose a model capable of managing transitions be-

tween the quasi-static regime, the inertial regime, and the gas-like regime.

The model has been implemented in 3D, which is, to the best of our knowl-

edge, the ﬁrst implementation of this kind.

As the granular material approaches the critical density, the inertial

regime constitutive equations no longer describes the dynamics of the process

correctly. In the inertial regime, the pressure depends on the density and

the shear rate tensor, however in this quasi-static regime, the pressure no

longer depends on the shear rate tensor as noted in [10]. Once the density

reaches a maximum density φmax, the material is considered to be in the

quasi-static regime and the following relation for pressure is proposed:

P = φs(α + βφ),

(18)

where α and β are constants depending on rheological parameters. Similarly,

the Cauchy stress tensor depends only on the isotropic pressure in the form

σij = φs(α + βφ)δij.

(19)

In the case of rarefaction, the pressure approaches zero as grains begin to

lose contacts and the granular material behaves somewhat similar to a gas

phase. Numerically, we assign zero pressure to granular particles in this

regime and their motion is controlled by inertia.

10

The pressure relation for the combined regimes is as follows:

P (φ) =

if φ ≤ φmin,

(cid:17)2

(cid:16) 2ad| ˙γ|
φc−φ

if φmin < φ ≤ φmax,

(20)

φs(α + βφ)

if φmax < φ ≤ φc,


0




φs

where φmin denotes the minimum density at which grains lose contact and

no longer interact with each other. We believe our model gives the ﬁrst full

3D implementation of the µ(I)-rheology model with a pressure expression

based on rheological considerations. In [23], a 3D implementation based in

SPH is presented, however the equation for pressure in the inertial regime

is empirical.

2.3. Combined system of equations

In this Section, we combine expressions introduced above and obtain

equations suitable for numerical implementation. Introducing two supple-

mentary scalar functions that depend only on density as

M (φ) =

−4a2d2
(φc − φ)2 ,
aµsI0 + µ2(φc − φ)
aI0 + (φc − φ)

,

N (φ) =

4a2d2
(φc − φ)2

(21)

(22)

the Cauchy stress tensor takes the following form:

1
φs

σij = M (φ) | ˙γ|2 δij + N (φ) | ˙γ| ˙γij

Similarly, we deﬁne functions S(φ) and R(φ) that simplify expressions for

partial derivatives of M (φ) and N (φ), respectively:

(cid:20)

=

−S(φ)

∂N (φ)
∂xj

aµsI0 + µ2 (φc − φ)
aI0 + φc − φ

− M (φ)

aI0 (µ2 − µs)
(aI0 + φc − φ)2

∂M (φ)
∂xj

=

−8a2d2
(φc − φ)3

∂φ
∂xj
(cid:21) ∂φ
∂xj

= S (φ)

= R (φ)

∂φ
∂xj
∂φ
∂xj

,

.

11

For computational purposes, we transform φ to volume as

∂φ
∂xj

=

(cid:19)

∂
∂xj

(cid:18) 1
V

= −

1
V 2

∂V
∂xj

.

Combining all necessary expressions, we obtain the following system of

partial diﬀerential equations:

Vt = V (div (u)) ,

(cid:18)(cid:18) S (V )
R (V )

ut =V

(cid:20) −R (V ) | ˙γ|
V 2
(cid:18)(cid:18) 2M (V )
N (V )
(cid:18) 1
2

+ N (V ) | ˙γ|

∆u +

(cid:19)(cid:21)

(div (u))

,

1
6

∂
∂x

(cid:19) ∂V
∂x

| ˙γ| + ˙γ11
(cid:19) ∂ | ˙γ|
∂x

+ ˙γ12

∂ | ˙γ|
∂y

∂V
∂y

+ ˙γ13

∂V
∂z
(cid:19)

∂ | ˙γ|
∂z

+N (V )

| ˙γ| + ˙γ11

+ ˙γ12

+ ˙γ13

(cid:18) S (V )
R (V )

vt =V

(cid:20) −R (V ) | ˙γ|
V 2
(cid:18)

(cid:18)

˙γ21

∂ | ˙γ|
∂x

+

+N (V )

˙γ21

+ N (V ) | ˙γ|

(cid:18) 1
2

∆v +

+

∂V
∂x
(cid:18) 2M (V )
N (V )
∂
∂y

1
6

| ˙γ| + ˙γ22

(cid:19)(cid:21)

(div (u))

− g,

| ˙γ| + ˙γ22
(cid:19) ∂ | ˙γ|
∂y

(cid:19) ∂V
∂y

+ ˙γ23

+ ˙γ23

∂ | ˙γ|
∂z

∂V
∂z
(cid:19)

wt =V

(cid:20) −R (V ) | ˙γ|
V 2
(cid:18)

(cid:18)

˙γ31

∂V
∂x

+ ˙γ32

∂ | ˙γ|
∂x

+N (V )

˙γ31

+ ˙γ32

+

˙γ33 +

+ N (V ) | ˙γ|

(cid:18) 1
2

∆w +

1
6

(cid:19)(cid:21)

(div (u))

.

∂ | ˙γ|
∂y
∂
∂z

+

∂V
∂y
(cid:18)

(cid:18) S (V )
R (V )
2M (V )
N (V )

| ˙γ| + ˙γ33

| ˙γ|

(cid:19) ∂ | ˙γ|
∂z

(cid:19) ∂V
∂z
(cid:19)

(cid:19)

(cid:19)

(cid:19)

3. Numerical implementation

3.1. Outline of main time step algorithms

The Lagrangian Particle (LP) for solving Euler equations for compress-

ible ﬂuids [27] draws some inspiration from the smooth particle hydrody-

namics method (SPH) method [25]. Unlike SPH, it approximates spatial

12

derivatives by employing a local polynomial ﬁtting, known also as the gen-

eralized ﬁnite diﬀerence (GFD) method [28], which is always accurate to a

prescribed order. This it corrects the numerical accuracy issue of SPH de-

scribed in the Introduction. The LP method compressible hydrodynamics is

second-order accurate in space and time and it is extendable to higher order

accuracy. An outline of the Lagrangian Particle numerical method to solve

the equations of granular ﬂow is presented below.

1. Initialization Setup. An input ﬁle with the problem data (geometry,

material properties, numerical resolution given by the interparticle

distance, initial time, ﬁnal time, type of boundary conditions etc.) is

read, initial data structures are created, including the octree structure

for particle storage.

2. Creation of Initial Particle Distribution. An initial distribution

of Lagrangian particles is created based on the problem geometry and

numerical resolution.

3. Creation of Boundary Particles. Special particles designed to

model solid boundaries or inﬂow / outﬂow boundary conditions are

created.

4. Octree. An octree if constructed for the present distribution of par-

ticles representing granular material and boundaries. THe algorithm

adaptively reﬁnes or coarsens the octree until the number of particles

in an octant does not exceed a prescribed number.

5. Neighbor searching. The routine ﬁnds neighbors for each parti-

cles in all directions, in particular, in all neighboring octants. If the

free boundary condition is applied and neighbors are not complete in

certain directions, ghost particles are generated to complete the neigh-

13

borhood.

6. Stencil Creation. Given the neighbors of each particles, numerical

stencils are generated. Stencils are close to spherical in shape for the

granular ﬂow solver. A simple sorting of particles in the distance as-

cending order may lead to the selection of most particles from one

direction while missing information in other directions. Thus, the sec-

ond principle of ordering neighbor lists is that the top elements (parti-

cles) in each list should be located in all directions (in all neighboring

octants).

7. Approximate Diﬀerential Operators. The generalized ﬁnite dif-

ference / local polynomial ﬁtting [28] is used to compute numerical

approximations for spatial derivatives. To calculate the derivatives of

state s at the location of particle 0 using neighboring particles denoted

by index i, consider the following truncated Taylor series expansion

(2D example was chosen for simplicity):

si = s0+hi

∂s
∂x

(cid:12)
(cid:12)
(cid:12)
(cid:12)0

+ki

∂s
∂y

(cid:12)
(cid:12)
(cid:12)
(cid:12)0

+

1
2

(cid:18)

h2
i

∂2s
∂x2

(cid:12)
(cid:12)
(cid:12)
(cid:12)0

+ k2
i

∂2s
∂y2

(cid:12)
(cid:12)
(cid:12)
(cid:12)0

+ 2hiki

∂2s
∂x∂y

(cid:19)

,

(cid:12)
(cid:12)
(cid:12)
(cid:12)0

where hi and ki denote the distance from particle i to particle 0 in

x and y directions, respectively. If this expansion is performed for m

particles in the neighborhood of particle 0, the unknown derivatives

can be found by solving the following least-squares problem:











h1

k1

h2
k2
...
...
hm km

1
2 h2
1
1
2 h2
2
...
1
2 h2
m

h1k1

1
2 k2
1
1
2 k2
2
...
1
2 k2

h2k2
...
m hmkm





































sx

sy

sxx

syy

sxy

=











s1 − s0

s2 − s0
...
sm − s0











14

The system Ax = b is usually over determined. An optimal solution,

found via the QR decomposition, minimizes (cid:107)Ax − b(cid:107)2.

8. Time Integration. The diﬀerence equations are explicitly given by:

V n+1 − V n
∆t

= V (DIV (u)) ,

un+1 − un
∆t

=V

+N

(cid:18)(cid:18) S
R

(cid:19)

(cid:19)

| ˙γ| + ˙γ11

VX + ˙γ12VY + ˙γ13VZ

(cid:19)

(cid:19)

| ˙γ| + ˙γ11

| ˙γ|X + ˙γ12 | ˙γ|Y + ˙γ13 | ˙γ|Z

+ N | ˙γ|

LAP (u) +

(DIV (u))X

(cid:19)(cid:21)

,

1
6

(cid:20) −R | ˙γ|
V 2
(cid:18)(cid:18) 2M
N
(cid:18) 1
2

vn+1 − vn
∆t

=V

+N

(cid:18)

(cid:20) −R | ˙γ|
V 2

(cid:18)

˙γ21 | ˙γ|X +

˙γ21VX +
(cid:18) 2M
N

(cid:18) S
R

(cid:19)

(cid:19)

| ˙γ| + ˙γ22

VY + ˙γ23VZ

| ˙γ| + ˙γ22

(cid:19)

(cid:19)

| ˙γ|Y + ˙γ23 | ˙γ|Z

+ N | ˙γ|

(cid:18) 1
2

LAP (v) +

1
6

(cid:19)(cid:21)

(DIV (u))Y

− g,

wn+1 − wn
∆t

=V

(cid:20) −R | ˙γ|
V 2

(cid:18)

(cid:18)

˙γ31VX + ˙γ32VY +

(cid:18)

| ˙γ| + ˙γ33

(cid:19)

(cid:19)

VZ

(cid:19)

(cid:19)

+N

˙γ31 | ˙γ|X + ˙γ32 | ˙γ|Y +

˙γ33 +

| ˙γ|

| ˙γ|Z

(cid:18) S
R
2M
N
(cid:19)(cid:21)

+ N | ˙γ|

(cid:18) 1
2

LAP (w) +

1
6

(DIV (u))Z

.

Here DIV and LAP are the second-order accurate approximation of

the divergence and Laplacian operator, respectively, using (approxi-

mately) symmetric stencils (see the description of stencils above). The

sub-indexes X,Y,Z denote partial derivatives computed using the GFD

approximations. The spatial derivatives are second order accurate, but

15

the time derivatives are only ﬁrst order accurate. However, since a typ-

ical granular ﬂow simulation is typically very stiﬀ and may go through

changes of regimes (gas-like, inertial, quasi-static), it is necessary to

take small time steps. Therefore, the second-order accuracy in time

is not as critical as it is in hydrodynamic systems. Nevertheless, it is

planned to implement a second order accurate temporal discretization

scheme that would improve the overall accuracy of the granular solver.

In our implementation, the density and the velocity are updated by

computing derivatives for several functions of density as well as the

shear stress tensor. This is not the customary practice in granular

codes. In [21] and [23], for example, the authors directly approximate

the Cauchy stress tensor. This, however, requires components of the

Cauchy stress tensor for the free surface and solid boundaries which are

diﬃcult to approximate accurately. In our approach, implementation

of the boundary data is more straightforward.

9. Numerical Implementation of Boundary Conditions Three types

of boundary conditions are implemented in the granular ﬂow code.

• Mirror particles are used for the solid boundary. For every ﬂuid

particle within a prescribed distance to the boundary, a mirror

particle is created and placed symmetrically across the local tan-

gent plane. The mirror particle is assigned the same density of

the corresponding ﬂuid particle, the opposite component of the

normal velocity, and zero-norm of the shear rate tensor.

• Ghost particles are used for the free boundary. If a particle is

unable to ﬁnd enough neighbors to calculate the diﬀerential oper-

ators, ghost particles are created to complete the neighborhood.

16

Ghost particles are assigned states that model the corresponding

ﬂuid particle as a particle located on a free surface. These include

the continuity of pressure and velocity. The density of a ghost

particle is slightly less than the minimum density as described in

equation (20). Using these assumptions, the following expression

for the shear rate tensor norm is calculated:

| ˙γ|G = | ˙γ|F

φc − φG
φc − φF

.

(23)

• Periodic boundary conditions periodically reﬂect states of La-

grangian particles between the left and right edges along one

or two-dimensions in 3D. This capability was built using special

functions of the p4est library.

10. Particle displacement. Finally, the states are updated and the

particles are moved to their new position in space, using the average

of the old velocity and the new velocity.

xn+1 − xn
∆t

=

1
2

(cid:0)un + un+1(cid:1) .

3.2. Particle data structure and parallelization algorithms

The Lagrangian Particle code stores all the particle data in a single

array. The elements in the array contain all the information about the

particles, including coordinates, physical states and some control variables.

This makes maintenance and extension of the code easier and simpliﬁes the

communication of particle data among processes since the particle data is

stored in adjacent memory blocks.

The major octree algorithms such as building, reﬁning and searching that

signiﬁcantly aﬀect the code performance are parallelized using the p4est li-

brary. p4est [37] enables a dynamic management of a collection of adaptive

17

octrees on distributed memory supercomputers. It has the functionality of

building, reﬁning, coarsening, 2:1 balancing and partitioning on computa-

tional domains composed of multiple, connected, two-dimensional quadtrees

or three-dimensional octrees, referred to as a forest of octrees. The gran-

ular ﬂow model uses the same parallel structures and the communication

/ particle-redistribution algorithms as the earlier Lagrangian particle hy-

drodynamic code. Parallel algorithms in the hydrodynamic LP code are

described in [38]. p4est-based implementation of another Lagrangian par-

ticle code AP-Cloud (Adaptive Particle-in-Cloud) for optimal solutions of

Vlasov-Poisson problems can be found in [39].

3.3. Parallel scalability

We have studied parallel scalability of the code based on the 3D column

collapse problem, described in the next section, using the Seawulf cluster

located at Stony Brook University. Strong scaling was tested by increasing

the number of CPU cores while keeping the total number of computational

particles constant (3,029,264 particles were used in the strong scaling tests).

Figure 2(a) shows strong scalability of the LP granular ﬂow code.

Weak scaling was measured by running the code with diﬀerent number

of CPU cores and using a proportionally scaled number of particles such

that the number of particle per core remained constant (25,000 particles per

CPU core). The total number of Lagrangian particles varied from 1M for

40 CPU cores to 6M for 240 cores. The results of weak scaling tests are

demonstrated in Figure 2(b).

The overall parallel scalability is very good. The weak scaling, which is

more important for practical applications to large-size problems, is better

compared to the strong one, as is typical for parallel codes. Achieving 97%

18

(a) Strong scaling

(b) Weak scaling

Figure 2: Strong (a) and weak (b) scaling of the LP granular ﬂow code.

and 93% of ideal speedup on 200 and 240 CPU cores, respectively, while

running about 3M particles is suﬃcient for practical applications.

4. Veriﬁcation and validation of the granular ﬂow code

In this section, results of numerical simulations and their comparison

with experimental results are reported. We use the following granular ﬂow

model parameters, dependent on grain characteristics, that are consistent

with experiments reported in [40]:

• Static angle of repose, µs = tan(30 deg)

19

• Angle of Motion, µ2 = tan(50 deg)

• Inertial number ﬂow layer thickness, I0 = 2.65

• Grain diameter, d = 0.32mm

• Intrinsic grain density, φs = 2600kg/m3

For the function that relates the inertial number and the density (13), typical

values of φc = 0.60 and φmin = 0.35 are used.

4.1. Collapse of granular layer

One of the key elements that numerical experiments of granular ﬂow

should be able to reproduce is compressibility. Given an initial bulk of

granular material, not at critical density, the gravity should compresses the

material up to the critical density.

In order to assess the model capability to reproduce this property, two

numerical experiments were performed. The ﬁrst one consisted in the re-

duction of the granular system of equations to the 1D spacial dimension,

in which the compressibility depends only on the pressure term. A 1D col-

umn physically represents a 3D column of inﬁnite transverse size. The same

object was then modeled by the 3D LP granular ﬂow code using periodic

boundary conditions in both transverse directions. In both cases, a granular

layer of 0.03m height was initialized with the initial states of zero pressure,

zero velocity, and a small initial gradient of density, as shown in Figure 3.

The expected ﬁnal height in this particular experiment is 0.025m, and

both the 3D code with periodic boundary conditions and the reduced 1D

code gave virtually the same ﬁnal states.

In both cases, the ﬁnal height

of 0.02m was obtained. The over-compression by 20% suggests that the

20

Figure 3: Initial density distribution for 1D and 3D compression simulations.

pressure relation given in (20) may not be the most accurate when the

density is in the lower part of the interval [φmin, φmax] of the inertial regime.

Moreover, for all other numerical tests, the resulting ﬁnal height was always

slightly less than the expected ﬁnal height, with the over-compression error

decreasing as the initial density approaches the critical density φc. The good

agreement between 1D and 3D code suggests that the veriﬁcation test of the

solvers was successful, and the discrepancy wth the experiment is dependent

on the details of the closure model.

4.2. Axisymmetric collapsing column

The study of a collapsing axisymmetric column is a common benchmark

for the validation of granular codes. Work [40] reports experimental results

on granular columns, initially conﬁned by a cylindrical tube, and then set

into motion by rapidly lifting the tube. By systematic experimental studies,

the author of [40] identiﬁed three regimes depending on the aspect ratio

(a = hi/ri) between the initial height and radius of the column. The ﬁnal

radius r∞ for the ﬁrst two regimes is given by

r∞ =




ri (1 + 1.24a) ,

if 0 < a < 1.7



ri

(cid:0)1 + 1.6a1/2(cid:1) ,

if 1.7 < a, < 10.

(24)

21

The ﬁnal radius as well as the ﬁnal height of the resulting cone depend on

two processes, the initial collapsing and the subsequent avalanching. The

resulting power laws for the ﬁnal height are

h∞ =




ari,

if 0 < a < 1.7,



0.88ria1/6,

if 1.7 < a < 10.

(25)

The time needed to reach r∞ depends only on the initial height and is given

as

(cid:115)

t∞ = 3

hi
g

.

(26)

For ﬂows arising from columns with aspect ratios less than 1.7, although

the ﬁnal radius and ﬁnal height are given by equations 24 and 25, [40]

makes further divisions based on the evolution of the ﬂow to steady state.

Speciﬁcally, for columns with aspect ratio less than 0.74, a single circular

discontinuity forms in the free surfaces, separating an outer avalanching

region from an inner non-deformed cylindrical section.

4.2.1. Columns with aspect ratio a < 1.7

The ﬁrst numerical simulation was performed for a column with the

aspect ratio a = 0.6. Figure 4(a) depicts the transverse velocity at interme-

diate time 0.07s and demonstrates the avalanching process and Figure 4(b)

shows the transverse distribution of density at t = 0.07s. We observe that

the density remains mostly constant, except in the outermost layers where

the avalanching occurs.

A deﬁning characteristic of the collapsing column dynamics is the ﬁnal

layering of particles with respect to the initial conﬁguration. Figure 5 shows

that the ﬁnal layering has very good agreement with the layering described in

22

(a) Transversal Velocity

(b) Density slice

Figure 4: Transverse velocity (a) and density slice (b) at t = 0.07s for collapsing column

with the initial aspect ratio a = 0.60.

[40]. It is also worth noting that the inner non-deformed cylindrical section

is observed in Figure 5.

Based on the empirical expressions, the expected height of the cone at t =

0.17s is h∞ = 0.03m and the ﬁnal radius is r∞ = 0.087m. The ﬁnal height

obtained from the numerical simulation is 0.027m, the ﬁnal radius is about

0.085m. Both quantities agree with the experiment within an acceptable

margin.

For ﬂows with aspect ratio greater than 0.74 the evolution is more com-

plex. Work [40] describes the formation of two circular discontinuities in

23

Figure 5: Final layering at t = 0.17s for the column with a = 0.60

the free surface that divide the column into three concentric regions. The

granular material in the outermost region starts ﬂowing ﬁrst, than the ma-

terial in the middle region, as can be observed in ﬁgure 6(a). The particles

in the outermost region are the ﬁrst to stop moving, then the slope of the

free surface increases and eventually reaches the angle of repose. This can

be observed in ﬁgure 6(b).

If the aspect ratio is less than 1, an inner cylindrical region stays con-

stant through all the process. But for aspect ratios greater than one, the

avalanching process disrupts the inner cylindrical region and produces a con-

ical pile as observed in Figures 7(a) and 7(b). Simulation results are in good

agreement with experimental images of [40].

4.2.2. Columns with aspect ratio a > 1.7

For granular columns with the aspect ratio greater than 1.7, the ﬁnal

shape of the heap is dominated by a process of collapsing and avalanching.

The particles in the top layers roll down the slope that is formed by the

particles in the base moving outwards, as can be observed in Figure 8(a).

The ﬁnal geometry shown in Figure 8(b) is qualitatively similar. These im-

24

(a) Early time

(b) Late time

Figure 6: Transverse velocity at early time(a) and after reaching the ﬁnal radius (b) for

collapsing column with the initial aspect ratio a = 1.2

ages also demonstrate the distinctive characteristic of the collapsing column,

namely that a cone of 45◦ remains motionless through all the process. The

ﬁnal layering obtained from the simulation is similar to the schematic that

summarizes experimental observations (see Figure 5 in [40]).

For large aspect ratios, the ﬁnal radii from simulation were consistently

smaller by about 20% compared to the experimental ﬁt estimates by (25).

This discrepancy is perhaps caused by the closure model. For the inertial
regime when φmin < φ < φmax, P ∼ | ˙γ|2 in our closure model (14) that

is consistent with the Bagnold scaling [36]. However, [10] reports that this

quadratic dependence turns into P ∼ | ˙γ|

1

2 in the lower part of (φmin, φmax).

25

(a) a = 0.9

(b) a = 1.2

Figure 7: Distribution of granular layers for collapsed column with aspect ratio a = 0.9

(a) and a = 1.2 (b).

4.3. Transition to the gas-like regime

As the density of the granular material approaches the minimum density

φmin, grains lose contact with each other and the pressure approaches zero.

In this regime, the movement of the material is controlled only by the grain

inertia. In order to assess the capabilities of the model that supports the

transition into the gas-like regime, we performed simulations of a collapsing

column at a small distance from the edge of a horizontal support plane raised

above the ground. Expanding initially in all directions, granular material

26

(a) Intermediate time

(b) Final time

Figure 8: Slice of granular material showing the intermediate (a) and ﬁnal (b) layering of

particles based on their initial radius.

goes into free fall on one side of the granular column.

In the regions with full solid boundary, the column collapses as usual

into a grain heap with the characteristic cone shape. The slope of this heap

is deﬁned by the avalanching process that deposits layers of grains on top of

each other. In the direction where the solid boundary is absent, the particles

start an abrupt free fall and the heap slope changes (Figure 9(a)). Due to

smaller friction experienced by granular layers on the short slope during the

avalanche process, the transverse velocity is higher on the side of the free

27

fall as shown in Figure 9(b).

(a) Slope diﬀerence

(b) Transverse velocity

Figure 9: (a) Diﬀerence in slopes for collapsing column with and without solid boundary

edge. (b) Transverse velocity in the collapsing at the edge of the solid boundary.

5. Conclusion and future work

A numerical model and parallel software for 3D simulations of granular

ﬂows have been developed based on the Lagrangian particle (LP) method for

compressible hydrodynamic ﬂows that resolves free surface and multiphase

problems. The granular ﬂow model implements continuum equations with a

µ(I)-rheology closure that is capable of describing two-directional transitions

of the ﬂow between various regimes characterized by solid-, liquid-, and gas-

28

like features.

The Lagrangian particle-based discretization of spatial derivatives uses

local least squares polynomial ﬁtting or generalized ﬁnite diﬀerences on par-

ticle stencils that ensures numerical convergence to the prescribed order.

The continuum adaptivity property of Lagrangian particles is ideally suit-

able to the simulation of ﬂows with large density changes. The current

discretization is second-order accurate in space and ﬁrst-order accurate in

time. Because of the need to use very small time step due to rapid density

changes, the 1st order time discretization does not signiﬁcantly reduce ac-

curacy. A second-order accurate time discretization will be implemented in

the future.

The Lagrangian particle code uses octrees as the particle data structure

and the octree construction and search routines provide optimal particle

neighborhoods for numerical stencils. The major octree algorithms such

as building, reﬁning and searching that signiﬁcantly aﬀect the code per-

formance are parallelized using the p4est library. p4est (Parallel Forest

of K-trees) enables a dynamic management of a collection of adaptive oc-

trees on distributed memory supercomputers.

It has the functionality of

building, reﬁning, coarsening, 2:1 balancing and partitioning on computa-

tional domains composed of multiple, connected, two-dimensional quadtrees

or three-dimensional octrees, referred to as a forest of octrees. The granu-

lar ﬂow model uses the same parallel structures and the communication /

particle-redistribution algorithms as the earlier Lagrangian particle hydro-

dynamic code.

The LP granular ﬂow code has been validated by comparing 3D simula-

tions to experimental data on the collapse of granular columns. Numerical

simulations are in good agreement with experiments on the time-scale dy-

29

namics, the ﬁnal shape of the granulas material heap, and the layering of

grains depending on their initial location. The code has reproduced the

major experimental features for granular columns with various values of the

aspect ratio deﬁned as the initial column height divided by the initial ra-

dius. For column with the largest aspect ratio, the simulated ﬁnal radius

was about 20% smaller compared to experiments. We believe that the pres-

sure relation on the closure model could be responsible for this error. We

have also demonstrated numerical simulation of a granular ﬂow undergoing

a change of the ﬂow regime with grains losing contacts at reduced density

using an example of collapsing column at the edge of a horizontal support

plane.

Future developments will include improvements of both numerical algo-

rithms and the closure model. In the area of algorithms, we will implement

second order time stepping. The whole algorithm can also be easily upgraded

to higher degree of overall accuracy by using higher order polynomial ﬁt-

tings for spatial derivatives and a Runge-Kutta time integration within the

method if lines. A locally adaptive time stepping would be greatly beneﬁ-

cial for problems with changing ﬂow regimes. We will also investigate other

relations within the closure model and perform parametric and sensitivity

studies.

Acknowledgments This work was supported in part by the U.S. De-

partment of Energy grant No. DE-SC0014043.

References

[1] A. Dufresne, Granular ﬂow experiments on the interaction with station-

ary runout path materials and comparison to rock avalanche events,

30

Earth Surface Processes and Landforms 37 (14) (2012) 1527–1541.

arXiv:https://onlinelibrary.wiley.com/doi/pdf/10.1002/esp.

3296, doi:https://doi.org/10.1002/esp.3296.

https://onlinelibrary.wiley.com/doi/abs/10.1002/esp.

URL

3296

[2] F. Chevoir, M. Prochnow, P. Moucheront, F. Cruz, F. Bertrand, J.-P.

Guilbaud, P. Coussot, J.-N. Roux, Dense granular ﬂows in a vertical

chute, Powders and Grains (01 2001).

[3] P. W. Cleary, M. L. Sawley, Three-dimensional modelling of industrial

granular ﬂows, in: Second international conference on CFD in the min-

erals and process industries, Citeseer, 1999, pp. 95–100.

[4] C. Vervaet, J. P. Remon, Continuous granulation in the pharmaceutical

industry, Chemical Engineering Science 60 (14) (2005) 3949–3957,

granulation across the length scales - 2nd International Workshop on

Granulation. doi:https://doi.org/10.1016/j.ces.2005.02.028.

URL

https://www.sciencedirect.com/science/article/pii/

S0009250905001284

[5] O. Caretta, P. Loveridge, J. O’Dell, T. Davenne, M. Fitton, A. Ather-

ton, C. Densham, N. Charitonidis, I. Efthymiopoulos, A. Fabich,

M. Guinchard, L. J. Lacny, B. Lindstrom, Proton beam induced dy-

namics of tungsten granules, Phys. Rev. Accel. Beams 21 (2018) 033401.

doi:10.1103/PhysRevAccelBeams.21.033401.

URL https://link.aps.org/doi/10.1103/PhysRevAccelBeams.21.

033401

[6] R. Abrams, et al., Interim design report, arXiv:1112.2853 (2011).

31

[7] Y. Xu, K. D. Kafui, C. Thornton, G. Lian, Eﬀects of material properties

on granular ﬂow in a silo using dem simulation, Particulate Science and

Technology 20 (2) (2002) 109–124. arXiv:https://doi.org/10.1080/

02726350215338, doi:10.1080/02726350215338.

URL https://doi.org/10.1080/02726350215338

[8] L.-S. Lu, S.-S. Hsiau, Dem simulation of particle mixing in

a sheared granular ﬂow, Particuology 6 (6)

(2008) 445–454,

simulation and Modeling of Particulate Systems.

doi:https:

//doi.org/10.1016/j.partic.2008.07.006.

URL

https://www.sciencedirect.com/science/article/pii/

S167420010800134X

[9] P. Bartsch,

S. Zunft, Granular ﬂow around the horizon-

tal

tubes of a particle heat exchanger:

Dem-simulation and

experimental

validation,

Solar Energy

182

(2019)

48–56.

doi:https://doi.org/10.1016/j.solener.2019.01.086.

URL

https://www.sciencedirect.com/science/article/pii/

S0038092X19300982

[10] S. Chialvo, J. Sun, S. Sundaresan, Bridging the rheology of granular

ﬂows in three regimes, Phys. Rev. E 85 (2012) 021305. doi:10.1103/

PhysRevE.85.021305.

URL https://link.aps.org/doi/10.1103/PhysRevE.85.021305

[11] I. Vardoulakis, E. C. Aifantis, A gradient ﬂow theory of plasticity for

granular materials, Acta Mechanica 87 (1991) 197–217. doi:https:

//doi.org/10.1007/BF01299795.

[12] H. W. Chandler, A plasticity theory without drucker’s postu-

32

late,

suitable for granular materials, Journal of

the Mechan-

ics and Physics of Solids 33 (3) (1985) 215–226.

doi:https:

//doi.org/10.1016/0022-5096(85)90012-2.

URL

https://www.sciencedirect.com/science/article/pii/

0022509685900122

[13] C. S. Campbell, Granular shear ﬂows at the elastic limit, Jour-

nal of Fluid Mechanics 465 (2002) 261–291.

doi:10.1017/

S002211200200109X.

[14] C. K. K. Lun, S. B. Savage, A Simple Kinetic Theory for Granular Flow

of Rough, Inelastic, Spherical Particles, Journal of Applied Mechanics

54 (1) (1987) 47–53. doi:10.1115/1.3172993.

URL https://doi.org/10.1115/1.3172993

[15] J. Ding, D. Gidaspow, A bubbling ﬂuidization model using ki-

netic theory of granular ﬂow, AIChE Journal 36 (4)

(1990)

523–538.

arXiv:https://aiche.onlinelibrary.wiley.com/doi/

pdf/10.1002/aic.690360404, doi:https://doi.org/10.1002/aic.

690360404.

URL https://aiche.onlinelibrary.wiley.com/doi/abs/10.1002/

aic.690360404

[16] G. M. gdrmidi@ polytech. univ-mrs. fr http://www. lmgc. univ-montp2.

fr/MIDI/, On dense granular ﬂows, The European Physical Journal E

14 (2004) 341–365.

[17] P. Jop, Y. Forterre, O. Pouliquen, A constitutive law for dense granular

ﬂows, Nature 441 (7094) (2006) 727–730. doi:10.1038/nature04801.

33

[18] P.-Y. Lagr´ee, L. Staron, S. Popinet, The granular column collapse as a

continuum: validity of a two-dimensional navier–stokes model with a µ

(i)-rheology, Journal of Fluid Mechanics 686 (2011) 378–408.

[19] T. Barker, D. G. Schaeﬀer, M. Shearer, J. M. N. T. Gray, Well-posed

continuum equations for granular ﬂow with compressibility and

µ(i)-rheology, Proceedings of the Royal Society A: Mathematical,

Physical and Engineering Sciences 473 (2201)

(2017) 20160846.

doi:10.1098/rspa.2016.0846.

URL

https://royalsocietypublishing.org/doi/abs/10.1098/

rspa.2016.0846

[20] D. G. Schaeﬀer, T. Barker, D. Tsuji, P. Gremaud, M. Shearer, J. M.

N. T. Gray, Constitutive relations for compressible granular ﬂow in the

inertial regime, J. Fluid Mech. 874 (2019) 926–951. doi:10.1017/jfm.

2019.476.

[21] S. Dunatunga, K. Kamrin, Continuum modelling and simulation of

granular ﬂows through their many phases, J. Fluid Mech. 779 (2015)

483–513. doi:10.1017/jfm.2015.383.

[22] I. Iaconeta, A. Larese, R. Rossi, E. O˜nate, An implicit mate-

rial point method applied to granular ﬂows, Procedia Engi-

neering 175 (2017) 226–232, proceedings of

the 1st

Interna-

tional Conference on the Material Point Method (MPM 2017).

doi:https://doi.org/10.1016/j.proeng.2017.01.017.

URL

https://www.sciencedirect.com/science/article/pii/

S1877705817300176

[23] E. Yang, H. H. Bui, H. De Sterck, G. D. Nguyen, A. Bouazza, A

34

scalable parallel computing SPH framework for predictions of geo-

physical granular ﬂows, Comput. Geotech. 121 (2020) 103474. doi:

10.1016/j.compgeo.2020.103474.

[24] L. Minatti, E. Paris, A sph model for the simulation of free surface

granular ﬂows in a dense regime, Applied Mathematical Modelling

39 (1) (2015) 363–382. doi:https://doi.org/10.1016/j.apm.2014.

05.034.

URL

https://www.sciencedirect.com/science/article/pii/

S0307904X14002960

[25] J. Monaghan, Smoothed particle hydrodynamics, Rep. Prog. Phys. 68

(2005) 1703–1759.

[26] P. Hopkins, GIZMO: a new class of accurate, mesh-free hydrodynamic

simulation methods, Mon. Not, R. Astron. Soc. 450 (2014).

[27] R. Samulyak, X. Wang, H.-C. Chen, Lagrangian particle method for

compressible ﬂuid dynamics, J. Comput. Phys. 362 (2018) 1–19. doi:

10.1016/j.jcp.2018.02.004.

[28] J. Benito, F. Urena, L. Gavete, Inﬂuence of several factors in the gen-

eralized ﬁnite diﬀerence method, Appl. Math. Modelling 25 (12) (2001)

1039–1053.

[29] R. Samulyak, S. Yuan, N. Naitlho, P. B. Parks, Lagrangian particle

model for 3D simulation of pellets and SPI fragments in tokamaks,

Nucl. Fusion 61 (4) (2021) 046007. arXiv:arXiv:2011.07111, doi:

10.1088/1741-4326/abdcd2.

35

[30] F. da Cruz, S. Emam, M. Prochnow, J.-N. Roux, F. Chevoir, Rheo-

physics of dense granular materials : Discrete simulation of plane shear

ﬂows, arXiv (Mar 2005). arXiv:cond-mat/0503682, doi:10.1103/

PhysRevE.72.021309.

[31] G. Lois, A. Lemaˆıtre, J. M. Carlson, Numerical tests of constitutive

laws for dense granular ﬂows, Phys. Rev. E 72 (5) (2005) 051303. doi:

10.1103/PhysRevE.72.051303.

[32] O. Pouliquen, Scaling laws in granular ﬂows down rough inclined planes,

Phys. Fluids 11 (3) (1999) 542–548. doi:10.1063/1.869928.

[33] O. Pouliquen, Y. Forterre, Friction law for dense granular ﬂows: appli-

cation to the motion of a mass down a rough inclined plane, J. Fluid

Mech. 453 (2002) 133–151. doi:10.1017/S0022112001006796.

[34] P. Jop, Y. Forterre, O. Pouliquen, Crucial role of sidewalls in granular

surface ﬂows: consequence s for the rheology, Journal of Fluid Mechan-

ics 541 (2005) 167–192. doi:10.1017/S0022112005005987.

[35] O. Pouliquen, C. Cassar, P. Jop, Y. Forterre, M. Nicolas, Flow of dense

granular material: towards simple constitutive laws, Journal of Sta-

tistical Mechanics: Theory and Experiment 2006 (07) (2006) P07020–

P07020. doi:10.1088/1742-5468/2006/07/p07020.

URL https://doi.org/10.1088/1742-5468/2006/07/p07020

[36] R. A. Bagnold, Experiments on a gravity-free dispersion of large solid

spheres in a newtonian ﬂuid under shear, Proceedings of the Royal

Society of London. Series A. Mathematical and Physical Sciences

225 (1160) (1954) 49–63. doi:10.1098/rspa.1954.0186.

36

URL

https://royalsocietypublishing.org/doi/abs/10.1098/

rspa.1954.0186

[37] C. Burstedde, L. C. Wilcox, O. Ghattas, p4est: Scalable algorithms

for parallel adaptive mesh reﬁnement on forests of octrees, SIAM Jour-

nal on Scientiﬁc Computing 33 (3) (2011) 1103–1133. doi:10.1137/

100791634.

[38] S. Yuan, M. Zepeda, N. Naitlho, R. Samulyak, Massively-parallel la-

grangian particle code and applications, Mech. Research Comm. (sub-

mitted), arXiv:2206.11998 (2022).

[39] K. Yu, P. Kumar, S. Yuan, A. Cheng, R. Samulyak, SPACE: 3d parallel

solvers for vlasov-maxwell and vlasov-poisson equations for relativistic

plasmas with atomic transformations, Comp. Physics Communications

277 (2022) 108396.

[40] G. Lube, H. E. Huppert, R. S. J. Sparks, M. A. Hallworth, Axisym-

metric collapses of granular columns, Journal of Fluid Mechanics 508

(2004) 175–199. doi:10.1017S0022112004009036.

37

