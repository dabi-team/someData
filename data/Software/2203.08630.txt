2
2
0
2

r
a

M
6
1

]

G
L
.
s
c
[

1
v
0
3
6
8
0
.
3
0
2
2
:
v
i
X
r
a

Extended vehicle energy dataset (eVED): an enhanced
large-scale dataset for deep learning on vehicle trip
energy consumption

Shiliang Zhang∗

Dyako Fatih∗

Fahmi Abdulqadir∗

Tobias Schwarz†

Xuehui Ma‡

March 17, 2022

Abstract

This work presents an extended version of the Vehicle Energy Dataset (VED), which is a
openly released large-scale dataset for vehicle energy consumption analysis. Compared with its
original version, the extended VED (eVED) dataset 1 is enhanced with accurate vehicle trip GPS
coordinates, serving as a basis to associate the VED trip records with external information e.g.,
road speed limit and intersections, from accessible map services to accumulate attributes that
is essential in analyzing vehicle energy consumption. In particularly, we calibrate all the GPS
trace records in the original VED data, upon which we associated the VED data with attributes
extracted from the Geographic Information System (QGIS), the Overpass API, the Open Street
Map API, and Google Maps API. The associated attributes include 12,609,170 records of road
elevation, 12,203,044 of speed limit, 12,281,719 of speed limit with direction (in case the road
is bi-directional), 584,551 of intersections, 429,638 of bus stop, 312,196 of crossings, 195,856
of traﬃc signals, 29,397 of stop signs, 5,848 of turning loops, 4,053 of railway crossings (level
crossing), 3,554 of turning circles, and 2,938 of motorway junctions. With the accurate GPS
coordinates and enriched features of the vehicle trip record, the obtained eVED dataset can
provide a precise and abundant medium to feed a learning engine, especially a deep learning
engine that is more demanding on data suﬃciency and richness. Moreover, our software work
for data calibration and enrichment can be reused to generate further vehicle trip datasets for
speciﬁc user cases, contributing to deep insights into vehicle behaviors and traﬃc dynamics
analyses. We anticipate that the eVED dataset and our data enrichment software can serve the
academic and industrial automotive section as apparatus in developing future technologies.

1

Introduction

The transportation section is one of the greatest energy consumer, and the investigations of on-
road vehicle behavior and traﬃc dynamics can lead to deep insight into energy-eﬃcient route
planning. However, there is an insuﬃciency of open large-scale dataset dedicated to vehicle energy

∗Chalmers University of Technology, Sweden. Email: shiliang@chalmers.se, {dyako, fahmi}@student.chalmers.se
†University of Gothenburg, Sweden. Email: gusschwto@student.gu.se
‡Xi’an University of Technology, China. Email: maxuehuiphd@stu.xaut.edu.cn
1A description of our eVED dataset can be found at https://github.com/zhangsl2013/eVED, and users can

download our data and code via git clone https://Datarepo@bitbucket.org/datarepo/eved dataset.git

1

 
 
 
 
 
 
consumption research. Particularly, there lacks a large dataset with features of signiﬁcant richness
of attributes, which ﬁts with deep learning purpose aiming to dig the data deep and extract useful
patterns from it. Though various vehicle datasets have been used in the research community [1],
not all of them are openly released that can be leveraged by a wide range of studies. Table 1
lists some publicly available datasets for vehicle energy and mobility analysis, with their scale and
feature amount compared.

Table 1: A list of related open-source vehicle trip datasets

Dataset name with citations of use in research community

Amount of

Amount of

records

features

Recorded from

Contains energy

diverse data

consumption related

owners or not

features or not

Battery and heating data in real driving cycles [2–4]

900,000+

48

Vehicle Energy Dataset [5–13]

Panasonic 18650PF Li-ion Battery Data [14, 15]

20,000,000+ 18

1,000,000+

10

Battery cycle life data [16]

EV battery level vs distance approximation

A New Dynamic Stochastic EV Model

for Power System Planning Applications

800,000+

108

364

Automotive Li-ion Cell Usage Data Set [17]

68,771

Electric vehicle speed, pedal, acceleration, voltage,

and current data over four diﬀerent roads

[18]

163,984

Vehicle charging system testing for Chevrolet Volt 2013

Vehicle charging system testing for Ford C-Max Energi 2013

Vehicle charging system testing for Ford Focus Electric

Vehicle charging system testing for Ford Fusion Energi

Vehicle charging system testing for Nissan Leaf

Vehicle charging system testing for Toyota Prius Plug-in

29,315

15,352

3,601

1,663

3,343

1224

6

4

2

5

6

4

3

4

4

6

4

No

Yes

No

No

No

Yes

Yes

No

No

No

No

No

No

No

Yes

Yes

No

No

No

No

Yes

Yes

Yes

Yes

Yes

Yes

Yes

Yes

Among the accessible databases, the Vehicle Energy Dataset (VED) [19] is the most promising
one with its large volume of vehicle driving records and pertinent features toward energy consump-
tion. Nevertheless, the attributes in the VED dataset are records of internal vehicle features like
speed, GPS coordinates, engine revolution, vehicle device temperature, etc., without external yet
essential information e.g., the speed limit the vehicle is subjected to, the elevation and the road
slope, and the traﬃc lights, which plays an important role in traﬃc proﬁle and vehicle energy
consumption behavior. On the other hand, we notice that GPS records in the VED data are cor-
rupted by noise to diﬀerent levels, possibly because of a vibrating and moving environment for
the on-board diagnostics (OBD) sensors logging the data. Such inaccurate GPS records limit the
feasibility to associate the VED dataset with external attributes aforementioned and to extend the
VED dataset to an enriched version suitable for deep learning, which is demanding on the data
suﬃciency and richness.

To address this concern, we enhance the VED data by generating an extended version of VED
abbreviated as eVED. We ﬁrst conduct map matching to obtain accurate GPS for the VED dataset,

2

using the Hidden Markov Model (HMM) method [20] to snap the original coordinates to the most
likely road segment represented by a timestamped sequence of latitude-longitude points. Then
using the matched GPS, we extract the speed limits corresponding to GPS with a joint software
eﬀort on Open Street Map (OSM) [21], Quantum Geographic Information System (QGIS) [22],
and Overpass Turbo 2. The elevation is associated with the records in the VED dataset using the
Elevation API 3 from Google Maps platform. We also identify intersections in the VED records via
a combined querying and processing using QGIS and OSM. The bus stops are also recognized in the
vehicle traces consisted in the VED dataset through QGIS operations. Finally, we collect a set of
road elements that might cause a change in the vehicle speed, such as stop signs, pedestrian crossing,
railway crossing, and traﬃc lights, and we summarize those road elements as focus points in this
work. With the map matching and data enrichment eﬀorts, we provide the eVED dataset as an
extended large-scale database with enhanced record accuracy and enriched vehicle trip attributes,
which can serve as an accurate apparatus in vehicle energy consumption analysis and empower
deep learning engines toward such analysis.

This paper is organized as follows: Section 2 describes the map matching to obtain accurate
GPS records for the VED dataset. Based on the matched vehicle GPS, we present the extraction
and association of external features of speed limit, elevation, intersection, bus stop, and focus point
in section 3, 4, 5, 6, and 7, respectively. Section 8 demonstrates three use cases based on the eVED
dataset, one as a statistical vehicle energy consumption estimation method, another as an anlysis
on vehicle speed distribution regarding traﬃc tension, and the last one as a deep learning example
for vehicle speed estimation, exemplifying the potential of our eVED data to support automotive
research. We conclude this work in section 9.

Figure 1: The recorded vehicle trace GPS coordinates in the raw VED dataset (in red dots) and
their potentially real location estimated by our map matching eﬀorts (in green dots). Notice that
quite a number of recorded GPS coordinates fall out a road where they are actually on.

2https://overpass-turbo.eu/
3https://developers.google.com/maps/documentation/elevation/start

3

2 Map matching

A common problem with vehicle GPS traces is that the recording GPS is prone to disturbance,
leading to a recorded position in a GPS trace possibly to be oﬀ by a few meters if not more.
We show an example of such divergence in the raw VED dataset depicting to what extent the
diﬀerence between recorded and potential truth GPS coordinates can be in Figure 1. An inaccurate
GPS makes it hard to relate a vehicle position with infrastructures aﬀecting vehicle behaviors like
intersection, bus stop, pedestrian crossing, etc., thus blocking further analysis on vehicle and traﬃc.

Figure 2: The inaccuracy of the approach to match GPS coordinates to their nearest road segment,
demonstrated by the two pointed-out coordinates which are closer to a road not consistent with
the actual moving trace.

A potential solution to calibrate the GPS is to match every GPS coordinate to its nearest road
segment. However, such solution might not always be accurate since some recorded coordinates
might appear to lie on or closer to another road segment other than the real one, as illustrated
in Figure 2. This work leverages the Hidden Markov Model (HMM) approach to snap the GPS
trace records to the most likely consecutive road segment, which is represented by a time-stamped
sequence of latitude-longitude coordinates that are the closest to the recorded GPS coordinates, as
shown in Figure 3.

Figure 3: The recorded vehicle trace GPS coordinates (in red dots) and their most likely counterpart
(in blue dots) based on the HMM approach.

4

We implement the HMM approach using Valhalla 4, which is an open-source routing engine
which can be used along with Open Street Map (OSM) data to match GPS coordinates. Particu-
larly, we use the Meili library in Valhalla that, for a given sequence of GPS points, Meili ﬁnds the
nearest most-likely sequence of candidates of consecutive road segments call Viterbi path, which is
generated based on the Viterbi algorithm [23].

The GPS matching is not always working well, and we mark the matched GPS coordinates in
the generated eVED dataset with diﬀerent labels of fully matched, interpolated, and unmatched.
We mark the interpolated GPS coordinates in the generated data ﬁle since the raw VED data
contains many consecutive duplicate coordinates, in which case we label the ﬁrst coordinate as
matched and interpolated for the rest duplicates, although they are matched with the same point.
Those matched coordinates locating out of any road is marked as unmatched in the eVED dataset.
Overall, the coordinate matching manages to snap over 99% of the GPS records in the raw VED
dataset to coordinates on the road.

3 Speed limit

This section associates the raw VED records with speed limit of the road where the vehicle is driving
on, based on the calibrated GPS coordinates obtained in section 2. To facilitate the extraction of
speed limit information, we ﬁrst download the drivable road data using Quantum Geographic
Information System (QGIS), and then we add the line layer from Overpass Turbo containing the
road speed limit information to the QGIS canvas, and ﬁnally append the speed limit to the raw
VED dataset by the QGIS software.

The speed limit of a road in the Overpass line layer is deﬁned by the tag “maxspeed”, in
addition to which there are other tags indicating diﬀerent classes of speed limit, such as advisory
and practical. Moreover, there are scenarios where a single road segment has diﬀerent speed limit
depending on the traveling direction. To wrap up those information in the eVED dataset, we add
a column in the dataset deﬁned as “class” for the speed limit we extracted, detailed in Table 2.
We also add a column as “speed limits with direction” to include only the speed limit of the
direction the car was driving along, which is recognized via the calculation of the initial bearing θ
in equation 1 [24], where the bearing is calculated for the road segment as θ1, and for the coordinates
of the trip along that road segment as θ2. The direction of the travel is forward if cos(θ1 − θ2) > 0,
otherwise backward.

θ = atan2(sin∆λ · cosφ2, cosφ1 · sinφ2 − sinφ1 · cosφ2 · cos∆λ)

(1)

where φ1, λ1 and φ2, λ2 are the starting and ending latitude-longitude, respectively, and ∆ = λ2−λ1.

4 Elevation

The integrating of elevation information in the eVED dataset is intuitive since it has a direct
impact on vehicle behavior, e.g., traversing up an incline requires more energy than a ﬂat surface
or decline. To associate the raw VED data records with elevation, we leverage a service named

4https://github.com/valhalla/valhalla

5

Table 2: Description of speed limit classes. The tag “maxspeed:forward” means that the direction
of travel is the same as that of the ordered sequence of points in the LineString of that road segment,
whereas “maxspeed:backward” means the opposite. The speed limit class labeled as 1 represents
the case where there are no explicit speed limit signs, therefore the default speed limits apply for
the city of Michigan where the VED data were recorded as follows: motorway 70 mph, trunk 55
mph, primary 55 mph, secondary 45 mph, tertiary 35 mph, unclassiﬁed 55 mph, residential 25 mph,
and service 25 mph.

Class

-1

0
1

2

3

OSM tag from Overpass
line layer
maxspeed:forward
maxspeed:backward
maxspeed
-

maxspeed:advisory

maxspeed:practical

Description

Proportion of raw VED
records (%)

maximum legal speed limit depending
on the direction of travel
maximum legal speed limit
default speed limits
posted advisory speed limit which is
not legally binding
realistic average speed estimate
when there are no legal speed limits

0.569

81.7
14.4

0.929

0.027

Elevation API from Google Maps platform which can provide the elevation information for a given
GPS coordinate in the raw VED data.

The raw VED dataset contains about 22 million rows of data record, each of which is made up
of several attribute columns whose values are gathered at diﬀerent intervals. Due to such diﬀerent
sampling intervals, part of the recorded GPS coordinates are duplicated across several consecutive
records because of the lower polling rate of GPS. Furthermore, duplication of coordinates induces
the extracted elevation data to be stepped. To mitigate such impact, we smooth the extracted
elevation using a “ﬁve-point” average approach, i.e., we take the average of ﬁve points, which
consist of two points preceding and two succeeding including the point under consideration, as
the smoothed elevation of the GPS point in question. Note that we keep both the raw and the
smoothed elevation in the eVED dataset ﬁles for reference.

With the smoothed elevation information for vehicle traces, we calculate the gradients based

on two consecutive vehicle GPS points in a procedure shown in Table 3.

5

Intersection

Based on the calibrated GPS records, we associate the raw VED data records with indicator
showing whether a vehicle is driving through an intersection, and mark the record in question
when the answer is yes. The extraction of intersection is conducted using the Quantum Geographic
Information System (QGIS), which enable the recognition of street intersections from Open Street
Map (OSM) and consequently label the GPS coordinates of all intersections for a given vehicle
mobility trace.

We ﬁrst generate a layer using QGIS that covers all the area that the vehicle data is recorded,
whereby we locate all the intersection coordinates on the layer.
In this case, such coordinates
constitute the universal set of intersections in the city of Ann Arbor as shown in Figure 4. Using

5https://geopy.readthedocs.io/en/stable/#module-geopy.distance

6

Table 3: Procedures for the calculation of road gradient based on elevation.

Constant: N as the total number of records in the raw VED dataset

for i ∈ {1, 2, 3, ..., N − 1}

take the i-th and its succeeding (i + 1)-th coordinate
query the elevation h(i) and h(i + 1) for the i-th and the (i + 1)-th coordinate, respectively
if h(i) = h(i + 1):

set the road gradient g(i) for the i-th coordinate as 0;

else

end

end

calculate the geodesic distance Dg between the i-th and (i + 1)-th coordinate using
the GeoPy’s distance function 5, which follows Karney’s approach [25].
calculate the road gradient g(i) as:
g(i)=(h(i + 1)-h(i))/Dg

this universal set, we can traverse all the vehicle data records and mark a record as an intersection
according to the record’s GPS coordinate.

Figure 4: An example of intersections extracted from Open Street Map for the roads in Ann Arbor,
Michigan, USA.

6 Bus stops

The bus stop locations in a speciﬁc area can be downloaded from the Open Street Map (OSM) as
a point layer, based on which we use QGIS to extract the coordinates of those locations. Before
the extraction, we unify the coordinates of both the original and the OSM layer data into the
EPSG:4326 coordinate reference system (CRS) [26], which allows us to use meters as the unit of

7

measurement during the calculation.

The data for bus stops is download from the data catalog of the website of City of Ann Arbor
Michigan 6, as shown in Figure 5. Using the bus stop locations, we create a buﬀer of 10 meters in
radius using QGIS and the coordinates in the raw VED data that are at most 10 meters away from
any bus stop are marked, and we generate a single column to include such indications for bus stops
in our data ﬁles. In total, we traverse the all the vehicle records and recognize 429,638 of them as
driving through an intersection.

Figure 5: Visualization of the data for bus stop locations in Ann Arbor, Michigan, USA, where
each solid blue dot represents a bus stop.

7 Focus points

The term of focus points in this work encapsulates the location of interest on a road such as traﬃc
signal, pedestrian crossing, stop signs that might cause a change in vehicle speed. Particularly, we
consider 16 type of focus points as 1) crossing, 2) traﬃc signal, 3) stop signs, 4) turning loop, 5)
railway crossing, 6) turning circle, 7) motorway junction, 8) hump, 9) lift gate, 10) gate, 11) give
way, 12) bollard, 13) level crossing, 14) roundabout 15) mini roundabout, 16) swing gate. Note
that all the terms used for focus points are consistent with the deﬁnition on the OpenStreetMap
Wiki 7.

We ﬁrst download the point layer containing all the types of focus points considered from
OpenStreetMap, and using QGIS we are able to create three-meter radius centered at each focus
point. Then a spatial join is conducted between the VED coordinates and those radii we generated,

6https://www.a2gov.org/services/data/Pages/default.aspx
7https://wiki.openstreetmap.org/wiki/Main_Page

8

which entails the recognition of vehicle GPS as experiencing a focus point at most three meters
away from it. Table 4 shows what types and how many focus points are recognized in our eVED
dataset.

Table 4: Focus points recognized in the eVED dataset.

e
p
y
t

t
n
i
o
p

s
u
c
o
f

number

d
r
a
l
l
o
b
1

p
m
u
b
108

g
n
i
s
s
o
r
c
312,196

e
t
a
g

t
f
i
l

96

e
t
a
g
1,105

n
g
i
s

y
a
w
e
v
i
g
985

g
n

i
s
s
o
r
c

l
e
v
e
l

4,053

p
m
u
h
223

n
o
i
t
c
n
u
j

y
a
w
r
o
t
o
m
2,938

t
u
o
b
a
d
n
u
o
r

i

i

n
m
195

t
u
o
b
a
d
n
u
o
r

81

n
g
i
s

p
o
t
s

29,397

e
t
a
g

i

g
n
w
s

4

l
a
n
g
i
s

c
ﬃ
a
r
t

e
l
c
r
i
c

i

g
n
n
r
u
t

p
o
o
l

i

g
n
n
r
u
t

195,856

3,554

5,848

8 Three use cases on vehicle behavior analysis using the eVED

dataset

This section showcases three research/analysis scenarios where our eVED dataset can be applied
to, that are (i) an approach to estimate vehicle trip energy consumption that can help a energy-
eﬃcient route planning and (ii) vehicle speed proﬁling for traﬃc tension analysis, and (iii) a deep
learning demonstration for estimating vehicle speed range with only public information. We use
those examples to show the opportunities that the eVED data can bring to automotive research.

8.1 Statistical energy consumption estimation

Figure 6: The speed & energy distribution subject to the speed limit of 30 mile/h (48 km/h). The
blue bars represent the probabilistic density for the vehicle speed subject to the designated speed
limit, and the orange stems indicate the average energy consumption for one second’s driving under
a speciﬁc speed.

This subsection demonstrates an approach to estimate vehicle trip energy consumption via data

9

statistics of the eVED. Our hypothesis for energy here is the energy consumption is only determined
by the vehicle speed. With the simpliﬁed hypothesis, we can assign the speed with its corresponding
energy consumption and calculate the energy consumption of a trip via the trip’s speed proﬁle.

The method is to generate the statistical energy consumption within a certain duration of driving
for diﬀerent speed limits. In this case, we obtain the energy within one second’s driving, and add
up to a total trip energy consumption within its travel time. The statistical energy consumption is
calculated through the distribution of speed subject to a speciﬁc speed limit, as an example shown
in Figure 6 for the energy statistics subject to the speed limit of 48 km/h. From the speed & energy
distribution statistics, we can obtain a weighted average energy consumption value for one second’s
driving under the road with speed limit of 48 km/h, and we can gain such energy consumption
values for the other speed limits in a similar way.

With the statistics of energy consumption for diﬀerent speed limits obtained, we can estimate
the energy consumption for a given vehicle trip by looking at how much time the vehicle drives
under diﬀerent speed limits. To validate this approach, we use 1207 trips of diﬀerent length from
35 vehicles in generating the energy consumption statistics, and use 277 trips of diﬀerent length
from 7 another vehicles to test the eﬀectiveness of the energy estimation approach. As shown in
Figure 7, the test result manifest a sound estimation accuracy, with a root mean squared error
(RMSE) of 0.0781 for the energy estimation of the whole test trips.

Figure 7: Comparison between the actual and estimated vehicle trip energy consumption.

8.2 Speed distribution analysis regarding traﬃc tension

Using the eVED dataset, this subsection provides an analysis on vehicle speed distribution under
a given speed limit. We show an example of vehicle speed distribution subject to the speed limit
of 55 mile/h (89 km/h), and elicit insight into traﬃc tension for the considered speed limit.

We extract all the speed samples subject to 89 km/h in the eVED dataset and generate a

10

00.20.40.60.811.21.41.6Estimated energy (liter of gas)00.20.40.60.811.21.41.6Groud truth energy (liter of gas)Ground truth v.s. estimated vehicle trip energy consumptionFigure 8: The free ﬂow speed distribution of the vehicle driving under road speed limit of 55 mile/h
(89 km/h). Note that the sample used to generate this histogram is free from any factors that can
cause a deceleration of the vehicle, like traﬃc signal, roundabout, crossings, etc.

histogram shown in Figure 8. The histogram shows that the resulted distribution is far from a
normal distribution with a bell shape centered around the speed limit of 89 km/h, even though
we have removed the speed samples subject to decelerating elements, e.g., traﬃc signals, before
generating the histogram. Particularly, there are about 25% samples with speed below 50 km/h.

Figure 9: Heat map of speed distribution for vehicles driving under road speed limit of 55 mile/h
over the time of the day. The three lines in the heat map indicate the lowest 10%/20%/30%
population of the speed samples at a speciﬁc time of the day.

A possible hypothesis is that those speed samples are subject to traﬃc contention or even jams,
as commonly exist in the morning rush hours on the working days. To validate such assumption,
we generate the heat map of how the speed population distributes over the time of the day, as
shown in Figure 9. The heat map demonstrates several clear time zones where the speeds are
much lower than the speed limit appear, e.g., the time from six to nine o’clock in the morning,
around twelve in the noon, and around three and six o’clock in the afternoon. Such time zones

11

of lower speed is consistent with daily life expectation where the traﬃc might be tense during the
morning/afternoon when people are heading for working/going back home, and during the noon
when people temporally leave their working place and go out for launch.

8.3 Deep learning for speed estimation

This subsection shows how to estimate vehicle speed via training a deep learning model based on
the eVED dataset. The idea is to learn a model to estimate the speed for vehicle trip segments,
thus we can predict whether there is traﬃc tension or free traﬃc ﬂow for a speciﬁc route and
contribute to the travel time estimation. The training of the model will only use the publicly
available information to limit the risk of vehicular privacy-sensitive information leakage, and we
list all the input and output features involved in the model training in Table 5. For the output of
the deep learning model, we use the median value of the speed records during two minutes’ driving.

Table 5: Input and output features description

features

time of the day (h); speed limit (km/h); road gradient;
whether experiencing an intersection (0 or 1);
whether experiencing a bus stop (0 or 1);
whether experiencing any focus point shown in
Table 4 (0 or 1); whether approaching any intersection,
bus stop, or focus point within 30 seconds’ drive (0 or 1);
whether departing any intersection, bus stop, or focus
point within 30 seconds’ drive (0 or 1)

input

output median of the speed in a consecutive 4-minute’s trip segment

Figure 10: The LSTM layer structure with internal LSTM cell components.

We use the long-short-term-memory (LSTM) networks [27] as the structure of the estimation
model as shown in Figure 10. With the input and output features settled, we can conﬁgure the
LSTM model accordingly and we initialize the model speciﬁcations as shown in Table 6. To facilitate
the model training, we extract from the eVED dataset 7,267 trip segments from 308 vehicles, and

12

951 segments from the 38 vehicles as training and testing dataset, respectively. Each segment
consists of 240 sequentially consecutive records of the features listed in Table 5.

Table 6: The LSTM model speciﬁcations

conﬁguration name
LSTM layer number
hidden layer number
number of hidden units
input features
state activation function
gate activation function for all gates
input weight dimension (wi,wf,wc,wo)
recurrent weight dimension (Ri,Rf,Rc,Ro)
bias dimension (bi,bf,bc,bo)
fully connected layer number following the LSTM layer

value or dimension
1
1
5,000
8
tanh: (e2x − 1)/(e2x + 1)
Sigmoid: 1/(e−x + 1)
40,000×8
40,000×5,000
40,000×1
9

Figure 11: Training performance of the trained model in term of training error and training loss.

Figure 12: Testing performance of the trained model. Note that there are several trip segments
with the median speed incorrectly estimated, as shown in the upper-right of this ﬁgure. While the
majority of the estimated median speeds are consistent with the actual ones with low divergence.

13

020040060080010001200Training iterations5152535455565Training error in RMSE020040060080010001200Training lossTraining errorTraining loss020406080100120140Actual output (km/h)020406080100120140Estimated output (km/h)We implement the LSTM model using MATLAB 2021b with access to NVidia Tesla A100 GPUs,
and we show the training performance in Figure 11 in regard with training loss and the root mean
squared error (RMSE) of the prediction. Figure 12 provides the prediction performance of the
trained model on the testing dataset, manifesting that using only publicly available information of
vehicle trip data, the estimation of speed for trip segments via a deep learning model can be useful
with prediction RMSE of 8.9078 for the test dataset.

9 Conclusions

We present an eVED dataset which is an enhanced and enriched version of the Vehicle Energy
Dataset (VED), where we provide precise GPS records based on which we further associate the
raw VED data with various features that are essential to vehicle behavior and traﬃc dynamics.
As a large-scale dataset with diversities of features both from internal and external of vehicles,
the eVED dataset is potential to serve varieties of vehicle behavior research, particularly for deep
learning purposes where the learning engine requires high abundance and richness of the data.
Moreover, our software generating the external features for the eVED, which we openly released,
can be reused in consumer cases to accumulate tailored datasets to accomplish their analysis. We
demonstrate the usage of the eVED dataset via an estimation of vehicle trip energy consumption,
an analysis on vehicle speed distribution regarding traﬃc tension, and a deep learning model to
estimate moving vehicle speed only using public information to limit the risk of privacy disclosure.
Beyond our demonstrations, we anticipate the eVED dataset to support more advanced vehicle and
traﬃc research and contribute further insights into an eﬃcient transportation network.

Acknowledgement

Shiliang Zhang’s work was supported by the project ‘Privacy-Protected Machine Learning for Trans-
port Systems’ of Area of Advance Transport and Chalmers AI Research Centre (CHAIR). The
computations were enabled by resources provided by the Swedish National Infrastructure for Com-
puting (SNIC) at C3SE partially funded by the Swedish Research Council through grant agreement
no. 2018-05973. We also thank Elad Schiller for discussions that help improve the presentation.

References

[1] L. Calearo, M. Marinelli, and C. Ziras, “A review of data sources for electric vehicle integration

studies,” Renewable and Sustainable Energy Reviews, vol. 151, p. 111518, 2021.

[2] M. Steinstraeter, T. Heinrich, and M. Lienkamp, “Eﬀect of low temperature on electric vehicle

range,” World Electric Vehicle Journal, vol. 12, no. 3, 2021.

[3] D. Pau, D. Denaro, G. Gruosso, and A. Sahnoun, “Microcontroller architectures for battery
state of charge prediction with tiny neural networks,” in 11th IEEE International Conference
on Consumer Electronics, ICCE-Berlin 2021, Berlin, Germany, November 15-18, 2021. IEEE,
2021, pp. 1–6.

14

[4] H. S. Nogay, “Estimating the aggregated available capacity for vehicle to grid services using
deep learning and nonlinear autoregressive neural network,” Sustainable Energy, Grids and
Networks, vol. 29, p. 100590, 2022.

[5] X. Tang, T. Jia, X. Hu, Y. Huang, Z. Deng, and H. Pu, “Naturalistic data-driven predictive
energy management for plug-in hybrid electric vehicles,” IEEE Transactions on Transportation
Electriﬁcation, vol. 7, no. 2, pp. 497–508, 2021.

[6] C. Prehofer and S. Mehmood, “Big data architectures for vehicle data analysis,” in 2020 IEEE
International Conference on Big Data (IEEE BigData 2020), Atlanta, GA, USA, December
10-13, 2020.

IEEE, 2020, pp. 3404–3412.

[7] L. Petkevicius, S. Saltenis, A. Civilis, and K. Torp, “Probabilistic deep learning for electric-
vehicle energy-use prediction,” in Proceedings of the 17th International Symposium on Spatial
and Temporal Databases, SSTD 2021, Virtual Event, USA, August 23-25, 2021, E. Hoel,
D. Oliver, R. C. Wong, and A. Eldawy, Eds. ACM, 2021, pp. 85–95.

[8] Y. Hua, M. Sevegnani, D. Yi, A. Birnie, and S. Mcaslan, “Fine-grained RNN with trans-
fer learning for energy consumption estimation on EVs,” IEEE Transactions on Industrial
Informatics, pp. 1–1, 2022.

[9] A. Shafee, M. M. Fouda, M. M. E. A. Mahmoud, A. J. Aljohani, W. Alasmary, and F. H.
Amsaad, “Detection of lying electrical vehicles in charging coordination using deep learning,”
IEEE Access, vol. 8, pp. 179 400–179 414, 2020.

[10] G. Lin, X. Zhu, J. Wang, and J. Xiao, “Anomaly removal for vehicle energy consumption
in federated learning,” in International Joint Conference on Neural Networks, IJCNN 2021,
Shenzhen, China, July 18-22, 2021.

IEEE, 2021, pp. 1–8.

[11] C. Werghui, A. Kchiche, N. B. Othman, and F. Kamoun, “A neural network model for fuel
consumption estimation,” in Advanced Information Networking and Applications - Proceedings
of the 35th International Conference on Advanced Information Networking and Applications
(AINA-2021), Toronto, ON, Canada, 12-14 May, 2021, Volume 2, ser. Lecture Notes in Net-
works and Systems, vol. 226. Springer, 2021, pp. 323–332.

[12] G. Lin, B. Zhao, Y. Zhang, and Y. Zhang, Analysis on Eﬀects of Speed and Acceleration on
Mesoscopic Fuel Consumption Prediction Based on Vehicle Energy Dataset, pp. 43–53.

[13] J. Han, H. Shu, X. Tang, X. Lin, C. Liu, and X. Hu, “Predictive energy management for plug-
in hybrid electric vehicles considering electric motor thermal dynamics,” Energy Conversion
and Management, vol. 251, p. 115022, 2022.

[14] E. Chemali, P. J. Kollmeyer, M. Preindl, R. Ahmed, and A. Emadi, “Long short-term mem-
ory networks for accurate state-of-charge estimation of li-ion batteries,” IEEE Trans. Ind.
Electron., vol. 65, no. 8, pp. 6730–6739, 2018.

[15] P. Kollmeyer, A. Hackl, and A. Emadi, “Li-ion battery model performance for automotive
drive cycles with current pulse and eis parameterization,” in 2017 IEEE Transportation Elec-
triﬁcation Conference and Expo (ITEC), 2017, pp. 486–492.

15

[16] A. Singh, C. Feltner, J. Peck, and K. I. Kuhn, “Data driven prediction of battery cycle life

before capacity degradation,” CoRR, vol. abs/2110.09687, 2021.

[17] G. dos Reis, C. Strange, M. Yadav, and S. Li, “Lithium-ion battery data and where to ﬁnd

it,” Energy and AI, vol. 5, p. 100081, 2021.

[18] G. Gruosso, G. Storti Gajani, F. Ruiz, J. D. Valladolid, and D. Patino, “A virtual sensor for

electric vehicles’ state of charge estimation,” Electronics, vol. 9, no. 2, 2020.

[19] G. Oh, D. J. Leblanc, and H. Peng, “Vehicle energy dataset (ved), a large-scale dataset for ve-
hicle energy consumption research,” IEEE Transactions on Intelligent Transportation Systems,
pp. 1–11, 2020.

[20] P. Newson and J. Krumm, “Hidden markov map matching through noise and sparseness,”
in 17th ACM SIGSPATIAL International Symposium on Advances in Geographic Information
Systems, ACM-GIS 2009, November 4-6, 2009, Seattle, Washington, USA, Proceedings. ACM,
2009, pp. 336–343.

[21] R. K. Ghosh, V. R, and A. Bhattacharyya, “Eco-routing using open street maps,” CoRR, vol.

abs/2011.13556, 2020.

[22] L. T. de Lima, S. Fern´andez-Fern´andez, J. M. de Almeida Espinoza, M. da Guia Albuquerque,
and C. Bernardes, “End point rate tool for QGIS (EPR4Q): validation using DSAS and AM-
BUR,” ISPRS Int. J. Geo Inf., vol. 10, no. 3, p. 162, 2021.

[23] Q. You, Y. Li, Z. Chen, and M. S. Rahman, “A simple near-optimal path selection scheme for
multi-hop wireless relay networks based on viterbi algorithm,” Trans. Emerg. Telecommun.
Technol., vol. 27, no. 10, pp. 1294–1307, 2016.

[24] A. R. Miller, Implementation of a Multi-Criteria Decision Analysis (MCDA) Toolkit to Aid
in Ranking Naval Mission Vessel Combinations With Uncertainty. Old Dominion University,
2017.

[25] C. F. Karney, “Algorithms for geodesics,” Journal of Geodesy, vol. 87, no. 1, pp. 43–55, 2013.

[26] T. M. Hare, A. P. Rossi, A. Frigeri, and C. Marmo, “Interoperability in planetary research for

geospatial data analysis,” Planetary and Space Science, vol. 150, pp. 36–42, 2018.

[27] Y. Yang, F. Yang, and H. Wu, “Inspection route prediction in substation using long short-term

memory networks,” Comput. Electr. Eng., vol. 98, p. 107680, 2022.

16

