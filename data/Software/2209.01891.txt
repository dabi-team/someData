1

A Survey on Open-Source-Deﬁned Wireless
Networks: Framework, Key Technology, and
Implementation

Liqiang Zhao, Muhammad Muhammad Bala, Wu Gang, Pan Chengkang, Yuan Yannan, Tian Zhigang,

Yu-Chee Tseng, Chen Xiang, Bin Shen, and Chih-Lin I

2
2
0
2

p
e
S
5

]
I

N
.
s
c
[

1
v
1
9
8
1
0
.
9
0
2
2
:
v
i
X
r
a

Abstract—The realization of open-source-deﬁned wireless net-
works in the telecommunication domain is accomplished through
the ﬁfth-generation network (5G). In contrast to it predecessors
(3G and 4G), the 5G network can support a wide variety of
heterogeneous use cases with challenging requirements from both
the Internet and Internet of Things (IoT). The future sixth-
generation (6G) network will not only extend 5G capabilities but
also innovate new functionalities to address emerging academic
and engineering challenges. The research community has identi-
ﬁed these challenges could be overcome by open-source-deﬁned
wireless networks, which is based on open-source software and
hardware. In this survey, we present an overview of different
aspects of open-source-deﬁned wireless networks, comprising
motivation, frameworks, key technologies, and implementation.
We start by introducing the motivation and explore several
frameworks with classiﬁcation into three different categories:
black-box, grey-box, and white-box. We review research efforts
related to open-source-deﬁned Core Network (CN), Radio Access
Network (RAN), Multi-access Edge Computing (MEC), the ca-
pabilities of security threats, open-source hardware, and various
implementations, including testbeds. The last but most important
in this survey, lessons learned, future research direction, open
research issues, pitfalls and limitations of existing surveys on
open-source wireless networks are included to motivate and
encourage future research.

This work was supported in part by National Key R&D Program of
China (2019YFE0196400), Joint Project of China Mobile Research Institute
& X-NET (R202111101112JZC04), National Natural Science Foundation of
China (61771358, 61901317, 62071352), Fundamental Research Funds for the
Central Universities (JB190104), Science and Technology Plan of Xi’An City
(2019217014GXRC006CG007-GXYD6.1), Joint Education Project between
China and Central-Eastern European Countries (202005) and the 111 Project
(B08038).

L. Zhao and M. M. Bala are with the State Key Laboratory of Inte-
grated Service Networks, School of Telecommunications Engineering, Xidian
University, Xi’an 710071, China (e-mail: muhammadyakasai@hotmail.com;
lqzhao@mail.xidian.edu.cn;).

G. Wu is with National Key Laboratory of Science and Technology on
Communications, University of Electronic Science and Technology of China
(e-mail:wugang99@uestc.edu.cn).

P. Chengkang

is with China Mobile Research

Institute

(e-

mail:panchengkang@chinamobile.com).

Y. Yannan is with Communication Research Institute Vivo Mobile Com-

munication Co., Ltd. Beijing, China (e-mail: yannan.yuan@vivo.com).

T. Zhigang is with Beijing National Research Center for Information
Science and Technology Tsinghua University Beijing, China (e-mail: zg-
tian@tsinghua.edu.cn).

Y. Tseng is with college of Artiﬁcial Intelligence National Yang Ming Chiao

Tung University Taiwan (email: yctseng@cs.nctu.edu.tw).

C. Xiang is with School of Electronics and Information Technology,
Sun Yat-sen University, Guangzhou, Guangdong Province, China, 510006
(chenxiang@mail.sysu.edu.cn).

B. Shen is with Chongqing Municipal Lab of Mobile Communication
Technology, Chongqing 400-065, P. R. China (e-mail: shenbin@cqupt.edu.cn).
I. Chih-Lin is with China Mobile Research Institute Beijing, China (e-mail:

icl@chinamobile.com).

Index Terms—Open Source, Software-Deﬁned Network, Net-
work Function Virtualization, 5G, Network Slicing, Multi-access
Edge Computing.

I. INTRODUCTION

T HE FIFTH generation (5G) network has been recognized

as a key enabler to address the increase in data trafﬁc of
mobile Internet and Internet of Things (IoT), which enable
a large number of smart devices to communicate with one
another [1]. This triggers various service requirements, for
example, millisecond delay is required by Internet of vehicle
(IoV) and ultra-high-deﬁnition video 4k/8k demand for Gbps
transmission rate. However, the sixth generation (6G) network
is envisioned to provide a higher bit rate and low latency
to services and applications with constraints requirement [2].
Furthermore, such a network that is expected to satisfy the
requirement of the Internet and IoT will be difﬁcult to imple-
ment. It is undeniable that conventional network architectural
hardware and software are both integrated closely together
and cannot withstand the diverse evolving scenarios and re-
quirements metrics. This proposed the vision for open-source-
deﬁned wireless networks which enable the deployment of
open-source software on general-purpose hardware and permit
the scaling and customization of users’ networks by mobile
operators.

Open-source software evolution can be dated back in history
from the computing industry with computer operating system
free delivery as part of the hardware purchase in 1950s [3].
In recent years, open-source software has dominated an end-
to-end landscape of software from the cloud to the edge and
terminal devices. For example, OpenStack, Linux, Unix, and
Android were developed as open-source software with code
visibility to learn, use and contribute to the technology. On
the other hand, the sixth-generation network should address
and improve the open capability of network infrastructure that
should be built upon open-source software and hardware to
fully address the requirement of open-source-deﬁned wire-
less networks. Software-Deﬁned Networking (SDN) [4], and
Network Function Virtualization (NFV) [5], will serve as the
technology enablers to support the implementation of open-
source-deﬁned wireless networks and to realize RAN slicing
as well as Multi-access Edge Computing (MEC) [6] for edge
device applications with low latency requirement. This enables
resources in close proximity to the IoT devices, e.g., URLLC.
This paper envisioned providing a survey of open-source-

 
 
 
 
 
 
2

Fig. 1. Structure of the survey

deﬁned wireless networks focusing on different frameworks,
categories, and key technology enablers in this novel research
ﬁeld. We also highlighted the key role of this research ﬁeld in
cellular networks for 5G and 6G.

A. Motivation and objective of open-source-deﬁned wireless
network

The concept of open network is a term used to describe
network-based open standards and commodity hardware which
enables compatibility in both hardware and software multi-
vendor products. This provides the potential solution for the
multi-vendor choice product. With complex infrastructure,
close and proprietary interfaces which create vendor lock-
in, and a centric cycle decade of single vendor maintenance
with high CAPital EXpenditure (CAPEX) and OPerational
EXpenditure (OPEX), that require good management, proper
tools used for abstraction, and system organization. Openness
is the key solution to the problem which includes both open-
source community and standardization that encourage ﬂexibil-
ity, interoperability and promote competition.

However, most of the recent surveys and research articles
on open-source wireless networks focus on the integration of
open-source software with IoT devices, open-source testbeds,
and lacks the detail implementation of open-source frame-
works into the core network, RAN, and edge network. We
cleave apart the ideology of centric perspective and give a
broader view on the implementation of open-source-deﬁned
wireless networks to our readers. The principal idea of open-
ness and expandability, the infrastructure which supports IoT
permits to communicate with external applications and allows
coordination among the particular component [7]. This can be
analyzed from a state-of-the-art idea with the SDN concept
proposed in [10]. With the concept of an open network,
the architecture allows many operators to use and share the
same physical infrastructure. In the realization of this goal,
the technology of SDN is used and CPRI over Ethernet is
proposed in the fronthaul as the transport protocol, whereas
in the backhaul the concept of distributed security with SDN

is analyzed, which provides a low latency requirement. In
the work of Idachaba [11], proposed architecture which relies
on the collation strategies and centralized network planning
including cloud based MSC, HLR/VLR database system to
minimize operators’ cost of infrastructural deployment.

This network topology minimizes the deployment cost of a
5G network with an increase in network capacity to support
the diverse requirement use cases proposed by the 5G network.
The open network architecture relies on the collocation strat-
egy, centralized network planning, and a cloud base mobile
switching center (MSC) with a home/visitor location register
(HLR/VLR) database system. In this concept, the MSC and the
database service are provided by a third party, while the base
station controller (BSC) and base transceiver station (BTS) is
controlled by the individual operator’s own network domain.
This open network architectural topology beneﬁts different
operators in a win-win fashion, such that trafﬁc from one
mobile operator can be routed through the infrastructure of
another operator in absence of free channels to route trafﬁc of
required customers, sharing both of revenue by both operators.
An open network can be analyzed from the three functional
planes which are: the management plane, control plane, and
data plane, with an open-source project making an impact on
each plane and accelerating openness, ﬂexibility, and interop-
erability with vendor-independent networking equipment. The
control plane centralizes the logical decision-making, whereas
the data plane forwards data trafﬁc with instructions received
on how to process and forward a packet, and the management
plane deﬁnes the network policy. Moreover, this can be an-
alyzed from open-source software, open-source project, and
open API (i.e., application programmable interface).

1) Open-Source Software: Open-source software (OSS)
historic evolution dated back from ﬁrst-generation computers
in 1950 and 1960, and make a great impact in current wireless
networks, e.g., it spanned the terminal with the android and
the cloud with OpenStack. This software license enables the
modiﬁcation and distribution of source code. A very successful
open-source project has been established with this ideology,

e.g., Linux operating system. In recent years, OSS play a
crucial role in the development of IoT applications, which
differ from other non-IoT applications. For example, both
mobile and web application development is different when
compared to IoT application development. As such Corno et
al. [12] presented evidence on some open-source IoT software,
that is characterized and considered by researchers with soft-
ware engineering needs in the IoT domain. Due to challenges
and requirements, expertise is needed, because of the diverse
application features of IoT devices. The authors provided hints
on the development of IoT software by analyzing the OSS
project on GitHub repository through contributor’s behavior,
and the maturity of IoT software. RIOT [14], which is an open-
source operating system design for low-end embedded devices
in the IoT domain written from scratch with little memory
requirement. This has made RIOT with characteristic features,
such as code license and vendor-independent libraries making
it unique and similar to Linux in an open-source ecosystem.
OSS faces the problems of architectural degradation due to
the persistent evolution of the system software with time. This
implies the roles software architecture play in every system
stage development, as such Baabad et al. [15] present the
main objective and a review in the architectural degradation of
OSS with data collected from an online database (i.e., IEEE
Explorer, Scopus, Web of Science, Wiley, ACM, Springer,
ScienceDirect, and Taylor). The author’s result shows that soft-
ware evolution, lack of developer’s awareness, and frequent
changes are the prominent causes of software architectural
degradation in the OSS project. The authors’ proposed solution
shows that the metric-based strategy addresses the problem,
such as anomalies prioritization strategy,
investigating and
addressing architectural roles violation, architectural recovery
strategy, and refactoring strategy.

However, boosting the OSS community has made a large
amount of code available that allows machine learning and
deep learning technique to leverage this open-source code.
With deep learning technique, motivates researchers and soft-
ware engineers in learning and understand the vulnerability
in open-source code projects using the deep neural technique
[16]. Natella et al. [17], propose a methodology used in
analyzing faults in OSS interface components which turns
error at the components interface. This hinders experimental
analysis on where, what, and when to inject interface error. The
author’s result shows that the conventional error model does
not emulate accurately the software fault, rather require a rich
interface error to be injected via both fail-stop behavior and
data corruptions that focus on a large number of corrupted data
structure. In general, the free open-source software community
(FLOSS) contributes to the FLOSS project based on the onion
model which identiﬁed core contributors who contribute to the
major percentage of the source code, and secondary contrib-
utors/associate contribute as described in [18]. The author’s
survey identiﬁes the importance of encouraging contributors
in the ﬁeld of FLOSS projects with more than ten FLOSS
communities investigating in the FLOSS context.

Integrating open-source software, SDN/NFV, and Open-
Stack into a full real-time stack, i.e., User Equipment (UE),
and CN on an open-source hardware processor can lead to an

3

efﬁcient 5G/6G network. Mobile operators can now abstract
the lower-level functionalities with ﬂexibility in the deploy-
ment of mobile network functions, network programmable
advantage [20], network slicing, dynamic bandwidth cus-
tomization to reduce delay, and assigning an optimal resource
to a particular network demand [21]. Telecom operators have
the way of managing their wireless network
ﬁgured out
operation with software through virtualization [22], e.g., the
software can emulate and perform different requirement tasks
of specialized hardware and can be upgraded and repaired
remotely. This allows great control and ability to examine
each line of code to ﬁx errors and bugs, thereby increasing
resiliency [25].

2) Open-Source Project: As presented in table I, many
in
number of consortium projects are being carried out
progress of open-source-deﬁned wireless networks, such as an
open platform for network function virtualization (OPNFV)
introduced by the European Telecommunication Standards
Institute (ETSI) to support multiple SDN controllers, such
as OpenDayLight, Open Network Operating System (ONOS),
OpenContrail, which is based on OpenStack software with
support for both x86 and ARM compatibility. Sionna is
another open-source project based TensorFlow for link-level
simulation on GPU-accelerated open-source library, which
enable the prototyping of complex communication system
architecture with high-level API support for the integration of
neural networks. Sionna implement state-of-the-art algorithms
used for bench-marking and end-to-end performance evalua-
tion which permit effective research implementation of novel
ideas. Sionna is developed for 6G physical layer research and
support multi-user multiple input multiple output link-level
simulation setups with 5G compliant codes [23], [24]. O-RAN
software community and Telecom Infra Project (TIP) both
are rallying industry standards toward open and virtualized
mobile networks, with cloud-base mobile infrastructure service
providers can have great beneﬁts from the diverse supply
chain, ﬂexibility, deployment, and design. OpenAirInterface
(OAI) is another open-source project whose purpose is soft-
warization of mobile network functions ranging from the
network access, e.g., OAI-RAN to the core mobile network,
e.g., OAI-CN used in 4G mobile network prototyping. Mo-
saic5G [26] is a complementary project to OAI whose goal is
building 5G agile services that leverages SDN/NFV, and Multi-
access Edge Computing (MEC) technology enabling service-
based 5G vision. Open Compute Project (OCP) addresses the
current challenges of computing and storage that face existing
infrastructure technology from the surge of data trafﬁc, and
compute power requirement by creating open-source hardware
with open speciﬁcations to ensure scalability, innovation, and
energy-efﬁcient hardware, e.g., AMD open 3.0.

Open-source projects face challenges in the integration with
real SDN/NFV deployment, performance, reliability, automa-
tion, and dissemination, with mobile operator’s interest in
the open-source community, e.g., OPNFV, OpenStack, DPDK
(Data Plane Development Kit), and so on to prevent vendor
lock-in through the use of standardizing and interoperable
solutions can be identiﬁed.

• Deployment: This can be identiﬁed as one of the chal-

4

TABLE I
SUMMARY OF OPEN-SOURCE EFFORT AND REFERENCES

Networking area

Reference design focus

Analysis

open-source effort

Reference

Infrastructure

Networking

Hardware

Operating system

Access network

Radio

Acceleration of packet

Processing technique

High performance

and ﬂexibility

Used of white box

in carrier grade network

Implementation of

5G radio access network

Implementation of EPC

Core network

Wireless core network

and

5G NGC (next generation core)

DPDK, VPP

[42]

Open compute

project, O-RAN, P4

Linux, Disaggregated

network

operating system

[43], [44], [45]

[46], [47]

Openair5G, O-RAN

[185], [44]

openairCN,

M-CORD NGIC

[48], [49]

Networking

Virtualization

Process of packet

and ﬂow control

OpenDayLight, ONOS,

Open vSwitch, FD.io

[50], [51], [52], [53]

The virtualization of compute

resources that is shared

OpenStack, Kubernetes,

among different application

Docker

[54], [55], [56]

Management and control

and logical network

Providing management

and orchestration tools

Automation

used in control of network

ONAP, xRAN, O-RAN, Ansible

[57], [58], [44], [59]

component through

virtualization layer

Orchestration

The deployment of network

XOS,

policy and performance analysis

open-source MANO

[60], [61]

Modelling

deﬁning the state of network

YANG, JuJu, YAML

[62], [63], [64]

Tools for modelling and

services

The development of software

DevOps

methodology in deployment of

Analytics

workload into NFV environment

The continuous streaming

of data for service monitoring

AI

AI frame work used in network

Edge computing

open-source software for edge

Security

Cyber security

Security for virtual infrastructure

Consul, puppet,

Chef, Jinkins

Apache kafka,

Apache Spark

Automation

Computing

SHIELD

[65], [66], [67], [68]

[59], [70]

[71]

[72]

[73]

lenges faced by the project, with the recent continuous
integration (CI) and code review used in the open-source
in practice,
project which is a standard development
from different contributors’ involvement with challenges
when trying to contribute. For example, operators could
face difﬁculty in the deployment of their virtual network
function (VNF) when the open-source project solution is
on the GitHub repository.

• Performance: As part of the challenge by the open-
source project is performance, as not all specialized tasks
can be performed easily on general-purpose hardware

but required a practical knowledge of the hardware and
software for a better result. This knowledge is required by
skilled telecom operators in achieving seamless operation.
• Reliability: open-source solution project is expected to
be reliable in testing and veriﬁcation across all domains
before integrating into the existing system. Due to the
procedure, the developmental method of some software
cannot be veriﬁed, and require a method in identifying
key areas for the insertion of error handling for better
tolerance.

In the open-source project, test cases and code coverage

are important factors. The former allows developers to study
and test the code for perfect software quality, whereas the
latter provides developers with information on what part of
the source code is not
tested and can be exposed to the
source of bugs. However, implementing a large number of code
coverage proves that code coverage test cases should not be
overestimated [27]. In addition, FloWatcher-DPDK is a novel
open-source project solution based-DPDK that is high-speed
and lightweight software trafﬁc monitoring, which provides
a ﬁne-grain statistic at packet and ﬂow level. FloWatcher-
DPDK provides researchers with ﬂexibility and a state-of-the-
art open-source tool in monitoring and performance capability
at high-speed [28].

3) Open Application Programming Interface (Open API):
In demand for multi-vendor product interoperability and ﬂexi-
bility, the open-source community project delivers agile prod-
ucts with open interfaces and programmable APIs across
all
layers of the network. Open API with modularity to
the southbound interface of SDN enables a ﬁrm to believe
that the project to be delivered will be vendor-independent
and promote network ﬂexibility. Jang et al. [29] present the
signiﬁcance of open API Artiﬁcial Intelligence (AI) vision
from open-source software taking into consideration factors,
domestic companies consider in using open API. Such factors
support the development of open-source software with new
technologies which include ﬁnancial, periodical, and environ-
mental factors, with the increase in the number of practical
users. OpenAPIDocGen [30] is an open-source project for
API auto-generate documentation system, that describes the
data sources and techniques used in generating the different
sections of the document, which improve the developmental
efﬁciency to ensure the correctness of API usage. In a nutshell,
open API provides a third-party application, for innovation,
and multi-vendor product interoperability.

B. Open-Source-Deﬁned Cellular Networks for 5G and 6G

In this subsection, we discuss open-source-deﬁned cellular
networks from Core Network (CN), Radio Access Network
(RAN), and terminal. In the CN, Service-Base Architecture
(SBA) is deﬁned by 3rd Generation Partnership Project (3GPP)
to achieve ﬂexibility via modular and loosely couple archi-
tecture. The SBA enable the 5GC based modularity for cloud
native implementation [31]. Open-source-deﬁned cellular SBA
extend via the open optical transport backhaul, to open Cen-
tralize Unit (CU)/Distributed Unit (DU), and the edge cloud.
However, open-source project
that enable network slicing,
network management and orchestration in both CN and RAN
cannot be overemphasis. From the RAN architectural per-
spective, open-source software and open software project, as
well as open-source hardware deﬁned the RAN disaggregation
based 3GPP with open interfaces for multi-vendor product
interoperability for RAN real-time requirement, ﬂexibility and
virtualization. This is achieved through splitting of the higher
layer protocol stack (i.e., PDCP, SDAP, and RRC) as discuss
in Section IV, speciﬁed by 3GPP. This has enabled the
deployment of CU, DU, Radio Unit (RU) and RAN Intelligent
Controller (RIC) at the edge of the network. It is well known,

5

open-source-deﬁned cellular networks is envision for the next
generation wireless network, e.g., 6G, from the CN to the edge
RAN in addressing end-to-end services requirement.

C. Related Literature

Multiple surveys on open-source wireless networks have
been conducted recently. However, most of these surveys and
research articles focus on the RAN, Core network, open-
source software, frameworks, programmable and virtualize
networks but lacks the detail implementation of these open-
source frameworks into core, access, and edge network. We
will proceed to differentiate these surveys from our survey.
The survey in [32] provide detail implementation of various
open-source frameworks into core, access, and edge network,
but lacks detail security related articles to the readers for
open-source-deﬁned wireless networks to learned lessons from
and prevent the risk of security breach. As represented in
table II, the different area of focus of recent surveys and
research articles related to open-source wireless networks. In
this survey, we are not only focusing on open-source software
but we also focus on open-source hardware because coupling
the two will give a precise understanding of open-source-
deﬁned wireless networks to a novel researcher in this ﬁeld.

In [32] programmable networks with innovative ideas in
making the network scalable stem the SDN architecture by
abstracting the lower infrastructure. The authors provide the
recent open-source software and frameworks for 5G cellular
networks, with full end-to-end stack. Name data networking
and cloud computing technology are consider as the future
in [18]. The author’s framework consist of three
internet
main tier, i.e., the end devices comprising of IoT device,
edge computing for edge node application, cloud computing
for cloud edge application to reduced latency and backbone
in 5G networks
trafﬁc. Ultra-Low Latency (ULL) support
is survey in [33] with focus on fronthaul, backhaul, and
network management. The authors surveyed IEEE 802.1 time
sensitive networking standards and IETF deterministic net-
working standards for network layer ULL support. OpenFlow-
based architecture details is discuss in [34] describing the
challenges OpenFlow-based networks devices faced at large
scale deployment. The evolution of programmable networks
illustrate the features
and SDN is presented in [35] that
of SDN successive emergence over the past decade. The
proliferation of research achievement that enable the IEEE
standardization effort of network programmability through
OpenFlow. Security and privacy details on core and enabling
technologies are discuss in [36]. Security monitoring and
management of 5G networks and security measures as well as
the standardization of different security sectors with respect
to 5G privacy. This include network softwarization security
and physical layer security. The security functionality of 3GPP
5G networks is discuss in [37] detailing security requirement,
existing security solutions techniques in IoT devices, V2X,
and D2D communication with new technical features in 3GPP
5G networks. Achieving low latency communication in three
different domains (i.e., RAN, core network, and caching) is

6

TABLE II
SUMMARY OF IMPORTANT SURVEYS AND ARTICLES ON THE OPEN-SOURCE WIRELESS NETWORK

Relevant challenge

The deluge of software solutions

whose interoperability and

operations are unclear.

Volunteer contribution to the FLOSS

project based on the onion model

Larger scale OpenFlow infrastructure

deployment to enable the research community

to experiment with novel ideas and application testing.

Vendor monopolies of networks products

The impeding communications encountered through

infected wireless networks affect security and privacy.

The security features, security requirements

and security solution.

The capability of meeting the 5G latency requirement

from the 5G cellular network requirement.

The integration of edge computing and name data

networking latency and backbone network trafﬁc

with the processing of large user data in real-time.

Qualitative analysis of publicly available IoT

and non-IoT projects on Github.

The complementary network layer ULL supported by

IEEE 802.1 time-sensitive networking for low

end-to-end latency.

The throughput, energy efﬁciency, latency, and security

enhancement.

The limitations and unpredictable issues of RAN

virtualization

The role of an open-source project, such as

Ref.

[32]

[18]

[33]

[34]

[35]

[36]

[37]

[7]

[38]

[12]

[13]

[39]

Main Contribution

The provision of critical requirements on the limitations

of the state-of-the-art frameworks, hardware, testbeds,

and feasible direction toward open and programmable networks.

An explorative qualitative survey of 13 FLOSS communities

was investigated and framework management by the volunteers.

Performance measurement of OpenFlow networks by modeling

and experimentation

The study of the architectural transformation and its inﬂuence

on modern cloud computing.

The 5G security model, network softwarization security,

physical layer security of the core, and enabling technologies.

The network security architecture and security functionality

of 3GPP 5G networks.

The detailed technology to achieve low latency requirements

in three domains (RAN, Core, and caching).

Three main tiers of an architectural framework consist of IoT

end devices, edge node applications, and cloud node applications.

Open-source IoT project developmental effort to satisfy

software engineering needs.

The support of ULL in 5G networks takes into consideration

fronthaul, backhaul, and network management.

The analysis enhancement of major C-RAN

research focuses on the recent advancement

Provide generic concept, limitations, and

evolution of the C-RAN

OpenDayLight, OPNFV, OpenStack, M-CORD, and

[40]

The optimization of 6G network through open-source

ONAP in the 6G network

discuss in the reference [7], [12] and 5G cellular technology
capable of meeting the latency requirement, such as SDN,
NFV, caching, and mobile edge computing. H. Md Frahad,
et al. [38] surveyed the advance research on C-RAN for
5G cellular system focusing on various enhancement, and
analysis to support the 5G heterogeneous cellular network
taking into consideration related research works on throughput
enhancement, latency, interference management, security and
system cost reduction, as well as energy efﬁciency. Open
RAN evolution from cloud-RAN is presented in [39], with
a generic concepts and limitations in the evolution of C-
RAN. The standardization efforts of V-RAN and Open RAN
with potential development and research activities that are
imminent to the C-RAN and its derivatives (i.e., V-RAN and
O-RAN). The role of open-source in 6G wireless networks is
discuses in [40], detailing the challenges faced by Telecom
Service Providers (TSPs) for innovative solutions in reducing

the deployment cost. Open-source projects solutions such as
OpenDayLight, OpenStack, M-CORD, ONARP and OPNFV
are expected to play a vital role as well as dissaggregation
of the RAN with AI integration. These collective initiative
will drive the trend toward optimized solution in terms of
cost and innovation which also rely on the SBA architectural
concept based programmable plug and play open architecture
for 6G standardization. The integration of AI/ML technique
in O-RAN architecture is discussed in [41] which can serve
for optimization purposes and the use of white-box and open-
source software enable new players to take part in the market
share. The use of AI/ML in O-RAN allows business oppor-
tunities through the multi-vendor environment with improved
system design.

D. Our Contribution

In this survey, we broadly discuss how open-source soft-
ware, open-source framework, and open-source project can be
ﬁtted into the CN, RAN, and edge applications as well as
future evolution. We provide a comprehensive state-of-the-art
literature review and taxonomy on security threats, such as
control and data plane attack, IoT security attacks, CN attack,
SDN/NFV DoS/DDoS attack, and RISC-V processor attack
just to mention a few. Our contribution to the open-source-
deﬁned wireless networks in this paper is as follows:

1) Technicality of open-source-deﬁned wireless networks
security challenges and how to over come the problems,
we further detail discussions on open-source software, open-
source hardware, open-source project, and open-source frame-
work, which are ﬁtted into the CN, RAN, and edge network
as well as implementation.

2) We provide comprehensive analysis of open-source-
deﬁned wireless networks trend in the coming future evolution
to our readers and discuss the industrial security view on 5G,
unfold several research capabilities, research efforts from both
academia and industry on the impact of open-source-deﬁned
wireless networks.

3) Finally, we provide a conceptual federated SDN con-
troller based open-source-deﬁned wireless networks in Fig.
10, in which we stitched the 3 controller domain via west/east
bound interface to create federated open-source-deﬁned wire-
less networks. We also present lessons learned, open research
issues and future research directions in adopting open-source-
deﬁned wireless networks into the communication domain.

E. Organization of This Paper

In this subsection, we discuss the organization of this
paper which explore and promote the progress of open-source-
deﬁned wireless networks, via the key technology enablers and
comment on their architectural software and hardware from
the perspective of open-source-deﬁned wireless networks. In
this survey, we present the framework, key technology of
open-source-deﬁned wireless networks in Section II . We
also discuss open-source-deﬁned CN and RAN the former is
based on SBA and the latter is based on disaggregation in
Section III and IV respectively, and open-source-deﬁned MEC
in Section V . In Section VI , we present a comprehensive
review focusing on challenges, security, current and future
evolution regarding ongoing research efforts in open-source-
deﬁned wireless networks. We discuss open-source hardware
and its classiﬁcation in Section VII . Section VIII present and
demonstrate the implementation of this new paradigm. Finally,
we conclude this paper and address the future potential work
in Section XI . A summary of important acronyms that will
be frequently used is provided in table III . We present our
survey outline structure in Fig. 1.

II. FRAMEWORKS

In this section, we discuss the frameworks of open-source-
deﬁned wireless networks. We further classify its categories
into a black box, grey box, and white box based on the level
of disaggregation and openness with either closed or open

7

APIs. The ﬁrst two are well studied with lots of arguments on
the latter, therefore, we focus on the white box. This survey
reviews all the current related frameworks so far, including
our demonstrated proof-of-concept framework as shown in
Fig.2 depicting of user plane, control plane, and MANO
plane, through the disaggregation of Network Functions (NFs).
This provides the ability and capability of low latency, high
bandwidth, and real-time access to the control plane resources.
These disaggregated NFs life cycles can be managed and
orchestrated through the MANO plane. Open-source-deﬁned
wireless network framework scheme improves openness and
ﬂexibility of traditional and proprietary systems of closed and
vendor-legacy equipment.

A. Open-Source-Deﬁned Wireless Networking Frameworks

In this subsection, we discuss the proof-of-concept (POC)
frameworks which are based on key enabling technology
of SDN/NFV and open-source Software (OSS) running on
common hardware platform processors (e.g., x86 and ARM
architectures). Such OSS infrastructure provides openness
and modiﬁcation to RAN, which cannot be possible with
proprietary infrastructure. This is because proprietary cellular
networks are not easy to deal with in developing and deploying
edge applications because of their legacy interface. To solve
this problem, OSS-base RAN upon the commercial spectrum
with the ability of Development Operation (DevOps) can be
used and applied. Such OSS can allow integration, upgrading,
and modiﬁcation of the system elements, such as Evolve
Packet Core (EPC), and applications executed at the edge.
The disaggregated Network Function (NFs) life cycle can be
managed and orchestrated at the MANO plane. In the context
of management and orchestration, a lot of open-source projects
have put forward the proposed implementation of the NFV-
MANO framework at a different level. This includes open-
source MANO (OSM), Open Network Automation Platform
(ONAP), and so on. Most of these projects are using Open-
Stack and recently Kubernetes (K8s) as their VIM.

1) Proof-of-Concept Architectural Framework: This frame-
work is made up of three building blocks, and these are
VIM, Virtual Network Function (VNF) manager, and NFV
orchestration. In this, OSM manages the scaling, creation, and
deletion of VNFs by commanding the VIM on what to do
[74], and put the northbound interface for different clients with
future expectations. In addition, ONAP can also be a good
candidate in designing, creating, orchestrating, and managing
the life cycle of VNFs, as well as SDN [75]. Mobile network
operators can inject
this into their network infrastructure
to provide automation and orchestration to both application
terminal, and infrastructure. The user plane function serves as
a gateway to the public internet.

Furthermore, as shown in Fig.2 the data trafﬁc forwarding

user plane is supported through the following layers:

• The infrastructure layer consists of computing resources
such as the CPU, caching resource, e.g., memory and hard
disk, and a combination of communicating resources,
e.g., Network Interface Card (NIC) and bandwidth. These
resources can be located remotely at a geographical
location which can be distributed across many locations.

Acronym

Meaning

Acronym

Meaning

TABLE III
SUMMARY OF IMPORTANT ACRONYMS

8

ABNO

Application Base Network Operation Architecture

AMF

ASF

CAPEX

CO

CU

CLI

DU

eNB

xRAN

4G

GSM

HTTP

IETF

L2

LTE

Access Management Function

Application Selection Function

Capital Expenditure

Central Ofﬁce

Central Unit

Command Line Interface

Distribution Unit

Evolved NodeB

Extensible RAN

Fourth Generation

Global System for Mobile

hypertext transfer protocol

Internet Engineering Task Force

Layer 2

Long Term Evolution

MANO

Management and Orchestration

MCORD

Mobile Central Ofﬁce Re-architect as a Data Center

Network Function Virtualization

Network Functions

Network Repository Function

Operation Administration and Maintenance

Open Compute Project

Open Day Light

Open Network Automation Platform

Open Network Linux

Open Radio Access Network

AP

API

AI

CeNB

CORD

C-RAN

DANOS

EON

EPC

5G

gNB

HDD

IM

IoT

L3

M2M

MAC

MEC

NFVI

NIC

NGF

OCU

ODTN

ODU

ONIE

ONOS

OSS

Application Protocol

Application Programmable Interface

Artiﬁcial Intelligence

Control Plane eNB

Central Ofﬁce Re-architect as a Data Center

Cloud-RAN

Disaggregated Network Operating System

Elastic Optical Network

Evolve Packet Core

Fifth Generation

Next Generation NodeB

Hard Disk Drive

Infrastructure management

Internet of Things

Layer 3

machine to machine

Media Access Control

Mobile Edge computing

Network Function Virtualization Infrastructure

Network Interface Card

Next Generation Fronthaul Interface

Open Centralize Unit

Open Disaggregated Transport Network

Open Distributed Unit

Open Network Install Environment

Open Network Operating System

open-source Software

OpenAirInterface

OpenBSC

Open Base Station Controller

Open Base Transceiver Station

Open-Source Initiative

Packet Data Convergence Protocol

Packet Gateway User Plane

Quality of Service

Research and Development

Radio Remote Unit

Representational State Transfer

Service Base Interface

OPEX

OTT

PGW-C

POC

RF

RLC

RAN

SON

SRF

Operational Expenditure

Over The Top

Packet Gateway Control Plane

Proof-of-Concept

Radio Frequency

Radio Link Control

Radio Access Network

Self-Organizing Network

Service Registry Function

Serving Gateway Control Plane

SGW-U

Serving Gateway User Plane

Six Generation

software deﬁne network

SD-WAN

Software Deﬁne Wide Area Network

SSD

TIP

3GPP

TLV

UeNB

vEPC

VNF

VoLTE

YAML

Solid State Drive

Telecom Infrastructure Project

Third Generation Partnership Project

Type-Length-Value

User Plane eNB

Virtual Evolve Packet Core

Virtual Network Function

Voice over LTE

Yet Another Markup Language

SDI

SDS

SDR

SVM

3G

3D

UE

UPF

VIM

vRAN

YANG

Software Deﬁne Infrastructure

Software Deﬁne Storage

Software Deﬁned Radio

Support Vector Machine

Third Generation

Three-Dimensional Communication

User Equipment

User Plane Function

Virtual Infrastructure Manager

virtual RAN

Yet Another Next Generation

NFV

NFs

NRF

OAM

OCP

ODL

ONAP

ONL

O-RAN

OAI

OpenBTS

OSI

PDCP

PGW-U

QoS

R&D

RRU

REST

SBI

SGW-C

6G

SDN

9

the edge application and executed without difﬁculty.
Based on our framework, the application layer consists of
resource allocation, AI-enable trafﬁc identiﬁcation, and
network slicing. Container applications such as docker
can provide easy development, deployment, and execution
of the distributed application. Moreover, the container
does not require a full launch of the operating system
for each application to be executed. Developers can take
advantage of containers to overcome all
the vendor-
speciﬁc applications that are developed from different
operating systems and different platforms [80]. On the
other hand, the MANO plane orchestrates the VNFs and
the VIM that manages the virtualized resources.

2) O-RAN Framework: As shown in Fig.3, the O-RAN
framework is deﬁned on disaggregation of RAN with the
introduction of new open interfaces from the group alliance
(i.e., AT&T, china mobile, Deutsche telecom, NTT Docomo,
and orange), to promote ﬂexibility, speed, and innovation to
5G RAN. This has led both the O-RAN alliance and the linux
foundation to focus on software implementation that is com-
patible with the open architectural speciﬁcations to facilitate
open implementation. The main goal is to achieve a promising
solution that can be used in unifying and accelerating the
deployment and evolution of the RAN [83]. Intelligence in the
RAN is achieved by leveraging deep learning techniques from
AI to be embedded in the RAN layer architecture. Big data
and AI can pave the way for the telecom industry to optimize
their network, better user experience, capacity improvement,
and give room for more innovation, with decades of conven-
tional telecom wired experience, now shifting to the wireless
paradigm. With the recent progress of the introduction of CU
and DU in the 5G networks as well as edge computing, this
gives room for Big Data Analytic (BDA) to be introduced into
the RAN.

However, Machine Learning (ML) technique can be used
in problem-solving in wireless communication as well as in
MAC layer [84]. The BDA enhances resource orchestration,
RAN optimization, and content distribution. With seamless
database management of data collected, wireless BDA will
be able to process the data and classify it according to the
fundamental features of each particular data, incorporating
with ML technique, such as Support Vector Machine (SVM),
Self-Organizing Network (SON), and full self-driven network.
Prediction and prescription can be performed, unlike conven-
tional networks in which collection and processing of the data
are difﬁcult and a burden to the network [85]. The BDA if
applied to trafﬁc, signaling, as well as environmental data, can
assist autonomous network optimization in establishing a big
database network operation. This can contribute in analyzing
the trafﬁc which provide the fundamental for dynamic network
deployment [86].

Zahid et al. [87] focuses on the state-of-the-art application
of BDA in telecommunication with the proposal of Lamb-
daTel architecture that is completely open-source-based BDA
technologies (for more information on LamdaTel see [88]),
from the perspective of BDA architecture and infrastructure of
the telecom industry. This stems from the recent advancement
in the BDA to realize novel opportunities accredited from

Fig. 2. Proof-of-Concept framework

• Virtualization layer: The virtualization layer decouples
the tightly couple resources of the infrastructure layer
(i.e., storage, compute, and communication) from their
dedicated hardware into VNF, which is accomplished by
the aid of NFV technology. In this layer, the hypervisor
allocates decouple NFs to all Virtual Machines (VM).
This enables each VM to get its share from the phys-
ical decouple resources (i.e., CPU, memory, NIC, etc.)
which is a traditional method of virtualization. Modern
virtualization now consists of a docker engine that elim-
inates the use of hypervisor and VM. Moreover, Docker
containers are used instead of VM. The former (i.e.,
docker container) are very light, fast to boot and execute
because containers run the operating system like the host
computer, whereas VM runs a different operating system
[78]. Furthermore, our framework containers provide an
isolated environment to prevent interference with edge
applications, as well as multiple operating systems by the
host computer at the edge. Therefore, making the infras-
tructure more ﬂexible and maintainable. The framework
allows containers to be managed through management
and orchestration software that automates the creation,
deletion, upgrading, restoring, and so on.

• Control layer: The control layer provides network con-
trol to services via a service-based layer for decoupling
NFs to communicate to one another with SBI protocol
conforming to the web protocol, i.e., HyperText Transfer
Protocol (HTTP). Latency minimization, ofﬂoading traf-
ﬁc, and service deployment can be among the services
users can beneﬁt from the design framework. In addition,
trafﬁc ofﬂoading brought to the network edge helps in
optimizing and minimizing the CN’s loads with minimum
latency and delay, when utilizing the services at the edge
[79].

• Application layer: Application development at the edge
is difﬁcult due to the proprietary interfaces, as such a
container-based application can be used in developing

TABLE IV
SUMMARY OF OPEN-SOURCE PROJECT AND THEIR USE CASES

Project

Focus

Organization

VIM use

Data modelling

language use

Use case scenario

10

Linux foundation

OpenStack

TOSCA yaml

5G and VoLTE

Network management

and Orchestration

Network management

and orchestration

Infrastructure

management

ETSI

Linux foundation

Network management

and Orchestration

Cloudify

platform Ltd

ONAP

OSM

OPNFV

Cloudify

M-CORD

OpenStack,

Vmware,

OpenVIM

Kubernetes and

OpenStack

OpenStack,

Vmware,

and Docker

YANG yaml

service chaining,

5G slicing,

and MEC

YANG yaml

vEPC

YANG yaml

SD-WAN and vEPC

Service chain and

real-time resource

management

Open networking lab

OpenStack

P4

Edge cloud mobile

network

O-RAN

5G radio access network

implementation

O-RAN alliance

OpenStack, Vmware, Docker,

container

YANG yaml

RAN slicing

telecom big data, that motivate the authors to investigate the
fast-changing in BDA technology landscape applicable to the
telecom sector. The BDA telecom application is systematically
reviewed with more than thirty articles group according to
the framework, literature review, use cases, white papers, and
experimental validation. However, the experimental validation
all present PoC on the BDA technology stack with no full
BDA implementation in the telecom ecosystem.

Furthermore, the work in [89] implement AI/ML workﬂow,
deﬁned by work group 2 (WG2) AI/ML speciﬁcations with
open-source software (i.e., ONAP and Acumos) from the soft-
ware community of O-RAN. Based on the framework of open-
source software acumos, the authors generate and package ML
models to be executed in RAN Intelligent Controller (RIC),
with components of ONAP providing monitoring capability
and arbitration required to implement the workﬂow. This is
to facilitate the close monitoring of the RAN resources, au-
tomation, and optimizing the RAN with RIC through software
and ML techniques, such as reinforcement learning, federated
learning, and Graphic Processing Unit (GPU) which are hard-
ware accelerators. The success of ML enables AI with complex
problems and tasks been solved, such as image recognition ML
has attracted the attention from both academia and industry in
the implementation of ML in wireless networks.

Sun et al. [90] surveyed the recent progress and application
of ML in wireless communication according to MAC layer,
network layer, and application layer with each layer hosting
a particular task, such as resource management, network, and
mobility management, and localization respectively. However,
ML-based network management and mobility deﬁned the base
station switching control, applications clustering, user associ-
ation, and routing, with identiﬁed conditions on when to apply
ML in wireless networks and the choice of ML technique to be
adopted by the user in comparison to tradition method applied

to wireless network communication. In fact,
infrastructure
updates and open data set are needed in overcoming the
challenge of implementing ML in wireless communication.

The integration of O-RAN with MEC, network slicing,
and Self-Support-Network (SSN) to solve issues that are not
properly addressed by O-RAN is presented in [91]. Moreover,
these technologies are complementary and overlapping. The
integration provides synergy between the technologies, such
that a developing mechanism in one technology can serve as
a solution to another. In an effort to demonstrate the relaxation
of fronthaul in 5G network with O-RAN, Gomes et. al [92]
present the amount of Resource Block (RBs) required per
user to deploy the minimum amount of data rate (i.e., 100
Mb/s) per user based on the functional split. The computed
required minimum value of RBs is then compared with the
fronthaul trafﬁc demand of O-RAN with respect to the trafﬁc
of conventional CPRI which proves to optimize the trafﬁc
compared to the legacy CPRI fronthaul. Furthermore, O-RAN
disaggregation, self-driven, virtualize, and SDN has made it
the best candidate in support of IoT devices and high-speed
application that requires low latency [93]. The O-RAN frame-
work has attained the success of decoupling RAN hardware
from the functional software to implement auto-scaling and
reconﬁguration of RAN NFs, from the surging demand of data
trafﬁc. With current network densiﬁcation to provide coverage
and increase capacity, this results in cells number increase and
therefore become more difﬁcult to manage and optimize cell
neighbor relationship.

This motivated the work in [94] to investigate a novel
approach with respect to Automatic Neighbor Relationship
(ANR), which is a recognized SSN function in both man-
agement of cell neighbor relationship and optimizing the cell
neighbor relationship table, that improves successful handover
timing and minimizes call drop. The authors approach ANR

11

Fig. 3. O-RAN architectural logical view

optimization with O-RAN open interfaces (e.g., E2) and archi-
tecture to leverage non-real-time RIC in support of intelligent
models, such as ML with proactive ANR optimization to
enhance the gNodeB handover.

The NR success was achieved by splitting the higher layers
of the 3GPP stack (PDCP, SDAP, and RRC) and the lower
layers (RLC, MAC, and PHY) into two successive different
logical units i.e., centralized unit (CU) and distributed unit
(DU), as well as the radio unit (RU) from the physical
layer lower part in a standalone deployment as discuss in
Section IV . The O-RAN implement interfaces which include
the A1 [95] that connect the two RICs (i.e., non-real-time
RIC and near-real-time RIC). The A1 interface enables and
manages the ML models as discussed earlier. The O1 [96]
interface enables the interaction with the O-RUs and permits
the non-real-time RIC to perform operations which include
communication management and fault supervision. The E2 97
interface extend from the near-real-time RIC to O-CU, O-
DU, and O-eNB and coordinates the functional control and
management of the node’s interaction with the RIC. The E1
interface extends from the control to the user plane, whereas
the F1 interface implements the F1-control and user place
which operate between the O-DU and O-CU respectively. Both
E1 and F1 conform to the 3GPP speciﬁcations. Finally, the O-
cloud provides the fundamental physical infrastructure nodes
to realize the O-RAN hosting requirement of functions, such as
near-real-time RIC, O-CU-CP, O-CU-UP, and O-DU including
the software components (i.e., VMs, operating system, and so

on) [98].

3) Telecom Infra Project: Telecom Infra Project (TIP) is a
global community collaboration founded in 2016 with a vision
to transform the closed and proprietary telecom infrastructure
into the open,
to
accelerate innovation, deployment, and time-to-market. This
project envisioned addressing strategic network areas, such as
access network, transport network, and core network [99].

interoperable, and multi-vendor product

• RAN project group: The RAN TIP project focus on
the improvement of RAN infrastructure’s efﬁciency and
ﬂexibility enable through software-based designed and
open architecture for ﬂexible and agile RAN equipment,
which includes OpenRAN, vRAN fronthaul, OpenCellu-
lar, OpenRAN 5G NR Base station, and CrowdCell.
• Transport project group: This project group’s goal is to
achieve fast, scalable, and ease of conﬁguration in open
optical and packet transport, and over the extensibility
challenge in wireless backhaul. Open optical and packet
transport engineering groups focus on implementing net-
work open architecture, such as optical transponder, open
line system, and open interfaces in optical and IP net-
works.

• Open CN project: The open CN project group is de-
termined to implement an open and cloud-native core
network that run on standardized hardware and software,
with the collection of microservices which implement
various network functions that are ﬂexible and extensible.

4) Open Programmable Secure-5G (OPS-5G): Deﬁned by
Defense Advanced Research Project Agency (DARPA) to
deliver cost-effective and secure 5G/6G mobile networks with
open-source software and hardware, for fast and easy deploy-
ment with transparency from open-source technology which
serves as a primary element of OPS-5G. This provides the
ability to examine and modify the source code for the desired
purpose with easier porting and portability from devices, to
decouple the software and hardware. Addressing 5G security
is a priority from IoT devices to servers, such as side-
channel attacks introduce from virtualization and network
slicing through programmability to enable security [100].

The OPS-5G envision to address this through four technical
areas that include: (1) The acceleration of open-source soft-
ware developed with online 5G machine translation of standard
documents. Through the cooperate existence of Independent
Test and Evaluators (ITE) with technicality; (2) Implementing
security technique and security architecture, to enable security
across the entire devices; (3) Network slice isolation to prevent
security risks from untrusted infrastructure, because network
slice overlays virtual networks across different enterprises. The
use of programmable networks to shape the selection of phys-
ical components for slice isolation approaches at both system
and network-level can be accomplished by route separation to
minimize the use of untrusted resources; (4) The principal idea
and technique of programmable network by OPS-5G increase
security and innovation via the programmable element of OPS-
5G infrastructure against compromising element, not in OPS-
5G software control.

This is demonstrated in [101] which open and pro-
grammable 5G network-in-box is implemented to provide
5G private network deployment for industries, base open-
source software stack, and general-purpose hardware which
operate in 5G Non-StandAlone (NSA) integrating 4G long-
term evolution (LTE). This showcases the integration of white-
box 5G solutions based on open-source software and general-
purpose hardware.

5) Open Networking Foundation (ONF): Open Networking
Foundation is a non-proﬁtable consortium of telecom operators
contributing to the open-source community for use in their
wireless network domain. This has led to the successively
open-source project innovations, such as ONOS, CORD (e.g.,
M-CORD, E-CORD, R-CORD) for operators built, deployed,
and used the solutions in their PoCs reference design. The
ONF envision innovation through disaggregation and open-
source SDN/NFV platforms. Furthermore, ONF aims inter-
operability of interfaces with software-deﬁned standards to
enable a multi-vendor components ecosystem of plug-and-play
fashion [102]. In an effort from ONF to promote multi-vendor
products to operator base SDN and disaggregation. ONF
presented SEBA (i.e., SDN enabled broadband access) that is
fully open-source and built upon white-box, merchant silicon
ASIC, and SDN principle. Mobile operators leverage the bene-
ﬁts of virtualization and cloudiﬁcation of Passive Optical Net-
work (PON) based broadband access network deployment of
FTTB (i.e., Fiber-to-the-Building) through white-box hardware
with three control and manageable software project, VOLTHA
(i.e., Virtual Optical Line Terminal Hardware Abstraction),

12

Trellis, and SD-BNG (i.e., Software-Deﬁned Broadband Net-
work Gateway) [103].

6) Open5G Community: We discuss Open5G from our
perspective as a cellular network that serves diverse hetero-
geneous use cases, such as mobile broadband users, ultra-low
latency, and massive machine-type communication scenarios.
This diverse required communication type will depend on open
networks, open API, open-source software, open-source hard-
ware, virtualization, and disaggregation of software/hardware.
In realization of Open5G, technology enablers which include
SDN as the candidate technology to stir the data application
trafﬁc from the time-varying topology due to its openness,
well-deﬁned interfaces, and programmability integrated with
NFV technology to support network virtualization. From both
to open radio access
CN base service-based architecture,
network-based disaggregation components such as white-box
Radio Remote Unite (RRU), open CU, [104] open DU and
open API as detailed in Section IV-B.

7) Other Frameworks and Projects in Open-Source-Deﬁned

Wireless Networks:

• Magma: Magma is an OSS framework initiated by Face-
book for the purpose of deployment of cellular networks
in remote areas, and to avoid vendor lock-in to operators
via dependence on unique access type technology, such
as LTE and WiFi. Magma consists of two building block
components, which include an access gateway interfacing
the CN, a cloud-based orchestrator which secures and
monitor the network [105].

• LL-MEC: Low latency Multi-access Edge Computing
(LL-MEC) platform is open-source which enables mo-
bile network motoring, programmable, and control with
compliance to the 3GPP and ETSI speciﬁcation. LL-MEC
leverage SDN and edge computing, providing an end-to-
end service platform to the edge users. The capability
of LL-MEC support for network slicing is presented in
[106], offering different latency requirements to diverse
applications.

• COMAC: Converged Multi-Access and Core (COMAC)
is an open-source project which extends CORD, OMEC,
SEBA, and VOLTHA (Virtual OLT Hardware Abstrac-
tion) that enables the abstraction of hardware for broad-
band access with support for the multi-vendor product
via disaggregation. The main goal of COMAC is the
convergence of broadband access, CN, 5G networks,
SDN, and WiFi technology. However, COMAC leverage
the O-RAN controller as an edge for mobile cellular
access [107].

• Central Ofﬁce Re-architect-as-a-Data Center (CORD):
The open-source ONOS controller experiment resolves
the Central Ofﬁce Re-architect as a Data Center (CORD)
or Mobile Central Ofﬁce Re-architect as a Data Cen-
ter (M-CORD), which both exists as a used case of
ONOS. Mobile operators can provide end services to
consumers through CODE.
In addition, CODE pro-
vides signiﬁcant beneﬁts, such as Internet-as-a-Service
(IaaS), Subscriber-as-a-Service (SaaS), and Monitoring-
in such a
as-a-Service (MaaS). CORD is signiﬁcant
way that it provides low cost compared to traditional

operator’s data center, through OSS and white box. How-
ever, Mobile-CORD (M-CORD) can provide a solution
in the upcoming future data trafﬁc. CORD [108] is a
transformable effort of changing the legacy Central Ofﬁce
(CO) in telecommunication network close and propri-
etary hardware in re-architect CO, replace with software
is executed on switches and commodity servers.
that
This software is managed, customize, and orchestrated
to beneﬁt CO from both CAPEX and OPEX. In fact,
CORD implementation has also focused on Residential
CORD (R-CORD), M-CORD, and Enterprise-CORD (E-
CORD). In CORD structural framework, XOS takes
care of assembling the multi-tenant and is a CORD
controller. ONOS provides the hosting of the applica-
tion, OpenStack/Docker coordinates, and manages the
compute instances. Moreover, the speed at which the
mobile operator’s data center is growing post a trend
toward which the need of an operating system that is
more scalable, low in cost, able to cope with the di-
versity of workload, performance, and efﬁciency [109].
Modern mobile operators’ data center servers required
an operating system that is application-deﬁned, and this
is XOS. XOS leverage the hardware in support for
virtualization and taking out the resource management
function from the traditional kernel to particular user
space and provide application performance on bare metal.
The requirement of low latency has resulted in decentral-
izing cloud computing into edge and fog computing with
the idea of CORD. Yuang et al. [111] presented Edged
Data Center (EDC) network architecture with prototype
testbed implementation, called Intelligent-deﬁned OPtical
Tunnel Network System (OPTUNS). OPTUNS enable the
collection of packet transport through wavelength-based
optical tunnel and consist of optical switching subsystems
that facilitate packet control. However, with the targeted
goal of achieving high bandwidth and ultra-low latency,
OPTUNS reuses the massive wavelength with proactive
optical tunnel control and fault tolerance. These opti-
cal tunnels are then controlled and coordinated through
tunnel control system, with
an SDN-based intelligent
OPTUNS testbed prototype optical switching subsystem
can interconnect hundreds of servers. In addition, power
saving is achieved with OPTUNS to 82.6%, contrary to
the electrical spine-leaf networks in the data center.

B. Categories of Open-Source-Deﬁned Wireless Networking
Frameworks

In this subsection, we discuss the categories based on
their level of openness into black-box, gray-box, and white-
box networks. Whereby more emphasis is given on white-
box network which is used in the carrier-grade network, and
the profound impact it has on many segments and the open
capability it enables through the network, and resource sharing
can be identiﬁed.

1) Black-box Network with Closed Capability: The close
network capability of black-box can be described from four
perspectives: (1) Black-box network implements a closed

13

API with little or no innovation and ties an operator to a
single vendor legacy product management and operation, with
third-party application restriction. However, SDN technology
enables open interfaces with selective APIs at both data and
control plane; (2) Closed network operating system (NOS)
capability forces operator to choose and work with a close
NOS, which internal details is not visible and impossible
to modify according to the operator’s choice and demand.
This proprietary NOS is couple to it hardware which increase
OPEX of service providers, with little or no freedom when
new service upgrade required by the operator but have to
spend weeks or months from product vendor; (3) Closed
application-speciﬁc integrated circuit (ASIC) capability im-
plement a proprietary ASIC coupled with both NOS and
hardware from a single manufacturer. Each ASIC is designed
to be custom for a speciﬁc purpose (e.g., some ASIC are best
design for data centers). The close ASIC capability prevent
resource and network optimization by a mobile operator in
combining the designed custom speciﬁc ASIC suite needed
on-demand service; (4) Closed software testing capability: For
every software to function properly testing phase is important.
Software testing capability in black-box detail the working of
the software, without access to the source code. Such a phi-
losophy of close proprietary vendor solution stiﬂe innovation
and prevent new players into the game.

2) Half-open and Half-closed Gray-box Network Capabil-
ity: The gray-box offers partial decisions and choices. This
allows the mobile operator (e.g., China mobile, AT&T, Airtel,
etc.) to introduce the third-party application from custom de-
sign manufacture’s NOS speciﬁcation (e.g., Huawei, Samsung,
Nokia, etc.), and contribute to the open-source community
project suiting their demand. However, grey-box software
testing capability provides the knowledge and details of the
source code without modiﬁcation.

3) White-box Network Capability: The goal of achieving
a multi-vendor supply chain to prevent vendor lock-in and
new players to commit in the market share, white-box open
capability can be explained in three perspectives; (1) open-
source software capability support for open-source software
enables operators to develop independent source code that
suite their need, based on open-source community code which
required R&D with technical efforts and investment. For exam-
ple, Over-The-Top (OTT) vendors developed fully independent
private cloud businesses with OpenStack. Fig.4 shows the
transition trend from black-box to white-box network. Open
Network Linux (ONL) [112] is an effort developed by OCP,
SONiC [113] and FBOSS [114] are developed by Microsoft
and Facebook respectively, and used in their data centers.
A DevOps concept is implemented giving the operators full
control of their network trafﬁc, and the software that runs
on the need to be ﬂexible, intelligent, self-driven, and inter-
operability; (2) Open hardware capability provide customize
generic-off-the-shelf required bare-metal often used in SDN
data plane which provides lower CAPEX and OPEX through
disaggregation of hardware and software. This will enable
service providers to deployed infrastructure at low cost with
vendor lock-in prevention [115], and design modules from a
variety of vendors, e.g., chip vendor, hardware vendor, and

14

variation of bit rates and varying modulation schemes, that
allowed mobile operators to optimize their network capacity.
Data plane transponders can be conﬁgured to provide the
required transmission properties, such as bit rate. The Internet
Engineering Task Force (IETF) represent an open international
community of network designers, vendors, operators, and
researchers that work on the standard and technicality of
the internet and are responsible for standardization of NET-
CONF as well as the proposal of Application Base Network
Operation Architecture (ABNO). However, the management
plane required standardization of different vendor devices
in Operation Administration and Maintenance (OAM), with
ABNO designating the functional entity of OAM handler
[119]. Fig.6 shows the SDN controller, data plane connection
as well as transponder setup.

Fig. 6. Demonstration of NETCONF in SDN environment

The concept of computes disaggregation within the cen-
tralized softwarised RAN is proposed in [125], which permit
the allocation of process functions to individual server based
on the required processing capacity. Through experimental
analysis of BBU processing requirement with LTE open-
source for wireless networks and linear programming mod-
eling framework, results obtained show important beneﬁts in
energy saving contrary to the conventional method used.

III. OPEN-SOURCE-DEFINED CORE NETWORK

In this section, we discuss the Service Base Architecture
(SBA) whose goal is to provide software-deﬁned and pro-
grammable CN, with control plane functionality based on
interconnected NFs access and delivery of individual network
services through a service-based interface. Furthermore, we
discuss MultiFire-based and CN distributed management as
deﬁned by 3GPP.

A. Service Based Architecture (SBA)

In this subsection, we discuss the design technicality of
SBA that aims to support the diverse network requirement

Fig. 4. Transition state from black-box to white-box network

software vendor. Fig. 5 depicts a white-box switch with a
different component from a variety of vendors.

Fig. 5. White-box network design

As a key factor to consider, the study shows that conven-
tional data centers with traditional-based servers are cost to
maintain considering a number of parameters. For example,
life-cycle management cost makes the difference between
the traditional data center and a data center-based white-
box designed network, saving up to 40% CAPEX/OPEX
[116]. Management and control of a white-box network can
be archived through Network Conﬁguration Protocol (NET-
CONF) and Yet Another Next Generation (YANG) model with
support to SDN and automation provisioning. YANG model is
a data modeling language that describes the data sent across
the network management protocol, such as NETCONF which
operators can use to conﬁgure and model the state of data
across their wireless network.

NETCONF is a protocol used in control and manage-
ment of optical network in an SDN environment, enabling
the conﬁguration and access monitoring information of data
plane devices [117]. NETCONF leverage the YANG model
to provide control and management of network elements that
are independent of vendor. The experimental demonstration
has taken place from both academia and research centers,
in proving the capability of NETCONF and YANG model
to analyze optical transponder support for variable rate and
monitoring functionality [118]. This led to optimum usage
of optical spectrum base optical requirement, with bandwidth
problem resolved and development of Elastic Optical Network
(EON) is archived. Transponders are the core features of
EON with a variety of functions that include determining the

15

TABLE V
SUMMARY OF OPEN-SOURCE NETWORKING OPERATING SYSTEM

Type

Brief description

Focus

Stratum [127]

Cumulus [128]

Development of a reference

design for white box switches

that support next generation SDN

A Linux Debian base that run

on variety of commodity hardware

To avoid vendor lock-in

of current data plane

Contribution in to multiple project

including Open Network Install Environment

(ONIE) to open compute project

Big switch light [129]

Develop to integrate with white box hardware

Cloud networking

Open network Linux [130]

Dent Linux foundation [131]

PicOS [132]

FTOS [133]

A bare metal switch forwarding

design for commodity component

Open networking hardware

Utilization of Linux base project for

Enabling of the transition into disaggregated

standardization of networking operating system

networking component

Design to run on number of bare metal

Assist in Switching and forwarding

switch from different vendors

Develop by Force10 network and

the use with open hardware

of existing network

Networking hardware devices

OcNOS [134]

Used for data center and enterprises

Disaggregated networking

Coriant [135]

providers and carriers that are interested

Coriant which is targeted at service

at disaggregation

A community base network operating system

OpenSwitch [136]

for disaggregated switches built in compliance

with open compute project

SDN/NFV solution, data center interconnect,

open line system

Focus on full properties of the control plane with

L2, L3 network protocol features

from both operators and the vertical industry with ﬂexibility,
efﬁciency, and openness to the CN. Mobile operators leverage
the advantage of SBA that lays the future cloud infrastructure
to their cloud applications. This enables the telecom industry
to shift away from communication protocol-centric to a more
modularized form of service i.e., service-based with modules
of NFs that interact with other NFs through SBI. The SBI
interaction with NFs conform to the web service REST (REp-
resentational State Transfer) or more commonly referred to as
Restful state, is a protocol used on the internet. The inelastic
architecture of the current mobile CN which continues to
increase CAPEX and OPEX of service providers, built on
dedicated expensive hardware racks and located at a ﬁxed
geographical terminal, forces operators to ﬁnd a way out from
circle centric of single-vendor services and management [126].
Open-source-deﬁned CN provide the absolute solution that
allows ﬂexible deployment of virtual mobile network function
on general-purpose hardware, with full control and routing
policy managed in a centralized manner through the concept
of SBA, that provide an atomized service capability in 5G
network.

1) Software-Deﬁned: The concept of virtualization has
changed the perception of infrastructure with a great momen-
tum change. As a result of the consumption of virtualized
resources, a shift to the concept of Software-Deﬁned Infras-
tructure (SDI) is needed which gives the consumer the ability
to just a click away fashion. The SDI economic importance,

such that there is no CAPEX, only OPEX [137]. SDI is the
infrastructure that keeps transforming itself by leveraging het-
erogeneous compute resources, in-contrast to conventional in-
frastructure, in SDI all elements are expected to be automated
with each silo of (storage, compute, infrastructure) becoming
a fundamental component of automation [138]. However, the
mapping of virtual
infrastructure
requires an intelligence controller just as depicted in Fig. 7.

infrastructure to physical

Fig. 7. Software deﬁned infrastructure with intelligent controller

In addition, the Infrastructure Management (IM) can be a
piece of software that provide an interface to the mobile oper-

ator. The require infrastructure properties, such as scalability,
availability, and upgradability. Moreover, SDN decouple the
control plane from the data plane, in same fashion software
deﬁne storage (SDS) decouples the control and management
plane from the data plane of a storage device. The software
deﬁne environment
integrate the control and management
plane of software-deﬁne compute, storage, network and as well
as infrastructure. The computing infrastructure (i.e., compute,
storage, and network) is transforming into software-deﬁne, and
in turn programmable with agility and optimization driving
the trend. The software-deﬁne environment made possible the
customizable tools for the workloads and mapping of these
components onto the programmable infrastructure. Efﬁciency,
resiliency, and security is an additional advantage [139].

Software-deﬁne potential enables decouple resource concept
of traditional physical resources, e.g., memory and proces-
sor, which are tied to their hardware chassis through re-
source disaggregation. This takes into consideration physical
resources as an individual component. These resources are
then controlled by software. The software-deﬁned provide
ﬂexibility and modularity to cloud infrastructure, which gives
the opportunity of allocating new resources and applications
due to the physical nature of the infrastructure. Software-
deﬁne technology abstracts the infrastructure by making it
programmable [140], giving the mobile operators the ability to
upgrade part of their infrastructure component for better per-
formance. Instead of changing the entire servers because each
component has a different life-cycle, allowing the maximum
degree of resource utilization.

Analysis in [141] shows that disaggregated servers used
in telecom networks minimize up to 50% of the edge node
network bottleneck compared to the traditional servers. This
allows the segregation of traditional server resources into a
pool of resources, proving high bandwidth and low latency
networks. SDI can be used in designing decentralized big
data governance activities [142], in which consumer applica-
tions producing data, such data can be decoupled from its
application by making it independent of the application with
implementation of rules and policies regards to applications
producing data. In this fashion, data owners have full authority
to decide where their data can be stored and how it can
be shared. This paradigm decentralizes data through SDI in
establishing and generating new inventions by linking data as
well as best adaptation to an open environment.

is
Based on SDI, [143] proposed a new paradigm that
SDS. Traditional data center faces challenges in implementing
Quality of Service (QoS). SDS provides the solution, with an
increase in the number of data center storage. The conventional
method of data storage is unable to deal with the large amount
of data, methods of approaches like virtualization of data
storage and algorithms for placement of data can be used for
a ﬁxed network topology of a data center. However, SDS can
provide a solution, with requests of services that require a
minimum amount of response time from data storage. The
SDS abstract the storage control and implement a centralized
control
to the software layer. Infrastructure transformation
is required by current applications and services in meeting
customer requirements, as such experimental analyses are

16

performed to show the advantage of SDS. Results of the
experiment show that SDS and data placement algorithm
achieve great performance compared to the physical storage,
that is solid-state drive (SSD) and hard disk drive (HDD).
The software-deﬁnes enable abstraction of network services,
control, and management functionality [137]. This approach
allows mobile operators to select a range of services that can
include fast deployment of new and enhance services, creation
of a customizable network, and enhanced operation which can
be extended to another software-deﬁne, such as cloud, storage
devices, and many others, creating services than conventional
or legacy network.

This led to the proposal of a Universal Operating System
(UOS) for SDI in [144], that will be a distributed operating
system. The UOS will span between terminals (e.g., handset,
tablet, smart-things, drones, etc.) through network elements,
then to cloud/IT resources. This will have a great impact on the
techno-economic of telecommunication and cloud/IT ecosys-
tems. SDI will pave the way in executing any network function
and services that are developed and deployed as a software
application. This creates room for new operators to take part
in the game, due to low CAPEX and OPEX, as well as a
reduction in power consumption, which is optimized with the
SDI paradigm. Hence, Fig. 8 shows analyze factors economic
importance of open-source-deﬁned wireless networks.

Fig. 8. Analyze economic factor of open-source deﬁned wireless network

Furthermore, Hu et al. [145] propose Software-Deﬁned
Devices (SDD) from the operational mechanism of cyber-
physical mapping perspective, and based on device-as-a-
service an open IoT system architecture that decouples appli-
cation at the upper-level from physical devices through SDD
mechanism. With a designed logically centralized controller
that manages the physical devices and the ﬂexible device dis-
covery, and device control interface with application request.
In order to solve the problem of IoT interconnection and
intercommunication of heterogeneous devices with improve-
ment in utilization and efﬁciency in device resources, SDD-
based open IoT system architecture has been implemented

by the authors with modular customization of underlying IoT
resource devices, such as uniﬁed management and scheduling,
reusing, sharing and recombining of the devices mentioned
above.

Software-Deﬁne Edge Computing (SDEC) is proposed by
[146] from the perspective of cyber-physical mapping with the
aim of obtaining a high automatic and intelligent edge comput-
ing system. Through software-deﬁned, SDEC enables ﬂexible
management with intelligent coordination amidst the various
edge hardware resources and services. However, SDEC-based
open IoT architecture decouples the topmost IoT application
from the underlying physical edge resources and implement a
dynamic re-conﬁgurable smart edge device. With the SDEC
platform, detailed processes of the underlying physical devices
can enable reuse, sharing, recombination, and reconﬁguration
of edge resources and services in improving the capacity of
edge devices.

2) Programmable: The need of making the network more
scalable, programmable [32] robust with innovation of ideas
and protocols result in the SDN concept. SDN architecture
enables the network to become programmable through the
interfaces and protocols mentioned below. It decouples the
control plane from the data plane and centralized the controller
by abstracting the lower-level infrastructure with a global view
of the network. Initially, the telecom industry does not imple-
ment or embrace this concept. However, high CAPEX/OPEX
and predicted data trafﬁc from billions of devices connected
to the cellular network, forces mobile operators in seeking a
solution, and keep their customer’s demands with better user
experience and annual revenue. The programmability of SDN
is discussed below from the perspective of northbound and
southbound interfaces, and open API.

The evolution of the programmable open network is pre-
sented in the work of Anerousis et. al [34]. The authors
reviewed the origin of open and programmable networks and
SDN, with numerous works on programmable networks that
illustrate the emergence of successive SDN features from the
concept of telephone network control in 1990. This led the
way to the current effort of IEEE’s standardization of network
programmability with OpenFlow which inﬂuence the modern
architectural transformation of next-generation networks.

• open-source on Northbound Interface (NI): This interface
provides a high-level interaction of elements to implement
network applications and services by programming the
SDN controller (e.g., ONOS, ODL, etc.) via an open
API. In this, REST API is used with HTTP in describing
the Open Cloud Compute Interface (OCCI) used by
application developers and offers interaction to the north-
bound interface that bridges the control plane and the
management plane. REST design architecture provides
interoperability, ﬂexibility, and scalability to the north-
bound interface. The fact that northbound interface lacks
standardization compared to the southbound interface, no
single API that vendors or application developers can use.
Though most controllers and application developers used
REST API [147]. REST API interacts with a core com-
ponent that is responsible for distributing and positioning
infrastructure through HTTP protocol. The combination

17

of these components provides scalability in customizing
the complicated IoT infrastructure. In fact, REST API has
become ubiquitous in most distributed resources includ-
ing the northbound interface due to dynamic upgrades
from time to time, to prevent the client from crumbling.
This can be achieved through the REST chart [148],
which is a Petri-net service of REST framework that can
be used in designing an extensible REST API to withstand
any changes to the northbound interface. To achieved fast
navigation with REST chart through a large number of
REST APIs with reduced hypertext navigation overhead
at
the client-side, backtracking and cache mechanism
can be applied to reduce the client-side overhead with
the sustainable requirement of extensibility and ﬂexibility
[149].

• open-source on Southbound Interface (SI): On this inter-
face, the lower-level protocols (e.g., controller commu-
nicate with other controllers) and the forwarding devices
(i.e., switches) are programmed to communicate through
a standardized and open protocol. The southbound inter-
face solved the problem and challenges faced by hetero-
geneous vendor-proprietary network devices, by proving
a common API used by different vendors. OpenFlow
[151] is the famous southbound interface protocol used
in the SDN environment for communication between
the controller and the infrastructure layer or data plane
layer. OpenFlow [152] evolve from version 1.0.0 through
version 1.1.0, 1.2.0, 1.3.0, 1.4.0, and 1.5.1 respectively.
Version 1.0.0 consist of a header, counters, and actions
[153], and do not have much ﬂexibility. As a result,
switches that use this version cannot perform multiple op-
erations at the time of packet forwarding because of one
ﬂow table and mixed matched ﬁeld. However, to solve
this problem OpenFlow version 1.1.0 [152] introduce
multiple tables through the use of pipeline processing.
OpenFlow switch is classiﬁed into two categories, the
OpenFlow only and the hybrid OpenFlow. The former
process all
in the OpenFlow pipeline and
cannot be further processed otherwise. The latter can
support both OpenFlow processing and Ethernet switch
operation (e.g., conventional L2 switch, L3 router, etc.).
This simply provides a trafﬁc mechanism to route pack-
ets either through the OpenFlow pipeline or the usual
pipeline. OpenFlow version 1.2.0 [154] ﬂow match ﬁeld,
used OpenFlow Extensible Match (OXM) in describing
the match ﬁeld which is a Type-Length-Value (TLV)
format and OXM TLV range from 5 to 259 bytes. Open-
Flow 1.2.0 introduces multiple controllers that improve
reliability in case of failure of one controller. In this
case, the switch will operate the OpenFlow routine if
one controller connection fails. This multiple controller
mechanism deals with only controller fail-over and load
balancing. In addition, OpenFlow version 1.3.0 introduces
the meter table consisting of meter entries, which enable
the implementation of QoS and also provide the table
miss entry. In this way, a packet that is unmatched by
other ﬂow entries is sent back to the controller. OpenFlow
version 1.4.0 introduce a synchronization table, with

the packet

two ﬂow table that can simultaneously be synchronized,
resulting in automatic update by the switch to reﬂect the
ﬂow table which is synchronized. A ﬂow table can be
synchronized bidirectional or unidirectional. Bidirectional
synchronization reﬂects changes made by the controller
to the source switch table. For any synchronized table,
a particular table property can describe the source ﬂow
table from which it synchronizes. Flag extension was
introduced in OpenFlow version 1.5.0 on the ﬂow table.
The ﬂag extension alters the pattern in which ﬂow entries
are managed. For example, OFPP SEND FLOW REM,
this ﬂag removes the message from that particular ﬂow
entry. Fig. 9 represent the diagrammatic structure of the
OpenFlow table, which gives the details speciﬁcations
on how to transform or migrate the control logic of a
switch into the controller as well as deﬁning the protocol
of communication between the switch and the controller
[33].

Fig. 9. Structure of OpenFlow table

It is a software-based controller that manages the forwarding
piece of information in one or more switches. While the
hardware takes control of forwarding the trafﬁc based on
rules from the controller. In the ﬁeld of innovation, Open-
Flow architecture provides the capability for researchers to
experiment, test, and initiate new ideas or applications. The
capabilities include dynamic update forwarding rules by the
controller, centralized control and trafﬁc analysis [155]. This
means that if the control plane is managed by a hardware
device, experiments and research will be chaotic due to the
ﬁrmware modiﬁcation difﬁculty. Application base OpenFlow
proposed by [156] make it easier for network conﬁguration,
simplicity of network management, the addition of security
features with respect to virtualize network, and deployment
of mobile system. In a nutshell, OpenFlow gives the details
speciﬁcations on how to transform or migrate the control logic
of a switch into the controller as well as deﬁning the protocol
of communication between the switch and the controller [157].
In table VI, we present a summary of OpenFlow enable
devices.

18

B. MultiFire-Based

The increase in voice and data trafﬁc has led mobile
operators to consider the deployment of LTE-like services
in the unlicensed spectrum to fulﬁll consumer demand. This
deployment of standalone LTE radio technology in the 5 GHZ
unlicensed spectrum can further enable business opportunities,
through leveraging the LTE-like features. MultiFire enables
the deployment of standalone LTE radio technology, based
on two candidate technologies proposed by 3GPP [158] (i.e.,
LTE enhances licensed assisted access and LTE-unlicensed).
The coexistence of other technology, such as WiFi which used
the technique of Listen Before Talk (LBT) is similar to Carrier
Sense Multiple Access with Collision Avoidance (CSMA/CA)
in the WiFi domain. This is an LBT-based MAC protocol
that enables LTE-unlicensed to access the channel when it is
idle, following a clear assessment called the backoff period.
However, alternative channel medium access in time-division
multiplexing (TDM) based MAC protocol called duty-cycle
LTE. MultiFire extends the LTE protocol stack to implement
ﬂexible resource allocation and control of power consump-
tion. Precisely, MultiFire targeted goal is to enhance Mobile
BroadBand (eMBB) as well as IoT applications capable of
supporting largely connected devices [159]. This extends the
operation of LTE in licensed spectrum to cover the unlicensed
spectrum.

In an effort to demonstrate the coexistence harmony be-
tween LTE and WiFi in the unlicensed band, [160] propose
an Inter-Cell Interference Coordination (ICIC) based spec-
trum mechanism extending into an auction framework for
efﬁcient spectrum sharing in LTE-unlicensed band. Through
Carrier Sensing Adaptive Transmission (CSAT) that led to
LBT enhanced CSAT scheme. Furthermore, the work in [161]
studies the energy-based CSAT in LTE-unlicensed (LTE-U).
With the LTE-U protocol base station, allowed to use a free
channel for 20ms and turn off its transmission for 1ms, this
prevents another access point from using the same channel
medium since the interval is low. This motivated the work in
[161] to propose an LTE-U base station transmission scheme,
not exceeding the maximum transmission rate of 20ms in a
dense deployment of LTE-U and WiFi, even if the channel
medium is empty for another wireless access point (e.g., WiFi)
coexistence in the same channel.

C. Distributed Management

In this subsection, we discuss the open CN distributed
management which enabled the integration of different SDN
controllers into the CN with a global view of the network, that
realizes open network decouple. In a conventional network, the
lack of a centralized controller results in not providing a wide
network management abstraction. This resulted in each novice
network function (e.g., routing) producing its own particular
state distribution, failure recovery mechanism, and element
discovery. However, the absence of not having a unique control
plane platform prevents further development of reliability and
ﬂexibility of the network control plane. To solve this problem,
a distributed controller platform that is open, and vendor-
neutral platform to network control plane can be used as the

Classiﬁcation

Product name

Product type

Designer

Description

TABLE VI
OPENFLOW ENABLE DEVICES

Pica8 3920

Ethernet switch

Pica8

Hardware

CX600

Router

Huawei

RackSwitch

G8264

Switch

Cisco catalyst 2960X/XR

Switch

IBM

Cisco

V580

Switch

Centec network

Open vSwitch

Switch

Open community

Software

Indigo vSwitch

Switch

Linux

Built for open switch and

perfect for virtualize data center

Provide solution for carrier-class

metropolitan area network (MAN)

Switch for data center

that can support OpenFlow

Support for OpenFlow controller on catalyst

2960X/XR

Ethernet silicon CTC8096

leveraging OVS

Design to enable massive network

automation through programming.

open-source OpenFlow that uses

Linux kernel forwarding module

Network virtualization incorporate

open SDN architecture

Big switch

EX4600

Big vSwitch

Big switch network

Switch

Juniper networks

Support OpenFlow version 1.0.0 and 1.3.1

[168]

19

Ref.

[162]

[163]

[164]

[165]

[163]

[166]

[167]

[129]

distributed system. This control plane operates with a global
view of the network and provides a unique API for control
plane execution [169]. The result in decoupling of the control
plane from the forwarding plane (i.e., user plane), resulted
in a distributed system. Here the control plane handles the
state distribution by taking information from the switch and
distributing the control state through organizing the state in
the server’s platform. An example of this distributed open-
source controller is the ONOS, which is distributed, logically
centralized, with a global view of network, scalability, and
fault tolerance. This also includes trafﬁc engineering as well
as scheduling.

To cope with the trend of evolving technology, the study in
[170] introduces the concept of 5G with ONOS. Taking into
consideration SDN/NFV’s potential role in the telecommuni-
cation domain. SDN and virtualization are good candidates in
5G, as wireless and mobile networks continue to be in signiﬁ-
cant demand. In the work of Sambo [171] delegated restoration
of SDN disaggregated network controller is presented, which
implemented a hybrid centralized distributed fashion. The au-
thor’s motivation to innovate the novice paradigm result from
the YANG data model that describes the vendor neutrality
of network devices (i.e., switches and transponders) lacks the
descriptive function. Whereby the control plane centralization
can be affected in the process of scalability, such as link failure
due to multiple restoration requests occurring at the same time.
However, the SDN controller computes centrally the backup
light path prior to a failure through communication with the
devices (i.e., switches and transponders), via NETCONF in the
case of link failure. Result analysis through simulation shows
delegated restoration is able to reduce restoration time of a
fully centralized approach to achieved operation, administra-
tion, and maintenance of next-generation networks.

The scalability of SDN networks on a single controller
cannot meet the required network trafﬁc, rather than having
a centralized logical but physically distributed controller ar-
chitecture which enhances the reliability and scalability of the
controllers. This ideology however consists of controller load
imbalance that the authors in [172] propose distribution deci-
sion mechanism (DDM), which is based on switch migration
within large subdomain SDN network to address this problem.
Through the network information distributed migration, the
decision is created based on the controller load situation.
Based on switch migration decision targeted controller is
selected in probability order and integrated three network
properties which include, switch migration, data collection,
and controller state synchronization. This proposed mechanism
achieved controller load balancing with good performance.

Almadani et. al [173] propose Distributed SDN control
plane Framework (DSF) for heterogeneous west/east interface.
These distributed SDN controllers use synchronization topolo-
gies with standard data-centric Real-Time Publish/Subscribe
(RTPS) model, referred to as Data Distributed Service (DDS).
The author’s work was motivated by distributed controllers
SDN west/east interface lacking communication standard for
heterogenous, multi-domain network ecosystem. DSF frame-
work control plane elements are arranged in a fashionable
manner of vertical (i.e., child/parent) and horizontal (i.e., peer-
to-peer), manner with Link Update Message Protocol (LUMP),
to synchronize the topologies implemented by routing data
the in-
plane packets across multiple domains. However,
crease in the number of controllers’ topology synchronization
arises in real-time with the controller optimization platform
selected. Togou et. al [174] propose HiDCoP, which is a
high-performance distributed path computation in a large-scale
SDN control plane with a hierarchical design to distribute the

path computational load between the controllers, to minimize
the transmission overhead. With 3-tiers architectural network
domain, which is further subdivided into areas coordinated
and maintained via topology information from controllers
to accelerate the computational process, through parallelism
and load balancing. HiDCoP simulation result proves the
out performance that exists in path computation, path setup
latency, and end-to-end delay.

is
However, assessing the maturity of SDN controller
an utmost important factor to operators before deployment
into the operational environment due to bugs in SDN soft-
ware controllers, resulting from heterogeneous complexity of
the network and forwarding devices the controller support.
Vizarreta et al [175] focus on Software Reliability Growth
Models (SRGM), which model the stochastic nature of bugs
manifestation in process of open-source SDN controllers.
This enables network operators to determine the maturity of
controller software to be deployed into the operational envi-
ronment, based on network application requirements. SRGM
can predict the stochastic analysis of bugs manifestation and
correction procedure with real data on software failure in the
SDN controller. Therefore, predicting the controller reliability.
Hence,
this provides the guide to network operators and
software developers in tackling operations that are important
in decision making, such as the prediction of time in releasing
and deploying a matured SDN controller.

In the context of open-source-deﬁned wireless networks,
ideology of distributed
Fig. 10 represents the conceptual
SDN controllers but logically centralizes at the control plane.
The NFVI consist of an abstracted logical environment that
serves as the building block (e.g., compute, storage, and
network) resources. In addition, NFV in the context of network
slicing provides the potential framework that implements the
service-chaining of VNFs. Management and orchestration (i.e.,
MANO plane) control, orchestrate, manage, and coordinate
VNFs and NFVI. With the network resource orchestration
through NFV Orchestration (i.e., NFVO), the VIM validates
and authorizes the NFVI resource requested from the VNF
manager. Furthermore, in a service chain of multiple VNFs
Element Management System (EMS) orchestrate and manage
VNFs life-cycle through the VNF manager.

The choice of controller placement is an important role in
the network’s latency and resiliency. As such the controller
placement problem can decide the number of controllers
required in the network. The work in [176] surveyed the
controller placement problem in SDN network, based clas-
sical formulation that support system model and associated
metrics with objective and methodology. Controller placement
problem impact on the novice application domain, such as
mobile network, named data network, and wireless mesh
network cannot be ignored due to the energy efﬁciency in
load balancing.

IV. OPEN-SOURCE-DEFINED RADIO ACCESS NETWORK

In this section, we discuss open-source-deﬁned RAN which
is the key to our survey-based disaggregation of the RAN
hardware and functional components. A lot of effort has been

20

made in RAN virtualization through open-source software
tools to substitute the legacy telecommunication protocol, and
conventional proprietary complex system [177]. For example,
in 2010, the OpenBTS (Open Base Transceiver Station) [178]
which is open-source software for GSM (Global System for
Mobile) was presented. OpenBTS provide the opportunity to
develop more than one carrier signal on the same physical
radio, in order to increase the network capacity. In addition,
Software-Deﬁned Radio (SDR) is the game-changer that en-
ables OpenBTS to become possible through the implementa-
tion of a Radio Frequency (RF) between 65 MHz to 4 GHz,
attached to a host application, such as FM Radio. SDR made
it possible for the implementation of open-source RAN as
software on a commodity hardware processor. For example,
open-source full-stack IEEE 802.11a/g/n SDR implementation
is used to demonstrate OpenWiFi, based on System-on-Chip
(SoC) and include Field Programmable Gate Arrays (FPGA)
and ARM processor. With the implementation of drivers
embedded in Linux OS which run on ARM processor. These
drivers are used in instantiating the APIs deﬁned by Linux
OS, which allows researchers to study and modify OpenWiFi
for its modular design.

However, FPGA low latency connection with RF front-end
promotes the implementation of the physical layer (PHY), and
lower Media Access Control (Low MAC) in FPGA [179]. To
achieve low latency at both PHY and MAC, a new SDR “Tick”
is proposed which is modular in design and programmable,
validated by the authors through extensive evaluation and
prototyping of 108.11ac SISO/MIMO and 802.11a/g full-
duplex [180]. Bloessl et al. [181] present both simulation
and experimentation framework of IEEE 802.11 p based SDR
Orthogonal Frequency Division Multiplexing (OFDM) with
extensive validation test for interoperability, ﬁeld trial, and im-
portant beneﬁts obtained through SDR-based transceiver. The
transceiver’s transparency open and programmable hardware
and software, implement and provide detail access to all data
below, including the physical layer for better understanding
of the system. This provides seamless switching between
experimentation and simulation that bridge the gap between
theory and practice and serve as a tool for further study of
IEEE 802.11 p in both simulation-based and ﬁeld operational
tests for novel physical layer solution. Considering the fact
that both IEEE 802.11 a/g and IEEE 802.11 p share similarity
in physical layer-based OFDM, with IEEE 802.11 p having
double-timing.

OpenBSC (Open Base Station Controller) open-source soft-
ware was launched to provide a base for experimentation with
GSM in academia as well as research centers [182]. SrsLTE
[183] is an open-source platform for LTE experimentation with
the open-source library for the physical layer of LTE release 8,
that has maximum modularity of code reused which is written
in ANSI C. SrsLTE is implemented with Single Instruction
Multiple Data (SIMD) operation, and provide the interface
for Universal Hardware Driver (UHD) enabling the support
for Ettus USRP (Universal Software Radio Platform) devices.
In fact, the goal of the library is to provide the necessary tools
for the implementation of LTE-based applications, e.g., eNB,
UE, and so on.

21

Fig. 10. Conceptual ideology of federated SDN controllers based open-source-deﬁned wireless networks

OpenAirInterface (OAI) is a 4G/LTE open-source soft-
ware [184]. Inline recently with OAI 5G that can implement
(eNB, UE, CN) from a general-purpose hardware, integrating
SDN/NFV and OpenStack to established efﬁciency in RAN.
OAI Open-source project main goal purpose is softwarization
of mobile network functions implementation of 3GPP tech-
nology, ranging from network access, e.g. OAI-RAN to core
mobile network, i.e., OAI-CN used in 4G mobile network
prototyping. This enable implementation on general purpose
hardware, e.g., x86 architecture. OAI open-source project
offers software implementation of all components, such as
UE, eNodeB as mention above via software radio front end
connected to the host computer which enables innovation in
the mobile network communication ﬁeld [185]. OAI 5G NR
implementation is discuss in [186]. The authors implemented
the basic functions required to support downlink functionality
at both gNB and UE to realize 5G NR in real-time on
software deﬁned radio platform and compliant inter-operable
with other commercial equipment. The joint effort R. -G.
Cheng et al. [187] demonstrate the design and implementation
of open-source narrow band IoT based OAI to enable services
in licensed spectrum, which enable an operator to replace
GSM carrier in stand-alone mode by adopting the orthogonal
frequency division multiple access technology. Based on OAI,

new network functional application platform interface (NFAPI)
is deﬁned to support virtualized MAC/PHY split for 5G.

SrsLTE open-source platform provides LTE experimentation
designed and code reused modularity compliant with LTE
release 8. In [183] present the SrsLTE library as well as
SrsUE which extends and implements LTE transmission in
unlicensed bands with the coexistence of WiFi. In release 10,
SrsLTE enables the implementation of LTE eNB, UE, and
EPC that support compatibility with Linux. Several research
effort has implemented srsLTE in various research areas. Inter-
slice RAN controller-based srsLTE is implemented in [188]
to effectively manage radio resources for different slices.
LTE control plane security attack is demonstrated in [189] to
discover, design, and implement vulnerabilities resulting from
carriers and device vendors.

However, the initial motivation to shift focus on RAN dis-
aggregation is to have ultra-low latency and high radio speed,
with a combination of the massive amount of connectivity in
5G, which the fronthaul interface of C-RAN cannot withstand.
This resulted in industrial forum, such as O-RAN and TIP to
focus on decoupling the RAN control plane from the user
plane, resulting in the modularity of the RAN into a stack
that can run on commodity hardware with both open north-
southbound interfaces. The concept of network slicing bridges

the disaggregated RAN component closer to softwarization
and cloudiﬁcation of decoupled NFs to realize a ﬂexible virtual
RAN (vRAN). With the ongoing evolution of open-source
taking part in current and future technology. Network cloudiﬁ-
cation [190] comes into play role. This consists of SDN/NFV,
Mobile Edge Computing (MEC), as well as centralizing and
virtualization of the network in the mobile operator’s data cen-
ter. This makes it possible for operators to provide Network-
as-a-Service (NaaS) at a lower amount of CAPEX and OPEX,
resulting in simpliﬁcation of networking devices and providing
easier orchestration of services. To showcase MEC service
placement in disaggregated heterogeneous C-RAN with both
cellular and WiFi infrastructure to provide access fronthaul
network resources in multi-home-used UEs is demonstrated
in [6]. Lower latency is achieved through the selection of a
possible wireless network at the MEC side.

A. O-RAN Approach
In this subsection,

the splitting of the RAN hardware,
software, and functional components from their tightly cou-
ple dedicated hardware is discussed. The decouple software
with open speciﬁcations running on the commodity hardware
permits operators to invent their applications faster with reduce
cost of operation.

1) Splitting of Functional Component: In the 5G transport
system, transport options require a rethink solution of the
functional split for RAN. However, in 5G the baseband unit
is then split into CU, DU, and RRU as deﬁned by WG8 and
WG6 respectively. The redesign facilitate RAN virtualization
in addition to reducing the fronthaul capacity as well as
latency requirement. The CU is part of the next generation
NodeB (gNB), which handles user data, radio access network
sharing, session management, mobility control, etc. Moreover,
CU coordinates the controls of DUs over a fronthaul interface.
The DU is another sub-part of the gNB as part of the 3GPP
functional split. This function split improves the RAN ﬂexibil-
ity and minimizes the infrastructural deployment cost without
affecting the user QoS. In view of the above split, Matoussi et
al. [191] propose a novel functional split orchestration scheme
based on minimization of RAN deployment cost “AgileRAN”
that implements cloud capability of on-demand deployment of
RAN resources.

AgileRAN virtualizes and splits the baseband processing
chain through a heuristic-based approach. This takes into
consideration the processing network function requirement,
with the capacity of cloud infrastructure. In addition to this
novel functional split, both processing and bandwidth resource
usage is optimized at the same time minimizing the energy
consumption, through 5G experimental prototyping on the OAI
platform good performance results in total deployment cost
and resolution time are obtained. The disaggregation of the
functional component has opened a research ground for both
academia and industries. This functional split is taken LTE
protocol into consideration with eight possible options for the
split by 3GPP. In this split, we will map each split with the
appropriate O-RAN WG approach for more clarity.

• Option 1 / WG 8 (RRC / PDCP split): This split user
plane (UP) is located at the DU giving the user data

22

beneﬁts proximity to the transmission point which enables
caching. However, in a CU-pool connected to many cells
other research work has shown that it is not of beneﬁcial
importance due to fact that it does not support several
functions to implement inter-cell coordination [192].
• Option 2 / WG 6 (PDCP/ RLC split): Both PDCP and
RLC functions are centralized whereas another function
resides locally in the DU. Within this split, the trafﬁc
is subdivided into multiple ﬂows that provide multiple
directions to various access nodes which support multi-
connectivity.

• Option 3 / WG 5 & WG 3 (High RLC/Low RLC split,
intra RLC split:) This split consists of the high RLC
and low RLC with low RLC consisting of the segmental
function and high RLC consist of automatic repeat re-
quest (ARQ). Both the user plane (UP) and PDCP RLC
asynchronous processing occur at the CU, with remaining
UP function residing in the DU. This WGS implement the
open interfaces, which include F1, W1, E1, and E2, as
well as RIC near-Real Time respectively.

• Option 4 / WG 6 (RLC MAC split): In this optional
functional split, the RLC in the downlink (DL) receives
the protocol data unit (PDU) and channel MAC service
data unit in the uplink (UP). This split when virtualized
can enhance the beneﬁts of resource sharing for the
utilization of both storage and processing capability.
• Option 8 / WG 7 (PHY-RF split): In this functional split,
both the RF and up-converter are left at the DU which as
a result support different radio access technology (RAT),
whereas the rest of the functions are centralize [193].
However, the use case scenario and RIC non-Real Time-
base A1 open interface are focused on WG 1 and WG 2
respectively.

B. Open5G Approach

In this subsection, we discuss from the Open5G open-source
community perspective open RAN, key enabling technology,
orchestration, and network slicing of decoupling software.
However, the open wireless network-based 3GPP disaggrega-
tion of RAN into different components and open interfaces,
such as CU/DU, and open-source software. In this overview,
the CU implements the RAN-NFVI and extends the concept
of SDN. Precisely the CU-control plane and CU-user plane
with RRC/PDCP-control and PDCP-user plane CU-protocol
stack, open interfaces, and RIC for intelligent decision making.
On the other hand, Open5G open-source community approach
envisioned DU from the physical high layer (i.e., RLC/MAC)
and x86/x64 architectural general-purpose platform interfacing
both F1 to the CU and NFGI-1 to the physical lower layer of
white-box RRU [104].

In addition,

the concept of network slicing realizes the
disaggregated RAN component functions into softwarization
and cloudiﬁcation of VNF. In this context, network slicing
integrates or uniﬁed the virtual resources that include VM
with the instantiation of VNFs which are linked together via
a virtual network (e.g., virtual Local Area Network or Virtual
Private Network) to provide a service of multi-VNFs called

service chain [199]. This can be achieved with the enabling
technology of network slicing, such as SDN/NFV, hypervisor,
cloud & edge computing, container and VM.

The proof-of-concept framework leverage an end-to-end
OSS base mobile network as discussed in Section II-A,
integrate prioritization algorithm technique to achieve higher
throughput and lower delay for time-sensitive and important
services, such as connected cars which can enable RAN
slicing of end-to-end network. However, open-source control
management and orchestration of NFs in SDN/NFV enable
networks through programming, with third-party application
access to the northbound interface of SDN in the realization
of Optimization-as-a-Service (OaaS) presented by [5]. In ad-
dition, major OSS exits in the network resource allocation
process and heuristic technique in optimization with solvers
(which are important libraries used in ﬁguring out numerical
solutions to particular structured optimization problems in
a structure linear or nonlinear formulations) in SDN/NFV
environment.

The OpenStack [204] controls a pool of resources, such as
compute, storage, and networking resources in the data center,
managed from the dashboard or from the OpenStack API.
This software is popular among enterprises and open-source
technologies which makes it a perfect ideal for heterogeneous
network infrastructure. However, Nova [205] project provide
an open API service implementation, massively scalable self-
service, and access to compute resources including VMs, bare
metal, and containers. open-source NFV MANO [206] with
ONAP [207], enable automation, management, and reconﬁg-
uration of VNFs deployed into the cloud. ONAP provides a
detailed comprehensive platform for orchestration and automa-
tion with physical and virtual network functions, that allows
cloud providers, networks, developers to develop new services
and sustain the complete life cycle management. With the
open standard, ONAP can fasten the development of a vibrant
ecosystem by unifying resources. In table VII, we represent
the difference in open-source between pre-SDN/NFV and post-
SDN/NFV.

C. Open Centralize Unit (CU) and Distributed Unit (DU)

In this subsection, we focus on the open CU/DU. The
open interface fronthaul Next Generation Fronthaul Interface
(NGFI) between the DU and RRU of the RAN, permits
smaller vendors and operators to take part and introduce
services to their customers. Open interfaces allow interoper-
ability between multi-vendor equipment and ﬂexibility [209].
However, the open interface in the RAN stems from the idea
of disaggregation of functional component (i.e., RU, CU, and
DU) in achieving openness in the control plane, user plane,
and the management plane. The functional split option 7-
2x [210] at the physical layer between open DU and open
CU bridge the gap of conventional fronthaul interface used
by the previous generation, such as LTE fronthaul in which
each vendor deﬁnes its own fronthaul speciﬁcation which
created a “black-box”, to a more interoperable multi-vendor
or vendor-independent fronthaul interface. However, the higher
layer split between PDCP and RLC, as well as the physical

23

lower layer split, create advantage for operators to deploy
virtualization infrastructure, such as RAN NFVI and VIM
which leverage OSS in support of the functional split for
virtualization. This split determines the amount of functions
from the base station that are to be left close to the users,
and which functions are to be centralized in the open CU for
achieving maximum processing [193], and enable the evolve
Common Public Radio Interface (eCPRI) to be implemented
for trafﬁc aggregation.

D. White-box Remote Radio Unit

White-box Remote Radio Unit/Active Antenna Head
(RRU/AAH) enables multiple technologies to be implemented,
maintain, and run simultaneously in the same RRU. This
reduces design cost to the operators and enabled continuous
evolution of technology from 5G to 6G. Considering RAN
split option 7, RRU can communicate to a separate server
for authentication as discussed in section II-A. However, this
split enables the implementation of Commercial-Off-The-Shelf
(COTS) hardware with hardware custom accelerators such as
programmable FGPAs. We summarize some important open-
source software in the open networking ecosystem in table
VIII.

V. OPEN-SOURCE MULTI-ACCESS EDGE COMPUTING

In this section, we discuss the open-source Multi-access
Edge Computing scheme which is based on splitting of con-
ventional MEC NFs via NFV technology, and reconﬁguration
of traditional MEC elements as well as the extension of
SBA concept
into traditional MEC to realize open-source
MEC. These independent NFs are supported by SBI and
extending the MANO plane to MEC’s NFs reconﬁguration,
with an Open-source MEC template instantiate when required.
However, we will give a glance view of OpenFog as well to
converge a clear picture.

A. Open-Source MEC Framework

In this subsection, we discuss the open-source MEC frame-
work which extends the SBA concept to realize the service-
based MEC layer with the implementation of new NFs [194].
Similar ideology extension from the 5G core,
these NFs
can communicate via the SBI-based MEC layer with the
web communication protocol i.e., HyperText Transfer Protocol
(HTTP). However, to achieve the capability of 5G NR at the
user plane. The extension of UPF is realized to enable open-
source MEC to achieve 5G NR potential. The open-source
MEC framework is designed with components layers which
include infrastructure, virtualization, MANO, application, and
the VIM that manage the infrastructure resources as discussed
in Section II-A for more details. Open-source MEC framework
decouples of NFs is achieved by the service-based MEC layer.
The SBI initiate and established a connection between the NFs
with programming capability. Furthermore, open-source MEC
reconﬁguration is enabled via templates and instances with
Kubernetes [81]. The open-source MEC template enables the
pre-deﬁnition and selection of appropriate NFs for a particular

24

Fig. 11. The abstraction of SDN and NFV interfaces.

TABLE VII
THE DIFFERENCE WITH RESPECT TO OPEN-SOURCE BETWEEN SDN AND NFV

Category

Application area

Device level used

Pre-SDN and NFV

Post-SDN and NFV

Mostly used in particular parts to provide a solution

Mostly across all component, data plane,

E.g. OpenSSL that is used as encryption area

control plane, management plane, and infrastructure

open-source is used mainly in communication

Used in full SDN controller providing useful

libraries, and part of operating system

features and applications

Management and Orchestration level

Legacy and proprietary software used

Provide a complete stack of open-source

solution like OpenStack

application type. The open-source MEC instance enables edge
resources/services in close proximity to the users via the
instantiation process of a service request by the users.

B. OpenFog

OpenFog was established by ARM, Cisco, Microsoft, Intel,
Dell, and Princeton University to resolve the problem of
bandwidth, latency, and communication challenges with IoT
as well as related domains. This enables the processing of
data information and intelligent at the edge. In this respect,
many researchers have joint efforts in posturing novel ideol-
ogy to improve the OpenFog architecture. To showcase the
work in [195] propose a converge model to extend the ETSI
MANO into OpenFog architecture which enable the combined
capability for the IoT domain. The authors address how the
combined implementation can bridge the gap between oper-
ational technology and information technology. This permits
the automated and homogeneous orchestration of cloud node,
edge, fog, applications, and interfaces with end-to-end secu-
rity. This create a multi-tier communication and computing

infrastructure domain resulting in new security challenges. As
such the work in [196] present an overview security landscape
of OpenFog architecture to enable trusted information services
to various information and operational technology application.
However, by leveraging NFV technology security-as-a-service
can be deployed at the Fog node to protect the end devices
against security threats.

The OpenFog Consortium deﬁned three-layer architecture
i.e., service, communication, and security application layer
to permit interoperability for security solutions in OpenFog.
Reliable and secure communication is established via the
communication secure layer for conﬁdentiality, integrity, and
authentication in data and trafﬁc ﬂow between node-to-node,
node-to-cloud, and node-to-end-point communication [197].
To achieve resiliency in the network, the work in [198] propose
the framework integration of fog node and SDN OpenFlow
switch to enable inspection of data packets traversing the
network. This relays messages to the controller for ﬂow rules
installation across the network, with IP snifﬁng application
used to validate the framework.

25

TABLE VIII
IMPORTANT OPEN-SOURCE SOFTWARE AND HARDWARE IN THE NETWORKING ECOSYSTEM

Category

Types

Software example

Control plane

SDN controllers, L2 stack

ODL, ONOS, Ryu, Open Contrail

Management plane

Infrastructure

MANO

VIM, NFVI

ONAP, OSM

OpenStack, OPNFV

Hardware abstraction

Networking operating system

ONL, ONIE

Data plane L2-3

Hardware design

Switches

OpenSwitch, OVS, OVN

White box switches

OCP, TIP

VI. SECURITY CHALLENGES, CURRENT AND FUTURE
EVOLUTION

In this section, we present a review focusing on security
challenges, current and future evolution regarding ongoing
research efforts in open-source-deﬁned wireless networks in
current and future technology. With new paradigm, new secu-
rity threat can be introduce. For example, the integrity and
conﬁdentiality of data information in VNF depend on the
isolation property of the hypervisor which in turn depend on
the integrity of mobile operator’s cloud software [211]. Every
decade experience a new service and technology introduce
into communication systems. Just like new services and use
cases are been introduce in 5G, such as M2M communication,
autonomous system, uRLLC and so on. The next generation
wireless network (6G) will be accomplished with exited new
features, such as fully AI, optical wireless communication,
terahertz communication,
three-dimensional communication
(3D), quantum communication and so on [212], [213]. Open-
source-deﬁned wireless network will play a vital role as well.

A. Security Challenges

In this subsection, we discuss the importance of secu-
rity with the current breaching of conﬁdential data, security
breached can have severe consequences. Hence, mobile op-
erators’ data integrity is of utmost importance in protecting
users’ data privacy. The security issue is an important aspect
especially with regards to a centralized controller. An attacker
can simply target the controller which acts as the brain of
the network with attacks, such as Denial of Service (DoS),
Distributed Denial of Service (DDoS), eavesdropping, identity
spooﬁng, man in the middle attack, etc. Issues about back-door
in SDN future mobile network are also addressed and solutions
are provided by [214]. Experimentation with ONOS shows its
capable of offering beneﬁcial used cases in network security
[215].

In the work of Lina and Dongzhao [216], they propose
Software-deﬁned Security (SDS) which is open and universal
that provide security services and security management to
security devices. SDS can enable different network security
vendors in the deployment of security solutions and security
products, by the realization of Virtual Security Functions
(VSFs) through arrangement and customization. The authors
analyze the different types of attacks and how the defender
can disable the network attack by changing the security
conﬁguration of the server. TeFENS [217] and Murthy et. al

[218] propose a security testbed for the next-generation mobile
networks that enable the researcher to perform various security
analyses, which is transparent and easy to deploy. This allows
the researcher to conduct cyber-attack and control measures
on how the defense measures are performed.

The author’s testbed leverage some of the open-source
project, such as open-source MANO, ONOS, and OpenStack
in order to conduct stringent cyber-security analysis on dif-
ferent requirement of the network. Shang et al. [224] present
FloodDefender which is an efﬁcient protocol-independent de-
fense framework, for the OpenFlow network to detect and
mitigate SDN-aim DoS attacks. FloodDefender ﬁts in-between
the controller platform and the controller application, which
conforms to the OpenFlow policy. The SDN-aim Dos attack
can be identiﬁed with FloodDefender with the utilization of
new frequency features with the detection module. Evaluating
the prototype with the implementation of FloodDefender, show
the defense framework can identify and efﬁciently mitigate the
Dos attack with little overhead.

The work in [225] demonstrates the dynamic provision
of data connectivity with automatic failure recovery, at both
control and data plane. Open standards and interfaces are
used in demonstrating data provisioning, whereas the recovery
part consist of ONOS at
the control plane and logically
centralize coordinated instances for robustness. The authors
show how different devices can remain under control in the
event of failure of any instances, that rely on the ATOMIX
framework with dynamic real-time negotiation of devices. Ivan
et al. [226] present a comprehensive analysis on the security
features of SDN/NFV that describe the strategies enable to
monitor, protect and react to IoT security threats. In this,
the author’s adaptation of SDN/NFV protection approached
comparing it with conventional countermeasures. Tooska et al.
[227] identify the various potential attack scenario possible,
such as denial of service and saturation attacks which is
taken into consideration in the proposal design of control
plane with OpenFlow. The work in [170] summarizes the
fundamental security challenges and problems that appear in
the back-door of future mobile networks with several security
issues and solutions are suggested experimentally with ONOS
controller, which indicate much beneﬁts. Danda and Swetha
[228], present various security threats that can be resolved
through SDN and the threat that can arise as a result of
its implementation with the existence of smart programmable
devices. Dmytro et al. [229] present a comprehensive overview

of related issues to security in software-deﬁned networks and
network virtualization functions.

Khan et al. [35], evaluate security-related measures from
both security and privacy perspective with comprehensive de-
tail on the core and enabling technologies used in building 5G
security model. Network softwarization security and physical
layer security monitoring and management in 5G network
and explore the security threat. Based on the availability of
the literature review with provisioning of understanding the
landscape security-related issues. Cao et al. [36], present an
overview of the network architecture with security function-
ality of 3GPP 5G networks with a focus on new features
and techniques that support IoT devices, Device-to-Device
communication (D2D), vehicle to everything (V2X) com-
munication and network slicing. The authors further present
details in security features, security requirements, and existing
security solutions by providing the current 5G network with
security architecture provided by 3GPP. The authors have
further shown the improvement in security aspect with smooth
implementation and deployment of 5G when their work is put
into consideration.

Rupprecht et al. [230], unify the security knowledge in
mobile phone networks through a method that categories the
known attacks. The authors apply the method to the existing
attacks and defenses in all the previous network generations
(i.e., 2G, 3G, and 4G) and identify the root causes of the
attacks. This has given the opportunity in proposing defense
mechanisms against such attacks in the current 5G mobile
network, such as the problem of unsecured pre-authentication
of trafﬁc and jamming attacks that are present in the last
three mobile network generations. The authors also show
how to eliminate the class of downgrading attacks. Therefore,
providing more security to the user’s privacy. In [231], present
and future security challenges in wireless mobile networks
were analyzed and security vulnerabilities existing in the new
technology adopted by 5G, as a result, the integration of
new services which are absent in previous mobile network,
such as IoT, smart home, connected vehicles and so on. This
poses great security challenges and threats considering the
technology to be used in 5G have their own security threats
(i.e., MEC, SDN, and NFV). Solutions to the security threats
and challenges are provided by the authors in knowing the
risks pose and taking them into account from the initial design
phase to the deployment phases, which will minimize the
potential risk.

The joint effort in [232] propose a systematic analytical
method for 5G Non-access stratum signaling security based
on formal analysis that veriﬁes 10 new 5G protocol vulner-
abilities, with an improvement to Public Key Infrastructure
(PKI) security mechanism to eliminate the vulnerabilities. In
addition, the work of [233], further discuss the concept of
agile security within 5G infrastructure with a focus on MEC
and NFV, and how it can be embedded within the daily
activities of mobile network operator with risk management
as the key elements of agile security framework. Man-In-
The-Middle (MITM) attack is implemented in the work of
Pingle et al. [234], for instructional use in academic teaching
cyber-security. Using the open-source Ettercap tool in kali

26

Linux environment which is a snifﬁng tool and can be used
in performing other attacks, such as DDOS, packet ﬁltering,
and Domain Name System (DNS) spooﬁng. In table IX, we
summarize the security-related publications in the context of
open-source-deﬁned wireless networks. HUANG et al. [235]
present the state-of-the-art solutions in security and privacy
for V2X communication with security detailed cryptography-
based scheme and trust-based scheme. However, 5G tech-
nology aims to provide more possibilities to V2X based
communication which shows a great advantage. In this, the
authors also present security architecture solutions for cellular-
based communication with open challenges.

B. Industry View Point on Security of Open 5G

In this subsection, we discuss some of the viewpoints
on open 5G security from the industry perspective. Across
the industry domain, the potential transformation of 5G in
businesses can be realized via various use cases. Ericsson
in their white paper listed ﬁve core 5G security properties
to ensure trustworthiness which include resilience, commu-
nication security, identity management, privacy, and security
assurance. Ericsson’s white paper focuses on the automatic
recovery mechanism, security and privacy aspect of network
slicing life cycle management, and further adjustment to SBA
in support of various new cases with development in virtu-
alization technology [236]. In another Erisson white paper,
cloud-based open RAN deployment threats, vulnerabilities,
and security are examined as well as vector attacks. Supply
chain attacks, cross-container intrusions, and weak authentica-
tion are exploited to comprise application and data breaches.
Conﬁdentiality and integrity to realize strong cloud security-
based life-cycle management and zero trust architecture with
trust chain, and mutual authentication [237]. AT&T published
a similar concern in their white paper detailing security ser-
vices to support 5G strategy including next-generation ﬁrewall,
secure remote access solution, and sure web gateway to protect
critical information from attack [238].

However, Nokia’s white paper on 5G security discusses the
5G security assets to be protected, threats, risks, and mitigation
steps in minimizing those risks. The adaptation of a global
security assurance scheme-based Network Element Security
Assurance Scheme (NESAS) for GSMA on mobile network
security assurance methodology (SECAM) form 3GPP stan-
dards [239]. In Huawei 5G security white paper detail the
security risk faced by 5G architecture, technology, and services
in addressing the security challenges, based on 4G security,
the 5G security can be achieved through the joint effort of
all industries working together to share responsibilities and
established a secure system via open and transparent 5G
security ecosystem [240].

C. Current and Future Evolution

In this subsection, we focus on current and future evolution
in this new paradigm. Considering the tremendous and unlim-
ited growth of data trafﬁc from different devices, the utilization
of next-generation RAN, SDN/NFV technology, and the inte-
gration of massive MIMO, and full-duplex in communication.

27

TABLE IX
SUMMARY OF IMPORTANT SECURITY PUBLICATIONS IN THE CONTEXT OF OPEN-SOURCE-DEFINED WIRELESS NETWORK

Area of Focus

Main contribution

Ref.

Relevant Challenges

Software-deﬁned security

Security testbed

The proposal of software deﬁned

security (SDS) that is open and universal

and provide security services and security

management to security devices.

The proposal of security testbed for the

next-generation mobile networks that

enable researcher to perform various

security analysis.

Analyzing the different types of

attacks and how the defender can

[216]

disable the network attack through

the realization of virtual security

functions (VSFs).

Conducting relevant cyber-attack and

[218]

control measure on how the defense

measures are performed.

Control and data plane

in logically centralizing coordinated

[215]

under the control of the ONOS in the

The use of ONOS at the control plane

The different devices have to remain

instances for achieving robustness.

event of failure of any instances.

IoT security threats

that discuss IoT vulnerabilities and

[219]

The introduction of a unique taxonomy

the amalgamation of IoT research trend.

The implementation of OpenFlow

Control plane and OpenFlow

communication channel with different

[220]

SDN/NFV DoS/DDoS attack

statistical properties.

The proposed mitigation of DoS/DDoS

with the cooperation of advanced

mechanism for a better reliable

cellular communication network.

The severity of the IoT problem that

aid in the mitigation task.

The effective detection of saturation

attack in SDN.

The limited deployment scenario

[221]

of the security mechanism of

5G network.

RISV-V Processor attack

based embedded computing against

[222]

against fault injection

Present a technique to prevent RISC-V

Protecting the RISV-V processor

fault attack.

attack on the microchip.

Classiﬁcation of cyber-attacks on

The creation of a new access path,

Core network attack classiﬁcation

the core network, from the perspective

[223]

security downgrading and limitation

of a network protocol in the core network

in security visibility.

All this requires an open-source platform which researchers
from both academia and industry can use, as a real-world
analysis of all these required elements. Open5GCore [241],
is a new 5G stand-alone component and independent from
the previous 4G EPC functionality. Open5GCore can enable
a fast 5G innovation, demonstration and implementation of
new concepts, and use cases with realistic evaluation. The
Open5GCore release5 integrates 5G NR Stand-Alone (SA)
off-the-shelf LTE and non-3GPP access networks, such as
WiFi and 60 Ghz WiFi, that can run on a common hardware
platform with container or VM deployment on a large number
of virtualization environment. This is highly customizable,
enabling instance deployment and addressing the need for
speciﬁc use cases.

In the work of Ullah et al. [7], propose an open-source
framework based on Named Data Networking (NDN) tech-
nology and Edge Cloud Computing (ECC) in empowering
the future internet, whose main target goal is achieving low
latency and high bandwidth. The authors integrated the two
technologies (i.e., NDN and ECC) to accomplish ﬂexibility,

privacy, and efﬁciency in IoT devices with various trafﬁc loads.
The implementation of NDN-based ECC framework with eval-
uated results obtained through testbeds and simulations shows
NDN integration with ECC achieved latency and backbone
network trafﬁc, with a capacity of real-time result delivery
to users and fast-enormous amount of data processed. Parvez
et. al [37] surveyed the emerging technology to achieved
low latency into three perspectives: 1) RAN; 2) CN; and 3)
caching. To achieve low latency in the RAN domain, short
packets frame modulation and coding schemes, transmission
technique, cloud-RAN, the enforcement of QoS, and Quality
of Experience (QoE) are studied. However, the architecture of
SDN, NFV, MEC, and the backhaul data trafﬁc on the CN, and
cache placement, content delivery for low latency in content
download for caching are reviewed as well. A two-level
MAC scheduling framework is proposed in [242] to handle
the uplink and downlink transmission in network slice with
different requirements across a shared RAN to achieve low
latency with a dynamic radio resource management in meeting
the required latency. In an effort to demonstrate the design

ﬂexibility of the two-level MAC scheduling framework, slice
management decisions and its capability in enhancing data
delivery to achieved uRLLC requirements are implemented.

Furthermore, the recent mobile layer-based heterogeneous
network called moving network from the research community
has proven to improve QoS for commuters boarding public
transport. Due to fast-moving public transport pressure high
amount of load on the CN, as a result of large group handovers.
The above mention challenge motivates the work in [243]
to surveyed moving networks, and mobile cells in ﬁlling the
current literature gap and address future applications. Mobile
cells can reduce the number of handovers by decoupling the
CN from the boarded vehicle users, through the introduction
of in-vehicle access link and backhaul access link to connect
the out-of-vehicle trafﬁc to the CN. The potential use cases
with value-added applications of moving networks to the
future cellular architecture, and challenges face revealed the
author’s future research work. In the work of Chen et al.,
[244], OpenFunction is proposed which is an extensible data
plane abstraction protocol
is platform-independent of
that
Software-deﬁned Middle-boxes (SDM), with the core deci-
sion of actions/states/event operation to be deﬁned within a
uniform pattern. The authors implemented SDM consisting of
OpenFunction controller-based Netmap, DPDK, and FPGA to
verify the OpenFunction abstraction capability.

The work in 245, introduces an open-source cellular net-
work into MEC, which is deﬁned by open-source software
on general-purpose hardware based decouple MEC function
and resources via NFV. The authors show a use case of open-
source MEC scheme through demonstration in a test network.
The analysis in [144], lead to the proposal of UOS in a similar
fashion the work in [246] analyze the security weakness in
the control plane with provisioning framework focusing on
the essential network properties required by the network.
Open5G is proposed in [247], based OpenFlow (OF) and OF-
Conﬁg, which is commonly used protocol in SDN wired and
data centers. Multi-RAT RAN can be controlled through an
open interface with ﬂexibility and simplicity to the network
operation with Open5G. The authors proposed Open5G due to
the fragmented nature of the control plane in the multi-RAT
RAN, lacking a global view of the network resources with
hindering optimization of allocated resources. T-DCORAL
[248] is proposed to mitigate issues in Software-deﬁned Data
Center Networks (SD-DCNs) based Elastic Control Plane
(ECP).

T-DCORAL can accelerate the control plane through the
allocation of virtual CPU (vCPU) from a pool of vCPU to
controllers in run time, on the other hand, the existing EPC
resizes the controller pool. Results show T-DCORAL mini-
mizes the control plane latency from 46 ms to 38 ms, likewise
the average CPU load by 22%, and the rule installation time
by 64.28%. SoftBox [249], a novel cellular CN architecture
based SDN/NFV is proposed to achieve greater ﬂexibility,
efﬁciency, and scalability compared to the present day cellular
core network, that implements a network policy required for
processing of individual UE’s data with signaling trafﬁc to a
light-weight, in-network and UE’s trafﬁc steering via it agent.
SoftBox optimization efﬁciency drops the different types of

28

data and control plane loads in the basic SoftBox by 51%.

Next G alliance is a north american wireless technology
advancement for 6G and beyond through a private sector
initiative to poster full life-cycle research and development in
manufacturing and standardization [250]. Hexa-X is a Euro-
pean 6G project with the vision to connect human, physical,
and the digital world with 6G key enablers to include sub-
THz transceiver technology, radio-based imaging,
improve
radio performance, and AI/ML, based on key areas such as
connecting intelligence, and global service coverage [251].
Furthermore, the 6G KOM project R&D, is a German new
baseband architectural concept for 6G with the goals of novel
ideas investigation to test and analyze D-band modules with
respect to mobile communication [252].

VII. OPEN-SOURCE HARDWARE

In this section, we discuss open-source hardware which
is classiﬁed into three categories: Baseband and Radio Fre-
quency (RF), common hardware (x86, ARM), and open-
source hardware (RISC-V). Hardware processors are required
in running the operating system of a computer with the primary
architecture of most processors to be Reduced Instructions Set
Computer (RISC).

A. Baseband and RF

Wireless communication systems are continuously growing
to satisfy the diverse number of required wireless devices
and the technicality designed of the RF system. However,
integrated RF transceivers can reduce the design complexity of
analog RF systems. The transceivers serve as an interface for
easier integration with ASIC or FGPA in the implementation
of baseband processing, which enable access to user data in the
digital domain. Efforts in research to demonstrate experiment
with new ideas to enhance wireless communication system
starts with computer simulation in the ﬁrst step. In addition,
testing platforms are required in transferring the computer
simulation into implementation validation. Moreover, SDR and
SoC provide ﬂexible research experimentation with wireless
algorithm, whereas current SDR does not fully implement
FGPA in SoC for the back-end receiver operation. This has
motivated the work in [253] to demonstrate the hardware
and automatic synthesizing, and implementation of baseband
receiver-based wireless algorithm signal processor for FGPA,
which uses SDR and SoC platform to present a real-world 6
GHz wireless experiment. The authors have taken into account
the mitigation of the channel effect, and synchronization effect
with respect to the baseband processing platform.

The integration of digital baseband processor and ASIC
to provide the wireless interface with Ultra-High-Frequency
(UHF) Radio-Frequency-IDentiﬁcation (RFID), based reader
and tag for bio-signal healthcare monitoring system is pre-
sented in [254]. This ensures the hand-shake communication
process between reader and tag. To achieve bi-directional
communication the design process of reader and tag implement
baseband processor ASICs on-chip and on FGPA respectively,
and embedded in a wearable device to accomplish wireless

communication with commercial RF. To demonstrate the si-
multaneous signal transmission of both RF and high-speed
baseband through the implementation of superimposing elec-
trical method, across graded-index silica multi-mode ﬁber to
achieve 28 GHz RF and 28 Gbit/s pulse amplitude modulation
of level-4 in the work of Ohtsuki et. al [255]. The scalability
of the method describes the simultaneous transmission of
dual-channel and effective utilization of transmitters under
prescribed wavelength from 850 nm to 1550 nm across 50
m multi-mode ﬁber.

The increasing momentum of billions of IoT devices has
pushed researchers and manufacturers in rethinking the re-
design of IoT devices,
that are energy-efﬁcient, scalable,
accurate, and have authentication mechanisms at the devices
level rather than the software level. This is because present
authentication applications are not directly applicable to the
IoT devices and are energy-consuming, based cryptography
algorithm protocol. To identify the unique radio hardware
impairment inﬂicted through the physical layer I/Q (i.e., in-
phase and quadrature-phase) radio circuitry, from a pool of
devices by deep-learning technique, Sankhe et al. [256] pro-
pose to optimize radio classiﬁcation through a convolutional
neural network (ORACLE) in solving the problem. ORACLE
deﬁned a new system-based Convolutional Neural Network
(CNN). This technique speciﬁes a particular radio feature-
based hardware-centric in the transmitter chain. However,
CNN accuracy of 80-95% with implementation of COTS
WiFi device and USRP radio in a static environment. The
CNN technique can be scaled up through Impairment Hopping
Spread Spectrum (IHOP) which is more resilient to spooﬁng
attacks in classifying the number of radio by means of random
binary sequence key.

Baseband complex signals (i.e., amplitude and phase) can
be coded into pulse width and pulse position with binary signal
to implement an efﬁcient digital RF transmitter, through the
process of RF modulation based uniform sampling on Pulse
Width Modulation (PWM). RF-PWM carrier frequency serves
as equal to the PWM ﬁrst harmonic frequency such that the
latter (i.e., PWM ﬁrst harmonic), can serve as a carrier signal
to obtain a comprehensive detailed model of uniform sampling
RF-PWM that include in-band and side-band signal distortion.
However, this distorted signal can be analyzed and discrete-
time implementation of the model can be predicted to serve as
characterization and simulation properties of fully RF digital
transmitter [257].

B. Common Hardware (x86, ARM)

In today’s computing trend, smartphones and tablets are
shaping the landscape of computing, such that energy and
power consumption are the constraints now to be considered.
With this trend, ARM which is a RISC Instruction Set Ar-
chitecture (ISA) and dominates the mobile market, whereas
x86 is a Complex Instruction Set Computing (CISC) ISA
and dominated the desktop/laptop, as well as server domain
cite161. Both ARM and x86 are designed to optimize the
different levels of performance with energy efﬁciency. With
x86 there has been a long history of virtualization which

29

is accomplished by executing multiple operating systems on
the hardware processor, enabling encapsulation and use in
the data centers. ARM virtualization extension can be used
with a Linux-based virtual machine (KVM) in executing a
particular software on ARMv8. ARM performance monitor
extension can be used in accurate instruction counting, which
requires the integration of processor model within the virtual
platform (VP), which are the enabling technology in SoC
(i.e., VP) [259]. Digital information processing, privacy, and
conﬁdentiality is a concern due to cache attack that pose a
great challenge.

In order to provide a solution to the challenge for cache
attack on ARM, Flush + Time is proposed in [260] which
provides high accuracy and high-resolution ﬂash-based cache
attack, to solve the problem of ﬂush cache lines and how
precise timing is achieved. Experimental analysis shows the
Flush + Time increase accuracy from 95% to 99.3%. ARM
and x86 support open-source Architecture Code Analyzer
to execute and
(OSACA), which is a static analysis tool
predict loop sequential time. This includes detection of loop
dependencies,
turns into a versatile cross-architecture
modeling tool [261]. ARM-based server processor promotes
the use of massive parallel High-Performance Computing
(HPC) systems. This allows porting HPC applications to the
architecture with a collection of recorded information about
its performance, challenges, and beneﬁts [262].

that

C. Open-Source Hardware (RISC-V)

In this subsection, we discuss the RISC-V which is a
popular architecture with simple command instructions that
handle access to memory with load-stored commands. This
runs faster due to the simplicity of the hardware instruc-
tion set. As such, a RISC-based processor can be designed
faster because it contains a few chip-set [249]. RISC demand
currently surged due to the realization of IoT and used in
embedded systems. The description of the open-source RISC-
V design processor core targeted for near-threshold operation
with the introduction of instructions, extension in optimizing
the increase of computational density, and minimizing the
pressure in shared memory can be analyzed in [258]. RISC-
V processor was developed in 2010 at Berkeley university
as open-source instruction that lead the way for open-source
hardware under Berkeley Software Division (BSD) license
[263]. RISC-V hardware architecture can provide a complete
open-source computing system with the required freedom
that is needed, e.g., toward an open-source operating system
development project.

RISC-V ISA free and modular, encourage the implemen-
tation of Intellectual Property (IP) cores that make it simple
to use because of its open-source nature with an additional
advantage compared to commercial CPU cores. However, the
authors focus on existing open-source RISC-V CPU IP cores
with three cores selected and evaluated [264]. The FPGA-
based SoC open-source CPU IP cores that support RISC-
V design can accelerate the reused of IPs, with signiﬁcant
emphasis given to the design, test, veriﬁed, and shared in
modularity level in order to increase productivity. Taiga [265],

32 bits RISC-V soft processor architecture can support RISC-
V multiple operations with extension design support for Linux-
based shared memory, which is highly conﬁgurable with a
standardized interface.
iFLEX an open-source high-density
FPGA hardware co-processor enable large-scale research and
commercial application in the ﬁeld of AI with diverse extrac-
tion of multimedia content through vector similarity searching
with a high volume of data set entries [266].

The open-source hardware accelerator designed for vec-
tor similarity searching (i.e., iFLEX) is capable of yielding
33.6 GB/s bandwidth with seamless reconﬁguration designed-
custom compute node board, based array of 21 FPGA to
implement an arbitrary distance calculation. This is achieved
through the implementation of distributed distance calculation
with novel logic and software.However, in support of open
innovation and research,
the authors provide the designed
circuit board hardware, FPGA logic, and the host software.
OpenNoC [267] is an open-source infrastructure-based FPGA
hardware accelerator, on lightweight deﬂection torus based
Network-on-Chip (NoC) with Peripheral Component Intercon-
nect express (PCIe) communication controller. Open-source
(NoC) implementation fastens and saves the development time
between hardware accelerators on FPGA, contrary to the
traditional NoC that suffers from low clock performance when
implemented with FPGA.

In the work of [268], a modular cluster-based multi-core
architecture that is ﬂexible and reusable tailored in the imple-
mentation of different multi-core taxonomy is presented.NoC
is couple with multiple-processing clusters for communica-
tion that permit high-level designed capability in building
many-core architecture-based-FPGA accelerators. The multi-
core architecture consists of RISC-V Process Element (PE)
couple to a bus-based interconnection, which serves intra-
cluster communication through shared memory, with each PE
posting a single RISC-V core tightly couple to a localized
memory. For every research work, an expected achievable
goal is expected and the proposed multi-architectural core
obtained a scalable computing performance with a memory
bandwidth of 4.3 Gb/s and 9 clusters utilizing SoC with
7.7% power consumption. Heradio et al. [269] presented a
systematic mapping study that covered the literature review of
open-source hardware in education, by classifying hundreds of
publications according to: 1) guidance of published material;
2) the academic information about the use of open-source
hardware; 3) and direction for the future research. The authors
were motivated by the numerous publications proposing clear
and distinct measures in scaling approach for effective learning
purpose, that will promote the scientiﬁc concept, and student’s
creativity with new innovation.

VIII. TESTBEDS FOR OPEN-SOURCE-DEFINED WIRELESS
NETWORK
In this section, we discuss testbeds for open-source-deﬁned
wireless networks which are important platforms for research
experimentation and prototyping. These testbeds provide the
essential tools used by researchers and academia to perform
tests that validate the components to be used (e.g., UE, eN-
odeB, EPC, etc.) with the performance for a novice technology

30

in a wireless network. This is achieved on the foundation
of general-purpose hardware (e.g., x86 and ARM), with de-
coupled network functions running as VNFs. However, we
evaluate the test network to show the implementation of PoC
framework design, that can use any of the open-source testbeds
to implement and build mobile network functions. Among
these is the Mosaic5G which is the world’s ﬁrst ecosystem
that is an open-source platform for 5G R&D, which range
from centralized network to mobile edge deployment which
is complementary to OAI and leverage SDN/NFV. Mosaic5G
provides applications to the edge and support services that
are closer to the device with open-source APIs in fostering a
third-party network developer. The APIs leverage the beneﬁted
values in deploying cellular network infrastructure with the
control plane on the server-side to provide an on-demand
resource monitoring of the network status. This open-source
technology has changed the mobile network ecosystem by
simplifying the operation of mobile network as a service
and converging the mobile network into the cloud and edge
technology with a click/plug and play software fashion for
both RAN and CN. In addition, Mosaic5G offers to virtualize
resources at the cloud and core for orchestration and split
the control/user plane base service-based oriented architecture
[25].

Furthermore, OAI is an open-source that offers a software
implementation of all components ranging from UE, eNodeB,
and core network which is achieved through the software
radio front end connected to a host computer and enable
innovation in the ﬁeld of mobile network communication.
Software-deﬁned and virtualized wireless testbed-based OSS
on COTs is presented in [270]. Security testbeds are essential
in analyzing the challenge in security, privacy, and conduct-
ing cyber-security analysis on various network. Open-source
project (i.e., MANO, ONOS, OpenStack) security testbed is
established in [218] which leverage these existing open-source
projects in realizing a ﬂexible network architecture.

TeFENS testbed provides a platform to experiment and
demonstrate security services on real-time data with pro-
grammable OpenFlow enable switch [217]. 5GIIK is a novel
testbed that offers the implementation, management, and or-
chestration of different network slices over the network do-
main with different access technology determine by different
open-source tools implementation. 5GIIK provides features
and additional capabilities which include real-time monitoring
of both VNFs assigned to different VIMs and VMs [271].
SimuLTE (System-level simulation) is a prominent model used
in related research of 4G and 5G cellular communication.
Based on OAI, cellular testbed is set up which measure the
time of low and high load
packet delay and inter-arrival
scenario.

SimuLTE is an open-source platform integrated with OM-
Net++ and NET framework written in C++ and fully cus-
tomizable with simple interface [272]. OpenTestbed can be a
signiﬁcant tool for evaluating and bench-marking IoT solutions
which consist of dedicated switches, servers, and a reservation
with experimental management back-end which features all
necessary tools in building a testbed from COTS. OpenTestbed
is a complete open-source with open-source hardware project

that has been adopted by various institutions [273]. IoT
platforms include TLSensing (i.e., an environment use in
the monitoring of critical and non-critical parameters) and
NetwOrked Smart Object (i.e., NOS). This integrate a real
smart testbed, that enables fast deployment of IPv6 across
TSCH (Time Slot Channel Hopping) mode of IEEE 802.15.4e,
which reveals the data collected from sensors via a web
interface.

COMOS testbed is city-scale advanced wireless tested
design to support uRLLC and ECC, base software-deﬁned
radio node wireless communication. Cloud enhances Open
Software-deﬁned Mobile (COSMOS) wireless testbed enables
researchers to experiment remotely on COSMOS testbed with
programmable advantage to validate real-world and next-
generation technology and application. This remote testbed
deployed in New York City was built on the integration of
mmWave, optical transport network, control and management
software, as well as core and edge cloud 274. In addi-
tion, 5TONIC is an open research platform for 5G related
technology for research and innovation to both academia
and industries. This provides 5G experimentation equipped
resources to run and test complex open-source projects 275.
Fed4Fire+ is a Next Generation Internet federated testbed.
This includes both wired, wireless, 5G, IoT, OpenFlow, cloud,
and big data. Fed4Fire+ implement Open API that enables the
interconnection of these different testbeds 276.

IX. LESSONS LEARNED

lessons

In this

section, we discuss

learned and fu-
ture research direction with respect to open-source-deﬁned
wireless networks. Open-source-deﬁned wireless networking
frameworks, open-source software, open-source project, and
testbeds, as well as security challenges, will be discussed.

A. Open-Source Software

1) Lesson Learned: We explore the historic evolution of
open-source software and the potential solutions it provides
from the terminals to the cloud infrastructure and operating
system. We also highlighted the current trend of open-source
software momentum extending the landscape of software so-
lutions. We provide related research articles that are of beneﬁt
to our readers in choosing the appropriate software solutions
to avoid any pitfalls to the user. In fact, the problems open-
source software faces are detailed to the readers to learn and
ﬁx errors and bugs which increases resiliency.

Although there are research-related articles and projects
with open-source software most of which are related to the IoT
realization to promote innovation. However, the distribution of
programming languages, contributor’s specialization as well
as the adopted dependencies can be considered for future
research.

B. Open-Source Project

1) Lesson Learned: A number of open-source projects
to be exploited at both industrial and academic levels were
discussed. The surging data trafﬁc and compute power con-
sumption challenges, for example, were addressed by OCP,

31

creating open-source hardware with open speciﬁcations to
ensure scalability, innovation, and energy-efﬁcient hardware.
Furthermore, the realization of SDN/NFV deployment chal-
lenges faced by integrating open-source projects was identiﬁed
to our readers to avoid any pitfalls. and the challenges faced
by open-source project, such as deployment, performance, and
reliability.

C. Frameworks

1) Lesson Learned: The emergence of plethora of open-
source frameworks has led both academia and industry to
focus on the speciﬁcations to facilitate open implementation.
This has recently pave the way for many research articles
implementation of the framework with AI/ML technique [71],
[72], [76]. In fact, global open-source community successive
efforts promote multi-vendor products and innovations from
the core network, access, edge, and terminal. The successive
trend of categories of open-source-deﬁned wireless networking
frameworks from black-box, gray-box, and white-box network
detail
implementation, enable service providers to deploy
infrastructure at low cost and vendor lock-in prevention [103].
To the best of our knowledge open-source frameworks domain
consists of novel frameworks which required more research
efforts from the community in promoting vendor agnostic
products and innovation. However, there is still the need to
integrate AI/ML technique for intelligent management.

D. Core Network

1) Lesson Learned: The introduction of SBA enable tele-
com operators to ﬂexible deployed virtual mobile network
function on commodity servers with full control and route pol-
icy management that is centralize via the concept of SBA. This
is a solution in providing software-deﬁned, programmable, and
distributed management in shifting away from communication
protocol-centric. The MultiFire-based of LTE-like services
in the unlicensed spectrum enabled business opportunities
and extends the LTE protocol stack to implement ﬂexible
resource allocation and power consumption control, as well
as enhancing eMBB and IoT applications [150], [151]. The
contribution of MultiFire standalone LTE deployment in the 5
GHz unlicensed spectrum in the enhancement of eMBB and
IoT applications and also in decreasing the latency as well as
increasing the reliability of radio communication in unlicensed
spectrum can be considered future research direction.

E. RAN

1) Lesson Learned: The successive trend in achieving
open-source-deﬁned RAN is discuss in detail, from OpenBTS
which provide more than one carrier grade at a time, to SDR
that made the implementation of Open-source RAN possible
on commodity server. However, experimental framework re-
search is provided, e.g., IEEE 802.11 p based SDR OFDM to
the readers to learned and explore the novel ideas (e.g., from
the reference [173]). As stated in reference [151] the chal-
lenges due to the LBT and other regulatory requirement from
the introduction of LTE operations in unlicensed spectrum. For

example, MulteFire introduce the new uplink control channel
designed and HARQ feedback mechanism. However, research
efforts can be focus on solution implementation that enable
5G use cases in unlicensed and shared spectrum, as well as
low latency communication.

F. Security

1) Lesson Learned: The wide exploitation of open-source
in critical infrastructure provide a large surface of security
attacks and sensitive consumer data increase the security
requirements. Security can be accomplished at different level
of the network, e.g., in the reference [212] experimentation
with ONOS is conducted for mobile network. The deployment
of security at different level as been well studied and provide
hints to our readers on experimentation and precaution to avoid
conﬁdential data breached, e.g., in the references [211], [213],
[214], [215], [221]-[233]. As our security review and analysis
show, 5G use cases security architecture research need more
focus on the IoT applications due to its diverse applications in
our daily life activities as it provides a great surface of security
risk.

G. Testbed

1) Lesson Learned: We have evaluated test network to
show to the readers the implementation of PoC frameworks
designed that can be exploited to use any of the open-
source testbeds in the implementation of mobile network
functions [22]. The diverse important platforms for research
and prototyping of novel research innovation and ideas, e.g.,
the Mosaic5G provide a platform to conduct future R&D. As
presented in [215], security testbeds are essential in conducting
future research based open-source projects in realization of
ﬂexible network architecture.

X. OPEN RESEARCH ISSUE AND FUTURE RESEARCH
DIRECTION

In this section, we discuss open-source-deﬁned wireless
networks integration with some of the novel technologies, such
as blockchain and AI/ML. However, now the question remains
how does blockchain technology applied in telecommunica-
tion enable decentralization, anonymity, auditability, security,
ﬂexibility, efﬁciency and deployment cost.

A. Core Network and Blockchain

Blockchain recently has gone beyond bitcoin (i.e. digital
concurrency) to dominate the landscape of every technology,
from telecommunication, IoT, cloud computing, to even our
daily live activities. Blockchain technology which is known to
be a distributed ledger database and enable information update
securely with every node having all required information and
the metadata. Each block in the blockchain enable independent
storage unit which stores transaction related data. Taking
into consideration the CN SBA feature to support ﬂexibility,
efﬁciency and openness. However, the technology enablers of
5G raise several issues such as transparency, decentralization,
and reliability, because of the heterogeneous devices to be

32

connected by 5G exposing grater surface to security attacks
on conﬁdential and data integrity. Blockchain can serve as
a solution in bridging the gap to ensure transparency, trust-
worthiness, immutability, and data reliability in a plethora of
new applications, therefore establishing trust among untrusted
services.

Blockchain sharding is proposed in [277] to enable hori-
zontal scaling of partitioned several transactions and process
independently. This involve building a number of clusters
with multiple nodes (i.e., miners) in processing every shard
to verify data queries and authen-
in parallel. However,
ticate its source they further proposed peer-to-peer oracle
network, the blockchain oracle interface (trusted third party
service provider) which veriﬁes data authenticity. The fact that
blockchain cannot access network external data. The structural
incompatibility of blockchain design is address in [278]. The
authors propose a novel temporal blockchain (conte) design
base on federated byzantine fault tolerance. Conte deployed
as cloud-native application (i.e., a micro-services inside docker
containers).

B. RAN and Blockchain

The heterogeneous and highly complexity of the RAN
forces mobile networks operators (MNOs) to rely on their
infrastructure and spectrum for data delivery to their sub-
scribers, resulting to inefﬁciency and redundancy. The current
state-of-the-art literature on levering blockchain in networks
most currents works have focus on IoT, cloud and edge
computing, and wireless sensor networks. Limited research
article can be found on the blockchain integration in wireless
communication. However, recent research works mostly have
pay attention to integration of blockchain with RAN, for ser-
vice latency, efﬁciency, ﬂexibility, and security. The reference
in [279] proposed the B-RAN to established trust between
distinct groups for deep integration and efﬁcient interaction
by codiﬁcation of six hierarchical functional layers in building
trust with key enabling technologies in overcoming obstacles.
Roaming network architecture based blockchain smart contract
5G networks is proposed in [280] to improves the visibility for
mobile network operator’s activities in the visited networks, to
enable fast payment and prevent fraudulent transactions. The
importance of hash access in blockchain RAN is emphasize
from a game theory perspective on transmission success prob-
ability, access delay, and network throughput [281]. Through
the establishment of analytical model in evaluating the per-
formance of B-RAN, hash access optimization is conducted
for network throughput with simulation results to validate the
proposed models.

XI. CONCLUSION

The open-source-deﬁned wireless networks has created a
huge impact in the ecosystem of wireless communication,
in line with standards that create interoperability, openness,
reduce cost, and create a healthy business ecosystem. This
has become the game-changer in the recent 5G/6G mobile
network. However, the analysis made in this paper with respect
to open-source projects that could beneﬁt operators in recent

5G deployment and wireless networks is the infrastructure
(i.e., programmable data plane), and management and orches-
tration (i.e., automation, orchestration, and analytics). Both
open-source communities and standardization promote one
another. The role of one (i.e., open-source community or
standardization) can dominate the other. For example, Linux
open-source community dominates over standardization in the
operating system. In addition, 3GPP dominates over open-
source community in wireless communication. The cohesive
existence between the two will play a vital role that enables
their coexistence in the wireless communication ﬁeld.

Furthermore, 3G and 4G suffered from a lack of interop-
erability, whereas 5G/6G was able to be free from this, due
to its architectural design which provides openness via open-
source projects. With open-source projects, great momentum
is achieved in delivering services and products that are open,
ﬂexible, interoperable, and multi-vendor. Potential research
directions are discussed, which include the integration of this
paradigm into the next-generation wireless networks, secu-
rity challenges, and privacy in open-source-deﬁned wireless
networks is also discussed. The trend surge of data trafﬁc
on infrastructure with key solutions is also provided to our
readers. Finally, this comprehensive survey can serve as a
guide for academia and industry in diving further into the
context of open-source-deﬁned wireless networks.

REFERENCES

[1] Y. Liu, M. Peng, G. Shou, Y. Chen and S. Chen, “Toward Edge
Intelligence: Multiaccess Edge Computing for 5G and Internet of Things,”
IEEE Internet Things J., vol. 7, no. 8, pp. 6722-6747, Aug. 2020, doi:
10.1109/JIOT.2020.3004500.

[2] K. B. Letaief, W. Chen, Y. Shi, J. Zhang and Y. A. Zhang, “The Roadmap
to 6G: AI Empowered Wireless Networks,” IEEE Commun. Mag., vol.
57, no. 8, pp. 84-90, August 2019.

[3] 5G Americas white paper “The status of open-source for 5G”. NOV.
2020. [online]. Available https://www.5gamericas.org/the-status-of-open-
source-for-5g/

[4] Z. Zaidi, V. Friderikos, Z. Yousaf, S. Fletcher, M. Dohler and H. Aghvami,
“Will SDN Be Part of 5G?,” IEEE Commun. Surveys Tuts, vol. 20, no. 4,
pp. 3220-3258, 4th Quart., 2018, doi: 10.1109/COMST.2018.2836315.

[5] M. Garrich, F. Moreno-Muro, Mara. B. Delgado, and P.P. Mario, “Open-
source network optimization software in the open SDN/NFV transport
ecosystem,” J. Lightwave Technol., vol. 37, no. 1, pp. 75-88, 2019
[6] V. Passas, N. Makris, C. Nanis and T. Korakis, “MEC service place-
ment over the Fronthaul of 5G Cloud-RANs,” IEEE Int. Symp. Local
and Metropolitan .Netw (LANMAN), Paris, France, 2019, pp. 1-2, doi:
10.1109/LANMAN.2019.8847065.

[7] R. Ullah, M. A. U. Rehman and B. Kim, “Design and Implementation of
an open-source Framework and Prototype For Named Data Networking-
Based Edge Cloud Computing System,” IEEE Access, vol. 7, pp. 57741-
57759, 2019, doi: 10.1109/ACCESS.2019.2914067.

[8] T. Zhu, P. Xiong, G. Li, W. Zhou, and S. Y. Philip,“Differentially private
model publishing in cyber physical systems,”Future Gener. Comput.
Syst.,vol. 108, pp. 1297–1306, Jul. 2020

[9] X. Chen et al., “Android HIV: A study of repackaging malware for
evading machine-learning detection,” IEEE Trans. Inf. Forensics Security,
vol. 15, pp. 987–1001, Jul. 2020

[10] V. Jungnickel et al., “Software-deﬁned open architecture for front- and
backhaul in 5G mobile networks,” in Proc. IEEE. Inter. Conf. Trans. Op-
tical Netw. (ICTON), 2014, pp. 1-4, doi: 10.1109/ICTON.2014.6876551.
[11] F. E. Idachaba, “5G networks: Open network architecture and densiﬁ-
cation strategies for beyond 1000x network capacity increase,” in Proc.
Future Technol. Conf. (FTC), San Francisco, CA, 2016, pp. 1265-1269,
doi: 10.1109/FTC.2016.7821762.

[12] F. Corno, L. De Russis and J. P. S´aenz, “How is open-source Software
Development Different in Popular IoT Projects?,” IEEE Access, vol. 8,
pp. 28337-28348, 2020, doi: 10.1109/ACCESS.2020.2972364.

33

[13] A. Nasrallah et al., “Ultra-Low Latency (ULL) Networks: The IEEE
TSN and IETF DetNet Standards and Related 5G ULL Research,” IEEE
Commun. Surveys Tuts., vol. 21, no. 1, pp. 88-145, 1st quart. 2019, doi:
10.1109/COMST.2018.2869350.

[14] E. Baccelli et al., “RIOT: An open-source Operating System for Low-
End Embedded Devices in the IoT,” IEEE Internet Things J., vol. 5, no.
6, pp. 4428-4440, Dec. 2018, doi: 10.1109/JIOT.2018.2815038.

[15] A. Baabad, H. B. Zulzalil, S. Hassan and S. B. Baharom, “Software
Architecture Degradation in open-source Software: A Systematic Lit-
erature Review,” IEEE Access, vol. 8, pp. 173681-173709, 2020, doi:
10.1109/ACCESS.2020.3024671.

[16] G. Lin, S. Wen, Q. -L. Han, J. Zhang and Y. Xiang, “Software
Vulnerability Detection Using Deep Neural Networks: A Survey,”
in Proc. IEEE, vol. 108, no. 10, pp. 1825-1848, Oct. 2020, doi:
10.1109/JPROC.2020.2993293.

[17] R. Natella, S. Winter, D. Cotroneo and N. Suri, “Analyzing the Effects
of Bugs on Software Interfaces,” IEEE Trans. Soft. Eng., vol. 46, no. 3,
pp. 280-301, Mar. 2020, doi: 10.1109/TSE.2018.2850755.

[18] A. Barcomb, A. Kaufmann, D. Riehle, K. -J. Stol and B. Fitzgerald,
“Uncovering the Periphery: A Qualitative Survey of Episodic Volun-
teering in Free/Libre and open-source Software Communities,” IEEE
Trans. Softw. Eng., vol. 46, no. 9, pp. 962-980, Sep. 2020, doi:
10.1109/TSE.2018.2872713.

[19] M. Miozzo et al., “SDR and NFV extensions in the ns-3 LTE module
for 5G rapid prototyping,” in Proc. IEEE Wireless Commun. Netw. Conf.
(WCNC), Barcelona, 2018, pp. 1-6, doi: 10.1109/WCNC.2018.8377237.
[20] S. Han, S. Jang, H. Choi, H. Lee and S. Pack, “Virtualization in
Programmable Data Plane: A Survey and Open Challenges,” IEEE
Open J. Commun. Society, vol. 1, pp. 527-534, 2020, doi: 10.1109/OJ-
COMS.2020.2990182.

[21] P. A. de Souza, A. S. Abdallah, E. F. Bueno and K. V. Car-
doso, “Virtualized Radio Access Networks: Centralization, Allocation,
and Positioning of Resources,” in Proc. IEEE Int. Conf. Commun.
Workshops (ICC Workshops), Kansas City, MO, 2018, pp. 1-6, doi:
10.1109/ICCW.2018.8403667.

[22] L. Linguaglossa et al., “Survey of Performance Acceleration Techniques
for Network Function Virtualization,” in Pro. IEEE, vol. 107, no. 4, pp.
746-764, April 2019, doi: 10.1109/JPROC.2019.2896848.
[23] JUN. 2020. [online]. Available https://nvlabs.github.io/sionna/
[24] H. Jakob, et al. “Sionna: An Open-Source Library for Next-Generation
Physical Layer Research.” arXiv preprint arXiv:2203.11854 (2022).
[25] M. Rebouc¸as, R. O. Santos, G. Pinto and F. Castor, “How Does Contrib-
utors Involvement Inﬂuence the Build Status of an Open-Source Software
Project?,” in Proc. IEEE/ACM 14th Int. Conf. Mining Softw. Repositories
(MSR), Buenos Aires, 2017, pp. 475-478, doi: 10.1109/MSR.2017.32.

[26] mosaic5g,“Building 5G agile service platform and opening fast wireless

innovation”, Mar.2020.[online]. Available:http://mosaic5g.io/

[27] P. S. Kochhar, D. Lo, J. Lawall and N. Nagappan, “Code Coverage
and Postrelease Defects: A Large-Scale Study on open-source Projects,”
IEEE Trans. Reliability, vol. 66, no. 4, pp. 1213-1228, Dec. 2017, doi:
10.1109/TR.2017.2727062.

[28] T. Zhang, L. Linguaglossa, M. Gallo, P. Giaccone and D. Rossi,
“FloWatcher-DPDK: Lightweight Line-Rate Flow-Level Monitoring in
Software,” IEEE Trans. Netw. Service Manage., vol. 16, no. 3, pp. 1143-
1156, Sept. 2019, doi: 10.1109/TNSM.2019.2913710.

[29] H. Jang, Y. Choi, T. Vo and G. Gim, “A Study on the Derivation of
Utilization Intention Factors of AI Vision Open API,” in Proc. 20th
IEEE/ACIS Int. Conf. Software Eng., Artiﬁcial Intelligence, Networking
and Parallel/Distributed Computing (SNPD), Toyama, Japan, 2019, pp. 3
31-339, doi: 10.1109/SNPD.2019.8935748.

[30] X. Peng et al., “Automatic Generation of API Documentations for Open-
Source Projects,” in Proc. IEEE 3rd Int. Workshop. Dynamic Soft. Doc.
(DySDoc3), Madrid, 2018, pp. 7-8, doi: 10.1109/DySDoc3.2018.00010.
[31] A 5G Americas white paper “5G and the cloud”. Dec. 2020. [online].

Available https://www.5gamericas.org/5g-and-the-cloud/

[32] L. Bonati, M. Polese, S. D’Oro, S. Basagni, and T. Melodia, “Open,
programmable, and virtualized 5G networks: State-of-the-art and the road
ahead”. Comput. Netw. 2020 Dec 9;182:107516.

[33] A. Lara, A. Kolasani and B. Ramamurthy, “Network innovation using
openﬂow: A survey,” IEEE Commun. Surveys Tuts, vol. 16, no. 1, pp.493-
512, 1st Quart., 2014, doi: 10.1109/SURV.2013.081313.00105

[34] N. Anerousis, P. Chemouil, A. A. Lazar, N. Mihai and S. B. Weinstein,
“The Origin and Evolution of Open Programmable Networks and SDN,”
IEEE Commun. Surveys Tut., doi: 10.1109/COMST.2021.3060582.
[35] R. Khan, P. Kumar, D. N. K. Jayakody and M. Liyanage, “A Sur-
vey on Security and Privacy of 5G Technologies: Potential Solu-
tions, Recent Advancements, and Future Directions,” IEEE Commun.

Surveys Tuts., vol. 22, no. 1, pp. 196-248, 1st Quart., 2020, doi:
10.1109/COMST.2019.2933899.

[36] J. Cao et al., “A Survey on Security Aspects for 3GPP 5G Networks,”
IEEE Commun. Surveys Tuts., vol. 22, no. 1, pp. 170-195, 1st Quart.,
2020, doi: 10.1109/COMST.2019.2951818.

[37] I. Parvez, A. Rahmati, I. Guvenc, A. I. Sarwat and H. Dai, ”A Survey on
Low Latency Towards 5G: RAN, Core Network and Caching Solutions,”
IEEE Commun. Surveys Tuts., vol. 20, no. 4, pp. 3098-3130, 4th Quart.
2018, doi: 10.1109/COMST.2018.2841349.

[38] H. Md Farhad, et al. “Recent research in cloud radio access network
(C-RAN) for 5G cellular systems-A survey.” J. Netw. Comput. App. 139
(2019): 31-48.

[39] Gavrilovska, Liljana, Valentin Rakovic, and Daniel Denkovski. “From
cloud ran to open ran.” Wireless Personal Commun. 113.3 (2020): 1523-
1539.

[40] A. Bhat, N. Gupta, J. Thaliath, R. Banerji, V. Sapru, and S. Singh, “Role
of Open-Source in 6G Wireless Networks”,Chapter 17 in the edited book
[Wu, Yulei, et al., eds. 6G mobile wireless networks. Berlin, Germany:
Springer, 202

[41] Masur, Paul H., and Jeffrey H. Reed. ”Artiﬁcial Intelligence in Open

Radio Access Network”, 2021, https://arxiv.org/abs/2104.09445

[42] The Linux Foundation, “Fast packet processing,” Apr. 2020. [online].

Available: http://dpdk.org

[43] Open compute project, “ Programability and task specialization,” Apr.

2020. [online]. Available: https://www.opencompute.org

[44] O-RAN, “O-RAN use cases and deployment scenarios,” Apr. 2020.[on-

line]. Available: https://www.o-ran.org/resources/

[45] P4, “P4 Language Consortium,” Apr. 2020.

[online]. Available:

https://p4.org

[46] Linux, “operating system that enable white box switches,” Apr. 2020.
[online]. Available: https://www.linuxfoundation.org/projects/linux/
[47] DANOS, “Unique network operating system driving the innova-
[online]. Available:

tion across the networking stack,” Apr. 2020.
https://www.danosproject.org/

[48] OpenairCN,

core
https://gitlab.eurecom.fr/oai/openairinterface 5g/wikis/home

network,” Apr.

“Wireless

2020. Available:

[49] M-CORD NGIC, “ Wireless core network implementation,” Apr. 2020.
[online]. Available: https://software.intel.com/en-us/articles/aninteractive-
demo-of-the-next generationinfrastructure -core-referenceimplementation
[50] OpenDaylight, “Management and control of networking equipment,”

Apr. 2020. [online]. Available: https://www.opendaylight.org

[51] ONOS, “Management and control of networking equipment,” Apr. 2020.

[online]. Available: https://onosproject.org

[52] Open vSwitch, “Management and control of networking equipment
with packet processing control ﬂow,” Apr. 2020. [online]. Available:
https://www.openvswitch.org

[53] FD.io, “Processing of packet control,” May. 2020. [online]. Available:

https://fd.io

[54] OpenStack, “Management and control of virtualize resources,” May.

2020. [online]. Available: https://www.openstack.org

[55] Kubernetes, “Management and control of virtualize resources,” Apr.

2020. [online]. Available: https://kubernetes.io

[56] Docker, “Abstraction of shared resources across multiple networking
application,” May. 2020. [online]. Available: https://www.docker.com

[57] ONAP,

“Automation platform,” May. 2020.

[online]. Available:

https://www.onap.org

[58] xRAN, “Automation frame work,” May. 2020. [online]. Available:

http://www.xran.org

[59] Ansible, “Management and orchestration of virtualize networking com-
ponents,” May. 2020. [online]. Available: https://www.ansible.com
[60] XOS, “Management, control and orchestration,” May. 2020. [online].

Available: https://www.opennetworking.org/xos/

[61] open-source MANO (OSM),“Dynamic functionality of network policies
with Management and orchestration,” May. 2020. [online]. Available:
https://osm.etsi.org

[62] YANG, “Modeling tools and language for network functions,” May.

2020. [online]. Available: https://tools.ietf.org/html/rfc6020

[63] uJu, “Modeling tools and language for network functions,” May. 2020.

[online]. Available: http://jujucharms.com

[64] YAML: “Modeling tools and language for network functions framwork,”

May 2020 [online] Available: http://yaml.org

[65] Consul, “Software development method,” May. 2020. [online]. Avail-

able: https://www.consul.io

[66] Puppet, “Software development and automation process,” May. 2020.

[online]. Available: https://puppet.com

[67] Chef, “Validating and deploying workload into NFV,” May. 2020.

[online]. Available: https://www.chef.io/chef/

34

[68] Jenkins, “Validating and deploying workload into NFV,” May. 2020.

[online]. Available: https://jenkins.io/

[69] Apache Kafka, “data streaming protocol with analysis,” May. 2020.

[online]. Available: https://kafka.apache.org

[70] Apache Spark, “Management and control with analytics,” May. 2020.

[online]. Available: https://spark.apache.org/

[71] Automation, “AI framework in Networking,” May. 2020. [online]. Avail-

able: https://www.acumos.org/

[72] Computing, “open-source edge computing,” May. 2020. [online]. Avail-

able: https://www.akraino.org/

[73] SHIELD,

“Cyber

security,” May.

2020.

[online]. Available:

virtualization

“Network
orchestration,

https://torsec.github.io/shieldh2020/about/summary.html
functions
gs

[74] ETSI,
and
[online].
MAN/001 099/001/01.01.01 60/gs NFVMANO 001v010101p.pd
[75] Imadali, Soﬁane, and A. Bousselmi, “Cloud native 5g virtual network
functions: Design principles and use cases,” in Proc. IEEE 8th Int. Symp.
Cloud Service Comput. (SC2), pp. 91-96, 2018.

(nfv) management
2020.
001 V1.1.1,” May.
nfv-swa
https://www.etsi.org/deliver/etsi gs/NFV

etsi
Available:

[76] 3GPP, Technical Speciﬁcation (TS) 36.323, Release 8 “Evolved
(EUTRA); Packet Data Con-
Universal Terrestrial Radio Access
vergence Protocol
[Online].
Available: https://portal.3gpp.org/desktopmodules/Speciﬁcations/ Speciﬁ-
cationDetails.aspx?speciﬁcationId=2439

(PDCP) Speciﬁcation,” version 14.2.0.

[77] 3GPP, Technical Speciﬁcation (TS) 36.323, Release 8 “Evolved
(EUTRA); Radio Link Con-
Universal Terrestrial Radio Access
trol
[Online]. Avail-
able: https://portal.3gpp.org/desktopmodules/Speciﬁcations/ Speciﬁca-
tionDetails.aspx?speciﬁcationId=2439

(RLC) Protocol Speciﬁcation,” version 14.2.0.

[78] F. van Lingen et al., “The unavoidable convergence of NFV, 5G,
and fog: A model-driven approach to bridge cloud and edge,”
IEEE Commun. Mag., vol. 55, no. 8, pp. 28-35, Aug. 2017, doi:
10.1109/MCOM.2017.1600907.

[79] M. O. Ozcan, F. Odaci and I. Ari, “Remote debugging for con-
tainerized applications in edge computing environments,” in Proc. IEEE
Int. Conf. Edge Comput (EDGE), Milan, Italy, 2019, pp. 30-32, doi:
10.1109/EDGE.2019.00021

[80] T. Sechkova, M. Paolino and D. Raho, “Virtualized infrastructure man-
agers for edge computing: Openvim and openstack comparison,” in Proc.
IEEE Int. Symp. Broadband Multimedia Syst. Broadcasting (BMSB),
Valencia, 2018, pp. 1-6, doi: 10.1109/BMSB.2018.8436858.

[81] N. Marathe, A. Gandhi and J. M. Shah, “Docker Swarm and Ku-
bernetes in Cloud Computing Environment,” in Proc. 3rd Int. Conf.
Trends Elect. Inf. (ICOEI), Tirunelveli, India, 2019, pp. 179-184, doi:
10.1109/ICOEI.2019.8862654.

[82] J. Fontenla-Gonz´alez, C. P´erez-Garrido, F. Gil-Casti˜neira, F.

J.
Gonz´alez-Casta˜no and C. Giraldo-Rodriguez, “Lightweight container-
based OpenEPC deployment and its evaluation,” IEEE NetSoft. Conf.
Workshops (NetSoft), Seoul, 2016, pp. 435-440, doi: 10.1109/NET-
SOFT.2016.7502481.

[83] W. Diego, “Evolution Toward the Next Generation Radio Access Net-
work,” in Proc. IFIP Netw. Conf. (Netw.), Paris, France, 2020, pp. 685-
685.

[84] C. Lin, Q. Sun, Z. Liu, S. Zhang, and S. Han, “The big-data-driven
intelligent wireless network: architecture, use cases, solutions, and future
trends,” IEEE Veh. Technol. Mag., vol. 12, no. 4, pp.20 29, 2017

[85] S. Han, I. Chih-Lin, Gang Li, S. Wang and Q. Sun, “Big data enabled
mobile network design for 5g and beyond,” IEEE Commun. Mag., vol.
55, no. 9, pp.150-157, 2017.

[86] J. Sun et al., “An Efﬁcient and Scalable Framework for Processing
Remotely Sensed Big Data in Cloud Computing Environments,” in Proc.
IEEE Trans. Geoscience. Remote Sensing, vol. 57, no. 7, pp. 4294-4308,
Jul. 2019, doi: 10.1109/TGRS.2018.2890513.

[87] H. Zahid, T. Mahmood, A. Morshed and T. Sellis, ”Big data analytics in
telecommunications: literature review and architecture recommendations,”
IEEE/CAA J. Aut. Sinica, vol. 7, no. 1, pp. 18-38, Jan. 2020, doi:
10.1109/JAS.2019.1911795.

[88] Access NOV. 2020. [online]. Available:https://www.darbi.io/
[89] H. Lee, J. Cha, D. Kwon, M. Jeong and I. Park, “Hosting AI/ML
Workﬂows on O-RAN RIC Platform,” in Proc. IEEE Globe. Work-
shops (GC Wkshps, Taipei, Taiwan, 2020, pp. 1-6, doi: 10.1109/GCWk-
shps50303.2020.9367572.

[90] Y. Sun, M. Peng, Y. Zhou, Y. Huang and S. Mao, “Application of
Machine Learning in Wireless Networks: Key Techniques and Open
Issues,” IEEE Commun. Surveys Tuts., vol. 21, no. 4, pp. 3072-3108,
Fourthquarter 2019, doi: 10.1109/COMST.2019.2924243.

[91] S. Kukli´nski, L. Tomaszewski and R. Kołakowski, “On O-RAN, MEC,
SON and Network Slicing integration,” IEEE Globecom Workshops
(GC Wkshps, Taipei, Taiwan, 2020, pp. 1-6, doi: 10.1109/GCWk-
shps50303.2020.9367527.

[92] J. Gomes, J. A. L. Silva and M. E. V. Segatto, “Reducing the 5G
Fronthaul Trafﬁc with O-RAN,” in Proc. SBMO/IEEE MTT-S Inter.
Microwave Optoelec. Conf. (IMOC), Aveiro, Portugal, 2019, pp. 1-3, doi:
10.1109/IMOC43827.2019.9317620.

[93] S. K. Singh, R. Singh and B. Kumbhani, “The Evolution of Radio
Access Network Towards Open-RAN: Challenges and Opportunities,”
IEEE Wireless Commun. Netw. Conf. Workshops(WCNCW), Seoul, Korea
(South), 2020, pp. 1-6, doi: 10.1109/WCNCW48565.2020.9124820.
[94] H. Kumar, V. Sapru and S. K. Jaisawal, “O-RAN based proactive ANR
optimization,” in Proc. IEEE Globecom Workshops (GC Wkshps, 2020,
pp. 1-4, doi: 10.1109/GCWkshps50303.2020.9367582.

[95] O-RAN Working Group 2, “A1 interface: General Aspects and Principles

2.03”, O-RAN.WG2.A1GAP-v02.03, 2021

[96] O-RAN Working Group 1, “Operations and Maintenance Interface 4.0”,

O-RAN.WG1.O1-Interface.0-v04.00, 2020.

[97] O-RAN Working Group 3, “Near-Real-time RAN Intelligent Con-
troller Architecture & E2 General Aspects and Principles 1.01”, O-
RAN.WG3.E2GAP-v01.01, 2020.

[98] O-RAN Working Group 6, “Cloud Platform Reference Design 2.0”, O-

RAN.WG6.CLOUD-REF-v02.00, 2020.

[99] “Telecom Infra Project Project Group”, Dec. 2020. [online]. Available:

https://telecominfraproject.com/project-groups/access

[100] DARPA

“Open

Programmable
Overview and Use Cases”, Oct.
https://www.darpa.mil/program/open-programmable-secure-5g

Secure
2021.

(OPS-5G):
[online]. Available:

5G

[101] A. Aijaz, B. Holden and F. Meng, “Open and Programmable 5G
Network-in-a-Box: Technology Demonstration and Evaluation Results,”
in Proc. IEEE 7th Int. Conf. Netw. Softw. (NetSoft), 2021, pp. 369-371,
doi: 10.1109/NetSoft51509.2021.9492719.
Oct.

[102] ONF,
able:
content/uploads/2013/03/ONF%20Overview%204-pager%20FINAL.pdf

2021.
Avail-
[online].
http://opennetworking.wpengine.com/wp-

[103] S. Das, “From CORD to SDN Enabled Broadband Access (SEBA)
[Invited Tutorial],” IEEE/OSA J. Opt. Commun. Netw., vol. 13, no. 1, pp.
A88-A99, Jan. 2021, doi: 10.1364/JOCN.402153.

35

[117] B. Andrus, A. Autenrieth, T. Szyrkowiec, J. J. V. Olmos and I. T.
Monroy, “Evaluation and experimental demonstration of SDN-enabled
ﬂexi-grid optical domain controller based on NETCONF/YANG,” in
Proc. IEEE/IFIP Netw. Oper. Manag. Symp., Taipei, 2018, pp. 1-7, doi:
10.1109/NOMS.2018.8406170

[118] S. Ahearne, Y. Verbishchuk, C. Sreenan and F. Gunning, “Software
deﬁned control of tunable optical
transceivers using NETCONF and
YANG,” in Proc. Eur. Conf. Netw. Commun. (EuCNC), Ljubljana, Slove-
nia, 2018, pp. 1-86, doi: 10.1109/EuCNC.2018.8443188

[119] N. Sambo et al., “Next generation sliceable bandwidth variable
transponders,” IEEE Commun. Mag., vol. 53, no. 2, pp. 163-171, Feb.
2015, doi: 10.1109/MCOM.2015.7045405

[120] R. Casellas, R. Mart´ınez, R. Vilalta and R. Mu˜noz, “Abstraction
and Control of Multi-Domain Disaggregated Optical Networks With
OpenROADM Device Models,” J. Lightwave Technol., vol. 38, no. 9,
pp. 2606-2615, May. 2020, doi: 10.1109/JLT.2020.2969248.

[121] H. Nishizawa et al., ”Open whitebox architecture for smart integration
of optical networking and data center technology [Invited],” IEEE/OSA
J. Opt. Commun. Netw., vol. 13, no. 1, pp. A78-A87, Jan. 2021, doi:
10.1364/JOCN.403205.

[122] E. Riccardi, P. Gunning, ´O. G. de Dios, M. Quagliotti, V. L´opez and A.
Lord, ”An Operator view on the Introduction of White Boxes into Optical
Networks,” J. Lightwave Technol., vol. 36, no. 15, pp. 3062-3072, Aug.
2018, doi: 10.1109/JLT.2018.2815266.

[123] C. Manso et al., “TAPI-enabled SDN control for partially disaggregated
multi-domain (OLS) and multi-layer (WDM over SDM) optical networks
[Invited],” IEEE/OSA J. Opt. Commun. Netw., vol. 13, no. 1, pp. A21-
A33, Jan. 2021, doi: 10.1364/JOCN.402187.
[124] OpenConﬁg Working Group. May. 2020.

[online]. Available:,

https://openconﬁg.net/

[125] N. Gkatzios, M. Anastasopoulos, A. Tzanakaki and D. Simeonidou,
“Compute Resource Disaggregation: An Enabler for Efﬁcient 5G RAN
Softwarisation,” European Conf. Netw. Commun. (EuCNC), Ljubljana,
Slovenia, 2018, pp. 1-5, doi: 10.1109/EuCNC.2018.8443270.

[126] J. Zheng et al., “Optimizing NFV Chain Deployment in Software-
Deﬁned Cellular Core,” IEEE J. Sel. Commun., vol. 38, no. 2, pp. 248-
262, Feb. 2020, doi: 10.1109/JSAC.2019.2959180.

[127] Stratum, “White Box Reference Design,” Apr. 2020. [online]. Avail-

able: https://www.opennetworking.org/stratum/
[128] Cumulus networks, “cumulus,” Apr. 2020.

[online]. Available:

[104] Future Mobile Communication Forum, “ Open5G: 5G Network Open

https://cumulusnetworks.com/

Ecology White Paper Version 1.0,”

[129] Big Switch: “Arista acquires big switch,” Apr. 2020. [online]. Available:

[105] Magma Facebook

Initiative, Oct.

2021.

[online]. Available:

https://www.facebook.com/connectivity/solutions/magma

[106] N. Nikaein, X. Vasilakos and A. Huang, “LL-MEC: Enabling Low
Latency Edge Applications,” in Proc. IEEE 7th Int. Conf. Cloud Netw.
(CloudNet), 2018, pp. 1-7, doi: 10.1109/CloudNet.2018.8549500.
Foundation,
Oct.

“Converged Multi-Access
Available:

[107] Open
and
https://opennetworking.org/comac/

(COMAC)”,

Networking

[online].

2021.

Core

[108] L. Peterson et al., “Central ofﬁce re-architected as a data cen-
ter,” IEEE Commun. Mag., vol. 54, no. 10, pp. 96-101, Oct. 2016,
doi:10.1109/MCOM.2016.7588276

[109] C. Zheng, L. Wang, S. A. McKee, L. Zhang, H. Ye and J. Zhan, “XOS:
An application-deﬁned operating system for data center computing,” in
Proc. IEEE Int. Conf. Big Data (Big Data), Seattle, WA, USA, 2018, pp.
398-407, doi: 10.1109/BigData.2018.8622507

[110] M. Rufﬁni and F. Slyne, “Moving the Network to the Cloud: The Cloud
Central Ofﬁce Revolution and Its Implications for the Optical Layer,”
J. Lightwave Technol., vol. 37, no. 7, pp. 1706-1716, Apr. 2019, doi:
10.1109/JLT.2019.2891990.

[111] M. Yuang et al., “OPTUNS: Optical intra-data center network archi-

tecture and prototype testbed for a 5G edge cloud [Invited],”

[112] ONL,“Open

network

linux,” Apr.

2020.

[online]. Available:

http://opennetlinux.org/
Azure,

[113] M.

“Sonic,”

Apr.

2020.

[Online].

Available:

https://github.com/Azure/SONiC

[114] C. Sean, et al. “FBOSS: building switch software at scale,” in. Proc.

Conf. ACM Special Interest Group Data Commun., 2018.

[115] A. Mattheus, M. Gunkel, A. Napoli and G. Grammel, “Black link
versus cutting edge transceivers: A comparison for next generation WDM
optical networks,” Opt. Fiber Commun. Conf. Exh. (OFC), Anaheim, CA,
2016, pp. 1-3.

[116] O.O. Ajibola, T. H. El-Gorashi, and J. M. Elmirghani, “Disaggregation
for improved efﬁciency in fog computing era,” in Proc IEEE 21st Int.
Conf. Transp. Opt. Netw. (ICTON), pp. 1-7, 2019.

https://www.bigswitch.com/

[130] Open Network Linux, “The gnu operating system,” Apr. 2020. [online].

Available: http://opennetlinux.org/

[131] DENT, “DENT: A NOS for everyone else,” Apr. 2020. [online].

Available: https://dent.dev/

[132] Pica, “Pica8,” Apr. 2020. [online]. Available:https://www.pica8.com/
[133] FTOS, “Network hardware and devices,” Apr. 2020. [online]. Available:
https:// www.dell.com/en-us/work/shop/cty/sc/networking-products
Apr.

Available:

infusion,”

[134] Ip,

[online].

2020.

“Ip

https://www.ipinfusion.com/

[135] Infera, Apr. 2020. [online]. Available: “https://www.inﬁnera.com/,”
Project, Apr.
[136] Linux

[online]. Available:

Foundation

2020.

https://www.openswitch.net/

[137] A. Alba et al., “Efﬁcient and agile storage management in software
deﬁned environments,” IBM J. R&D., vol. 58, no. 2/3, pp. 5:1-5:12, Mar.
May 2014, doi:10.1147/JRD.2014.2302381

[138] A. S. Thyagaturu, A. Mercian, M. P. McGarry, M. Reisslein and W.
Kellerer, “Software deﬁned optical networks (sdons): A comprehensive
survey,” IEEE Commun. Surveys Tuts, vol. 18, no. 4, pp. 2738-2786, 4th
Quart. 2016, doi: 10.1109/COMST.2016.2586999

[139] A. Campanella et al., “ODTN: Open Disaggregated Transport Network.
Discovery and Control of a Disaggregated Optical Network through open-
source Software and Open APIs,” in Proc. Opt. Fiber Commun. Conf.
Exhibition (OFC), San Diego, CA, USA, 2019, pp. 1-3.

[140] A. Roozbeh et al. “Software-deﬁned “hardware” infrastructures: A
survey on enabling technologies and open research directions,” IEEE
Commun. Surveys Tuts, vol. 20, no. 3, pp. 2454-2485, 3rd Quart. 2018,
doi: 10.1109/COMST.2018.2834731

[141] C. Vega, J. F. Zazo, H. Meyer, F. Zyulkyarov, S. Lopez-Buedo and
J. Aracil, “Diluting the Scalability Boundaries: Exploring the use of
disaggregated architectures for high-level network data analysis,” in Proc.
IEEE 19th Int. Conf. High Perform. Comput. and Commun.; in Proc.
IEEE 15th Int. Conf. Smart City; in Proc. IEEE 3rd Int. Conf. Data
Sci. Syst. (HPCC/SmartCity/DSS), Bangkok, 2017, pp. 340-347, doi:
10.1109/HPCCSmartCity-DSS.2017.45

[142] Y. A. Ushakov, P. N. Polezhaev, A. E. Shukhman, L. V. Legashev
and N. F. Bakhareva, “Simulation of a corporate network based on
software deﬁned infrastructure and network function virtualization,” in
Proc. 21st Int. Conf. Eng. Telecommun. (EnT), Moscow, 2017, pp. 42-46,
doi: 10.1109/ICEnT.2017.16

[143] G. Kandiraju, H. Franke, M. D. Williams, M. Steinder and S. M. Black,
“Software deﬁned infrastructures,” IBM J. R&D., vol. 58, no. 2/3, pp. 2:1-
2:13, March-May 2014, doi:10.1147/JRD.2014.2298133

[144] A. Manzalini and N. Crespi, “SDN and NFV for network cloud
computing: A universal operating system for sd infrastructures,” in Proc.
IEEE 4th Symp. Netw. Comput. Appl. (NCCA), Munich, 2015, pp. 1-6,
doi: 10.1109/NCCA.2015.11.

[145] P. Hu, H. Ning, L. Chen and M. Daneshmand, “An Open Internet
of Things System Architecture Based on Software-Deﬁned Device,”
IEEE Internet Things J., vol. 6, no. 2, pp. 2583-2592, Apr. 2019, doi:
10.1109/JIOT.2018.2872028.

[146] P. Hu, W. Chen, C. He, Y. Li and H. Ning, “Software-Deﬁned
Edge Computing (SDEC): Principle, Open IoT System Architecture,
Applications, and Challenges,” IEEE Internet. Things J., vol. 7, no. 7,
pp. 5934-5945, July 2020, doi: 10.1109/JIOT.2019.2954528.

[147] A. Belkhir, M. Abdellatif, R. Tighilt, N. Moha, Y. -G. Gu´eh´eneuc and
´E. Beaudry, “An Observational Study on the State of REST API Uses in
Android Mobile Applications,” in Proc. IEEE/ACM 6th Int. Conf. Mobile
Soft. Eng. Syst. (MOBILESoft), Montreal, QC, Canada, 2019, pp. 66-75,
doi: 10.1109/MOBILESoft.2019.00020.

[148] L. Li and W. Chou, “Designing Large Scale REST APIs Based on
REST Chart,” in Proc. IEEE Int. Conf. Web Service, New York, NY,
2015, pp. 631-638, doi: 10.1109/ICWS.2015.89.

[149] C. Severance, “Roy T. ﬁelding: Understanding the rest style,” Comput.,

vol. 48, no. 6, pp. 7-9, Jun. 2015, doi: 10.1109/MC.2015.170.

[150] OpenFlow, “OpenFlow Switch Speciﬁcation,” Mar. 2020. [online].
Available: https:// www./uploads /2013/04/openﬂow-spec-v1.0.0.pdf

[151] Open
cess
able:
netdnassl.com/wpcontent/uploads/2014/10/Openﬂow-spec-v1.1.0.pdf

ac-
Avail-
2020.
https://3vf60mmveq1g8vzn48q2o71a-wpengine

“Transforming
[online].

Networking
edge

networks,” Mar.

Foundation,

and

and

Foundation,

Networking
edge

[152] Open
cess
able:
netdnassl.com/wpcontent/uploads/2014/10/Openﬂow-spec-v1.1.0.pdf
[153] OpenFlow, “OpenFlow Switch Speciﬁcation,” Mar. 2020. [online].
Available: https:// www./uploads /2013/04/openﬂow-spec-v1.0.0.pdf

ac-
Avail-
2020.
https://3vf60mmveq1g8vzn48q2o71a-wpengine

“Transforming
[online].

networks,” Mar.

[154] Open

Networking
Mar.

Foundation,
speciﬁcation,”
2020.
https://www.opennetworking.org/wpcontent/uploads/2014/10/openﬂow-
spec-v1.2.pdf

switch
Available:

“Openﬂow

[online].

[155] A. Mondal, S. Misra and I. Maity, “AMOPE: Performance Analysis of
OpenFlow Systems in Software-Deﬁned Networks,” IEEE Syst. J., vol.
14, no. 1, pp. 124-131, Mar. 2020, doi: 10.1109/JSYST.2019.2912843.

[156] Y. Jia, L. Xu, Y. Yang and X. Zhang, “Lightweight Automatic Dis-
covery Protocol for OpenFlow-Based Software Deﬁned Networking,”
IEEE Commun. Letters, vol. 24, no. 2, pp. 312-315, Feb. 2020, doi:
10.1109/LCOMM.2019.2956033.

[157] R. Aryan, F. Brattensborg, A. Yazidi and P. E. Engelstad, “Checking
the OpenFlow Rule Installation and operational veriﬁcation,” in Proc.
IEEE 44th Conf. Comput. Netw. (LCN), Osnabrueck, Germany, 2019,
pp. 250-253, doi: 10.1109/LCN44214.2019.8990808.

[158] “3GPP Release 14 Speciﬁcation”, Apr. 2020 [online]. Available:

http://www.3gpp.org/rele-14/

[159] C. Rosa, M. Kuusela, F. Frederiksen and K. I. Pedersen, “Standalone
LTE in Unlicensed Spectrum: Radio Challenges, Solutions, and Perfor-
mance of MulteFire,” IEEE Commun. Mag., vol. 56, no. 10, pp. 170-177,
OCTOBER 2018, doi: 10.1109/MCOM.2018.1701029.

[160] Z. Jiang and S. Mao, “Harmonious Coexistence and Efﬁcient Spectrum
Sharing for LTE-U and Wi-Fi,” in Proc. IEEE Int. Conf. Mobile Ad Hoc.
Sensor Sys. (MASS), 2017, pp. 275-283, doi: 10.1109/MASS.2017.69.
[161] V. Sathya, M. Mehrnoush, M. Ghosh and S. Roy, “Analysis of
CSAT Performance in Wi-Fi and LTE-U Coexistence,” IEEE Int.
Conf. Commun. Workshops (ICC Workshops), 2018, pp. 1-6, doi:
10.1109/ICCW.2018.8403510.

[162] Pica8 White Paper,

box thinking,” Apr. 2020.
com/wpcontent/uploads/pica -whitepaper-white-box.pdf

“Bare metal networking-leveraging white
[online]. Available: https://www.pica8

[163] Cisco, “CX600 Metro Services Platform,” Apr. 2020. [online]. Avail-
able: https://www.huawei.com/ucmf/groups /public/documents /attach-
ments

36

[164] IBM, “IBM servers the cutting edge of security and reliability,” Apr.
2020. [online]. https://www.ibm.com/i-infrastructure/servers access

[165] Catalyst 2960-X Series models, Apr. 2020.

[online]. Available:

https://www.cisco.com/c/en/us/products/switches/catalyst-2960-x-
seriesswitches/index.html

[166] OVS, “Open vswitch openvswitch,” Apr. 2020. [online]. Available:

http://vswitch.org/open-vswitch/

[167] Network,

“TsingMa,”
http://www.centecnetworks.com/en/main.asp
[168] Network, “Juniper network,” Apr. 2020.

2020.

Apr.

In-
dependent/junos/ - sdn-openﬂow-supported-platforms.html access top-
ics/reference/general/junos

[online]. Available:

[online].

Available:

[169] K.Phemius, M.Bouet, and J.Leguay, “Disco: Distributed multi-domain
sdn controllers,” in Proc. IEEE Netw. Oper. Manag. Symp.(NOMS), pp.
1-4, 2014.

[170] C. Bouras, A. Kollia and A. Papazois, “Teaching 5G networks
using the ONOS SDN controller,” in Proc. 9th Int. Conf. Ubiq-
uitous and Future Netw. (ICUFN), Milan, 2017, pp. 312-317, doi:
10.1109/ICUFN.2017.7993800

[171] N. Sambo, “Locally automated restoration in SDN disaggregated
networks,” IEEE/OSA J. Opt. Commun. Netw., vol. 12, no. 6, pp. C23-
C30, Jun. 2020, doi: 10.1364/JOCN.386357.

[172] T. Hu, P. Yi, J. Zhang and J. Lan, “A distributed decision mecha-
nism for controller load balancing based on switch migration in SDN,”
China Communications, vol. 15, no. 10, pp. 129-142, Oct. 2018, doi:
10.1109/CC.2018.8485475.

[173] B. Almadani, A. Beg and A. Mahmoud, “DSF: A Distributed SDN
Control Plane Framework for the East/West Interface,” IEEE Access, vol.
9, pp. 26735-26754, 2021, doi: 10.1109/ACCESS.2021.3057690.

[174] M. A. Togou, D. A. Chekired, L. Khoukhi and G. Muntean, “A
Hierarchical Distributed Control Plane for Path Computation Scalabil-
ity in Large Scale Software-Deﬁned Networks,” IEEE Trans. Netw.
Service Manag., vol. 16, no. 3, pp. 1019-1031, Sept. 2019, doi:
10.1109/TNSM.2019.2913771.

[175] P. Vizarreta et al., “Assessing the Maturity of SDN Controllers
With Software Reliability Growth Models,” IEEE Trans. Netw. Ser-
vice Manage., vol. 15, no. 3, pp. 1090-1104, Sep. 2018, doi:
10.1109/TNSM.2018.2848105.

[176] T. Das, V. Sridharan and M. Gurusamy, “A Survey on Controller
Placement in SDN,” IEEE Commun. Surveys. Tuts., vol. 22, no. 1, pp.
472-503, 4th Quart. 2020, doi: 10.1109/COMST.2019.2935453.

[177] L. Gavrilovska, V. Rakovic, A. Ichkov, D. Todorovski and S. Marinova,
“Flexible C-RAN: Radio technology for 5G,” in Proc. 13th Int. Conf. Adv.
Technol. Syst. Services. Telecommun. (TELSIKS), Nis, 2017, pp. 255-264,
doi: 10.1109/TELSKS.2017.8246276.

[178] I. Michael, “Getting started with openbts,” ISBN 978 1 491 91065 8,

published by OReilly Media, Inc, Copyright 2015 Range Netw.

[179] X. Jiao, W. Liu, M. Mehari, M. Aslam and I. Moerman, “openwiﬁ: a
free and open-source IEEE802.11 SDR implementation on SoC,” in Proc.
IEEE 91st Veh. Technol. Conf. (VTC2020-Spring), Antwerp, Belgium,
2020, pp. 1-2, doi: 10.1109/VTC2020-Spring48590.2020.9128614.
[180] H. Wu, T. Wang, Z. Yuan, C. Peng, Z. Li, Z. Tan, B. Ding, X. Li,Y. Li,
J. Liu et al., “The tick programmable low-latency sdr system,” in Proc.
23rd Annu. Int. Conf. Mobile Comput. Netw. ACM, 2017, pp. 101–113.
[181] B. Bloessl, M. Segata, C. Sommer and F. Dressler, “Performance
Assessment of IEEE 802.11p with an open-source SDR-Based Prototype,”
IEEE Trans. Mobile Comput., vol. 17, no. 5, pp. 1162-1175, 1 May 2018,
doi: 10.1109/TMC.2017.2751474.

[182] Osmocom,

“Openbsc,”

Feb.

2020.

[Online].

Available:

https://osmocom.org/projects/openbsc/wiki/OpenBSC

[183] I. Gomez-Miguelez, A. Garcia-Saavedra, P. D. Sutton, P. Serrano, C.
Cano, and D. J. Leith,“srsLTE: An open-source platform for LTE evolu-
tion and experimentation,” In Proc. 10th ACM International Workshop.
Wireless Netw. Testbeds. Exper. Evaluation. Charac. 2016 pp. 25-32
[184] OpenAirInterface, “OpenAirInterface Software Alliance,” Feb. 2020.

[Online]. Available: www.openairinterface.org/

[185] Openair5G, “Implementing of the 5g radio access network,” Apr. 2020.

Available: https://gitlab.eurecom.fr/oai/openairinterface

[186] F. Kaltenberger, G. d. Souza, R. Knopp and H. Wang, “The OpenAir-
Interface 5G New Radio Implementation: Current Status and Roadmap,”
In Proc. 23rd Inter. ITG Workshop. Smart Antennas, 2019, pp. 1-5.
[187] R. -G. Cheng et al., “Demo abstract — Design and implementation of
an open source NB-IoT eNB,” in Proc. IEEE Conference on Computer
Communications Workshops (INFOCOM WKSHPS), 2018, pp. 1-2, doi:
10.1109/INFCOMW.2018.8406868.

[197] OpenFog Reference Architecture

for Fog Computing, Archit.
Work. Group, OpenFog Consortium, [online]: Dec. 2021 Available:
https://www.iiconsortium.org/pdf/OpenFog Reference Architecture 2 09 17.pdf

[188] A. Maghrabi, W. Hardjawana, P. L. Yeoh and B. Vucetic, “An Ex-
perimental Inter-Slice RAN Controller for 4G/5G Cellular Networks,” In
Proc Inter. Symp. Netw. Comput. Commun. (ISNCC), 2021, pp. 1-6, doi:
10.1109/ISNCC52172.2021.9615770.

[189] H. Kim, J. Lee, E. Lee and Y. Kim, “Touching the Untouchables: Dy-
namic Security Analysis of the LTE Control Plane,” in Proc. IEEE Sympo.
Secur. Priv. (SP), 2019, pp. 1153-1168, doi: 10.1109/SP.2019.00038.
[190] Y. Lin, “Keynote topic: Network cloudiﬁcation: SDN-NFV and
5GMEC with edge and fog computing,” in Proc. 27th Int. Telecommun.
Netw. and Appl. Conf. (ITNAC), Melbourne, VIC, 2017, pp. 1-8, doi:
10.1109/ATNAC.2017.8215347

[191] S. Matoussi,

I. Fajjari, S. Costanzo, N. Aitsaadi and R. Lan-
gar, “5G RAN: Functional Split Orchestration Optimization,” IEEE
J. Selec. Commun., vol. 38, no. 7, pp. 1448-1463, Jul. 2020, doi:
10.1109/JSAC.2020.2999685.

[192] eCPRI Speciﬁcation V1.1. Interface Speciﬁcation, Common Public

Radio Interface, Jan. 2018

[193] L. M. P. Larsen, A. Checko and H. L. Christiansen, “A survey of
the functional splits proposed for 5g mobile crosshaul networks,” IEEE
Commun. Surveys Tuts., vol. 21, no. 1, pp. 146-172, 1st Quart., 2019,
doi: 10.1109/COMST.2018.2868805.

[194] L. Zhao, G. Zhou, G. Zheng, C. -L. I, X. You and L. Hanzo,
“Open-Source Multi-Access Edge Computing for 6G: Opportunities
and Challenges,” IEEE Access, vol. 9, pp. 158426-158439, 2021, doi:
10.1109/ACCESS.2021.3130418.

[195] M. Yannuzzi et al., “Toward a converged OpenFog and ETSI MANO
architecture,” in Proc IEEE Fog World Congress (FWC), 2017, pp. 1-6,
doi: 10.1109/FWC.2017.8368535.

[196] B. A. Martin et al., “OpenFog security requirements and approaches,”
IEEE Fog World Congress (FWC), 2017, pp. 1-6, doi:

in Proc.
10.1109/FWC.2017.8368537.

[198] A. Modarresi, S. Gangadhar and J. P. G. Sterbenz, “A framework for
improving network resilience using SDN and fog nodes,” in Proc. 9th
Inter. Workshop. Resilient Netw. Design. Modeling (RNDM), 2017, pp.
1-7, doi: 10.1109/RNDM.2017.8093036.

[199] I. Afolabi, T. Taleb, K. Samdanis, A. Ksentini and H. Flinck, “Network
Slicing and Softwarization: A Survey on Principles, Enabling Technolo-
gies, and Solutions,” IEEE Commun. Surveys. Tut., vol. 20, no. 3, pp.
2429-2453, 3rd Quart. 2018, doi: 10.1109/COMST.2018.2815638.

[200] CUPS, “Control user plane separation,” May. 2020.

[online].
https://www.cisco.com/c/en/us/solutions/collateral/service-

Available:
provider/ultraservices-platform/data-sheet-c78-741416.html

[201] K. Liang, G. Liu, L. Zhao, X. Chu, S. Wang and L. Hanzo, “Perfor-
mance Analysis of Cellular Radio Access Networks Relying on Control-
and User-Plane Separation,” IEEE Trans. Veh. Technol., vol. 68, no. 7,
pp. 7241-7245, Jul. 2019, doi: 10.1109/TVT.2019.2918546.

[202] Zhao, Hui, L. Zhao, K. Liang, and C. Pan, “Radio access network
slicing based on C/U plane separation,” China Commun., vol. 14, no. 12,
pp. 134-141, 2017

[203] M. Kourtis et al., “T-NOVA: An Open-Source MANO Stack for NFV
Infrastructures,” IEEE Trans. Netw. Service Manag., vol. 14, no. 3, pp.
586-602, Sept. 2017, doi: 10.1109/TNSM.2017.2733620.

[204] OpenStack, “Virtual

infrastructure manager,” May. 2020. [Online].

Available: https://www.openstack.org/

[205] NOVA, “Management and control,” May. 2020. [online]. Available:
https://www.openstack.org/software/releases/queens/componens/nova Ac-
cess

[206] NFV MANO, “Management and orchestration,” Apr. 2020. [online].
Available: https://www.etsi.org/deliver/etsi gs/NFV- MAN/001 099/001
/01.01.01 60/gs NFV-MAN001v010101p.pdf
[207] ONAP, “Automation platform,” May. 2020.

[online]. Available:

https://www.onap.org

[208] Q. Qi and F. Tao, “A Smart Manufacturing Service System Based on
Edge Computing, Fog Computing, and Cloud Computing,” IEEE Access,
vol. 7, pp. 86769-86777, 2019, doi: 10.1109/ACCESS.2019.2923610.

[209] Dr. Chih-Lin, and China mobile “O-RAN:

open-source

by
https://

and more, Dec.
docbox.etsi.org/Workshop/2018./201812

empowered
Available:
OAI/WORKSHOP/KEYNOTES/CHINAMOBILE CHIHLIN I.pdf
[210] A. Umesh, T. Yajima, T. Uchino, and S. Okuyama, “Overview of
ORAN fronthaul speciﬁcations,” NTT DOCOMO Tech. J pp. 46-59, 2019.
security in 5G:
[online]. Available:

[211] 5G americas white paper, “The evolution of

threat”, NOV.

of mobile

A slice

2020.

2019.

ICDT convergence
[online].
ETSI

37

https://www.5gamericas.org/wp-content/uploads/2019/08/5G-Security-
White-Paper 8.15.pdf

[212] E. Calvanese Strinati et al., “6G: The next frontier: From holographic
messaging to artiﬁcial intelligence using subterahertz and visible light
communication,” IEEE Veh. Technol. Mag., vol. 14, no. 3, pp. 42-50,
Sep. 2019, doi: 10.1109/MVT.2019.2921162

[213] D. Kalbande, Z. khan, S. Haji and R. Haji, “6G-next gen mobile
wireless communication approach,” in Proc. Int. conf. Elect. Commun.
Aerospace Technol. (ICECA), Coimbatore, India, 2019, pp. 1-6, doi:
10.1109/ICECA.2019.8821934

[214] X. Liang and X. Qiu, “A software deﬁned security architecture for
SDN-based 5G network,” in Proc. IEEE Int. Conf. Netw. Infrastructure
and Digit. Content (IC-NIDC), Beijing, 2016, pp. 17-21, doi: 10.1109/IC-
NIDC.2016.7974528.

[215] C. Bouras, A. Kollia and A. Papazois, “Teaching network secu-
rity in mobile 5G using ONOS SDN controller,” in Proc. IEEE 9th
Int. Conf. Ubiquitous. Future Netw. (ICUFN), 2017, pp. 465-470, doi:
10.1109/ICUFN.2017.7993828.

[216] Z. Lina and Z. Dongzhao, “A New Network Security Architecture
Based on SDN / NFV Technology,” in Proc. Int. Conf. Comput. Eng.
Appl. (ICCEA), Guangzhou, China, 2020, pp. 669-675, doi: 10.1109/IC-
CEA50009.2020.00146.

[217] N. Ravi and M. S. Selvaraj, “TeFENS: Testbed For Exper-
IEEE 5G
imenting Next-Generation-Network Security,”
World Forum (5GWF), Silicon Valley, CA, 2018, pp. 204-209, doi:
10.1109/5GWF.2018.8516708.

in Proc.

[218] A. K. Murthy, R. Parthasarathi and V. Vetriselvi, “Security Testbed for
Next Generation Mobile Networks,” in Proc. ISEA Conf. Security. Privacy
(ISEA-ISAP), Guwahati, India, 2020, pp. 122-129, doi: 10.1109/ISEA-
ISAP49340.2020.235010.

[219] N. Neshenko, E. Bou-Harb, J. Crichigno, G. Kaddoum and N. Ghani,
“Demystifying IoT Security: An Exhaustive Survey on IoT Vulnerabilities
and a First Empirical Look on Internet-Scale IoT Exploitations,” IEEE
Commun. Surveys Tuts., vol. 21, no. 3, pp. 2702-2733, 3rd Quart. 2019,
doi: 10.1109/COMST.2019.2910750.

[220] Z. Li, W. Xing, S. Khamaiseh and D. Xu, “Detecting Saturation
Attacks Based on Self-Similarity of OpenFlow Trafﬁc,” IEEE Trans.
Netw. Service Manag., vol. 17, no. 1, pp. 607-621, Mar. 2020, doi:
10.1109/TNSM.2019.2959268.

[221] M. A. Javed and S. khan Niazi, “5G Security Artifacts (DoS
Int. Conf. Commun. Tech-
(ComTech), Rawalpindi, Pakistan, 2019, pp. 127-133, doi:

/ DDoS and Authentication),” in Proc.
nol.
10.1109/COMTECH.2019.8737800.

[222] M. Werner, R. Schilling, T. Unterluggauer and S. Mangard, “Protecting
RISC-V Processors against Physical Attacks,” in Proc. Design Automation
Test Eur. Conf. Exhibition (DATE), Florence, Italy, 2019, pp. 1136-1141,
doi: 10.23919/DATE.2019.8714811.

[223] Kim, Hwankuk, “5G core network security issues and attack classiﬁ-
cation from network protocol perspective,” J. Int. Services Inf. Secur. 10,
no. 2 (2020): 1-15.

[224] G. Shang, P. Zhe, X. Bin, H. Aiqun and R. Kui, “FloodDefender:
Protecting data and control plane resources under SDN-aimed DoS
attacks,” IEEE Conf. Comput. Commun., Atlanta, GA, 2017, pp. 1-9,
doi: 10.1109/INFOCOM.2017.8057009.

[225] B. Lantz et al, “ONOS: towards an open, distributed SDN OS,” in
Proc. 3rd workshop Hot topics Softw. Deﬁned Netw., pp. 1-6, 2014
[226] I. Farris, T. Taleb, Y. Khettab and J. Song, “A Survey on Emerging
SDN and NFV Security Mechanisms for IoT Systems,” IEEE Commun.
Surveys Tuts., vol. 21, no. 1, pp. 812-837, 4th Quart., 2019, doi:
10.1109/COMST.2018.2862350.

[227] T. Dargahi, A. Caponi, M. Ambrosin, G. Bianchi and M. Conti, “A
Survey on the Security of Stateful SDN Data Planes,” IEEE Commun.
Surveys Tuts., vol. 19, no. 3, pp. 1701-1725, 3rd Quart. 2017, doi:
10.1109/COMST.2017.2689819.

[228] D. B. Rawat and S. R. Reddy, “Software Deﬁned Networking Ar-
chitecture, Security and Energy Efﬁciency: A Survey,” IEEE Com-
mun. Surveys Tuts, vol. 19, no. 1, pp. 325-346, 1st Quart. 2017, doi:
10.1109/COMST.2016.2618874.

[229] D. Ageyev, O. Bondarenko, W. Alfroukh and T. Radivilova, “Provision
security in SDN/NFV,” in Proc. Int. Conf. Adv. Trends Radio elect.
Telecommun. Comput. Eng. (TCSET), Slavske, 2018, pp. 506-509, doi:
10.1109/TCSET.2018.8336252.

[230] D. Rupprecht, A. Dabrowski, T. Holz, E. Weippl and C. P¨opper, “On
Security Research Towards Future Mobile Network Generations,” IEEE
Commun. Surveys Tuts., vol. 20, no. 3, pp. 2518-2542, 3rd Quart. 2018,
doi: 10.1109/COMST.2018.2820728.

[231] I. Ahmad, S. Shahabuddin, T. Kumar, J. Okwuibe, A. Gurtov and
M. Ylianttila, ”Security for 5G and Beyond,” IEEE Commun. Sur-
veys Tuts., vol. 21, no. 4, pp. 3682-3722, 4th Quart. 2019, doi:
10.1109/COMST.2019.2916180.

[232] X. Hu, C. Liu, S. Liu, W. You, Y. Li and Y. Zhao, “A System-
atic Analysis Method for 5G Non-Access Stratum Signalling Secu-
rity,” IEEE Access, vol. 7, pp. 125424-125441, 2019, doi: 10.1109/AC-
CESS.2019.2937997.

[233] G. H. S. Carvalho, I. Woungang, A. Anpalagan and I. Traore, “When
Agile Security Meets 5G,” IEEE Access, vol. 8, pp. 166212-166225, 2020,
doi: 10.1109/ACCESS.2020.3022741.

[234] B. Pingle, A. Mairaj and A. Y. Javaid, “Real-World Man-in-the-Middle
(MITM) Attack Implementation Using open-source Tools for Instructional
Use,” in Proc. IEEE Int. Conf. Elect/Inform. Technol. (EIT), Rochester,
MI, 2018, pp. 0192-0197, doi: 10.1109/EIT.2018.8500082.

[235] J. Huang, D. Fang, Y. Qian and R. Q. Hu, “Recent Advances and Chal-
lenges in Security and Privacy for V2X Communications,” IEEE J. Veh.
Technol., vol. 1, pp. 244-266, 2020, doi: 10.1109/OJVT.2020.2999885.

[236] Ericsson

5G

security,

NOV.

2021

[online].

https://www.ericsson.com/en/reports-and-papers/white-papers/5g-
security—enabling-a-trustworthy-5g-system

[237] Ericsson security considerations of cloud RAN, NOV. 2021 [online].
https://www.ericsson.com/4a67b7/assets/local/reports-papers/further-
insights/doc/02092021-12911-security-considerations-for-cloud-ran.pdf

[238] AT&T

5G

[online].
https://cybersecurity.att.com/blogs/security-essentials/what-is-5g-security
[online].

security,

security,

2021.

2021.

NOV.

NOV.

5G

[239] Nokia

https://www.nokia.com/sites/default/ﬁles/2021-05/Whitepaper-5G-
security-Nokia-STC-March-31-2021.pdf

[240] Huawei

2021.
https://www.huawei.com/en/trust-center/5g-cyber-security

security,

NOV.

5G

[online].

[241] Open

5G

Core,

NOV.

2020.

[online].

Avail-

able:https://www.open5gcore.org/

[242] A. Ksentini, P. A. Frangoudis, A. PC and N. Nikaein, “Providing
Low Latency Guarantees for Slicing-Ready 5G Systems via Two-Level
MAC Scheduling,” IEEE Network, vol. 32, no. 6, pp. 116-123, 2018, doi:
10.1109/MNET.2018.1800005.

[243] S. Jaffry, R. Hussain, X. Gui and S. F. Hasan, “A Comprehensive
Survey on Moving Networks,” IEEE Commun. Surveys Tuts., vol. 23, no.
1, pp. 110-136, 1st Quart., 2021, doi: 10.1109/COMST.2020.3029005.

[244] C. Tian, A. Munir, A. X. Liu, J. Yang and Y. Zhao, “OpenFunction:
An Extensible Data Plane Abstraction Protocol for Platform-Independent
Software-Deﬁned Middleboxes,” in Proc. IEEE/ACM Trans. Netw., vol.
26, no. 3, pp. 1488-1501, June 2018, doi: 10.1109/TNET.2018.2829882.
IEEE 4th Symp. Netw. Cloud Comput. Appl. (NCCA), Munich, 2015, pp.
1-6, doi: 10.1109/NCCA.2015.11.

[245] L. Zhao, G. Zhou, G. Zheng, C. -L. I, X. You and L. Hanzo, “Open-
Source-Deﬁned Multi-Access Edge Computing for 6G: Opportunities and
Challenges,” IEEE Access, doi: 10.1109/ACCESS.2021.3130418.

[246] A. Abdou, P. C. van Oorschot and T. Wan, “Comparative Analysis
of Control Plane Security of SDN and Conventional Networks,” IEEE
Commun. Surveys Tuts., vol. 20, no. 4, pp. 3542-3559, 4th Quart., 2018,
doi: 10.1109/COMST.2018.2839348.

[247] P. Kiri Taksande, P. Jha, A. Karandikar and P. Chaporkar, “Open5G:
A Software-Deﬁned Networking Protocol for 5G Multi-RAT Wireless
Networks,” in Proc. IEEE Wireless Commun. Netw. Conf. Workshops
(WCNCW), Seoul, Korea (South), 2020, pp. 1-6, doi: 10.1109/WC-
NCW48565.2020.9124815.

[248] W. Kim, J. W. Hong and Y. Suh, “T-DCORAL: A Threshold-Based
Dynamic Controller Resource Allocation for Elastic Control Plane in
Software-Deﬁned Data Center Networks,” IEEE Commun. Letters, vol.
23, no. 2, pp. 198-201, Feb. 2019, doi: 10.1109/LCOMM.2018.2883076.
[249] M. N. Ince, J. Ledet and M. Gunay, “Building An open-source Linux
Computing System On RISC-V,” in Proc. 1st Int. Informatics Softw.
Eng. Conf. (UBMYK), Ankara, Turkey, 2019, pp. 1-4, doi: 10.1109/UB-
MYK48245.2019.8965559.

[250] Next G Alliance, Access. Nov. 2021. [online]. https://nextgalliance.org/
[251] M. A. Uusitalo et al., “Hexa-X The European 6G ﬂagship project,” In
Proc. Joint Euro. Conf. Netw. Commun. 6G Summit (EuCNC/6G Summit),
2021, pp. 580-585, doi: 10.1109/EuCNC/6GSummit51104.2021.9482430.
[252] 6G KOM, “Future of wireless communication”, Access. Nov. 2021.

[online]. https://www.6gkom.org/

[253] S. Handagala and M. Leeser, “Real Time Receiver Baseband Processing
Platform for Sub 6 GHz PHY Layer Experiments,” IEEE Access, vol. 8,
pp. 105571-105586, 2020, doi: 10.1109/ACCESS.2020.3000127.

38

[254] S. Lee, C. Tsou and P. Huang, “Ultra-High-Frequency Radio-
Frequency-Identiﬁcation Baseband Processor Design for Bio-Signal Ac-
quisition and Wireless Transmission in Healthcare System,” IEEE
Trans. Consumer Elect., vol. 66, no. 1, pp. 77-86, Feb. 2020, doi:
10.1109/TCE.2019.2956627.

[255] T. Ohtsuki, T. Aiba and M. Matsuura, “Simultaneous Radio-Frequency
and Baseband Signal Transmission Over a Multimode Fiber,” IEEE
Photonics J., vol. 11, no. 6, pp. 1-12, Dec. 2019, Art no. 7205512, doi:
10.1109/JPHOT.2019.2957066.

[256] K. Sankhe et al., “No Radio Left Behind: Radio Fingerprinting Through
Deep Learning of Physical-Layer Hardware Impairments,” IEEE Trans.
Cog. Commun. Net., vol. 6, no. 1, pp. 165-178, March 2020, doi:
10.1109/TCCN.2019.2949308.

[257] F. Chierchie, G. J. Gonz´alez, J. I. Morales, E. E. Paolini, J. Cousseau
and P. S. Mandolesi, “Baseband Model for Uniformly Sampled RF-
PWM,” IEEE Trans. Circuit Syst. I: Regular Papers, vol. 67, no. 8, pp.
2816-2824, Aug. 2020, doi: 10.1109/TCSI.2020.2978402.

[258] M. Gautschi et al., “Near-Threshold RISC-V Core With DSP Ex-
tensions for Scalable IoT Endpoint Devices,” IEEE Trans. Large Scale
Integration (VLSI) Sys., vol. 25, no. 10, pp. 2700-2713, Oct. 2017, doi:
10.1109/TVLSI.2017.2654506.

[259] L. J¨unger, J. L. Malte B¨olke, S. Tobies, R. Leupers and A.
Hoffmann, “ARM-on-ARM: Leveraging Virtualization Extensions for
Fast Virtual Platforms,” in Proc. Design Automation Test Eur. Conf.
Exhibition (DATE), Grenoble, France, 2020, pp. 1508-1513, doi:
10.23919/DATE48585.2020.9116573.

[260] C. Tang, P. Liu, C. Ma, Z. Liu and J. Ge, “Flush+Time: A High
Accuracy and High Resolution Cache Attack On ARM-FPGA Embedded
SoC,” in Proc. IEEE 38th VLSI Test Sym. (VTS), San Diego, CA, USA,
2020, pp. 1-6, doi: 10.1109/VTS48691.2020.9107588.

[261] J. Laukemann, J. Hammer, G. Hager and G. Wellein, “Automatic
Throughput and Critical Path Analysis of x86 and ARM Assembly
Kernels,” in Proc. IEEE/ACM Perform. Model., Benchmarking and Sim-
ulation of High Performance Computer Systems (PMBS), Denver, CO,
USA, 2019, pp. 1-6, doi: 10.1109/PMBS49563.2019.00006.

[262] B. Brank, S. Nassyr, F. Pouyan and D. Pleiter, “Porting Applications
to Arm-based Processors,” in Proc. IEEE Inter. Conf. Cluster Com-
put. (CLUSTER), Kobe, Japan, 2020, pp. 559-566, doi: 10.1109/CLUS-
TER49012.2020.00079.

[263] K. Asanovi´c, and D. A. Patterson, “Instruction sets should be free: The
case for risc-v”, EECS Department, University of California, Berkeley,
Tech. Rep. UCB/EECS-2014-146, 2014

[264] R. H¨oller, D. Haselberger, D. Ballek, P. R¨ossler, M. Krapfenbauer
and M. Linauer, “Open-Source RISC-V Processor IP Cores for FP-
GAs — Overview and Evaluation,” in Proc. 8th Mediterranean Conf.
Embedded Comput. (MECO), Budva, Montenegro, 2019, pp. 1-6, doi:
10.1109/MECO.2019.8760205.

[265] E. Matthews and L. Shannon, “TAIGA: A new RISC-V soft-processor
framework enabling high performance CPU architectural features,” in
Proc. 27th Int. Conf. Field Programmable Logic Appl. (FPL), Ghent,
2017, pp. 1-4, doi: 10.23919/FPL.2017.8056766.

[266] L. Minati et al., “iFLEX: A Fully Open-Source, High-Density Field-
Programmable Gate Array (FPGA)-Based Hardware Co-Processor for
Vector Similarity Searching,” IEEE Access, vol. 7, pp. 112269-112283,
2019, doi: 10.1109/ACCESS.2019.2934715.

[267] K. Sai Reddy and K. Vipin, “OpenNoC: An Open-Source NoC
Infrastructure for FPGA-Based Hardware Acceleration,” IEEE Em-
bedded Syst. Letters, vol. 11, no. 4, pp. 123-126, Dec. 2019, doi:
10.1109/LES.2019.2905019.

[268] A. Kamaleldin, S. Hesham and D. G¨ohringer, “Towards a Modu-
lar RISC-V Based Many-Core Architecture for FPGA Accelerators,”
IEEE Access, vol. 8, pp. 148812-148826, 2020, doi: 10.1109/AC-
CESS.2020.3015706.

[269] R. Heradio et al., “Open-Source Hardware in Education: A Systematic
Mapping Study,” IEEE Access, vol. 6, pp. 72094-72103, 2018, doi:
10.1109/ACCESS.2018.2881929.

[270] W.

Jiang, M. Strufe, M. Gundall and H. D. Schotten, “An
SDN/NFV Proof-of-Concept Test-Bed for Machine Learning-Based Net-
work Management,” in Proc. IEEE 4th Int. Conf. Comput. Commun.
(ICCC), Chengdu, China, 2018, pp. 1966-1971, doi: 10.1109/Comp-
Comm.2018.8780943.

[271] A. Esmaeily, K. Kralevska and D. Gligoroski, “A Cloud-based
SDN/NFV Testbed for End-to-End Network Slicing in 4G/5G,” in Proc.
IEEE 6th Conf. Netw. Softw. (NetSoft), Ghent, Belgium, 2020, pp. 29-35,
doi: 10.1109/NetSoft48620.2020.9165419.

[272] J. Haavisto, M. Arif, L. Lovn, T. Leppnen and J. Riekki, “Opensource
RANs in Practice: an over-the-air deployment for 5G MEC,” in Proc. Eur.

39

Conf. Netw. Commun. (EuCNC), Valencia, Spain, 2019, pp. 495-500, doi:
10.1109/EuCNC.2019.8801973

[273] J. Mu˜noz et al., “OpenTestBed: Poor Man’s IoT Testbed,” in Proc.
IEEE Conf. Comput. Commun. Workshops (INFOCOM WKSHPS), Paris,
France, 2019, pp. 467-471, doi: 10.1109/INFCOMW.2019.8845269.
[274] D. Raychaudhuri, I. Seskar, G. Zussman, T. Korakis, D. Kilper, T.
Chen, J. Kolodziejski, M. Sherman, Z. Kostic, X. Gu, H. Krishnaswamy,
S. Maheshwari, P. Skrimponis, and C. Gutterman, “Challenge: COSMOS:
A City-Scale Programmable Testbed for Experimentation with Advanced
Wireless,” in Proc. ACM 26th Int. Conf. Mobile Compt. Netw., 2020, pp.
1-13”

[275] 5TONIC. Oct. 2021 [online]. Available: https://www.5tonic.org
[276] Fed4Fire+, “Federation for Next generation Internet Plus Project,” Oct.

2021. [online]. Avaulable: https://www.fed4ﬁre.eu/

[277] S. Platt, L. Sanabria-Russo, and M. Oliver, 2020. CoNTe: A Core

Network Temporal Blockchain for 5G. Sensors, 20(18), p.5281.

[278] X. Ling,, J. Wang, Y. Le, Z. Ding, and X. Gao, 2020. Blockchain radio
access network beyond 5G. IEEE Wireless Commun., 27(6), pp.160-168.
[279] X. Ling, J. Wang, Y. Le, Z. Ding and X. Gao, “Blockchain Radio
Access Network Beyond 5G,” IEEE Wireless Commun., vol. 27, no. 6,
pp. 160-168, December 2020, doi: 10.1109/MWC.001.2000172.

[280] Mafakheri, B., Heider-Aviet, A., Riggio, R. and Goratti, L., 2021.
“Smart contracts in the 5G roaming architecture: the fusion of blockchain
with 5G networks”. IEEE Commun. Mag., 59(3), pp.77-83.

[281] X. Ling, B. Zhang, H. Xie, J. Wang and Z. Ding, “Hash Access in
Blockchain Radio Access Networks: Characterization and Optimization,”
IEEE Inter. Things J., doi: 10.1109/JIOT.2021.3111915.

