2
2
0
2

r
p
A
5
2

]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[

2
v
1
5
5
4
1
.
3
0
2
2
:
v
i
X
r
a

MeMC: A package for monte-carlo simulations of spherical shells

Vipin Agrawal,1, 2 Vikash Pandey,1 Hanna Kylhammar,3 Apurba Dev,4, 5 and Dhrubaditya Mitra1, ∗
1Nordita, KTH Royal Institute of Technology and Stockholm University, Roslagstullsbacken 23, 10691 Stockholm, Sweden
2Department of Physics, Stockholm university, Stockholm,Sweden.
3KTH Royal Institute of Technology, Sweden
4Department of Electrical Engineering, The Angstr¨om Laboratory, Uppsala University, Uppsala, Sweden.
5Department of Applied Physics, School of Engineering Sciences,
KTH Royal Institute of Technology, Stockholm, Sweden.

The MeMC is an open-source software package for monte-carlo simulation of elastic shells.
It
is designed as a tool to interpret the force-distance data generated by indentation of biological
nano-vesicles by atomic force microscopes. The code is written in c++ and python. The code is
customizable – new modules can be added in a straightforward manner.

I. STATEMENT OF NEED AND PURPOSE OF
SOFTWARE

Micro and nano vesicles, both natural and synthetic,
play a crucial role in biology and medicine. The physi-
cal properties of these vesicles play an important role in
their biological functions [1]. Hence it is important to be
able to measure their elastic constants, in particular the
Young’s modulus and the bending rigidity. One way to
measure the elastic constants of biological objects, e.g.,
a red blood cell (RBC), is to poke them with an atomic
force microscope (AFM) to obtain a force-distance curve.
Then we must model the biological object as an elastic
material and by ﬁtting this model to the experimental
force-distance curve to estimate the parameters of the
elastic model, i.e., the elastic constants. As an example,
consider a force-distance curve obtained by AFM mea-
surements of an RBC. The RBC is modeled as a linear
elastic material with a Young’s modulus, Y3d. Typically
a Hertzian model of elastic bodies in contact [2, section 9]
is used to measure Y3d. Nano vesicles diﬀer from (micro-
meter scale) cells in two important ways

1. The nano-vesicles are much smaller hence thermal
ﬂuctuations may eﬀectively renormalize the elastic
coeﬃcients [3, 4].

2. Cell membranes are strongly coupled to an under-
lying cytoskelton. Hence they may be modeled by
a solid body [5] but nano-vesicles must be modeled
as liquid ﬁlled elastic membranes.

Hence, to be able to interpret the force-distance curve of
nano-vesicles, we need to solve for the elastic response of
a thermally ﬂuctuating elastic shell.

There are commercial packages, e.g., COMSOL [6],
to calculate the force-distance curve of solid bodies and
closed membranes with ﬂuids inside under the action of
external forces but to the best of our knowledge there is
no package that includes thermal eﬀects, which are im-
portant in nano-vesicles. Monte-carlo simulations of elas-
tic membranes, that does include thermal ﬂuctuations,

∗ dhruba.mitra@gmail.com

have been done for more than three decades [3, 7–9], see
also [10, for a review ]. But to the best of our knowledge
there is no open-source code available. The goal of this
package is to ﬁll this gap in open-source software.

II. THEORETICAL BACKGROUND

Our model of nano-vesicles is an homogeneous amor-
phous membrane enclosing an incompressible ﬂuid [11].
Unlike a solid ball, the force-distance relationship for
such a model is linear for small deformation [3, 11] if
we ignore thermal ﬂuctuations. Ref. [11] uses a similar
model, ignoring thermal ﬂuctuations, to interpret AFM
measurement of nano-vesicles.

Let us consider a (three dimensional) material with
Young’s modulus Y3d and Poisson’s ratio σ3d and make
a membrane out of it. Then the bending modulus and
the in-plane Young’s modulus are [2, section 13 and 14]

B =

Y3dh3
12(1 − σ2

3d)

and Y = Y3dh,

(1)

where h is the thickness of the membrane. This need not
necessarily hold for biological membranes. Nevertheless
consider a ﬂuid enclosed by a solid membrane, as done
in [3]. We consider an elastic energy of the form

E [w, u] =

uij =

(cid:90)

1
2

d2x

(cid:20) B
2

(cid:0)∇2w(cid:1)2

+ µu2

ij +

(cid:21)

u2
kk − pw

λ
2

(∂iuj + ∂jui + ∂iw∂jw) − δij

(2a)

(2b)

w
R

where w is the out-of-plane deformation of the shell, and
u is the in-plane deformation, p is the pressure, λ and
µ are the two in-plane L´ame coeﬃcients and B is the
bending modulus. The L´ame coeﬃcients are related to

 
 
 
 
 
 
other elastic constant in the following manner [2]

2

K = λ +

µ

2
3
9Kµ
3K + µ
1
2

3K − 2µ
3K + µ

Y =

σ =

(3a)

(3b)

(3c)

Here K is the volume compressibility, Y the Young’s
modulus, and σ the Poisson ratio.

If we consider the material to be incompressible, K →
∞ and σ = 1/2, then there are two elastic constant, the
bending rigidity B and the Young’s modulus Y . Conse-
quently, there are two dimensionless numbers, the F¨oppl–
von-Karman number

Y R2
B
and the Elasto-Thermal number:
√

FvK =

ET =

FvK

kBT
B

(4)

(5)

where R is the radius of the spherical shell.

Using values of Y and B from molecular dynamics sim-
ulations of lipid bilayers [12], Y = 1.7N/m and B = 5kBT
and R = 100 nano meter, we have FvK ≈ 0.3×107 which
is close to the F¨oppl–von-Karman number for Graphene
sheets and ET ≈ 103.

III. NUMERICAL IMPLEMENTATION

A. Grid

Following Ref. [10], we use a triangulated-network grid
in the following manner. We start with N randomly cho-
sen points on a sphere Fig. (1A). Then, we run a Monte-
Carlo simulation, with a Lennard-Jones (LJ) repelling
potential, of these points moving on the surface. Once
the surface Monte-Carlo (SMC) has reached an equilib-
rium, we use the algorithm in Ref. [13] to construct the
Delaunay triangulation of these points. The connection
between the points thus formed is kept unchanged.
In
the rest of this paper we call this the initial conﬁgura-
tion. A diﬀerent snapshot from the same equilibrium
gives an equivalent but diﬀerently triangulated grid.

An alternative is to use a regular grid [14, 15]. This
is achieved by approximating the sphere with geodesic
polyhedron [Fig. (1C)] . They can be generated using
Meshzoo library [16]. In this paper we use N = 5120 for
the random grid and N = 5292 for the regular grid.

FIG. 1. Grid points on a sphere (A)Triangulated random
points on a sphere. (B) Triangulated points on sphere after
60000 SMC iteration of the initial conﬁguration shown in (A).
(C) An example of regular grid

amount. We calculate the change in energy due to this
movement. We accept or reject the move by the stan-
dard Metropolis algorithm. In our code the energy has
the following contributions

E = Es + Ebend + Ebulk

(6)

where Es is the contribution from stretching, Ebend is the
contribution from bending, and Ebulk is the contribution
from the bulk modulus. Below, we describe each one of
them in turn.

B. Energy

1. Stretching

The basic algorithm of the Monte-Carlo simulations is
straightforward and well-known [see, e.g., 17]. We ran-
domly choose a point on the grid and move it by a random

In the initial conﬁguration, two neighboring points
with coordinates Ri and Rj are connected by a bond
of length (cid:96)0
ij. When the i-th point is moved, all its bonds
with the neighbors change from their initial length. We

ABC3

Here, Ai is the area of Voronoi dual cell at the node i,
and αij, βij are the angles opposite to bond ij as shown in
Fig. (2). Consider the triangle T in Fig. (2) deﬁned by its
vertices (i, j − 1, j). If T is non-obtuse its circumcenter
lies within it, hence so does the Voronoi region. Let Ac
be the area of shaded region in Fig. (2) given by [21, 22],

Ac =

1
8

(cid:2)R2

ij cot(αij) + R2

ij−1 cot(βij−1)(cid:3) .

(12)

FIG. 2. An example of triangulated mesh at the node i.
αij, βij are the angles opposite to the bond ij. Shaded part is
the Voronoi region of triangle T which is deﬁned by the nodes
(i, j − 1, j). Here, we consider that the triangle T is acute.

model each of these bonds by a harmonic spring and cal-
culate the stretching energy by

Es =

1
2

(cid:88)

i

H
2

(cid:88)

j(i)

Rij ≡ |Ri − Rj|.

(cid:0)Rij − (cid:96)0

ij

(cid:1)2

where

(7a)

(7b)

Here the notation j(i) denotes that the sum is over all
the nearest neighbors of the i-th point.

The L´ame coeﬃcients (λ, µ) and the Young’s modulus

(Y ) are given by [18]

λ = µ =

√

3
4

H,

Y =

2
√
3

H.

(8)

2. Bending

To calculate the bending contribution, we need to
i.e.

In the continuum limit,

calculate the curvature.
N → ∞, bending energy [19] is:

Ebend =

(cid:90)

B
2

(∇2R)2dS,

(9)

where R is the vector of a point on the surface of the
sphere, ∇2R is Laplacian of R on the surface of the
sphere.

A general introduction to discretization of Laplacian
on a triangulated mesh is given in Refs.[20, 21]. Laplacian
on a 2D manifold embedded in R3 is:

L(R) = 2κ(R) ˆm(R),

(10)

where κ(R) is the mean curvature, and ˆm(R) is the nor-
mal to the surface at R. Note that, ˆm(R) is a local
property of a point P with coordinates R and it is not
necessarily the outward normal of the closed surface. In
the discrete form [21, 22],

Li =

(cid:88)

1
2

1
Ai

j(i)

[cot(αij) + cot(βij)] Rij.

(11)

If there is an obtuse angle in triangle T, the Voronoi
region is not necessarily enclosed by the triangle [21]. For
such cases, instead of Ac, we use Ab, deﬁned as [21, 22]:

Ab =

(cid:40) area(T)

2
area(T)
4

, angle of T at i is obtuse
, any other angle is obtuse

(cid:41)

,

(13)

where area(T ) = 0.5 |Rij × Rij−1| is the area of the tri-
angle T. The area Ai is obtained by summing up the
contributions from all the triangles in Fig. (2), e.g., the
contribution from the triangle T is the shaded area.

For a closed surface, the bending energy must be cal-
culated relative to the spontaneous curvature, i.e., its
discretised form is

Ebend =

B
2

(cid:88)

Ai (Li − C ˆn)2 .

(14a)

i

where C is the spontaneous curvature,
for a sphere
C = 2/R, where R is radius of the sphere and ˆn is the
outward normal to the surface. Hence not only the mag-
nitude but also the vector nature of the surface Laplacian
must be determined. For every triangle in the initial con-
ﬁguration, i.e., when all the points lie on the surface of
a sphere, the outward unit normal can be calculated in
a straightforward manner. For example, for the triangle
T in Fig. (2) it can be calculated by ﬁnding out the unit
vector that points along Rij−1 × Rij. Hence, at any time,
if we access the points around the node i in counterclock-
wise manner when viewed from outside we are guaranteed
to obtain the outward normal. We ensure this by sorting
appropriately the points around every node in the initial
conﬁguration. As the connectivity of the mesh remains
unchanged this property is preserved at all future times.
To sort the neighbors around any node i, we rotate the
coordinate system such that, the z axis passes through
the point i along the vector Ri. In this coordinate system
we sort the neighbors by their azimuthal angle.

Note that unlike Ref. [10] we do not incorporate self-

avoidance.

3. Bulk

We assume that the liquid inside the vesicle is incom-
pressible [23]. This is implemented by adding a energy
cost to the volume change. At any point, the total con-
tribution to the bulk energy is
(cid:18) V
V0

Ebulk = KL

(15)

− 1

(cid:19)2

,

where KL is bulk modulus, V is current volume, and V0
is the undeformed initial volume of the vesicle. As we
move the point i by a random amount, the change in
bulk energy is

∆Ebulk = 2KL

(cid:32)

∆V (V − V0)
V 2
0

+

(cid:18) ∆V
V0

(cid:19)2(cid:33)

,

(16)

where ∆V is the change in volume due to the move.

4

(A)

(B)

4. Pressure

(C)

With addition of contribution from pressure diﬀerence
from inside and outside the shell our code can also be
used for pressurized shells.

C. Sticking to a solid surface

As a speciﬁc example of nano-vesicle, we consider an
exosome. We quote from Ref. [24] “ Exosomes are small,
single-membrane, secreted organelles of ∼ 30 to ∼ 200
nm in diameter that have the same topology as the cell
and are enriched in selected proteins, lipids, nucleic acids,
and glycoconjugates. ” The exosomes that we consider
here were collected from immortalized cell line and ex-
tracted following the procedures as described in Ref. [25].
To measure the force-distance curve, it is necessary to ﬁx
an exosome on a transparent coverslip. This was done by
electrostatic coupling to a PLL coated surface by incubat-
ing them at room temperature for one hour, see Ref [25].
As an illustration, in Fig. (3), we show a typical exper-
imental measurement of the height above a ﬂat surface
as measured by the AFM. After being stuck to the ﬂat
surface the free surface forms a spherical cap. To repro-
duce such experiments as closely as possibly we need to
ﬁx the vesicle to a ﬂat surface. This is implemented by
the Lennard-Jones potential:

FIG. 3.
(A) A colormap of the height as measured by the
AFM. (B) Illustration of the vesicle stuck to a ﬂat surface by
an angle Θ0. (C) The height plotted along the line shown in
(A).

use only the repelling part of the Lennard-Jones poten-
tial:

VRLJ(r) ≡ 4(cid:15)A

(cid:17)12

(cid:16) σA
r

(18)

For every point on the vesicle we calculate the shortest
distance of this point to the paraboloid and use this dis-
tance as the argument of function VRLJ in (18).

IV. DEPENDENCIES

The code requires the following:

• A c++ compiler. We have tested the code with gnu

g++ version 11.2.0 on x86 64 CPU.

• Hdf5 libraries for reading and writing data.

VLJ(r) ≡ 4(cid:15)w

(cid:20)(cid:16) σw
r

(cid:17)12

−

(cid:16) σw
r

(cid:17)6(cid:21)

• Python version 3.8 with scipy, numpy, h5py and

(17)

numpy-quaternion installed.

What fraction of the vesicle is ﬁxed to the ﬂat surface
is parametrized by the angle Θ0 (see Fig. (3B)) which
is a parameter in our code. We choose a system of co-
ordinates with its origin at the center of the vesicle and
the z axis pointing radially outward through the north
pole. All the grid points on the surface whose polar an-
gle is greater than Θ0 are selected such that the sticking
potential acts only on them, see Fig. (3B).

D. AFM tip

To model the interaction between AFM tip and the
vesicle, We model the shape of tip as paraboloid and we

• For

three-dimensional

visualization we

use

VisIt [26].

V. TYPICAL WORKFLOW AND TEST

We have tested our code in LINUX operating system.
We expect it to work without any problem in any sim-
ilar environment.
It may also work with WINDOWS
although we have not tested this aspect.

The github repository [27] contains a a ﬁle named
README.md that contains instructions to install and run
the code.
In Fig. (4) we show three typical snapshots
from our code for three diﬀerent positions of the AFM
tip.

0.00.51.01.52.00.000.25In the github repository, we also provide a subdi-
rectory called Examples. By executing the shell script
execute.sh in that directory the user can run the code
(without the AFM tip and the bottom plate). It takes
almost 30 minutes on Intel(R) Core(TM) i5-8265U CPU.
The run produces a probability distribution function
(PDF) of the total energy after 50, 000 number of Monte -
carlo steps. By running gnuplot plot.gnu (this requires
the software gnuplot) the user can compare the PDF ob-
tained by their run with the PDF that we provide.

ACKNOWLEDGMENTS

5

We acknowledge the support of the Swedish Research
Council Grant No. 638-2013-9243 and 2016-05225. The
simulations were performed on resources provided by the
Swedish National Infrastructure for Computing (SNIC)
at PDC center for high performance computing.

[1] Rob Phillips, Jane Kondev, Julie Theriot, Hernan G Gar-
cia, and Nigel Orme, Physical biology of the cell (Garland
Science, 2012).

[2] LD Landau and EM Lifshitz, Theory of Elasticity, Course
of Theoretical Physics, Vol. 7 (Pergamon Press Ltd., Ox-
ford, England, 1970).

[3] Jayson Paulose, Gerard A Vliegenthart, Gerhard Gomp-
per, and David R Nelson, “Fluctuating shells under pres-
sure,” Proceedings of the National Academy of Sciences
109, 19551–19556 (2012).

[4] Andrej Koˇsmrlj and David R Nelson, “Statistical me-
chanics of thin spherical shells,” Physical Review X 7,
011002 (2017).

[5] Gerald Lim HW, Michael Wortis,

and Ranjan
Mukhopadhyay, “Stomatocyte–discocyte–echinocyte se-
quence of the human red blood cell: Evidence for the
bilayer–couple hypothesis from membrane mechanics,”
Proceedings of the National Academy of Sciences 99,
16766–16769 (2002).

[6] COMSOL, https://www.comsol.com.
[7] R¨udiger Goetz, Gerhard Gompper,

and Reinhard
Lipowsky, “Mobility and elasticity of self-assembled
membranes,” Physical review letters 82, 221 (1999).
[8] Mark J Bowick, Angelo Cacciuto, Gudmar Thorleifsson,
and Alex Travesset, “Universality classes of self-avoiding
ﬁxed-connectivity membranes,” The European Physical
Journal E 5, 149–160 (2001).

[9] Thorsten Auth and Gerhard Gompper, “Fluctuation
spectrum of membranes with anchored linear and star
polymers,” Physical Review E 72, 031904 (2005).
[10] G Gompper and DM Kroll, “Triangulated-surface models
of ﬂuctuating membranes,” in Statistical mechanics of
membranes and surfaces, edited by David Nelson, Tsvi
Piran, and Steven Weinberg (World Scientiﬁc, 2004) pp.
359–426.

[11] Daan Vorselen, Fred C MacKintosh, Wouter H Roos, and
Gijs JL Wuite, “Competition between bending and inter-
nal pressure governs the mechanics of ﬂuid nanovesicles,”
Acs Nano 11, 2628–2636 (2017).

[12] ES Boek, JT Padding, Wouter K den Otter,

and
Willem J Briels, “Mechanical properties of surfactant
bilayer membranes from atomistic and coarse-grained
molecular dynamics simulations,” The Journal of Physi-
cal Chemistry B 109, 19851–19858 (2005).

[13] Manuel Caroli, Pedro MM de Castro, S´ebastien Lo-
riot, Olivier Rouiller, Monique Teillaud,
and Camille
Wormser, “Robust and eﬃcient delaunay triangulations
of points on or close to a sphere,” in International Sym-

posium on Experimental Algorithms (Springer, 2010) pp.
462–473.

[14] Gerard Adriaan Vliegenthart and Gerhard Gompper,
“Mechanical deformation of spherical viruses with icosa-
hedral symmetry,” Biophysical
journal 91, 834–841
(2006).

[15] Mathias Buenemann and Peter Lenz, “Elastic properties
and mechanical stability of chiral and ﬁlled viral capsids,”
Physical Review E 78, 051924 (2008).

[16] A simple and fast mesh generator, https://github.com/

meshpro/meshzoo.

[17] Artur Baumg¨artner, Kurt Binder, J-P Hansen, MH Ka-
los, K Kehr, DP Landau, D Levesque, H M¨uller-
Krumbhaar, C Rebbi, Y Saito, et al., Applications of the
Monte Carlo method in statistical physics, Topics in Cur-
rent Physics, Vol. 36 (Springer Science & Business Media,
2013).

[18] Hyunjune Sebastian Seung and David R Nelson, “Defects
in ﬂexible membranes with crystalline order,” Physical
Review A 38, 1005 (1988).

[19] David Nelson, Tsvi Piran, and Steven Weinberg, Statis-
tical mechanics of membranes and surfaces (World Sci-
entiﬁc, 2004).

[20] C Itzykson, in Proceedings of the GIFT seminar, Jaca
85, edited by J et al Abad (World Scientiﬁc Singapore,
1986) pp. 130–188.

[21] Hans-Christian Hege and Konrad Polthier, Visualization
and mathematics III (Springer Science & Business Me-
dia, 2003).

[22] Mark Meyer, Mathieu Desbrun, Peter Schr¨oder,

and
Alan H Barr, “Discrete diﬀerential-geometry operators
for triangulated 2-manifolds,” in Visualization and math-
ematics III (Springer, 2003) pp. 35–57.

[23] This is diﬀerent from assuming a semi-permeable mem-
brane, as done in Ref. [11], in which case the liquid can
ﬂow in or out and the osmotic pressure of solutes de-
creases and increases accordingly.

[24] D Michiel Pegtel and Stephen J Gould, “Exosomes,” An-

nual review of biochemistry 88, 487–514 (2019).

[25] Sara Cavallaro, Josef Horak, Petra Haag, Dhanu Gupta,
Christiane Stiller, Siddharth S Sahu, Andre Gorgens,
Hithesh K Gatty, Kristina Viktorsson, Samir El An-
daloussi, et al., “Label-free surface protein proﬁling of
extracellular vesicles by an electrokinetic sensor,” ACS
sensors 4, 1399–1408 (2019).

[26] Hank Childs, Eric Brugger, Brad Whitlock, Jeremy
Meredith, Sean Ahern, David Pugmire, Kathleen Bi-
agas, Mark Miller, Cyrus Harrison, Gunther H. We-

6

FIG. 4. Representative snapshots from our code for three diﬀerent positions (tz) of the AFM tip. The origin of our coordinate
system is at the center of the undeformed sphere and the radius of the undeformed sphere is unity. The colormap shows the
signed curvature (10); red(positive) and blue (negative). (A) tz = 1.05, (B) tz = 0.9, (C) tz = 0.75.

ber, Hari Krishnan, Thomas Fogal, Allen Sanderson,
Christoph Garth, E. Wes Bethel, David Camp, Oliver
R¨ubel, Marc Durant, Jean M. Favre, and Paul Navr´atil,
“VisIt: An End-User Tool For Visualizing and Analyzing

Very Large Data,” in High Performance Visualization–
Enabling Extreme-Scale Scientiﬁc Insight (2012) pp. 357–
372.

[27] Monte-Carlo for elastic shells, https://github.com/

vipinagrawal25/MeMC.

(A)(C)(B)