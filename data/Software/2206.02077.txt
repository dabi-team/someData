Springer Nature 2021 LATEX template

2
2
0
2

p
e
S
6
2

]
E
M

.
t
a
t
s
[

2
v
7
7
0
2
0
.
6
0
2
2
:
v
i
X
r
a

RPEM: Randomized Monte Carlo Parametric
Expectation Maximization Algorithm

Rong Chen1,2*, Alan Schumitzky1,3, Alona
Kryshchenko4, Romain Garreau5,6, Julian D.
Otalvaro1, Walter M. Yamada1 and Michael N. Neely1,7

1Laboratory of Applied Pharmacokinetics and Bioinformatics,
Children’s Hospital Los Angeles, University of Southern
California, Los Angeles, 90027, California, USA.
2Department of Physics, Arizona State University, Tempe,
85287, Arizona, USA.
3Department of Mathematics, University of Southern California,
Los Angeles, 90089, California, USA.
4Department of Mathematics, California State University
Channel Islands, Camarillo, 93012, California, USA.
5Service Pharmaceutique, Hospices Civils de Lyon, Groupement
Hospitalier Nord, Hˆopital Pierre Garraud, Lyon, 69005, France.
6UMR CNRS 5558, Laboratoire de Biom´etrie et Biologie
Evolutive, Universit´e de Lyon, Universit´e Lyon 1, Villeurbanne,
France.
7Pediatric Infectious Diseases, Children’s Hospital Los Angeles,
University of Southern California, Los Angeles, 90027, California,
USA.

*Corresponding author(s). E-mail(s): rongchen@chla.usc.edu;
Contributing authors: schumitzky@gmail.com;
alona.kryshchenko@csuci.edu; romain.garreau@chu-lyon.fr;
jotalvaro@chla.usc.edu; wyamada@chla.usc.edu;
mneely@chla.usc.edu;

Inspired from quantum Monte Carlo, by using unbiased estimators all the
time and sampling discrete and continuous variables at the same time

Abstract

1

 
 
 
 
 
 
Springer Nature 2021 LATEX template

2

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

using Metropolis algorithm, we present a novel, fast, and accurate high per-
formance Monte Carlo Parametric Expectation Maximization (MCPEM)
algorithm. We named it Randomized Parametric Expectation Maximiza-
tion (RPEM). In particular, we compared RPEM with Monolix’s SAEM
and Certara’s QRPEM for a realistic two-compartment Voriconazole
model with ordinary diﬀerential equations (ODEs) and using simulated
data. We show that RPEM is 3 to 4 times faster than SAEM and QRPEM,
and more accurate than them in reconstructing the population parameters.

Keywords: PK/PD, Monte Carlo, expectation maximization, mixture model,
machine learning

1 Introduction

The expectation maximization (EM) method [1] is a widely used powerful algo-
rithm in machine learning, including population modeling of pharmacokinetics
(PK) and pharmacodynamic (PD) systems. EM treats data in terms of ‘com-
plete’ and ‘missing’. By using Bayes Theorem, the missing data are integrated
out, and the parameters of the parametric model are learned automatically
through iterations between expectation steps (E-step) and maximization steps
(M-step). An EM algorithm based, exact maximum likelihood solution to the
parametric population modeling problem was proposed by Alan Schumitzky [2]
in 1995 and fully implemented by Stephen Walker [3] in 1996 for non-mixture
models. For mixture models, the corresponding formulas were derived in [4].
In general, the EM algorithm needs to address two important problems. One
is from the theoretical aspect, namely the convergence problem. EM algorithms
converge to a stationary point [4–6] of the likelihood function from the given
initial conditions. However a stationary point can be a local maximum, a
minimum, or a saddle point, and therefore it may not be the global maximum
of the likelihood function. A standard method to increase the probability of
ﬁnding the global maximum is to repeatedly run the algorithm, initializing
each run with diﬀerent conditions. This of course is computationally intense,
so developing eﬃcient methods to avoid converging on solutions which are not
truly maximally likely is an important task.

We focus in the paper on the second problem which faces EM algorithms
from the computational aspect, namely how to eﬃciently and accurately evaluate
all the integrals in the E-step and the M-step. This is important because the
integrals have to be evaluated at each iteration. If the integrals can be evaluated
eﬃciently, we can reach the stationary point rapidly, which will enable us
to search from more initial conditions per unit time, and therefore also help
addressing the ﬁrst problem of convergence described above. Parametric EM
methods typically use Monte Carlo algorithms to evaluate the integrals, and
such methods are called Monte Carlo parametric EM methods (MCPEM).
Therefore, fast, accurate and robust Monte Carlo algorithms are always desirable
for MCPEM.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

3

There are successful and widely used Monte Carlo engines implemented in
software tools commonly used for PK/PD population modeling, such as those
used in ADAPT from the University of Southern California [7], S-ADAPT
[8, 9], ICON’s NONMEM program [10, 11], Quasi-random parametric EM
(QRPEM) in Certara’s Phoenix software and RsNLME (R Speaks Non Linear
Mixed Eﬀects Modeling) [12, 13], and Stochastic approximation EM (SAEM)
[14–17] in Lixoft’s Monolix software. As far as we know, each of these MCPEM
algorithms strictly sums over the Monte Carlo integrals for all the n subjects,
and, when applicable, for all the possible K components of a mixture model to
describe the joint model parameter value probability distributions as sums of
normal distributions.

Inspired from quantum Monte Carlo methods [18–22] which is one of the
most precise, reliable and successful computational methods widely used in
physics and chemistry, in this work we approach the Monte Carlo integrals in a
novel way by developing our randomized parametric expectation maximization
(RPEM) algorithm. It uses an unbiased Metropolis method to eﬃciently sample
from the subjects and mixture models instead of strictly summing over all of
them. The unique Metropolis method in M-step allows us to eﬃciently get
unbiased estimations for both analytic models [4, 23] and models with ODEs
without taking many samples in E-step which is time consuming. Therefore, as
we will show, RPEM is fast without compromising accuracy.

The paper is organized as follows. In Sec. 2, we brieﬂy introduce the two-
stage nonlinear random eﬀects mixture model [4] we use and the EM algorithm.
Then we describe the algorithm of RPEM. In Sec. 3, we report the results of
RPEM by using a concrete example of the two-stage nonlinear random eﬀects
two-mixture model [4], as well as a realistic Voriconazole model with ODEs. We
compare RPEM with SAEM and QRPEM and we show that RPEM is not only
fast but also accurate to varied starting conditions. We also report how RPEM
scales on the supercomputer. In Sec. 4, we summarize the novelty, speed, and
accuracy of RPEM. Possible future directions are considered in closing.

2 Methods

2.1 Two-Stage Nonlinear Random Eﬀects Mixture Model

We use a two-stage nonlinear random eﬀects model [4] as an example. At
stage one, given θi which is the parameter vector describing the random eﬀects
(θi ∈ Rp), as well as β which describes the ﬁxed eﬀects (β ∈ Rq), the mi-
dimensional observation vector for the ith individual Yi = (Y1i, ..., Ymii)T is
sampled from a Gaussian distribution such that,

Yi|θi, β ∼ N (hi(θi), Gi(θi, β)),

i = 1, ..., n

(1)

where n represents the number of subjects, hi(θi) is the function deﬁning
the PK/PD model, and Gi(θi, β) is a positive deﬁnite covariance matrix

Springer Nature 2021 LATEX template

4

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

(Gi ∈ Rmi×mi). In this paper we consider the following important case [4],

Gi(θi, β) = σ2Hi(θi),

(2)

where Hi(θi) is a known function and β = σ2 .

At stage two, each of the n parameter vectors θ1, ..., θn is sampled from

Gaussian distributions with K mixing components,

θ1, ..., θn ∼i.i.d

K
(cid:88)

k=1

wkN (µk, Σk),

(3)

K
(cid:80)
k=1

where nonnegative number wk (normalized by

wk = 1) is the weight for the

kth Gaussian distribution N (µk, Σk), µk is the mean vector (µk ∈ Rp) and
Σk is the positive deﬁnite covariance matrix (Σk ∈ Rp×p).

Given the observation data {Y1, ..., Yn}, we want to estimate φ which repre-
sents the collection of parameters {β, (wk, µk, Σk), k = 1, ..., K} by maximizing
the overall data likelihood L(φ) which is written as,

L(φ) =

n
(cid:89)

K
(cid:88)

(cid:90)

i=1

k=1

p(Yi|θi, β)wkp(θi|µk, Σk)dθi.

(4)

This is called the maximum likelihood estimate (MLE). The MLE of φ is deﬁned
as φM L such that L(φM L) ≥ L(φ) for all φ within the parameter space.

2.2 EM Algorithm

In the EM algorithm, we deﬁne complete data and missing data. In this model
we deﬁne {θi, zi} as missing data, where zi is a K-dimensional vector whose kth
component zi(k) is 1 or 0 depending on whether θi belongs to the kth mixing in
Eq.(3) or not. The complete data is deﬁned as Yc = {(Yi, θi, zi), i = 1, ...n}. The
purpose of the EM algorithm is to start with φ(0) and iterate from φ(r) to φ(r+1)
at the rth iteration, continue the process until we ﬁnd the desired parameters
Q(φ, φ(r)). This process is guaranteed to
φ(r+1) such that φ(r+1) = arg max

φ

converge to a stationary point of the likelihood [4–6], and typically a number of
starting positions are suggested in an eﬀort to ensure convergence to a global
maximum.

In the E-step, the function Q(φ, φ(r)) is deﬁned as,

Q(φ, φ(r)) = E

(cid:110)

log Lc(φ)|Y , φ(r)(cid:111)

,

(5)

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

5

where the complete data likelihood log Lc(φ) is given by

log Lc(φ) =

n
(cid:88)

K
(cid:88)

i=1

k=1

log p(Yi, θi|σ2, µk, Σk)

zi(k)

.

(6)

By using Bayes Theorem, Eq.(5) can be concretely written as [4],

Q(φ, φ(r)) =

n
(cid:88)

K
(cid:88)

(cid:90)

i=1

k=1

gik(θi, φ(r)) log p(Yi, θi|σ2, µk, Σk)dθi,

(7)

where

and

gik(θi, φ) =

wkp(Yi|σ2, θi)p(θi|µk, Σk)

(cid:90)

wk

K
(cid:88)

k=1

p(Yi|σ2, θi)p(θi|µk, Σk)dθi

,

(8)

log p(Yi, θi|σ2, µk, Σk) = C −

mi
2

log(σ2)

−

−

1
2σ2 (Yi − hi(θi))T Hi(θi)−1(Yi − hi(θi))
1
(θi − µk)T Σ−1
log |Σk|,
k (θi − µk) −
2

1
2

(9)

for some constant C. Note that the probability that the ith individual belongs
to the kth mixing component can be deﬁned as a function τi(k) such that

τi(k) = E{zi(k)|Y , φ} = pr{zi(k) = 1|Y , φ} =

(cid:90)

gik(θi, φ)dθi.

(10)

In the M-step we are trying to ﬁnd the unique solution of φ(r+1) such that

(cid:12)
(cid:12)
∂
∂φ(cid:48) Q(φ, φ(r))
(cid:12)
(cid:12)
(cid:12)φ(r+1)

= 0,

(11)

where we deﬁne φ(cid:48) = {β, (µk, Σk), k = 1, ..., K}. Eq.(11) leads to unique
solutions [4] of µ(r+1)
, (σ2)(r+1). The updating of wk can be calculated
as the average of the contributions from each subject to the kth mixing [4], i.e.,

, Σ(r+1)
k

k

w(r+1)
k

=

1
n

n
(cid:88)

i=1

τi(k) =

1
n

n
(cid:88)

(cid:90)

i=1

gik(θi, φ(r))dθi.

(12)

Springer Nature 2021 LATEX template

6

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

The EM iterates φ(r) have the important property that the corresponding
likelihoods L(φ(r)) are non-decreasing, i.e., L(φ(r+1)) ≥ L(φ(r)) for all r [4, 5].
It is also worthwhile to mention that, under certain assumptions, in SAEM,
by splitting the E-step into a simulation-step and a stochastic approximation
step [14–16], or using an improved SAEM which adds a simulation-step before
E-step and adds a stochastic approximation step after E-step (MSAEM) [17],
it is possible to show that the algorithm converges to a local maximum of the
likelihood function. Besides SAEM, there are other algorithms using stochastic
methods in order to converge to a local maximum, see recent references such
as [24–26].

2.3 RPEM Algorithm

From a close look at gik(θi, φ(r)) in Eq.(8) we ﬁnd that

K
(cid:88)

(cid:90)

k=1

n
(cid:88)

K
(cid:88)

(cid:90)

i=1

k=1

gik(θi, φ(r))dθi = 1,

gik(θi, φ(r))dθi = n.

Therefore, the unique solutions [4] of Eq.(11) can be written as,

µ(r+1)
k

=

n
(cid:88)

(cid:90)

i=1
n
(cid:88)

(cid:90)

θigik(θi, φ(r))dθi

,

gik(θi, φ(r))dθi

(13)

(14)

(15)

i=1
n
(cid:90)
(cid:88)

Σ(r+1)
k

=

i=1

(θi − µ(r+1)

k

)(θi − µ(r+1)

k

)T gik(θi, φ(r))dθi

n
(cid:88)

(cid:90)

i=1

gik(θi, φ(r))dθi

,

(16)

mi

n
(cid:80)
i=1
n

(cid:34) n
(cid:88)

K
(cid:88)

(cid:90)

i=1

k=1

(σ2)(r+1) =

(Yi − hi(θi))T Hi(θi)−1(Yi − hi(θi))gik(θi, φ(r))dθi

n
(cid:88)

K
(cid:88)

(cid:90)

i=1

k=1

gik(θi, φ(r))dθi

(17)

(cid:35)

.

In a very useful case [4], we can partition the parameter θi into two compo-
nents: θi = {αi, βi}. Such that αi is from a mixture of multivariate gaussians
and βi is from one single multivariate Gaussian. In such a case, the EM updates

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

7

from Eq.(11) are given by,

(µα)(r+1)
k

=

n
(cid:88)

(cid:90)

i=1
n
(cid:88)

(cid:90)

αigik(θi, φ(r))dθi

,

gik(θi, φ(r))dθi

i=1
n
(cid:88)

(cid:90) (cid:104)

(Σα)(r+1)
k

=

i=1

αi − (µα)(r+1)

k

(cid:105) (cid:104)

αi − (µα)(r+1)

k

(cid:105)T

gik(θi, φ(r))dθi

n
(cid:88)

(cid:90)

i=1

gik(θi, φ(r))dθi

(µβ)(r+1) =

n
(cid:88)

K
(cid:88)

(cid:90)

i=1
n
(cid:88)

k=1
K
(cid:88)

(cid:90)

βigik(θi, φ(r))dθi

,

gik(θi, φ(r))dθi

(18)

,

(19)

(20)

i=1

k=1

n
(cid:88)

K
(cid:88)

(cid:90) (cid:104)

(Σβ)(r+1) =

i=1

k=1

βi − (µβ)(r+1)(cid:105) (cid:104)

βi − (µβ)(r+1)(cid:105)T

gik(θi, φ(r))dθi

n
(cid:88)

K
(cid:88)

(cid:90)

i=1

k=1

gik(θi, φ(r))dθi

.

(21)

RPEM is a Monte Carlo parametric EM algorithm. The most important
feature of RPEM is that it updates the parameters in Eqs.(15-21) by performing
general and eﬃcient Metropolis algorithm [19] based on an ‘overall’ randomized
sampling for both discrete labels such as i and k and the continuous variables
θi. Next we describe the basic idea of RPEM in the E-step and M-step.

2.3.1 E-Step of RPEM

In order to prepare for the RPEM Monte Carlo integrations in the M-step, we
ﬁrst evaluate the denominator of gik(θi, φ) which does not depend on k. We
deﬁne it as Ni such that

Ni =

K
(cid:88)

k=1

wknik,

where

(cid:90)

nik ≡

p(Yi|σ2, θi)p(θi|µk, Σk)dθi.

(22)

(23)

Springer Nature 2021 LATEX template

8

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

For nik we sample θi from Gaussian p(θi|µk, σk), then we evaluate Eq.(23)

by taking the average of the samples of p(Yi|σ2, θi), i.e.,

nik ≈

1
mGauss

mGauss(cid:88)

m=1

p(Yi|σ2, θ(m)

i

(cid:12)
(cid:12)
(cid:12)
)
(cid:12)
(cid:12)θ(m)

i ∈p(θ|µk,σk)

,

(24)

where the number of samples mGauss is typically set between 200 and 3000 on
a single CPU core. Once we obtain nik and Ni, the τi(k) in Eq.(10) can be
immediately evaluated by

τi(k) =

wknik
Ni

.

We also evaluate the log of the likelihood function L(φ) in Eq.(4) as

ln L(φ) =

n
(cid:88)

i=1

ln (Ni) .

(25)

(26)

The program is iterated until ln L(φ) stabilizes.

When dealing with models with ODEs, the E-step can be the most time
consuming part. We typically store the samples of p(Yi|σ2, θi) calculated from
ODEs and obtained for each i and k in Eq.(24), and reuse them in the M-step.

2.3.2 M-Step of RPEM

The M-step is important, because it is at the M-step that we truly estimate the
parameters. Inaccurate estimation at each iterations of M-step may cumulate
to inaccurate estimations of the parameters and result in unnecessarily long
iteration time.

In the M-step we update all the parameters. The weight in Eq.(12) is

calculated from the nik and Ni obtained in the E-step,

w(r+1)
k

=

1
n

n
(cid:88)

(cid:90)

i=1

gik(θi, φ(r))dθi =

wk
n

n
(cid:88)

i=1

nik
Ni

.

(27)

The rest of the parameters from Eq.(15) to Eq.(21) can be cast into one

type of integral, which can be generalized as 1 ,

n
(cid:88)

K
(cid:88)

(cid:90)

fik(θi)gik(θi, φ(r))dθi

(cid:104)f (cid:105) =

i=1

k=1
n
(cid:88)

K
(cid:88)

(cid:90)

i=1

k=1

gik(θi, φ(r))dθi

.

(28)

1When the integral does not involve looping over the mixture label k, we simply treat K in

Eq.(28) as 1.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

9

Note that,

K
(cid:88)

n
(cid:88)

(cid:90)

k=1

i=1

dθi










K
(cid:88)

gik(θi, φ(r))
(cid:90)

n
(cid:88)

gik(θi, φ(r))dθi










= 1,

(29)

so the integrand of Eq.(29) can be treated as a target distribution π(s),

k=1

i=1

π(s) =

K
(cid:88)

n
(cid:88)

gik(θi, φ(r))
(cid:90)

gik(θi, φ(r))dθi

=

gik(θi, φ(r))
N

(30)

k=1

i=1

whose normalization factor is N .

RPEM distinguishes itself from other MCPEM in evaluating Eq.(28) in the
M-step by directly sampling from π(s) in Eq.(30). Because of this, unlike all
the other MCPEM algorithms, in RPEM we have the advantage of evaluating
Eq.(28) by using unbiased estimator. As will be shown, RPEM treats continuous
variable θi and discrete variables i and k at the same footage, based on the
profound fact that, Monte Carlo is a very powerful method in that it applies to
not only continuous variables, but also to discrete variables. Same techniques
have already been widely used in quantum Monte Carlo for several decades
[18–21].

RPEM samples π(s) with Metropolis sampling [19, 27]. We denote s =
i(cid:48)} as the (proposed) new state. A

{i, k, θi} as the current state, s(cid:48) = {i(cid:48), k(cid:48), θ(cid:48)
common choice of the acceptance probability A(s → s(cid:48)) is [28],

A(s → s(cid:48)) = min

(cid:20)

1,

π(s(cid:48))T (s(cid:48) → s)
π(s)T (s → s(cid:48))

(cid:21)

,

(31)

where π(s(cid:48)) is the new target distribution which equals to gi(cid:48) k(θ(cid:48)
. The
proposed transition probability is denoted by T (s → s(cid:48)), which can be fur-
ther decomposed by T (s → s(cid:48)) = T (i → i(cid:48))T (k → k(cid:48))T (θi → θ(cid:48)
i(cid:48)). The
normalization factor N cancels in Eq.(31).

i(cid:48) ,φ(r))
N

The Metropolis algorithm is proceeded as follows. We randomly sample
i(cid:48) and k(cid:48), which means both T (i → i(cid:48)) and T (k → k(cid:48)) are constant, and we
sample θ(cid:48)
i(cid:48)|µk, Σk). After
we propose the new state s(cid:48), the acceptance probability A(s → s(cid:48)) in Eq.(31)
is concretely written as,

i(cid:48)|µk, σk) which means T (θi → θ(cid:48)

i(cid:48) from p(θ(cid:48)

i(cid:48)) = p(θ(cid:48)

A(s → s(cid:48)) = min

(cid:20)

1,

gi(cid:48)k(cid:48)(θ(cid:48)
i(cid:48), φ(r))
gik(θi, φ(r))

(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)
T (i(cid:48) → i)
(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)
T (i → i(cid:48))

(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)
T (k(cid:48) → k)T (θ(cid:48)
(cid:88)(cid:88)(cid:88)(cid:88)(cid:88)
T (k → k(cid:48))T (θi → θ(cid:48)

i(cid:48) → θi)
i(cid:48))

(cid:21)

Springer Nature 2021 LATEX template

10

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm
(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)
p(θ(cid:48)
i(cid:48) |µk(cid:48) ,Σk(cid:48) )
i(cid:48) )
Ni(cid:48)
(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)

wk(cid:48) p(Yi(cid:48) |σ2,θ(cid:48)

p(θi|µk,Σk)

= min

1,







(cid:20)

= min

1,

wkp(Yi|σ2,θi)
Ni
p(Yi(cid:48)|σ2, θ(cid:48)
i(cid:48))
p(Yi|σ2, θi)

×

Ni
Ni(cid:48)

×

(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)
p(θi|µk, Σk)
(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)(cid:104)
p(θi(cid:48)|µk(cid:48), Σk(cid:48))
wk(cid:48)
wk

(cid:21)

.

(32)

We judge if the new state s(cid:48) is accepted by Eq.(32). If accepted, we keep
the new state s(cid:48) and set s(cid:48) as the current state s; if not, we keep the current
state s and continue to propose new state s(cid:48). We repeat the process until
the target distribution is formed and get m suﬃcient independent samples of
f (j)
i(cid:48)k(cid:48)(θi(cid:48)), where j denotes the label of a sample of (i(cid:48), k(cid:48), θ(cid:48)
i(cid:48)) combination. The
expectation of Eq.(28) is evaluated as,

(cid:104)f (cid:105) ≈

1
m

m
(cid:88)

j=1

f (j)
i(cid:48)k(cid:48)(θi(cid:48))

(cid:12)
(cid:12)
(cid:12)
(cid:12){i(cid:48),k(cid:48),θi(cid:48) }∈π(s(cid:48))

,

(33)

and according to central limit theorem [29, 30], the error bar of Monte Carlo
(also called standard error in statistics) is the standard deviation of the mean
of the m independent samples.

The unique Metropolis sampling as shown in Eq.(32) makes RPEM not

only fast but also accurate, as will be shown in the following section.

3 Results and Discussions

3.1 Hardware and Software

In this paper, we used a ThinkPad P72 laptop with Intel Xeon-2186M CPU
(2.9Ghz base frequency and 4.8Ghz max turbo frequency, 6 cores 12 threads)
and 64GB DDR4-2666 ECC memory. RPEM is written in modern Fortran and
is fully parallelized using MPI, it can be run on both PCs and supercomputers.
We use Intel Fortran and MPI provided in the free Intel OneAPI 2022.1.3. For
the comparison among RPEM, SAEM, and QRPEM, all the runs are using 6
cores and the platform is Windows 10 Pro for Workstation 2. The Monte Carlo
sampling size mGauss in Eq.(24) is set to 1000 for RPEM. In RPEM, we use
FLINT [31] which is written in modern Fortran as our non-stiﬀ ODE solver,
and when stiﬀ ODEs are detected, we use the latest version of the well known
LSODA solver in ODEPACK [32]. The absolute tolerance ATOL and relative
tolerance RTOL in the ODE solvers are set to 10−6 in RPEM. SAEM is in
Monolix 2019R1 with default settings. QRPEM is in Certara RsNLME [13]
with NLME Engine version 21.11.2, and its sample size is set to 500, and the
maximum ODE steps is set to 500.

2We also tested the speed of RPEM using GFortran and MPICH on Linux and Mac with M1

chip, the speed are consistent and similar with using Intel OneAPI.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

11

3.2 Model with analytic solution

We ﬁrst report the results of RPEM by using the same two-stage model as in
[4] with the useful case as indicated by Eqs.(18-21). It is a one-compartment
PK model with K = 2 mixing whose plasma concentration is given by

yji =

D
Vi

e−kitj (1 + (cid:15)ji) ,

(34)

where j ranges from 1 to the number of samples per subject, mi, and i ranges
from 1 to the number of subjects, n. The random eﬀects are denoted by (cid:15)ji,
which is a Gaussian random number with standard deviation σ. D is a bolus
drug administration with the unit of dose, Vi is the volume and ki is the
elimination rate constant.

At the ﬁrst stage, Yi ∼ N (hi(θi), σ2Hi(θi)), for this model it explicitly

means,

hi(θi) =

Hi(θi) =

D
Vi
D2
V 2
i

(cid:0)e−kit1, ..., e−kitmi (cid:1)T

,

diag (cid:0)e−2kit1, ..., e−2kitmi (cid:1) ,

(35)

(36)

and therefore,

p(Yi|σ2, θi) =

(cid:40)

exp

− 1
2

(cid:12)
(cid:12)
(cid:12)

D
Vi

σ

mi(cid:89)

j=1

At the second stage, we have

(cid:20) Yji− D
exp(−kitj )
Vi
(cid:12)
(cid:12)
(cid:12)
(cid:12)
exp(−kitj )
σ
(cid:12)
(cid:12)
(cid:12)
(cid:12)
exp(−kitj)
(cid:12)

2π

√

D
Vi

(cid:21)2(cid:41)

.

(37)

θi = (ki, Vi)T ∼i.i.d

K
(cid:88)

k=1

wkN (µk, Σk),

(38)

where µk = (µk, µV )T and we assume Σk = diag(σ2

k, σ2

V ). Therefore,

p(θi|µk, σk) =

(cid:20)

− 1
2

exp

σk

(cid:16) ki−µk
σk

√

2π

(cid:17)2(cid:21)

(cid:20)

− 1
2

exp

×

σV

(cid:16) Vi−µV
σV

√

2π

(cid:17)2(cid:21)

.

(39)

For the K = 2 case used in this paper, µk and Σk can be concretely
V ) and Σ2 =
V ). We ﬁx D = 100, and we set mi = 5 such that t1 to t5 are 1.5, 2,
3

written as µ1 = (µk1, µV )T , µ2 = (µk2, µV )T , Σ1 = diag(σ2
diag(σ2
3, 4, 5.5 correspondingly. All the parameters we used to generate the data Yi

k2, σ2

k1, σ2

3Observation data yji for analytic model can be generated from Eq.(34).

Springer Nature 2021 LATEX template

12

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

are listed in the “True Values” column in Table 1. The initial condition of the
parameters is listed in the “Initial Values” column. Starting from some initial
condition, our purpose is to use RPEM to ﬁnd the true values of the parameters.

Table 1 Parameter values estimated by RPEM for varying subject numbers, n, each
using 50 iterations. True values are simulated, and initial conditions for each experiment
are indicated. Time to completion is included in the column headers. Data are presented as
the mean. The value in parentheses is the σ on that digit, e.g., 19.93(5) means 19.93 ± 0.05,
which, is the error bar (standard deviation of the mean) of the independent samples [29]
after convergence. For example, if we run 50 iterations, and after 20 iterations convergence
was reached, then we take the uncorrelated samples from the last 30 iterations, and the σ
is the standard deviation of the mean of those uncorrelated samples [30, 33].

True Values

µV
µk1
µk2
w1
w2
σV
σk1
σk2
σ

20
0.3
0.6
0.8
0.2
2
0.06
0.06
0.1

n = 100
0.4 sec
19.93(5)
0.301(1)
0.599(2)
0.8016(6)
0.1983(6)
2.01(2)
0.057(1)
0.048(1)
0.102(1)

n = 2 × 104
55 sec
20.006(8)
0.3005(3)
0.5973(4)
0.7992(4)
0.2007(4)
1.97(1)
0.0592(1)
0.0602(7)
0.1000(1)

n = 2 × 106
72 min
20.008(5)
0.2994(3)
0.5994(5)
0.7996(5)
0.2004(5)
1.967(5)
0.0593(2)
0.0610(4)
0.10036(2)

n = 4 × 107
30 core-hrs
20.011(4)
0.3000(3)
0.5990(5)
0.7985(6)
0.2015(6)
1.966(2)
0.0597(2)
0.0615(6)
0.10027(2)

Initial Values

50
1.0
1.0
0.5
0.5
50/3
1/3
1/3
0.3

In Table 1, we report the evaluated parameters using RPEM for 50 iterations.
RPEM is fast and accurate even on a single CPU core, as can be seen in the
n = 100, n = 2 × 104 and n = 2 × 106 cases. For n = 100 case with 50 iterations,
RPEM took 0.4 seconds with results comparable to those obtained by tradition
MCPEM [4] using importance sampling which took about half an hour in 2007
using Matlab. Because RPEM is fast and accurate, it enables us to deal with
large datasets eﬃciently. Unlike generating 200 data sets each with n = 100 (so
n = 2 × 104 total), running MCPEM on each of the 200 datasets individually,
and ﬁnally combining the results as was done in [4] and took approximately
100 hours to train the model, in RPEM we completed training of the model for
the whole n = 2 × 104 subjects in 55 seconds with even more accurate results.
Furthermore, we benchmarked the training of 2 million subjects in only 72
minutes and the results remained almost the same.

Note that in RPEM, we can ﬂexibly adjust the number of Gaussian samples
in the E-step and the number of Metropolis samples in the M-step; therefore,
RPEM does not have a strong subject number n dependence. For example,
for n = 100 it took 0.4 second, but for n = 2 × 104 which is 200 times bigger
than 100 it only took 55 seconds instead of 0.4 × 200 = 80 seconds. Similarly,
n = 2 × 106 is bigger than n = 2 × 104 by a factor of 100, but RPEM only
took 72 minutes instead of 55/60 × 100 = 91.7 minutes. In all the training, we
kept the number of Gaussian samplings in the E-step as 2000, the number of
Metropolis trials in the M-Step ranged from 2n to 200n, and the autocorrelation
time [33] was about 80 steps.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

13

Fig. 1 The convergence of RPEM’s log-likelihood starting from 11 initial conditions plus
starting from the true values.

For n = 4 × 107 (i.e. the population of the whole of California) we used
MPI and 5 CPU cores. Since the performance of each CPU core on a laptop
will change depending on how many cores are fully activated, the measurement
of the speedup of MPI on a laptop is not exactly accurate. Nonetheless, RPEM
still was able to ﬁnish the training with 5 cores in a very reasonable 6.1 hours
(30.5 core hours).

RPEM is not only fast and accurate, but also robust. We extensively tested
it with varying initial conditions, and we consistently converged within the
ﬁrst 50 iterations. In Fig. 1, we show the convergence of the log-likelihood of
RPEM for the case of n = 2 × 104 starting from 11 diﬀerent initial conditions.
The log-likelihoods are calculated in the E-step using Eq.(26). We particularly
picked various poor initial conditions whose starting log-likelihood was as low as
−3.23 × 105, and for all of them, RPEM was able to rapidly reach the stabilized
log-likelihood which was around −6000. For better initial conditions RPEM
was able to reach stabilized log-likelihood within 15 iterations. For worse initial
conditions RPEM was able to reach stabilized log-likelihood within the ﬁrst
30 iterations. The almost horizontal line on the top with dark cyan color is
RPEM’s evolution of log-likelihood starting from the true values.

05101520253035404550-350k-325k-300k-275k-250k-225k-200k-175k-150k-125k-100k-75k-50k-25k0Log LikelihoodRPEM IterationsSpringer Nature 2021 LATEX template

14

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

3.3 Model with ordinary diﬀerential equations

In this section, our task is to use RPEM, SAEM and QRPEM to reconstruct
the µk and Σk from the simulated data based on a realistic Voriconazole model
[34] with ordinary diﬀerential equations (ODEs), and compare RPEM with
SAEM and QRPEM in terms of speed and accuracy.

3.3.1 Voriconazole Model

In this Voriconazole model, we follow the data and model format for Pmetrics
[35, 36]. The 7 primary parameters are Ka, Vmax0, Km, Vc0, FA1, Kcp, and
Kpc. So we have,

θi = (Ka, Vmax0, Km, Vc0, FA1, Kcp, Kpc)T ,

and the population mean is

µk = (cid:0)µKa , µVmax0, µKm , µVc0 , µFA1 , µKcp , µKpc

(cid:1)T

,

(40)

(41)

and again we assume Σk = diag(σ2
, σ2
). The
covariate is weight (wt). The secondary parameters which are obtained from
primary parameters and covariate are Vm and V ,

Vmax0

, σ2

, σ2

, σ2

, σ2

, σ2

Kcp

Kpc

FA1

Km

Vc0

Ka

(42)

(43)

(44)

Vm = Vmax0 × wt0.75,
V = Vc0 × wt.

For any subject i, ODEs are listed as below,

= −Ka × x1,

dx1
dt
dx2
dt
dx3
dt

= −Ka × x1 + r(i)

IV (t) −

V (i)
m × x2
Km × V (i) + x2

− Kcp × x2 + Kpc × x3,

(45)

= Kcp × x2 − Kpc × x3,

(46)

where for subject i, r(i)
IV (t) is the ratio between dose and duration at time t. If
at time t the dose is non-zero and duration is zero, it means a bolus and x1(t)
needs to be added by an additional dose × FA1. V (i)
m and V (i) are its secondary
parameters Vm and V .

The concentration for subject i at time tj is given by,

yji =

x2(tj)
V (i)

+ (cid:15)ji,

(47)

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

15

and we assume the noise (cid:15)ji is a Gaussian random number whose standard
deviation σji has the following form,

σji = c0 + c1 ×

x2(tj)
V

+ c2 ×

(cid:21)2

(cid:20) x2(tj)
V

+ c3 ×

(cid:20) x2(tj)
V

(cid:21)3

,

(48)

where c0 to c3 are non-negative constants.

Similar with what has been described in Sec. 3.2, at the ﬁrst stage, Yi ∼

N (hi(θi), Hi(θi)), and for this model we have

1
V (i)

hi(θi) =
Hi(θi) = diag (cid:0)σ2

[x2(t1), ..., x2(tmi )]T ,

1i, ..., σ2

mii

(cid:1) ,

and therefore,






exp

mi(cid:89)

j=1

p(Yi|σ2

ji, θi) =

(cid:34)

Yji−

x2(tj )
V (i)

σji

− 1
2

√

2πσji

(cid:35)2




.

(49)

(50)

(51)

At the second stage, again we have θi ∼i.i.d

K
(cid:80)
k=1

wkN (µk, Σk).

3.3.2 Simulated Data

For the simulated data, We set the number of subjects n = 50. We assume
K = 1, the covariate is weight. For each subject, we set observation time t (unit
is hour) as 2, 4, 6, 8, ..., 48 so the number of observation is mi = 24. At t = 0
we set dose as 180 and duration time as 2. At t = 24 we set dose as 180 and
duration time as 0. Similarly with what was done in [37], the covariate weight
are all set to 16.5 (unit is kg), to minimize the eﬀects/noise from covariates
when reconstructing the population parameters µk and Σk. For the noise in
Eq.(48), we set c0 = 0.02, c1 = 0.1, and c2 = c3 = 0.

The Simulated data for the Voriconazole ODE model is presented as Table
4 in Appendix. The observation data yji is provided in Table 4 as the “OUT”
column. These observation data yji for the 50 subjects can be generated from
the primary parameters in Table 3. The 50 sets of primary parameters are
sampled from gaussian whose true values of µk and Σk are listed as the ”True”
rows in Table 2.

3.3.3 Stopping Criterion

RPEM’s stopping criterion is described as follows. As the iteration going on, we
took the latest consequent 30 runs’ log likelihood, calculate their slope based on
least square method [38]. Before convergence, this slope must be positive. After

Springer Nature 2021 LATEX template

16

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

convergence, the log likelihood is ﬂattened, and this slope cannot be always
positive anymore, it can be positive or negative. Once we detected at which
iteration such a negative slope ﬁrst occur, we stopped the iteration, and we
take the samples of the latest consequent 30 runs as stabilized samples.

None of the stabilized samples are wasted. We re-sample from the these
stabilized samples using Eq.(32) and obtain our ﬁnal estimations of µk and
Σk. Besides, since the stabilized samples of θi in RPEM are approximately

distributed from

K
(cid:80)
k=1

wkN (µk, Σk), we also included a fast gaussian mixture

clustering algorithm [39] which directly ﬁnd the optimum µk and Σk from the
stabilized samples of θi as well. Such results are marked as RPEM-GMM. So
when RPEM ﬁnishes, it will have RPEM-GMM results also. When report the
speed of RPEM, the cost of RPEM-GMM is already included.

3.3.4 Comparison among RPEM, SAEM, and QRPEM

We randomly picked 21 initial conditions from Table 3 which is used to generate
the simulated data. The 21 initial conditions are picked from id number 1, 10, 13,
15, 17, 20, 23, 25, 27, 3, 30, 33, 35, 37, 40, 43, 45, 47, 5, 50, 7 in Table 3, by setting
the corresponding primary parameters as the initial µk, and Σk = µk/2.5. We
let RPEM, SAEM and QRPEM each starts from such 21 initial conditions and
compare their speed and accuracy in reconstructing true population parameters
µk and Σk. We use σKa , σVmax0, σKm , σVc0, σFA1, σKcp , σKpc to represent Σk.

Fig. 2 The speed comparison among RPEM, SAEM and QRPEM for the Voriconazole
model. The timing of the runs are represented as data by solid symbols. We use box plot
plus data overlap. The deﬁnition of the box plot is as follows, the whiskers denote the 5%
and 95% percentile of the data, the body of the box covers 25% to 75% percentile, the mean
and median are represented by a hollow square and a vertical line correspondingly.

We list the speed comparison among RPEM, SAEM and QRPEM in Fig. 2.
We see that most RPEM runs ﬁnished at around 20 to 25 seconds (about 42
iterations, each RPEM iteration takes about 0.6 seconds). The rest of RPEM
runs ﬁnished between 30 to 60 seconds. For SAEM which are represented by

RPEMSAEMQRPEM01224364860728496108120132144156168180192Time cost (seconds)Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

17

Fig. 3 The comparison among QRPEM, SAEM, and RPEM in terms of the ability of
reconstructing µk and Σk. From left to right, the leftmost symbol is true value, the black
box with data overlap are QRPEM’s result, the red box with data overlap are SAEM’s result,
the blue ones are RPEM-GMM’s result, the rightmost green ones are RPEM’s result. The
deﬁnition of the box with data overlap is the same as in Fig. 2.

the red symbols, most of them ﬁnished between 90 and 120 seconds, and few
of them ﬁnished between 130 and 144 seconds. The results of QRPEM are
more scattered, the fast runs ﬁnish around 64 seconds, while the slow ones
take around 192 seconds. On average, we ﬁnd that for Voriconazole model, the

1234567891011mu_KaTrueSAEMRPEM(GMM)RPEMQRPEM0246810121416182022mu_Vmax00246810121416182022242628mu_Km0.00.20.40.60.81.01.21.41.61.82.02.22.4mu_Vc00.700.710.720.730.740.750.760.77mu_FA10.00.20.40.60.81.01.21.41.61.82.02.22.42.62.83.0mu_Kcp0.00.10.20.30.40.50.60.70.80.91.01.11.21.31.41.51.61.7mu_Kpc0.00.51.01.52.02.53.03.54.04.55.05.5sigma_Ka012345678sigma_Vmax00123456789101112sigma_Km0.00.10.20.30.40.50.60.70.8sigma_Vc00.000.010.020.030.040.050.060.070.080.090.10sigma_FA10.00.10.20.30.40.50.60.70.80.91.0sigma_Kcp0.00.10.20.30.40.50.60.70.80.91.0sigma_KpcSpringer Nature 2021 LATEX template

18

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Fig. 4 The comparison among RPEM, SAEM and QRPEM in terms of averaged percentage
error per sigma (also called omega in SAEM) .vs. averaged percentage error per parameter.
The red squares are from SAEM, the green circles are from RPEM, and the blue stars are
from RPEM-GMM. The box plots with data overlap on the top and right side have the same
deﬁnition as in Fig. 2.

speed of SAEM and QRPEM are comparable (QRPEM is slightly faster), and
RPEM is about 3 or 4 times faster than both of them.

In Fig. 3, we show RPEM, SAEM, and RPEM’s abilities in reconstructing
the true population parameters µk and Σk. Within 5 − 95% percentile, RPEM
(including RPEM-GMM) can reconstruct almost all the µk and Σk. Out of the
total 14 of them, RPEM only missed 2, σFA1 and σKpc . SAEM on the other
hand, missed 7 out of 14, µFA1 , µKcp and σKcp , µKpc and σKpc , µKa and σVc0.
Within 25 − 75% percentile, RPEM only missed 6 out of 14, σVc0, σFA1 and
σFA1 , σKcp , µKpc and σKpc . While SAEM missed 10 out of 14, namely µKa
and σKa , µVc0 and σVc0, µFA1 and σFA1 , µKcp and σKcp , µKpc and σKpc . For
QRPEM, we ﬁnd it nearly missed all the all the true µk and Σk. However we
ﬁnd some ODE diﬃculties in QRPEM due to the additive parameterizations

01020304050607080901000102030405060708090100110120130Averaged sigma(omega) percentage error (%)Averaged parameter(mu) percentage error (%)To the lower and left cornor the better RPEM-GMM (14.9%, 31.5%) (cid:222) 23.2% RPEM (14.9%, 37.4%) (cid:222) 26.2% SAEM (26.9%, 40.6%) (cid:222) 33.8% QRPEM (38.8%, 31.8%) (cid:222) 35.3%Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

19

Table 2 The parameter reconstruction comparisons among RPEM, SAEM, and QRPEM.
The results are obtained by averaging the results from the 21 randomly picked initial
conditions. The overall averaged percentage error for all the µk and Σk are listed in the
parentheses correspondingly.

Method &. % error/parameter

µKa

µVmax0 µKm

µVc0

µFA1

µKcp

µKpc

True
RPEM(14.9%)
RPEM-GMM(14.9%)
SAEM(26.9%)
QRPEM(35.9%)

2.26
2.463
2.516
3.651
3.204

10.32
1.16
9.23
12.423 1.218
9.928
11.321 1.208
9.543
10.686 1.341
9.472
13.943 17.223 1.450

0.73
0.736
0.739
0.744
0.733

1.75
1.591
1.592
1.208
0.991

1.38
1.218
1.215
1.078
1.059

Method &. % error/sigma

σKa

σVmax0 σKm

σVc0

σFA1

σKcp

σKpc

True
RPEM(37.4%)
RPEM-GMM(31.5%)
SAEM(40.6%)
QRPEM(43.0%)

0.76
0.462
0.547
1.403
1.235

3.96
3.829
3.528
3.951
5.548

4.45
6.093
5.330
5.055
8.036

0.17
0.206
0.224
0.274
0.246

0.07
0.77
0.0369 0.479
0.0394 0.524
0.0656 0.514
0.0639 0.580

0.82
0.598
0.570
0.527
0.521

for the Voriconazole model, therefore we suspect its accuracy is compromised
because of that.

To quantitatively compare the accuracy among RPEM, QRPEM, and SAEM,
in Fig. 4, for all of them, we plot the averaged percentage error for all the Σk .vs.
averaged percentage error for all the µk, for each of the 21 runs 4. The symbols
are to the lower and the left corner the better. We found that both RPEM and
RPEM-GMM are more concentrated towards the lower and the left corner than
SAEM and QRPEM. Both SAEM and QRPEM’s averaged percentage error
for all the µk are bigger than RPEM’s. The overall averaged percentage error
5 for both RPEM and RPEM-GMM are about 14.9%, for SAEM
for all the µk
is 26.9%, for QRPEM is 35.9%. The overall averaged percentage error for all
the Σk for RPEM and RPEM-GMM are about 37.4% and 31.5%, for SAEM
is 40.6%, for QRPEM is 43.0%. We also notice that SAEM and QRPEM’s
outliers can be about two times of RPEM’s. In Table 2, we list the averaged µk
and Σk reconstructed from the 21 initial conditions of RPEM, RPEM-GMM,
SAEM, and QRPEM.

Based on the analysis of Fig. 2, Fig. 3, Fig. 4, as well as Table 2, we can
qualitatively conclude that, for the Voriconazole model, RPEM is faster and
more accurate than SAEM and QRPEM.

We also need to point out that, for RPEM, by using the Metropolis algorithm
Eq.(32), we did not neglect any of the 50 subjects in any iterations in any of
the RPEM runs. All 50 subjects are always almost equally sampled, i.e., in

4In each run, each of the σKa , σVmax0 , σKm , σVc0 , σFA1 , σKcp , and σKpc has a corresponding
percentage error compared with their true values. We sum up these 7 percentage errors and divide it
by 7, and that is how we obtain the averaged percentage error for all the Σk. Averaged percentage
error for all the µk is similarly obtained.

5The overall averaged percentage error for all the µk means that, we averaged the 21 runs’
averaged percentage error for all the µk. Same thing applies to the overall averaged percentage
error for all the Σk.

Springer Nature 2021 LATEX template

20

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

the M-step in each iteration in each RPEM run, each of the 50 subjects shares
about 2% of all the samples in Eq.(33).

3.3.5 Scalability

Since RPEM is equipped with MPI, we also run RPEM from an initial condi-
tion on Agave supercomputer cluster at Arizona State University to test its
scalability.

Fig. 5 The scaling eﬃciency of the current PREM code on Agave supercomputer cluster
at Arizona State University. We use mGauss = 3 × 104 in the E-step, and 108 trials (m ≈
2.5 × 105 uncorrelated samples) in the Metropolis judgement in M-step. The red dotted line
is the theoretical speedup. The back dots are real speedup.

In Fig. 5, we show the scaling eﬃciency of RPEM. Overall, when the number
of CPU cores are less than 100 (which covers the range from a laptop to
high-end personal desktop nowadays), the eﬃciency of RPEM is around 90%.
As the number of cores beyond 100, since the samples at E-step needs to be
calculated on each core become fewer and fewer, the real computation time
in solving ODEs is decreased, so the percentage of MPI communication time
in the total time increased. Therefore the eﬃciency decreased to about 70%
when the number of CPU cores beyond 200. However, when the ODE model
is complicated enough and require many samples, such that as long as we are
able to make computation time always much more than MPI communication

0204060801001201401601802000.0000.0020.0040.0060.0080.0100.0120.0140.0160.0180.0200.0220.024Number of CPU cores1/Time (second-1)020406080100120140160180200SpeedupSpringer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

21

time, RPEM on supercomputer will always have reasonably high eﬃciency.
Therefore, RPEM is ready for models which are complicated enough and no
longer be suitable on a personal computer.

4 Summary and Outlook

In this paper, we presented our quantum Monte Carlo inspired novel MCPEM
algorithm which we call RPEM. RPEM distinguishes itself from other MCPEM
algorithms mostly in the M-step, which uses Metropolis algorithm and samples
both continuous variables and discrete variables at the same time eﬃciently.
Therefore, unlike other MCPEM algorithms which uses biased estimators, both
RPEM’s E-step and the M-step uses unbiased estimators which will lead to
fast convergence and accurate results.

With concrete examples of a one-compartment two-mixture analytic model
and a Voriconazole model with ODEs, and by comparing RPEM with SAEM
and QRPEM, we show that RPEM is indeed not only a fast, but also an accurate
MCPEM algorithm. We also show that RPEM is a scalable high performance
MCPEM which can be run on supercomputers for more complicated models.
In future work we will further test and validate RPEM on more complex
data and models, test several approaches to rapidly arrive at the optimal number
of mixing components, and further develop or implement techniques to avoid
local maxima.

We wish as a newly developed MCPEM method, RPEM can be a useful
addition to the current MCPEM methods. We welcome ideas, suggestions, and
cooperating opportunities from the community.

Acknowledgments. R.C. thanks Professor Kevin E. Schmidt at Arizona
State University for inspiring discussions and insights. R.C. thanks Dr. Keith
Nieforth at Certara, Inc. for the immense help in preparing the Voriconazole
model and data ﬁles for Certara RsNLME, which are used in the paper in
benchmarking the QRPEM results. R.C. thanks Dr. Michael Tomashevskiy
at Certara, Inc. for the suggestions in setting the QRPEM engine parameters.
R.C. acknowledge Research Computing at Arizona State University for provid-
ing HPC and storage resources that have contributed to the research results
reported within this paper. R.C also acknowledge valuable help received from
Fortran-lang community [40, 41]. In particular, R.C. thanks Ondˇrej ˇCert´ık,
John Campbell, Milan Curcic, Martin Diehl, Steve Kargl, Steve Lionel (Doc-
tor Fortran), Bharat Mahajan, Vincent Magnin, Arjen Markus, Panagiotis
Papasotiriou, Ivan Pribec, Vivek Rao, Brad Richardson, Simon Rowe, Amir
Shahmoradi, Michal Szymanski, Theodore-Thomas Tsikas, John S. Urban, and
Yi Zhang for various and generous help in modern Fortran coding and the
ODE solvers used in RPEM code.

Declarations

Funding. This work was funded in part by U01 1FD006549 (Neely, PI).

Springer Nature 2021 LATEX template

22

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Conﬂict of interest/Competing interests. None.

Appendix

We attach Table 3 which includes the parameters for each subject we used to
generate our simulated observations (the “OUT” column) in Table 4.

Table 3: The primary parameters for 50 simulated subjects.

id Ka
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

2.16175
2.70467
0.86802
1.88153
2.80883
2.54211
3.47085
2.17099
1.57192
2.60934
3.73407
0.96083
2.52648
1.91656
3.25050
2.28468
2.51877
2.98099
3.48616
2.84564
1.96188
1.16896
1.39762
1.85824
2.15553
0.71040
2.63960
2.09316
3.08274
2.03367
2.96608
2.96928
1.86264
2.38753
2.76634
2.38967
1.65951
2.69204
1.95215
2.59840
2.91667
2.53195
2.60862
0.58599
1.98646
0.29168
2.48169
2.22336

Vmax0
12.48199
9.78744
7.91606
8.86042
8.42150
17.24843
11.61866
9.75727
5.59737
10.98057
14.93659
10.06061
7.74223
5.03580
17.24009
4.47282
9.76898
9.26864
11.38394
6.20100
14.98348
11.78983
4.09224
8.36087
2.57094
1.06016
8.29571
8.98401
17.96091
10.18672
7.28727
13.67791
11.01701
11.67883
18.03812
9.78560
3.13223
6.39917
11.79524
9.22056
3.09680
10.14076
10.54223
4.76366
8.08514
7.33712
10.29498
5.76416

Km
2.71776
6.44493
7.68747
10.03493
14.56049
6.04822
9.75142
16.39916
14.67535
7.40272
11.41309
16.16493
11.59466
11.02001
9.37296
10.08607
10.45028
18.52777
10.10534
7.26834
0.15383
8.04240
7.97339
8.76100
13.56941
17.67905
18.33452
12.37254
14.27339
11.10658
6.99269
6.31094
12.87029
14.26063
3.07817
11.70723
5.94465
12.55394
5.67997
10.51804
11.35456
5.06273
12.53307
15.70633
8.50926
1.29283
14.20638
3.11172

Vc0
1.20684
1.14306
1.11961
0.70482
0.95945
1.18474
0.91688
1.05750
1.28450
1.52716
1.18300
1.16985
1.31385
1.22730
1.14829
0.98552
1.31887
1.04030
1.15547
1.10599
0.87769
1.34477
0.92843
1.21561
1.03609
1.50895
1.17994
1.04046
1.32652
1.12099
1.14415
1.00612
1.03917
1.34393
1.17107
1.05385
1.19765
1.42967
1.19687
1.02557
1.13570
0.97316
1.36712
1.20385
1.14839
1.16022
0.95671
1.27019

FA1
0.78483
0.76062
0.68769
0.60478
0.85820
0.62200
0.82786
0.74406
0.64235
0.69888
0.70244
0.68019
0.71014
0.70588
0.75987
0.73097
0.80720
0.68523
0.79300
0.83448
0.66481
0.73986
0.76916
0.81729
0.73005
0.84021
0.69320
0.73475
0.61172
0.78087
0.72547
0.68985
0.69410
0.72296
0.65480
0.72469
0.64455
0.64700
0.90090
0.73848
0.67360
0.81839
0.76164
0.72171
0.72214
0.86453
0.84455
0.68945

KCP
1.98233
0.42104
2.25451
1.03302
1.66952
2.46068
1.23929
1.53153
1.70351
1.64686
0.82287
2.53142
1.61765
2.38839
0.77409
2.17076
1.06230
0.65535
1.46625
1.12624
2.26024
0.12803
3.29230
0.58823
2.28487
2.56711
1.67748
1.97920
0.53967
1.26204
1.47939
2.84039
2.06834
1.30461
2.27640
1.99886
2.57992
2.61113
2.54530
1.87255
2.56513
1.06434
1.97280
2.96369
1.01623
2.36580
0.09118
1.54914

KP C
1.92813
0.73375
1.25205
2.53370
1.29889
0.71291
0.77615
0.24915
1.30165
1.17349
1.22319
0.11994
3.30605
1.06032
0.04623
0.80878
2.52830
0.97523
2.32041
1.51945
2.77398
1.88003
1.54723
0.91341
0.96151
2.50179
1.30043
0.76994
3.23218
0.78825
0.60916
1.71189
0.99791
0.31776
1.22315
0.72627
1.56659
2.18793
2.35559
0.23318
1.83971
2.13429
1.75546
2.21774
2.55809
0.69161
0.93388
0.30175

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

23

id Ka
49
50

3.07070
1.44917

Table 3 continued from previous page
Vc0
1.52263
1.06498

Km
13.97677
16.09891

FA1
0.60099
0.68750

Vmax0
5.87402
6.56488

KCP
2.57091
2.40592

KP C
0.67960
1.30889

Table 4: The Pmetrics data csv ﬁle for the 50 simulated subjects.

EVID TIME DUR DOSE OUT
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0

.
3.231605
0.6583666
0.1682362
0.02829156
0.02258485
1.00E-08
0.005592424
1.00E-08
0.01629438
1.00E-08
0.04076559
1.00E-08
.
1.15614
0.281767
0.1278995
0.03411545
1.00E-08
1.00E-08
0.01723742
0.000604796
0.01808877
0.01057656
1.00E-08
1.00E-08
.
4.958398
2.085289
1.010547
0.7523262
0.3875375
0.1640207
0.1275763
0.04831608
0.0308734
0.01062381
0.01030656
0.02132946
.
2.594984
1.613017
0.6581002
0.3213148
0.1312155
0.1190304
0.05082035
1.00E-08
1.00E-08
1.00E-08
0.01266306

180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.

0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46

2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.

C0
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1

#ID
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 001
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002
1 002

Springer Nature 2021 LATEX template

24

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 002
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 003
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 004
1 005
1 005
1 005
1 005
1 005
1 005

EVID TIME DUR DOSE OUT
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0

0.008588972
.
3.464131
2.655
1.810198
1.211573
0.9561301
0.7798386
0.6188984
0.4225775
0.3230273
0.2007859
0.2219231
0.07845621
.
1.419708
1.786754
1.097542
0.7613311
0.7011309
0.5037915
0.4481216
0.2687657
0.2717611
0.2445833
0.1042136
0.06368685
.
8.18337
4.997688
1.816756
1.136896
0.3575755
0.2337979
0.1323911
0.03138902
0.01779794
0.04574316
0.01847556
1.00E-08
.
4.286945
2.294281
0.9668288
0.5449395
0.1107054
0.05993787
0.02966021
1.00E-08
0.04063547
1.00E-08
0.01525256
1.00E-08
.
4.838317
3.061277
3.15351
2.361843
2.147734

.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.

48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10

.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.

C0
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1

.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

25

Table 4 continued from previous page

#ID
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 005
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 006
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0

1.582271
0.9242287
0.878542
0.6846397
0.5307116
0.538227
0.3405595
.
4.014034
2.906239
2.006276
2.378978
1.491026
1.308166
0.9838239
0.5205009
0.6570543
0.4183828
0.3821081
0.2486434
.
2.509735
0.8336683
0.6544152
0.3888848
0.3058639
0.1909192
0.1204065
0.0748212
0.06861708
0.08296978
0.00834925
0.00868447
.
0.7519935
0.4239734
0.2764687
0.137485
0.1132378
0.08666334
0.07615015
0.03220794
0.00091941
0.01652719
1.00E-08
1.00E-08
.
4.512809
1.855766
1.511463
0.9647246
0.708994
0.4978313
0.4431811
0.2162957
0.1246395
0.08108306
0.04856117
0.07430903

.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.

12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24

.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.

Springer Nature 2021 LATEX template

26

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 007
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 008
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009
1 009

EVID TIME DUR DOSE OUT
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0

.
2.334212
1.598653
1.155539
0.559882
0.4917824
0.3103541
0.1637744
0.1228365
0.1008811
0.08258137
0.00596549
0.04327317
.
3.485251
1.076133
1.176256
0.9949264
0.7574178
0.7943679
0.9411772
0.7422809
0.6520838
0.5796746
0.6083238
0.5536771
.
1.981198
1.060703
1.06586
1.219964
0.9660706
1.005605
0.8684961
0.863722
0.9219415
0.8036532
0.6192056
0.6401681
.
3.992083
2.572869
2.537934
2.475569
2.371044
2.344595
1.592871
1.687884
1.412419
1.324496
1.004708
1.008688
.
3.337763
2.444014
2.371113
1.775583
1.79273
1.462504

180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.

24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36

0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.

C0
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

27

Table 4 continued from previous page

#ID
1 009
1 009
1 009
1 009
1 009
1 009
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 010
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 011
1 012

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1

1.692097
1.513135
1.16567
1.18374
0.8704594
0.8197963
.
3.101517
1.878948
1.572426
0.6956502
0.610419
0.3913323
0.3127787
0.2641725
0.1343706
0.1025725
0.0347821
0.01276489
.
1.484486
0.9754102
0.7570381
0.5032107
0.3155411
0.2457763
0.2280482
0.05635365
0.07460299
0.07478914
0.06126944
1.00E-08
.
4.621618
2.261577
1.360943
0.8982072
0.5207719
0.2806827
0.1154596
0.07292152
0.03636784
0.02119747
0.0207936
1.00E-08
.
2.192128
1.042114
0.8199844
0.3612256
0.1715545
0.1313825
0.0218208
0.03836787
0.01872426
0.06702993
0.0270502
1.00E-08
.

.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180

38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0

.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2

C0
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.

.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5

Springer Nature 2021 LATEX template

28

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 012
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 013
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0

1.83203
0.3650092
0.4319604
0.2640462
0.2092077
0.3348034
0.3142017
0.3187707
0.3012543
0.2767749
0.2331433
0.3569026
.
0.8583164
0.6144546
0.5162458
0.6867549
0.400769
0.4901581
0.4696785
0.3885752
0.4127037
0.3654188
0.4693249
0.4337235
.
5.000654
4.00258
2.934482
2.028999
1.656829
1.354938
0.8260507
0.6278476
0.4666539
0.4258067
0.2723506
0.1829567
.
3.161623
2.536416
1.587524
1.499259
0.8108056
0.8730401
0.5099063
0.4504397
0.320351
0.2750496
0.1522364
0.1480042
.
3.454707
2.068169
2.348566
2.001295
1.736427
1.437413
1.190888

.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.

2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14

.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

29

Table 4 continued from previous page

#ID
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 014
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 015
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016

EVID TIME DUR DOSE OUT
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0

0.9707848
1.119114
1.022739
0.7911461
0.78493
.
2.399305
2.258259
2.140117
1.564677
1.741877
1.414945
1.329637
1.270175
1.214381
0.9850701
0.7476856
0.6704499
.
2.867635
0.339446
0.1188627
0.1541011
0.135904
0.1319454
0.1210736
0.1731405
0.0341867
0.1001657
0.1312265
0.07900904
.
0.7494133
0.216205
0.1891647
0.2085349
0.1463903
0.05730632
0.1151028
0.1299478
0.100423
0.1472106
0.1054246
0.08341158
.
3.589124
2.418066
2.128743
1.922777
1.920372
1.63732
1.579082
1.277764
1.109377
1.188652
1.09182
1.019894
.
2.847522

.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.

16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26

.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.

C0
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1

.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.

Springer Nature 2021 LATEX template

30

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 016
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 017
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018
1 018

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0

2.645705
2.427263
1.857618
1.651463
1.654089
1.630431
1.134277
1.164896
1.13371
1.060495
0.7969471
.
4.359227
3.524592
2.651096
1.468157
1.093881
0.6388898
0.4171137
0.2645817
0.1098578
0.09891137
0.04996692
0.04568272
.
4.304495
2.138862
1.504994
0.8294245
0.6894145
0.4021793
0.3177056
0.1665307
0.09451958
0.01072403
0.04830603
0.05546331
.
6.998049
3.825794
2.568784
1.993374
2.157834
1.596983
1.120889
0.9747837
0.7534715
0.5416284
0.4370101
0.4075594
.
3.863411
2.482873
2.468188
1.712877
1.320064
0.8103042
0.8608792
0.5827486

.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.

28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40

.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

31

Table 4 continued from previous page

#ID
1 018
1 018
1 018
1 018
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 019
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 020
1 021
1 021
1 021

EVID TIME DUR DOSE OUT
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0

0.4892196
0.3265288
0.2799971
0.2315677
.
4.931496
2.867125
1.421079
0.9267284
0.6233686
0.4214615
0.239125
0.1137157
0.06608912
0.04965066
0.02648268
0.03940312
.
2.792353
1.98706
1.226678
0.6824164
0.3918984
0.221212
0.1613253
0.0712078
0.07501306
0.07329944
0.03283825
0.05251751
.
4.399717
3.500267
2.485771
1.772499
1.398573
0.7527992
0.649061
0.4155025
0.2615326
0.1918753
0.15349
0.09429605
.
4.561089
2.865604
1.535883
1.270225
0.8919122
0.7276058
0.454976
0.2858165
0.2010123
0.1128168
0.08124742
0.04842678
.
0.3213512
0.02499795

.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.

42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4

.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.

C0
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1

.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.

Springer Nature 2021 LATEX template

32

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 021
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 022
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0

0.008629073
0.02383631
1.00E-08
1.00E-08
0.01266046
1.00E-08
0.01853034
1.00E-08
1.00E-08
0.01384712
.
1.00E-08
1.00E-08
1.00E-08
0.01589462
1.00E-08
1.00E-08
0.02785449
0.02317882
0.03472254
0.01503209
0.03379128
1.00E-08
.
6.126054
2.48825
1.186027
0.3541526
0.1638893
0.06590444
1.00E-08
1.00E-08
0.02414753
0.01753093
0.006109468
0.02949782
.
3.13136
1.815524
0.8848653
0.2691026
0.1269315
0.0435905
0.04762451
0.01492382
0.008275641
0.01578136
1.00E-08
0.01877315
.
3.853784
3.07037
2.925799
2.48421
1.920969
1.246298
1.643137
1.326483
1.133888

.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.

6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18

.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

33

Table 4 continued from previous page

#ID
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 023
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 024
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025

EVID TIME DUR DOSE OUT
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0

0.7898401
0.7853527
0.8173353
.
3.775798
2.716151
2.312284
2.338791
1.971783
1.369928
1.51046
1.120161
1.140005
0.8819454
0.8578176
0.7529383
.
6.202683
3.142274
1.873116
1.125673
1.021791
0.7333572
0.4960717
0.294718
0.1494096
0.09271932
0.1192556
0.09353728
.
4.14411
2.316461
1.563636
0.9407873
0.8361195
0.4085268
0.2954321
0.1963065
0.1114649
0.05565723
0.05774106
0.01684401
.
4.713624
2.636834
2.527069
2.636136
2.221114
2.331842
2.398649
2.017508
2.032694
1.706858
1.773565
2.122523
.
4.356914
3.552757
3.455449

.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.

20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30

.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.

C0
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1

.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.

Springer Nature 2021 LATEX template

34

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 025
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 026
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027
1 027

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0

3.112051
2.78166
2.909538
2.783425
3.092704
2.828484
2.211155
2.639602
2.74221
.
3.65294
3.716818
3.707673
3.429782
3.34214
2.589066
3.169205
3.436091
2.971079
3.553553
3.11637
3.15298
.
6.095603
5.74731
6.508052
6.56746
5.289583
5.936665
5.346865
5.58934
5.388644
4.842136
5.241075
5.24408
.
4.407393
3.213476
2.924392
2.565128
1.94615
1.417458
1.542819
1.212031
1.052456
0.882064
0.7028596
0.454709
.
3.109594
2.533503
2.142088
1.823969
1.80735
1.333017
1.156963
0.9876268
0.9273027
0.6783347

.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.

32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44

.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

35

Table 4 continued from previous page

#ID
1 027
1 027
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 028
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 029
1 030
1 030
1 030
1 030
1 030

EVID TIME DUR DOSE OUT
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0

0.7720169
0.4680044
.
4.00657
2.144103
1.486167
1.452592
1.119716
1.295106
0.7763676
0.8856968
0.6623331
0.6129398
0.4494442
0.359917
.
2.0047
1.500582
1.466846
1.207594
0.9244699
0.7873599
0.7819443
0.6755769
0.5446186
0.346545
0.4295643
0.2893254
.
5.189709
2.556675
1.494375
0.5249589
0.3588205
0.1488314
0.06416674
0.03236784
0.000517779
1.00E-08
0.01420524
0.01866776
.
2.304515
1.071283
0.6039977
0.2483752
0.09192913
0.08011409
1.00E-08
0.00706335
0.005585139
0.02120098
1.00E-08
0.002030652
.
4.132641
1.904185
2.031214
1.309424

.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.

46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8

.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.

C0
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1

.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.

Springer Nature 2021 LATEX template

36

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 030
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 031
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0

0.8833161
0.9513675
0.7691624
0.5512664
0.3481463
0.2487049
0.2354513
0.1494215
.
2.282828
1.681251
1.328627
1.250001
0.6364511
0.5198067
0.4620282
0.4208857
0.2877665
0.1836495
0.1673349
0.1299785
.
3.212717
1.620329
1.442034
1.243845
0.8610445
0.7028325
0.5571355
0.4732799
0.2810768
0.2940678
0.3222608
0.1608648
.
1.786675
1.265986
1.079025
0.901062
0.7419934
0.5221829
0.4835009
0.3624416
0.3067588
0.1632705
0.1648007
0.1361942
.
3.630496
1.2068
0.6202096
0.4780877
0.2060072
0.1316514
0.05640225
0.04557856
0.008194556
1.00E-08
1.00E-08

.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.

10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22

.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

37

Table 4 continued from previous page

#ID
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 032
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 033
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 034

EVID TIME DUR DOSE OUT
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0

1.00E-08
.
1.552976
0.7882714
0.3501005
0.2800242
0.1223974
0.03146612
0.006519923
0.02217452
0.03506574
1.00E-08
0.0437052
1.00E-08
.
3.347205
2.047135
1.84013
1.348873
1.226679
0.9252054
0.7718734
0.4689673
0.427621
0.4957504
0.2837704
0.1967745
.
2.059812
1.44961
1.236325
0.86303
0.8689329
0.5590851
0.3742811
0.4078066
0.2868055
0.2160226
0.2143802
0.1483843
.
2.513866
1.129589
0.8112943
0.8466706
0.727664
0.8840938
0.7161745
0.6536164
0.6045758
0.4996205
0.4840133
0.3477026
.
1.685279
1.214492
1.107437
1.105711
0.8435898

.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.

24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34

.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.

C0
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1

.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.

Springer Nature 2021 LATEX template

38

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 034
1 034
1 034
1 034
1 034
1 034
1 034
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 035
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036
1 036

EVID TIME DUR DOSE OUT
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0

0.8500237
0.7317372
0.7387403
0.5756654
0.3842683
0.2861308
0.4355534
.
1.962246
0.3504015
0.1142701
0.06498095
1.00E-08
0.02233635
0.01611115
1.00E-08
0.02848806
1.00E-08
0.01089851
0.017188
.
0.5640023
0.1049819
0.04203293
1.00E-08
1.00E-08
1.00E-08
1.00E-08
0.007504282
1.00E-08
1.00E-08
1.00E-08
1.00E-08
.
3.62389
2.045404
1.456862
1.349896
0.9024679
0.8146131
0.7738032
0.5560103
0.5187682
0.4044549
0.4392024
0.3135991
.
1.791672
1.520921
1.27495
1.151193
0.8264423
0.7190145
0.5382187
0.5299135
0.4219202
0.3231132
0.3717606
0.238331

.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.

36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48

.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
.
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.
16.5
.
.
.
.
.
.
.
.
.
.
.
.

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

39

Table 4 continued from previous page

#ID
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 037
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 038
1 039
1 039
1 039
1 039
1 039
1 039
1 039

EVID TIME DUR DOSE OUT
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0

.
4.005066
2.968429
2.755272
2.008035
1.873018
1.969023
1.313963
1.557186
0.9969224
1.166654
0.7196382
0.83732
.
2.397494
2.12618
2.375771
2.161265
1.680168
1.518409
1.178524
1.009799
1.182547
0.8797016
0.7336726
0.595999
.
4.033706
2.315317
2.443347
1.667334
1.916632
1.714404
1.249775
1.116895
0.9909651
1.049521
0.8489849
0.7518976
.
2.578642
2.583435
1.250346
1.746503
1.609195
1.13282
1.093259
0.8183011
0.7170455
0.6830564
0.5653728
0.5724856
.
3.749976
1.909298
0.8276324
0.4076596
0.2024085
0.08935359

180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.
.
.
.
.
.
.
180
.
.
.
.
.
.

0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12
14
16
18
20
22
24
24
26
28
30
32
34
36
38
40
42
44
46
48
0
2
4
6
8
10
12

2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.
.
.
.
.
.
.
0
.
.
.
.
.
.
.
.
.
.
.
.
2
.
.
.
.
.
.

C0
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
.
0.02
0.02
0.02
0.02
0.02
0.02

C1 WT
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
16.5
.
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1
.
0.1

Springer Nature 2021 LATEX template

40

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

Table 4 continued from previous page

#ID
1 039
1 039
1 039
1 039
1 039

EVID TIME DUR DOSE OUT
0
0
0
0
0

0.07572982
1.00E-08
0.04674527
1.00E-08
0.01543515

14
16
18
20
22

.
.
.
.
.

.
.
.
.
.

C0
0.02
0.02
0.02
0.02
0.02

C1 WT
0.1
0.1
0.1
0.1
0.1

.
.
.
.
.

References

[1] A.P. Dempster, N.M. Laird, D.B. Rubin, Maximum likelihood
from incomplete data via the em algorithm.
Journal of the Royal
Statistical Society: Series B (Methodological) 39(1), 1–22 (1977).
https://doi.org/https://doi.org/10.1111/j.2517-6161.1977.tb01600.x. URL
https://rss.onlinelibrary.wiley.com/doi/abs/10.1111/j.2517-6161.1977.
tb01600.x. https://rss.onlinelibrary.wiley.com/doi/pdf/10.1111/j.2517-
6161.1977.tb01600.x

[2] A. Schumitzky, Em algorithms and two stage methods in pharmacoki-
netic population analysis. Advanced methods of pharmacokinetic and
pharmacodynamic systems analysis 2, 145–160 (1995)

[3] S. Walker, An em algorithm for nonlinear random eﬀects models. Biomet-
rics 52(3), 934–944 (1996). URL http://www.jstor.org/stable/2533054

[4] X. Wang, A. Schumitzky, D.Z. D’Argenio, Nonlinear random eﬀects
mixture models: Maximum likelihood estimation via the em algorithm.
Computational statistics & data analysis 51(12), 6614–6623 (2007)

[5] C.F.J. Wu, On the convergence properties of the em algorithm. The
Annals of Statistics 11(1), 95–103 (1983). URL http://www.jstor.org/
stable/2240463

[6] P. Tseng, An analysis of the em algorithm and entropy-like proximal
point methods. Mathematics of Operations Research 29(1), 27–44 (2004).
https://doi.org/10.1287/moor.1030.0073. URL https://doi.org/10.1287/
moor.1030.0073. https://doi.org/10.1287/moor.1030.0073

[7] ADAPT. URL https://bmsr.usc.edu/software/adapt/

[8] R.J. Bauer.

Advanced Population Analysis Features in the S-
ADAPT/MCPEM Program (2007). URL https://www.page-meeting.org/
?abstract=1111

[9] S-ADAPT. URL https://bmsr.usc.edu/downloads/s-adapt/

[10] NONMEM. URL https://www.iconplc.com/innovation/nonmem/

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

41

[11] Wikipedia contributors. Nonmem — Wikipedia, the free encyclopedia
(2020). URL https://en.wikipedia.org/w/index.php?title=NONMEM&
oldid=995360674

[12] R.H. Leary, M. Dunlavey. QRPEM, A Quasi-Random Parametric
EM Method (2012). URL https://www.page-meeting.org/pdf assets/
5496-page2012posterleary.pdf

[13] J. Craig, M. Tomashevskiy, V. Nazarov, S. Fred, Certara.RsNLME:

Pharmacometric Modeling in R (2021). R package version 1.1.0

[14] B. Delyon, M. Lavielle, E. Moulines, Convergence of a stochastic approxi-
mation version of the em algorithm. The Annals of Statistics 27(1), 94–128
(1999). URL http://www.jstor.org/stable/120120

[15] E. Kuhn, M. Lavielle, Coupling a stochastic approximation version of em
with an mcmc procedure. ESAIM: Probability and Statistics 8, 115–131
(2004)

[16] E. Kuhn, M. Lavielle, Maximum likelihood estimation in nonlinear mixed
eﬀects models. Computational Statistics & Data Analysis 49(4), 1020–1038
(2005). https://doi.org/https://doi.org/10.1016/j.csda.2004.07.002. URL
https://www.sciencedirect.com/science/article/pii/S0167947304002221

[17] M. Lavielle, C. Mbogning, An improved saem algorithm for maximum like-
lihood estimation in mixtures of non linear mixed eﬀects models. Statistics
and Computing 24(5), 693–707 (2014)

[18] J. Lomnitz-Adler, V. Pandharipande, R. Smith, Monte Carlo calcu-
lations of triton and 4He nuclei with the Reid potential. Nuclear
Physics A 361(2), 399 – 411 (1981). https://doi.org/https://doi.org/10.
1016/0375-9474(81)90642-4. URL http://www.sciencedirect.com/science/
article/pii/0375947481906424

[19] D.M. Ceperley, Path integrals in the theory of condensed helium. Reviews
of Modern Physics 67(2), 279–355 (1995).
https://doi.org/10.1103/
RevModPhys.67.279. URL https://doi.org/10.1103/RevModPhys.67.279

[20] J. Carlson, S. Gandolﬁ, F. Pederiva, S.C. Pieper, R. Schiavilla, K.E.
Schmidt, R.B. Wiringa, Quantum Monte Carlo methods for nuclear
physics. Reviews of Modern Physics 87, 1067–1118 (2015).
https:
//doi.org/10.1103/RevModPhys.87.1067. URL https://link.aps.org/doi/
10.1103/RevModPhys.87.1067

[21] R. Chen, Path integral quantum monte carlo method for light nuclei. Ph.D.

thesis, Arizona State University (2020)

Springer Nature 2021 LATEX template

42

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

[22] R. Chen, K.E. Schmidt, Path integral quantum monte carlo calculations

of light nuclei. arXiv preprint arXiv:2204.10458 (2022)

[23] X. Wang, A. Schumitzky, D.Z. D’Argenio, Population pharmacokinet-
ic/pharmacodynamic mixture models via maximum a posteriori estimation.
Computational statistics & data analysis 53(12), 3907–3915 (2009)

[24] D.P. Wiens, Robust designs for dose–response studies: Model and labelling
robustness. Computational Statistics & Data Analysis 158, 107,189 (2021)

[25] P.T. Brown, C. Joshi, S. Joe, H. Rue, A novel method of marginal-
isation using low discrepancy sequences for integrated nested laplace
approximations. Computational Statistics & Data Analysis 157, 107,147
(2021)

[26] R. Li, B.J. Reich, H.D. Bondell, Deep distribution regression. Computa-

tional Statistics & Data Analysis 159, 107,203 (2021)

[27] J.M. Hammersley, D.C. Handscomb, Monte Carlo Methods (Chapman

and Hall, 1983)

[28] M.H. Kalos, P.A. Whitlock, Monte Carlo Methods. Vol. 1: Basics (Wiley-
Interscience, New York, NY, USA, 1986). URL https://onlinelibrary.wiley.
com/doi/abs/10.1002/bbpc.198800128

[29] J.W. Negele, H. Orland, Quantum Many-particle Systems (Westview Press,

1998). URL http://www.worldcat.org/isbn/0738200522

[30] B.L. Hammond, W.A. Lester, P.J. Reynolds, Monte Carlo Methods in
Ab Initio Quantum Chemistry (WORLD SCIENTIFIC, 1994). https:
//doi.org/10.1142/1170. URL https://www.worldscientiﬁc.com/doi/abs/
10.1142/1170

[31] B. Mahajan. FLINT: Fortran Library for numerical INTegration of
diﬀerential equations (2022). URL https://github.com/princemahajan/
FLINT

[32] A.C. Hindmarsh, Odepack, a systematized collection of ode solvers.

Scientiﬁc computing pp. 55–64 (1983)

[33] R.M. Martin, L. Reining, D.M. Ceperley, Interacting Electrons (Cambridge

University Press, 2016)

[34] M. Neely, A. Margol, X. Fu, M. van Guilder, D. Bayard, A. Schumitzky,
R. Orbach, S. Liu, S. Louie, W. Hope, Achieving target voriconazole
concentrations more accurately in children and adolescents. Antimicrobial
Agents and Chemotherapy 59(6), 3090–3097 (2015)

Springer Nature 2021 LATEX template

RPEM: Randomized Monte Carlo Parametric Expectation Maximization Algorithm

43

[35] M. Neely, M. van Guilder, W. Yamada, A. Schumitzky, R. Jelliﬀe, Accurate
detection of outliers and subpopulations with pmetrics, a non-parametric
and parametric pharmacometric modeling and simulation package for r.
Therapeutic drug monitoring 34(4), 467 (2012)

[36] W.M. Yamada, M.N. Neely, J. Bartroﬀ, D.S. Bayard, J.V. Burke, M. van
Guilder, R.W. Jelliﬀe, A. Kryshchenko, R. Leary, T. Tatarinova, et al., An
algorithm for nonparametric estimation of a multivariate mixing distri-
bution with applications to population pharmacokinetics. Pharmaceutics
13(1), 42 (2020)

[37] X. Liu, Y. Wang, Comparing the performance of foce and diﬀerent
expectation-maximization methods in handling complex population
physiologically-based pharmacokinetic models. Journal of pharmacokinet-
ics and pharmacodynamics 43(4), 359–370 (2016)

[38] John Burkardt. llsq (2022). URL https://people.sc.fsu.edu/∼jburkardt/

f src/llsq/llsq.html

[39] Jonas A. Finkler.

fortran-gmm-em (2022). URL https://github.com/

Jonas-Finkler/fortran-gmm-EM

[40] M. Curcic, O. ˇCert´ık, B. Richardson, S. Ehlert, L. Kedward, A. Markus,
I. Pribec, J. Vandenplas, Toward modern fortran tooling and a thriving
developer community. arXiv preprint arXiv:2109.07382 (2021)

[41] L. Kedward, B. Aradi, O. Certik, M. Curcic, S. Ehlert, P. Engel, R. Goswami,
M. Hirsch, A. Lozada-Blanco, V. Magnin, A. Markus, E. Pagone, I. Pribec,
B. Richardson, H. Snyder, The state of fortran. Computing in Science
Engineering pp. 1–1 (2022). https://doi.org/10.1109/MCSE.2022.3159862

