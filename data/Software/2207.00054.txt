2
2
0
2

n
u
J

0
3

]
E
S
.
s
c
[

1
v
4
5
0
0
0
.
7
0
2
2
:
v
i
X
r
a

“Communication Is a Scarce Resource!”
A Summary of CHASE’22 Conference Discussions

Christoph Matthies
Hasso Plattner Institute
University of Potsdam
Potsdam, Germany
christoph.matthies@hpi.de

Jens Bæk Jørgensen
Mjølner Informatics A/S
Aarhus N, Denmark
jbj@mjolner.dk

Mary Sánchez-Gordón
Østfold University College
Halden, Norway
mary.sanchez-gordon@hiof.no

Lutz Prechelt
Freie Universität Berlin
Berlin, Germany
prechelt@inf.fu-berlin.de

ABSTRACT
Background: Software Engineering regularly views communica-
tion between project participants as a tool for solving various prob-
lems in software development.
Objective: Formulate research questions in areas related to CHASE.
Method: A day-long discussion of five participants at the in-person
day of the 15th International Conference on Cooperative and Human
Aspects of Software Engineering (CHASE 2022) on May 23rd 2022.
Results: It is not rare in industrial SE projects that communication
is not just a tool or technique to be applied but also represents
a resource, which, when lacking, threatens project success. This
situation might arise when a person required to make decisions
(especially regarding requirements, budgets, or priorities) is often
unavailable. It may be helpful to frame communication as a scarce
resource to understand the key difficulty of such situations.
Conclusion: We call for studies that focus on the allocation and
management of scarce communication resources of stakeholders
as a lens to analyze software engineering projects.

KEYWORDS
Human Aspects of Software Engineering, Empirical Software Engi-
neering, Agile Software Development

1 INTRODUCTION
The 15th CHASE conference took place in May 2022 in a hybrid
model: as an online event on May 18-19th and an in-person event on
May 23rd, colocated with the ICSE 2022 conference in Pittsburgh [1].
The in-person CHASE 2022 conference was an interactive work-
shop, with the attendees forming two ad-hoc work groups. These
groups tasked themselves with formulating research questions re-
garding cooperative and human factors in software engineering.

1.1 Work Group Participants
This report summarizes the discussion outcomes of the CHASE’22
work group, including Lutz Prechelt, Christoph Matthies, Jens Bæk
Jørgensen, Mary Sánchez-Gordón, and Gennadiy Civil.

CHASE’22, May 23, 2022, Pittsburgh, PA, USA
2022.

Participants summarized their previous experiences in academic
and software industry settings, revealing that Jens was the most ac-
tive software professional in the group as a senior project manager
at a Danish software consultancy [3]. Through his accounts, the
groups gained insights into the varied current challenges related to
the human aspects within the company’s agile software processes.
The other group participants contributed related experiences and
focused on understanding the issues’ root causes through follow-up
questions. We structured the group’s findings in the form of a visual
mind map, see Figure 1.

Figure 1: CHASE’22 working group participants and a mind
map of the discussed topics

1.2 Work Group Topics
The work group focused on the challenges of using agile methods
at scale, particularly in consulting activities and managing multiple
agile teams. These included:

• Contract negotiation in the context of agile development
• Project stakeholder alignment
• The Product Owner (PO) role in complex industry projects
Our discussion then focused on the underlying process issues
and root causes of the presented challenges. We considered future

 
 
 
 
 
 
CHASE’22, May 23, 2022, Pittsburgh, PA, USA

Matthies, Sánchez-Gordón, Jørgensen, Prechelt

research directions and methods to tackle the identified problems
and came to insights in two main topic areas:

• Software process issues. Characterization of the commu-
nication capacity of project stakeholders as a scarce resource
within organizations.

• Qualitative research methods. Call to move from descrip-
tive research to explanatory theories of behavior patterns.

1.3 Contributions
We summarized the group’s discussion under a single headline:
“Communication is sometimes a scarce resource in software develop-
ment projects!”

We envision this guiding principle to be helpful as a framework
to think about and investigate software project setups. The scarce
resource of communication is required in all development contexts,
especially in agile methods with a focus on individuals and interac-
tions and customer collaboration. In fact, in the Agile Manifesto,
only four of the twelve principles are formulated as imperatives
and the only one that talks about the amount of required commu-
nication is among them: “Business people and developers must work
together daily throughout the project.” [2]

However in practice, every process participant has a limited sup-
ply of communication resources, which require careful, considerate
management and prioritization, just as other project resources and
budgets.

Framing communication as a resource to be invested by stake-
holders, rather than an outcome of assigned responsibilities, enables
a new perspective on development processes that takes investments
and returns into explicit account.

○ Takeaway: We propose the guiding principle of “Commu-
nication is a scarce resource” in software development as
a lens to investigate development setups. As communication
resources of stakeholders are limited, they require careful man-
agement.

2 PROCESS AND COMMUNICATION

CHALLENGES

This section summarizes the discussed communication challenges
in agile software processes.

2.1 Product Owners in Large-Scale

Development

After reflecting on the root causes, the role of the Product Owner in
complex, large-scale agile software development projects emerged
as a hard-to-fill position. Although the Scrum Guide states: “the
Product Owner is one person, not a committee”, it also specifies
that “the Product Owner may do the above work or may delegate
the responsibility to others” [4]. In practice, the PO is involved in
multiple vital parts of the software development process and needs
to communicate with various stakeholders. In sufficiently large and
complex industry settings, this large workload needs to be handled
by multiple people, e.g., a committee. This raises the question: how
can this tension between the undesirable “PO committee” and the
required delegation of responsibility be navigated?

2.2 Fixed-Price Contracts in Agile Projects
Fixed-price contracts are agreements to complete projects for a
flat rate, i.e., the promise of delivering a product for a given cost,
time, and scope. In this case, we highlighted the perception that
projects using such contracts focus on shifting responsibilities to
others rather than delivering business value. Therefore, fixed-price
contracts were seen as an “anti-pattern” to be avoided as much
as possible in agile contexts. We also recognized that alternative
approaches, such as buying work instead of features, were still
challenging to communicate to industry clients.

2.3 Communication as a Project Resource
We used a mind map (see Figure 1) to structure our collected insights
around a central concept: communication as a “project resource”. We
identified that communication is particularly relevant in aligning
stakeholder expectations and clarifying project requirements. We
labeled these communication relationships in our visual representa-
tion as a “Resource To Be Invested” (RTBI), i.e., communication
is an RTBI to refine project requirements.

This framing highlights both the inherent trade-off in resource
allocation as well as the need for resource management. Assigning
additional communication tasks to a role leaves that role with
fewer resources for other communication duties. Suppose more
communication resources are to be invested in a particular project
area by the project stakeholders. In that case, this must lead to
a decrease somewhere else. Moreover, although communication
resources might be expanded, i.e., by involving more stakeholders,
this will result in increased synchronization overhead. Therefore,
it is not sufficient to call for additional communication to solve
inherent process issues!

○ Takeaway: Given that communication resources in software
projects are scarce, communication can be framed as a key
“Resource To Be Invested” (RTBI) by project stakeholders.
Investing communication resources involves trade-offs between
different investments and their (anticipated) returns.

3 THOUGHTS ON SUITABLE RESEARCH

APPROACHES

Our work group discussed research methods to address the identi-
fied issues regarding three aspects:

• Method Types. Qualitative research methods, in particular
the application of Grounded Theory, are well-suited to better
understand the specifics of the raised software process issues.
• Quality Criteria. Credibility and relevance as the main
aspects of assessing the impact of research studies and as
selection criteria for analyses.

• Theories. Moving from basic descriptions of human behav-
ior observed in studies to identifying explanatory theories
derived from multiple sources benefits the research field.

3.1 Towards Named SE (Anti-)Patterns
A key group discussion outcome is a call to the software engineering
research community to produce well-defined (anti-)patterns within

Communication as a Resource

CHASE’22, May 23, 2022, Pittsburgh, PA, USA

software projects and team communications. Ideally, these anti-
patterns are named and include metaphors, as is the case with
software design patterns, such as Bridge, Factory Method or Observer.
These names help facilitate communication by researchers as well
as practitioners.

However, these metaphors must be chosen carefully. As an ex-
ample of the ill effects of selecting an analogy, we discussed the
term “technical debt”. While the concept might not have been de-
signed to be quantified, the notion of “monetary debt” in terms of
currency owed made assigning measurements a seemingly logical
next step, which probably has not contributed to the usefulness of
the metaphor.

3.2 Towards Connecting Case Studies
The group also highlighted the need for connecting different case
studies with the goal of developing explanatory theories in software
engineering.

Vigorous qualitative research studies to build theories are com-
plex and time-consuming projects. These might not necessarily be
possible in every desired circumstance. In these cases, we call on a
focus on accurate and detailed descriptions of the study context so
that results can be used and interpreted in following studies. A tax-
onomy of SE study context properties would allow characterizing
the context so that researchers can combine descriptions of mul-
tiple case studies into more extensive theories regardless of their
variability. We call on practitioners and academics to collaborate
on case studies or experience reports that accurately present the
case study context and have both high relevance and good-enough
credibility.

Our work group discussions highlighted that practitioners have
real-world experiences they wish to share with the broader commu-
nity. However, they may not have sufficiently strong knowledge of

sound research methods and scientific writing to make a contribu-
tion with high credibility; their descriptions may get too anecdotal
to provide scientific value. Moreover, practitioners often do not
have an overview of relevant and current related work to put their
experiences in the proper perspective, i.e., identifying what is new
or different in their current context from what has already been
described and published.

○ Takeaway: Qualitative studies that lead to explanatory the-
ories in software engineering are still lacking. Individual use
case studies can contribute to a larger body of knowl-
edge by providing detailed, structured context descrip-
tions. An agreed-upon taxonomy of context descriptions in
SE would allow connecting case study results to analyze the
evidence of multiple studies in the presence of variability.

REFERENCES
[1]

[n. d.] 15th International Conference on Cooperative and Hu-
man Aspects of Software Engineering (CHASE 2022) Home-
page. Retrieved 06/30/2022 from https://conf.researchr.org/
home/chase-2022.

[2] Kent Beck, Mike Beedle, Arie Van Bennekum, Alistair Cock-
burn, Ward Cunningham, Martin Fowler, James Grenning,
Jim Highsmith, Andrew Hunt, Ron Jeffries, Kern Jon, Brian
Marick, Robert Martin C., Steve Mellor, Ken Schwaber, Jeff
Sutherland, and Dave Thomas. 2001. Manifesto for Agile Soft-
ware Development. Snowbird, UT. https://agilemanifesto.org.
[n. d.] Mjølner Informatics Homepage. Retrieved 06/30/2022
from https://mjolner.dk/en/.

[3]

[4] Ken Schwaber and Jeff Sutherland. 2020. The Scrum Guide.
(November 2020), 14. https://scrumguides.org/scrum-guide.
html.

