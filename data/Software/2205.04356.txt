SEAMLESS INTEGRATION OF ANALYSIS AND DESIGN:
AUTOMATIC CAD RECONSTRUCTION OF POST-ANALYSIS
GEOMETRIES

PREPRINT SUBMITTED TO THE INTERNATIONAL JOURNAL OF ADVANCED MANUFACTURING TECHNOLOGY

2
2
0
2

y
a
M
9

]
E
C
.
s
c
[

1
v
6
5
3
4
0
.
5
0
2
2
:
v
i
X
r
a

Sebastian Hube

Chair for Computational Analysis of Technical Systems (CATS)
RWTH Aachen University
Schinkelstr. 2, 52062 Aachen, Germany
hube@cats.rwth-aachen.de

Roxana Pohlmann
Institute of Lightweight Design and Structural Biomechanics (E317)
TU Wien
Gumpendorfer Str. 7, 1060 Vienna, Austria
rpohlmann@ilsb.tuwien.ac.at

Stefanie Elgeti
Institute of Lightweight Design and Structural Biomechanics (E317)
TU Wien
Gumpendorfer Str. 7, 1060 Vienna, Austria
elgeti@ilsb.tuwien.ac.at

May 10, 2022

ABSTRACT

A key step during industrial design is the passing of design information from computer aided design
(CAD) to analysis tools (CAE) and vice versa. Here, one is faced with a severe incompatibility in
geometry representation: While CAD is usually based on surface representations, analysis mostly
relies on volumetric representations. The forward pass, i.e., converting CAD data to computational
meshes, is well understood and established. However, the same does not hold for the inverse direction,
i.e., CAD reconstruction of deformed geometries resulting, e.g., from shape optimization. The few
reconstruction methods reported mainly rely on spline ﬁtting, in particular methods that rely on
creating new splines simililar to shape reconstruction from 3D imaging. In contrast, this paper studies
a novel approach that reuses the CAD data given in the initial design. We show that this concept
leads to precise shape reconstructions while also preserving the initial notion of features deﬁned
during design. Furthermore, reusing the initial CAD representation reduces the shape reconstruction
problem to a shape modiﬁcation problem. We study this unique feature and show that it enables the
reconstruction of CAD data from computational meshes by composing each spline in the initial CAD
data with a single, global deformation spline. While post-processing is needed for use in current
CAD software, this novel approach not only allows creating watertight models, but also enables
reconstructing complete CAD models even from defeatured computational meshes.

Keywords shape optimization · reverse engineering · CAD · CAE

 
 
 
 
 
 
Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

1

Introduction

Current industrial computer-aided design processes are severely limited by the data exchange between the programs
used in the design process. Such programs are tailored to the respective goals of the different design disciplines,
including design (CAD), physical analysis (CAE), and manufacturing (CAM). Designing optimized geometries requires
iterations between the different disciplines and a seamless data exchange.

The main challenge towards a seamless integration is that each discipline relies on tailor-made data formats. Particularly,
design is based on smooth boundary descriptions, whereas analysis and in many cases also manufacturing utilize
volumetric, tessellated descriptions such as point clouds or computational grids. Two approaches emerged to handle
this data-format inconsistency: Isogeometric analysis (IGA) [1] and conversion or reverse engineering methods.
IGA introduces CAD’s smooth functions into analysis, remedying the format inconsistency. To additionally avoid
inconsistencies between volumetric meshing and boundary descriptions in CAE and CAD, boundary [2] and mesh-free
methods are developed [3], further simplifying data exchange. However, IGA-compatibility requires signiﬁcant changes
to all existing CAE/CAM tools. In contrast to IGA, conversion methods retain the tailor-made representations, but
convert CAD data to analysis-suitable formats or vice versa.

Fig. 1 depicts the general conversion problem faced in optimal design. While the forward conversion, i.e., mesh

(a)

CAD CAE

(b)

(d)

(c)

Figure 1: Workﬂow in clockwise direction. Using the initial CAD representation (a), as well as initial (b) and
post-analysis computational meshes (c), construct a CAD representation of the post-analysis shape (d).

generation (Fig. 1 top), is well understood, the reverse way – CAD data reconstruction from point data obtained from 3D
imaging or shape-optimizing analysis – (Fig. 1 bottom), is addressed in this work. To convert the encoded shapes into
CAD data, they must be represented in a CAD-compatible format. These formats allow modeling parts by geometric
primitives such as planes, cubes, and cylinders, or as free-form models. Despite successful attempts to reconstruct CAD
data using primitives [4], the predominant choice in reconstruction is splines that – as free-form models – ﬁt the target
shapes [5–11].

Splines are parametric geometry representations that are guided by control points. As such, any spline reconstruc-
tion/ﬁtting method will be faced with two tasks: (1) the optimal control-point placement, and (2) the choice of a suitable
parameterization. While control point placement can be solved as a linear equation system or as an optimization
problem, the choice of suitable parameterizations is less deterministic. We show that reusing the parameterizations
found in the initial CAD data (cf. Fig. 1(a)), simpliﬁes the problem and provides the foundation for CAD reconstruction
even of defeatured post-analysis data.

The approach of basing the reconstruction on the initial CAD data stands in contrast to recent proposals, where,
inspired by creating CAD data from 3D imaging with unknown initial shape, many works construct generic initial
parameterizations that are subsequently adjusted [5, 9]. In an effort to incorporate all available data, the resolution
of the computational mesh can be an indicator of areas with high curvature, especially when reconstructing thin
structures. For such structures, an improved parameterization is obtained by projecting the computational grid onto
the spline’s rectangular parameter space and placing knots more densely in areas of high mesh resolution [12]. Other
projection-based methods consider that computational meshes are obtained from initial CAD data (cf. Fig. 1 top) and

2

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

focus on retaining the designer’s notion of features encoded therein. The initial spline parameterization for each spline
surface is then constructed either from an interpolating plane [6] or from regular lattices [7], resulting in improved
reconstructions. Contrary to all these approaches, we avoid constructing new parameterizations and instead reuse the
existing spline representation from the undeformed CAD representation, i.e., we present a method to deform Fig. 1(a)
directly to Fig. 1(d). We thereby relax the parameterization problem from creation to modiﬁcation and not only ensure
feature preservation throughout the iterative industrial design process, but also tightly integrate CAD and CAE.

This work is structured as follows: We ﬁrst recall the most important aspects of neutral CAD data formats and Non-
Uniform Rational B-splines alongside the ideas of (1) spline ﬁtting and (2) functional composition in Sec. 2. In Sec. 3,
we verify our approach through individual surface reconstruction similar to [7]. In Sec. 4, we introduce and demonstrate
the application of a global reconstruction based on spline composition. Finally, in Sec. 5, we discuss advantages of
working with the initial CAD representation that is then modiﬁed through one global deformation operator, in particular
pointing out the possibility to reconstruct complete CAD models from defeatured computational meshes – a challenge
that even IGA cannot mitigate.

2 CAD representations, B-Splines, and related algorithms

Within this section, we will introduce preliminary concepts necessary for the proposed reconstruction method. We will
start out by illustrating how feature preservation during reconstruction is related to the CAD-internal data structures.
These data structures are comprised of two building blocks: On the one hand, information on individual geometric
entities, such as curves or surfaces, is stored, whereas on the other hand, their topological relations (given by Boolean
operations) are recorded. In the remainder of this work, we will speak of geometry data and topology data. The concept
of two kinds of data is visualized in Fig. 2. This particular distinction between topology and geometry allows to update

(b)

(c)

(a)

Figure 2: Topological connection of three single surfaces to a closed cylinder in CAD data. a shows the geometric
representation of the single surfaces, b the intersected visualized parts, and c their topological connection as a surface
representation. Modiﬁed from [13].

shapes – imagine offsetting the top clipping plane – while retaining the topology – the closed cylinder would still be
one single object. This means that features can be preserved if only geometry data is modiﬁed while topology data
remains intact.

Notice that Fig. 2 (a) shows the splines typically necessary in a CAD-system in order to represent a cylinder – a spline
set that is not intuitive if considering point-cloud reconstruction. The novelty of our method is therefore to reuse exactly
these initial spline representations as they are native to CAD software. This approach reduces the shape reconstruction
problem to: Given post-analysis point data, ﬁnd the modiﬁed geometry data which best approximates these points.

Finally, we like to remark that not per se all CAD data is parameterized by splines. However, we restrict our discussion
to neutral ﬁle formats like IGES, for which many CAD systems support spline-only export. Furthermore, converters
exist that transform arbitrary geometric representations into splines [14].

2.1 A general introduction to B-splines

In the next paragraphs, we will brieﬂy review the basic concept of splines as well as spline-related algorithms relevant
to this work. For further details, the reader is referred to [15].

3

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

Since their advent in automotive design, splines became one of the most important geometry parameterization in CAD.
Splines are interpolants of a set of shape-deﬁning points, the so-called control points, D. With the basis functions Rp,o
k,l
of orders p and o per parametric direction, a spline surface is evaluated as

n
(cid:88)

z
(cid:88)

S (ξ, η) =

Rp,o

k,l (ξ, η) Dk,l,

(1)

k=1

l=1
where ξ and η denote the parametric coordinates. A curve or a volume spline (also referred to as trivariate) is represented
analogously by dropping or adding one parametric direction. The basis functions Rp,o
k,l are deﬁned on the parameter
space, which in turn is deﬁned and at the same time partitioned by so-called knot vectors θ. These knot vectors contain
a non-decreasing sequence of parametric coordinates, the knots. Given a degree and a knot vector, the basis functions
are uniquely deﬁned. The interval between two knots is referred to as a knot span. The following characteristics of
splines are relevant to this work: (1) Splines deﬁne a mapping from parameter to physical space. Each point in the
parameter space is mapped to one point in physical space. (2) Splines do not interpolate their control points exactly, but
in general are only guided by their control points. (3) We can add control points, knot values, or raise the degree of the
basis to alter certain properties of the spline while maintaining the identical geometry.

2.2 Spline ﬁtting

The primary reconstruction principle applied in this work is spline ﬁtting. While the details are left for the speciﬁc uses
in Sec. 3 and 4, we sketch the general concept in the following. In spline ﬁtting, we aim to ﬁnd a spline representation
that interpolates a given set of points. Starting point is always a set of target points as well as an initial spline. We
associate each target point to one point on the initial spline, i.e., we determine the parametric coordinates of the
associated point. Subsequently, we place control points minimizing the distance between the target and their associated
points. Examples of this concept are found in the book by Piegl and Tiller [15] or the work by Weiss et al. [5].

In the case of CAD reconstruction, a simpliﬁcation can be made: Since there is an initial grid X that has been generated
upon the initial spline S, the parametric coordinates can be reused, simplifying the ﬁtting problem to a search for the
optimal control-point positions. While modifying the spline parameterization is speciﬁc to the Sec. 3 and 4, we outline
how to optimally place the control points in the following. With S, a spline of ﬁxed parameterization, we denote the
to-be-deformed spline. X denotes the initial set of grid points that have been generated in such a way that they lie on
the initial shape of S at the parametric coordinates Ξ meaning that S (Ξ) = X . Finally, we are given a set of target
points (cid:98)X that are to be interpolated by a deformed version (cid:98)S. In order to achieve this new representation, we minimize

where, R is a direct measure of the reconstruction performance.

R =

(cid:88)

i

(cid:13)
(cid:13)
(cid:13) (cid:98)S (Ξi) − (cid:98)X i

(cid:13)
(cid:13)
(cid:13),

We formulate the shape optimization problem: Find the optimal control points D for S, such that R is minimized:
(cid:88)

(cid:100)S D = arg min

D

(cid:13)
(cid:13)
(cid:13)(cid:100)S D (Ξi) − (cid:98)X i

(cid:13)
(cid:13)
(cid:13)

i
It is beneﬁcial to choose a gradient-based optimization algorithm for this minimization problem since otherwise,
undesired results like oscillations or self-intersecting control polygons would need to be circumvented via constraints
on the optimization. We thus solve this problem as an unconstrained optimization problem using the low-storage BFGS
algorithm [16, 17] implemented in the optimization package NLopt [18].

We shall mention that it is also possible to solve the aforementioned spline ﬁtting problem as a linear equation system:

(cid:98)X = RD,
where R is the matrix of basis functions R (cf. Eq. (1)) evaluated at the parametric coordinates Ξ. To solve this
(cid:13)
(cid:13)
problem in least-squares fashion, we compute the pseudo-inverse to R to minimize
(cid:13). The pseudo-inverse is
computed using singular-value decomposition (SVD). However, in practice we ﬁnd neither a robustness, nor a signiﬁcant
performance gain over optimization-based ﬁtting when using SVD. The complete process is given in Algorithm 4. For
a further discussion of least-squares control point ﬁtting and efﬁcient algorithms, we refer to [8, 9].

(cid:13)
(cid:13)
(cid:13)RD − (cid:98)X

(4)

2.3 Functional composition of splines

Spline composition is the second fundamental basis of this work. As introduced in [19], two spline mappings can be
concatenated as S 1 ◦ S 2 which we refer to as functional composition. Effectively, S 2 is placed into the parametric

4

(2)

(3)

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

domain of S 1. What makes this type of spline manipulation relevant to the current paper is that a mapping S 1 can be
imposed onto S 2, leading to a well-deﬁned deformation of S 2 (cf. Fig. 3). In general, the resulting geometry is only a
valid spline if S 2 is entirely contained in one single knot span of S 1, meaning that it may not cross knot lines. In the
context of this work, this is a restriction that is easy to fulﬁll, which is why techniques to overcome this limitation (e.g.,
[20]) have not been pursued.

ζ

ξ

η

(a) Bi-quadratic sphere S 2 placed in parametric domain
(green) of S 1

(b) Resulting object S 1 ◦ S 2 shown inside of S 1.

Figure 3: Composition of a sphere and a deformation spline. The initial sphere template is bi-quadratic. The resulting
shape has degrees p = 12 and o = 12.

3 Shape reconstruction using individual spline ﬁtting

The novelty in the presented approach is to reuse the spline representations found in the initial CAD data. In this section,
we apply this idea in the ﬁrst of two possible settings: Reconstructing the deformed CAD representation by ﬁtting each
geometric entity individually.

i

We will use the following notation: Again, X denotes the initial computational mesh, (cid:98)X the deformed computational
mesh, whereas S i and (cid:98)S
denote the ith spline in the geometry data in initial and deformed conﬁguration. Additionally,
we denote by (cid:3)S the subset of (cid:3) which is interpolated by spline S, where (cid:3) is any set of nodes.
Here deformed refers to the CAE’s results (Fig. 1(c)). In our description, we do not distinguish explicitly between curves
and surfaces, since all presented algorithms apply to curves and surfaces similarly if not explicitly stated otherwise.

As indicated in Sec. 2, the ﬁrst step in spline ﬁtting is to determine parametric coordinates Ξ. Here, we utilize a linear
variant of the projection algorithm by Hu and Wallner [21]. The actual spline ﬁt then follows the exact approach
described in Sec. 2.2. In the following, we focus on two aspects that arise speciﬁcally within this application: (1) How
to reﬁne the spline parameterization, and (2) how to deal with coarse computational meshes.

If during spline ﬁtting, the residual (2) remains unsatisfactorily high, the spline parameterization has to be reﬁned. This
can be achieved either by knot insertion or by degree elevation. In view of maintaining smooth surfaces, we usually
degree-elevate before inserting any new knots. This choice comes with the disadvantage that some commercial CAD
and CAE software can have trouble processing high-order splines. For this reason, we choose to limit the resulting
degree to four. As such, we can still provide G2 continuity, a common requirement in CAD. If this degree increase does
not yield the desired residual, additional knots have to be inserted. For knot insertion, the algorithm has to decide in
which parametric direction a knot has to be inserted and at which parametric coordinate. Since each inserted knot adds
several degrees of freedom to the optimization problem, the position which enables the greatest further reduction of the
residual should be chosen. We achieve this using the procedure proposed by Weiss et al. [5]. In a ﬁrst step, this method
determines the knot interval that shows the biggest residual and selects this element for knot insertion. Subsequently,
the exact new knot position is determined by weighting its proximity to existing knots against the current residual. The
complete procedure is detailed in Algorithm 1. Here, we demand that (1) all mesh points lay within a small tolerance to
the actual geometry, i.e. ε (cid:28) 1, and (2) the portion of the computational mesh, which is ﬁtted by each given spline, X S,
contains sufﬁciently many points. The ﬁrst condition needs to be fulﬁlled to robustly determine parametric coordinates.
However, it is also required to ensure that possibly remaining offsets between the initial geometry and X S, which are,
by design, reduced during the ﬁtting procedure, do not yield unintended gaps between neighboring geometric entities

5

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

Algorithm 1 Shape reconstruction by spline ﬁt
Input:
NURBS-only IGES ﬁle;
initial computational mesh X ;
deformed computational mesh (cid:98)X ;

Output:
Updated IGES ﬁle;

Algorithm:
1: Σ = (cid:8)S i(cid:9) := Collect all splines from IGES;
2: for all S i ∈ Σ do
3:
4:

(cid:13)xi − S i(cid:13)
X S = (cid:8)xi | (cid:13)
Setup a mask Πi s.th. X S = ΠiX ;
(cid:98)S
Replace S i by (cid:98)S

X S = ΠiX , (cid:98)X S = Πi (cid:98)X

in IGES ﬁle;

= S i.ﬁt

5:

(cid:16)

i

i

(cid:17)

6:
7: end for
8: return Updated IGES ﬁle;

(cid:13) ≤ (cid:15)(cid:9) := Collect all points which lay on the spline S i;

:= Apply Algorithm 4;

after shape reconstruction. The second condition must be fulﬁlled to yield a well-posed optimization problem. However,
in rare cases we observed that CAD data contains very small geometries whose dimension fall below the size of a single
computational mesh element. In such cases, additional sampling points can be added to X , and – by interpolation – to
(cid:98)X S accordingly which is described in detail in Sec. 3.1.

3.1

Interpolating additional points

To obtain a well-posed, i.e., not under-determined system of equations, the number of grid points per parametric
direction in X S needs to be equal or greater than the number of control points D in that parametric direction. For
numerical stability, we furthermore require that two nearby-located grid points may not be treated as different points
when their distance falls below 1 × 10−7. In rare cases, especially for curves, this criterion may be violated and
additional points need to be generated. In the following, we ﬁrst present a criterion to determine whether additional
data needs to be generated, before discussing two possible methods.

To verify that no additional data is needed, we check the two empirically derived conditions: (a) At least l grid points
xi ∈ X S must be located in each non-zero knot span, where l = 1 + (max (0, max (m1 − p, m2 − p))). Here, p
denotes the degree of the spline and mi refers to the multiplicities of the knot values that deﬁne this knot span. This
condition ensures that in areas of reduced continuity, target points are more densely populated. (b) The total number of
points in X S has to be greater or equal to the number of control points.

If any of the two conditions is not met, we construct new ﬁtting data by sampling the spline at its Greville abscissae
computed as

¯ξa =

1
p

p
(cid:88)

i=1

ξa+i.

(5)

We have found that using Greville abscissae provides the best approximation control with the fewest possible sampling
points.

While adding data to X S, is straightforward, adding the corresponding data to (cid:98)X S can be approached in several ways,
two of which will be discussed here.

The ﬁrst approach is based on the fact that a curve can be viewed as a surface boundary which results in improved curve
ﬁtting and enhanced congruence between surfaces and their bounding curves: Let a curve C be boundary to a surface S.
Then, we determine the parametric coordinates ηadd in the surface’s parameter space, such that S (ηadd) = C (Ξadd),
where (cid:3)add denotes additional sampling data. Particularly, Ξadd are the curve’s Greville abscissae.

Finally, points xadd are added to (cid:98)X C by sampling the already reconstructed surface spline as xadd = (cid:98)S (ηadd). This
approach strongly depends on successful surface reconstruction. It’s advantage, however, is that the resulting curves

6

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

ensure a high level of watertightness since they follow their connected surfaces closely. Since a single curve may bound
multiple surfaces, for convenience, we sample the ﬁrst connected surface found in the topology data’s hierarchy tree.

An alternative approach is to interpolate the computational mesh at additional ghost points. For the interpolation, we
ﬁrst determine the initial position of the new ghost point as xadd = C (Ξadd). Next, this point is expressed in terms of
present mesh data and an offset vector: Let x(cid:63),i, i ∈ [1, 2, 3] be the ith closest point to xadd in X C. Then, we deﬁne
three vectors d1 = x(cid:63),2 − x(cid:63),1, d3 = x(cid:63),3 − x(cid:63),1, and d3 = d1 × d2. Using these three vectors we can write

xadd =

(cid:34) |
d1
|

(cid:124)

|
d2
|
(cid:123)(cid:122)
A

b.

|
d3
|

(cid:35)

(cid:125)

(6)

To generate additional data in the deformed computational grid, we then evaluate (cid:100)xadd = (cid:98)Ab, where (cid:98)A is constructed
from the equivalent points in (cid:98)X C to x(cid:63) in X C.

3.2 Example: Plate with hole

As a ﬁrst demonstration, we reconstruct CAD data for a generic plate with a hole. The geometry is built from six
initially planar surfaces, cut by a two-piece cylinder in its center. As for the remainder of this work, we plot all entities
in the geometry data in individual color, to emphasize that we only change geometry data (cf. Fig. 2). The initial CAD
representation is shown in Fig. 4.

Figure 4: Initial geometry of plate with hole shown with different color for each entity in the geometry data. Results
will show the identical coloring for identical entities. The dimensions are 200 × 100 × 1.5 and the hole diameter is 50.

For the reconstruction, a total of 3352 points in X is used. The prescribed deformation is obtained from a mock
simulation result and has no direct physical interpretation. The maximal point deﬂection is 18.88.

Using additional mesh sampling yields the result depicted in Fig. 5 (a), while sampling from the previously reconstructed
surfaces, yields the result shown in Fig. 5 (b). For this test case, visually indistinguishable results are obtained.

3.3 Example: Sensor box

As a second and both computationally and methodologically more challenging example, we reconstruct CAD data
for a pressure sensor box. The initial geometry has length, width and depth of O (10) and is shown in Fig. 6. For the
reconstruction, a total of 26177 grid points is used. In absence of simulation data, we prescribe a non-linear deformation
as nodal offsets dj for all xj ∈ X with c = 0.15 via:

xcenter = X
(cid:110)

r =

dj = c

rj

(cid:12) rj = (xj − xcenter)2(cid:111)
(cid:12)
rj
max
j

(xj − xcenter) ,

rj

(7a)

(7b)

(7c)

which yields a maximum point deﬂection of 6.59 and an average deﬂection of 1.70. Using sampling from the mesh
yields the result depicted in Fig. 7a, while sampling from the previously reconstructed surfaces, yields the result shown
in Fig. 7b.

7

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

initial CAD representation

initial computational mesh

shape-optimized
computational mesh

reconstructed CAD
representations

(a)

(b)

Figure 5: (a) Reconstructed shape using additional point sampling utilizing formula (6). (b) Reconstructed shape using
additional point sampling from previously deformed surfaces. Both variants yield equally well CAD reconstructions.

As the Figures 5 and 7 reveal, both sampling options yield satisfactory results and high quality CAD data. The difference
between the two sampling methods is hardly noticeable. A close look, presented in Fig. 8, suggests that surface sampling
leads to even smoother surface reconstructions. Thus, the practitioner may prefer surface sampling compared to the
mesh sampling based on eq. (6). Using mesh sampling, we obtain a point wise maximum error of 2.52 × 10−2 for the
plate with a hole and 3.53 × 10−2 for the pressure sensor. Using sampling from the surface, we respectively obtain
2.52 × 10−2 for the the plate with a hole and 2.82 × 10−2 for the pressure sensor. We shall mention that these are,
however, rather qualitative numbers since the achievable accuracy depends on the chosen optimization settings.

4 Shape reconstruction using functional composition

So far, the proposed new approach to shape reconstruction has been applied in similar fashion as reported in [6, 7]
reconstructing one spline at a time. However, the new approach gives rise to a different view of the problem. In this
section, we therefore present an approach that is based on functional composition. Basis is a volumetric, i.e., trivariate,
B-spline mapping T , such that

T : X (cid:55)→ (cid:98)X .
(8)
This mapping T is subsequently applied to all entities in the geometry data using functional composition such that:
= T ◦ S i ∀ i. Algorithms for functional composition have already been proposed, e.g., by Elber [19, 22]. We will
(cid:98)S
thus rather focus on an outline of the approach, and subsequently discuss in detail how we construct the mapping T .

i

The basic algorithm is given in Algorithm 2 and consists of three points: (1) Construct a suitable parametric domain for
the trivariate T , (2) place control points, such that T fulﬁlls condition (8), and (3) apply functional composition to the
initial splines.

One particularity of the method is that the functional composition is mathematically exact. From this exactness follows
that the precision of the method is directly governed by how well we fulﬁll condition (8).

8

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

Figure 6: Initial sensor box shown with different color for each entity in the geometry data. Results will show the
identical coloring for identical entities.

After this outline of the method, we will now detail on the construction of T . To construct T , we need to deﬁne control
points D, knot vectors θ, and degrees per parametric direction. We start by choosing the degrees.

As discussed in Sec. 1, T must be a Bézier spline (i.e., a single-knot-span B-spline). Consequently, only the degrees
determine the number of control points, and thus inﬂuence how well condition (2) can be fulﬁlled. In other words, T
needs to be sufﬁciently ﬁne to capture local shape modiﬁcations and since T has to be a Bézier spline, being ﬁne – in
this context – equals holding a suitably high degree. In practice, we iteratively solve the optimization problem (3) and
manually degree-elevate T until condition (2) is satisﬁed.

With the degrees chosen, we initialize the knot vectors and control points such that we obtain a linear, unitary mapping
with knot vectors Θ = {θ1, θ2, θ3}, where we require that T ’s parameter space contains all initial points, i.e.,
span (Θ) ⊃ X S. Choosing the parameter space this way, we obtain the parametric coordinates Ξ (cf. Algorithm 2)
from the direct relation

Ξ = X .

(9)

For completeness, we shall mention that, in general, we can also utilize Newton’s method to determine the parametric
coordinates by solving T (cid:0)ξj
With the parameter space’s span determined by X , we ﬁnally place the control points D such that T becomes a unitary
mapping.

(cid:1) − xj = 0 ∀ xj ∈ X .

(a) Reconstructed shape using additional point sampling
utilizing formula (6).

(b) Reconstructed shape using additional point sampling
from previously deformed surfaces.

Figure 7: Reconstructed shapes using additional point sampling from mesh and connected surfaces.

9

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

(a) Detailed view on a trimming line reconstructed using
sampling from the mesh, c.f. Fig. 7a. Insufﬁcient recovery
marked in red.

(b) Detailed view on a trimming line reconstructed using
sampling from previously ﬁtted surfaces, c.f. Fig. 7b.

Figure 8: Detailed comparison between sampling additional data from the mesh using Eq. (6) (left) and sampling from
previously reconstructed surfaces (right). We exemplary show the back view of the pressure ﬁtting. The detailed view,
however, underpins the fact that we can hardly detect any differences.

Algorithm 2 Shape reconstruction by functional composition
Input:
NURBS-only IGES ﬁle;
initial computational mesh X ;
deformed computational mesh (cid:98)X ;

Output:
Updated IGES ﬁle;

Algorithm:
1: Σ = (cid:8)S i(cid:9) := Collect all splines from IGES;
2: Construct unitary trivariate T such that T ⊃ X ;
3: Ξ = (cid:8)ξj | T (cid:0)ξj
(cid:1) = xj ∀ xj ∈ X (cid:9) := Get parametric coordinates to X ;
(cid:80)
(cid:98)D = arg min
4: T
i
5: for all S i ∈ Σ do
(cid:98)S = T
(cid:98)D ◦ S;
6:
Replace S by (cid:98)S in IGES ﬁle;

(cid:13)
(cid:13)
(cid:13) := Determine (cid:98)D such that T

(cid:13)
(cid:13)
(cid:13)T D (Ξi) − (cid:98)X i

D

(cid:98)D : Ξ (cid:55)→ (cid:98)X ;

7:
8: end for
9: return Updated IGES ﬁle;

With T in place, T is deformed by Algorithm 4 where, in contrast to the spline ﬁt discussed in Sec. 3, we take into
account all points in X and (cid:98)X directly.

4.1 Low-degree approximation

One downside of functional composition is the resulting high degree. As shown by Elber, [19] the degrees of a surfaces
S of degrees [m1, m2] composed with a trivariate T of degrees [n1, n2, n3] are

[m1 (n1 + n2 + n3) , m2 (n1 + n2 + n3)] .

(10)

For a fourth degree trivariate composed with a bi-quadratic surface, this already yields degrees [24, 24]. At the same
time, we ﬁnd that most CAD systems are incapable of handling data with such high degrees.

For such cases, we adopt a low-degree approximation. Using iterative knot insertion and degree reduction, we
approximate the composed spline by a lower-degree version. As for knot insertion, we also build this degree reduction
around the core algorithm presented in [15]. The full algorithm, however, is given in Algorithm 3. Particularly, we
measure the error introduced by the degree reduction and insert additional knots into the knot span which causes the
largest error. We also observe that the degree reduction algorithm in [15] tends to produce oscillatory control polygons
which leads to problems during repeated degree reduction. To counteract this behavior, we ﬁnally add control points

10

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

through knot insertion in every knot span in which the control polygon’s length increases more than a selected threshold.
The additional modeling ﬂexibility thereby introduced, effectively ensures that repeated degree reduction is possible.

Algorithm 3 Low Order Approximation
Input:
spline S;
target degree p;

Output:
degree-reduced spline (cid:98)S;

Algorithm:

1: Normalize all control point weights to [0, 1];
2: while S.degrees > p do
3:
4:
5:
6:
7:

Calculate length of control polygon;
ε, (cid:98)S = S.reduce_degree()
while ε > (cid:15) do

Determine the knot span i with the highest error contribution;
Insert a new knot S.degrees − p + 1 times at 1
2 (ξi + ξi+1);
ε, (cid:98)S = S.reduce_degree() := Recompute degree reduction;

:= Reduce spline degree with error ε;

end while
Calculate length of new control polygon;
if length of new control polygon
length of control polygon > 1.1 then
for all knot spans in S.knot spans do
if length of new knot span control polygon

length of knot span control polygon > δ then
Insert a knot in knot span center;

8:
9:
10:
11:
12:
13:
14:
15:
16:
end if
17:
S = (cid:98)S;
18:
19: end while
20: return (cid:98)S;

end if

end for

4.2 Example: Plate with hole

Again, we ﬁrst demonstrate the method by reconstructing CAD data for the plate with a hole presented in Sec. 3.2.
For the reconstruction, we choose degrees [3, 2, 1] for T and obtain the result depicted in Fig. 9. Without low-order

Figure 9: Functional composition applied to a simple geometry.

approximation, the resulting spline degrees reach up to 18. The reconstruction yields a residual of mean pointwise error
2.96 × 10−1, with a maximum point error of 1.08, which both increase by additional 1 × 10−6 after degree reduction.

11

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

4.3 Example: Sensor box

As an industrial showcase, we reconstruct the pressure sensor introduced in Sec. 3.3. With degrees [3, 3, 2] for T , a
reconstruction with a mean error of 3.52 × 10−3 and a maximum point error of 4.58 × 10−2 is achieved. After degree
reduction this is respectively increased to 3.54 × 10−3 and 4.48 × 10−2.

With initially bicubic splines in the geometry data, the composed splines, however, yield degrees up to 24. As a
demonstration, we apply degree reduction until p = q = [4, 4] where four is, again, chosen to provide G2 continuity.
The reconstruction yields the geometry depicted in Fig. 10.

Figure 10: Resulting reconstructed shape with degree reduction.

As discussed in the construction of T , increasing the spline degree results in a reduced error. Since even the coarse
spline produces visually acceptable results, we do not show additional CAD-data here. However, for the plate test
case with degrees [19, 18, 1] we obtain a mean error reduction from 2.96 × 10−2 to 2.10 × 10−2 and maximum error
reduction from 1.08 to 0.15. For the pressure sensor, the mean error reduces from 3.52 × 10−3 to 7.11 × 10−4, and the
maximum error reduces from 4.58 × 10−2 to 1.02 × 10−2 when a reﬁned spline with degrees [7, 3, 4] is used.

5 Discussion and outlook

This paper introduced a new approach to spline-based CAD reconstruction. Instead of creating new parameterizations,
we fully explore the data in modern industrial design and recycle spline parameterizations available from initial CAD
ﬁles. The new approach seamlessly integrates into existing reconstruction frameworks and yields precise results in
sequential spline ﬁtting. Using Greville-abscissae sampling, reconstruction is, to the authors’ best knowledge for the
ﬁrst time, also successfully demonstrated for arbitrary mesh resolutions.

Additionally to the established per-spline reconstruction, a composition-based approach is presented, which not only
appears intuitive as it applies the same deformation that has been applied to the mesh during the analysis step also to
the CAD data, but also presents two unique features: (1) Due to the analytically exact shape modiﬁcation, initially
watertight CAD models will remain watertight, and (2) the deformation of an arbitrary number of splines is possible
irrespective of the availability of local reconstruction data within the mesh.

From the industrial practitioner’s view, we shall mention that the composition approach is currently limited by two
factors: First, a post-processing, low-degree approximation is needed, which may cause a loss of watertightness. One
could, however, argue that all trimmed CAD data inherently suffer from geometric approximations and inaccuracies [23].
This very fundamental shortcoming may invalidate the argument of possible inaccuracies resulting from low-degree
approximations. The second factor is its limitation to moderate deformations; the result of the trivariate T having to be
a Bézier spline: Since ﬁtting very-high-degree B-Splines requires an impractical number of control points, the resulting
limit on the admissible degree also limits the method’s ability to recover local shape modiﬁcations.

However, the signiﬁcant difference to all state-of-the-art methods is that we achieve the reconstruction using a single
operator, which we can apply to all entities in the initial CAD data. From the ability to deform all splines contained in
the original CAD ﬁle follows that composition-based CAD reconstruction is without modiﬁcation able to reconstruct

12

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

complete CAD models even from post-analysis results obtained from defeatured geometries. The successful recovery of
CAD data from point cloud data thus seamlessly integrates CAD and CAE/CAM, which mitigates the prevailing limit
through data exchange. The novel approach of reusing the existing CAD representation, however, not only tightens
the connection between CAD and CAE but, beyond that, turns out to allow reconstruction of defeatured geometries
– an application outside the practical realm of all existing spline ﬁtting methods. We claim this motivates further
research towards locally enhanced composition methods, e.g., hierarchical application and improved degree-reduction
techniques.

6 Acknowledgements

Implementation was done on the HPC cluster provided by IT Center at RWTH Aachen. Simulations were performed
with computing resources granted by RWTH Aachen University under the project thes0991. All geometry plotting has
been done from Pointwise and FreeCad [24] software. Resulting IGES ﬁles are accessible under the public project
RWTH-2022-03969 [25]. Open access funding enabled and organized by project DEAL. This paper has been submitted
to the The International Journal of Advanced Manufacturing Technology on 25th April 2022.

13

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

Appendix: Spline ﬁt algorithm

Algorithm 4 Spline ﬁt
Input:
spline S;
initial sampling points X S;
target sampling points (cid:98)X S;

Output:
deformed spline (cid:98)S;

Algorithm:
1: Ξ = (cid:8)ξj | S (cid:0)ξj
(cid:13)
(cid:13)
(cid:13) (cid:98)S (Ξ) − (cid:98)X S
2: while

(cid:13)
(cid:13)
(cid:13) ≥ (cid:15) do

(cid:1) = xj ∀ xj ∈ X S

(cid:9) := Get parametric coordinates to X S;

3:

(cid:98)S = arg min

D

|S (Ξ) − (cid:98)X S| := Move control points to ﬁt (cid:98)S;

if (cid:98)S.degrees ≤ 4 then

(cid:98)S.elevate_degree();

(cid:98)S.insert_knot();

else

4:
5:
6:
7:
end if
8:
9: end while
10: return (cid:98)S;

14

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

References

[1] J.A. Cottrell, T.J.R. Hughes, and Y. Bazilevs. Isogeometric Analysis: Toward Integration of CAD and FEA. Wiley,

2009. ISBN 9780470749098.

[2] Gernot Beer, Benjamin Marussig, Jürgen Zechner, Christian Dünser, and Thomas-Peter Fries. Boundary element

analysis with trimmed NURBS and a generalized IGA approach. CoRR, abs/1406.3499, 2014.

[3] Navid Valizadeh, Yuri Bazilevs, Jiun-Shyan Chen, and Timon Rabczuk. A coupled iga–meshfree discretization
of arbitrary order of accuracy and without global geometry parameterization. Computer Methods in Applied
Mechanics and Engineering, 293, 04 2015.

[4] Roseline Bénière, Gérard Subsol, Gilles Gesquière, François Le Breton, and William Puech. A comprehensive
process of reverse engineering from 3d meshes to cad models. Computer-Aided Design, 45(11):1382–1393, 2013.
ISSN 0010-4485. doi:10.1016/j.cad.2013.06.004.

[5] V. Weiss, L. Andor, G. Renner, and T. Várady. Advanced surface ﬁtting techniques. Computer Aided Geometric

Design, 19(1):19–42, 2002. ISSN 0167-8396.

[6] Borhen Louhichi, Nizar Aifaoui, Mounir Hamdi, and Benamara Abdelmajid. An optimization-based computational
method for surface ﬁtting to update the geometric information of an existing b-rep cad model. International
Journal of Computer Applications in Technology, 09:17–25, 2009.

[7] Borhen Louhichi, Gad N. Abenhaim, and Antoine S. Tahan. Cad/cae integration: updating the cad model after a
fem analysis. The International Journal of Advanced Manufacturing Technology, 76(1-4):391–400, 2015. ISSN
0268-3768. doi:10.1007/s00170-014-6248-y.

[8] Djordje Brujic, Iain Ainsworth, and Mihailo Ristic. Fast and accurate NURBS ﬁtting for reverse engineering.
The International Journal of Advanced Manufacturing Technology, 54(5):691–700, 2011. ISSN 1433-3015.
doi:10.1007/s00170-010-2947-1.

[9] W. Ma and J. P. Kruth. NURBS curve and surface ﬁtting for reverse engineering. The International Journal of
Advanced Manufacturing Technology, 14(12):918–927, 1998. ISSN 1433-3015. doi:10.1007/BF01179082.
[10] Tamás Várady, Ralph R Martin, and Jordan Cox. Reverse engineering of geometric models—an introduction.
Computer-Aided Design, 29(4):255–268, 1997. ISSN 0010-4485. doi:10.1016/S0010-4485(96)00054-1. Reverse
Engineering of Geometric Models.

[11] Jian Gao, Xin Chen, Oguzhan Yilmaz, and Nabil Gindy. An integrated adaptive repair solution for complex
aerospace components through geometry reconstruction. The International Journal of Advanced Manufacturing
Technology, 36(11):1170–1179, 2008. doi:10.1007/s00170-006-0923-6.

[12] An advanced NURBS ﬁtting procedure for post-processing of grid-based shape optimizations, Reston, VA, 2011.
American Institute of Aeronautics and Astronautics. ISBN 978-1-60086-950-1. doi:10.2514/6.2011-891.

[13] P.R. Kennicott, IGES/PDES Organization, and U.S. Product Data Association.

Initial Graphics Exchange

Speciﬁcation, IGES 5.3. U.S. Product Data Association, 1996.

[14] NASA-IGES Translator and Viewer, 1995. URL https://ntrs.nasa.gov/citations/19950022354.
[15] Les Piegl and Wayne Tiller. The NURBS Book. Springer-Verlag, New York, NY, USA, second edition, 1996.
[16] Jorge Nocedal. Updating quasi-newton matrices with limited storage. Mathematics of Computation, 35(151):

773–782, 1980. ISSN 00255718, 10886842.

[17] Dong C. Liu and Jorge Nocedal. On the limited memory bfgs method for large scale optimization. Mathematical

Programming, 45(1-3):503–528, August 1989. ISSN 0025-5610.

[18] Steven G. Johnson. The NLopt nonlinear-optimization package, 2011. URL https://github.com/stevengj/

nlopt.

[19] Gershon Elber. Precise construction of micro-structures and porous geometry via functional composition.
In Michael Floater, Tom Lyche, Marie-Laurence Mazure, Knut Mørken, and Larry L. Schumaker, editors,
Mathematical Methods for Curves and Surfaces, pages 108–125, Cham, 2017. Springer International Publishing.
ISBN 978-3-319-67885-6.

[20] Boris van Sosin and Gershon Elber. Crossing knot lines in composition of freeform b-spline geometry. Comput.

Aided Geom. Des., 62:217–227, 2018.

[21] Shi-Min Hu and Johannes Wallner. A second order algorithm for orthogonal projection onto curves and surfaces.

Computer Aided Geometric Design, 22(3):251–260, 2005. ISSN 0167-8396.

[22] Gershon Elber. Free form surface analysis using a hybrid of symbolic and numeric computation. PhD thesis, Dept.

of Computer Science, University of Utah, 1992.

15

Automatic CAD Reconstruction of Post-Analysis Geometries

PREPRINT

[23] Benjamin Marussig and Thomas JR Hughes. A review of trimming in isogeometric analysis: challenges, data

exchange and simulation aspects. Archives of computational methods in engineering, 25(4):1059–1127, 2018.

[24] FreeCAD. Freecad, 2021. URL https://www.freecadweb.org/. Software.
[25] Sebastian Hube, Roxana Pohlmann, and Stefanie Elgeti. Seamless integration of analysis and design: Au-
tomatic cad reconstruction of post-analysis geometries - data, 2022. URL https://doi.org/10.18154/
RWTH-2022-03969. Collection of reconstructed IGES ﬁles.

16

