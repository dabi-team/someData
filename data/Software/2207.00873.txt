Energy-Efﬁcient User Clustering for UAV-Enabled
Wireless Networks Using EM Algorithm

Salim Janji
Poznan University of Technology
Poznan, Poland
salim.janji@doctorate.put.poznan.pl

Adrian Kliks
Poznan University of Technology
Poznan, Poland
adrian.kliks@put.poznan.pl

2
2
0
2

l
u
J

2

]
I

N
.
s
c
[

1
v
3
7
8
0
0
.
7
0
2
2
:
v
i
X
r
a

Abstract

Unmanned Aerial Vehicles (UAVs) can be used to provide wireless connectivity to support the existing infrastructure in
hot-spots or replace it in cases of destruction. UAV-enabled wireless provides several advantages in network performance due to
drone small cells (DSCs) mobility despite the limited onboard energy. However, the problem of resource allocation has added
complexity. In this paper, we propose an energy-efﬁcient user clustering mechanism based on Gaussian mixture models (GMM)
using a modiﬁed Expected-Maximization (EM) algorithm. The algorithm is intended to provide the initial user clustering and
drone deployment upon which additional mechanisms can be employed to further enhance the system performance. The proposed
algorithm improves the energy efﬁciency of the system by 25% and link reliability by 18.3% compared to other baseline methods.

I. INTRODUCTION

Drone small cells (DSCs) have gained popularity in recent years as a solution to wireless communication problems such as
lack of ﬁxed infrastructure (e.g. due to natural disasters) or the need for temporal capacity increase (e.g. to manage trafﬁc in
a mass-event). If properly deployed, and despite its inherent limitations, UAV-enabled wireless can leverage the performance
of the network due to increased probability for line-of-sight (LOS) connectivity and reduced total path loss. Furthermore, due
to their mobility, the location of the BS can adapt to the changes in ground user distribution to improve the total throughput
of the system. DSCs can also be a cost-effective substitute for building expensive cellular towers and infrastructure where the
need for such infrastructure is limited in terms of time or capacity [1], or be deployed along with existing infrastructure in
heterogeneous cellular networks [2].

Nonetheless, utilizing UAVs for serving ground users in a given area has its limitations. Limited onboard energy restricts the
deployment duration and transmit power thereby limiting the communication range. Furthermore, in the case of multiple DSCs,
severe co-channel interference can substantially degrade users’ link qualities [3]. Therefore, the problem of 3D deployment and
user allocation is a complex one when taking into consideration factors such as power minimization and interference mitigation.
DSCs locations should minimize the path loss and maximize signal-to-interference-plus-noise-ratio (SINR) along with serving
the highest possible number of users. Additionally, DSCs should be aware of each other to avoid inter-UAV collisions [1].

The topic of DSCs deployment optimization gained a lot of focus in recent years [4-10]. The problem is commonly approached
by optimizing a subset of all inherent aspects (e.g. locations or number of drones vs. coverage, transmit power vs. interference,
etc.) without taking into account other factors such as initial deployment and user clustering. In this paper, we target the
problem of power minimization, interference mitigation, DSC localization, and user clustering jointly along with deciding a
minimum required number of drones to serve a given user set with known locations. Our centralized algorithm is based on
Gaussian Mixture Models (GMM) and we call it Drone Users Clustering Expectation Maximization (DUCEM) algorithm. We
believe it could also serve as an initial clustering step before applying further heuristic mechanisms to further improve system
performance. That is, its results are more optimal than other clustering algorithms (e.g. K-means).

The paper continues as follows. Section II brieﬂy summarizes related research found in the literature. The system model and
optimization problem formulation are given in Section III. We introduce EM algorithm in IV and present our modiﬁed version
for DSCs clustering in Section V. Section VI introduces random waypoint mobility (RWM) model and reference point mobility
group (RPGM) model that are used for user mobility simulation. We also describe K-means algorithm which is chosen as the
baseline with which we compare our algorithm’s performance and present the results. Finally, in Section VII, we give our ﬁnal
remarks and conclusion.

Copyright © 2021 IEEE. Personal use is permitted. For any other purposes, permission must be obtained from the IEEE by emailing pubs-
permissions@ieee.org. This is the author’s version of an article that has been published in the 2021st International Conference on Software, Telecommunications
and Computer Networks (SoftCOM) and published by IEEE. Changes were made to this version by the publisher prior to publication, the ﬁnal version of record
is available at: http://dx.doi.org/10.23919/SoftCOM52868.2021.9559068. To cite the paper use: S. Janji and A. Kliks, ”Energy-Efﬁcient User Clustering for
UAV-Enabled Wireless Networks Using EM Algorithm,” 2021 International Conference on Software, Telecommunications and Computer Networks (SoftCOM),
2021, pp. 1-6, doi: 10.23919/SoftCOM52868.2021.9559068. or visit https://ieeexplore.ieee.org/document/9559068

 
 
 
 
 
 
II. RELATED WORK

The application of DSC has been investigated so far in various contexts. In particular, the authors in [4] developed a
machine learning scheme for predicting the number of required drones for load balancing in small cells based on historical
data. In [5], DSCs sequential placement is optimized to reduce the total number of drones and achieve maximum coverage.
However, interference was not taken into account. The authors in [6] considered optimal deployment of two DSCs taking
into consideration coverage and interference. In [7], the authors proposed an interference mitigation scheme using afﬁnity
propagation which reduces the power of interfering drones and clusters the users using K-means algorithm without targeting
the initial user clustering and allocation problem. In [8], the authors mitigate DSC interference in LTE hetNets by applying
3GPP Release-10 enhanced inter-cell interference coordination (eICIC), and optimize UAV deployment using a genetic algorithm
(GA). In [2], the authors optimize the transmit power and altitude of each DSC operating in a heterogeneous LTE network
comprised of macro base stations, mmWave small base stations, and DSCs operating in the microwave band. The proposed
algorithm determines subcarrier allocation using the Hungarian optimization method without targeting the problem of user-cell
association. Using game theory, the authors in [9] formulated the problem in a mean-ﬁeld game framework where the altitude
of DSCs is controlled to improve total SINR. In [10], a solution based on Particle Swarm Optimization (PSO) algorithm was
derived that maximizes coverage while maintaining link quality.

In general, the mechanisms reported in the literature do not jointly consider the following dynamic issues of DSCs

deployment:

• number of required drones for a given area
• interference mitigation between DSCs
• limited energy of DSCs.

Our work presents a heuristic mechanism that tries to address all of the aforementioned aspects of DSCs deployment.

III. PROBLEM FORMULATION
Fig. 1 presents the considered scheme where U ground users are randomly distributed and served by the set of M drones,
M. We consider a 3D Cartesian coordinates system in which each user u is located at xu = (xu, yu). The location of the
jth drone is denoted by F j = (xj, yj, hj), where hj denotes the ﬂying attitude, and j ∈ M. In our system, we consider
that all active drones are ﬂying at the same ﬁxed height h = 10 m. As discussed in [11], 10 m is the optimal height for
positioning a typical small cell antenna. Lower values cause possible coverage issues, and higher ones increase interference
with neighbouring cells. Next, we assume drone j ∈ {1, .., M } can transmit at a speciﬁed power PTj ≤ Pmax, and Pmax is
the maximum transmit power of the DSC. In consequence, it will serve all Uj ≤ U users within its coverage area. As will be
explained later in Section V, PTj is directly proportional to Σj, the covariance value of the Gaussian distribution associated
with drone j.

Fig. 1. Scenario of users served by DSCs.

As the drones are ﬂying over a certain area, it is rational to assume that a LOS link exists between drones and users [12].
Thus, we evaluate the free-space path loss model in our analysis. The distance between each drone and ground user is given
by:

(cid:113)

dj,u =

(xj − xu)2 + (yj − yu)2 + h2,

and the channel gain from drone m to user u can be deﬁned as:

Hj,u = α0d−λ
j,u .

(1)

(2)

Here, λ is the path loss exponent and α0 is the channel power at reference distance d0 = 1 m. In consequence, the signal-to-
noise ratio (SNR) between user u and serving drone j is then given by:
PTj Hj,u
σ2
0

SNRj,u =

(3)

where σ2
DSCs, the signal-to-interference-plus-noise ratio (SINR) of user u served by DSC j, Γu,j, is given by:

0 is the power of additive white Gaussian noise (AWGN) at the receiver. For modeling the interference from other

Γu,j =

PTj Hj,u

0 + (cid:80)M
σ2

i(cid:54)=j PTiHi,u

.

In consequence, the theoretical capacity limit can be derived based on Shannon’s formula as

Rtotal =

M
(cid:88)

U
(cid:88)

j=1

u=1

W (j, u)B log2(1 + Γu,j),

where W (j, u) = 1 if user u is served by drone j and 0 otherwise, and B is the allocated bandwidth per user channel.

Focusing only on data communications, the total maximum power consumed by drones can be given by:

Ptotal =

M
(cid:88)

i=1

PTi,

(4)

(5)

(6)

where we have neglected propulsion energy as it is irrelevant to our problem. Thus, the energy efﬁciency of the whole system
is deﬁned as follows:

EE =

Rtotal
Ptotal

.

(7)

It is assumed that the transmitted power of each drone can be continuously varied up to a limit Pmax. Also, the maximum
number of users served by each drone is also limited to Umax. Furthermore, each user is guaranteed a minimum SNR value
of SNRT . The optimization problem is then formulated as:

max
PTj ,Fj ,Uj

EE = max

PTj ,Fj ,Uj

Rtotal
Ptotal

.

(8)

s.t.

a) SNRj,u ≥ SNRT ∀u ∈ U
b) Uj ≤ Umax ∀j ∈ M
c) PTj ≤ Pmax ∀j ∈ M.

Next Sections present our heuristic approach to solving this problem.

IV. EXPECTED-MAXIMIZATION ALGORITHM
Expectation Maximization (EM) algorithm is based on Gaussian Mixture Models (GMMs) where it is assumed that the set

of samples is drawn from a ”mixture” of Gaussian distributions [13]. A GMM can be deﬁned as:

π(x; θ) =

M
(cid:88)

j=1

P (j)N (x; µj, Σj),

(9)

where the parameters θ = {P, µ, Σ} include mixing proportions, means of Gaussian components, and covariances respectively,
and N (x; µj, Σj) represents the j-th Gaussian distribution.

The EM algorithm learns the parameters θ given a set of sample points, X t, and number of mixtures, M (As will be
explained later, M denotes the number of drones). It consists of two steps (estimation step, called E-step, and maximization
step, called M-step) performed iteratively:

1) (E-step) Evaluate the posterior assignment probabilities given by:

p(l)(j|t) = p(j|xt, θ(l)) =
(cid:16)
P (l)(j)N

(cid:17)

xt; µ(l)
(cid:16)

j , Σ(l)
j
xt; µ(l)
j(cid:48) , Σ(l)
(cid:17)

j(cid:48)

j , Σ(l)

j

=

=

(cid:80)M

j(cid:48)=1 P (l)(j(cid:48))N
(cid:16)

P (l)(j)N

xt; µ(l)
P (xt; θ(l))

(cid:17)

(10)

where (l) denotes iteration number, and xt =

2) (M-step) Update parameters according to:

(cid:21)

(cid:20) xt
yt

is the sample t = {1, .., n} where n is the number of samples.

p(l+1)(j) =

µ(l+1)
j

=

ˆn(j)
n

1
ˆn(j)

, where ˆn(j) =

n
(cid:88)

t=1

p(l)(j|t)xt.

n
(cid:88)

t=1

p(l)(j|t).

Σ(l+1)
j
n
1
(cid:88)
ˆn

t=1

=

(cid:16)

p(l)(j|t)

xt − µ(l+1)

j

(cid:17) (cid:16)

xt − µ(l+1)

j

(cid:17)T

.

(11)

(12)

(13)

As can be observed, the E-step obtains the posterior probabilities that denote the probability of having the sample observed xt
being drawn from the j-th Gaussian component. In the M-step, the parameters of each component j are updated to increase
the total likelihood of the GMM. It is worth noting that the EM algorithm is guaranteed to converge to a local optimal solution
[13].

V. DRONE USERS CLUSTERING EXPECTED MAXIMIZATION ALGORITHM (DUCEM)

In this paper, we propose using a modiﬁed EM algorithm to tackle the problem of DSCs placement and user clustering

along with considering the system energy efﬁciency.

The set of sample points, X, is taken to be the set of users distributed on the ground to be served by DSCs. Furthermore,
µj indicates the j-th DSC location in the 2D x, y Cartesian plane, and Σj is associated with the transmission power PTj of
drone j (i.e. the values of each covariance matrix are proportional to the transmission power of each DSC). The posterior
probabilities p(j|t) bear no mapping to parameters in the real system but serve in determining the power and location of each
DSC as evident in equations (12) and (13).

The reasoning behind our choice is that by examining equations (10-13) we observe that each sample point xt (i.e. location
of user t) contributes to the parameters of all components (drones). The magnitude of this contribution is determined by the
posterior probability given in equation (10). Thus, the contribution of xt to DSC j parameters decreases as p(k|t)k(cid:54)=j increases.
This is evident from (10) as N (x; µk, Σk) increases, p(j|t) decreases. This translates into the observation that user t, if served
by DSC k, would contribute less to parameters updates of DSC j in (11-13). Therefore, because of EM algorithm dynamics,
it can be associated with the practical problem of DSC users clustering where each user requires to be served by one DSC.
Our DUCEM algorithm introduces several modiﬁcations to the standard EM to suit our considered problem:

1) Each covariance matrix Σj M ×M , is a diagonal matrix with equal diagonal values to map the DSCs circular coverage of
ground users to a circular distribution of samples around means (power is transmitted equally through each axis around
the DSC). By removing this constraint, coverage of DSCs will take a non-circular form (i.e. using beamforming). This
will be a topic of our future work.

2) The diagonal values of Σj, denoted as Σj, are limited to a maximum value Σmax to resemble the real case scenario of
limited transmit power of drones Pmax. This limits the number of sample points xt to be associated with component j.
3) Σj is only allowed to increase while Uj ≤ Umax. This ensures that the number of users served by DSC j is bounded by

Umax.

4) The change of Σj per DUCEM iteration is limited by a maximum value of dΣmax. This reduces overlapping between
clusters and therefore the chance for a cluster to be completely contained in another one. Not limiting dΣmax allows
abrupt big jumps in Σj initial updates where sample points far from µj substantially affect the update in (13) because the
corresponding posterior probability is large (other components have not yet contributed to the denominator in (10)). Fig.
2 shows the difference between setting a maximum dΣmax for a certain set of sample points and M = 4. As observed,
limiting Σj change in equation (13) reduces overall overlapping. Clearly, this improves interference between DSCs. To
summarize, the update in equation (13) is limited by Σ(l+1)

j ≤ dΣmax, and Σ(l+1)

≤ Σmax.

− Σ(l)

j

j

5) Each user is associated to the cluster with smallest value of Standarized Euclidean Distance (SED) given by:

SEDj,u =

(cid:112)((xj − xu)2 + (yj − yu)2 + h2)
Σj

.

(14)

Users allocations are given by the matrix W M ×U where W (j, u) = 1 if the u-th user is associated with drone j and 0
otherwise.

6) Each DSC is centered at the mean location of its served users.

7) The algorithm begins with m = 1 as the initial number of drones (components) and adds another drone while a solution

that satisﬁes the requirements of the maximum number of users or link reliability is not yet found.

8) At each iteration, the total system EE is obtained. The setting that yields maximum EE (θopt = {µ1, Σ1, ..., µM , ΣM }
is saved and is chosen as the ﬁnal solution. EM algorithm converges when the maximum change, maxdθ, of any of the
parameters µj and Σj after iteration i is limited by ε1. Also, a new DSC is added when the number of DSCs is not
enough to ﬁnd a solution that satisﬁes the maximum number of users and maximum power constraints. Finally, ε2 ensures
that no new drones are added until EM updates are close to convergence.

(a) High overlap for dΣmax = ∞

Fig. 2. Comparison of clustering overlap for a given set of test points with different dΣmax values.

(b) Decreased overlap for dΣmax = 0.1

Algorithm 1 shows the pseudocode for the DUCEM scheme. The algorithm takes as an input the drones maximum power
Pmax, maximum number of users per cluster Umax, and the locations of users X. The location and transmitting power of
each drone are initialized arbitrarily around the considered area. Furthermore, two thresholds are set: ε1 which determines the
minimum change in drone parameters (µ, Σ) after which convergence is reached, and ε2 which sets the threshold of parameter
change below which a new drone would be added if no solution that satisﬁes power and capacity requirements is yet found.
On each iteration the posterior probabilities are obtained and each drone parameters, θ, are updated. Users are then assigned to

the drone with lowest resulting SED given by (14). The drones 2D locations are then recalculated as the centers of assigned
users clusters in step 6. The power of each drone is then obtained by satisfying the SNR requirement. As long as no solution
satisfying the constraints is found the algorithm reiterates. If the maximum change per parameters (step 29) is below ε2, a
new drone is added. The algorithm stops if the change in parameters is below ε1 and a solution is found. It then returns the
settings that result in the highest energy efﬁciency score (steps 23 - 27).

Algorithm 1 Drone Users Clustering Expectation Maximization
Input: X, Umax, Pmax
Output: M, θopt = {P , µ, Σ}, PTj ∀j ∈ M, W M ×U

Initialisation : Initialize θ = {P (0), µ(0), Σ(0)}, i = 0, maxEE = 0, ε2 < ε1
LOOP Process

1: while (maxdθ > ε1 or SolutionF ound = 0) do
Obtain posterior probabilities p(j|t) ∀j ∈ M
2:
Update p(j), µj according to (11) and (12) ∀j ∈ M
3:
Obtain Σjnew according to (13) ∀j ∈ M
4:
Allocate users to DSC with minimum SED given in (14) and obtain W i
5:
µ(cid:48)
calculate PTj according to SNRT ∀j ∈ M
for j ∈ M do

j = mean (W i

jX T ) ∀j ∈ M

6:
7:
8:
9:
10:

11:
12:
13:
14:
15:
16:

17:
18:
19:
20:
21:
22:

if (Uj ≤ Umax or Σjnew < Σj) then

Update Σj = Σjnew

end if
end for
if (maxdθ < ε2 and SolutionF ound = 0) then

Add new DSC: M = M + 1
Go to step 2

end if
SolutionF ound = 1
if (Uj ≥ Umax or (Pj > Pmax)) ∀j ∈ M then

SolutionF ound = 0

end if
if SolutionF ound = 1 then

Obtain EE
if EE > maxEE then
maxEE = EEi
θopt = θi
W opt = W i

23:
24:
25:
26:
27:
28:
29: maxdθ = max{maxj∈M {µi
30:
31: end while
32: return m, θopt = {P , µ, Σ}, PTj ∀j ∈ M, W opt

j − µi−1
j

j − Σi−1

i = i + 1

end if

end if

, Σi

j

}}

A. Users Mobility Model

VI. SIMULATION AND RESULTS

For our simulations, we consider that users are moving within groups. This model reﬂects the scenario in which DSCs
deployment is immediately required in mass-events (e.g. concerts, street gatherings, etc.). Other scenarios are also applicable.
Each group has a leader moving according to the random waypoint mobility (RWM) model [14]. Each leader movement is
determined by drawing from a memoryless stochastic process with three random variables Di, Tp,i, and Vi denoting destination
point at instance i, pause time at the destination, and traveling speed respectively. Furthermore, each leader is surrounded by
group members that are moving according to the reference point group mobility model (RPGM) [15]. According to RPGM
the movement of group members can be characterized by the respective motion vector:

V (g)
i

(t) = V (g)

leader(t) + RM

(15)

TABLE I. SIMULATION PARAMETERS

Parameter
DSCs altitude h
Path loss exponent λ
DSCs max transmit power Pmax
Noise power σ0
Received power at reference distance 1 m α0
dΣmax
Channel bandwidth B
SNRT

Value

10 m

2

1 W

-100 dBm

-30 dB

0.1

10 MHz

12 dB

where i, g denote the member and group numbers respectively, V g
leader(t) is the motion vector of group leader g at time
instant t, and RM is a random vector deviated by group member i from its leader. The movement of group members can be
represented by the angle and magnitude deviation between leaders and members’ motion vectors. The equations that determine
the deviation at time instant t are as follows:

|V member(t)| = |V leader(t)| + r φvdVmax
θmember(t) = θleader(t) + r φθdθmax

(16)

(17)

where r ∈ [0, 1] is a random number drawn from a uniform distribution at each group member movement interval, φv and φθ
are the speed deviation ratio and angle deviation ratio respectively, and dVmax and dθmax are the group members maximum
speed and angle deviation respectively. Arbitrary settings of φv, φθ, dVmax, and dθmax yield varied simulation scenarios.

B. Simulation Parameters

In our simulations we consider an area of 1200 m2 for the users’ mobility model. The simulation parameters are listed in
Table 1. We compare our algorithm results in terms of link reliability and energy efﬁciency for different values of maximum
number of users per cluster Umax. The link reliability is given by:

Lrel = Pr{Γu,j ≥ ΓT h}, ∀j ∈ M,

(18)

where Γu,j is the SINR between user u and drone j given by (4), and ΓT h is the SINR threshold above which the link is
considered reliable.

C. K-means Clustering

K-means clustering is a special case of EM where all components have equal covariances Σj and each point is assigned
to the component with higher posterior probability p(j|t) [13]. The algorithm takes in the number of clusters and sample
points (X, m) as an input. For our simulations, we employ K-means clustering with simple modiﬁcations to better suit our
application. Modiﬁcations concern the realistic restriction of the maximum number of users per cluster Umax, and maximum
transmission power Pmax.

K-means clusters users with the speciﬁed restrictions of Umax and Pmax that DUCEM satisﬁes. At each iteration, K-means
algorithm is repeated 10 times with different initialization determined by Kmeans++ algorithm [16]. The algorithm is presented
in Algorithm 2. As an input, K-means receives the drones maximum power Pmax, maximum number of users per cluster Umax,
and the locations of users X. The algorithm begins with one drone and adds a new one (steps 6- 8) if the constraints are not
satisﬁed. Similarly to DUCEM, the transmission power for each drone is obtained by satisfying the SNR constraint (step 5)
after positioning the drone at the center of the associated users (step 4). Again, the settings that yields the highest EE score
is returned.

Algorithm 2 K-means Clustering
Input: X, Umax, Pmax
Output: µ, W opt

Initialisation: Initialize M = 1, i = 0, maxEE = 0
LOOP Process
1: while (i < 10) do
2:
3:

Cluster users using K-means with inputs (X, M )
for j ∈ M do

jX T )

µj = mean (W i
calculate Pj according to SNRT
if (Uj > Umax) or (Pj > Pmax)∀j ∈ M then

4:
5:
6:

7:
8:

9:
10:
11:
12:
13:
14:

end if
end for
if EE > maxEE then
maxEE = EE(i)
W opt = W i

end if
i = i + 1

15:
16: end while
17: return µj, W opt

Cluster users in cluster j using K-means with inputs (W i
Check if sub-cluster k satisﬁes conditions in 6. If not, repeat 7 for cluster k

jX T , 2)

D. Results

Fig. 3 shows the obtained EE for different values of Umax. On average, the EE of the system is improved by 25%.
Furthermore, the achieved link reliability is obtained for two different values of ΓT h. The results show that DUCEM provides,
on average, 18.3% better link reliability. Fig. 4 plots Lrel results for Umax = 1500.

We observe that DUCEM results are indeed more optimal than the widely used K-means clustering mechanism. The
improvement in performance is almost constant for different values of Umax. This is expected since both algorithms do not
directly optimize inter-cell interference which is expected to have greater effect with increasing number of drones (i.e. decreasing
value of Umax). Employing DUCEM with the mechanisms mentioned in Section II is expected to speed up convergence and
achieve better results which will be the topic of our future work.

Fig. 3. System energy efﬁciency (EE) against the maximum allowed number of users per cluster (Umax).

VII. CONCLUSION

DSCs provide a suitable solution for providing wireless coverage. However, their deployment problem requires consideration
of various aspects such as co-channel interference, 3D placement, user clustering, and transmit power minimization. The problem
of user clustering for DSCs has received limited attention. In this paper, a user clustering algorithm was proposed that takes
into account the aforementioned aspects of the problem. The numerical results veriﬁed that the proposed algorithm enhances
system performance in terms of energy efﬁciency and link reliability. The results of DUCEM can provide the initial clustering

Fig. 4. Link reliability (Lrel) against SINR threshold (ΓT h). Umax = 1500.

upon which further performance improving mechanisms can be implemented. To further improve the performance of DUCEM,
the problem of inter-cell interference should be tackled and optimized. Other aspects to be considered and optimized for are
users handover and the drone’s propuslion energy.

REFERENCES

[1] M. Mozaffari, W. Saad, M. Bennis, Y. Nam, and M. Debbah, “A tutorial on uavs for wireless networks: Applications, challenges, and open problems,”

IEEE Communications Surveys Tutorials, vol. 21, no. 3, pp. 2334–2360, 2019.

[2] J. Chakareski, S. Naqvi, N. Mastronarde, J. Xu, F. Afghah, and A. Razi, “An energy efﬁcient framework for uav-assisted millimeter wave 5g heterogeneous

cellular networks,” IEEE Transactions on Green Communications and Networking, vol. 3, no. 1, pp. 37–44, 2019.

[3] H. V. Abeywickrama, Y. He, E. Dutkiewicz, B. A. Jayawickrama, and M. Mueck, “A reinforcement learning approach for fair user coverage using uav

mounted base stations under energy constraints,” IEEE Open Journal of Vehicular Technology, vol. 1, pp. 67–81, 2020.

[4] J. Hu, H. Zhang, Y. Liu, X. Li, and H. Ji, “An intelligent uav deployment scheme for load balance in small cell networks using machine learning,” in

2019 IEEE Wireless Communications and Networking Conference (WCNC), 2019, pp. 1–6.

[5] J. Lyu, Y. Zeng, R. Zhang, and T. J. Lim, “Placement optimization of uav-mounted mobile base stations,” IEEE Communications Letters, vol. 21, no. 3,

pp. 604–607, 2017.

[6] M. Mozaffari, W. Saad, M. Bennis, and M. Debbah, “Drone small cells in the clouds: Design, deployment and performance analysis,” in 2015 IEEE

Global Communications Conference (GLOBECOM), 2015, pp. 1–6.

[7] Y.-S. Chao, C. Shao-Hung, and Z. Han, “An integrated afﬁnity propagation and machine learning approach for interference management in drone base

stations,” IEEE Transactions on Cognitive Communications and Networking, vol. PP, pp. 1–1, 10 2019.

[8] A. Kumbhar, I. G¨uvenc¸, S. Singh, and A. Tuncer, “Exploiting lte-advanced hetnets and feicic for uav-assisted public safety communications,” IEEE

Access, vol. 6, pp. 783–796, 2018.

[9] L. Li, Z. Zhang, K. Xue, M. Wang, M. Pan, and Z. Han, “Ai-aided downlink interference control in dense interference-aware drone small cells networks,”

IEEE Access, vol. 8, pp. 15 110–15 122, 2020.

[10] W. Shi, J. Li, W. Xu, H. Zhou, N. Zhang, and X. Shen, “3d drone-cell deployment optimization for drone assisted radio access networks,” in 2017

IEEE/CIC International Conference on Communications in China (ICCC), 2017, pp. 1–6.

[11] M. Ding and D. Lopez-Perez, “Please lower small cell antenna heights in 5g,” 11 2016.
[12] Q. Wu, Y. Zeng, and R. Zhang, “Joint trajectory and communication design for multi-uav enabled wireless networks,” IEEE Transactions on Wireless

Communications, vol. 17, no. 3, pp. 2109–2121, 2018.

[13] R. Singh, T. Jaakkola, and A. Mohammad, “6.867 machine learning. fall 2006.” [Online]. Available: MITOpenCourseWare,https://ocw.mit.edu.
[14] C. Bettstetter, G. Resta, and P. Santi, “The node distribution of the random waypoint mobility model for wireless ad hoc networks,” IEEE Transactions

on Mobile Computing, vol. 2, no. 3, pp. 257–269, 2003.

[15] J. Geetha and G. Ganapathy, “Reference point group mobility and random waypoint models in performance evaluation of manet routing protocols,”

Journal of Computer Systems, Networks, and Communications, vol. 2008, 01 2009.

[16] D. Arthur and S. Vassilvitskii, “K-means++: The advantages of careful seeding,” vol. 8, 01 2007, pp. 1027–1035.

