2
2
0
2

r
p
A
5
2

]
E
S
.
s
c
[

1
v
6
2
8
1
1
.
4
0
2
2
:
v
i
X
r
a

Personality Traits in Game Development

Miriam Sturdee
Lancaster University
Lancaster, United Kingdom
m.sturdee@lancaster.ac.uk

Matthew Ivory
Lancaster University
Lancaster, United Kingdom
matthew.ivory@lancaster.ac.uk

David Ellis
University of Bath
Bath, United Kingdom
dae30@bath.ac.uk

Patrick Stacey
Loughborough University
Loughborough, United Kingdom
P.Stacey@lboro.ac.uk

Paul Ralph
Dalhousie University
Halifax, Canada
paulralph@dal.ca

ABSTRACT
Existing work on personality traits in software development ex-
cludes game developers as a discrete group. Whilst games are soft-
ware, game development has unique considerations, so game devel-
opers may exhibit different personality traits from other software
professionals. We assessed responses from 123 game developers
on an International Personality Item Pool Five Factor Model scale
and demographic questionnaire using factor analysis. Programmers
reported lower Extraversion than designers, artists and production
team members; lower Openness than designers and production, and
reported higher Neuroticism than production—potentially linked to
burnout and crunch time. Compared to published norms of software
developers, game developers reported lower Openness, Conscien-
tiousness, Extraversion and Agreeableness, but higher Neuroticism.
These personality differences have many practical implications:
differences in Extraversion among roles may precipitate communi-
cation breakdowns; differences in Openness may induce conflict
between programmers and designers. Understanding the relation-
ship between personality traits and roles can help recruiters steer
new employees into appropriate roles, and help managers apply
appropriate stress management techniques. To realise these bene-
fits, individuals must be distinguished from roles: just because an
individual occupies a role does not mean they possess personality
traits associated with that role.

CCS CONCEPTS
• Software and its engineering; • Human-centered comput-
ing → Human computer interaction (HCI);

KEYWORDS
personality traits, IPIP, game development

ACM Reference Format:
Miriam Sturdee, Matthew Ivory, David Ellis, Patrick Stacey, and Paul Ralph.
2022. Personality Traits in Game Development. In The International Confer-
ence on Evaluation and Assessment in Software Engineering 2022 (EASE 2022),

Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
EASE 2022, June 13–15, 2022, Gothenburg, Sweden
© 2022 Copyright held by the owner/author(s).
ACM ISBN 978-x-xxxx-xxxx-x/YY/MM.
https://doi.org/10.1145/nnnnnnn.nnnnnnn

June 13–15, 2022, Gothenburg, Sweden. ACM, New York, NY, USA, 10 pages.
https://doi.org/10.1145/nnnnnnn.nnnnnnn

1 INTRODUCTION
Game development is a large segment within software develop-
ment, with approximately 2.5 billion players and global turnover
of US$180.1 billion in 2021.1. While video games are software sys-
tems, they are qualitatively different from other kinds of software
systems. Banking software, for example, differs from video games
in both purpose and intended audience.

Game development entails different (if not unique) challenges
including its ‘crunch-time’ culture: when big releases are immi-
nent, developers are required to work around the clock to ensure
deadlines are met [22]. Game development also entails more het-
erogeneous roles than many other kinds of software development,
including graphic design, sound design, voice acting, 2D and 3D
art, story writing, physics, as well as programming for multiple
platforms and unique types of testing (e.g. play-testing).

Multidisciplinary game development teams attract more diverse
employees [24]. While quantifying such diversity is difficult, there
may be something specific about the games industry that inspires
people beyond other software roles (e.g. working with financial
software). Understanding why people gravitate to these roles allows
the industry to adapt and evolve, include people displaying relevant
traits, or recruit others into the various roles inherent in this multi-
dimensional industry.

One way to explore the background of game developers, and
identify proficiency in skill sets of certain roles within game de-
velopment, is through personality traits [15]. Studying personality
traits can reveal factors underlying outlook and behaviour, and
produce insights into how a person’s personality evolves over their
lifespan [17]. Personality scales are often used by employers to
estimate a person’s suitability for a role, but can also be used in
other contexts, or for individual curiosity.

Existing studies of software development and personality have
either studied broad populations [19], examined particular appli-
cation areas such as software testing [33], or looked at cultural
differences [4, 5], yet few studies explicitly examine personality
traits for game developers, though some examine personality traits
of players [44, 46]. We aim to extend the existing body of knowl-
edge for personality in software development by exploring the
personality traits of workers in the games development industry.

1https://techjury.net/blog/video-game-demographics/

 
 
 
 
 
 
EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Sturdee et al.

We therefore propose the following research question: Do game
developers have strong indicators of traits on any particular personal-
ity axes, and do the personality traits of game developers differ from
those of software developers in general?

Due to the novelty of the population, we conduct an exploratory
study to identify the personality traits of game developers. We de-
fine personality in the context of psychological research into traits;
that is, a set of behavioural characteristics, preferences, and pat-
terns that are relatively stable within an individual’s lifespan [48],
many of which make up a person’s ‘personality’. We define a game
developer as a person engaged in creating or maintaining a video
game including programming, design, management and production,
with a focus on the technical aspects of the field.

Next, we outline psychology research on personality traits, in-
cluding the Five Factor Model (FFM) and Myers Briggs Type In-
dicator (MBTI®), before explaining how this research applies to
software engineering and games development. Then, in Section 3,
we describe our instrumentation, recruitment strategy, hypothe-
ses, and analytical approach. Section 4 includes data diagnostics,
descriptive statistics, factor analysis and group comparisons. We
then discuss how the results may be applicable to the real world,
compare possibilities in games versus software development, and
consider the next steps and implications for this novel path of re-
search in Section 5. Section 6 concludes the paper with a summary
of its contributions.

Given the apparent lack of related research in this area, and its
potential, we aim to produce an initial investigation into personality
traits in game development, in order to support ongoing work on
personality in the wider field of software development.

2 RELATED WORK
A common view in psychology is that personalities are a collec-
tion of behavioural traits, preferences and patterns [36], which are
relatively stable over time [38]. Subsequently, personality traits
can explain and predict behaviours. Predicting and understanding
behaviours exhibited by particular personality traits facilitates iden-
tifying specific traits that may draw people to certain professions or
careers. Research on personality traits of software engineers goes
back to the early 1990s [23], likely associated with the rise of the
internet and increased levels of software within businesses.

Personality is mostly measured using standardised question-
naires. Answers are combined using factor analysis to estimate
quantitatively an individual’s personality traits (factors). These
questions are carefully curated and presented to limit biases. Sev-
eral notable scales exist but the scales used most often in software
engineering research are the International Personality Item Pool
(IPIP) items [26], which includes scales for dozens of personality
traits including the Big Five Model (see Section 2.1), and the Myers-
Briggs Type Indicator® (MBTI) test [43] (see Section 2.2).

2.1 The Five Factor Model
The Five Factor Model (FFM) [40] proposes five dimensions of
human personality:

• Openness to Experience (e.g. amenable to embracing new

activities or unconventional ideas)

• Conscientiousness (e.g. self-discipline, reliability, depend-

ability)

• Extraversion (e.g. exhibiting social confidence, outgoing)
• Agreeableness (e.g. cooperation, friendliness, altruism),
• Neuroticism (e.g. nervousness, moodiness, emotional insta-

bility)

Each trait has six facets [cf. 32] but analysis of individual facets
is not necessary for the purposes of this paper. FFM can be mea-
sured using the items from the International Personality Item Pool
(IPIP) [26], specifically, IPIP-50 (50-item scale) and IPIP-20 (20-item
scale) [26]. FFM and its associated IPIP scales have been validated
in large scale studies with thousands of respondents [e.g. 55].

FFM has formed the theoretical basis of several studies of soft-
ware professionals and has been extensively empirically tested and
validated since its inception in 2006 [26, 27]. Within the software
professional population, Feldt et al. [24] investigated the personali-
ties of 47 professional software engineers using the IPIP-50 scale.
They found two personality clusters within their sample, of moder-
ate and intense personality types (those scoring higher in Openness
and Extraversion). Those who reported a more intense personality
were typically younger, had a preference for multi-tasking and for
contributing to a project as opposed to working with it from begin-
ning to the end. Kosti et al. [34] found similar results in computer
science postgraduate students using the IPIP-20 scale, particularly
of moderate and intense style personalities. Those with intense
personalities were more likely to prefer working in teams and
management-style roles within the development process. Despite
using different versions of the IPIP, the studies found comparable
results which suggests reliability within the IPIP.

Calefato et al. [12] used a different method—text mining across
web pages of the Apache Software Foundation, mailing list archives
and git repositories—to examine the differences in developer per-
sonalities. The authors found that those who reported higher Agree-
ableness and Openness were more likely to have authored more
successfully-integrated commits into a git repository. In terms of
recruitment activities, we might suggest that individuals exhibiting
those particular traits could appeal to employers. The authors also
found that as developers evolve during their careers, they become
more neurotic, conscientious and agreeable, which suggests that
personality traits are changeable, with situations and contexts in-
fluencing traits [29], which indicates that traits are not stable over
the lifetime of an individual [41].

In contrast, Amin et al. [6] investigated personality profiles of
programmers in Pakistan and found that Agreeableness and Con-
scientiousness were the most dominant traits, with Neuroticism
being the least dominant trait. Extraversion was also relatively low.
Meanwhile, in a Turkish sample, Extraversion was very low while
Conscientiousness was high [4]. Cross-cultural factors may there-
fore influence personality in software development. In a different
vein, Doungsa-ard et al. [20] used a mapping analysis to sort new
software engineers automatically into the most appropriate role for
their personality based upon data from current occupiers of similar
roles, highlighting the distinctions between roles, such as analyst,
designer, developer and tester. Despite an increasing number of
studies in recent years however, only a few datasets using IPIP
scales for the software development population exist [26]. This

Personality Traits in Game Development

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

hinders modeling software engineer personality types based solely
upon IPIP data.

2.2 Myers-Briggs Type Indicator
Many studies of personality in software engineering and else-
where use MBTI [8, 19], which classifies personalities on four di-
mensions that combine to form a person’s ‘preferred’ personality
type [43]. These four dimensions are Extraversion-Introversion,
Sensing-Intuition, Thinking-Feeling and Judging-Perceiving. A meta-
analysis indicates the two most common personality types in soft-
ware development are ISTJ and INTJ [8], suggesting that most
programmers are introverts who rely on logic to make decisions
and prefer more structure in their working environment, whereas
‘feeling’ types were much less well represented. Research based on
MBTI® should be interpreted with caution. MBTI® is a commercial
product based on Jung’s unvalidated psychoanalysis theory [31].
Despite its prominence in hiring strategies, much research disputes
its validity and usefulness [e.g. 10, 53] and argues for better models
of personality [37], including FFM.

2.3 Personality and Job Roles
Software engineering includes diverse job roles and specialisms [15],
far beyond the stereotypical programmer [16]. For example, a con-
temporary application development team might comprise a product
manager, product designer, several developers, and specialists in
quality assurance and DevOps. Previous work has highlighted the
most dominant personalities within specific roles, (see Section 2), to
help people choose career paths. Prior research into role separation
has exclusively relied on MBTI®.

One such study of 100 software engineers cross-referenced the
roles of analyst, designer, programmer, tester and maintainer against
MBTI® personality types. They found that 84% of extroverts pre-
ferred analyst roles compared to 70% of introverts preferring design-
based roles and 65% of introverts preferring programming [16]. Sim-
ilar results were found by Ahmed et al. [3] and Capretz et al.[13].
Capretz et al. [14] also mapped the skills of software roles to per-
sonalities within particular positions. They found that EF types
were well suited to analysis roles, NT types for design, IST for
programming, SJ for testing and SP for maintenance roles, which
is line with previous findings [3, 13, 16]. Similarly, Hardiman et
al. [28] suggested that the best programmers were typically NT and
SJ types, but software engineering has evolved greatly since the
publication of this paper in 1997. Finally, in comparison to MBTI®
studies, Acuna et al. [2] found that a team leader should display
certain traits, and that these traits differ from the traits best for pro-
gramming or testing. Acuna et al. [1] later found more Agreeable,
Conscientious students report higher job satisfaction.

2.4 Applicability to Game Development
Whilst existing software engineering research has investigated the
intersection of personality and role, no one has yet investigated the
personality types present within the game development commu-
nity. Game developers may differ from other software developers
because games encompass a wider range of creative and artistic
tasks [52]. Game development may therefore attract people who
have strong creative traits alongside those who enjoy programming.

While we found no studies of personality in game developers, Amin
et al. [5] found that programmer creativity is directly related to
Openness and Extraversion and inversely related to Neuroticism.
This makes intuitive sense as more open, extraverted people tend
to seek out new experiences, which may foster original ideas that
can be channeled into their creative work.

3 METHOD
We developed and administered a questionnaire survey to collect
personality, demographic, and employment data from game devel-
opment professionals over a one-month period.

3.1 Hypotheses
We begin with two hypotheses:
H1: Game developers in different roles will report distinct personality
traits
H2: Game developers will report distinct personality traits com-
pared to those previously reported by software developers

Both of these hypotheses follow from the basic tenant of person-
ality research that certain tasks, roles or jobs tend to appeal more
to people with certain personality traits. Consequently, people tend
to perform better at jobs that align with their personality traits.
As described in Section 2, previous research found personality dif-
ferences among roles within software development organizations.
Analogously, we expect to find personality differences both within
game development organizations and between game development
and other kinds of software development.

3.2 Instrumentation
We implemented a questionnaire survey using Qualtrics(.com). The
study obtained ethical approval from the host institution, and in-
formed consent was given prior to starting the survey. The ques-
tionnaire began with a published, standardised introduction to
personality testing in which participants were asked to describe
themselves honestly as they generally were at that moment in
time. We operationalized the Five Factor Model using the IPIP-50
scale [11], with five-point rating items ranging from “strongly agree”
to “strongly disagree”. IPIP questions were presented in random
order. Associated positive/negative scoring for each factor was pro-
grammed into the questionnaire to allow participants to see their
trait tendencies after taking part. Participants also answered basic
demographic questions about themselves and their employment,
and were asked to select their role(s) (e.g. programming) and sub-
roles (e.g. Engine Programmer). Open text boxes were provided for
non-standard answers.

3.3 Recruitment
The questionnaire was administered both online and in-person
(using tablets configured to record answers in a fresh question-
naire). Participants either self-selected via a ‘walk-up’ at an English-
speaking, UK-based industry and trade conference (Develop:Brighton),
or completed the same materials online via links posted on Twitter,
either by responding to the advertisement directly, or via snowball
sampling. The online component of the study ran in parallel to
the conference data collection and the study also remained open
for four weeks after the conference ended. Participants were not

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Sturdee et al.

compensated for their participation, but were able to view their
trait scores at the end of the survey.

3.4 Analysis Procedure
Data were analysed in R (version 4.1.0). We used Exploratory Factor
Analysis (EFA) to assess convergent and discriminant validity, and
remove problematic items. We then used Confirmatory Factor Anal-
ysis (CFA) to re-affirm correct loadings and compute trait (factor)
scores. Finally, we used one-way ANOVA to test our hypotheses
by assessing personality trait differences. Post-hoc Tukey tests and
eta-squared effect sizes were conducted for significant ANOVA
results, with a p-value of < .05 as the boundary for significance.
One-way ANOVA comparisons are made against two published
norms of software developers [24, 34] to evaluate whether game
developers display significantly different personality profiles than
the broader umbrella term of software developer.

4 RESULTS
This section explores personality differences within game devel-
opment teams and between our sample of game developers and
previously-studied samples of developers of other kinds of software.

4.1 Descriptive Statistics
Data from 128 participants was considered usable, but five partic-
ipants were excluded from the analysis due to belonging to very
small roles: Audio and Quality Assurance (1 and 4 participants,
respectively). Given the unique skills and experience required for
these roles, it was more appropriate to remove them than to re-
categorise them. As such, 123 participants were included in the
analysis. Of the 123 participants, 26 identified as female and 97 as
male. Table 1 provides further demographic information on the
reported roles and ages of respondents.

Table 1: Breakdown of the different roles by age

Age

Art Design

Production

Programming Total

16–20
21–25
26–30
31–35
36–40
41–45
46–50
51–55
56+

0
6
3
7
2
2
1
0
0

Total

21

0
4
14
5
3
1
3
0
2

32

0
2
6
3
0
3
1
1
1

17

1
10
15
12
10
4
1
0
0

53

1
22
38
27
15
10
6
1
3

123

4.2 Diagnostics
To assess complete-incomplete response bias, chi-square compar-
isons were made for role, 𝜒 2 (5, 181) = 5.30, p = .381, and gender,
𝜒 2 (1, 186) < .001, p = 1. Since both tests fail to reject the null
hypothesis (that the groups are the same); we find no evidence of
response bias.

4.3 Scale Validation and Construct Validity
To assess data factorability prior to factor analysis we applied
Bartlett’s test of Sphericity and the Kaiser-Meyer-Olkin (KMO)
test for sampling adequacy. Bartlett’s test was significant (𝑝 < .001)
indicating relationships between personality items. The KMO score
of .68 indicates that the data is acceptable, if not ideal, for factor
analysis.

Next, we conducted exploratory factor analysis (EFA) with the
weighted least squares estimator and varimax rotation to assess
convergent and discriminant validity. We iteratated between drop-
ping the most problematic item and re-running the EFA until all
remaining items loaded well (i.e. indicating good convergent and
discriminant validity).

Having removed some problematic items using EFA, we then
proceeded with confirmatory factor analysis (CFA), with the diago-
nal least weighted squares estimator, to further affirm the validity
of the scale and compute the individual factor scores. Again, some
items appeared problematic and we iterated between dropping the
most problematic item and re-running the CFA.

The model converged after 73 iterations, with no significant
covariance between factors (p < .004 for all factor pairs), indicating
successful fit (CFI = .930, TLI = .926 and RMSEA = .083). While
these indices are not within the thresholds suggested by [30], such
thresholds were designed for continuous data [58] and meaningful
thresholds for ordinal data, as we have in this study, have been
established. Without ordinal data thresholds available for CFA, the
improvement in fit indices suggests a better fitting model than
with all items (CFI = .887, TLI = .881 and RMSEA = .093). Further
items could potentially have been removed to increase item loading
scores, but it was considered important to retain as many of the
items as possible from the original scale.

Table 2 shows the final EFA results, while Table 3 shows all
standardised loadings for retained items. The factor loadings for
each intermediate step are available in the supplementary materials
(see Data Availability, below). In the end, we had to drop six of the
Openness items as well as Agreeableness items A2 and A10. With
the validation of the data complete and troublesome items removed
from further analysis, inferential analysis can proceed.

4.4 Role and Personality
4.4.1 Role Comparison. To explore the relationship between per-
sonality traits and game development roles, CFA factor scores
were compared between roles using one-way ANOVA. One-way
ANOVAs were calculated between all roles to compare the sig-
nificance of role on personality in game developers. Normality
was tested with Shapiro-Wilk normality test, with Neuroticism,
Agreeableness, Conscientiousness and Extraversion reporting non-
significant values. Openness was found to be non-normal with
𝑝 = .042, however one-way ANOVA are found to be robust for non
normal data [9]. Due to the relative minor violation of normality
for Openness, no further investigation is conducted.

Levene’s test for homogeneity was run on each trait, with all
returning non-significant values, except for Agreeableness, 𝑝 =
.046. Due to the violation, Agreeableness is assessed using Welch’s
ANOVA (assuming unequal variance).

Personality Traits in Game Development

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Table 2: Final exploratory factor analysis*

Table 3: Final confirmatory factor analysis results

Item Factor 1

Factor 2

Factor 3

Factor 4

Factor 5

Item

O

C

E

A

N

0.40
0.58
0.55
0.48
0.40
0.41
0.48
0.49

0.50
0.55
0.50
0.50
0.51
0.34
0.64
0.49
0.51
0.46

A01
A03
A04
A05
A06
A07
A08
A09
C01
C02
C03
C04
C05
C06
C07
C08
C09
C10
E01
E02
E03
E04
E05
E06
E07
E08
E09
E10
N01
N02
N03
N04
N05
N06
N07
N08
N09
N10
O03
O04
O09
O10

0.77
0.78
0.45
0.69
0.66
0.70
0.67
0.67
0.50
0.57

0.56
0.45
0.65
0.53
0.39
0.57
0.61
0.78
0.80
0.30

0.75
0.40
0.60
0.79

0.76
0.74
0.71
0.88

0.48
0.50
0.64
0.70
0.65
0.28
0.73
0.48
0.66
0.63

0.76
0.82
0.63
0.67
0.68
0.72
0.77
0.76
0.61
0.70

O03
O04
O09
O10
C01
C02
C03
C04
C05
C06
C07
C08
C09
C10
E01
E02
E03
E04
E05
E06
E07
E08
E09
E10
A01
A03
A04
A05
A06
A07
A08
A09
N01
N02
N03
N04
N05
N06
N07
N08
N09
N10

0.72
0.60
0.43
0.54
0.58
0.48
0.64
0.52

0.65
0.50
0.75
0.46
0.65
0.68
0.87
0.91
0.88
0.42

Notes: (1) O=Openness, C=Conscientiousness, E=Extraversion,
A=Agreeableness, N=Neuroticism; (2) scores <.3 suppressed.

Notes: (1) O=Openness, C=Conscientiousness, E=Extraversion,
A=Agreeableness, N=Neuroticism; (2) scores <.3 suppressed.

A significant effect of Openness was seen between roles F(3, 119)
= 8.48, p < .001, 𝜂2 = .18. A post-hoc Tukey test was conducted to
identify which roles were significantly different for Openness and
this was found between Programming and Design (adjusted p =
.002), Programming and Art (adjusted p < .001), and Programming
and Production (adjusted p = .020).

A significant effect for Extraversion was seen F(3, 119) = 4.123, p
< .008, 𝜂2 = .09. Post-hoc Tukey tests indicated differences between
Programming and Design (adjusted p = .024), and Programming
and Production roles (adjusted p = .031).

Comparing Neuroticism between roles with ANOVA identified a
significant difference, F(3, 119) = 2.93, p < .037. Post-hoc Tukey tests

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Sturdee et al.

Table 4: Difference between roles*

Trait

𝑝

𝜂2 Roles

E
N
A
C
O

.008
.037
.063
.110
<.001

.09
.07
-
-
.18

Prog.-Design, Prog.-Production
Prog.-Production
no significant differences
no significant differences
Prog.-Design, Prog.-Art, Prog.-Production

*as determined by ANOVA; reported are the p-values, the effect
size, the roles which differ according to post-hoc Tukey tests

Figure 2: Differences in personality traits between game de-
velopers (this study) and software developers [24, 34]; means
and standard deviations scaled to [0;1]

our sample, with 49% of their sample defining themselves as pro-
grammers, compared to 43% of ours, with the next largest role in
both being design.

The best way to compare the three studies would be to combine
the three original datasets, create a unified factor model (testing for
measurement invariance), calculate the factor scores in a consistent
manner, and then test for differences using ANOVA. We therefore
contacted the authors of the previous studies; however, having been
published some years ago, the data was no longer available.

We therefore proceed by scaling all three data to common range
[0,1] to enable comparisons, using ANOVA and post-hoc Tukey
tests. (Our analysis scripts are available in supplementary materials—
see Data Availability below).)

Our sample was significantly different from both Feldt et al.’s
sample of professionals and Kosti et al.’s sample of software engi-
neering students on all five traits:

• Openness: F(2, 446) = 80.03, p < .001, 𝜂2 = .26. Post-hoc Tukey
tests identified the Game developer sample was significantly
lower than both the Kosti sample (adjusted p < .001) and the
Feldt sample (adjusted p < .001).

• Conscientiousness: F(2, 446) = 65.74, p < .001, 𝜂2 = .23. Post-
hoc Tukey tests identified the Game developer sample was
significantly lower than both the Kosti sample (adjusted p <
.001) and the Feldt sample (adjusted p < .001).

• Extraversion: F(2, 446) = 3.20, p < .042, 𝜂2 = .01. Post-hoc
Tukey tests identified the Game developer sample was sig-
nificantly lower than the Feldt sample (adjusted p = .032).
• Agreeableness: F(2, 446) = 82.23, p < .001, 𝜂2 = .27. Tukey tests
indicated that the Game developer sample was significantly

Figure 1: Differences in personality traits between roles
(traits with significant differences only)

identified differences between the Programming and Production
roles (adjusted p = .019).

Conscientiousness between roles was not significant, F(3, 119) =

2.06, p < .110.

Agreeableness was analysed using Welch’s ANOVA, as this is less
sensitive to violation of the homoscedasticity assumption. Agree-
ableness was not significant, 𝐹 (3, 45.2) = 2.61, 𝑝 < .063.

Table 4 summarises these ANOVA results. Based on the substan-
tial inter-role differences in Extraversion, Neuroticism and Open-
ness, Hypothesis H1 is supported.

4.4.2 Comparison of Game Developers Against Published Norms.
To explore how game developers’ personality profiles differ from
typical software developer populations, we compare our results to
previously-reported personality profiles [24, 34], comprising 279
software engineering students [34] and 47 software engineering
professionals [24], respectively. The demographics of Feldt et al.’s
[24] study—using software development professionals—align with

12345OpennessExtraversionNeuroticismTraitFactor ScoresRoleArtDesignProductionProgramming0.000.250.500.75ACENOTraitMeanSampleFeldtKostiOwnPersonality Traits in Game Development

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

lower than both Kosti (adjusted p < .001) and Feldt (adjusted
p < .001).

• Neuroticism: F(2, 446) = 157.60, p < .001, 𝜂2 = .41. Tukey tests
indicated that the Game developer sample was significantly
higher than both Kosti (adjusted p < .001) and Feldt (adjusted
p < .001). The Kosti sample was also significantly higher than
the Feldt sample (adjusted p = .018).

Therefore, Hypothesis H2 is supported.

4.5 Results Summary
Through analysis of the relationship between roles within game
development and personality traits, significant differences were
seen with programmers reporting lower Extraversion than Design-
ers, Artists and Production team; lower Openness than Designers
and Production, and higher Neuroticism than members of Produc-
tion. A comparison of the summary statistics of published soft-
ware developer norms [24, 34] indicated that game developers have
lower Agreeableness, Conscientiousness and Openness than both
software developer samples; lower Extraversion than professional
software developers; and higher Neuroticism than both samples.

5 DISCUSSION
The results of this exploratory study indicate a distinct personality
profile across game developers as a population, with programmers
being a distinct subset within game developers. Game developers
present lower levels of Openness, Conscientiousness, Extraversion,
and Agreeableness, but higher levels of Neuroticism, than other
software developers and software engineering students. Meanwhile,
game programmers appear more Neurotic, but less Open and Agree-
able than other roles within game development.

A particularly surprising finding was the seemingly high level
of Neuroticism in our sample, which may be related to industry
and factors such as ‘crunch time’ and burnout [18, 54]. This could
be explained by Edholm et al.’s [22] finding that crunch time was
predominately a negative experience (e.g. in three out of the four
companies studies) and was always associated with higher stress
levels. These differences may reflect the competitive nature of the
games industry, which may mean those who succeed tend to match
the profile and traits we find.

While it is tempting to assume that game programming attracts
more neurotic people, we cannot discount the possibility that game
programming creates stressful environments that cultivates neuroti-
cism. Indeed, programmers’ higher Neuroticism may be an indi-
cation of high levels of job-related stress, exposing employees’
neurotic traits more easily than other roles. More generally, this
kind of study cannot distinguish between selection (e.g. introverts
are attracted to programming roles), survivorship (e.g. introverts
are more likely to stay in programming roles) and causation (e.g.
programming increases introversion).

In our sample, game programmers reported lower Extraversion
than designers, artists and production team, and lower Openness
than designers and production (which might indicate less creativity
and originality). Those displaying more introverted behaviours
might be better suited to lone working, and working from a provided
design specification, rather than generating creative output and
getting involved in designing the games. Where individuals work

for themselves or in small teams however, all roles are undertaken
by the same individuals, which provides an interesting basis for
further exploration. This may be linked to the issue of crunch time
in game development, which is likely to affect programmers more
than others due to the requirements of the work.

The games industry is inherently creative, as it is concerned
with novel entertainment experiences over practical interactions
to achieve particular purposes, therefore it may attract develop-
ers with a particular interest in creative behaviours and outcomes.
Amin et al.’s [6] examination of creativity in programming how-
ever suggested that within programmers, creativity was negatively
correlated with Neuroticism, meaning this particular group in our
cohort at least could be seen as an anomaly in comparison to their
participants—or, if we were to speculate, higher Neuroticism may
not be correlated with negative impacts on creativity specifically in
game development overall.

5.1 Implications
This study has important implications for game development teams,
game development managers and recruiters / career counsellors

Implications for Game Development Teams. Personality differ-
5.1.1
ences can lead to disagreements. Significant personality differences
between programmers and other roles within a project may cause
clashes between roles. Understanding these personality differences
may help game developers better navigate these conflicts and get
along.

The lower Extraversion seen in programmers may make commu-
nication between themselves and other roles (i.e., designers, artists
and production members) less frequent. This can lead to communi-
cation breakdown, one example may be where design ideas, artwork
or project scheduling that are beyond the capacity of programmers
(perhaps due to time or resource constraints), and these issues are
not communicated back to the originating teams resulting in plans
incongruous with the product. Additionally, programmers’ lower
levels of Openness, contributing to being more close-minded and
less welcoming to new experiences, may also cause clashes between
the expectations and designs put forward by design teams when
programmers are less willing to embrace novel ideas within the
game-play or project setup.

Being aware of these potential clashes should help members
of multidisciplinary teams empathise better, and customize their
development processes to overcome or mitigate some of these prob-
lems.

Implications for Managers. Management could introduce
5.1.2
stress management techniques, and foster an awareness of crunch
time in the industry (as well as introducing measures to mitigate
it). If you are a programmer or employed in another role in this
area you should also be made aware that crunch time could am-
plify existing traits such as Neuroticism. Additionally, programmers
within the game development sphere should be conscious that when
communicating with other teams, differences in Extraversion may
lead to difficulties or misunderstandings during communication.
Aiming to be more receptive to new ideas, acknowledging that soft-
ware in the games industry (such as engine development) develops

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Sturdee et al.

swiftly, and being aware of potential differences could mitigate
issues—especially during crunch time.

Using these findings with a focus on workplace wellbeing, it
can be seen as a way to help with conflict resolution. Personality
scores could be used as a way to understand and aid in conflict
resolution within the game development industry. For example,
a designer with high levels of openness may suggest novel ideas
for inclusion in the gameplay, but programmers scoring lower on
openness may deem it too risky. This could result in disagreements
between teams. Our research findings could help to provide context
as to why these tensions arise. University courses could include
information about personality differences seen across roles within
game development to highlight these potential areas for conflict. In
doing so, we are promoting understanding for the next generation
of game developers.

Some literature [e.g. 21] suggests that less Neurotic employees
have lower stress at work, and higher stress in the workplace has
been linked to poor health outcomes [25]. Identifying those with
predicting factors for burnout (e.g. high Neuroticism) could help
employers pick individuals with, for example, higher Extraversion
which has a negative correlation with burnout, but as Swider et al.
note—an individual reporting high Extraversion may still burnout
if put into a situation where (for example) lone working is expected
on a regular basis [54]. Individual and workplace differences should
therefore be examined together in any attempt to predict negative
outcomes in the industry.

General associations between tasks and personality traits do
not imply that a person with different traits cannot excel in a task.
However, some skills may be more difficult to acquire (e.g. intro-
verts usually have to work harder at communication skills than
extraverts). Understanding and acknowledging these potential dif-
ferences can help managers develop better (case-by-case) strategies
for overcoming personality-based conflicts. There is no universal
approach because it depends on the problem and the specific peo-
ple involved, but encouraging collaboration and emphasizing team
cohesion probably help more often than not.

Implications for Recruiters and Career Counsellors. For re-
5.1.3
cruiters, knowing which personality traits are associated with
which roles can help sort new employees into roles most appro-
priate for their personality to enhance group cohesion (similar to
the methods described by Dounsga-Ard et al. [20]). Similarly, Per-
sonality profiling is used in suggesting job roles, career paths and
educational programs, especially for students who may have no
specific career trajectory in mind yet.

However, this comes with issues over reductionism and privacy.
Assuming that personality is the only factor for role suitability
is inappropriate and overly simplistic as it discounts experience,
knowledge, and multitudinous other factors. Furthermore, person-
ality testing raises privacy issues: how much information should an
employer hold about an employee and how should that information
be used, especially if it can be construed as discrimination [51]?

Our finding could be used to assess role suitability, as part of a
larger, more robust model, but should not be relied upon as a strong
predictor of role success.

Finally, although personality is seen as an important part of
selection processes, using personality assessment as a direct link to

job performance is still controversial [45], so companies who invest
in these metrics may not get concrete results, although it could be
helpful as part of a wider range of assessments.

5.2 Limitations
Our results should be interpreted with caution, in light of several
limitations.

Probability sampling is impractical for many reasons [7], not
least of which is that no appropriate sampling frame of game devel-
opment professionals exists, and we partially mitigated the prob-
lems with snowball sampling by using multiple recruitment meth-
ods (online and in-person). While we found no evidence of response
bias, there is no population-level data with which to assess sam-
pling bias. Our sample may not be representative of all the game
developers in the UK, and is certainly not representative of all game
developers worldwide.

Comparing personality measures across studies (i.e., comparing
game development professionals against non-game software de-
velopment professionals) entails comparing basically convenience
samples from different studies at different times, which is not as
reliable as comparing subsets of a single sample, or data collected
from a single study. We offer this comparison as part of the ex-
ploratory nature of the research, as well as providing a foundation
for future work to build upon.

Without access to the raw data from previous research, we can-
not perform data diagnostics to assess the assumptions of our statis-
tical tests. Furthermore, the scores derived for each sample were not
necessarily from using the same IPIP items, and previous studies did
not compute factor scores from items in the same way that we did.
Both of these issues may reduce the robustness of our comparisons
in ways we cannot measure.

When dealing with multiple comparisons, such as in ANOVAs
involving multiple groups, there is an increased chance for type I
errors (falsely rejecting the null hypothesis and falsely detecting a
statistically significant difference between groups). Therefore, these
results should be interpreted conservatively [35].

We did not assess personality differences across age or gender
because including too many analyses (e.g. age and gender splits)
would increase the risk of type I errors [50]. This may affect our re-
sults because personality varies with demographics, but not enough
and not in the right directions to explain our results. For example,
designers are more likely to be women than developers, and women
tend to be more Neurotic [42] and more Agreeable [57] than men.
However, we found that designers are more Extroverted and Open
than developers. Similarly, art is dominated by women, yet no
personality differences were seen in our study. Nevertheless, demo-
graphic measures that were not measured or analysed could have
contributed to the results.

5.3 Future Work
This exploratory work serves as the foundation for further pre-
registered, confirmatory research, with sufficient statistical power
to examine more interaction effects. A larger study, including par-
ticipants from different areas (e.g. game development, app develop-
ment, enterprise software) and roles (programming, art, production,
product design, management), is needed to establish more firmly

Personality Traits in Game Development

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

the personality differences we identify here. Such work is hindered
by the lack of quality sampling frames [7].

Beyond the need for a confirmatory replication, our results and
the limitations of our study raise several important questions for
future research:

(1) Why are certain roles associated with certain traits? Is it a
selection process (e.g. more introverted people are drawn
to programming), an effect of the work (e.g. programming
makes people more neurotic), or some combination thereof?
(2) Do personality traits associated with different roles actually

predict performance or satisfaction in those roles?

(3) To what extent do demographic and cultural differences
intersect with the personality profiles of game developers?

Longitudinal research—i.e. following a cohort of game developers
over several years, repeatedly testing their personality traits—is
needed to address the first question. If working in the industry
changes your personality, that has totally different implications
from people being drawn to particular industries or roles because
of their personality traits.

Investigating the relationship between personality traits and job
performance is easier said than done. While we have widely used,
widely-validated, standards measures of personality, we do not have
good measures of job performance. We don’t know how to measure
the overall success of software projects [47], or the productivity of
individuals or teams [49]. There is no widely-accepted definition of
job performance in game development or software engineering, or
any role therein. Significant conceptual and instrumentation work
is therefore needed to support any such project.

Meanwhile, more research is needed to understand the inter-
section of culture and personality within games development. The
next steps in this research would primarily be to collect a com-
parative sample for software engineers using the same methods
and demographic population, and/or to collect a new set of data
from game developers concurrently, to allow us to compare results
directly between groups.

In a somewhat different direction, various software practices
(e.g. pair programming, mob programming, peer code review) and
structures (e.g. remote work, multidisciplinary teams, team code
ownership) probably work better for people with certain person-
ality traits. We might hypothesize, for instance, that more extro-
verted developers enjoy pair programming more. More research is
needed to understand the intersection between personality traits
and software development practices. Such understanding could
help managers and teams tailor their software development meth-
ods, understand breakdowns in otherwise effective practices, and
overcome resistance to adopting effective practices.

6 CONCLUSION
We conducted a questionnaire survey of 123 game development
professionals based on the Five Factor Model [39], using the 50-
item IPIP scale [26]. After assessing construct validity, we examined
differences between roles within game development, and differences
between our sample and previous samples of software professionals
and software engineering students. This analysis led to several
novel contributions:

(1) Game development professionals tend to have lower Agree-
ableness, Conscientiousness, Openness, and Extraversion,
but higher Neuroticism than other software development
professionals.

(2) Game programmers tend to have lower Extraversion, and
Openness, but higher Neuroticism, than their colleagues in
art, design and production.

These results raise some very serious questions. Game develop-
ment is thought to be among the most culturally toxic sub-fields
of software engineering. Game development companies appear
to have made little progress on key problems (e.g. crunch time
and burnout) identified over 15 years ago [56]. Are more disagree-
able, closed-minded, emotionally unstable people drawn to game
development? Do more disagreeable, closed-minded, emotionally
unstable people tend to succeed or at least stick with game devel-
opment? Does working in game development make people more
disagreeable, closed-minded and emotionally unstable?

While this study cannot distinguish among these possibilities,
all three appear highly problematic. Given the highly competitive,
creative and pressured environment in which game developers
work, identifying personality traits which might indicate success
and resilience in such roles could have implications for industry
employers. However, if being more disagreeable, closed-minded and
neurotic makes employees more resilient, something is very wrong.
More research is plainly needed to determine what is going on in
game development, and how long-term problems can be addressed.

DATA AVAILABILITY
The supplementary materials, including data and analysis script
are available at osf.io/6gq2k/. A Docker image for replication is also
available, hub.docker.com/r/ivorym/personalitygamedev-ease22.

REFERENCES
[1] Silvia T. Acuña, Marta Gómez, and Natalia Juristo. 2009. How Do Personality,
Team Processes and Task Characteristics Relate to Job Satisfaction and Software
Quality? Information and Software Technology 51, 3 (March 2009), 627–639.
https://doi.org/10.1016/j.infsof.2008.08.006

[2] S. T. Acuna, N. Juristo, and A. M. Moreno. 2006. Emphasizing Human Capabilities
IEEE Software 23, 2 (March 2006), 94–101. https:

in Software Development.
//doi.org/10.1109/MS.2006.47

[3] F. Ahmed, L. F. Capretz, and P. Campbell. 2012. Evaluating the Demand for
IT Professional 14, 1 (Jan. 2012), 44–49.

Soft Skills in Software Development.
https://doi.org/10.1109/MITP.2012.7

[4] Zulal Akarsu and Murat Yilmaz. 2020. Managing the Social Aspects of Software
Development Ecosystems: An Industrial Case Study on Personality. Journal of
Software: Evolution and Process 32, 11 (2020), e2277. https://doi.org/10.1002/smr.
2277 e2277 JSME-20-0082.R1.

[5] Aamir Amin, Shuib Basri, Mobashar Rahman, Luiz Fernando Capretz, Rehan
Akbar, Abdul Rehman Gilal, and Muhammad Farooq Shabbir. 2020. The Impact of
Personality Traits and Knowledge Collection Behavior on Programmer Creativity.
Information and Software Technology 128 (Dec. 2020), 106405. https://doi.org/10.
1016/j.infsof.2020.106405

[6] A. Amin, M. Rehman, R. Akbar, S. Basri, and M. F. Hassan. 2018. Trait-Based
Personality Profile of Software Programmers: A Study on Pakistan’s Software
Industry. In 2018 8th International Conference on Intelligent Systems, Modelling
and Simulation (ISMS). 90–94. https://doi.org/10.1109/ISMS.2018.00026

[7] Sebastian Baltes and Paul Ralph. 2020. Sampling in software engineering research:

A critical review and guidelines. arXiv preprint arXiv:2002.07764 (2020).

[8] Anderson S. Barroso, Jamille S. Madureira, Michel S. Soares, and Rogerio P. C.
do Nascimento. 2017. Influence of Human Personality in Software Engineering -
A Systematic Literature Review:. In Proceedings of the 19th International Confer-
ence on Enterprise Information Systems. SCITEPRESS - Science and Technology
Publications, Porto, Portugal, 53–62. https://doi.org/10.5220/0006292000530062

EASE 2022, June 13–15, 2022, Gothenburg, Sweden

Sturdee et al.

[9] M José Blanca Mena, Rafael Alarcón Postigo, Jaume Arnau Gras, Roser
Bono Cabré, and Rebecca Bendayan. 2017. Non-normal data: Is ANOVA still a
valid option? Psicothema, 2017, vol. 29, num. 4, p. 552-557 (2017).

[10] Gregory J. Boyle and Gregory J. Boyle. 2009. Myers-Briggs Type Indicator (MBTI):

Some Psychometric Limitations. Australian Psychologist.

[11] Tom Buchanan, John A. Johnson, and Lewis R. Goldberg. 2005. Implementing a
Five-Factor Personality Inventory for Use on the Internet. European Journal of
Psychological Assessment 21, 2 (Jan. 2005), 115–127. https://doi.org/10.1027/1015-
5759.21.2.115

[12] F. Calefato, G. Iaffaldano, F. Lanubile, and B. Vasilescu. 2018. On Developers’ Per-
sonality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem.
In 2018 IEEE/ACM 13th International Conference on Global Software Engineering
(ICGSE). 87–96.

[13] L.F. Capretz and F. Ahmed. 2010. Making Sense of Software Development and
Personality Types. IT Professional 12, 1 (Jan. 2010), 6–13. https://doi.org/10.1109/
MITP.2010.33

[14] Luiz Fernando Capretz and Faheem Ahmed. 2010. Why Do We Need Personality
Diversity in Software Engineering? ACM SIGSOFT Software Engineering Notes
35, 2 (March 2010), 1–11. https://doi.org/10.1145/1734103.1734111

[15] Luiz Fernando Capretz and Faheem Ahmed. 2018. A Call to Promote Soft Skills
in Software Engineering. Psychology and Cognitive Sciences - Open Journal 4, 1
(Aug. 2018), e1–e3. https://doi.org/10.17140/PCSOJ-4-e011 arXiv:1901.01819

[16] Luiz Fernando Capretz, Daniel Varona, and Arif Raza. 2015. Influence of Person-
ality Types in Software Tasks Choices. Computers in Human Behavior 52 (Nov.
2015), 373–378. https://doi.org/10.1016/j.chb.2015.05.050

[17] Paul T Costa Jr, Robert R McCrae, and Corinna E Löckenhoff. 2019. Personality

across the life span. Annual review of psychology 70 (2019), 423–448.

[18] Amanda C Cote and Brandon C Harris. 2021. The cruel optimism of “good
crunch”: How game industry discourses perpetuate unsustainable labor practices.
New Media & Society (2021), 14614448211014213.

[19] Shirley Cruz, Fabio Q. B. da Silva, and Luiz Fernando Capretz. 2015. Forty Years of
Research on Personality in Software Engineering: A Mapping Study. Computers in
Human Behavior 46 (May 2015), 94–113. https://doi.org/10.1016/j.chb.2014.12.008
[20] C. Doungsa-ard and V. Chaiwon. 2020. The Software Engineering Position
Mapping From Personality Traits. In 2020 Joint International Conference on Digital
Arts, Media and Technology with ECTI Northern Section Conference on Electrical,
Electronics, Computer and Telecommunications Engineering (ECTI DAMT NCON).
194–199. https://doi.org/10.1109/ECTIDAMTNCON48261.2020.9090730
[21] Jeanette Frost Ebstrup, Lene Falgaard Eplov, Charlotta Pisinger, and Torben
Jørgensen. 2011. Association between the Five Factor personality traits and
perceived stress: is the effect mediated by general self-efficacy? Anxiety, Stress &
Coping 24, 4 (2011), 407–419.

[22] Henrik Edholm, Mikaela Lidström, Jan-Philipp Steghöfer, and Håkan Burden.
2017. Crunch time: The reasons and effects of unpaid overtime in the games
industry. In 2017 IEEE/ACM 39th International Conference on Software Engineering:
Software Engineering in Practice Track (ICSE-SEIP). IEEE, 43–52.

[23] Satoko Ezoe, Shunichi Araki, Yutaka Ono, Norito Kawakami, and Katsuyuki
Murata. 1994. Assessment of Personality Traits and Psychiatric Symptoms in
Workers in a Computer Manufacturing Plant in Japan. American Journal of
Industrial Medicine 25, 2 (1994), 187–196. https://doi.org/10.1002/ajim.4700250205
[24] Robert Feldt, Lefteris Angelis, Richard Torkar, and Maria Samuelsson. 2010. Links
between the Personalities, Views and Attitudes of Software Engineers. Informa-
tion and Software Technology 52, 6 (June 2010), 611–624. https://doi.org/10.1016/
j.infsof.2010.01.001

[25] Dana Rose Garfin, Rebecca R Thompson, and E Alison Holman. 2018. Acute stress
and subsequent health outcomes: A systematic review. Journal of psychosomatic
research 112 (2018), 107–113.

[26] Lewis R. Goldberg, John A. Johnson, Herbert W. Eber, Robert Hogan, Michael C.
Ashton, C. Robert Cloninger, and Harrison G. Gough. 2006. The International
Personality Item Pool and the Future of Public-Domain Personality Measures.
Journal of Research in Personality 40, 1 (Feb. 2006), 84–96. https://doi.org/10.
1016/j.jrp.2005.08.007

[27] JA Gómez-Fraguela, P Villar-Torres, B González-Iglesias, and MA Luengo. 2014.
Development and initial validation of IPIP-NEO (120) for measurement of the
big five. Personality and Individual Differences 60 (2014), S54–S55.

[28] L. T. Hardiman. 1997. Personality Types And Software Engineers. Computer 30,

10 (Oct. 1997), 10–10. https://doi.org/10.1109/MC.1997.625290

[29] James J Heckman and Tim Kautz. 2012. Hard evidence on soft skills. Labour

economics 19, 4 (2012), 451–464.

[30] Li-tze Hu and Peter M Bentler. 1999. Cutoff criteria for fit indexes in covariance
structure analysis: Conventional criteria versus new alternatives. Structural
equation modeling: a multidisciplinary journal 6, 1 (1999), 1–55.

[31] Carl Gustav Jung. 1916. Contribution to the study of psychological types. (1916).
[32] Petri J Kajonius and John A Johnson. 2019. Assessing the structure of the Five
Factor Model of Personality (IPIP-NEO-120) in the public domain. Europe’s

Journal of Psychology 15, 2 (2019), 260.

[33] Tanjila Kanij, Robert Merkel, and John Grundy. 2015. An empirical investigation
of personality traits of software testers. In 2015 IEEE/ACM 8th International
Workshop on Cooperative and Human Aspects of Software Engineering. IEEE, 1–7.
[34] Makrina Viola Kosti, Robert Feldt, and Lefteris Angelis. 2014. Personality, Emo-
tional Intelligence and Work Preferences in Software Engineering: An Empir-
Information and Software Technology 56, 8 (Aug. 2014), 973–990.
ical Study.
https://doi.org/10.1016/j.infsof.2014.03.004

[35] Sangseok Lee and Dong Kyu Lee. 2018. What is the proper way to apply the
multiple comparison test? Korean journal of anesthesiology 71, 5 (2018), 353.
[36] Gerald Matthews, Ian J. Deary, and Martha C. Whiteman. 2003. Personality Traits.

Cambridge University Press.

[37] R. R. McCrae and P. T. Costa. 1989. Reinterpreting the Myers-Briggs Type
Indicator from the Perspective of the Five-Factor Model of Personality. Journal of
Personality 57, 1 (March 1989), 17–40. https://doi.org/10.1111/j.1467-6494.1989.
tb00759.x

[38] Robert R. McCrae and Paul T. Costa. 1994. The Stability of Personality: Observa-
tions and Evaluations. Current Directions in Psychological Science 3, 6 (Dec. 1994),
173–175. https://doi.org/10.1111/1467-8721.ep10770693

[39] Robert R McCrae and Paul T Costa Jr. 2008. Empirical and theoretical status of

the five-factor model of personality traits. (2008).

[40] Robert R McCrae and Oliver P John. 1992. An introduction to the five-factor

model and its applications. Journal of personality 60, 2 (1992), 175–215.

[41] René Mõttus, Wendy Johnson, and Ian J Deary. 2012. Personality traits in old age:
Measurement and rank-order stability and some mean-level change. Psychology
and aging 27, 1 (2012), 243.

[42] Sara A Murphy, Peter A Fisher, and Chet Robie. 2021. International comparison
of gender differences in the five-factor model of personality: An investigation
across 105 countries. Journal of Research in Personality 90 (2021), 104047.
[43] Isabel Briggs Myers. 1962. The Myers-Briggs Type Indicator: Manual (1962). Con-
sulting Psychologists Press, Palo Alto, CA, US. ii, 110 pages. https://doi.org/10.
1037/14404-000

[44] Lennart E Nacke, Chris Bateman, and Regan L Mandryk. 2014. BrainHex: A
neurobiological gamer typology survey. Entertainment computing 5, 1 (2014),
55–62.

[45] Ioannis Nikolaou and Konstantina Foti. 2018. Personnel selection and personality.

The SAGE handbook of personality and individual differences 3 (2018), 458–474.

[46] Catherine Potard, Audrey Henry, Abdel-Halim Boudoukha, Robert Courtois,
Alexandre Laurent, and Baptiste Lignier. 2020. Video game players’ personal-
ity traits: An exploratory cluster approach to identifying gaming preferences.
Psychology of Popular Media 9, 4 (2020), 499.

[47] Paul Ralph and Paul Kelly. 2014. The dimensions of software engineering suc-
cess. In Proceedings of the 36th ACM/IEEE International Conference on Software
Engineering (Hyderabad, India). 24–35.

[48] Brent W Roberts and Wendy F DelVecchio. 2000. The rank-order consistency of
personality traits from childhood to old age: a quantitative review of longitudinal
studies. Psychological bulletin 126, 1 (2000), 3.

[49] Caitlin Sadowski and Thomas Zimmermann. 2019. Rethinking productivity in

software engineering. Springer Nature.

[50] Joseph P Simmons, Leif D Nelson, and Uri Simonsohn. 2011. False-positive psy-
chology: Undisclosed flexibility in data collection and analysis allows presenting
anything as significant. Psychological science 22, 11 (2011), 1359–1366.

[51] Robert A Smith, Kauther S Badr, and Alison E Wall. 2018. Personality testing by
employers: Balancing the need for qualified workers with individual rights. In
Competition Forum, Vol. 16. American Society for Competitiveness, 76–82.
[52] Aaron Smuts. 2005. Are Video Games Art? Contemporary Aesthetics (Journal

Archive) 3, 1 (Jan. 2005).

[53] Joseph Stromberg and Estelle Caswell. 2015. Why the Myers-Briggs test is totally

meaningless. Vox (2015).

[54] Brian W Swider and Ryan D Zimmerman. 2010. Born to burnout: A meta-analytic
path model of personality, job burnout, and work outcomes. Journal of Vocational
behavior 76, 3 (2010), 487–506.

[55] Conal Twomey and John A Johnson. 2021. Open-source personality trait norms
for the United Kingdom and Ireland. European Journal of Psychological Assessment
(2021).

[56] John Vanderhoef and Michael Curtin. 2015. The crunch heard’round the world:
the global era of digital game labor. In Production Studies, The Sequel! Routledge,
216–230.

[57] Yanna J Weisberg, Colin G DeYoung, and Jacob B Hirsh. 2011. Gender differences
in personality across the ten aspects of the Big Five. Frontiers in psychology 2
(2011), 178.

[58] Yan Xia and Yanyun Yang. 2019. RMSEA, CFI, and TLI in structural equation
modeling with ordered categorical data: The story they tell depends on the
estimation methods. Behavior research methods 51, 1 (2019), 409–428.

