2
2
0
2

g
u
A
3
2

]

C
O
.
h
t
a
m

[

1
v
2
5
7
0
1
.
8
0
2
2
:
v
i
X
r
a

1

Reach-Avoid Analysis for Stochastic Differential
Equations

Bai Xue1 and Naijun Zhan1,2 and Martin Fr¨anzle3
1. State Key Lab. of Computer Science, Institute of Software, CAS, Beijing, China
{xuebai,znj}@ios.ac.cn
2, University of Chinese Academy of Sciences, CAS, Beijing, China
3. Carl von Ossietzky Universit¨at, Oldenburg, Germany
martin.fraenzle@informatik.uni-oldenburg.de

Abstract—In this paper we propose a novel semi-deﬁnite pro-
gramming approach that solves reach-avoid problems over open
(i.e., not bounded a priori) time horizons for dynamical systems
modeled by polynomial stochastic differential equations. The
reach-avoid problem in this paper is a probabilistic guarantee:
we approximate from the inner a p-reach-avoid set, i.e., the set
of initial states guaranteeing with probability larger than p that
the system eventually enters a given target set while remaining
inside a speciﬁed safe set till the target hit. Our approach begins
with the construction of a bounded value function, whose strict
p super-level set is equal to the p-reach-avoid set. This value
function is then reduced to a twice continuously differentiable
solution to a system of equations. The system of equations facil-
itates the construction of a semi-deﬁnite program using sum-of-
squares decomposition for multivariate polynomials and thus the
transformation of nonconvex reach-avoid problems into a convex
optimization problem. The semi-deﬁnite program can be solved
efﬁciently in polynomial time via interior point methods. There
are many existing powerful algorithms and off-the-shelf software
packages to solve it. It is worth noting here that our approach
can straightforwardly be specialized to address classical safety
veriﬁcation by, a.o., stochastic barrier certiﬁcate methods and
reach-avoid analysis for ordinary differential equations. Several
examples demonstrate theoretical and algorithmic developments
of the proposed method.

Index Terms—Stochastic Differential Equations, Reach-avoid

Analysis, Inner Approximation, Semi-deﬁnite Programming.

I. INTRODUCTION

Reach-avoid analysis combines the construction of safety
and speciﬁc progress guarantees for dynamical systems, as it
addresses guarantees for both the eventual reach of desirable
states and avoidance of unsafe states. It is employed in diverse
engineering applications including collision avoidance [22]
and motion planning [19]. Algorithmic methods for computing
reach-avoid guarantees have consequently been widely stud-
ied, e.g. in [16], [23], [39]. In the qualitative setting, reach-
avoid analysis generally attempts to determine a set of initial
states driving the system to a desirable target set with certainty
over either ﬁnite time horizons (i.e., given a ﬁxed upper bound
on the ﬁrst hitting time) or open time horizons (i.e., unknown
upper bound on the ﬁrst hitting time) while reliably avoiding
a set of unsafe states before hitting the target set.

In existing literature, difference equations (DEs) and or-
dinary differential equations (ODEs) are frequently used to

model deterministic systems, and a large body of work has
been pursued addressing reach-avoid analysis for such sys-
tems, like [8], [12], [23], [40], [42]. But DEs or ODEs consti-
tute conﬁned models of real-world systems, as stochastic pro-
cesses are central to many phenomena in physics, engineering,
biology and other disciplines [3], [9], [28]. When considering
stochastic systems, i.e., dynamical systems involving stochas-
tic processes, solving the reach-avoid problem qualitatively
in a non-stochastic manner usually gives pessimistic answers,
since in general resultant bounds on the values of stochas-
tic inputs will be overly conservative. It indeed is natural
to formulate and solve probabilistic variants of reach-avoid
problems. The notion of p-reach-avoid reachability used herein
reﬂects this probabilistic perspective. It requires identifying
the set of initial states that guarantee with probability being
larger than p that the dynamical system reaches a given target
set. It was studied in various engineering applications such
as a spacecraft rendezvous and docking problem [19] and a
Zermelo navigation problem [7]. In the literature, discrete-time
Markov chains and stochastic differential equations (SDEs)
are among the most commonly used models for stochastic
processes. The p-reach avoid problem of the former over both
ﬁnite time horizons and open time horizons has been studied
in, e.g., [2], [11], [38], [41]. The quest for generalizations to
continuous-time dynamical system models, especially SDEs,
remains largely unanswered.

In this paper we therefore investigate the p-reach-avoid
problem for systems modeled by polynomial SDEs and the
focus is on the computation of inner-approximations of the
exact p-reach-avoid set over open time horizons. The p-
reach-avoid set is the set of initial states guaranteeing with
probability being larger than p an eventual hit of a desirable
target set while staying inside a designated safe set prior to
hitting the target. The inner-approximation problem is reduced
to a semi-deﬁnite programming problem in our approach.
The construction of the semi-deﬁnite program originates from
a value function whose strict p super-level set equals the
p-reach-avoid set. The particular value function is deﬁned
based on an appropriately stopped variant of the dynamical
process under investigation, and is shown to be the unique
twice continuously differentiable solution to an effectively
constructed system of equations. Based on the obtained system

 
 
 
 
 
 
of equations, we further construct a system of inequalities
and encode them into semi-deﬁnite constraints using the sum
of-squares decomposition for multivariate polynomials. This
system of constraints ﬁnally results in a semi-deﬁnite program
whose solution under-approximates the exact p-reach-avoid
set. Several examples demonstrating the performance of the
proposed approach are elaborated.

The main contributions of this work are summarized below.
1) An innovative system of equations is proposed for
characterizing the exact p-reach-avoid set over open time
horizons for systems modelled by SDEs. The system of
equations plays a fundamental role in our methodology,
since it explains the origins of the constructed convex
program for inner-approximating the p-reach-avoid set.
Besides, the proposed system of equations can also be
used to construct a set of constraints for addressing
the classical safety veriﬁcation problem of SDEs that
can be solved with stochastic barrier certiﬁcate methods
these two methods are disparate,
in [30]. However,
as commented in Remark 4. In this article, we will
not benchmark the performance of our method on the
classical safety veriﬁcation problem, since the focus of
this work is on inner-approximating reach-avoid sets.
However, we theoretically compare the set of constraints
constructed by our method and the one in [30]. It is
concluded that the set of constraints constructed by our
method is more expressive than the one in [30].

2) A novel convex programming based approach is pro-
posed for inner-approximating the p-reach-avoid set over
open time horizons, which solves the complicated non-
convex reachability problem arising in dynamical sys-
tems and control theory by solving a single semi-deﬁnite
program. The semi-deﬁnite program is relatively simple
and can be efﬁciently solved by many existing pow-
erful algorithms and off-the-shelf software packages.
Also, this semi-deﬁnite program can be used to inner-
approximate reach-avoid sets of ODEs over open time
horizons, as commented in Remark 3 and demonstrated
in Examples 6 and 7.

3) Our semi-deﬁnite program is implemented based on
the sum-of-squares module of YALMIP [21] and the
semi-deﬁnite programming solver Mosek [25]. Several
examples are presented to demonstrate theoretical and
algorithmic developments of our method.

Related Work

In the discrete-time setting, the reach-avoid problem has
been widely studied for Markov decision processes, e.g., [1],
[2], [36], [38]. The corresponding reach-avoid problem is
normally reformulated as a dynamic programming problem by
introducing indicator functions for the sets of target and unsafe
states. A straightforward way to numerically approximate the
value function of the reach-avoid dynamic program is by
constructing a grid state space [1]. Under suitable assumptions
on the Markov decision process limiting local variation of its
kernel, gridding approaches can provide rigorous performance
guarantees on the resulting approximate solution, yet they

2

suffer from the “curse of diemensionality” of an exponential
complexity in the dimension of the state space. In order to
alleviate the complexity of gridding-based approximations, a
semi-deﬁnite programming based method was proposed in [6],
[41].

In the continuous-time setting, reach-avoid analysis for
systems modeled by SDEs has attracted increasing attention
since the ﬁrst study of reach-avoid veriﬁcation for SDEs over
open time horizons in [30]. In [30] a typical supermartingale
was employed as a stochastic barrier certiﬁcate followed
by computational conditions derived from Doob’s martingale
inequality [15]. It provides an upper bound on the probability
of reaching a set of unsafe states for a stochastic system
starting from a set of legal initial state. Recently, via removing
the requirement of reaching target sets, the stochastic barrier
certiﬁcate-based method was extended to cater for bounding
the probability of leaving a ﬁnite region of state space over a
given ﬁnite time by leveraging a relaxed formulation termed
c-martingale for locally stable systems in [35], and further
extended to the problem of controller synthesis for ensuring
that unsafe probability is below a threshold in [32]. The differ-
ences between the present work and [30] are twofold. One is
that the set of permissible initial states is synthesized from
the system dynamics and the desired reach-avoid property
rather than analysing a given state set as in [30]. The other
one is that a lower bound on the probability of reaching a
speciﬁed, considered to be desirable, set of target states is
computed in the present work. The method in the present work
can nevertheless straightforwardly be modiﬁed to also cover
extended computation of an upper bound on the probability as
in [30], as pointed out in Remark 4.

Another known method for studying the reach-avoid prob-
lem is the Hamilton-Jacobi reachability one. Hamilton-Jacobi
reachability method addresses reach-avoid problems by ex-
ploiting the link to optimal control through viscosity solutions
type equations. It extends the use of
of Hamilton-Jacobi
Hamilton-Jacobi equations, which are widely used in optimal
control theory, to perform reachability analysis over both ﬁnite
time horizons [7] and open time horizons [17]. However, grid-
based numeric approaches, e.g., the ﬁnite difference method
in [17] and the level set method in [24], are traditionally used
to solve these equations, rendering the Hamilton-Jacobi reach-
ability method computationally infeasible for even moderate
sized systems. Furthermore, such methods cannot guarantee
that the computed result is an outer- or inner-approximation
of the reach-avoid set. In [5] the reach-avoid problem was
reduced to a problem of solving semi-continuous solutions to
some variational inequalities. The lack of continuous solutions
is an obstacle to actually solving these inequalities solving. In
contrast, we propose an innovative system of partial differ-
ential equations, which is different from existing Hamilton-
Jacobi equations in literature, to characterize reach-avoid sets
for SDEs. The proposed equations facilitate the construction
of semi-deﬁnite programs, which can be efﬁciently solved
by interior-point methods in polynomial time, for computing
guaranteed inner-approximations of reach-avoid sets.

Recently, a moment-based method, which is also a convex
programming based method, was proposed for studying reach-

avoid problems over ﬁnite time horizons for SDEs in [33], and
a semi-deﬁnite programming method derived from Feynman-
Kac formula was proposed for analysing avoid problems
(without the requirement of reaching target sets) over ﬁnite
time horizons in [20] that is algebraically over- and under-
approximating the staying probability in a given safety area.
Different from the above two methods, our method in this
paper addresses the reach-avoid problem over open time
horizons rather than ﬁnite time horizons.

The structure of this paper is as follows: Section II intro-
duces stochastic systems and reach-avoid problems of interest.
After detailing the derivation of the system of equations for
characterizing the p-reach-avoid set in Subsection III-A, we
introduce our semi-deﬁnite programming method for inner-
approximating the p-reach-avoid set in Subsection III-B. In
Section IV we demonstrate the performance of our approach
on several examples and ﬁnally provide conclusions as well
as future work in Section V.

II. PRELIMINARIES

We start our exposition by formally presenting polynomial
SDEs and p-reach-avoid sets of interest. Beforehand we intro-
duce basic notions used throughout this paper: R≥0 stands
for the set of nonnegative reals and R for the set of real
numbers. For a set ∆, ∆c, ∆ and ∂∆ denote the complement,
the closure and the boundary of the set ∆, respectively.
(cid:86) and (cid:87) denote the logical operation of conjunction and
disjunction, respectively. R[·] denotes the ring of polynomials
in variables given by the argument. Vectors are denoted by
boldface letters. (cid:80)[x] is used to represent the set of sum-of-
squares polynomials over variables x, i.e.,

(cid:88)

[x] = {p ∈ R[x] | p =

k(cid:48)
(cid:88)

i=1

i , qi ∈ R[x], i = 1, . . . , k(cid:48)}.
q2

Let (Ω, F, P) be a probability space [26], where Ω is the
sample space, F ⊆ 2Ω is a σ-algebra on Ω, and P : F → [0, 1]
is a probability measure on the measurable space (Ω, F). A
random variable X deﬁned on the probability space (Ω, F, P)
is an F−measurable function X : Ω → Rn; its expectation
(w.r.t. P) is denoted by E[X]. Every random variable X
induces a probability measure µX : B → [0, 1] on Rn,
deﬁned as µX (B) = P(X −1(B)) for a Borel set B in the
Borel σ−algebra B on Ω. µX is called the distribution of
X, and its support set is suppµX = {B ∈ B | µX (B) > 0}.
The support set for a real-valued function f (·) : ∆ → R
is the closure of the subset of ∆, where f is non-zero, i.e.,
suppf = {x ∈ ∆ | f (x) (cid:54)= 0}. A continuous-time stochastic
process is a parameterized collection of random variables
{X(t, w), t ∈ T } where the parameter space T can be either
the halﬂine R≥0 or an interval [a, b]. Note that for each t ∈ T
ﬁxed we have a random variable X(t, ·) : Ω → Rn. On
the other hand, ﬁxing w ∈ Ω we can consider the function
X(·, w) : T → Rn, which is called a path of the stochastic
process. A collection {Ft | t ≥ 0} of σ−algebra of sets in
F is a ﬁltration if Ft ⊆ Ft+s for t, s ∈ R≥0 (Intuitively, Ft
carries the information known to an observer at time t.). A
random variable τ : Ω → R≥0 is called a stopping time w.r.t.

3

some ﬁltration {Ft | t ≥ 0} of F if {τ ≤ t} ∈ Ft for all
t ≥ 0. Note that a constant time is always a stopping time.

We

consider

stochastic

systems modeled by time-

homogeneous SDEs of the form

dX(t, w) = b(X(t, w))dt + σ(X(t, w))dW (t, w), t ≥ 0,
(1)
where X(·, ·) : T × Ω → Rn is an n-dimensional continuous-
time stochastic process, W (·, ·) : T × Ω → Rm is an m-
dimensional Wiener process (standard Brownian motion), the
mapping b(·) : Rn → Rn is a vector-valued polynomial
(i.e., each of its components is a polynomial), and σ(·) :
Rn → Rn×m is a matrix-valued polynomial, i.e., each of its
components is a polynomial.

Since each component of both b(x) and σ(x) is polynomial
over x, satisfying locally Lipschitz conditions, then given
an initial state x0 ∈ Rn, an SDE of the form (1) has
a unique (maximal
local) strong solution over some time
interval [0, T x0 (w)) for w ∈ Ω [Lemma 2.2, [34]], where
T x0(w) is a positive real value. We denote it as X x0(·, w) :
[0, T x0(w)) × Ω → Rn, which satisﬁes the stochastic integral
equation

X x0(t, w) = x0 +

+

(cid:90) t

0
(cid:90) t

0

b(X x0(s, w))ds

σ(X x0 (s, w))dW (s, w)

for t ∈ [0, T x0(w)).

The inﬁnitesimal generator underlying system (1) is pre-

sented in Deﬁnition 1.

[26] Let X x(t, w) be a time-homogeneous Itˆo
Deﬁnition 1.
diffusion given by SDE (1) with initial state x ∈ Rn. The
inﬁnitesimal generator A of X x(t, w) is deﬁned by

Af (x) = lim
t→0

E[f (X x(t, w))] − f (x)
t
(cid:88)

(σσ(cid:62))ij(x)

(cid:88)

=

bi(x)

i

∂f (x)
∂xi

+

1
2

i,j

(2)

∂2f (x)
∂xi∂xj

.

for any f ∈ C2(Rn), where C2(Rn) denotes the set of twice
continuously differentiable functions.

As a stochastic generalization of the Newton-Leibniz axiom,
Dynkin’s formula gives the expected value of any suitably
smooth function of an Itˆo diffusion at a stopping time.

Theorem 1 (Dynkin’s formula, [26]). Let X x(t, w) be a time-
homogeneous Itˆo diffusion given by SDE (1) with the initial
state x ∈ Rn. Suppose τ is a stopping time with E[τ ] < ∞,
and f ∈ C2(Rn) with compact support. Then

E[f (X x(τ, w))] = f (x) + E[

(cid:90) τ

Af (X x(s, w))ds].

(3)

0

In Theorem 1, if we consider a twice continuously differ-
entiable function f deﬁned on a bounded set B ⊆ Rn, i.e.,
f (x) ∈ C2(B), f can be any twice continuously differentiable
function f ∈ C2(B) without
the assumption of compact
support. In this case, the support of f is of course, compact,
since the support of f is always closed and bounded.

Now, we deﬁne the p-reach-avoid set, which is a set of
initial states such that the stochastic system (1) starting from
it will touch a compact target set T in ﬁnite time while staying
within a bounded and open safe set X preceding the target ﬁrst
hitting time with probability being larger than p ∈ [0, 1], where

T = {x ∈ Rn | g(x) ≤ 1} and
X = {x ∈ Rn | h0(x) < 0}

(4)

with g(x), h0(x) ∈ R[x] and T ⊆ X .

Deﬁnition 2 (p-Reach-Avoid Set). The p-reach-avoid set RAp
is the set of initial states such that every trajectory of the
stochastic system (1) originating in it will enter the target set
T at some time t ∈ R≥0 while staying inside the safe set X
over the time horizon [0, t] with probability being larger than
p ∈ [0, 1], i.e.,

RAp =






x ∈ X

(cid:16)

∃t ∈ R≥0.(cid:2)X x(t, w) ∈ T
P
∀τ ∈ [0, t].X x(τ, w) ∈ X (cid:3)(cid:17)

(cid:94)




.

> p



(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

An inner-approximation is a subset of the set RAp.

III. INNER-APPROXIMATING p-REACH-AVOID SETS

In this section we present our semi-deﬁnite programming
based approach for inner-approximating the p-reach-avoid set
RAp. The semi-deﬁnite program is constructed via relaxing a
system of equations, whose twice continuously differentiable
solution is equal to a bounded value function with its strict p
super-level set being equal to the p-reach-avoid set RAp.

A. Characterization of p-Reach-Avoid Sets

In this subsection we introduce a system of elliptic partial
differential equations for characterizing the p-reach-avoid set.
The derivation of such equations begins with a value
function, which is deﬁned by a new stochastic process
{ (cid:99)X x0(t, w), t ∈ R≥0} for x0 ∈ X , which is a stopped process
corresponding to {X x0(t, w), t ∈ [0, T x0(w))} and the set
X \ T , i.e.,

(cid:40)

(cid:99)X x0(t, w) =

X x0 (t, w), if t < τ x0(w),
X x0 (τ x0(w), w), if t ≥ τ x0(w),

(5)

where

τ x0(w) = inf{t | X x0 (t, w) ∈ ∂X

(cid:95)

X x0(t, w) ∈ T }

is the ﬁrst time of exit of X x0(t, w) from the open set X \ T .
It is worth remarking here that if the path X x0(t, w) escapes
to inﬁnity in ﬁnite time, it must touch the boundary of the
bounded safe set X and thus τ x0(w) ≤ T x0(w). The stopped
process (cid:99)X x0(t, w) inherits the right continuity and strong
Markovian property of X x0(t, w). Moreover, the inﬁnitesimal
generator corresponding to (cid:99)X x0 (t, w) is identical to the one
corresponding to X x0 (t, w) on the set X \ T , and is equal to
zero outside of the set X \T [18]. That is, for v(x) ∈ C2(Rn),

Av(x) =

(cid:88)

i

bi(x)

∂v(x)
∂xi

+

1
2

(cid:88)

(σσ(cid:62))ij(x)

i,j

∂2v(x)
∂xi∂xj

4

for x ∈ X \ T and

Av(x) = 0

for x ∈ ∂X ∪ T . This will be implicitly assumed throughout
this paper.

the set X is an invariant set for the

We observe that
stochastic process (cid:98)X x0
Proposition 1. If x0 ∈ X and w ∈ Ω, then

(w) with x0 ∈ X .

t

(cid:99)X x0(t, w) ∈ X

for t ∈ R≥0.

Proof. Clearly, if x0 ∈ T ∪ ∂X ,

(cid:99)X x0(t, w) ∈ T ∪ ∂X , ∀t ∈ R≥0

holds.

If x0 ∈ X \ T , one of the following three cases hold:
1) there exists t ∈ R≥0 such that

(cid:2)∀τ ∈ [0, t). (cid:99)X x0(τ, w) ∈ X \ T ]

(cid:94)

[∀τ ∈ [t, ∞). (cid:99)X x0 (t, w) ∈ T (cid:3);

2) there exists t ∈ R≥0 such that

(cid:2)∀τ ∈ [0, t). (cid:99)X x0(τ, w) ∈ X \ T ]

(cid:94)

[∀τ ∈ [t, ∞). (cid:99)X x0(t, w) ∈ ∂X (cid:3);

3) (cid:99)X x0(t, w) ∈ X \ T for t ∈ R≥0 holds.

Therefore, the conclusion holds.

From the proof of Proposition 1, we conclude that all sample
paths of the stochastic process { (cid:99)X x0 (t, w), t ∈ R≥0} for x0 ∈
X can be divided into the following three disjoint groups:

1) paths entering T in ﬁnite time.
2) paths entering ∂X in ﬁnite time;
3) paths staying inside X \ T for all time.
Given x ∈ X , let (cid:98)τ x

target set T for the path (cid:99)X x(t, w) : R≥0 → Rn, i.e.,

T (w) be the ﬁrst hitting time of the

T (w) < ∞) > p}, where

T (w) = inf{t ∈ R≥0 | (cid:99)X x(t, w) ∈ T }.
(cid:98)τ x
Below we show that the p-reach-avoid set RAp is equal to the
set of initial states such that the ﬁrst hitting time of the target
set T for the stochastic process { (cid:99)X x0(t, w), t ∈ R≥0} is less
than inﬁnity with probability being larger than p.
Lemma 1. RAp = {x ∈ X | P((cid:98)τ x
RAp is the p-reach-avoid set in Deﬁnition 2.
Proof. According to Proposition 5 in [5], we have P((cid:98)τ x
T (w) <
∞) = P(∃t ∈ R≥0. (cid:99)X x(t, w) ∈ T ). According to the rela-
tionship between stochastic processes { (cid:99)X x(t, w), t ∈ [0, ∞)}
and {X x(t, w), t ∈ [0, T x(w))}, we have that P(∃t ∈
∃t ∈ R≥0.(cid:2)X x(t, w) ∈ T (cid:86) ∀τ ∈
R≥0. (cid:99)X x(t, w) ∈ T ) = P
[0, t].X x(τ, w) ∈ X (cid:3)(cid:17)
. Therefore, RAp = {x ∈ X |
P((cid:98)τ x
T (w) < ∞) > p}.
Now, we present the bounded value function V (x) : X →
R, which can be regarded as an ergodic occupation measure
or “long-run average” (e.g., [4]) and whose strict p super-level

(cid:16)

set, i.e., {x ∈ X | V (x) > p}, is equal to the p-reach-avoid
set RAp, as shown in Lemma 2.

V (x) := lim
t→∞

µ([0, t] × T | x)
t

,

(6)

where µ([0, t] × T | x) = E[(cid:82) t
0 1T ( (cid:99)X x(τ, w))dτ ] is an
occupation measure [4], 1X (·) : T → {0, 1} represents the
indicator function of the set T , i.e.,

1T (x) :=

(cid:40)

1,
0,

if x ∈ T ,
if x /∈ T .

Since 0 ≤ 1T (x) ≤ 1 over Rn, 0 ≤ V (x) ≤ 1 for x ∈ X
and thus V (x) is bounded over X . It is worth remarking here
=
that limt→∞
exists, since limt→∞
E[1T ( (cid:98)X x(τ, w))], which can also be justiﬁed by
supt∈R≥0
Proposition 6 in [5].

µ([0,t]×T |x)
t

µ([0,t]×T |x)
t

5

Theorem 2 below. It is worth noting here that the derived sys-
tem of equations is different from Hamilton-Jacobi equations
in [17] or the variational inequalities in [5].

Theorem 2. If there exist v(x) ∈ C2(X ) and u(x) ∈ C2(X )
such that for x ∈ X ,

Av(x) = 0,
v(x) = 1T (x) + Au(x),

(7)

(8)

then

and thus

v(x) = V (x), ∀x ∈ X

RAp = {x ∈ X | v(x) > p},

where V (·) : X → R is the value function in (6).

Proof. Let x ∈ X . According to Corollary 1, we have that

Lemma 2. RAp = {x ∈ X | V (x) > p)}, where V (·) : X →
[0, 1] is the value function in (6).

(cid:99)X x(τ, w) ∈ X

for τ ∈ R≥0 and w ∈ Ω.

Proof. According to Lemma 1, we just need to prove that

From Eq. (7) and Theorem 1, we have that

V (x) = P((cid:98)τ x

T (w) < ∞).

v(x) = E[v( (cid:99)X x(τ, w))], ∀τ ∈ R≥0.

For t ∈ R≥0, according to Fubini’s theorem [31], we have

From Eq. (8), we have that for τ ∈ R≥0,

E[(cid:82) t

0 1T ( (cid:99)X x(τ, w))dτ ]

t

(cid:82) t
0

=

P( (cid:99)X x(τ, w) ∈ T )dτ
t

.

Therefore,

V (x) = lim
t→∞

(cid:82) t
0

P( (cid:99)X x(τ, w) ∈ T )dτ
t

.

According to Lemma 3 shown below, we have

lim
t→∞

P( (cid:99)X x(t, w) ∈ T ) = P((cid:98)τ x

T (w) < ∞).

As a consequence,

V (x) = P((cid:98)τ x

T (w) < ∞).

Therefore,

v( (cid:99)X x(τ, w)) = 1T ( (cid:99)X x(τ, w)) + Au( (cid:99)X x(τ, w)).
From Eq. (10), we have that for t ∈ R≥0,

(cid:90) t

E[

0

v( (cid:99)X x(τ, w))dτ ] = E[

(cid:90) t

1T ( (cid:99)X x(τ, w))dτ ]

0
(cid:90) t

+ E[

0

Au( (cid:99)X x(τ, w))dτ ]

and further according to Fubini’s theorem [31],

(cid:90) t

0

E[v( (cid:99)X x(τ, w))]dτ = E[

(cid:90) t

1T ( (cid:99)X x(τ, w))dτ ]

0
(cid:90) t

0

+ E[

Au( (cid:99)X x(τ, w))dτ ].

RAp = {x ∈ X | V (x) > p}

Consequently,

(9)

(10)

according to Lemma 1.

Lemma 3. If x0 ∈ X , then

lim
t→∞

P( (cid:99)X x0(t, w) ∈ T ) = P((cid:98)τ x0

T (w) < ∞).

Proof. According to Corollary 1 in [37] stating that P(∃t ∈
R≥0. (cid:98)X x0(t, w) ∈ T ) = limt→∞ P ( (cid:98)X x0 (t, w) ∈ T ), and
Proposition 5 in [5] stating that P((cid:98)τ x0
T (w) < ∞) = P(∃t ∈
R≥0. (cid:98)X x0(t, w) ∈ T ), we have the conclusion.

From Lemma 2 we conclude that the exact p-reach-avoid set
can be obtained if the value function V (x) in (6) is computed.
However, it is challenging, even impossible to compute it
directly since it involves the knowledge of analytical solutions
to SDE (1), which cannot be gained generally, especially
for nonlinear systems. In order to address this issue, we go
further and show that it is the uniquely twice continuously
differentiable solution to a system of elliptic partial differential
equations (e.g., [10]) if such a solution exists, as formulated in

v(x) =

E[(cid:82) t

0 1T ( (cid:99)X x(τ, w))dτ ]

t

+

E[u( (cid:99)X x(t, w))] − u(x)
t

, ∀t ∈ R≥0.

Since u(x) is continuously differentiable over X , it is bounded
over x ∈ X . Consequently,

v(x) = lim
t→∞

E[(cid:82) t

0 1T ( (cid:99)X x(τ, w))dτ ]

t

and thus v(x) = V (x), implying further that

RAp = {x ∈ X | v(x) > p}

from Lemma 2.

the boundary condition is known,

Remark 1. If
the
values for both functions v(x) and u(x) on the boundary
∂X are known, the problem of solving the system of elliptic
partial differential equations (7) and (8) is a known Dirichlet

i.e.,

problem, which originally was posed for Laplace’s equation
and could be solved using existing methods such as the
Perron’s method [14]. Unfortunately, we only know the values
of the function v(x) on the boundary ∂X , i.e., v(x) = 0
for x ∈ ∂X , which can be gained from equation (8), the
values of the function u(x) on ∂X is unknown. Besides, even
if the boundary condition is known, in order to characterize
the p-reach-avoid set we need to guarantee that the obtained
solution (v(x), u(x)) to the system of equations (7) and (8)
is twice continuously differentiable solution from Theorem 2.
Whether (v(x), u(x)) otherwise, i.e., if not twice continuously
differentiable, can be used to characterize the p-reach-avoid
remains currently open.

From Theorem 2 we have that if we obtain a twice continu-
ously differentiable solution (v(x), u(x)) to equations (7) and
(8) the exact p-reach-avoid set RAp = {x ∈ X | v(x) > p}
can be gained. However, due to the existence of the indicator
function 1T (x) in (8), we have that limx→x0,x /∈T v(x) =
Au(x0), which is not equal to v(x0) = 1 + Au(x0), where
x0 ∈ ∂T , thus the system of equations (7) and (8) does not
admit twice continuously differentiable solutions (v(x), u(x))
generally. Let’s take an extreme case: b(x) = 0 for x ∈ Rn
and σ(x) = 0 for x ∈ Rn. We can obtain that if v(x) is a
solution to the system of equations (7) and (8), then v(x) = 1
for x ∈ T and v(x) = 0 for x ∈ X \ T , which implies that
v(x) /∈ C2(X ). Despite all this, equations (7) and (8) play a
fundamental role in our method for inner-approximating the
p-reach-avoid set. In the subsequent subsection we will intro-
duce a semi-deﬁnite programming based method for inner-
approximating the p-reach-avoid set, which is obtained by
relaxing the equations (7) and (8) into a system of inequalities.

B. Semi-deﬁnite Programming Implementation

In this subsection a semi-deﬁnite programming method is
presented for inner-approximating the p-reach-avoid set RAp.
First, we observe that an inner-approximation could be
obtained via solving a system of inequalities, which is derived
from Eq. (7) and (8).

Corollary 1. If
u(x) ∈ C2(X ) such that for x ∈ X ,

there exist

functions v(x) ∈ C2(X ) and

Av(x) ≥ 0,
1T (x) + Au(x) ≥ v(x),

(11)

(12)

then

{x ∈ X | v(x) > p} ⊆ RAp

is an inner-approximation of the p-reach-avoid set RAp.

Proof. According to Proposition 1,

(cid:99)X x(τ, w) ∈ X , ∀τ ∈ R≥0, ∀w ∈ Ω,

if x ∈ X .

6

From constraint (11), we have that

v(x0) ≤ E[v( (cid:99)X x0 (t, w))], ∀t ∈ R≥0.

(13)

Also, constraint (12) indicates that

v( (cid:99)X x0(t, w)) ≤ 1T ( (cid:99)X x0 (t, w)) + Au( (cid:99)X x0(t, w))

holds for t ∈ R≥0 and w ∈ Ω. Thus, we have that for t ∈ R≥0,

(cid:90) t

E[

0

v( (cid:99)X x0(τ, w))dτ ] ≤ E[

(cid:90) t

1T ( (cid:99)X x0(τ, w))dτ ]

0
(cid:90) t

+ E[

0

Au( (cid:99)X x0(τ, w))dτ ]

and thus
(cid:90) t

E[v( (cid:99)X x0(τ, w))]dτ

0

≤ E[

(cid:90) t

0

1T ( (cid:99)X x0(τ, w))dτ ] + E[u( (cid:99)X x0 (t, w))] − u(x0).

Combining with (13) we further have that

v(x0) ≤

+

E[(cid:82) t

0 1T ( (cid:99)X x0(τ, w))dτ ]

t
E[u( (cid:99)X x0(t, w))] − u(x0)
t

, ∀t ∈ R≥0

and thus

v(x0) ≤ lim
t→∞

+ lim
t→∞

E[(cid:82) t

0 1T ( (cid:99)X x0(τ, w))dτ ]

t
E[u( (cid:99)X x0 (t, w))] − u(x0)
t

.

(= V (x0))

(14)

Since limt→∞

E[u( (cid:98)X x0 (t,w))]−u(x0)
t

= 0, we have

p < v(x0) ≤ V (x0)

and thus {x ∈ X | v(x) > p} ⊆ RAp.

Remark 2. Although the equations (7) and (8) do not admit
twice continuously differentiable solutions in general, the sys-
tem of inequalities (11) and (12) does. The pair that v(x) ≡ 0
and u(x) ≡ 0 for x ∈ X satisﬁes the system of inequalities
(11) and (12).

Corollary 1 expresses that an inner-approximation of the p-
reach-avoid set RAp is provided by a solution v(x) ∈ C2(X )
to constraints (11) and (12). Below we present a convex
programming method for solving constraints (11) and (12).

The equivalent constraints without indicator functions of

constraints (11) and (12) are formulated below:
(cid:2)Av(x) ≥ 0, ∀x ∈ X \ T (cid:3) (cid:94)
(cid:2) − v(x) + 1T (x) + Au(x) ≥ 0, ∀x ∈ X (cid:3),

which is further equivalent to

(15)

(16)

Let x0 ∈ {x ∈ X | v(x) > p}. Since constraint (12)

Av(x) ≥ 0, ∀x ∈ X \ T ,

indicates that

v(x) ≤ 0

for x ∈ X \ X , x0 ∈ X holds.

− v(x) + Au(x) ≥ 0, ∀x ∈ X \ T ,

− v(x) ≥ 0, ∀x ∈ ∂X ,

1 − v(x) ≥ 0, ∀x ∈ T .

7

If functions v(x) and u(x) in (16) are further restricted to
polynomial functions over x ∈ Rn, we can encode the system
of inequalities (16) in the form of sum-of-squares constraints,
ﬁnally resulting in a semi-deﬁnite program (17) for inner-
approximating the p-reach-avoid set RAp.

max c · ˆw

s.t.

Av(x) + s0(x)h0(x) + s1(x)(1 − g(x)) ∈

(cid:88)

[x],

− v(x) + Au(x) + s2(x)h0(x)

− v(x) + p(x)h0(x) ∈

+ s3(x)(1 − g(x)) ∈
(cid:88)

[x],

(17)

(cid:88)

[x],

(cid:88)

[x],

1 − v(x) + s4(x)(g(x) − 1) ∈
where c · (cid:98)w = (cid:82)
X v(x)dx, (cid:98)w is the constant vector computed
by integrating the monomials in v(x) ∈ R[x] over X , c is
the vector composed of unknown coffecients in v(x) ∈ R[x];
u(x), p(x) ∈ R[x] and si(x) ∈ (cid:80)[x], i = 0, . . . , 4.

T ) for t ≥ (cid:98)τ x0

where (cid:99)X x0(t) = X x0 (t) for t ≤ (cid:98)τ x0
X x0((cid:98)τ x0
∂X (cid:87) X x0(t) ∈ T }.
Since limt→∞

T with (cid:98)τ x0

u( (cid:98)X x0 (t))−u(x0)
t

RA holds. Thus, {x ∈ X | v(x) > 0} ⊆ RA.

and (cid:99)X x0 (t) =
T = inf{t | X x0 (t) ∈

T

= 0 and v(x0) > 0, x0 ∈

Remark 4. When the target set T is an unsafe set and an
initial set INI ⊂ X is given, a set of constraints can also
be constructed for addressing the classical safety veriﬁcation
problem of SDE (1) as in [30] via relaxing the equations (7)
and (8). That is, we can compute a probability p such that for
x0 ∈ INI,
P

∀τ ∈ [0, t].X x0 (τ, w) ∈ X (cid:3)(cid:17)

∃t ∈ R≥0.(cid:2)X x0(t, w) ∈ T

(cid:94)

(cid:16)

≤ p.

This method is orthogonal to stochastic barrier-certiﬁcate
methods from [30], since our method is derived from the
equations (7) and (8) rather than Doob’s martingale inequality
as in [30]. We will compare them in the future work.

Corollary 2. If
u(x) ∈ C2(X ) such that for x ∈ X ,

there exist

functions v(x) ∈ C2(X ) and

Theorem 3. Let (v(x), u(x)) be a solution to the semi-deﬁnite
program (17), then

{x ∈ X | v(x) > p}

then

is an inner-approximation of the p-reach-avoid set RAp.

Proof. Since v(x) satisﬁes constrains in (17) and ∂X ⊆
{x ∈ Rn | h0(x) = 0}, we obtain that v(x) satisﬁes (16).
Consequently,

{x ∈ X | v(x) > p} ⊆ RAp

holds from Corollary 1.
Remark 3. If σ(x) ≡ 0 for x ∈ Rn in SDE (1), SDE (1) is
ﬁnally reduced to ODE (18):

dx(t)
dt

= b(x(t)), x(0) = x0,

(18)

whose solution is denoted by X x0(·) : T → Rn with initial
state X x0(0) = x0. In this case, if there exists functions
v(x) ∈ C1(X ) and u(x) ∈ C1(X ) satisfying (16), then

{x ∈ X | v(x) > 0} ⊆ RA,

where RA is the reach-avoid set over open time horizons, i.e.,
∃t ∈ R≥0.(cid:2)X x0(t) ∈ T

(cid:94)

(cid:40)

(cid:41)

RA =

x0 ∈ Rn

.

(19)

∀τ ∈ [0, t].X x0 (τ ) ∈ X (cid:3)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Proof. The conclusion can be obtained by following the proof
of Corollary 1 with small modiﬁcations. A brief explanation
is given below.

Taking x0 ∈ {x ∈ X | v(x) > 0} and following the
proof of Corollary 1 by removing the expectation operators,
we obtain

v(x0) ≤ lim
t→∞

+ lim
t→∞

(cid:82) t
0 1T ( (cid:99)X x0(τ ))dτ
t
u( (cid:99)X x0 (t)) − u(x0)
t

,

(Corresponding to (14))

− Av(x) ≥ 0,
v(x) ≥ 1T (x) + Au(x),

(20)

(21)

{x ∈ X | v(x) ≤ p} ⊆ RA(cid:48)
p

the p-reach-avoid set RA(cid:48)

p,

is an inner-approximation of
where

RA(cid:48)

p =






x ∈ X

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:16)

P

∃t ∈ R≥0.[X x(t, w) ∈ T

(cid:94)

∀τ ∈ [0, t].X x(τ, w) ∈ X ]

(cid:17)

≤ p






.

Proof. The conclusion can be obtained by following the
arguments for Corollary 1.

Obviously, if there exists p ∈ [0, 1] such that

INI ⊆ {x ∈ X | v(x) ≤ p},

where v(x) satisﬁes Corollary 2, then

(cid:16)

P

∃t ∈ R≥0.(cid:2)X x0(t, w) ∈ T

(cid:94)

∀τ ∈ [0, t].X x0 (τ, w) ∈ X (cid:3)(cid:17)

≤ p
holds for x0 ∈ INI.

According to Corollary 2, the safety veriﬁcation problem
can be encoded into the problem of solving the following
constraints:

v(x) ≤ p, ∀x ∈ INI,

v(x) ≥ 1, ∀x ∈ T ,

v(x) ≥ Au(x), ∀x ∈ X \ T ,

Av(x) ≤ 0, ∀x ∈ X .

(22)

Comparing the set of constraints (22) and constraints (26)-
(29) in [30], the main difference between them lies in that the
former uses the constraint v(x) ≥ Au(x), ∀x ∈ X \ T rather
than v(x) ≥ 0, ∀x ∈ X . Therefore, the set of constraints (22)
is more expressive than constraints (26)-(29) in [30], which is
a special instance of the set of constraints (22) with u(x) ≡ 0
for x ∈ X .

8

Fig. 1. An illustration of inner-approximations of the reach-avoid set RAp
for Example 1. ( Red curve denotes level sets of the function v(x) computed
by solving (17). The set of states between the two dashed blue lines is an
inner-approximation of the 0.9-reach-avoid set. The set of green states is the
0.9-reach-avoid set estimated via Monte-Carlo methods.)

Fig. 2. An illustration of inner-approximations of the reach-avoid set RAp
for Example 1. ( Red curve denotes level sets of the function v(x) computed
by solving (17). The set of states between the two dashed blue lines is an
inner-approximation of the 0.5-reach-avoid set. The set of green states is the
0.5-reach-avoid set estimated via Monte-Carlo methods.)

also shows two trajectories starting from (0.5, 0.5)(cid:62) and
(−0.95, 0.0)(cid:62) respectively. Also, we use the Monte-Carlo
simulation method to assess the quality of computed inner-
approximations, which is demonstrated in Fig. 5.

Example

3

(Harmonic

oscillator). Consider

a

two-

Ex.
1
2
3
4
5
6
7

dv
8
16
16
18
20
16
10

SDP (17)
ds
8
16
16
18
20
16
12

dp
8
16
16
10
20
16
12

du
8
16
16
18
20
8
10

T
1.78
4.39
3.78
6.11
8.27
3.32
2.08

TABLE I
PARAMETERS OF OUR IMPLEMENTATIONS ON (17) FOR EXAMPLES 1∼6.
dv , du AND dp: DEGREE OF POLYNOMIALS v(x), u(x) AND p(x) IN (17),
RESPECTIVELY; ds : DEGREE OF POLYNOMIALS si IN (17), RESPECTIVELY,
i = 0, . . . , 4; T : COMPUTATION TIME (SECONDS).

IV. EXAMPLES

In this section we demonstrate on several examples the
performance of our approach exploiting semi-deﬁnite pro-
gramming. All computations solving (17) were performed
on an i7-7500U 2.70GHz CPU with 32GB RAM running
Windows 10, where the sum-of-squares module of YALMIP
[21] was used to transform the sum-of-squares optimization
problem (17) into a semi-deﬁnite program and the solver
Mosek [25] was used to solve the resulting semi-deﬁnite
program. The parameters controlling the performance of our
semi-deﬁnite programming approach are presented in Table I.

Example 1 (Population growth). Consider the stochastic
dynamical system

dX(t, w) = b(X(t, w))dt + σ(X(t, w))dW (t, w),

√
2
with b(X(t, w)) = −X(t, w) and σ(X(t, w)) =
2 X(t, w),
which is a stochastic model of population dynamics subject
to random ﬂuctuations that can be attributed to extraneous or
chance factors such as the weather, location, and the general
environment.

Suppose that the safe set is X = {x ∈ R | x2 − 1 < 0} and

the target set is T = {x ∈ R | 100x2 ≤ 1}.

The computed inner-approximations of 0.9- and 0.5-reach-
avoid sets are respectively illustrated in Fig. 1 and 2, which
also shows the computed function v(x) via solving the semi-
deﬁnite program (17). For gauging the quality of the com-
puted inner-approximations, the 0.9- and 0.5-reach-avoid sets
estimated via Monto-Carlo methods are also respectively
presented in Fig. 1 and 2 for comparisons.

Example 2 (Nonlinear drift). Consider the nonlinear stochas-
tic differential equation from [29],

dX1(t, w) = X2(t, w)dt,
dX2(t, w) = −(X1(t, w) + X2(t, w) + 0.5X 3

1 (t, w))dt
+ σdW (t, w),

where σ = 0.1.
Suppose that

{(x1, x2)(cid:62) ∈ R2 | x2
R2 | 100(x1 − 0.1)2 + 100x2

1 + x2

2 ≤ 1}, respectively.

the safe set and the target set are X =
2 − 1 < 0} and T = {(x1, x2)(cid:62) ∈

The computed function v(x1, x2) via solving the semi-
deﬁnite program (17) is shown in Fig. 3 and the computed
0.5- and 0.9-reach-avoid sets are illustrated in Fig. 4, which

Fig. 3. An illustration of the computed function v(x1, x2) for Example 2.

9

Fig. 4. An illustration of inner-approximations of the reach-avoid set RAp
for Example 2. (Black and green curves denote the boundaries of the safe
set X and the target set T , respectively. Blue and red curves denote the
boundaries of computed inner-approximation of the 0.5-reach-avoid set and
0.9-reach-avoid set, respectively.)

Fig. 6. An illustration of the computed function v(x1, x2) for Example 3.

Fig. 5. An illustration of the quality of computed inner-approximations of
the reach-avoid set RAp for Example 2. (Red and blue curves denote the
boundaries of computed inner-approximations of the 0.9- and 0.5-reach-avoid
sets, respectively. Gray region denotes the 0.9/0.5-reach-avoid set estimated
via the Monte-Carlo simulation method.)

dimensional harmonic oscillator with noisy damping,

dX1(t, w) = ζX2(t, w)dt,
dX2(t, w) = (−ζX1(t, w) − kX2(t, w))dt

− σX2(t, w)dW (t, w),

with ζ = 1, k = 7 and σ = 2.

Fig. 7. An illustration of computed inner-approximations for Example 3.
(Black and green curves denote the boundaries of safe set X and target set
T , respectively. Red and blue curves denote the boundaries of computed inner-
approximations of the 0.9- and 0.5-reach-avoid sets, respectively.)

R2 | 4x2

1 + 5(x2 − 0.5)2 ≤ 1}, respectively.

The computed function v(x1, x2) via solving the semi-
deﬁnite program (17) is shown in Fig. 9 and the corresponding
computed 0.1- and 0.5-reach-avoid sets are illustrated in
Fig. 10. Two trajectories starting from (−0.1, −0.5)(cid:62) and
(0.1, 0.5)(cid:62) respectively are also illustrated in Fig. 10, one
of which leaves the safe set X . Also, we use the Monte-Carlo
simulation method to assess the quality of computed inner-
approximations, which is demonstrated in Fig. 11.

Suppose that

{(x1, x2)(cid:62) ∈ R2 | x2
R2 | 10x2

1 + 10x2

the safe set and the target set are X =
2 − 1 < 0} and T = {(x1, x2)(cid:62) ∈

1 + x2

2 ≤ 1}, respectively.

The computed value function v(x1, x2) via solving the semi-
deﬁnite program (17) is shown in Fig. 6 and the corresponding
computed 0.5- and 0.9-reach-avoid sets are illustrated in Fig.
7. Two trajectories starting from (0.8, 0.0)(cid:62) and (−0.9, 0.0)(cid:62)
respectively are also illustrated in Fig. 7. Also, we use the
Monte-Carlo simulation method to assess the quality of com-
puted inner-approximations, which is demonstrated in Fig. 8.

Example 4. Consider the following nonlinear stochastic sys-
tem from [33],

dX1(t, w) = (−2X1(t, w) + X 2
dX2(t, w) = −X2(t, w)dt + 2dW2(t, w).

2 (t, w))dt + 2dW1(t, w)

Suppose that

{(x1, x2)(cid:62) ∈ R2 | x2

the safe set and the target set are X =
2 − 1 < 0} and T = {(x1, x2)(cid:62) ∈

1 + x2

Fig. 8. An illustration of the quality of computed inner-approximations of
the reach-avoid set RAp for Example 3. (Red and blue curves denote the
boundaries of computed inner-approximations of the 0.9- and 0.5-reach-avoid
sets, respectively. Gray region denotes the 0.9/0.5-reach-avoid set estimated
via the Monte-Carlo simulation method.)

-1.0-0.50.00.51.0-1.0-0.50.00.51.0x1x2-1.0-0.50.00.51.0-1.0-0.50.00.51.0x1x210

Fig. 12. An illustration of the computed function v(x1, x2) for Example 5.

Example 5. As a model for the horizontal slow drift motions
of a moored ﬂoating platform or ship responding to incoming
irregular waves John Grue introduced the equation,

¨xt + a0 ˙xt + ω2xt = (T0 − α0 ˙xt)ηWt

where Wt is 1-dimensional white noise, a0, w, T0, α0 and η
are constants, which can be reduced to the following SDE

dX1(t, w) = X2(t, w)dt
dX2(t, w) = (−ω2X1(t, w) − a0X2(t, w))dt

+ (−α0X2(t, w) + T0)ηdW (t, w),

where ω = a0 = α0 = η = T0 = 1.

Suppose that

{(x1, x2)(cid:62) ∈ R2 | x2
R2 | 4(x1 − 0.2)2 + 4(x2 − 0.2)2 ≤ 1}, respectively.

the safe set and the target set are X =
2 − 1 < 0} and T = {(x1, x2)(cid:62) ∈

1 + x2

The computed function v(x1, x2) via solving the semi-
deﬁnite program (17) is shown in Fig. 12 and the computed
0.1- and 0.5-reach-avoid sets are illustrated in Fig. 13. Three
trajectories starting from (−0.5, 0.0)(cid:62), (−0.1, −0.5)(cid:62) and
(0.1, 0.9)(cid:62) respectively are also illustrated in Fig. 13. Also,
we use the Monte-Carlo simulation method to assess the
conservativeness of computed inner-approximations, which is
demonstrated in Fig. 14.

As stated in Remark 3, our method can also be used
to inner approximate reach-avoid sets of ODEs. Below we
provide two examples (i.e., Examples 6 and 7) involving
ODEs, and compute their inner-approximations of reach-avoid
sets. We also make comparisons between our method and
the method in [16] based on these two examples. Note that
the semi-deﬁnite program (20) in [16] involves the choice
of discount factors βi, i = 1, ..., nβ. In these computations,
we take nβ = 2 and use the semi-deﬁnite program (20) with
(β1 = 1, β2 = 2) and (β1 = 1, β2 = 0.01) in [16] as instances
to illustrate its performance. Like our method, the computed
inner-approximations are deﬁned by polynomials of degree 16
and 10 for Examples 6 and 7, respectively.

Fig. 9. An illustration of the computed function v(x1, x2) for Example 4.

Fig. 10. An illustration of inner-approximations of the reach-avoid set RAp
for Example 4. (Black and green curves denote the boundaries of the safe
set X and the target set T , respectively. Red and blue curves denote the
boundaries of the computed 0.5- and 0.1-reach-avoid sets, respectively.)

Fig. 11. An illustration of the quality of computed inner-approximations of
the reach-avoid set RAp for Example 4. (Red and blue curves denote the
boundaries of computed inner-approximations of the 0.5- and 0.1-reach-avoid
sets, respectively. Gray region denotes the 0.5/0.1-reach-avoid set estimated
via the Monte-Carlo simulation method.)

-1.0-0.50.00.51.0-1.0-0.50.00.51.0x1x211

Fig. 13. An illustration of inner-approximations of the reach-avoid set RAp
for Example 5. (Black and green curves denote the boundaries of the safe
set X and the target set T , respectively. Red and blue curves denote the
boundaries of the computed 0.5- and 0.1-reach-avoid sets, respectively.)

Fig. 15. An illustration of the computed function v(x, y) for Example 6.

Fig. 14. An illustration of the quality of computed inner-approximations of
the reach-avoid set RAp for Example 2. (Red and blue curves denote the
boundaries of computed inner-approximations of the 0.5- and 0.1-reach-avoid
sets, respectively. Gray region denotes the 0.9/0.5-reach-avoid set estimated
via the Monte-Carlo simulation method.)

Example 6. We consider an academic example given by

˙x = −0.5x − 0.5y + 0.5xy

˙y = −0.5y + 0.5

with X = {(x, y)(cid:62) ∈ R2 | x2 + y2 − 1 < 0} and T =
{(x, y)(cid:62) ∈ R2 | 4x2 + 4(y − 0.5)2 ≤ 1}.

The computed function v(x, y) via solving the semi-deﬁnite
program (17) is shown in Fig. 15 and the computed inner-
approximation is illustrated in Fig. 16. Fig. 16 also displays
the inner-approximations computed by the method in [16] with
(β1 = 1, β2 = 0.01) and (β1 = 1, β2 = 2). From the visu-
alized results in Fig. 16, we see that the inner-approximation
computed by the method in [16] with (β1 = 1, β2 = 0.01) is
a little less conservative than that by our method. However,
the inner-approximation computed by the method in [16] with
(β1 = 1, β2 = 2) is more conservative one.

Example 7. Consider the reversed-time van der Pol oscillator
given by

˙x = −2y
˙y = 0.8x + 10(x2 − 0.21)y

with X = {(x, y)(cid:62) ∈ R2 | x2 + y2 − 1 < 0} and T =
{(x, y)(cid:62) ∈ R2 | 100x2 + 100y2 ≤ 1}.

Fig. 16. An illustration of inner-approximations of reach-avoid set RA for
Example 6. (Black and green curves denote the boundaries of the safe set
X and the target set T , respectively. Red curve denotes the boundary of
computed inner-approximation using our method. Blue curve and dashed
blue curve denote the boundaries of computed inner-approximations using
the method in [16] with (β1 = 1, β2 = 0.01) and (β1 = 1, β2 = 2),
respectively.)

The computed value function v(x, y) via solving semi-
deﬁnite program (17) is visualized in Fig. 17 and the computed
inner-approximation is illustrated in Fig. 18. Note that Fig.
18 only displays the inner-approximation computed by the
method in [16] with (β1 = 1, β2 = 0.01), which is almost
identical with the result from our method. We did not ob-
tain an inner-approximation using the method in [16] with
(β1 = 1, β2 = 2).

Based on the computed results from Examples 6 and
7, we conclude that
the performance of the semi-deﬁnite
programming method in [16] depends on the choices of
discount factors βi’s, i = 1, . . . , nβ, as also stated in [16].
This is especially evident from Example 7. The optimal
choice remains challenging and is not within the scope of
the comparison. Similar parameters do, however, not appear
in our method, thus relieving our approach from the burdens
of tuning parameters. Comparing the quality of computed
inner-approximations for our method and the method [16]
when the structure of the semi-deﬁnite programs are not fully
exploited remains challenging and beyond the scope of this

-1.0-0.50.00.51.0-1.0-0.50.00.51.0x1x2-1.0-0.50.00.51.0-1.0-0.50.00.51.0xy12

of p-reach-avoid sets of systems modeled by polynomial SDEs
over open time horizons. As the p-reach-avoid set is the set
of initial states forcing the system, with sufﬁcient probability
being larger than p, to eventually reach a desired target set
while satisfying certain legal state constraints till the ﬁrst
hit time, it is of immediate interest in the design of reliable
systems. The benchmark examples exposed in the previous
section give an idea of the design or analysis obligations
that can be answered by computation of safe,
inner
approximations of p-reach-avoid sets. They also demonstrate
the performance of the proposed approach.

i.e.,

In future work, we will compare the approach presented
in Remark 4 with the barrier-certiﬁcate method in [30] on
the safety veriﬁcation. Also, we would like to extend our
method to solving reach-avoid problems of controlled SDEs
and impulsive stochastic delay differential systems [13].

REFERENCES

[1] A. Abate, S. Amin, M. Prandini, J. Lygeros, and S. Sastry. Computa-
tional approaches to reachability analysis of stochastic hybrid systems.
In Proceedings of the 10th International Workshop on Hybrid Systems:
Computation and Control, pages 4–17. Springer, 2007.

[2] A. Abate, M. Prandini, J. Lygeros, and S. Sastry. Probabilistic reacha-
bility and safety for controlled discrete time stochastic hybrid systems.
Automatica, 44(11):2724–2734, 2008.

[3] M. S. Bartlett. An Introduction to Stochastic Processes: With Special

Reference to Methods and Applications. CUP Archive, 1978.

[4] L. M. Bujorianu. Stochastic reachability analysis of hybrid systems.

Springer Science & Business Media, 2012.

[5] M. L. Bujorianu and J. Lygeros. New insights on stochastic reachability.
In 2007 46th IEEE Conference on Decision and Control, pages 6172–
6177. IEEE, 2007.

[6] D. Drzajic, N. Kariotoglou, M. Kamgarpour, and J. Lygeros. A
semideﬁnite programming approach to control synthesis for stochastic
reach-avoid problems. EPiC Series in Computing, 43:134–143, 2017.

[7] P. M. Esfahani, D. Chatterjee, and J. Lygeros. The stochastic reach-avoid
problem and set characterization for diffusions. Automatica, 70:43–56,
2016.

[8] J. F. Fisac, M. Chen, C. J. Tomlin, and S. S. Sastry. Reach-avoid
problems with time-varying dynamics,
In
Proceedings of the 18th International Conference on Hybrid Systems:
Computation and Control, pages 11–20, 2015.

targets and constraints.

[9] M. Fr¨anzle, E. M. Hahn, H. Hermanns, N. Wolovick, and L. Zhang.
Measurability and safety veriﬁcation for stochastic hybrid systems. In
Proceedings of the 14th International Conference on Hybrid Systems:
Computation and Control, pages 43–52, 2011.

[10] D. Gilbarg and N. S. Trudinger. Elliptic partial differential equations

of second order, volume 224. springer, 2015.

[11] J. D. Gleason, A. P. Vinod, and M. M. Oishi. Underapproximation
of reach-avoid sets for discrete-time stochastic systems via lagrangian
In Proceedings of the 56th Annual Conference on Decision
methods.
and Control, pages 4283–4290. IEEE, 2017.

[12] W. Han and R. Tedrake. Semideﬁnite outer approximation of the back-
ward reachable set of discrete-time autonomous polynomial systems.
arXiv preprint arXiv:1803.07725, 2018.
[13] W. Hu, Q. Zhu, and H. R. Karimi.

Some improved razumikhin
stability criteria for impulsive stochastic delay differential systems. IEEE
Transactions on Automatic Control, 64(12):5207–5213, 2019.

[14] H. Ishii. On uniqueness and existence of viscosity solutions of fully
nonlinear second-order elliptic pde’s. Communications on pure and
applied mathematics, 42(1):15–45, 1989.

[15] I. Karatzas and S. Shreve. Brownian Motion and Stochastic Calculus.

Graduate Texts in Mathematics. Springer New York, 2014.

[16] M. Korda, D. Henrion, and C. N. Jones. Controller design and region of
attraction estimation for nonlinear dynamical systems. IFAC Proceedings
Volumes, 47(3):2310–2316, 2014.

[17] X. D. Koutsoukos and D. Riley. Computational methods for veriﬁcation
of stochastic hybrid systems. IEEE Transactions on Systems, Man, and
Cybernetics - Part A: Systems and Humans, 38(2):385–396, 2008.
[18] H. J. Kushner. Stochastic stability and control. New York: Academic,

1967.

Fig. 17. An illustration of the computed function v(x, y) for Example 7.

Fig. 18. An illustration of inner-approximations of the reach-avoid set RA
for Example 7. (Black and green curves denote the boundaries of the safe
set X and the target set T , respectively. Red curve denotes the boundary
of computed inner-approximation from our method. Blue curve denotes the
boundary of computed inner-approximation using the method in [16] with
(β1 = 1, β2 = 0.01).)

paper. It is worth noting here that the computation of inner-
approximations of reach-avoid sets for ODEs is just a by-
product of our method for inner-approximating p-reach-avoid
sets of SDEs. Thus, we put comprehensive comparisons on
reach-avoid analysis for ODEs between our method and the
method in [16] in the future work.

The proposed semi-deﬁnite programming method reduces
the challenging (non-convex) problem of inner-approximating
reach-avoid sets for polynomial SDEs into a convex optimiza-
tion problem, which could be solved efﬁciently via interior
point methods in polynomial time. In practice, computational
cost can become prohibitive as either the dimension of SDEs
or the polynomial degree of v(x) and/or u(x) increases, at
least with the standard approach to the sum-of-squares opti-
mization wherein generic semi-deﬁnite programs are solved
by second-order symmetric interior-point algorithms. Large
problems may be tackled using specialized nonsymmetric
interior-point [27] or ﬁrst order algorithms [43].

V. CONCLUSION

We have exposed and proved a correct algorithm based on
semi-deﬁnite programming facilitating inner-approximations

-1.0-0.50.00.51.0-1.0-0.50.00.51.0xy[19] K. Lesser, M. Oishi, and R. S. Erwin. Stochastic reachability for control
of spacecraft relative motion. In 52nd IEEE Conference on Decision and
Control, pages 4705–4712. IEEE, 2013.

[20] K. Liu, M. Li, and Z. She. Reachability estimation of stochastic
In Proceedings of
dynamical systems by semi-deﬁnite programming.
the 58th IEEE Conference on Decision and Control, pages 7727–7732.
IEEE, 2019.

[21] J. Lofberg. Yalmip: A toolbox for modeling and optimization in matlab.
In Proceedings of the 13th IEEE International Symposium on Computer
Aided Control System Design, pages 284–289. IEEE, 2004.

[22] N. Malone, K. Lesser, M. Oishi, and L. Tapia. Stochastic reachability
based motion planning for multiple moving obstacle avoidance.
In
Proceedings of the 17th International Conference on Hybrid Systems:
Computation and Control, pages 51–60, 2014.

[23] K. Margellos and J. Lygeros. Hamilton–jacobi formulation for reach–
IEEE Transactions on Automatic Control,

avoid differential games.
56(8):1849–1861, 2011.

[24] I. Mitchell and J. Templeton. A toolbox of Hamolton-Jacobi solvers
for analysis of nondeterministic continuous and hybrid systems.
In
Proceedings of the 8th International Workshop on Hybrid Systems:
Computation and Control, volume 3414 of LNCS, pages 573–589, 2005.
[25] A. Mosek. The mosek optimization toolbox for matlab manual, 2015.
[26] B. Øksendal. Stochastic differential equations. In Stochastic differential

equations, pages 65–84. Springer, 2003.

[27] D. Papp and S. Yildiz. Sum-of-squares optimization without semideﬁnite

programming. SIAM Journal on Optimization, 29(1):822–851, 2019.

[28] G. Pola, M. L. Bujorianu, J. Lygeros, and M. D. Di Benedetto. Stochastic
hybrid models: An overview. IFAC Proceedings Volumes, 36(6):45–50,
2003.

[29] S. Prajna, A. Jadbabaie, and G. J. Pappas. Stochastic safety veriﬁcation
using barrier certiﬁcates. In Proceedings of the 43rd IEEE Conference
on Decision and Control, volume 1, pages 929–934. IEEE, 2004.
[30] S. Prajna, A. Jadbabaie, and G. J. Pappas. A framework for worst-
IEEE
case and stochastic safety veriﬁcation using barrier certiﬁcates.
Transactions on Automatic Control, 52(8):1415–1428, 2007.

[31] J. S. Rosenthal. A ﬁrst look at rigorous probability theory. World

Scientiﬁc Publishing Company, 2006.

[32] C. Santoyo, M. Dutreix, and S. Coogan. A barrier function approach
to ﬁnite-time stochastic system veriﬁcation and control. Automatica,
125:109439, 2021.

[33] C. Sloth and R. Wisniewski. Safety analysis of stochastic dynamical

systems. IFAC-PapersOnLine, 48(27):62–67, 2015.

[34] S. Song and Q. Zhu. Noise suppresses explosive solutions of differential
Journal of

systems: a new general polynomial growth condition.
Mathematical Analysis and Applications, 431(1):648–661, 2015.

[35] J. Steinhardt and R. Tedrake.

Finite-time regional veriﬁcation of
stochastic non-linear systems. The International Journal of Robotics
Research, 31(7):901–923, 2012.

[36] S. Summers and J. Lygeros. Veriﬁcation of discrete time stochastic
hybrid systems: A stochastic reach-avoid decision problem. Automatica,
46(12):1951–1961, 2010.

[37] I. Tkachev and A. Abate. On inﬁnite-horizon probabilistic properties
and stochastic bisimulation functions. In 2011 50th IEEE Conference
on Decision and Control and European Control Conference, pages 526–
531. IEEE, 2011.

[38] A. P. Vinod and M. M. Oishi. Stochastic reachability of a target tube:

Theory and computation. Automatica, 125:109458, 2021.

[39] B. Xue, A. Easwaran, N.-J. Cho, and M. Fr¨anzle.

veriﬁcation for nonlinear systems based on boundary analysis.
Transactions on Automatic Control, 62(7):3518–3523, 2016.

Reach-avoid
IEEE

[40] B. Xue, M. Fr¨anzle, and N. Zhan. Inner-approximating reachable sets for
polynomial systems with time-varying uncertainties. IEEE Transactions
on Automatic Control, 65(4):1468–1483, 2020.

[41] B. Xue, R. Li, N. Zhan, and M. Fr¨anzle. Reach-avoid analysis for
stochastic discrete-time systems. In 2021 American Control Conference
(ACC), pages 4879–4885. IEEE, 2021.

[42] B. Xue, N. Zhan, and M. Fr¨anzle.

Inner-approximating reach-avoid
sets for discrete-time polynomial systems. In 2020 IEEE 59th Annual
Conference on Decision and Control (CDC), pages 457–476. IEEE,
2020.

[43] Y. Zheng, G. Fantuzzi, and A. Papachristodoulou. Fast admm for sum-
of-squares programs using partial orthogonality. IEEE Transactions on
Automatic Control, 64(9):3869–3876, 2018.

13

Bai Xue received the B.Sc. degree in information
and computing science from Tianjin University of
Technology and Education, Tianjin, China, in 2008,
and the Ph.D. degree in applied mathematics from
Beihang University, Beijing, China, in 2014.

He is currently a Research Professor with the
Institute of Software, Chinese Academy of Sciences,
Beijing, China. Prior to joining the Institute of
Software, he worked as a Research Fellow with the
Centre for High Performance Embedded Systems,
Nanyang Technological University, from May, 2014
to September, 2015, and as a postdoctoral with the Department f¨ur Informatik,
Carl von Ossietzky Universit¨at Oldenburg, from November, 2015 to October,
2017. His research interests involve formal veriﬁcation of (stochastic/time-
delay) hybrid systems and AI.

Naijun Zhan received the B.Sc. degree in math-
ematics and the M.Sc. degree in computer science
from Nanjing University, Nanjing, China, in 1993
and 1996, respectively, and the Ph.D. degree in
computer science from the Institute of Software,
Chinese Academy of Sciences, Beijing, China, in
2000.

He was with the Faculty of Mathematics and
Information, University of Mannheim, Mannheim,
Germany, as a research fellow, from 2001 to 2004.
Since then, he joined the Institute of Software,
Chinese Academy of Sciences, Beijing, China, as an Associate Research
Professor, and later was promoted to be a Full Research Professor in 2008,
and a Distinguished Professor in 2015. His research interests include real-time,
embedded and hybrid systems, program veriﬁcation, concurrent computation
models, and modal and temporal logics.

Martin Fr¨anzle received the B.Sc. and M.Sc. de-
grees in informatics from the Department of Infor-
matics at Christian-Albrechts-Universitat¨ Kiel, Ger-
many, in 1986 and 1991, respectively, and the Ph.D.
degree in nature sciences from the Technical Faculty
of the Christian-AlbrechtsUniversitat Kiel, Germany,
in 1997. He is currently a Full Professor in hybrid
discrete-continuous systems with the Department of
Computing Science, Carl von Ossietzky Universit¨at
Oldenburg University, Oldenburg, Germany. At his
university as well as at international Ph.D. schools,
he teaches in the areas of formal methods for embedded system design,
the theory and application of hybrid discrete-continuous systems, design
principles of autonomous systems, as well as related subjects.

His research interests include modeling, veriﬁcation, and synthesis of
reactive, real-time, hybrid, and human-cyber-physical systems, as well as
applications in advanced driver assistance, highly automated cars and au-
tonomous driving, and power networks.

