2
2
0
2

t
c
O
9
1

]
h
p
-
m
s
a
l
p
.
s
c
i
s
y
h
p
[

3
v
1
3
7
6
0
.
9
0
2
2
:
v
i
X
r
a

Under consideration for publication in J. Plasma Phys.

1

GX: a GPU-native gyrokinetic turbulence
code for tokamak and stellarator design

N. R. Mandell1†, W. Dorland2,3,4, I. Abel3, R. Gaur3, P. Kim2, M.
Martin5, T. Qian6

1MIT Plasma Science and Fusion Center, Cambridge, MA, 02139, USA
2Department of Physics, University of Maryland, College Park, MD 20742, USA
3Institute for Research in Electronics and Applied Physics, University of Maryland, College
Park, MD 20742, USA
4Princeton Plasma Physics Laboratory, Princeton, NJ 08543, USA
5Sandia National Laboratories, Albuquerque, NM 87123, USA
6Department of Astrophysical Sciences, Princeton University, Princeton, NJ 08543, USA

(Received xx; revised xx; accepted xx)

GX is a code for solving the nonlinear gyrokinetic system for low-frequency turbulence in
magnetized plasmas, particularly tokamaks and stellarators. In GX, our primary motiva-
tion and target is fusion reactor design, rather than physics exploration or comprehensive
validation studies. This has led to several code and algorithm design decisions, speciﬁcally
chosen to prioritize time to solution. First, we have used a discretization algorithm that is
pseudo-spectral in the entire phase-space, including a Laguerre-Hermite pseudo-spectral
formulation of velocity space, which allows for smooth interpolation between coarse
gyroﬂuid-like resolutions and ﬁner conventional gyrokinetic resolutions. Additionally,
we have built GX to natively target graphics processors (GPUs), which are the fastest
computational platforms available today. Finally, we have taken advantage of the reactor-
relevant limit of small ρ∗ by using the radially-local ﬂux-tube approach. In this paper
we present details about the gyrokinetic system and the numerical algorithms used
to solve it in GX. We then present several numerical benchmarks against established
gyrokinetic codes in both tokamak and stellarator magnetic geometries to verify that
GX correctly simulates gyrokinetic turbulence in the small ρ∗ limit. Moreover, we show
that the convergence properties of the Laguerre-Hermite spectral velocity formulation
are quite favorable for nonlinear problems of interest. Coupled with GPU acceleration,
which we also investigate with scaling studies, this enables GX to be able to produce
useful turbulence simulations in minutes on one (or a few) GPUs. GX is open-source
software that is ready for fusion reactor design studies.

1. Introduction

Tokamaks and stellarators are fusion reactor concepts that use magnetic ﬁelds to
reduce the rate of loss of particles, momentum, and energy from the reactor’s toroidal
conﬁnement volume. Sophisticated but expensive technologies exist to inject fuel, angular
momentum, and energy into the conﬁnement volume at high rates. The fuel is a mixture
of deuterium nuclei (D, which is naturally plentiful) and tritium nuclei (T, which must be
manufactured). When the fuel pressure is high enough, DT fusion releases large amounts
of energy, one-ﬁfth in the form of helium nuclei and four-ﬁfths as energetic neutrons. The

† Email address for correspondence: nrm@mit.edu

 
 
 
 
 
 
2

charged helium nuclei are magnetically conﬁned. They heat the reacting fuel but also
dilute it, and so their inventory must be managed. The neutrons deposit their energy
in an external blanket, which can be designed to produce both usable heat and tritium.
The balances of supply and loss determine the operating conditions of the reactor.

In general, the conﬁning magnetic ﬁelds are produced both by magnets that surround
the toroidal conﬁnement region, and by currents ﬂowing through the conﬁned plasma.
To a great extent, the detailed spatial patterns of magnetic ﬁelds determine whether the
operating conditions of a tokamak or stellarator permit sustained thermonuclear fusion
reactions. Consequently, a key step in the design of any tokamak or stellarator reactor is
the evaluation of reactor performance as a function of magnetic geometry.

Turbulent transport is one major factor that limits reactor performance. Turbulence
in the fuel column is driven by the steep gradients of density, velocity, and temperature
that exist between the hot, sometimes rapidly ﬂowing, dense fuel core and the relatively
cold, diﬀuse environment. Under optimal conditions, the turbulent ﬂuctuations are small-
amplitude perturbations of the steady-state plasma density, temperature, etc., but these
ﬂuctuations nonetheless enhance losses, reduce insulation (by rapidly mixing cold plasma
from the outer region with hot plasma in the reactor core), and generally limit reactor
performance. Decades of meticulous experiments and direct observations of plasma
ﬂuctuations in many tokamaks and stellarators have established a good understanding
of when and where the turbulence arises, how intense it is, its dominant wavelengths and
frequencies, and so on. More than two decades of extensive validation campaigns have
established that gyrokinetic theory quantitatively describes this turbulence, and that
the turbulence properties depend sensitively on the details of the magnetic geometry.
The evaluation of the expected performance of any proposed tokamak or stellarator
reactor design therefore essentially requires some way to estimate properties of the plasma
turbulence that will arise as a result of the details of the proposed magnetic ﬁeld geometry.
Many gyrokinetic simulation codes have been used to study, test, and ultimately
validate our understanding of how plasma turbulence depends on geometry (see e.g.
Belli et al. 2008; Marinoni et al. 2009; Mynick et al. 2009; White 2019). Because there are
many algorithmic trade-oﬀs to consider when setting up a turbulence simulation code,
no single gyrokinetic code is “best” for these purposes. In this paper, we present GX,
the ﬁrst gyrokinetic simulation code that is aimed primarily at device design at reactor
scale, rather than physics exploration (the focus of the earliest codes) or comprehensive
validation studies (the focus of most existing gyrokinetic codes).

What does this mean in practice? It means primarily that we have prioritized time
to solution (together with quantitative uncertainty estimates) over comprehensiveness
and full realism, and that we aim to provide simple runtime control parameters to shift
smoothly from very fast but relatively less accurate calculations such as are of most
value in “outer loops” of a design activity, to more comprehensive, “standard” results
that are (much) more expensive to evaluate. Moreover, instead of retroﬁtting an existing
CPU-based code, we started from scratch, with every algorithmic design decision made
to target graphics processors (GPUs), which are the fastest computational platforms
available today. Finally, since we are interested in reactors speciﬁcally, we focused on the
reactor limit of small ρ∗ ≡ ρi/R, where ρi is the typical radius of gyration of an ion
in the plasma, and R is the major radius of the device. In the small ρ∗ limit, there are
major simpliﬁcations to be had, corresponding physically to the opening of a wide “gap”
between typical radial correlation lengths λcorr ∼ ρi of the turbulence and the radial
gradient scale lengths L ∼ R. In contrast, present-day devices† are not in the small ρ∗

† Because stellarators are non-axisymmetric, they have irreducible geometric variation within

3

limit, so turbulent eddies can be large enough to sample variations in the driving gradients
and other relevant plasma properties. To account for the “mesoscale” phenomena that
may result and to complete the many quantitative validation studies that have been
undertaken, many teams chose algorithms that handle radially non-local physics (often
called “global” codes). Codes that take advantage of the simpler, radially-local, small ρ∗
limit are known as “ﬂux-tube” codes, and our new code GX is in this category. Several
ﬂux-tube turbulence calculations can then be coupled together with a transport solver
to obtain transport time-scale proﬁle evolution on the device scale (Barnes et al. 2009).
This multi-scale approach is asymptotically valid in the limit of vanishing ρ∗ (Abel et al.
2008).

To verify that GX correctly simulates gyrokinetic turbulence in the small ρ∗ limit, we
present several tokamak and stellarator benchmarks of GX with established ﬂux-tube
gyrokinetic simulation codes. Note that while numerical veriﬁcation (benchmarking) is
code-speciﬁc, the extensive history of experimental validation of the gyrokinetic model is
inherited by any veriﬁed gyrokinetic code and need not be repeated. GX is open-source
scientiﬁc software† that is therefore ready for immediate design studies. Below, we show
that GX can produce useful turbulence simulations in minutes rather than hours or days,
using one (or a few) GPUs rather than hundreds or thousands of CPUs.

Our algorithmic approach to solving the gyrokinetic system is based in pseudo-spectral
methods. There is a long history of the use of Fourier pseudo-spectral methods in turbu-
lence simulations to discretize the conﬁguration space, especially in ﬂux-tube gyrokinetic
codes like GS2 (Kotschenreuther et al. 1995; Dorland et al. 2000), (non-global) GENE
(Jenko & Dorland 2001), CGYRO (Candy & Waltz 2003), and stella (Barnes et al.
2019). These methods have the advantage of spectrally-accurate evaluation of deriva-
tives. Building on this, we have developed a pseudo-spectral formulation for discretizing
the velocity space in the gyrokinetic system using a Laguerre-Hermite spectral basis
(Mandell et al. 2018). Projecting the gyrokinetic distribution function onto this basis
produces spectral modes that correspond to (gyro)ﬂuid moment quantities (like density,
parallel momentum, etc.), so that projection of the gyrokinetic equation corresponds to
a gyroﬂuid system with arbitrarily many moments. In the lowest-resolution limit the
model retains critical conservation laws (density, momentum, energy, and free energy)
and corresponds precisely to the well-established gyroﬂuid models of Dorland & Hammett
(1993); Beer & Hammett (1996); Snyder & Hammett (2001) when their ﬂuid closures are
employed. At moderate velocity-space resolution, one can use Landau-ﬂuid methods like
those of Hammett & Perkins (1990) or “hyper-collisions” to close the moment hierarchy.
At high velocity-space resolution the model corresponds directly to conventional gy-
rokinetic Eulerian models. A key advantage of our approach is therefore the ﬂexibility to
interpolate between these limits, depending on the desired balance of accuracy and speed
for a particular calculation. Our Fourier-Laguerre-Hermite pseudo-spectral algorithm is
also a good ﬁt for modern GPU computing: the algorithm relies heavily on fast transform
methods that are well-optimized on GPUs, and the memory requirements of spectral
algorithms are low enough to ﬁt a problem onto one or a few GPUs. Additionally, similar
work on Laguerre-Hermite spectral methods for gyrokinetics by Frei et al. (2020, 2021,

a given ﬂux surface that makes the small ρ∗ limit more challenging. The turbulent correlation
length λcorr must also be small compared to the distance that geometric diﬀerences within the
ﬂux surface change signiﬁcantly. This limit exists for small enough ρ∗, but it is roughly more
challenging by a factor of the aspect ratio R/a, where a is the minor radius of the torus. Many
candidate stellarator reactor designs have large aspect ratio.

† The source code is available at https://bitbucket.org/gyrokinetics/gx. Documentation

is available at https://gx.readthedocs.io/en/latest.

4

2022); Hoﬀmann et al. (2022) has shown promising results, especially with regards to
the convergence properties of the Laguerre-Hermite basis (albeit with more focus on the
accuracy of the collision model than in our design-centric approach).

The remainder of this paper is organized as follows: In Section 2 we describe the
gyrokinetic model. We describe the Fourier-Laguerre-Hermite pseudo-spectral formula-
tion of the gyrokinetic system in Section 3. Section 4 describes the magnetic geometry
and coordinates used for tokamaks and stellarators. The time discretization scheme is
described in Section 5. In Section 6, several benchmarks are presented comparing GX to
established ﬂux-tube gyrokinetic codes (GS2, CGYRO, GENE, and stella) for linear and
nonlinear cases in tokamak and stellarator geometries. Section 7 details the convergence
properties of the Laguerre-Hermite basis for nonlinear calculations, along with details
about GPU performance and multi-GPU scaling. We ﬁnally present conclusions and
future work in Section 8.

2. Gyrokinetic model equations

In GX we solve the δf gyrokinetic system. The literature of gyrokinetic theory is vast;
our notation and philosophy follow four particular references: Antonsen & Lane (1980),
Frieman & Chen (1982), Barnes et al. (2010), and Abel et al. (2013). The velocity space in
gyrokinetic theory is two-dimensional because the particles gyrate very rapidly around
their guiding center position, averaging over any ﬁeld variations that are encountered
in one gyration period so that we can ignore the instantaneous position of the particle
around its gyro-orbit. We choose to write the gyrokinetic equation in (v(cid:107), µ) coordinates,
where v(cid:107) is the speed in the direction of the magnetic ﬁeld and µ ≡ v2
⊥/2B is the
magnetic moment, with v⊥ is the speed perpendicular to the magnetic ﬁeld. Using µ
as a coordinate takes advantage of the fact that µ is a gyrokinetic adiabatic invariant.
These coordinates are not optimal for resolving the boundary layers in velocity that
occur in linear gyrokinetic theory where particle orbits are “trapped” in magnetic wells
on one side of the boundary layer and “passing” (untrapped) on the other. To resolve
the sharp boundary layers it is better to use energy and pitch angle as one’s velocity
space coordinates (as is done in the GS2 code, for example, which optimizes its velocity
space grid to enhance resolution near the trapped-passing boundary), but this leads
to considerably more complicated code blocks, particularly for stellarator applications.
However, in a suﬃciently turbulent plasma, these boundary layers will be broadened.
Thus we have selected the coordinates that lead to simpler, more eﬃcient code because
we are particularly interested in calculating nonlinear turbulence properties (as opposed
to linear stability conditions). These coordinates are also used in GENE and stella.

Following Eq. (144) of Abel et al. (2013), but expressing the equations in (v(cid:107), µ) velocity
coordinates, neglecting strong equilibrium ﬂows, and normalizing all quantities to non-
dimensional form (see Appendix A), we have

(cid:20)

+

vtsv(cid:107)

∂hs
∂t

ˆb + (cid:104)vχ(cid:105)R +

· ∇hs − vtsµ

(cid:16)ˆb · ∇B

(cid:17) ∂hs
∂v(cid:107)

(cid:21)

vd

τs
Zs
− (cid:104)vχ(cid:105)R · ∇(cid:12)

=

Zs
τs

FM s

∂(cid:104)χ(cid:105)R
∂t

(cid:12)EFM s + C(hs).

(2.1)

Here, we have split the total distribution function as Fs = F0s +δfs = FM s(1−ZsΦ/τs)+
hs, with Zs/τsFM sΦ(r, t) and hs(R, v(cid:107), µ, t) the Boltzmann and non-Boltzmann parts of
the δfs perturbation, respectively. The distribution function describes the probability
of ﬁnding a particle of species s with gyrocenter position R, velocity parallel to the

5

magnetic ﬁeld v(cid:107), and magnetic moment µ = v2
⊥/2B, where v⊥ is the speed in the plane
perpendicular to the magnetic ﬁeld. The equilibrium magnetic ﬁeld B has magnitude B =
B(r) and direction ˆb = B/B, and magnetic ﬂuctuations are given by δB = δB⊥ + δB(cid:107)
ˆb,
where the perpendicular and parallel components can be expressed in terms of the vector
ˆb via δB⊥ = ∇A(cid:107) × ˆb and δB(cid:107) = ˆb · (∇ × A⊥), respectively.
potential A = A⊥ + A(cid:107)
The gyrokinetic potential χ(r, t) is composed of the electrostatic potential Φ(r, t) and
the vector potential A(r, t),

χ(r, v, t) = Φ(r, t) − vtsv · A(r, t),

(2.2)

and is a function of particle position r, where r = R + ρ so that ρ is the gyroradius
vector that rotates at the gyrofrequency Ω and points from the gyrocenter (at R) to
the particle (at r). In Eq. (2.1) gyroangle dependence is eliminated by gyroaveraging the
potentials at ﬁxed gyrocenter position R, denoted by

(cid:104)χ(cid:105)R = (cid:104)Φ(cid:105)R − vtsv(cid:107)(cid:104)A(cid:107)(cid:105)R − vts(cid:104)v⊥ · A⊥(cid:105)R,
along with the corresponding gyroaveraged ﬂuctuating velocity (cid:104)vχ(cid:105)R = ˆb × ∇(cid:104)χ(cid:105)R. The
magnetic drift velocity is vd = ˆb × (v2
(cid:107)

ˆb · ∇ˆb + µ∇B)/B.

(2.3)

The equilibrium distribution function is a Maxwellian in energy E (which we take to

have no ﬂows),

F0s = FM s =

ns
(2πv2
ts)3/2

e−E =

ns
(2πv2
ts)3/2

e−v2

(cid:107)/2−µB,

(2.4)

and the ﬂuctuating gyroaveraged distribution function satisﬁes hs (cid:28) FM s. Note that in
Eq. (2.1), the gradient of FM at constant energy is denoted ∇(cid:12)
(cid:12)EFM . We also have the
following dimensionless species parameters: equilibrium density ns, equilibrium temper-
ature τs, mass ms, charge Zs, and thermal velocity vts = (cid:112)τs/ms.

The collision operator is denoted by C(h). Here we will follow Mandell et al. (2018)
and take the Dougherty model collision operator (Dougherty 1964). Expressed in Fourier
space, the like-species Dougherty collision operator is given by

Css(hs) = νss
(cid:16) ¯Ts

(cid:104)
(v2

+

(cid:26)(cid:20) ∂
∂v(cid:107)

(cid:18) ∂
∂v(cid:107)

+ v(cid:107)

(cid:19)

(cid:19)

+ 2

∂
∂µ

(cid:18) µ
B
J0s + (cid:2)¯u(cid:107)sv(cid:107)J0s + ¯u⊥sv⊥J1s

∂
∂µ

+ µ

(cid:105)

+ k2

⊥ρ2
s

(cid:21)

hs

(cid:3)(cid:17)

(cid:111)

,

FM s

(2.5)

(cid:107) − 1) + 2(µB − 1)

with the ﬁeld-particle terms given by

(cid:90)

(cid:90)

¯u(cid:107)s ≡

¯u⊥s ≡

d3v J0s v(cid:107) hs,

d3v J1s v⊥ hs,

¯Ts =

1
3

( ¯T(cid:107)s + 2 ¯T⊥s) ≡

(cid:90)

1
3

d3v

(cid:104)
(v2

(cid:107) − 1) + 2(µB − 1)

(cid:105)

J0shs.

(2.6)

(2.7)

(2.8)

Here we have the Bessel functions J0s = J0(αs) and J1s = J1(αs) that result from the
Fourier transform of gyroaverage operators, with αs =

2µBbs and bs = k2

√

⊥ρ2
s.

The Dougherty collision operator is a good physical model of like-particle collisions,
which are important to gyrokinetic dynamics. It captures the physics of the collision
operator presented in Abel et al. (2008), except that our collision frequency does not have
velocity dependence, and there is no diﬀerence between the rates of pitch-angle scattering
and slowing down. It is also attractive because its Laguerre-Hermite transform is sparse.

6

More realistic collision operators could be included in our model in the future, such as
those in Frei et al. (2021), which employs a similar Laguerre-Hermite spectral-velocity
approach as ours. The Dougherty model operator can also be extended to multiple species
(Francisquez et al. 2022).

The electromagnetic potentials are determined by the gyrokinetic equivalent of
Maxwell’s equations. The electrostatic potential is determined by the quasineutrality
equation,

(cid:88)

s

Z 2
s ns
τs

Φ =

(cid:88)

s

(cid:90)

Zsns

d3v (cid:104)hs(cid:105)r,

(2.9)

where note that here the gyroaverage on the right-hand side is taken at constant particle
position r. The parallel magnetic vector potential is determined by the parallel component
of Ampère’s law,

− ∇2

⊥A(cid:107) =

(cid:90)

Zsnsvts

βref
2

(cid:88)

s

d3v v(cid:107)(cid:104)hs(cid:105)r,

(2.10)

with βref = 8πnref Tref /B2 the plasma beta of the reference species. The perpendicular
component of Ampère’s law determines the perpendicular component of the vector
potential, but is more conveniently expressed in terms of the parallel magnetic ﬂuctuation,
δB(cid:107):

∇2

⊥δB(cid:107) = −

βref
2

∇⊥∇⊥ :

(cid:90)

nsτs

(cid:88)

s

d3v (cid:104)v⊥v⊥hs(cid:105)r.

(2.11)

Finally, note that we can deﬁne an auxiliary distribution function

gs = hs −

Zs
τs

(cid:104)χ(cid:105)RFM s,

(2.12)

which eliminates the time derivative on the right-hand side of Eq. (2.1), resulting in

(cid:20)
vtsv(cid:107)

+

∂gs
∂t

ˆb + (cid:104)vχ(cid:105)R +

τs
Zs

(cid:21)

vd

· ∇hs − vtsµ

(cid:16)ˆb · ∇B

(cid:17) ∂hs
∂v(cid:107)

= −(cid:104)vχ(cid:105)R · ∇(cid:12)

(cid:12)EFM s + C(hs).

(2.13)

This is the form of the gyrokinetic equation that we will solve numerically.

3. Fourier-Laguerre-Hermite pseudo-spectral formulation

Here we present the Fourier-Laguerre-Hermite formulation of the electromagnetic δf
gyrokinetic system. Following Mandell et al. (2018), and extending to include electromag-
netic ﬂuctuations, we solve the gyrokinetic equation by taking a Fourier transform in the
perpendicular directions (which we will call x and y; the parallel direction will be z), a
Laguerre transform in µB, and a Hermite transform in v(cid:107). Note that there are no major
disadvantages to the choice of µB vs. µ as a coordinate, and our choice to use µB for
the eﬀective coordinate grid simpliﬁes several expressions in the spectral representation.
We deﬁne the Fourier-Laguerre-Hermite transform of the distribution function h as

L(cid:96)HmFk⊥hs = 2π

(cid:90) ∞

0

dµB ψ(cid:96)(µB)

(cid:90) ∞

−∞

(cid:90)

dv(cid:107) φm(v(cid:107))

dx dy e−ik⊥·Rhs(x, y, z, v(cid:107), µ)

≡ H s

(cid:96),m(k⊥, z)

(3.1)

where ψ(cid:96)(µB) = (−1)(cid:96)L(cid:96)(µB) with L(cid:96)(µB) the Laguerre polynomials, and φm(v(cid:107)) =

7

√

Hem(v(cid:107))/
m! with Hem(v(cid:107)) the probabilists’ Hermite polynomials. In Fourier space,
gyroaveraging operations (whether at constant R or constant r) simply become multipli-
cations by Bessel functions, so that the Fourier transform of the gyroaveraged potential
is

Fk⊥ (cid:104)χ(cid:105)R = J0sΦ − vtsv(cid:107)J0sA(cid:107) +

τs
Zs

2µB

J1s
αs

δB(cid:107),

(3.2)

where J0s = J0(αs) = J0(
gyroaveraged potential by a Maxwellian and Laguerre-Hermite transforming results in

s, and similarly for J1s. Weighting the

2µBbs), with bs = k2

⊥ρ2

√

L(cid:96)HmFk⊥ (cid:104)χ(cid:105)RFM s = J s

(cid:96) Φδm0 − vtsJ s

(cid:96) A(cid:107)δm1 +

τs
Zs

(cid:0)J s

(cid:96) + J s

(cid:96)−1

(cid:1) δB(cid:107)δm0,

(3.3)

with

J s

(cid:96) ≡

(cid:90) ∞

0

dµB ψ(cid:96)J0s((cid:112)2µBbs)e−µB =

(cid:19)(cid:96)

(cid:18)

−

bs
2

1
(cid:96)!

e−bs/2

((cid:96) (cid:62) 0).

(3.4)

The Fourier-Laguerre-Hermite transform of the auxilliary distribution function g is then

L(cid:96)HmFk⊥ gs ≡ Gs

(cid:96),m(k⊥, z) = H s

(cid:96),m−

Zs
τs

J s

(cid:96) Φδm0+

Zsvts
τs

(cid:96) A(cid:107)δm1−(cid:0)J s
J s

(cid:96) + J s

(cid:96)−1

(cid:1) δB(cid:107)δm0.
(3.5)

The Fourier-Laguerre-Hermite transform of Eq. (2.13) then gives

∂Gs
(cid:96),m
∂t

+ N s

(cid:96),m + vts∇(cid:107)

(cid:0)√

m + 1 H s
√

(cid:96),m+1 +

m + 1 H s

√

m H s

(cid:1)

(cid:96),m−1
√

(cid:96),m+1 − (cid:96)
√

m H s

(cid:96),m−1 + ((cid:96) + 1)

+ (cid:96)
(cid:104)(cid:112)(m + 1)(m + 2) H s
(cid:104)

(cid:104)

+ vts

− ((cid:96) + 1)
√

+ i

ωκ
d

τs
Zs
τs
Zs
(cid:96),m + Css
= Ds

ω∇B
d

+ i

(cid:96),m.

m + 1 H s

m H s

(cid:96)+1,m−1

(cid:96)−1,m+1
(cid:105)

(cid:96),m+2 + (2m + 1)H s

∇(cid:107) ln B
(cid:96),m + (cid:112)m(m − 1) H s

(cid:105)

(cid:96),m−2

((cid:96) + 1) H s

(cid:96)+1,m + (2(cid:96) + 1)H s

(cid:96),m + (cid:96) H s

(cid:96)−1,m

(cid:105)

(3.6)

Parallel convection, including bounce motion induced by magnetic trapping in the equi-
librium magnetic ﬁeld, is described by the terms proportional to ∇(cid:107) ≡ ˆb · ∇. The ∇(cid:107)H
terms are evaluated spectrally by Fourier transforming in z:

with

∇(cid:107)H ≡ F −1
k(cid:107)

[ik(cid:107)Fk(cid:107) H],

(cid:90)

Fk(cid:107) H =

dz e−ik(cid:107)zH(z).

(3.7)

(3.8)

Additional details about this operation are given in Section 4.4. Toroidicity gives rise to
d = (1/B)ˆb × (ˆb · ∇ˆb) · ik⊥
the terms proportional to the curvature drift operator iωκ
d = (1/B2)ˆb × ∇B · ik⊥ is the ∇B. Drive terms from
and the ∇B drift operator iω∇B

8

equilibrium gradients, denoted by D(cid:96),m, are given by

Ds

(cid:96),m=0 = iω∗

(cid:20) 1
Lns

J s

(cid:96) +

1
LT s

(cid:2)(cid:96)J s

(cid:96)−1 + 2(cid:96)J s

(cid:96) + ((cid:96) + 1)J s

(cid:96)+1

(cid:21)

(cid:3)

Φ

(cid:96)−1] +

1
LT s

(cid:2)(cid:96)J s

(cid:96)−2 + 3(cid:96)J s

(cid:96)−1 + (3(cid:96) + 1)J s

(cid:96) + ((cid:96) + 1)J s

(cid:96)+1

[(cid:96)J s

(cid:96)−1 + (2(cid:96) + 1)J s

(cid:96) + ((cid:96) + 1)J s

(cid:96)+1]

(cid:21)

A(cid:107)

1
√
2

iω∗

1
LT s

[J s

(cid:96) + J s

(cid:96)−1]δB(cid:107)

+

τs
Zs

iω∗

(cid:20) 1
Lns

Ds

(cid:96),m=1 = −vtsiω∗

Ds

(cid:96),m=2 =

1
√
2

Ds

(cid:96),m=3 = −vts

Ds

(cid:96),m>3 = 0,

iω∗
(cid:114) 3
2

[J s

(cid:96) + J s
(cid:20) 1
Lns
1
LT s

J s

J s

(cid:96) Φ +

(cid:96) +

1
LT s
τs
Zs

iω∗

1
LT s

J s

(cid:96) A(cid:107)

(cid:21)
(cid:3)

δB(cid:107)

(3.9)

where iω∗ ≡ −∇x · ˆb × ik⊥ = iky, and Lns and LT s are the normalized density and
temperature gradient scale lengths, respectively.
The like-species collision terms are given by

bs

(cid:0)J s

+ νss

(cid:96),0 = − νss (bs + 2(cid:96) + 0) H s
Css
(cid:96),0
(cid:16)(cid:112)
(cid:96) + J s
(cid:96),1 = − νss (bs + 2(cid:96) + 1)H s
Css
Css
(cid:96),2 = − νss (b + 2(cid:96) + 2) H s
Css
(cid:96),m = − νss(bs + 2(cid:96) + m)H s

(cid:96)−1
(cid:96),1 + νss J s
√
(cid:96),2 + νss
(cid:96),m,

(cid:96) ¯u(cid:107)s,
2 J s
(cid:96)

¯Ts,
(m > 2)

(cid:1) ¯u⊥s + 2 (cid:2)(cid:96)J s

(cid:96)−1 + 2(cid:96)J s

(cid:96) + ((cid:96) + 1)J s

(cid:96)+1

(cid:3) ¯Ts

(cid:17)

,

with the ﬁeld-particle terms given by

(cid:90)

¯u(cid:107)s =

d3vJ0sv(cid:107)hs =

(cid:96) H s
J s

(cid:96),1,

(cid:88)

(cid:96)=0

(cid:90)

¯u⊥s =

d3vJ1sv⊥hs =

(cid:112)

bs

(cid:88)

(cid:96)=0

(cid:0)J s

(cid:96) + J s

(cid:96)−1

(cid:1) H s

(cid:96),0,

(cid:90)

¯T(cid:107)s =

d3vJ0s

(cid:16)

v2
(cid:107) − 1

(cid:17)

hs =

√

2

(cid:96) H s
J s

(cid:96),2,

(cid:88)

(cid:96)=0

(cid:90)

¯T⊥s =

d3vJ0s (µB − 1) hs =

(cid:88)

(cid:96)=0

(cid:2)(cid:96)J s

(cid:96)−1 + 2(cid:96)J s

(cid:96) + ((cid:96) + 1)J s

(cid:96)+1

(3.10)

(3.11)

(3.12)

(3.13)

(3.14)

(cid:3) H s

(cid:96),0.

The nonlinear terms are evaluated pseudo-spectrally in (x, y, z, µB, m) space to avoid

convolutions in both Fourier and Laguerre coeﬃcients as (Mandell et al. 2018),

N s

(cid:96),m = L(cid:96)HmFk⊥ [(cid:104)vχ(cid:105)R · ∇gs],

(3.15)

where the complete pseudo-spectral expression for this term is given in Appendix B.

Taking the Fourier-Laguerre-Hermite transform of the ﬁeld equations, the quasineu-

trality equation, Eq. (2.9), becomes

(cid:88)

s

Z 2
s ns
τs

Φ =

(cid:88)

s

(cid:90)

Zsns

d3v J0shs =

(cid:88)

s

Zsns

(cid:88)

(cid:96)=0

(cid:96) H s
J s

(cid:96),0,

(3.16)

the parallel component of Ampère’s law, Eq. (2.10), becomes
(cid:90)

Zsnsvts

d3v v(cid:107)J0shs =

Zsnsvts

k2
⊥A(cid:107) =

βref
2

(cid:88)

s

βref
2

(cid:88)

s

9

(cid:96) H s
J s

(cid:96),1,

(3.17)

(cid:88)

(cid:96)=0

and the perpendicular component of Ampère’s law, Eq. (2.11), becomes

δB(cid:107) = −

(cid:90)

nsτs

βref
2

(cid:88)

s

d3v 2µB

J1s
αs

hs = −

βref
2

(cid:88)

s

nsτs

(cid:88)

(cid:96)=0

(J s

(cid:96) + J s

(cid:96)−1)H s

(cid:96),0.

(3.18)

To solve these ﬁeld equations numerically, it is more convenient to express them in terms
of G rather than H, which results in

(cid:88)

s

Z 2
s ns
τs

(cid:32)

1 −

(cid:88)

(cid:96)=0

(cid:33)

(J s

(cid:96) )2

Φ −

(cid:88)

s

Zsns

(cid:88)

(cid:96)=0

(cid:96) (J s
J s

(cid:96) + J s

(cid:96)−1)δB(cid:107) =

(cid:88)

s

Zsns

(cid:88)

(cid:96)=0

(cid:96) Gs
J s
(cid:96),0

(cid:32)

k2
⊥ +

βref
2

(cid:88)

s

Z 2
s ns
ms

(cid:88)

(J s

(cid:96) )2

(cid:96)=0

(cid:33)

A(cid:107) =

βref
2

(cid:88)

s

Zsnsvts

(cid:96) Gs
J s
(cid:96),1

(cid:88)

(cid:96)=0

(3.19)

(3.20)

βref
2

(cid:88)

s

Zsns

(cid:88)

(cid:96)=0

(cid:96) (J s
J s

(cid:96) + J s

(cid:96)−1)Φ +

(cid:32)

1 +

βref
2

= −

(cid:88)

s
βref
2

(J s

(cid:96) + J s

(cid:96)−1)2

(cid:33)

δB(cid:107)

nsτs

(cid:88)

(cid:96)=0

(cid:88)

s

nsτs

(cid:88)

(J s

(cid:96) + J s

(cid:96)−1)Gs

(cid:96),0. (3.21)

(cid:96)=0

3.1. Hyper-dissipation and closure

Grid-scale dissipation terms are used to ensure numerical stability and robustness. For

dissipation in conﬁguration space, we employ a hyper-viscosity term of the form

(cid:19)

(cid:18) ∂G(cid:96),m
∂t

hyper-viscosity

= −D

(cid:18) k⊥

(cid:19)n

k⊥,max

G(cid:96),m,

(3.22)

where typical values of the variable parameters for nonlinear simulations are D = 0.05
and n = 4. This provides a sink at the shortest wavelengths in the domain, which can be
useful in nonlinear simulations to avoid spectral pileup.

Fine-scale structure in velocity space must also be regulated. The Dougherty collision
operator fulﬁls this purpose by acting increasingly strongly on higher Laguerre and
Hermite moments, limiting their amplitude. Thus for a given collisionality, there is a
physical cutoﬀ at some L and M beyond which ﬁne scales in velocity space are completely
wiped out by collisions. At this point, closure of the Laguerre-Hermite moment series
by simple truncation (setting G(cid:96),m = 0 for (cid:96) (cid:62) L or m (cid:62) M) is justiﬁed. This
is the simplest high-resolution closure, but not the only option. One can also obtain
an asymptotically correct collisional closure by assuming the collision term becomes
dominant in the unresolved moment equations (Zocco et al. 2015; Loureiro et al. 2016).
In the limit of low collisionality or lower Laguerre–Hermite resolution, however, the
closure situation is more complicated. Unresolved moments are not expected to be
negligible at collisionalities of interest, so closure by truncation will generally give poor
results. One possible approach is to follow the collisionless closure approach pioneered
by Hammett & Perkins (1990), which was used and extended in the gyroﬂuid models
of Dorland & Hammett (1993); Beer & Hammett (1996); Snyder & Hammett (2001);
Smith (1997) to model parallel, toroidal, and nonlinear FLR phase mixing. However, the
development of generalized closures in toroidal geometry for a system with an arbitrary

10

number of moments is complicated and beyond the scope of the current work. Instead,
we have found that employing a hyper-collision operator allows well-behaved results even
with simple closure by truncation at relatively low resolution. Analogous to the hyper-
viscosity term in conﬁguration space, the hyper-collision operator provides a sharp sink
on the highest Laguerre and Hermite modes in the domain. We take the hyper-collision
operator to be of the form
(cid:18) ∂G(cid:96),m
∂t

(cid:20)
νhyp
m M

(cid:16) m
M

(cid:18) (cid:96)
L

+ νhyp

= −vts

(cid:96) L

G(cid:96),m

(cid:19)p(cid:96)(cid:21)

(cid:17)pm

(cid:19)

hyper-collisions

(m > 2 or (cid:96) > 1),

where typical values for the variable parameters are νhyp
m = 0.1 and p(cid:96) = pm = 6,
and we ensure that the operator conserves density, momentum, and energy in the long-
wavelength limit by only operating on moments with m > 2 or (cid:96) > 1. Similar hyper-
collision operators (in Hermite space only) have been used in other contexts (Parker &
Dellar 2015; Parker 2015; Loureiro et al. 2016), and Parker (2015) also develops theory
of a ‘hypercollisional plateau’ where the behavior of the operator is insensitive to the
choice of the variable parameters.

(cid:96) = νhyp

(3.23)

4. Magnetic geometry, choice of coordinates, and boundary conditions
The geometric structure of a tokamak’s magnetic ﬁeld is axisymmetric, meaning there
are no geometric variations that distinguish points at diﬀerent toroidal angles. Most (but
not all) gyrokinetic studies have focused on the axisymmetric limit. Stellarator magnetic
ﬁelds are not axisymmetric. We have selected coordinates that are convenient for either
case. Our spatial coordinates are aligned with the local background magnetic ﬁeld so
that we are able to eﬃciently resolve perturbations whose parallel wavelengths λ(cid:107) are
O(ρ−1
∗ ) longer than the wavelengths λ⊥, perpendicular to the local magnetic ﬁeld; these
ﬁeld-line-following coordinates reduce the number of grid points required to resolve the
turbulence by a factor of ρ∗. In the case of stellarators, the lack of axisymmetry implies
that even when one can describe the turbulence successfully as radially local, it might
happen that the geometric variations in the binormal direction (within the magnetic
surface) are not numerically well-separated from λ⊥, even for reactor-relevant values of
ρ∗. We have chosen not to address this possibility; we assume that ρ∗ is small enough that
the turbulence within each ﬂux tube in a given ﬂux surface is not aﬀected by turbulence
occurring in a diﬀerent ﬂux tube within the same surface.

In this section, we will start with the general form of a divergence-free magnetic ﬁeld,
deﬁne key important quantities, various coordinate systems, and brieﬂy explain how they
are used to obtain the geometry-dependent coeﬃcients in the gyrokinetic model. Please
refer to Appendix C for speciﬁc mathematical details.

4.1. Axisymmetric conﬁgurations (tokamaks)

We start from the Clebsch form (D’haeseleer et al. 1991) for the equilibrium magnetic

ﬁeld,

B = ∇α × ∇ψ.

(4.1)

We restrict our attention to solutions whose magnetic ﬁeld lines lie on closed nested
toroidal surfaces, known as ﬂux surfaces. Here, ﬂux surfaces are labeled by ψ, a radial-
like coordinate. On each surface, the binormal coordinate α is a ﬁeld-line label such that
a line of constant α gives the path of a magnetic ﬁeld line.

For tokamaks, we choose to deﬁne the coordinate ψ to be the enclosed poloidal ﬂux

divided by 2π,

11

1
(2π)2
and the binormal coordinate α is chosen to be

Ψpol
2π

ψ =

=

(cid:90)

V

dτ B · ∇θ,

α = φ − q(ψ)θ,

(4.2)

(4.3)

where φ and θ are “straight-ﬁeld-line” toroidal and poloidal angles, respectively, and

q(ψ) =

1
(2π)2

(cid:90) 2π

(cid:90) 2π

dφ

0

0

dθ

B · ∇φ
B · ∇θ

,

(4.4)

is the safety factor.

4.2. Non-axisymmetric conﬁgurations (stellarators)

For stellarators, we ﬁnd it more convenient to write the magnetic ﬁeld in Clebsch form

as

with the toroidal ﬂux chosen as the radial-like coordinate,

B = ∇ψ × ∇α,

ψ =

Ψtor
2π

=

1
(2π)2

(cid:90)

V

dτ B · ∇φ,

and the binormal coordinate chosen to be

α = θ − ι(ψ)φ.

(4.5)

(4.6)

(4.7)

Here, ι(ψ) = 1/q(ψ) is the rotational transform, and once again φ and θ are “straight-
ﬁeld-line” toroidal and poloidal angles, respectively.

4.3. Field-aligned coordinate system

Since GX is a local ﬂux-tube code, it is advantageous to use a ﬁeld-aligned coordinate
system. Therefore, we introduce the ﬁeld-aligned, ﬂux-tube coordinates (x, y, z) used
by Beer et al. (1995). Here, x = x(ψ) is a radial coordinate, y = y(α) is a binormal
coordinate, and z = z(θ) is a ﬁeld-line-following coordinate that parametrizes distance
along the equilibrium magnetic ﬁeld using the poloidal angle θ. The coordinates x and y
are normalized forms of ψ and α such that

x =

y =

dx
dψ
dy
dα

(ψ − ψ0),

(α − α0),

(4.8)

(4.9)

where ψ0 and α0 are the values of equilibrium ψ and α at the center of the ﬂux tube.
The coordinates (x, y, z) have units of length. In the local ﬂux-tube, x and y vary on
the length scale of the gyroradius whereas z varies on the length scale of the machine
size. We require an equispaced coordinate z along the ﬁeld line, which is needed to
utilize the Fourier spectral treatment of the parallel derivative terms in the gyrokinetic
equation. The procedure for obtaining an equispaced, equal-arc z coordinate is provided
in Appendix C.

Upon deﬁning the ﬁeld-aligned coordinate system, we can calculate the geometric
coeﬃcients required for a GX run, as described brieﬂy in Appendix C. For a 3D
equilibrium, GX can read the output data generated by the VMEC code (Hirshman

12

& Whitson 1983). For a 2D axisymmetric equilibrium, GX can use a local equilibrium
deﬁned using a Miller parametrization (Miller et al. 1998). The user also has the option
to work with simpler geometries like a slab or a cylindrical Z-pinch. Besides these native
geometry options, GX can also read geometry data generated by the geometry module
in the GS2 code; for example, this enables the capability to use experimentally-relevant
geometry derived from an EFIT equilibrium reconstruction.

4.4. Boundary conditions

In the ﬂux tube approach we assume statistical periodicity in the perpendicular (x, y)
plane. In the parallel direction, we use the “twist-and-shift” boundary condition (Beer
et al. 1995), which in the spectral representation can be accomplished by linking modes
with diﬀerent kx values into an extended z domain, such that

Hkx,ky (z) = Hkx+δk,ky (z + 2π)

(4.10)

with δk = 2πky ˆs. We can then perform a Fourier transform on each extended z domain
to evaluate the parallel streaming terms as given by Eq. (3.7).

A Fourier representation naturally enforces a periodic boundary condition on h at
the ends of each extended domain, but this is not the physically correct boundary
condition for non-zonal modes, which should have a zero incoming boundary condition.
This boundary condition cannot be enforced directly in Hermite space, so we instead use
a wave-absorbing layer (see e.g. Durran 2010) near the ends of each extended z domain
for the non-zonal components of h to damp out perturbations re-entering the domain.
Following Beer (1995), we use a damping ﬁlter that is zero in most of the domain and
ramps up smoothly near the ends of the extended domain as d(ˆz) = A[1 − 2ˆz2/(1 + ˆz4)],
where ˆz = (z − zend)/zwidth is a normalized distance from the ends zend. The width
zwidth and the scaling factor A are adjustable parameters; we have empirically found
zwidth = Lz/8 and A = 5v(cid:107),max/Lz to work well, where Lz the total length of the
extended domain and we approximate v(cid:107),max ≈
2M as the maximum parallel velocity
on the collocation grid corresponding to the Hermite basis. The wave-absorbing damping
operation can then be expressed as

√

(cid:19)

(cid:18) ∂G(cid:96),m
∂t

ends

= −d(ˆz)H(cid:96),m.

(|ˆz| < 1, ky (cid:54)= 0)

(4.11)

The zonal modes (ky = 0) are not ﬁltered because these modes should be physically
periodic, so the natural periodic boundary condition from the Fourier representation is
the correct one.

The standard twist-and-shift boundary condition can be ill-suited for low magnetic
shear regions, particularly in stellarators. Martin et al. (2018) have developed a gener-
alization of the twist-and-shift boundary condition that alleviates some of these issues
by using local (rather than global) magnetic shear in the ‘twist’. Investigation of a non-
twisting ﬂux-tube boundary condition (Ball & Brunner 2021) using GX is also in progress.

5. Timestepping schemes

GX uses explicit time integration methods to advance the system. Along with several
standard Runge-Kutta (RK) and strong-stability-preserving Runge-Kutta (SSP RK)
schemes (Gottlieb et al. 2001), we also provide options for the SSP ten-stage fourth-order
method of Ketcheson (2008) (a low-storage method ideal for the memory constraints of
GPU computing) and SSP RK schemes with extended stability (SSPx RK), as described

below. Additionally, the sparse banded structure of the linear system of Eq. (3.6) and the
fact that the ﬁeld equations only involve the lowest order moments (instead of requiring
integration over all velocity space) could allow the development of eﬃcient implicit-
explicit (IMEX) schemes for electron dynamics that avoid the timestep restriction of the
fast electron motion; this will be a topic for future work.

13

In all of our timestepping schemes the timestep size ∆t is constrained by the Courant-
Friedrichs-Levy (CFL) condition. For nonlinear simulations we monitor the CFL con-
straint due to the nonlinear term, such that
(cid:18) ∆x

(cid:19)

∆t < min

max(vE,x)

,

∆y
max(vE,y)

(5.1)

with ∆x and ∆y the grid spacing in x and y, respectively. The timestep must also be
small enough to resolve the fastest linear frequencies in the system according to the
stability properties of the particular scheme. Currently, one must manually adjust the
timestep to ensure linear stability. An eigenvalue solver could be used to pre-compute the
maximum eigenvalues of the linear system to provide an additional automatic timestep
constraint, but this is left for future work.

5.1. SSPx RK: Strong stability preserving Runge-Kutta schemes with extended stability

Hammett (2022) has shown that modifying SSP RK algorithms to use a mid-point
form can extend the stability region while retaining the SSP properties. In the following,
we will write Eq. (3.6) compactly as

∂G
∂t

= F (G, χ),

(5.2)

and we will write Gn = G(tn) and Gi for intermediate stages. Note that at each
intermediate stage, we must solve the ﬁeld equations to obtain the ﬁelds consistent with
the distribution function at that stage.

The two-step second-order scheme is given by

G1 = Gn + α∆tF (Gn, χn)
¯G1 = (1 − β)Gn + βG1
G2 = ¯G1 + α∆tF (G1, χ1)

Gn+1 =

1
2

(Gn + G2),

(5.3)

(5.4)

(5.5)

(5.6)

√

√

2 and β =

where α = 1/
2−1 gives the maximum stable timestep, ∆tmax = ∆t1,max/α,
with ∆t1,max the maximum stable timestep for a forward Euler step (and thus a standard
SSP method).

The three-step third-order scheme is given by

G1 = Gn + a1∆tF (Gn, χn)
˜G = (1 − w1)Gn + w1G1
G2 = ˜G + a2∆tF (G1, χ1)
¯G = (1 − w2 − w3)Gn + w2G2 + w3G1

Gn+1 = ¯G + a3∆tF (G2, χ2),

(5.7)

(5.8)

(5.9)

(5.10)

(5.11)

with optimal coeﬃcients a = a1 = a2 = a3 = (1/6)1/3, w1 = (−1 +
w2 = (−1 + 62/3 −

9 − 2 · 62/3)/2,
9 − 2 · 62/3)/2, and w3 = 1/a − w2(1 + w1). This gives a stable

√

√

14

Figure 1. Normalized growth rates (top) and real frequencies (bottom) as a function of the
normalized binormal wavenumber ky from GX (blue circles and dotted lines) and GS2 (yellow
squares) for Cyclone base case parameters using a Boltzmann electron response.

timestep larger than the standard SSP RK3 method by a factor of a−1 ≈ 1.817 while
maintaining third-order accuracy.

We use the third-order SSPx RK scheme for all of the benchmark calculations presented

in Section 6.

6. Numerical benchmarks

In this section we show a variety of linear and nonlinear benchmarks of GX by compar-
ing results with widely-benchmarked gyrokinetic codes (GS2, CGYRO, stella, GENE)
in both tokamak and stellarator geometry. The numerical resolution and associated
parameters used in each case are given in Appendix D.

6.1. Tokamak benchmarks: Cyclone base case

For benchmarks in tokamak geometry, we choose a conﬁguration based on the ‘Cyclone
base case’ (CBC), a widely-used benchmark case with concentric circular ﬂux surfaces
(Dimits et al. 2000). For this we use a Miller local equilibrium (Miller et al. 1998) with
R0/a = 2.77778, r/a = 0.5, q = 1.4, ˆs = 0.8, κ = 1.0, δ = 0.0. Unless otherwise
noted, the normalized gradient scale lengths are taken to be a/Lni = a/Lne = 0.8,
a/LT i = a/LT e = 2.49, and we also take Ti = Te. This series of benchmarks is inspired
by the set of tokamak benchmarks chosen for stella by Barnes et al. (2019).

6.1.1. Linear results

We ﬁrst make a linear comparison taking a Boltzmann (adiabatic) electron response,

so that the quasineutrality equation (2.9) reduces to

(cid:90)

d3v (cid:104)hs(cid:105)r =

(cid:88)

(cid:96)=0

J(cid:96)H(cid:96),0 =

Te
Ti

[Φ − (cid:104)(cid:104)Φ(cid:105)(cid:105)] + Φ,

(6.1)

where (cid:104)(cid:104)Φ(cid:105)(cid:105) denotes the ﬂux-surface average of Φ. In Fig. 1 we show normalized growth
rates (top panel) and real frequencies (bottom) as a function of the normalized binormal

15

Figure 2. Normalized growth rates (top) and real frequencies (bottom) as a function of the
normalized binormal wavenumber ky from GX (blue circles and dotted lines), GS2 (yellow
squares), and stella (green inverted triangles) for Cyclone base case parameters using a kinetic
electron response in the electrostatic limit (βref = 10−5). Ion scales (ITG and TEM) are shown
in (a) and electron scales (ETG) are shown in (b).

Figure 3. Normalized growth rates (top) and real frequencies (bottom) as a function of
from GX (blue circles and dotted lines) and GS2 (yellow squares)
the reference beta βref
for Cyclone base case parameters using a kinetic electron response, taking kyρi = 0.3. Both
codes show the transition from ion-temperature-gradient (ITG) instability at low βref to
kinetic-ballooning-mode (KBM) instability at high βref .

wavenumber kyρi. GX results are shown with open blue circles connected by dashed
lines, while results from GS2 are shown with yellow squares. The agreement between the
two codes is very good across the range of unstable ky values. Here we included a small
amount of collisions in both codes to provide velocity-space regularization, taking the
normalized ion collision frequency to be νii = 10−2 vti/a. Hyper-collisions are not used
in GX in this case.

We next make linear comparisons using kinetic electrons between GX, GS2, and stella.
Fig. 2a shows normalized growth rates and real frequencies as a function of kyρi at ion
scales in the electrostatic limit, with βref = 10−5 (we retain electromagnetic ﬂuctuations
even at low β to alleviate the timestep restriction from the electrostatic ωH mode (Lee

16

Figure 4. Left: Time traces of
ion heat ﬂux Qi, normalized to gyro-Bohm units,
QGB = niTivtiρ2
for the CBC with a Boltzmann electron response from GX with
moderate (blue) and coarse (red) velocity resolution, CGYRO (yellow), and GS2 (green). Right:
Time-averaged gyro-Bohm-normalized ion heat ﬂux, Qi/QGB, as a function of the normalized
inverse ion temperature gradient scale length, a/LT i.

i /a2,

1987)). In this case we take νee = 10−2 vti/a and νii = 1.65 × 10−4 vti/a; for best
comparison with GX, we use the stella’s Dougherty collision model option, even though
stella also includes a more accurate Fokker-Planck collision operator (which produces
results that agree even more closely with GS2 in this case). Hyper-collisions were again
not used in GX. We observe excellent agreement between GX and stella for the ITG
branch (ω > 0), but the agreement is not as good for the trapped-electron-mode (TEM)
branch (ω < 0). If there is a weakness in our scheme it is accurately capturing linear
TEM instability, which requires resolving sharp trapped-passing boundaries in velocity
space (which is not optimal in v(cid:107), µ coordinates) and is sensitive to the details of the
collision operator (our Dougherty model collision operator is not as accurate as the
collision operators in other standard gyrokinetic codes like GS2). Indeed, even getting
this level of agreement required 128 Hermite modes in GX (for more resolution details,
see Appendix D). A more detailed study of TEM modes is left to future work, where we
will explore more accurate collision operators and methods to enhance convergence. We
also show growth rates and frequencies as a function of kyρi at electron scales in Fig. 2b,
again in the electrostatic limit. There is once again strong agreement between GX and
GS2 for these electron-temperature-gradient (ETG) modes.

We ﬁnally perform an electromagnetic linear benchmark of the transition from ITG
instability to kinetic ballooning mode (KBM) instability. In this benchmark we include
perpendicular magnetic ﬂuctuations via ﬁnite A(cid:107) but we neglect parallel magnetic ﬂuc-
tuations (δB(cid:107) = 0). Taking kyρi = 0.3, Fig. 3 shows normalized growth rates and real
frequencies as a function of the reference beta βref . As βref increases, both GX and GS2
agree well and show moderate stabilization of the ITG mode until the transition to KBM
around βref = 1.3%.

6.1.2. Nonlinear results

We ﬁrst perform nonlinear CBC calculations using a Boltzmann electron response.
Fig. 4a shows time traces of the ion heat ﬂux in gyro-Bohm units, showing very good
agreement in the time-averaged heat ﬂux amongst GX, CGYRO, and GS2. For GX, we
show a case with moderate velocity resolution, (L, M) = (8, 16), along with a coarse
resolution case with (L, M) = (4, 6). Additional details about velocity-space convergence
are given in the next section. We also show in Fig. 4b a scan of the ion temperature

17

Figure 5. Time traces of ion (solid) and electron (dashed) heat ﬂux, normalized to gyro-Bohm
units, for the CBC with kinetic electrons from GX (blue), CGYRO (yellow), and GS2 (green).

gradient parameter, a/LT i, which again shows excellent agreement between GX and
CGYRO for all cases at both resolutions. The agreement at a/LT = 1.5 is particularly
notable because this is in the Dimits shift regime, where the system is linearly unstable
to ITG but turbulence is suppressed by zonal ﬂow dynamics. This regime was especially
troublesome for the Beer gyroﬂuid model (Beer & Hammett 1996; Dimits et al. 2000), but
we see that by extending that model to more moments (and neglecting the collisionless
closure schemes) via our Laguerre-Hermite approach we can recover the Dimits shift.
Here, all codes included a small amount of collisions, taking the normalized ion collision
frequency to be νii = 10−2 vti/a. Hyper-collisions were included in the GX calculations,
with details given in Appendix D.3.

Nonlinear calculations with kinetic electrons are presented in Fig. 5, which shows
excellent agreement amongst GX, CGYRO, and GS2 for the time average of the heat
ﬂux in both the ion and electron channels. Here we took νee = 10−2 vti/a and νii =
1.65 × 10−4 vti/a for collisions in all codes, and hyper-collisions were again used in GX
(see Appendix D.4).

6.2. Stellarator benchmarks: W7-X

For benchmarks in stellarator geometry, we choose a magnetic conﬁguration from W7-
X that has recently been used by González-Jerez et al. (2022) to benchmark stella and
GENE. The numerical equilibrium is obtained from VMEC (Hirshman & Whitson 1983),
and we choose the so-called bean ﬂux tube with α0 = 0. To study ITG-driven instabilities
and turbulence we take a/LT i = 3 and a/Ln = 1.

6.2.1. Linear results

We ﬁrst make a linear comparison between GX and stella, taking a Boltzmann electron
response. Fig. 6 shows the normalized growth rates (top) and real frequencies (bottom)
for a range of ky modes, with strong agreement between the two codes. Both codes
use Dougherty model collisions with νii = 0.01 vti/a. This test corresponds to Fig. 5 of
González-Jerez et al. (2022).

18

Figure 6. Normalized growth rates (top) and real frequencies (bottom) as a function of the
normalized binormal wavenumber ky from GX (blue circles and dotted lines) and stella (yellow
squares) for W7-X bean ﬂux-tube geometry and ITG parameters using a Boltzmann electron
response.

Figure 7. Time traces of ion heat ﬂux Qi, normalized to gyro-Bohm units, QGB = niTivtiρ2
i /a2,
for the W7-X bean ﬂux-tube geometry with a Boltzmann electron response. Results are shown
from GX with moderate (blue) and coarse (red) velocity resolution, stella (yellow), and GENE
(green).

6.2.2. Nonlinear results

Moving on to the nonlinear version of this test case, Fig. 7 shows time traces of ion
heat ﬂux from GX along with the time traces from stella and GENE, which were taken
directly from the data made available by González-Jerez et al. (2022) (and corresponding
to Fig. 12 in that work). Both stella and GENE used rather high velocity resolution for
this case, with Nv(cid:107) = 60, Nµ = 24. For GX we show a case with moderate velocity-space

19

Figure 8. Laguerre (left) and Hermite (right) free energy spectra, Wg, for the nonlinear CBC
with a Boltzmann electron response with varying velocity-space resolution. All the spectra are
nearly identical at the scales that contribute dominantly to the heat ﬂux (small (cid:96) and m), which
is consistent with the excellent convergence observed in Table 1.

resolution, (L, M) = (8, 16), and a coarse resolution case with (L, M) = (4, 6). Both
of these agree well with the higher-resolution cases from both stella and GENE, which
indicates that the promising Laguerre-Hermite convergence observed in the tokamak
benchmarks carries over to stellarators. Additionally, the wallclock time for the GX cases
was 218 minutes in the moderate resolution case and 20 minutes in the coarse case, with
each running on a single A100 GPU. This performance compares very favorably to the
performance reported for this case for stella and GENE by González-Jerez et al. (2022),
which both required over 46000 core hours, albeit at much higher velocity resolution.
Nonetheless, the GX results illustrate the combined advantages of the Laguerre-Hermite
approach and GPU acceleration.

7. Velocity-space convergence and GPU performance

Part of the motivation for the Laguerre-Hermite pseudo-spectral approach is the ability
to successfully run at low velocity-space resolution without uncontrolled approximations,
since in the lowest-resolution limit the system corresponds to established gyroﬂuid models
like the one of Beer & Hammett (1996). Another motivation for the pseudo-spectral
approach is its ﬁt for GPU computing, since the spectral algorithm relies heavily on
fast transform methods that are well-optimized on GPUs, and the memory requirements
of the algorithm are low enough to ﬁt a problem onto one or a few GPUs. We also
use single-precision arithmetic, which is suﬃcient for turbulence calculations (Maurer
et al. 2020); there are no matrix inversions in our algorithm that would require higher
precision. In this section we examine the velocity-space convergence for the nonlinear
CBC calculations with GX along with the performance of the calculations on one or
several GPUs. Convergence and performance are complementary factors towards enabling
ﬁrst-principles transport calculations that are fast enough to be used for fusion reactor
design. In this section we will present results detailing convergence and performance for
the nonlinear CBC benchmark cases from Section 6.1.2.

Starting with the case with Boltzmann electrons, Table 1 shows the results of several

20

L M

16

(cid:63) 8

6

4

(cid:63) 4

4

3

3

32

16

12

8

6

4

8

6

Qi/QGB
7.4 ± 0.9

7.3 ± 0.9

7.5 ± 0.7

7.4 ± 0.9

7.3 ± 0.8

6.0 ± 0.9

9.0 ± 0.9

8.8 ± 0.6

wallclock (min) time/step (s) ∆t

467

61

31

9

6

3

8

5

0.14

0.01

0.037

0.02

0.023

0.025

0.011

0.04

0.0092

0.05

0.0071

0.075

0.0093

0.04

0.0077

0.05

Table 1. Velocity-space convergence and performance for the nonlinear CBC with Boltzmann
electrons. Here M is the number of Hermite modes and L is the number of Laguerre modes. Other
resolution parameters were Nx = 192, Ny = 64, Nz = 24. Accurate ion heat ﬂux calculations
can be obtained with resolution as coarse as (L, M) (cid:62) (4, 6) (above the double bar). Each
simulation was run to t = 2000 a/vti, and we report the total wallclock time in minutes, the
time per timestep in seconds, and the timestep size ∆t (normalized to a/vti), which changes
with L and M due to linear stability constraints. All simulations were run on a single NVIDIA
A100 GPU. The resolutions shown in Fig. 4 are marked with a (cid:63).

GX calculations, with coarsening velocity resolution as we progress down the table. For
this problem the convergence of the Laguerre-Hermite basis is quite remarkable, allowing
accurate results with resolution as coarse as (L, M) = (4, 6). This is still a factor of four
more moments than used in the Beer & Hammett (1996) six-moment gyroﬂuid model,
but it is quite coarse relative to typical gyrokinetic calculations. Thus, the ﬂexibility
of the Laguerre-Hermite representation to smoothly interpolate between gyroﬂuid and
gyrokinetic resolution enables the full nonlinear CBC calculation to be run accurately in
less than 6 minutes on a single GPU, a remarkable result.

When we look at the Laguerre and Hermite spectra for these cases shown in Fig. 8,
where Wg,s((cid:96), m) = (cid:82) |Gs
(cid:96),m|2 dx dy dz is the free energy in each moment, we can see
why the convergence is very good: even for the coarsest resolution, the spectra at
the scales that contribute dominantly to the heat ﬂux (small (cid:96) and m) are nearly
identical. Note that hyper-collisions are being used in these calculations, and this is
helping to enhance convergence. Without hyper-collisions, the results are only accurate
with (L, M) (cid:62) (6, 12). This means that hyper-collisions enable a ﬁve-fold reduction in
simulation (wallclock) time for this case.

We perform a similar convergence study for the CBC with kinetic electrons, as shown
in Table 2. As above, L = 4 seems to be suﬃcient for accurate heat ﬂux predictions in
both ion and electron channels. However, Hermite convergence is not as strong here, with
reasonable accuracy requiring M (cid:38) 16. Examining the Laguerre and Hermite free energy
spectra for these cases in Fig. 9, we see more structure in the Hermite spectra, especially
for the electrons. The oscillatory nature of the spectrum, with higher amplitudes in
even Hermite modes than odd, could be an indication that the toroidal drifts (which
couple every other Hermite mode) are playing a strong role in the dynamics. Despite this

21

L M

16

8

4

8

(cid:63) 4

8

4

32

32

32

16

16

8

8

Qi/QGB
25.1 ± 2.3

Qe/QGB wallclock (min) time/step (s) ∆t # of GPUs
7.9 ± 0.8

0.0005

0.086

1716

8

26.6 ± 4.0

8.5 ± 1.3

24.3 ± 2.4

8.1 ± 0.8

23.6 ± 2.5

7.6 ± 0.8

22.4 ± 3.1

7.6 ± 1.0

17.8 ± 2.2

6.2 ± 0.8

15.9 ± 1.7

5.9 ± 0.7

904

581

383

218

410

224

0.045

0.0005

0.029

0.0005

0.038

0.001

0.022

0.001

0.041

0.001

0.022

0.001

8

8

4

4

2

2

Table 2. Velocity-space convergence and performance for the nonlinear CBC with kinetic
electrons. Here M is the number of Hermite modes and L is the number of Laguerre modes.
Other resolution parameters were Nx = 192, Ny = 64, Nz = 32. Reasonably accurate heat ﬂux
calculations can be obtained with resolution as coarse as(L, M) (cid:62) (4, 16) (above the double bar).
Each simulation was run to t = 600 a/vti, and we report the total wallclock time in minutes,
the time per timestep in seconds, and the timestep size ∆t (normalized to a/vti). The number
of NVIDIA A100 GPUs used for each calculation is also shown. The resolution used for the
calculation in Fig. 5 is marked with a (cid:63).

structure, reasonably accurate results can be achieved in 218 minutes on 4 GPUs using
(L, M) = (4, 16). This is quite good for a nonlinear, electromagnetic gyrokinetic ITG
simulation with real-mass-ratio kinetic electrons. Additional details about multi-GPU
scaling are presented in Section 7.1.

Note that using more Hermite modes not only adds to the size of the problem, but also
makes the Courant-Friedrichs-Levy (CFL) constraint on the timestep more restrictive
because the maximum parallel velocity v(cid:107)max on the Hermite collocation grid increases
with the number of Hermite modes. In future work we will try to alleviate this issue by
constraining the maximum velocity on the collocation grid. However, a commonly-used
method of scaling the argument of the Hermite polynomials to reduce the extents of the
collocation grid is ill-suited to our problem, since the resulting projection of a Maxwellian
onto the scaled basis often diverges (Fok et al. 2001). Instead, an approach similar to
that used by Candy et al. (2016) to bound the energy grid in CGYRO could be used
here.

7.1. GPU scaling studies

For single-GPU calculations, the GPU threading architecture eﬀectively enables dy-
namic parallelism over the entire phase space. In Fig. 10, we show that for a nonlinear
CBC calculation with Boltzmann electrons, the algorithm scales roughly linearly with
the number of radial grid points, Nx. This is better than the O(N log N ) cost that would
be expected when the fast Fourier transform (FFT) in the pseudo-spectral algorithm
dominates the cost. This is also better scaling than other gyrokinetic algorithms that
require O(N 2) operations due to matrix inversion.

When considering multi-GPU parallelization, the cost of inter-GPU memory transfers
can be quite large compared to ﬂoating point operations. Thus it is important to design
the scheme to minimize memory transfers and take advantage of modern GPUs that

22

Figure 9. Laguerre (left) and Hermite (right) spectra for the nonlinear CBC with kinetic
electrons with varying velocity-space resolution.

can overlap communication with computation. Thus in GX we have chosen a targeted
multi-GPU parallelization scheme that currently parallelizes only species and Hermite
modes across GPUs. In this scheme, communication is required to compute the total
charge density and current in the ﬁeld equations, which takes the form of an all-reduce
operation on a conﬁguration-space-sized (Nkx × Nky × Nz) object. Additionally, since
the equation for Hermite mode m couples to modes m − 2, m − 1, m + 1 and m + 2, we
use “halo” (or “ghost”) modes on each GPU, similar to standard parallelization schemes
for ﬁnite diﬀerencing. Halo exchange is thus the other dominant form of communication,
requiring inter-GPU transfers of objects of size Nkx × Nky × Nz × L × 2. We overlap the
halo exchange with computation of most of the nonlinear terms (halo modes are only
required for the nonlinear terms involving A(cid:107), and even for these the terms on the interior
modes can be computed before the halo transfers have been completed).

In Fig. 11 we show a strong scaling study for nonlinear CBC cases with multiple
kinetic species. In each case we ﬁx resolution (shown in the legend) and plot the time

23

per timestep (a) and scaling eﬃciency (b) as we increase the number of GPUs used for
the calculation. These calculations have been performed on Perlmutter at NERSC, where
each node contains four A100 GPUs. The three lower resolution cases (bottom left in (a))
have the same conﬁguration space resolution and number of kinetic species as the cases
in Table 2. In each case, the scaling eﬃciency is above 75% parallelizing across 4 GPUs.
The eﬃciency also improves as the number of Hermite and modes per GPU increases
(e.g. moving from red to yellow). This is expected because there is more compute time
relative to communication time (and communication should be approximately the same
between red and yellow because the halo exchange transfer size is the same). We also
consider the strong scaling of a much higher resolution case (the purple curve). This
case uses the same phase-space resolution as the nl03 CGYRO benchmark case, which
has recently been used for a performance study of the GPU implementation of CGYRO
(Belli et al. 2022); however, whereas three kinetic species are used in the nl03 case,
we increase the number of kinetic species to four in our case so that the species-level
parallelism is better suited for the Perlmutter conﬁguration with four GPUs per node.
In this case, GPU memory constraints require the use of at least 4 GPUs for GX when
using the third-order SSPx RK timestepping scheme. The problem scales to 16 GPUs
with 80% eﬃciency resulting in 450 ms per timestep. Overall the performance on a time
per timestep basis is favorable compared to the performance reported by Belli et al.
(2022) on a 25% smaller problem with CGYRO, although CGYRO uses a much more
accurate collision operator (which is more computationally expensive and requires more
memory) and double precision arithmetic. However, at present CGYRO can take larger
timesteps than GX in kinetic electron cases due to CGYRO’s ability to constrain the
bounds of the velocity-space collocation grid and alleviate the CFL restriction resulting
from vmax. Because of this, the total wallclock time for CGYRO nonlinear kinetic electron
cases may be better than that reported for GX in Table 2 at similar resolution and GPU
resources.

We also show in Fig. 12 weak scaling studies for the nonlinear CBC with two kinetic
species and the same conﬁguration space resolution as the cases in Table 2. Here, we
increase the number of Hermite modes proportionally to the number of GPUs used, so
that M = 8Ngpu in each case. After parallelizing ﬁrst over the two kinetic species, this
results in 16 Hermite modes per GPU in all the calculations shown. We show the weak
scaling for both L = 4 (blue) and L = 8 (red). The weak scaling eﬃciency, shown in
(b), is ideal up to four GPUs, and then degrades somewhat. In the larger L = 8 cases
the weak scaling eﬃciency remains slightly better, above 80% for 32 GPUs. The break
in ideal weak scaling eﬃciency at Ngpu = 4 may be due to the fact that using Ngpu > 4
requires multiple nodes on Perlmutter, and communication across nodes is slower than
communication within a node because of the details of the interconnect hardware. Similar
to the conclusions of Belli et al. (2022), the multi-GPU weak scaling would thus likely
beneﬁt from systems with a faster interconnect between more of the GPUs.

8. Conclusion & future opportunities

In this work we have presented GX, a GPU-native gyrokinetic code focused on tokamak
and stellarator design at reactor scales. We have described the numerical algorithms that
we use to solve the electromagnetic δf gyrokinetic system, in particular the discretization
scheme that is pseudo-spectral in the entire ﬁve-dimensional phase space, leveraging the
Laguerre-Hermite velocity-space formulation developed by Mandell et al. (2018). We have
shown several linear and nonlinear benchmarks against established ﬂux-tube gyrokinetic
codes in both tokamak and stellarator geometry, verifying that GX correctly simulates

24

Figure 10. Scaling of time per timestep (in seconds) vs the number of radial grid points, Nx,
for nonlinear CBC with Boltzmann electrons on a single GPU. Ideal linear scaling is shown with
the dashed line, while the dot-dashed line shows Nx log Nx scaling (the expected scaling when
FFTs dominate the algorithm).

Figure 11. Strong scaling study for the nonlinear CBC with kinetic electrons showing the time
per timestep (a) and the scaling eﬃciency (b) as a function of number of GPUs used, with
ﬁxed resolution for each curve. In each case the ideal scaling is shown with a dashed line. The
resolution parameters are listed in the legend as (Nx, Ny, Nz, L, M, Nspecies).

gyrokinetic turbulence in the small ρ∗ limit. The combination of GPU acceleration
and favorable convergence properties of the Laguerre-Hermite velocity-space basis for
nonlinear problems enables useful turbulence simulations in minutes.

Additional work will also focus on improving the eﬃciency of simulations that include
kinetic electrons. At present, the need to resolve the fast parallel electron motion results
in an increase in simulation cost by a factor of roughly 2(cid:112)mi/me ≈ 120 compared
to simulations with Boltzmann electrons (the factor of 2 is from the additional kinetic
species, and the square root of the mass ratio comes from vte/vti). We have also shown
that kinetic electron cases may require more Hermite resolution, especially if resolving
the trapped-passing boundary is essential. Exploration of diﬀerent choices of velocity-
space coordinates for the electrons or improvements to the basis functions used (for
example, a method to bound the Hermite collocation points to constrain v(cid:107)max, as in
Candy et al. (2016), which could alleviate the CFL timestep restriction) could increase
eﬃciency. In addition, the reduced electron models of Beer & Hammett (1996); Snyder
& Hammett (2001); Abel & Cowley (2013) provide insight into how to eliminate the fast
timescales associated with parallel electron motion. A combination of these approaches

25

Figure 12. Weak scaling study for the nonlinear CBC with kinetic electrons showing the time
per timestep (a) and the scaling eﬃciency (b) as a function of number of GPUs used, with the
number of Hermite modes M scaling with the number of GPUs as M = 8Ngpu. We show results
for both L = 4 (blue) and L = 8 (red). The ideal scaling is shown with dashed lines. The other
resolution parameters are: Nx = 192, Ny = 64, Nz = 32, Nspecies = 2.

with implicit timestepping schemes could enable kinetic electron simulations with nearly
the same eﬃciency as the Boltzmann electron simulations we have presented.

An essential target for GX is transport time-scale macro-scale proﬁle evolution via
coupling to a transport solver like Trinity (Barnes et al. 2009; Qian et al. 2022). This will
be described in a forthcoming paper. In this case, several GX ﬂux-tube calculations are
run in parallel at various radii, and the resulting turbulent ﬂuxes are used to advance the
transport equations for the equilibrium proﬁles on transport time-scales. The eﬃciency
of GX makes these simulations quite tractable in comparison to previous eﬀorts. Further,
since transport in a fusion reactor is usually quite stiﬀ, small changes in proﬁle gradients
result in large changes in transport ﬂuxes; conversely, this means that errors of order
10% are quite tolerable since they will result in relatively negligible diﬀerences in the
ﬁnal equilibrium proﬁles. Thus we can also leverage the ﬂexibility of GX to run at quite
low velocity resolution with only 10-20% errors in the turbulent ﬂuxes, as shown in the
convergence studies.

Finally, since GX is specialized for reactor design, using GX as a turbulence model
in the inner loop of optimization frameworks is of great interest. As a ﬁrst step, this
could take the form of evaluating and optimizing nonlinear critical gradients for a set of
ﬂux-tubes by varying the magnetic geometry. For stellarator optimization in particular,
coupling of GX to the SIMSOPT framework (Landreman et al. 2021) is in progress.
Following the work of Highcock et al. (2018), optimization of core equilibrium proﬁles
(and hence fusion power) is also tractable with a fast multi-scale transport model
composed of GX coupled to a transport solver.

9. Acknowledgements

The authors thank G. Hammett, M. Landreman, M. Zarnstorﬀ, B. Buck, N. Barbour,
J. Parisi, M. Barnes, and F. Parra for helpful discussions and encouragement. Research
support came from the U.S. Department of Energy (DOE) and the U.S. National
Science Foundation (NSF): N.R.M. was supported by the DOE Fusion Energy Sciences
Postdoctoral Research Program administered by the Oak Ridge Institute for Science
and Education (ORISE) for the DOE via Oak Ridge Associated Universities (ORAU)
under DOE contract number DE-SC0014664; W. D., R. G., and P. K. were supported by

26

length (m) magnetic ﬁeld (T) temperature (K) mass (kg) number density (m−3) charge (C)

aN

BN

Tref

Mref

n0

qref

Table 3. Fundamental normalizing quantities

kx, ky, x, y ∇, z

µ
v(cid:107)
ω, t
th,s vth,ref /aN a2
aN vth,s v2

ψ
NBN

ρref

Table 4. Normalizing quantities for independent variables

h

Φ

δB(cid:107)
th,ref ρ∗Tref /qref ρ∗(ρref BN) ρ∗BN

A(cid:107)

ρ∗n0/v3

Table 5. Normalizing quantities for dependent variables

DOE via the Scientiﬁc Discovery Through Advanced Computing Program under award
number DESC0018429; T. Q. was supported by NSF GRFP Grant No. DGE-2039656.
Computations were performed on the Stellar cluster at Princeton University/PPPL
(for single-GPU GX calculations and CPU calculations with GS2, CGYRO, and stella)
and the Perlmutter cluster at NERSC (for multi-GPU GX calculations). All opinions
expressed in this paper are the authors’ and do not necessarily reﬂect the policies and
views of DOE, NSF, ORAU, or ORISE.

Appendix A. Normalization

We choose a set of normalizations, described in Table 3, for the fundamental quantities.
Using the fundamental normalizations, we can deﬁne the reference thermal speed vth,ref =
(cid:112)Tref /Mref , the reference cyclotron frequency Ωref = (qref BN)/(Mref c) and the reference
gyroradius ρref ≡ vth,ref /Ωref , with c the speed of light. The ratio of the reference
gyroradius ρref and the normalizing length aN is deﬁned as

ρ∗ ≡

ρref
aN

,

(A 1)

which is the fundamental small parameter in the gyrokinetic model. Using Table 3, we
can also normalize all the independent variables and operators as shown in Table 4 and all
the dependent variables as shown in Table 5. Using the normalizations given in Tables 4
and 5, we can normalize the gyrokinetic model. Note that the term ρ∗ cancels out of all the
equations once they are normalized. We also deﬁne the following non-dimensional species-
speciﬁc parameters that appear throughout the normalized equations: τs = Ts/Tref ,
ms = Ms/Mref , vts = vth,s/vth,ref , Zs = qs/qref , and ρs = (vth,s/Ωs)/ρref .

Appendix B. Pseudo-spectral evaluation of nonlinear terms

The nonlinear terms are evaluated pseudo-spectrally in (x, y, z, µB, m) space to avoid

convolutions in both Fourier and Laguerre coeﬃcients as (Mandell et al. 2018),

27

N s

(cid:96),m = L(cid:96)HmFk⊥[(cid:104)vχ(cid:105)R · ∇hs] = L(cid:96)HmFk⊥ [(cid:104)vχ(cid:105)R · ∇gs]

(cid:32)

= L(cid:96)Fk⊥

F −1
k⊥

[ikyJ0sΦ]F −1
k⊥

[ikx

(cid:88)

ψ(cid:96)(cid:48)

(cid:96)(cid:48)

Gs

(cid:96)(cid:48),m] − F −1
k⊥

[ikxJ0sΦ]F −1
k⊥

[iky

(cid:33)

ψ(cid:96)(cid:48)

Gs

(cid:96)(cid:48),m]

(cid:88)

(cid:96)(cid:48)

√

− vts

√

− vts

(cid:32)

m + 1L(cid:96)Fk⊥

F −1
k⊥

[ikyJ0sA(cid:107)]F −1
k⊥

[ikx

ψ(cid:96)(cid:48)

Gs

(cid:96)(cid:48),m+1]

(cid:88)

(cid:96)(cid:48)

−F −1
k⊥

[ikxJ0sA(cid:107)]F −1
k⊥

[iky

ψ(cid:96)(cid:48)

Gs

(cid:96)(cid:48),m+1]

(cid:88)

(cid:96)(cid:48)

(cid:32)

mL(cid:96)Fk⊥

F −1
k⊥

[ikyJ0sA(cid:107)]F −1
k⊥

[ikx

ψ(cid:96)(cid:48)

Gs

(cid:96)(cid:48),m−1]

(cid:88)

(cid:96)(cid:48)

−F −1
k⊥

[ikxJ0sA(cid:107)]F −1
k⊥

[iky

(cid:88)

ψ(cid:96)(cid:48)

(cid:96)(cid:48)

(cid:32)

L(cid:96)Fk⊥

F −1
k⊥

[iky2µB

+

τs
Zs

J1s
αs

δB(cid:107)]F −1
k⊥

[ikx

ψ(cid:96)(cid:48)

Gs

(cid:96)(cid:48),m]

(cid:88)

(cid:96)(cid:48)

Gs

(cid:96)(cid:48),m−1]

(cid:33)

(cid:33)

−F −1
k⊥

[ikx2µB

J1s
αs

δB(cid:107)]F −1
k⊥

[iky

(cid:88)

ψ(cid:96)(cid:48)

(cid:96)(cid:48)

(cid:33)

Gs

(cid:96)(cid:48),m]

, (B 1)

This requires zero-padding of the arrays in the perpendicular and Laguerre dimensions
to avoid aliasing, as described in Appendix D of Mandell et al. (2018).

Appendix C. Geometry details

In this appendix, we will describe how the geometry-related coeﬃcients are calculated
in the GX code. First, we deﬁne the diﬀerent coordinate systems and relevant identities
and brieﬂy outline the process of calculating the geometry-related coeﬃcients. Next, we
list all the goemetric quantities used by GX in the ﬁeld-line following coordinate system.
Finally, we describe the process of obtaining an equispaced, equal-arc coordinate from a
general coordinate z.

Consider a magnetic coordinate system (ψ, φ, θ), where ψ is a ﬂux surface label, φ is the
cylindrical toroidal angle, and θ is a generalized poloidal angle. A general 3D equilibrium
is a union of nested ﬂux surfaces labeled by the ﬂux-surface label ψ, is usually output by
an equilibrium code in the cylindrical coordinate (R, φ, Z). The ﬁrst step is to calculate
the Jacobian from the cyclindrical to the curvilinear coordinates (ψ, φ, θ).

J =

1
(∇ψ × ∇φ) · ∇θ

=

(cid:18) ∂R
∂ψ

×

∂R
∂φ

(cid:19)

·

∂R
∂θ

(C 1)

where the last equality in (C 1) is a consequence of the duality relation (D’haeseleer et al.
1991)

∂R
∂Xj
where Xi and Xj are coordinates. Using the Jacobian and the duality relation we calculate

∇Xi ·

= δij,

(C 2)

28

the gradients ∇ψ, ∇φ, ∇θ from the gradients ∇R, ∇φ, ∇Z. For example, we calculate
∇ψ using the following relation

∇ψ =

(cid:17)

(cid:16) ∂R

∂θ × ∂R
∂φ
(cid:17)

(cid:16) ∂R

∂ψ × ∂R

∂φ

· ∂R
∂θ

(C 3)

where the vector R = (R, φ, Z) is output from a typical equilibrium solver. Upon
calculating the gradients of the coordinates (ψ, θ, φ), we can easily obtain the gradients of
the ﬁeld-line-following coordinate (x, y, z). In addition to that, an equilibrium code also
outputs scalar-valued physical quantities like the plasma pressure p(ψ), and the safety
factor q(ψ) and vector-valued physical quantities like B, B · ∇θ, B · ∇φ. These quantities
are then used to compute all the geometric coeﬃcients deﬁned below:

bmag =

B
Bref

gradpar = b · ∇z

gds21 = ˆs(∇x · ∇y),

ˆs ≡

x
q

dq
dx

gds22 = ˆs2|∇x|2

gds2 = |∇y|2

gbdrift =

2

bmag2 (b × ∇B) · ∇y

cvdrift =

8π
bmag2 (b × ∇y) · ∇p + gbdrift

cvdrift0 = gbdrift0 =

2ˆs
bmag2 (b × ∇B) · ∇x

(C 4)

(C 5)

(C 6)

(C 7)

(C 8)

(C 9)

(C 10)

(C 11)

These quantities form a complete set of geometry-related coeﬃcients needed for a GX
simulation. These quantities also coincide with the geometry deﬁnitions in GS2.

C.1. Calculating an equispaced, equal-arc z

Generally speaking, gradpar is a function of z. However, it is often convenient to
transform to a z-grid where gradpar is a constant. This is strictly necessary in GX
to allow Fourier spectral treatment of the parallel streaming term in the gyrokinetic
equation. To do this, we seek a grid ˆz such that

b · ∇ˆz = C,

(C 12)

where C is a constant. A diﬀerential element in the ﬁeld-line-following coordinates (x, y, z)
can be written as

d(cid:96) =

∂R
∂x

dx +

∂R
∂y

dy +

∂R
∂z

dz.

(C 13)

On a given ﬁeld line, dx = dy = 0. Using the duality relation (C 2), we can write

d(cid:96) =

∇x × ∇y
(∇x × ∇y) · ∇z

dz.

29

(C 14)

For a diﬀerential line element along the ﬁeld line, we dot (C 14) with the unit vector b
to get

Repeating the same process for the coordinate system (x, y, ˆz) and using (C 15)

d(cid:96) =

dz
b · ∇z

.

Integrating (C 16) ﬁrst over one-period in z (or ˆz) and using the fact that

dz
b · ∇z

=

dˆz
b · ∇ˆz

.

we get

b · ∇z|z=0,L= b · ∇ˆz|ˆz=0,L,

C = L

(cid:33)−1

(cid:32)(cid:90) L

0

dz
b · ∇z

Using C, we can now obtain ˆz for each value of z by integrating equation (C 16)

ˆz = C

(cid:90) L

0

dz
b · ∇z

.

(C 15)

(C 16)

(C 17)

(C 18)

(C 19)

The resulting ˆz coordinate is an equal-arc coordinate. Upon obtaining the equal-arc ˆz,
we interpolate all the geometric coeﬃcients onto an equispaced grid ˜z. This makes ˜z an
equispaced, equal-arc coordinate. Note that this procedure can be used for any ﬁeld-line-
following coordinate.

Appendix D. Numerical resolution for benchmark cases

Here we provide the numerical resolution and associated parameters used in each
benchmark case from Section 6. In all cases, normalizing quantities below follow the
GX conventions above (as opposed to the normalization conventions of the various other
codes).

D.1. Linear Cyclone Base Case, Boltzmann electrons (Fig. 1)

GX calculations used: three 2π segments in an extended ballooning domain each with

Nz = 24 parallel grid points, M = 48 Hermite modes, and L = 16 Laguerre modes.

GS2 calculations used: three 2π segments in an extended ballooning domain each with
Nz = 25 parallel grid points, 32 energy grid points, and 33 pitch angles (20 in the
untrapped region of velocity space and 13 in the trapped region).

D.2. Linear Cyclone Base Case, kinetic electrons (Fig. 2 & Fig. 3)

GX calculations used: three 2π segments in an extended ballooning domain each with

Nz = 24 parallel grid points, M = 128 Hermite modes, and L = 16 Laguerre modes.

GS2 calculations used: three 2π segments in an extended ballooning domain each with
Nz = 25 parallel grid points, 32 energy grid points, and 33 pitch angles (20 in the
untrapped region of velocity space and 13 in the trapped region).

stella calculations used: three 2π segments in an extended ballooning domain each with

30

Nz = 25 parallel grid points, 48 v(cid:107) (evenly-spaced) grid points with v(cid:107),max = 3
2vts.
and 16 µ grid points with v⊥,max = 3

√

√

2vts,

D.3. Nonlinear Cyclone Base Case, Boltzmann electrons (Fig. 4 and Table 1)

GX calculations used: one 2π ballooning domain segment with Nz = 24 parallel grid
points, Nx = 192 radial grid points (which corresponds to Nkx = 127 dealiased Fourier
modes), Ny = 64 binormal grid points (which corresponds to Nky = 22 dealiased ky (cid:62) 0
Fourier modes, with the ky < 0 modes determined by the reality condition). The velocity-
space resolution varied by case and is provided in the main text. The perpendicular box
dimensions were approximately 190ρi × 190ρi. The hyper-dissipation parameters used
were: hyper-viscosity with D = 0.05 and n = 4; hyper-collisions with νhyp
m = 0.1,
p(cid:96) = pm = 6.

(cid:96) = νhyp

CGYRO calculations used: one 2π ballooning domain segment with Nθ = 24 grid
points, Nx = 195 radial grid points (Nkx = 130) , Ny = 70 binormal grid points
(Nky = 24), 8 energy grid points with maximum energy b2 = 8, and 16 pitch angles.
The perpendicular box dimensions were approximately 190ρi × 190ρi. The default hyper-
dissipation parameters were used.

GS2 calculations used: one 2π ballooning domain segment with Nz = 24 parallel
grid points, Nx = 192 radial grid points (Nkx = 127), Ny = 64 binormal grid points
(Nky = 22), 16 energy grid points, and 33 pitch angles (20 in the untrapped region of
velocity space and 13 in the trapped region). The perpendicular box dimensions were
approximately 190ρi × 190ρi.

D.4. Nonlinear Cyclone Base Case, kinetic electrons (Fig. 5 and Table 2)

GX calculations used: one 2π ballooning domain segment with Nz = 32 parallel grid
points, Nx = 192 radial grid points (which corresponds to Nkx = 127 dealiased Fourier
modes), Ny = 64 binormal grid points (which corresponds to Nky = 22 dealiased Fourier
modes). The velocity-space resolution varied by case and is provided in the main text. The
perpendicular box dimensions were approximately 190ρi × 190ρi. The hyper-dissipation
parameters used were: hyper-viscosity with D = 0.05 and n = 4; hyper-collisions with
νhyp
(cid:96) = νhyp
CGYRO calculations used: one 2π ballooning domain segment with Nθ = 32 grid
points, Nx = 195 (Nkx = 130) radial grid points, Ny = 70 (Nky = 24) binormal grid
points, 12 energy grid points with maximum energy b2 = 8, and 24 pitch angles. The
perpendicular box dimensions were approximately 190ρi × 190ρi. The default hyper-
dissipation parameters were used.

m = 0.1, p(cid:96) = pm = 6.

GS2 calculations used: one 2π ballooning domain segment with Nz = 32 parallel
grid points, Nx = 192 radial grid points (Nkx = 127), Ny = 64 binormal grid points
(Nky = 22), 16 energy grid points, and 36 pitch angles (19 in the untrapped region of
velocity space and 17 in the trapped region). The perpendicular box dimensions were
approximately 190ρi × 190ρi.

D.5. Linear W7-X case (Fig. 6)

GX calculations used: one 2π ballooning domain segment with Nz = 256 parallel grid

points, M = 16 Hermite modes, and L = 8 Laguerre modes.

stella calculations used: one 2π ballooning domain segment with Nz = 256 parallel

grid points, Nv(cid:107) = 32, and Nµ = 8.

31

D.6. Nonlinear W7-X case (Fig. 7)
GX calculations used: one 2π ballooning domain segment with Nz = 128 parallel
grid points, Nx = 64 radial grid points (which corresponds to Nkx = 43 dealiased Fourier
modes), Ny = 192 binormal grid points (which corresponds to Nky = 64 dealiased Fourier
modes). The velocity-space resolution varied by case and is provided in the main text. The
perpendicular box dimensions were approximately 89ρi × 132ρi. The hyper-dissipation
parameters used were: hyper-viscosity with D = 0.05 and n = 4; hyper-collisions with
νhyp
(cid:96) = νhyp
For stella and GENE calculation details, refer to Tables 2 and 3 (test 5) of González-

m = 0.1, p(cid:96) = pm = 6.

Jerez et al. (2022).

REFERENCES

Abel, I G, Barnes, M, Cowley, S C, Dorland, W & Schekochihin, A A 2008 Linearized
model Fokker-Planck collision operators for gyrokinetic simulations. I. Theory. Phys.
Plasmas 15 (12), 122509, arXiv: 0808.1300.

Abel, I. G. & Cowley, S. C. 2013 Multiscale gyrokinetics for rotating tokamak plasmas: II.

Reduced models for electron dynamics. New J. Phys. 15, arXiv: 1210.1417.

Abel, I G, Plunk, G. G., Wang, E., Barnes, M., Cowley, S. C., Dorland, W.
& Schekochihin, A. A. 2013 Multiscale gyrokinetics for rotating tokamak plasmas:
Fluctuations, transport and energy ﬂows. Reports Prog. Phys. 76 (11), arXiv: 1209.4782.
Antonsen, Thomas M & Lane, Barton 1980 Kinetic equations for low frequency instabilities

in inhomogeneous plasmas. Phys. Fluids 23 (6), 1205–1214.

Ball, Justin & Brunner, Stephan 2021 A non-twisting ﬂux tube for local gyrokinetic

simulations. Plasma Phys. Control. Fusion 63 (6).

Barnes, M, Abel, I G, Dorland, W, Ernst, D R, Hammett, G W, Ricci, P, Rogers,
B N, Schekochihin, A A & Tatsuno, T 2009 Linearized model fokker-planck collision
operators for gyrokinetic simulations. II. Numerical implementation and tests. Phys.
Plasmas 16 (7), 72107.

Barnes, M, Abel, I G, Dorland, W, Görler, T., Hammett, G. W. & Jenko, F. 2010
Direct multiscale coupling of a transport code to gyrokinetic turbulence codes. Phys.
Plasmas 17 (5), 969, arXiv: 0901.2868.

Barnes, M., Parra, F. I. & Landreman, M. 2019 stella: An operator-split, implicit–explicit
δf-gyrokinetic code for general magnetic ﬁeld conﬁgurations. J. Comput. Phys. 391, 365–
380.

Beer, M. A. 1995 GYROFLUID MODELS OF TURBULENT TRANSPORT IN

TOKAMAKS. PhD thesis, Princeton University.

Beer, M. A., Cowley, S. C. & Hammett, G. W. 1995 Field–aligned coordinates for

nonlinear simulations of tokamak turbulence. Phys. Plasmas 2 (7), 2687–2700.

Beer, M. A. & Hammett, G. W. 1996 Toroidal gyroﬂuid equations for simulations of tokamak

turbulence. Phys. Plasmas 3 (11), 4046–4064.

Belli, Emily Ann, Candy, Jeff, Sfiligoi, Igor & Würthwein, Frank 2022 Comparing
single-node and multi-node performance of an important fusion HPC code benchmark.
In PEARC 2022 Conf. Ser. - Pract. Exp. Adv. Res. Comput. 2022 - Revolut. Comput.
Connect. You.

Belli, E A, Hammett, G W & Dorland, W 2008 Eﬀects of plasma shaping on nonlinear

gyrokinetic turbulence. Phys. Plasmas 15 (9), 92303.

Candy, J., Belli, E. A. & Bravenec, R. V. 2016 A high-accuracy Eulerian gyrokinetic

solver for collisional plasmas. J. Comput. Phys. 324, 73–93.

Candy, Jeff & Waltz, R. E. 2003 An Eulerian gyrokinetic-Maxwell solver. J. Comput. Phys.

186 (2), 545–581.

D’haeseleer, William Denis, Hitchon, William Nicholas Guy, Callen, James D. &
Shohet, J. Leon 1991 Flux Coordinates and Magnetic Field Structure. Springer-Verlag.
Dimits, A. M., Bateman, G., Beer, M. A., Cohen, B. I., Dorland, W., Hammett,
G. W., Kim, C., Kinsey, J. E., Kotschenreuther, M., Kritz, A. H., Lao, L. L.,

32

Mandrekas, J., Nevins, W. M., Parker, S. E., Redd, A. J., Shumaker, D. E.,
Sydora, R. & Weiland, J. 2000 Comparisons and physics basis of tokamak transport
models and turbulence simulations. Phys. Plasmas 7 (3), 969–983.

Dorland, W. & Hammett, G. W. 1993 Gyroﬂuid turbulence models with kinetic eﬀects.

Phys. Fluids B 5 (3), 812–835.

Dorland, W., Jenko, F., Kotschenreuther, M. & Rogers, B. N. 2000 Electron

Temperature Gradient Turbulence. Phys. Rev. Lett. 85 (26), 5579–5582.

Dougherty, J. P. 1964 Model Fokker-Planck Equation for a Plasma and Its Solution. Phys.

Fluids 7 (11), 1788.

Durran, D R 2010 Numerical methods for ﬂuid dynamics: With applications to geophysics,

Texts in Applied Mathematics, vol. 32. Springer Science & Business Media.

Fok, Johnson C. M., Guo, Benyu & Tang, Tao 2001 Combined Hermite spectral-ﬁnite
diﬀerence method for the Fokker-Planck equation. Math. Comput. 71 (240), 1497–1529.
Francisquez, Manaure, Juno, James, Hakim, Ammar, Hammett, Gregory W &
Ernst, Darin R 2022 Improved multispecies Dougherty collisions. J. Plasma Phys.
88 (3), 905880303, arXiv: 2109.10381.

Frei, B.J., Hoffmann, A.C.D. & Ricci, P 2022 Local gyrokinetic collisional theory of the

ion-temperature gradient mode. J. Plasma Phys. 88 (3), 905880304.

Frei, B J, Ball, J, Hoffmann, A. C.D., Jorge, R, Ricci, P & Stenger, L 2021
Development of advanced linearized gyrokinetic collision operators using a moment
approach. J. Plasma Phys. 87 (5), 905870501, arXiv: 2104.11480.

Frei, B J, Jorge, R & Ricci, P 2020 A gyrokinetic model for the plasma periphery of

tokamak devices. J. Plasma Phys. 86, arXiv: 1904.06863.

Frieman, E. A. & Chen, Liu 1982 Nonlinear gyrokinetic equations for low-frequency
electromagnetic waves in general plasma equilibria. Phys. Fluids 25 (3), 502–508.
González-Jerez, A., Xanthopoulos, P., García-Regaña, J.M., Calvo, I., Alcusón,
J., Bañón Navarro, A., Barnes, M., Parra, F.I. & Geiger, J. 2022 Electrostatic
gyrokinetic simulations in Wendelstein 7-X geometry: benchmark between the codes stella
and GENE. J. Plasma Phys. 88 (3), 905880310.

Gottlieb, S, Shu, C.-W. & Tadmor, E 2001 Strong stability–preserving high–order time

discretization methods. SIAM Rev. 43 (1), 89–112.
Hammett, Gregory W. 2022 Private communication.
Hammett, Gregory W. & Perkins, Francis W. 1990 Fluid moment models for Landau
damping with application to the ion-temperature-gradient instability. Phys. Rev. Lett.
64 (25), 3019–3022.

Highcock, E. G., Mandell, N. R., Barnes, M. & Dorland, W. 2018 Optimisation of
conﬁnement in a fusion reactor using a nonlinear turbulence model. J. Plasma Phys.
84 (2), 905840208, arXiv: 1608.08812.

Hirshman, S P & Whitson, J C 1983 Steepest-descent moment method for three-dimensional

magnetohydrodynamic equilibria. Phys. Fluids 26 (12), 3553–3568.

Hoffmann, A C D, Frei, B J & Ricci, P 2022 Gyrokinetic simulations of plasma turbulence
in a Z-pinch conﬁguration using a moment approach and advanced collision operators ,
arXiv: 2208.01346.

Jenko, F & Dorland, W 2001 Nonlinear electromagnetic gyrokinetic simulations of tokamak

plasmas. Plasma Phys. Control. Fusion 43 (12A), A141.

Ketcheson, David I. 2008 Highly eﬃcient strong stability-preserving Runge-Kutta methods

with low-storage implementations. SIAM J. Sci. Comput. 30 (4), 2113–2136.

Kotschenreuther, Mike, Rewoldt, G. & Tang, W. M. 1995 Comparison of initial value
and eigenvalue codes for kinetic toroidal plasma instabilities. Comp. Phys. Comm. 88 (2-
3), 128–140.

Landreman, Matt, Medasani, Bharat, Wechsung, Florian, Giuliani, Andrew,
Jorge, Rogerio & Zhu, Caoxiang 2021 SIMSOPT: A ﬂexible framework for stellarator
optimization. J. Open Source Softw. 6 (65), 3525.

Lee, W. W. 1987 Gyrokinetic particle simulation model. J. Comput. Phys. 72 (1), 243–269.
Loureiro, N. F., Dorland, W., Fazendeiro, L., Kanekar, A., Mallet, A., Vilelas,
M. S. & Zocco, A. 2016 Viriato: A Fourier-Hermite spectral code for strongly

33

magnetized ﬂuid-kinetic plasma dynamics. Comput. Phys. Commun. 206, 45–63, arXiv:
1505.02649.

Mandell, N R, Dorland, W & Landreman, M 2018 Laguerre-Hermite pseudo-spectral
velocity formulation of gyrokinetics. J. Plasma Phys. 84 (1), 905840108, arXiv:
1708.04029.

Marinoni, A, Brunner, S, Camenen, Y, Coda, S, Graves, J P, Lapillonne, X,
Pochelon, A, Sauter, O & Villard, L 2009 The eﬀect of plasma triangularity
on turbulent transport: Modeling TCV experiments by linear and non-linear gyrokinetic
simulations. Plasma Phys. Control. Fusion 51 (5), 55016.

Martin, M F, Landreman, M, Xanthopoulos, P, Mandell, N R & Dorland, W 2018
The parallel boundary condition for turbulence simulations in low magnetic shear devices.
Plasma Phys. Control. Fusion 60 (9), 95008.

Maurer, M., Bañón Navarro, A., Dannert, T., Restelli, M., Hindenlang, F.,
Görler, T., Told, D., Jarema, D., Merlo, G. & Jenko, F. 2020 GENE-3D: A
global gyrokinetic turbulence code for stellarators. J. Comput. Phys. 420, 109694.
Miller, R L, Chu, M S, Greene, J M, Lin-Liu, Y. R. & Waltz, R. E. 1998 Noncircular,

ﬁnite aspect ratio, local equilibrium model. Phys. Plasmas 5 (4), 973–978.

Mynick, H E, Xanthopoulos, P & Boozer, A H 2009 Geometry dependence of stellarator

turbulence. Phys. Plasmas 16 (11), 110702.

Parker, Joseph Thomas 2015 Gyrokinetic simulations of fusion plasmas using a spectral

velocity space representation. PhD thesis, University of Oxford.

Parker, Joseph T. & Dellar, Paul J. 2015 Fourier-Hermite spectral representation for
the Vlasov-Poisson system in the weakly collisional limit. J. Plasma Phys. 81 (2), arXiv:
1407.1932.

Qian, Tony, Buck, Braden, Gaur, Rahul, Mandell, Noah, Kim, Patrick & Dorland,
William 2022 Stellarator proﬁle predictions using Trinity3D and GX. In Bull. Am. Phys.
Soc.. American Physical Society.

Smith, Stephen 1997 Dissipative closures for statistical moments, ﬂuid moments, and subgrid

scales in plasma turbulence. PhD thesis, Princeton University.

Snyder, P. B. & Hammett, G. W. 2001 A Landau ﬂuid model for electromagnetic plasma

microturbulence. Phys. Plasmas 8 (7), 3199–3216.

White, A E 2019 Validation of nonlinear gyrokinetic transport models using turbulence

measurements. J. Plasma Phys. 85 (1).

Zocco, A., Helander, P. & Connor, J. W. 2015 Magnetic compressibility and ion-
temperature-gradient-driven microinstabilities in magnetically conﬁned plasmas. Plasma
Phys. Control. Fusion 57 (8).

