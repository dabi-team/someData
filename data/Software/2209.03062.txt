2
2
0
2

p
e
S
7

]
E
C
.
s
c
[

1
v
2
6
0
3
0
.
9
0
2
2
:
v
i
X
r
a

Physics-based Digital Twins for Autonomous Thermal Food
Processing: Eﬃcient, Non-intrusive Reduced-order Modeling

Maximilian Kannapinn1,*, Minh Khang Pham2, and Michael Schäfer1

1Institute for Numerical Methods in Mechanical Engineering & Graduate School of Computational Engineering,
Department of Mechanical Engineering & Centre for Computational Engineering,
Technical University of Darmstadt, Dolivostr. 15, 64293 Darmstadt, Germany
2Technical University of Darmstadt, Karolinenplatz 5, 64289, Darmstadt, Germany
*Corresponding author, Email: research@maxkann.de

September 04, 2022

Abstract

One possible way of making thermal processing controllable is to gather real-time information on the
product’s current state. Often, sensory equipment cannot capture all relevant information easily or at
all. Digital Twins close this gap with virtual probes in real-time simulations, synchronized with the
process. This paper proposes a physics-based, data-driven Digital Twin framework for autonomous food
processing. We suggest a lean Digital Twin concept that is executable at the device level, entailing
minimal computational load, data storage, and sensor data requirements. This study focuses on a
parsimonious experimental design for training non-intrusive reduced-order models (ROMs) of a thermal
0.76) between a high standard deviation of the surface temperatures
process. A correlation (R =
in the training data and a low root mean square error in ROM testing enables eﬃcient selection of
training data. The mean test root mean square error of the best ROM is less than 1 Kelvin (0.2 %
104
mean average percentage error) on representative test sets. Simulation speed-ups of Sp
allow on-device model predictive control.

1.8

≈

×

−

Industrial relevance The proposed Digital Twin framework is designed to be applicable within
the industry. Typically, non-intrusive reduced-order modeling is required as soon as the modeling of
the process is performed in software, where root-level access to the solver is not provided, such as
commercial simulation software. The data-driven training of the reduced-order model is achieved with
only one data set, as correlations are utilized to predict the training success a priori.

Key words: Digital Twin, Cyber-physical system, Autonomous process, Non-intrusive reduced-order

model, Design of experiment, Porous media

Accepted version of manuscript published in Innovative Food Science and Emerging Technologies.
Date accepted: September 04, 2022. License: CC BY-NC-ND 4.0

1

 
 
 
 
 
 
1

Introduction

The global population is expected to exceed 10 billion people by 2050. The food industry thus faces the
challenge of improving food supply sustainability, becoming more energy-eﬃcient, and reducing food waste
while additionally complying with customer demands for nutritious and safe food. For years, scientiﬁc
reports have demanded that humankind’s carbon footprint be reduced to maintain global temperatures
at a safe level. A special report by the Intergovernmental Panel on Climate Change attributes 21–37 % of
total net anthropogenic greenhouse gases to the food system, whereas 8–10 % can be attributed to food
wastage (IPCC, 2019). The food system alone has a 67 % probability of endangering the 2 °C greenhouse
gas reduction target by 2050 if no change is undertaken (Clark et al., 2020).

Nonetheless, food safety must remain the top priority when developing novel technologies to improve
energy eﬃciency. Langsrud et al., 2020 disclosed deﬁcits in judging the doneness of food, as approximately
30 % of food-borne illnesses can be related to eating undercooked poultry. Large quantities of safe, healthy,
quality meals are required for community catering, such as in hospitals, schools, universities, diners, and
canteens, or for crisis response. In these areas, predominantly less-trained personnel operate. In general,
the food preparation sector has faced a shortage of skilled staﬀ in recent years. Even before the coronavirus
pandemic, among Germany’s top six most unpopular jobs were chef and sous-chef (Oberhuber, 2018).
Hence, adequate supervision and decision support are required in kitchens. Novel ways of reducing energy
consumption and food waste in the private, industrial, and public sectors while preserving or improving
food quality are also needed. Minor improvements can have a signiﬁcant impact when applied at scale.
Autonomous processes with artiﬁcial intelligence are among the next disruptive technological trends, and
Digital Twins might act as enablers (Rosen et al., 2015). Before a brief overview of the state of the art of
Digital Twins in food science and technology is provided, the following section summarizes the key features
of Digital Twins.

Deﬁnition of Digital Twins Michael Grieves originally derived the concept of Digital Twins in 2003
as the “mirrored spaces model” for his lectures at the University of Michigan, and years later, Vickers
inspired the name Digital Twin (Grieves and Vickers, 2017). Approximately 85 % of the Digital Twin
studies to date focused on product life-cycle management and 11 % focused on factory or manufacturing
planning (Lu et al., 2020). Various eﬀorts have also been made to deﬁne and standardize the Digital Twin
concept (e.g., AIAA, 2020; Automation systems and integration – Digital twin framework for manufacturing
– Part 1: Overview and general principles 2021; Stark and Damerau, 2019), and it has been identiﬁed as
an active ﬁeld of research (Niederer et al., 2021; Tao and Qi, 2019). Common features that characterize
a Digital Twin can be found in literature (see summary in Table 1). A Digital Twin can be deﬁned as
a virtual set of information (labeled F1 in Table 1) replicating its physical counterpart at the utmost
ﬁdelity (F3). Digital and Physical Twins engage in bi-directional data exchange (F4, F5) in real time
(F2). This deﬁnition clariﬁes that the concept of a Digital Twin is a much more sophisticated than that
of a simulation model, although this is still a common misconception (Lu et al., 2020; Tao and Qi, 2019).
Digital Twins symbolize the endeavor to make simulation and data science technologies available not
only in the design phase (“what-if simulations”) but also in the operational phase (F6) (Niederer et al.,
2021).
In the latter phase, people and potentially autonomous processes might make better-informed
decisions (F8) (Rasheed, San, and Kvamsdal, 2020). However, how to deploy Digital Twins at scale
robustly (F7) is still an open research question as novel mathematical, numerical, and computational
methods ﬁrst have to be developed (Niederer et al., 2021).

State of the Art We have witnessed the advent of Digital Twins in the ﬁeld of food science and
technology in the last two years, which explains why the relevant literature is still scarce. A recent
literature review by Henrichs et al., 2022 elucidates that few food science studies considered autonomy of

2

Table 1: Common features of the Digital Twin concept in literature.

Common Feature Description

Sources

F1: Digital Mirror

Consists of a simulation model / a virtual domain

F2: Speed-up

Must reﬂect the physical process in real-time

F3: High-ﬁdelity

Must reﬂect the physical process at utmost accuracy

F4: Symbiosis

Synergies of physics-based and data-based modeling

F5: Bi-directionality Mutual data exchange of Digital and Physical Twin

AIAA, 2020; Grieves and Vickers, 2017;
Rasheed, San, and Kvamsdal, 2020
Glaessgen and Stargel, 2012; Lu et al., 2020;
Rasheed, San, and Kvamsdal, 2020
Glaessgen and Stargel, 2012; Grieves and Vick-
ers, 2017; Rasheed, San, and Kvamsdal, 2020
Niederer et al., 2021; Rasheed, San, and Kvams-
dal, 2020; Verboven et al., 2020
AIAA, 2020; Glaessgen and Stargel, 2012;
Niederer et al., 2021

F6: Persistence

Evolves during the product life-cycle and reﬂects changes AIAA, 2020; Grieves and Vickers, 2017;

F7: Robustness

Reliable / accounts for uncertainty / validated

F8: Explorative

Monitoring / automation / autonomy

Rasheed, San, and Kvamsdal, 2020
Niederer et al., 2021; Rasheed, San, and Kvams-
dal, 2020
AIAA, 2020; Grieves and Vickers, 2017;
Niederer et al., 2021; Rosen et al., 2015

processes. Only eight out of 84 studies focused on Digital Twin-enabled autonomy of processes, and of
these eight, only two sources were peer-reviewed studies. Guo, Dusadeerungsikul, and Nof, 2018 monitored
and controlled the soil and plant parameters in greenhouses with robots. In the study by Eppinger et al.,
2021, Siemens brieﬂy demonstrated two application examples: ketchup production optimization, and a
spray-drying process for producing milk powder.

The potential added value of Digital Twins for food science has been acknowledged by Verboven et al.,
2020 and Henrichs et al., 2022) in their reviews, which focused on Big Data, cloud computing, the Internet
of Things, and sensorization. A picture of Digital Twins as an augmented reality monitoring system in
real time was envisioned. While mechanistic models were advocated, only simple models were expected to
be suitable for Digital Twins. Verboven et al., 2020 noted that nowadays, complex physics-based models
would not be solvable in real time. The review by Henrichs et al., 2022 focused on the value chain and
production planning at the shop ﬂoor level. An example of this “scheduling” perspective on Digital Twins
can be found in the article by Koulouris, Misailidis, and Petrides, 2021.

Based on the criteria in Table 1, we ﬁnd manuscripts that partially fulﬁll the features of Digital Twins.
Several studies (Defraeye et al., 2019; Shoji et al., 2022; Tagliavini, Defraeye, and Carmeliet, 2019) on
Digital Twins understand the latter as a simulation model for post processing recorded temperature proﬁles
of physical counterparts. While presenting well-validated models and numerical simulations, especially bi-
directional links, interactive decision making, and mirroring over the product life cycle have not yet been
addressed. The necessity of real time simulations has been partially envisioned (Prawiranto, Carmeliet,
and Defraeye, 2021). However, the presented simulation speed up compared to real time of factor three is
far too low for online decision making. The former can be explained by the lack of reduced-order modeling
(ROM) in all of the studies mentioned above.

Several studies on reduced-order models have been published in food science. In a recent review by
Khan et al., 2022, only two of the 31 presented studies were ROMs of transient nature. The ﬁrst was a
contribution by Huang, D. Whittaker, and E. Lacey, 1998, using neural networks to train simple n-step
ahead predictors. The second was a contribution by Li et al., 2016, where a recurrent self-evolving fuzzy
neural network learns from simulation with errors of a maximum of 2 K. Unfortunately, no information on
the computational time were given in these studies. The residual studies in Khan et al., 2022 revealed a
“steady-state” perspective on machine-learning-based models in food science: experimental or simulation
end results are used to train feed-forward neural networks, the processing time is treated as an input, and
process settings cannot be changed individually within the run, though only per case.

3

Notable exceptions are the works by Alonso et al., 2013 and Rivas et al., 2013. A transient Fourier’s
law partial diﬀerential equation is Galerkin-projected to a small subspace. One drawback of the employed
proper orthogonal decomposition lies in its equation-invasive behavior (Hesthaven and Ubbiali, 2018;
Trehan and Durlofsky, 2016). The approach consequently excludes the use of commercial software, where
typically most of the modeling is performed (Verboven et al., 2020), and where root-level user-deﬁned
solver access is seldom. In a more recent study, the authors stated that their solution times need to be
reduced signiﬁcantly for true real-time optimal control (Alonso et al., 2021). Their underlying optimization
routine was enforced to stop early after ﬁve minutes to proceed with the next model predictive control
time-step.

Several studies that aim at the optimal control of thermal processing do not use ROM, and instead
reduce the spatial resolution and topology of the model. Arias-Mendez et al., 2013 modeled a 2D quarter
section of an axisymmetric potato chip with 200 elements, which requires 40 s to simulate 90 s of real time.
Hadiyanto et al., 2008 utilized 10 1D elements resulting in 108 ordinary diﬀerential equations that were
solved in 4243 s for 9000 s of real time.

The outline of this article is as follows. The physics-based data-driven Digital Twin framework for
autonomous thermal food processing is proposed in Sec. 2.1. The focus of this paper lies on one essen-
tial building block of the framework: non-intrusive reduced-order modeling. The employed methods for
reduced-order modeling are the physics-based food processing model (Sec. 2.2), the neural network-based
ROM approach (Sec. 2.3), and signal synthesis and ROM error measures (Sec. 2.4). The main focus of
Sec. 3 is to answer the question of how to build high-ﬁdelity, faster-than-real-time ROMs of food pro-
cessing. The presented generation of a ROM is parsimonious in training signals, as only one data set
is employed. Sec. 3.1 demonstrates the approach to derive six global test error measures from ROM
evaluations over time. Sec. 3.2 proposes how to evaluate trained ROMs on fair test data sets. Sec. 3.3
considers the inﬂuence of input space coverage on ROM’s test errors. Sec. 3.4 investigates if excitation
signal properties can be correlated to the test error – to put it diﬀerently, to estimate the ROM accuracy a
priori. This enables the a priori selection of a suitable single training signal to train a ROM. Sec. 3.5 and
Sec. 3.6 attempt to ﬁnd the best excitation signal type among the common multi-step or multi-sine signals
in the literature. This study is one of the ﬁrst scientiﬁc publications which employed the Dynamic ROM
method. Consequently, evaluations over time, ROM speed-ups, computational cost, and ROM accuracy
are investigated in Sec. 3.7. Following a summary and discussion of the main results in Sec. 4, this article
discusses what beneﬁts for food science can be drawn, broadening the perspective of how the approach
contributes to a spectrum of applications in food science and beyond. The outlook presents potential
future steps to complete the proposed Digital Twin framework for processing autonomy.

2 Methods

2.1 A physics-based data-driven Digital Twin framework enabling autonomy of ther-

mal food processing

Presently, cooking devices cannot easily measure the food’s sensory properties, such as the chemical
reactions (e.g., Maillard browning inﬂuencing color and ﬂavor), texture (such as tenderness), or residual
moisture content without user interaction. Here, the Digital Twin may provide the cooking product’s
unknown state information (Figure 1). Simple temperature probes inside the oven form the boundary
and initial conditions of the simulation model. Faster-than-real-time simulations return multiple future
scenarios to the device’s autonomous process control. The device can plan its oven temperature trajectory
to meet the user’s requirements of speciﬁc brownness, moisture content, minimum core temperature, or
pathogen deactivation at the end of the process – at a speciﬁc point in time. An example of a user input

4

to an autonomous cooking device could be: Prepare safe medium-rare meat, tender, thorough browning
and reach ready-to-eat temperatures at 08:15 p.m. A change of the user’s objectives is also possible during
the process, just limited by the current progress of cooking. Reaction to disturbances, such as power loss
or opening of device doors, is self-evident for model predictive control.

Figure 1: Digital Twins for autonomous cooking processes.

This study formulated nine requirements that the authors believe are necessary to accomplish au-
tonomous processing at the device level (Table 2). Model predictive control is only attainable with simu-

Table 2: Hypotheses on requirements for a Digital Twin enabled process autonomy.

Requirement

Relates to

Description

R1: Faster than real-time
R2: Physics-based modeling

F2
F3

R3: On-device operation

F2, F3

R4: Cybersecurity

F5, F7, R3

R5: Minimum physical sensors

F1, F5,

Digital Twin process autonomy requires faster-than-real-time simulations.
First principle models provide profound understanding and subsequently
enable control over the process.
For execution at the device level, the computational load of the simulation
has to be minimal.
On-device operation increases cyber-security, especially for automation of
system-critical processes.
Focus on easy-to-measurable quantities that are used as boundary condi-
tions for the simulation.

R6: Intellectual property protection

F3, F4, F5, R3 Modeling know-how is the core intellectual property of companies and

R7: Non-intrusiveness of ROMs
R8: Data determines ROM quality

R9: Open access

F3, F4, F6, R2 There is seldomly code access to solvers in commercial simulation software.
Data-based ROM methods require sophisticated excitation signal design to
F3, F7, R7
accomplish ROM accuracy.
The distribution of Digital Twins should be open-source code-based to en-
able an application at scale.

F6

should not be left unprotected.

lation times that are several magnitudes faster than real-time simulations (R1), as the models are called
several hundreds of times during one control step (Arias-Mendez et al., 2013). Instead of following the Big
Data trend, this study aimed to provide fast and yet highly accurate (F3) virtual replicates of physics-based
(R2) models, with parsimonious training data input (R8).

Non-intrusiveness (R7) of ROMs is essential for an industrial application at scale. Instead of using high-
performance computing, the authors believe that Digital Twins must become very lean in data storage and
computational power requirements. Digital Twins should be executable on the device-level (R3). It is not

5

feasible or sustainable to execute the on-device simulations on high-performance clusters from an energetic
viewpoint. Exploiting existing standard sensors renders the product aﬀordable, as complex sensors can be
replaced by virtual probes (R5).

Figure 2: Concept of the proposed physics-based data-driven Digital Twin framework.

The state of the art in food science has not yet addressed many of the above-mentioned issues. It was
the aim of our research initiative to close several such gaps, proposing a physics-based data-driven Digital
Twin framework for autonomy. It fulﬁlls the requirements of Table 2 with the following methods: physically
detailed full-order models of the process and product generate high-quality training data (see the left box
of Figure 2). Conjugate product and process modeling entail thermal computational ﬂuid dynamics (CFD)
simulations coupled to porous media models. Temperatures T and moisture concentrations c are probed at
various positions in the foodstuﬀ. Temperature-dependent sensory attributes q are solved subsequently. All
output data can be summarized within a result matrix Ψ(t) = [T, c, q]. A non-intrusive, data-driven, non-
linear, transient ROM method compresses the model to provide faster-than-real-time simulations. The
open-access (R9) model exchange ﬁle, termed “functional mockup unit” (FMU), contains the identiﬁed
ROM in an encrypted container (R6). The ﬁle consisting of several megabytes is transferred to the device
and executed live to produce estimates ˜Ψ(t) of the state with minimum system requirements (see right
box of Figure 2). Model predictive control algorithms can perform on-device decision-making.

2.2 Food processing simulation model

This study considers the processing of chicken ﬁllets in a convection oven. One usual modeling concept for
the thermal processing of foodstuﬀ is the porous media approach (Datta, 2007). Successful implementation
and reduced-order modeling have been demonstrated lately (Kannapinn and Schäfer, 2021). Regarding
meats, the soft matter approach has been successfully applied (Sman, 2007). This study implemented a
variant by Rabeler and Feyissa, 2018, as the researchers provided matching sensory Arrhenius equations
in subsequent studies. It assumes a water-saturated foodstuﬀ, the absence of a gas phase, and capillary
pressure is considered zero (Datta et al., 2012). Hence, only the conservation equation for mass (moisture
concentration c) and energy (temperature T )

∂c
∂t

+

∂
∂xi

(cui) =

ρcp

∂T
∂t

+ ρwcp,wui

∂T
∂xi

=

∂
∂xi
∂
∂xi

(cid:18)

Dcb

(cid:18)

λij

∂c
∂xi
∂T
∂xj

(cid:19)

(cid:19)

,

,

(1)

(2)

are solved, where ui denotes water velocity. Dcb is the moisture diﬀusivity, and the orthotropic heat
conductivity λij accounts for the ﬁber direction of the chicken ﬁllet, cp is the eﬀective heat capacity, ρ is
the eﬀective density of chicken. The additional index w marks the corresponding parameters for water.
The dimensions of the cubic chicken ﬁllet, as depicted in Figure 3a, follow the experimental setup by

6

Rabeler and Feyissa, 2018. This facilitates the validation of model implementation. Along the surface of
the foodstuﬀ, a heat transfer coeﬃcient hamb is applied to model the surrounding convection and radiation
eﬀects related to the oven temperature Toven. The evaporation rate of moisture mevap acts as a mass and
latent heat (Hevap) loss in the boundary conditions for mass and energy:

qmass ·
qenergy ·

,

N =

mevap
Mw
N = hamb(Toven −

−

T )

−

mevapHevap ,

(3)

(4)

where qmass and qenergy are the surface mass and energy ﬂuxes. N is the normal vector on the surface, and
Mw is the molecular weight of water. The derivation of these boundary conditions, the swelling pressure
model for moisture convection speeds ui, and the utilized material properties can be found in A. This study
focuses on core temperatures TA and surface temperature TB. Their positions are marked in Figure 3a.
Core temperatures typically serve as the primary parameter to control doneness. For example, Food Code,
2017 requires core temperature holding times of at least one second above 74 °C. Surface temperatures
are relevant for determining temperature-dependent sensory parameters.

(a) Dimensions of the simulated chicken cuboid. Water mass fraction
C after 1200 s.

(b) Validation of the implementation.

Figure 3: Domain measures and validation of this simulation with experimental data of Rabeler and
Feyissa, 2018.

Discretization and solution procedure The model was implemented in the Coeﬃcient Form PDE
module of COMSOL Multiphysics 5.6. 2528 hexahedral Lagrange elements, with a maximum height of
2.75 mm were used to discretize the quarter section model of a cuboid (70
40 mm), as depicted
in Figure 3a. Four inﬂation layers (growth-factor 1.3, 0.2 mm ﬁrst layer height) have been added to
capture subsurface gradients. A relative discretization error of 0.17 % compared to the grid-independent
solution was estimated with generalized Richardson extrapolation by Roache, 1994. The resulting system of
equations has 51 094 degrees of freedom. Time-stepping is performed with adaptive second-order backward
diﬀerencing formulas, with a maximum time step of 10 s. One simulation run takes 9.5 min on four cores
of a Core i9 processor. This implementation’s root mean square validation error was RMSE = 2.86 K for
core temperatures TA and RMSE = 1.52 K for surface temperatures TB, as depicted in Figure 3b.

20

×

×

2.3 Dynamic data-driven ROM

Recent advances in neural network-based ROMs promise to cover non-linear behavior of models with
high precision. The software package Dynamic ROM Builder 1 (termed DynROM hereafter) can provide
a non-intrusive, non-linear, transient ROM of the full order system simulations of core (TA) and surface

1© 2020 ANSYS Inc.; U.S. Provisional Patent Application No. 62/773 555, 2018.

7

05001000280300320340360380t/sT/KExperimentTAExperimentTBSimulationTASimulationTBtemperatures (TB) of the chicken ﬁllet. This study considers these two points to be representative of
N reads Y =
the range of possible temperature trajectories. The solution matrix of dimension n
[TA,1, ..., TA,N ; TB,1, ..., TB,N ] with n = 2 system states over N = 280 time steps with ∆t = 5 s. The ROM
is based on an ordinary diﬀerential equation (ODE) system equation

×

(cid:19)

(cid:18)X (cid:48)
I (cid:48)

= f

(cid:19)

(cid:18)(cid:18)X
I

(cid:19)

, U , X 0

,

X(t = 0) = X 0 ,

(5)

(6)

where U is the vector of system excitations (oven temperatures) U = [Toven,1, ..., Toven,N ] and X is the
simulation state vector equivalent to Y . f () is modeled with a three-layer feed-forward neural network,
sigmoid activation functions, and is trained with gradient descent optimization (Calka et al., 2021). A
novel concept is the addition of i free state variables I (dimension i
N ) in the state vector. This ensures
learning of the system’s non-linearities (ANSYS Inc, 2020). The vector can be interpreted as memory cells
that are added as long as it increases the model quality. The ODE system is integrated with fourth-order
Runge Kutta schemes. The loss function for the neural network training error is the mean squared error

×

MSE =





1
N

1
n

n
(cid:88)

l=1

which is averaged for all learning scenarios.

N
(cid:88)

j=1

(Xl,j −



Yl,j)2



(7)

2.4 Signal synthesis for a parsimonious design of experiment

When employing a data-based, non-intrusive ROM approach, the focus shifts to a “best-possible” data
synthesis, as this is the only information vehicle for the subsequent system identiﬁcation. The ROM test
error is strongly connected to the data presented during training (Heinz and Nelles, 2017; Kenett et al.,
2022). Only a few studies on correlations between the excitation signal and ROM learning success can be
found, especially for machine-learning-based ODE ROMs. However, Gringard and Kroll, 2016 and Heinz
and Nelles, 2017, 2018 provide suggestions for the design of experiment for non-linear auto-regressive
exogenous models and local model networks, which will be used as guidance hereafter.

This section presents the signal synthesis for typical excitation signals within the literature. Typically,
two classes of excitation signals – sinusoids and multi-steps – are employed for system identiﬁcation. Nelles,
2020 promotes the usage of sinAPRBS, which can be interpreted as a combination of both (compare
Figure 7a for an example).

Multi-level signals While step responses and pseudo-random binary sequences are commonly used
for linear system identiﬁcation, they are unsuitable for non-linear system identiﬁcation (Nelles, 2020).
Amplitude modulated pseudo-random binary sequences (APRBS) are expected to cover the input space
adequately (Heinz and Nelles, 2017). Jumps in the signal excite a broad range of system frequencies,
and the piecewise constant sections cover low-frequency components. APRBS signals are synthesized
pseudo-randomly (compare Algorithm 1). A minimum hold time thold = 300 s is set to respect the most
considerable time constant of the model.

8

Go to step 2

Algorithm 1 Synthesis of APRBS signals for Toven.
1: Discretize the range of temperature between Tmin = 293.15 K and Tmax = 473.15 K into four equidistant bands
2: Compute Toven,i randomly in every ith temperature band with i = 1, . . . , 4 and permute Toven,i
3: Compute temperature diﬀerence Tdiﬀ between adjacent Toven,i
4: if any Tdiﬀ < Tmargin = 10 K then
5:
6: end if
7: Compute time-steps ti randomly between tstart and tend with i = 1, . . . , 4
8: Compute time diﬀerence tdiﬀ between two adjacent time steps
9: if any tdiﬀ < thold then
Go to step 7
10:
11: end if
12: Sample ti, Ti over time with ∆t = 5 s and set Toven,0 = 279.15 K

Sinusoidal APRBS signals Following a proposition by Heinz and Nelles, 2016, sinusoidal pieces
[0.001, 0.01] Hz are inserted in APRBS signals to synthesize sinAPRBS.
A sin(2πfjt)+c with frequencies fj ∈
The amplitudes A and the oﬀset c are adjusted to ﬁt a quarter sine wave into each APRBS step.

Multi-sines signals Multi-sines are a superposition of several single sines:

U (t) =

n
(cid:88)

j=1

A cos(2πljf0t + ϕj) + c with lj ∈

N .

(8)

[0.001, 0.01] Hz, ϕj ∈

[1, 30] K were adjusted to match the frequency and
[0, 10] and A
Parameters f0 ∈
amplitude ranges of interest. Occasionally, the excitation signal’s crest factor Cr(U ) = max
/URMS, a
measure of the energy level of the signal, is optimized with the usage of Schroeder phases (Gringard and
Kroll, 2016):

Uk|
|

∈

ϕj =

−

j (j

1) π

−
m

j
∀

∈

[1, ..., m] ,

(9)

where k marks a certain time step and m is the number of excited sines.

During the benchmark case (Figure 3) at full load, a core temperature of 74 °C was exceeded during a
run of 1200 s. Considering that multi-step and multi-sine signals do not apply full load at all times, the
duration of the signals in this study is prolonged to 1400 s.

KPIs of excitation signals This study’s objective was to ﬁnd properties of a training signal (termed
KPIs hereafter) that could correlate with the test error of the ROM that was trained with the same signal.
The oven temperature’s crest factor Cr(U ) was obtained with the formula introduced previously. Intuitive
signal properties were standard deviation and mean of Toven, TA and TB. Moreover, this study calculated
various mean and absolute measures of the APRBS steps of Algorithm 1: Ti, Tdiﬀ,i, Tdiﬀ,j , and
Tdiﬀ,i|
,
with i = 1, . . . , 4 and j = 2, . . . , 4, hence excluding the ﬁrst step from the calculation for Tdiﬀ,j. Tdiﬀ,j
is the signed mean of the delta jumps of an APRBS signal. The delta jumps Tdiﬀ,j are introduced in
Algorithm 1.

|

Error measures An accuracy measure to quantify the ROM test errors should be interpretable, equally
fair concerning over- and under-predictions, scale-independent, insensitive to outliers and stable for zero

9

crossings of the observation variable (Chen, Twycross, and Garibaldi, 2017). The root mean square error

RMSE =

(cid:118)
(cid:117)
(cid:117)
(cid:116)

1
N

N
(cid:88)

k=1

(Xk −

Yk)2

(10)

is scale-dependent, facilitating interpretability. A percentage-based variant is the mean absolute percentage
error

MAPE =

1
N

N
(cid:88)

k=1

Yk|

Xk −
|
Yk|
|

.

(11)

Both are popular error measures as they are fair concerning over- and under-predictions. However, they
demonstrate dominant sensitivity to single outliers. Due to the deterministic behavior of the model, single
outliers were not expected in this study. Moreover, MAPE is sensitive to zero crossings of the observation
yk and scale sensitive within one time series (Chen, Twycross, and Garibaldi, 2017). In this study, all
observations remained within an identical order of magnitude and had no zero crossings. A local accuracy
measure is the maximum absolute error

MAX = max

k

Xk −
|

Yk|

.

(12)

Statistical measures of the time-dependent error were MEDIAN and IQR (interquartile range) as they
are more robust to outliers than MEAN and STD (standard deviation). The models’ goodness-of-ﬁt was
calculated with R2 (coeﬃcient of determination).

3 Results and discussion

3.1 Parsimonious design of experiment for ROMs with one training signal – Intro-

ductory example

In this ﬁrst study part, one “best-possible” training signal is found. Figure 4 illustrates the sensitivity of
training signal selection with a short example. In Figure 4a, two training signals with identiﬁers 351 and

(a) APRBS training signals 351 and 745.

(b) Testing of ROM351 and ROM745 on test signal 703.

Figure 4: Introductory example illustrating the sensitivity of signal selection for ROM training on the
resulting test error.

745, are shown. Both signals are used individually to train a ROM. The testing is performed on signal 703
(compare Figure 4b). Signal 745 produces good results with a RMSE (over time) of 0.7 K. Conversely,

10

0200400600800100012001400300350400450t/sT/KToven745TB745Toven351TB3510200400600800100012001400300350400450t/sT/KToven703(testsignal)TB703(testsignal)ROM745TB:RMSE=0.7KROM351TB:RMSE=13.5Ksignal 351 produces a RMSE over time that is one order of magnitude larger. Subsequently, ROM351
and ROM745 are evaluated on all available test signals to render testing more representative. Instead of
demonstrating all solutions over time, for each evaluation, the test error measures RMSE, MAPE, MAX,
MEDIAN, IQR and R2 are calculated from TB,Test −
TB,ROM over all time steps. Figure 5 shows the
histogram of those error measures, calculated for all test data.

Figure 5: Distribution of error measures for 1-signal-ROM351 and for 1-signal-ROM745.

Table 3: Average error measures of Figure 5.

ROM351 ROM745

RMSE / K
MAPE / %
MAX / K
MEDIAN / K
IQR / K
R2 / -

5.90
1.68
8.84
5.67
3.30
0.90

0.97
0.22
2.33
0.01
1.20
1.00

It appears that test error measures are normally distributed for a suﬃciently large test data set. It
seems appropriate to average the error measures to obtain six global error measures per 1-signal-ROM.
Table 3 displays the averaged error measures for ROM351 and ROM745. Obviously, several signals convey
more information on the physical system than others during reduced-order modeling. This study aims to
ﬁnd a property (KPI) of the signals that can allow us to select the “best-possible” training signal out of a
large set of excitation signals.

3.2 ROM training and evaluation setup

A total of 100 single sinAPRBS, APRBS, and multi-sine (with and without Schroeder phases) signals
were used individually to train a ROM, termed 1-signal ROM hereafter. For better identiﬁcation, the
signals have a unique alphanumeric identiﬁer ranging from 272 to 1087. A ﬁxed complexity of i = 2 of the
DynROM method ensures equal training conditions. There is hardly any correlation (R = 0.096) between
training error (MEDIAN(RMSEtrain) = 0.22 K, STD(RMSEtrain) = 0.14 K) and test errors. Consequently,
the training error has no signiﬁcant eﬀect on the study outcomes with respect to test RMSEs of the ROMs.

11

051000.10.20.3RMSE/KProbability/-02400.20.4MAPE/%Probability/-05101500.10.2MAX/KProbability/-ROM745ROM3510246800.1IQR/KProbability/-051000.20.4MEDIAN/KProbability/-0.60.70.80.9100.20.40.60.81R2/-Probability/-The ROMs’ training and testing have to follow an objective study design to render the study outcomes
statistically signiﬁcant. One ﬁnding is that testing has to be performed on fair evaluation sets introduced
hereafter. It is common practice to test ROMs on input data sets that have not been used for training.

(a) Histograms of a biased test data set.

(b) Histograms of an unbiased test data set (AP15).

Figure 6: Test sets with equally distributed Toven excitation signals (top left) show pronounced biased sur-
face temperatures for testing (top right). Fair evaluation sets, here AP15, show a more uniform distribution
of TB (bottom row).

The ultimate goal is to predict how the estimated ROM can generalize on a yet unknown data set. Cross-
validation can be considered a method to separate data into train and test sets with multiple iterations
and combinations. One possible approach is the k-fold cross-validation, where k is the number of portions
into which the original data set is divided. The presented procedure can be considered the limit case
for a k-fold cross-validation with k = Ntotal: all signals were used individually to train a ROM and were
evaluated upon complementary signals.

One central requirement for ROMs is validity in a deﬁned variable range. Hence, test data should
objectively represent this range. However, pseudo-randomly distributed APRBS excitation signals Toven
show a normal-like distribution in their medians. Due to the physical nature of the heating process, the
distribution can also be observed for TB (compare Figure 6a). The ﬁrst plot shows a histogram of all
amplitudes of Toven and the median oven temperature MEDIAN(Toven) per signal. The second plot depicts
a histogram of all values of TB and the MEDIAN(TB) per signal. One can visually consider the pseudo-
random oven temperature order as a random experiment with two or more dice. The sum has a normal
distribution.

It was discovered that leaving only the rest of the data set as test data would not produce neutral
feedback on the ideal characteristics of an excitation signal. The test data would advantage ROMs that
were trained with signals with a MEDIAN(TB) that is close to the mean median of all TB. The bias holds for
random picks out of the complementary data set as well. The concept of beﬁtted cross-validation motivates
to include expert input concerning the data generation structure during the selection process for test data
sets (Kenett et al., 2022). In that spirit, one may postulate that fair test data sets should be uniformly
distributed concerning the medians of the temperature range of Toven. With a null hypothesis, “our
observations of TB come from a uniform distribution”, this study selected test set candidates methodically,
with a χ2 test (p = 0.05, nbins = 6) for each class of signal types. The test sets with 15 signals per set are

12

3003504004500246·10−2Toven/KProbability/-TovenMEDIAN(Toven)3003203403600246·10−2TB/KProbability/-TBMEDIAN(TB)3003504004500246·10−2Toven/KProbability/-3003203403600246·10−2TB/KProbability/-termed AP15 (APRBS), sinAP15 (sinAPRBS), and MS15 (multi-sines) hereafter. Fair evaluation sets,
such as AP15, reveal an equal distribution of TB and evenly distributed median temperatures per signal
case (Figure 6b).

Typically, the steps of Toven in APRBS signals cannot be realized by convection ovens instantaneously
due to “lagging” thermodynamical eﬀects. Hence, sinAPRBS signals are more suitable to emulate this
behavior during testing. Moreover, a mixed test set was created by adding AP15, sinAP15, and MS15,
to emulate a mixed operational usage of the model. The test sets are presented in the supplementary
material of this article. Each ROM is tested on AP15, sinAP15 and MS15. The average error measures
are calculated individually for each test data set. Note that none of the hereafter discussed training signal
candidates are included in the test sets. This would, of course, bias the results.

3.3 The inﬂuence of input space coverage on test error

Often, literature suggests a uniform coverage of the models’ input space (Nelles, 2020) or output space
(Talis et al., 2021) when synthesizing excitation signals. The input space is spanned by the excitation
(here: Toven) and system states (here: TA or TB). Excitation signal and system states serve as inputs to
the neural network of DynROM (compare Equation 5). One expects to cover the maximum of the system’s
operating conditions while equally covering the input space. As the system states depend on past states,
an input space covering signal design is a challenging task (Heinz and Nelles, 2017). Figure 7 visualizes
the concept of input spaces. The simulation input and output are recorded over time for an APRBS (745)
and a sinAPRBS (1077) excitation (Figure 7a) together with a step (778) and single-sine (782) excitation
(Figure 7b). The excitation signal Toven and system output TB can be related to the points in the input

(a) APRBS and corresponding
sinAPRBS

(b) Step and sine

(c) Input space

Figure 7: Training cases with step, sine, APRBS and sinAPRBS signals and their corresponding input
space.

space plot of Figure 7c. An optimal input space coverage would implicate a uniform, two-dimensional
distribution of points in this ﬁgure. The implemented input space coverage measure (Cv) in this article
is inspired by Heinz and Nelles, 2018, which is based on the maximin criterion (Johnson, Moore, and
Ylvisaker, 1990):

Cv =

1
N

N
(cid:88)

k=1

dist( ˜Z, Zk) ,

dist( ˜Z, Zk) = min
m |

Zm −

,

Zk|

13

(13)

(14)

05001000300350400450t/sT/KToven745TB745Toven1077TB10775001000300350400450t/sT/KToven778TB778Toven782TB782300350300350400450TB/KToven/K778(step)782(sine)1077(sinAPRBS)745(APRBS)where ˜Z is the input space matrix Z = [U (cid:48), Y (cid:48)] without the currently considered row (time-step) Zk =
[Toven,k TB,k]. Note that only signals with equal number of time-steps card(Z) = N are comparable with
this implementation. The dist() function is realized via nearest neighbors with Euclidian distances. A
high value of Cv implies that areas without data points are penalized best.

Table 4 summarizes the input space coverage Cv of the example signals in Figure 7. Moreover, it shows

Table 4: Introductory example: comparison of input space coverage Cv and 1-signal-ROM test errors for
step, sine, APRBS and sinAPRBS signal types.

ROM-ID
Signal type

Cv / -

RMSE / K
MAPE / %
MAX / K
MEDIAN / K
IQR / K
R2 / -

ROM778 ROM782 ROM745
APRBS

step

sine

0.39

24.09
5.68
44.16
-19.81
24.33
-0.32

1.07

2.95
0.75
6.00
2.24
2.84
0.98

0.27

1.31
0.28
3.02
0.25
1.64
1.00

ROM1077
sinAPRBS

0.97

3.69
0.84
7.28
0.78
4.97
0.95

the test errors on sinAP15 when each signal is used to train a 1-signal-ROM. Although the APRBS signal
possesses the lowest input space coverage, it has the lowest test error. It becomes evident how careful
signals should be picked for non-linear ROM training. Although all signals show a similar trajectory of TB, a
signiﬁcantly diﬀerent test success can be observed. Single-step or sinusoidal signals should certainly not be
employed for ROM training. APRBS seem to convey more information to the ROM than their sinAPRBS
sinAPRBS signals increase the ROM test error compared to their APRBS counterpart
counterparts.
signal. Regarding the presented thermal processing of chicken meat, the directive of maximizing the input
space coverage might – surprisingly – not hold. Although the single sine provides the highest input space
coverage Cv in this introductory example, it by far does not provide the lowest test error (see Table 4). In
the following section, the presented ﬁndings are investigated in a more statistically representative setting.

3.4 Correlations between signal KPIs and test errors

This section investigates correlations between signal properties (KPIs) and ROM test errors. Such infor-
mation would allow to synthesize and select the “best-possible” excitation signals that ensure low ROM
test errors – just based on measures that can be calculated from the training data. One can diﬀerentiate
a priori (only evaluating the excitation signal) and a posteriori (evaluating excitation signal or system
output or both) KPIs .

Concerning APRBS signals, the most signiﬁcant correlation could be found for STD(TB), which is an
a posteriori KPI. The top row of Figure 8 depicts the correlation between STD(TB) and test RMSE on
the test sets AP15, sinAP15 and MS15. A regression curve ﬁt (black line) and p = 0.95 bounds (dashed
lines) were added for the APRBS signals (black diamonds). Each marker symbolizes the evaluation of a
1-signal-ROM on the respective test set. The RMSE is the mean error for the test set, as explained in
Sec. 3.1. Note that the strong STD(TB)-to-test-RMSE-correlation does not hold for multi-sine testing (top
right plot of Figure 8).

A summary of all correlations can be found in Table 5. It denotes Pearson’s correlation coeﬃcient
between test error measures (rows) and a priori and a posteriori excitation signal KPIs (columns) for
APRBS signals. Testing was performed on AP15. Correlation tables for the residual test sets sinAP15
and MS15 are given in the supplementary material of this article. The presented correlation trends hold
not only for the data sets AP15, sinAP15 and MS15. The trends also hold for testing on all complementary
APRBS signals and for other large sinAPRBS and APRBS data sets not presented in this article.

14

The correlation between input space coverage Cv and error measures is low (compare respective column
in Table 5). It even reveals the opposite trend direction to what is expected from advice in the literature.
R = 0.33 decodes to: high input coverage results in high test errors. This is also visualized in the center of
the bottom row in Figure 8. Moreover, although multi-sine signals have high input space coverages, they
do not signiﬁcantly correlate with the error measures (see the top row and bottom right plot of Figure 8).

Figure 8: Correlations of signal KPIs and error measures for APRBS (
(
), Schroeder Multi-Sine (
signals are added when appropriate.

), Multi-Sine (

), sinAPRBS
). Regression curve and p = 0.95 bounds for APRBS

), Best 5 APRBS (

Table 5: Pearson’s correlation matrix between error measures (rows) and a priori and a posteriori excitation
signal KPIs (columns) for APRBS 1-signal-ROMs (test set: AP15). STD(TB) shows the best a posteriori
correlation while Tdiﬀ,j is a potential a priori KPI.

Ti Tdiﬀ,i Tdiﬀ,j

0.18
RMSE
0.20
MAPE
MAX
0.13
MEDIAN 0.19
0.31
IQR
R2
-0.23

-0.39
-0.38
-0.47
-0.37
-0.07
0.40

-0.68
-0.69
-0.69
-0.72
-0.32
0.60

|

Tdiﬀ,i|
0.40
0.43
0.33
0.50
0.23
-0.29

T oven STD(Toven) Cr(Toven) Cv(Toven) Cv(TB) Cv(Toven, TB) STD(TA) STD(TB)

0.33
0.35
0.25
0.35
0.36
-0.37

-0.12
-0.11
-0.13
-0.09
-0.02
0.13

-0.13
-0.14
-0.10
-0.13
-0.07
0.14

0.25
0.24
0.26
0.19
0.28
-0.24

-0.29
-0.28
-0.36
-0.32
0.12
0.19

0.33
0.37
0.22
0.43
0.21
-0.25

-0.05
-0.06
0.03
-0.11
-0.08
-0.08

-0.76
-0.78
-0.70
-0.83
-0.37
0.61

In the class of a priori KPIs, Tdiﬀ,j shows a strong correlation to error measures (compare Figure 8
(bottom-left)). It reveals that APRBS signals with a globally ascending trend guarantee lower ROM test
errors. Remember that Tdiﬀ,j is the mean signed sum of delta jumps of an APRBS signal, where the
ﬁrst jump is excluded from the calculation. A similar interpretation seems valid when the best and worst
training signals are analyzed over time and in their input space, as depicted in Figure 9. For example,
signal 351 has high oven temperatures in the ﬁrst steps and subsequently induces high surface temperatures
at the run’s end. Here, the model’s evaporation non-linearity gets dominant. Good training signals seem
to cover the top area above the main diagonal, and underperforming training signals the area above the
secondary diagonal of the input space diagram (right column of Figure 9).

15

246810102030TestonAP15R=-0.76RMSE/KSTD(TB)/K246810102030TestonsinAP15R=-0.69RMSE/KSTD(TB)/K2468102030TestonMS15R=-0.18RMSE/KSTD(TB)/K246810−50050TestonAP15R=-0.68RMSE/KTdiff,j/K2468100.20.30.40.5TestonAP15R=0.33RMSE/KCv(Tov,TB)/-246810123TestonsinAP15RMSE/KCv(Tov,TB)/-(a) Unsuccessful training signals.

(b) Successful training signals.

Figure 9: Illustration of successful and unsuccessful APRBS and multi-sine training cases and their re-
spective input space coverage (right column). RMSE evaluated on test set AP15.

3.5 Signal type comparison

Error measures for the ﬁve best training signals per signal type were averaged. This renders the decision on
what could be the most suitable signal type more robust for outliers. Figure 10 shows the mean test RMSE
for all available test sets. Obviously, step signals should not be used for non-linear system identiﬁcation,
which agrees with the literature (Nelles, 2020). As expected, multi-sine trained ROMs perform best on
multi-sine test sets. However, APRBS signals perform best when we consider all test scenarios. The best
ﬁve APRBS signals have also been highlighted in red in Figure 8 for better identiﬁcation. Based on these
ﬁndings, the focus of the residual study shifts to multi-step signals, as they seem the most suitable signal
type.

Figure 10: Mean RMSE of the best ﬁve training signals of their kind. Testing is performed on six diﬀerent
test sets. APRBS signals perform best from a global perspective.

16

05001000300350400450STD(TB)=17.7KRMSE=9.60Kt/sT/KToven351TB35105001000300350400450STD(TB)=14.6KRMSE=6.41Kt/sToven371TB37105001000300350400450STD(TB)=19.7KRMSE=8.52Kt/sToven555TB55505001000300350400450STD(TB)=21.7KRMSE=7.20Kt/sToven819TB819280320360300350400450TB/KToven/K351Cv=0.45371Cv=0.29555Cv=0.41819Cv=2.3705001000300350400450STD(TB)=31.8KRMSE=1.10Kt/sT/KToven312TB31205001000300350400450STD(TB)=22.6KRMSE=1.05Kt/sToven553TB55305001000300350400450STD(TB)=26.2KRMSE=1.05Kt/sToven745TB74505001000300350400450STD(TB)=18.0KRMSE=2.04Kt/sToven795TB795280320360300350400450TB/KToven/K312Cv=0.32553Cv=0.31745Cv=0.27795Cv=2.41SingleStepAP15sinAP15SingleSineMS15Mixed0246RMSE/KBest5MSSchroederBest5MSBest5sinAPRBSBest5APRBS3.6 sinAPRBS generated from APRBS degrade the test error

In Figure 10, the best ﬁve sinAPRBS tend to perform worse than APRBS, even on sinAP15. This tendency
is further investigated with the following test. The best 15 APRBS signals have been transformed into
fast and slower sinAPRBS. Figure 11 illustrates the transformation for APRBS 745. Observe the marginal
diﬀerences in TB. Nonetheless, Table 6 conﬁrms the trend we have already discovered in the above sections:
sinAPRBS signals increase the test RMSE with decreasing speeds of the sinusoidal transitions. This can
be explained since rapid signals, such as steps, are considered to excite the broadest frequency range of a
system. This property is taken from APRBS when sinusoidal transitions are inserted.

Figure 11: Transformation of APRBS signal 745 to a fast and slow sinAPRBS signal.

Table 6: Mean error measures of 15 APRBS ROMs and their transformed fast and slow sinAPRBS ROMs.

APRBS

sinAPRBS (fast)

sinAPRBS (slow)

1.63
RMSE / K
0.38
MAPE / -
MAX / K
3.91
MEDIAN / K 0.15
1.64
IQR / K
R2 / -
0.99

2.32
0.58
4.79
0.48
2.46
0.97

2.90
0.67
6.22
0.14
3.36
0.94

Figure 12: Extrapolation capability of the best 1-signal.

17

0200400600800100012001400300350400t/sT/KToven745TB745Toven1056TB1056Toven1077TB10770200400600800100012001400160018002000220024002600300350400t/sT/KToven303repeatedTB303repeatedROM745TB:RMSE=2.27K3.7 DynROM investigations

Extrapolation capability Extrapolation capability is a desired property for ROMs. The prediction re-
mains valid, even if the trained parameter space is left. For a transient ROM, the trained time frame is
also such a parameter. A simple test design is set up. One test signal 303 is catenated with a repetition
of its own. Figure 12 depicts how the surface temperatures evolve for 1-signal-ROM745. One can observe
the non-linear behavior of the physical model due to evaporation eﬀects. In the second segment, the core
and surface behave substantially diﬀerently from the ﬁrst, although the excitation signal was repeated.
The non-linear ROMs can extrapolate this behavior reasonably well, with RMSEs in the value range of
the physical validation of the model (Figure 3b).

A build-up of the prediction error from the onset of leaving the trained time window of 1400 s can be
observed. A possible source for the accumulating error is the extended non-linear behavior of our physical
model at high temperatures. The surface evaporation acts as a heat sink and holds temperatures within
the boiling temperature range. Once the surface dries out, surface temperatures can heat up further.
If this behavior is intended to be included in the ROM more, the required time frame and higher oven
temperatures would have to be included in the training.

Speed-up Preliminary results of our model predictive control architecture (results not shown) reveal that
ROMs are required to solve within tenths of a second to predict a processing time of 1800 s. For this simple
cuboid model (with conjugate CFD not yet included), the requirement equals a necessary simulation speed-
104. Speed-ups are deﬁned in relation to physical process times, not the simulation times of
up of Sp
the full-order model. Previous investigations of conjugate open pan-frying in a realistic 3D setup required
solving times of approximately two days on a 16-core cluster PC (compare Table 7). The solution of the
quarter cube model of this study takes approximately 730 s to be solved on four cores of a modern laptop at
104)
full load. Conversely, the resulting FMU ﬁle provides simulations typically within 100 ms (Sp
with no noticeable single-core computational load.

1.8

≈

×

≈

Table 7: Comparison of simulation and speed-up for a CFD conjugate heat transfer simulation (Kannapinn
and Schäfer, 2019) of open-pan frying with a Finite Element and a DynROM simulation of the present
challenge.

Type

Real time

Time Computational load Problem info

CFD

FEM

2000 s

181 212 s

1800 s

730 s

DynROM 1800 s

0.1 s

≈

×

3.2 GHz

parallel, full load
16
parallel, full load
3.2 GHz
4
serial, not noticable
1

3.2 GHz

×

×

588 959 DOFs

51 094 DOFs

FMU

1.8

×

≈

104

Sp

0.01

2.47

ROM evaluations over time To conclude the investigations, Figure 13 depicts the evaluation of the best
multi-sine and APRBS 1-signal-ROMs. Representative oven temperatures (ﬁrst row) of sinAPRBS (left
column), APRBS (central columns), and multi-sine (right column) signal types are chosen for testing. The
best multi-sine 1-signal-ROM795 evaluations for core (black, dash-dotted) and surface (black, dashed)
temperatures can be found in Figure 13b. Figure 13c illustrates the evaluation of the best APRBS 1-
signal-ROM745 (black dash-dotted and dashed lines).
It can follow the core (grey) and surface (blue)
temperatures of the full-order model with RMSE < 1 K. To elucidate once more the importance of proper
signal selection for ROM training, ROM evaluations for the worst APRBS (red) and multi-sine (green)
ROM were also displayed in Figure 13.

18

(a) Test signals.

(b) Testing of best (795) and worst (819) multi-sine 1-signal-ROM.

(c) Testing of best (745) and worst (351) APRBS 1-signal-ROM.

Figure 13: Time evaluation of representative ROMs: selected test signals (a), multi-sine ROMs (b), step
and multi-step ROMs (c). The full-order model solutions of TA and TB are represented by the grey and
blue solid lines.

19

05001000300350400450t/sT/K840Toven05001000300350400450t/s303Toven05001000300350400450t/s703Toven05001000300350400450t/s1050Toven05001000280300320340360t/sT/K795TA:RMSE=1.3K795TB:RMSE=2.0K819TA:RMSE=10.3K819TB:RMSE=8.5K05001000280300320340360t/s795TA:RMSE=1.7K795TB:RMSE=1.0K819TA:RMSE=1.9K819TB:RMSE=1.6K05001000280300320340360t/s795TA:RMSE=1.2K795TB:RMSE=1.9K819TA:RMSE=9.6K819TB:RMSE=7.9K05001000280300320340360t/s795TA:RMSE=0.6K795TB:RMSE=0.4K819TA:RMSE=6.0K819TB:RMSE=4.3K05001000280300320340360t/sT/K745TA:RMSE=0.3K745TB:RMSE=0.3K351TA:RMSE=19.2K351TB:RMSE=14.3K05001000280300320340360t/s745TA:RMSE=0.8K745TB:RMSE=0.9K351TA:RMSE=6.9K351TB:RMSE=5.1K05001000280300320340360t/s745TA:RMSE=0.5K745TB:RMSE=0.7K351TA:RMSE=18.1K351TB:RMSE=13.5K05001000280300320340360t/s745TA:RMSE=0.4K745TB:RMSE=0.6K351TA:RMSE=7.2K351TB:RMSE=5.2K4 Conclusion and outlook

≈

×

1.8

Results and discussion The presented method can provide physics-based data-driven ROMs with speed-
104 compared to real-time simulation. With characteristic solution times of one-tenth
ups of Sp
of a second, the faster-than-real-time simulations enable the ROM usage in “on-device” model predictive
control. The computational load is not noticeable on a single-core processor. Meanwhile, MAPE = 0.2 %,
and RMSEs less than 1 K can be reached. The accuracy is better than the precision of standard industrial
thermocouples, and the test RMSE is signiﬁcantly less than the validation error of the utilized food model.
When considering a suitable excitation signal type for data-driven ROM generation, one must dis-
tinguish ROM training, testing, and operation. APRBS signals should be used for training. They show
the lowest mean test errors on APRBS, sinAPRBS, single-step or single-sine test sets. Testing should
be performed on unbiased, fair test data sets. Uniform distribution of output variable can be obtained
with a χ2-based signal picking. sinAPRBS emulate the operational temperatures in convection ovens best.
APRBS-trained ROMs show even lower test errors on sinAPRBS than on APRBS test sets. This ﬁnding
contradicts common recommendations in the literature, where signal types close to operational signals are
suggested for training (Gringard and Kroll, 2016). Multi-sines may be appropriate training signals if the
operational scenario is purely sinusoidal.

This article focuses on one cornerstone of our proposed Digital Twin framework: parsimonious design
of experiments that ensure a high-ﬁdelity ROM generation. Compared to many other machine learning
approaches, this method requires substantially less training data: only one signal of 1400 s in length. A
key feature of the procedure is the a priori analysis of the full-order model training data. KPIs support
the selection of the most suitable training signal. A common recommendation in literature is the even
coverage of input or output space of a model (Nelles, 2020; Talis et al., 2021). We demonstrated that this
paradigm might not hold for the utilized thermal processing model. Alternatively, high standard deviation
in surface temperatures or the signed sum of the oven temperatures in APRBS signals can serve as good
KPIs to select training signals. The two KPIs correlate best with a ROM’s test error, R =
0.76 and
R =

0.68, respectively.

−

This study potentially serves as a ﬁrst guidance for ROM training design of experiments in the context
of convection oven heating processes. Similar trends of correlations are expected for similar heating
scenarios, as long as heat input and loss mechanisms, eﬀective transport properties, porosity, moisture
content, operational temperatures and time remain in comparable value ranges. If, for example, a diﬀerent
product should be processed autonomously in an existing smart cooking device, one may want to exchange
the simulation model. If so, the presented framework is capable of doing a complete model exchange. We
suggest the following course of action:

−

• Consider the maximum total process time and divide it into a reasonable amount of input steps /
operational conditions (such as four steps in this study, taking into consideration the largest time
constant of the model).

• APRBS signals should be the preferred training signals for non-linear system identiﬁcation unless

testing and application are exclusively sinusoidal.

• Consider sinAPRBS as an appropriate test signal if the physical process device cannot realize fast
steps of the input signal (such as the thermal lag of the oven temperature in the presented case).

• A signiﬁcant number of pseudo-random signals should be generated (such as 50 - 100 in this study)

to excite the full-order model.

• Generate a 1-signal-ROM for each signal and test the ROM upon the complementary, residual data

sets.

20

• In the case of diﬀerent physics compared to the presented convection oven scenario, a novel correlation

between signal property and test RMSE may have to be found.

• A fair test subset of signals may be curated, as outlined in Sec. 3.2.

• The signals should be sorted based on their KPIs, such as high STD(TB)-signals being listed ﬁrst.

• Select the best performing 1-signal-ROM as the base case and combine it with other one or two high

KPI signals to further reduce the test error.

• Repeat combinatory rotation of signals until test error reduction stagnates.

Contributions Overall, the presented Digital Twin framework for thermal processing contributes to shift-
ing the perspective on Digital Twins towards the autonomy of processes. The method is designed to be
applicable in the industry and is universal to modeling software. This is especially beneﬁcial for food sci-
ence and technology, where various numerical approaches and software are used to model food processes
(Datta, 2016). Our code framework “TwinLab” automates signal synthesis, ROM training and testing.
Interfaces for full-order models in COMSOL Multiphysics or ANSYS Fluent and subsequent ROM gen-
eration with ANSYS DynROM are implemented. The source code will be made publicly available on
GitHub. The resulting ROMs are stored in the encrypted FMU format. The small ﬁles can be easily
deployed and updated via software updates of the processing devices. From a more global perspective, the
method enables Digital Twin-based autonomy to a much broader spectrum of processes, not restricted to
food science.

Outlook Four future directions will be taken to approach the completion of the presented framework:

• On the foundation of the developed KPIs, the combination of training signals may be investigated

to further reduce the ROM test error.

• The extension to realistic shapes seems promising. The three-dimensional full-order model data can
be compressed with proper orthogonal decomposition. The time-dependent mode shape coeﬃcients
may be trained in ROMs in the same manner as the temperatures in this study.

• The presented ROM speed-ups allow deriving an intelligent decision-making algorithm based on

model predictive control that is executable on device level.

• The utilized thermal processing model by Rabeler and Feyissa, 2018 lumps convection and radiation
mechanisms in a heat transfer coeﬃcient. The heating mechanisms cannot be controlled separately.
This is a common practice observed within food science literature. We believe that conjugate CFD
models – hence, coupling food processing models with explicitly simulated thermal CFD – will
substantially increase model quality. Ultimately, a more realistic model enables enhanced Digital
Twin-based control of the process.

Author contributions

Conceptualization, M.K.; methodology, M.K..; software, M.K., M.P.; validation, M.K.; formal analysis,
M.K.; investigation, M.K.; data curation, M.K., M.P.; writing – original draft preparation, M.K.; writing
– review and editing, M.K.; visualization, M.K.; supervision of M.P., M.K.; supervision, M.S.; All authors
have read and agreed to the published version of the manuscript.

21

Acknowledgments

The work of Maximilian Kannapinn is supported by the Graduate School CE within the Centre for
Computational Engineering at Technische Universität Darmstadt. Maximilian Kannapinn would like to
thank Christoph Petre and Valery Morgenthaler for their information on Dynamic ROM Builder.

Declarations of interest

none

A Swelling pressure model for thermal processing of chicken ﬁllet

The conservation of water concentration c (mol m−

3) and energy, here for temperature T (K), reads:

∂c
∂t

+

∂
∂xi

(cui) =

ρcp

∂T
∂t

+ ρwcp,wui

∂T
∂xi

=

∂
∂xi
∂
∂xi

(cid:18)

Dcb

(cid:18)

λij

∂c
∂xi
∂T
∂xj

(cid:19)

(cid:19)

,

.

(15)

(16)

Speciﬁc heat cp,i and thermal conductivity λij of the food components protein, ash, fat and water are
modeled temperature-dependent with formulas by Choi and Okos, 1986. The ﬁber orientation of the ﬁllet
(horizontal direction of Figure 3a) is accounted for with the parallel and serial model when calculating the
eﬀective thermal conductivity,

λparallel =

n
(cid:88)

i=1

φiλi,

1
λperp.

=

n
(cid:88)

i=1

φi
λi

,

where φi is the respective volume fraction. The eﬀective speciﬁc heat is obtained from

cp =

n
(cid:88)

i=1

yi cp,i ,

(17)

(18)

where yi is the respective mass fraction of the component. The mass fractions of protein (0.21), ash
(0.01), and fat (0.01) remain ﬁxed, whereas their volume fractions vary dynamically with varying moisture
concentrations. The boundary conditions for mass and energy conservation read

Table 8: Constants and initial conditions

Variable Name

Value

Constant Value

C0
T0
ρ
Dcb
hamb
Hevap
aw

c0 = C0 ρcb
Mw

⇒

Initial moisture mass fraction C0 = 0.76
Initial temperature
Eﬀective density
Eﬀective Diﬀusity
Heat transfer coeﬃcient
Latent heat of evaporation
Water activity

Tσ
T
279.15 K
1050 kg m−3
∆T
G(cid:48)
3
44 (50) W m−2 K−1 (bottom) G(cid:48)
0
κ
2.3
µw
1
ρw

10−10 m2 s−1

×
0.073
Mdb

106 J/kg

−

×

max

22

315 K
342.15 K
4 K
92 000 Pa
13 500 Pa
3
×
0.988
×
998 kg m−3

10−17 m2

10−3 kg m−1 s−1

(cid:18)

cui −

Dcb

(cid:19)

∂c
∂xi

Ni =

mevap
Mw
(cid:18)

−

βtot

−

aw

=

(cid:19)

=

βtot
Mw

−

(xv,surf −

psat(Tsurf)

R Tsurf −

Φ

pamb
R Toven

xv,amb)
(cid:19)

,

(cid:18)

ρcp ui −

λij

∂T
∂xj

Ni = hamb(Toven −

T )

−

mevapHevap ,

(19)

(20)

(21)

where psat and pamb are the vapor pressures at the surface and in the oven. R is the universal gas constant.
Oven conditions have a ﬁxed relative humidity of Φ = 0.05

The total mass transfer coeﬃcient is determined via the serial model. The external mass transfer

coeﬃcient is determined from the Chilton-Colburn relation:

βext =

hamb
ρambcp,amb

Le −

2/3, Le =

Sc
Pr ≈

0.91

where Le, Sc and Pr are the Lewis, Schmidt, and Prandtl number. The skin coeﬃcient

βskin = 0.04 CF (T ) ,

(22)

(23)

accounts for surface resistance to evaporation with a function F (T ) which transitions the exponent from
7 to 1 when the boiling temperature is reached. The serial model for the total mass transfer coeﬃcient

βtot =

1
+ 1
βskin

1
βext

(24)

pronounces βskin for small C (dry surfaces) and reduces the total mass transfer coeﬃcient to a value
considerably less than βext.

Swelling pressure ﬂow in porous media Darcy’s law is used to relate the velocity ui to a pressure gradient

p:

∇

ui =

κ
µw

∂p
∂xi

,

−

(25)

where κ denotes the permeability of the matrix and µw is the viscosity of water. Protein denaturation
induces shrinkage during a roasting process, which results in water exudation at the surface. For thermal
processing applications, the internal pressure p due to shrinkage can be related to the water concentration
in meat as

p = G(cid:48)(T ) (C

−

Ceq(T )) ,
0.31

Ceq(T ) = C0 −

G(cid:48)(T ) = G(cid:48)max +

0.17 (T

1 + 30 exp (
G(cid:48)0 −
1 + exp

−
G(cid:48)max
(cid:16) T
T
−
∆T

(cid:17) ,

,

Tσ))

−

(26)

(27)

(28)

where Ceq is water holding capacity and G(cid:48)(T ) is a modeled storage modulus. The required constants are
summarized in Table 8. For more details on the food model, the reader is referred to Rabeler and Feyissa,
2018.

23

References

AIAA (2020). Digital Twin: Deﬁnition & Value. Tech. rep.
Alonso, A., J. Pitarch, L. Antelo, and C. Vilas (2021). “Event-based dynamic optimization for food thermal processing:
High-quality food production under raw material variability”. In: Food and Bioproducts Processing 127, pp. 162–173.
doi: 10.1016/j.fbp.2021.02.013.

Alonso, A. A., A. Arias-Méndez, E. Balsa-Canto, M. R. García, J. I. Molina, C. Vilas, and M. Villafín (2013). “Real time
optimization for quality control of batch thermal sterilization of prepackaged foods”. In: Food Control 32.2, pp. 392–403.
doi: 10.1016/j.foodcont.2013.01.002.
ANSYS Inc (2020). Twin Builder Version 2020R2.
Arias-Mendez, A., A. Warning, A. K. Datta, and E. Balsa-Canto (2013). “Quality and safety driven optimal operation of deep-
fat frying of potato chips”. In: Journal of Food Engineering 119.1, pp. 125–134. doi: 10.1016/j.jfoodeng.2013.05.001.
Automation systems and integration – Digital twin framework for manufacturing – Part 1: Overview and general principles

(2021). Standard. International Organization for Standardization.

Calka, M., P. Perrier, J. Ohayon, C. Grivot-Boichon, M. Rochette, and Y. Payan (2021). “Machine-Learning based model
order reduction of a biomechanical model of the human tongue”. In: Computer Methods and Programs in Biomedicine
198, p. 105786. doi: 10.1016/j.cmpb.2020.105786.

Chen, C., J. Twycross, and J. M. Garibaldi (2017). “A new accuracy measure based on bounded relative error for time series

forecasting”. In: PLOS ONE 12.3. doi: 10.1371/journal.pone.0174202.

Choi, Y. and M. R. Okos (1986). “Eﬀects of temperature and composition on thermal properties of foods”. In: Journal of

Food Process and Applications 1.1, pp. 93–101.

Clark, M. A., N. G. G. Domingo, K. K. Colgan, S. K. Thakrar, D. Tilman, J. Lynch, I. M. L. Azevedo, and J. D. Hill
(2020). “Global food system emissions could preclude achieving the 1.5 ◦ and 2 ◦C climate change targets”. In: Science
370, pp. 705 –708. doi: 10.1126/science.aba7357.

Datta, A. (2007). “Porous media approaches to studying simultaneous heat and mass transfer in food processes. I: Problem

formulations”. In: Journal of Food Engineering 80.1, pp. 80 –95. doi: 10.1016/j.jfoodeng.2006.05.013.

— (2016). “Toward computer-aided food engineering: Mechanistic frameworks for evolution of product, quality and safety

during processing”. In: Journal of Food Engineering 176, pp. 9 –27. doi: 10.1016/j.jfoodeng.2015.10.010.

Datta, A. K., R. van der Sman, T. Gulati, and A. Warning (2012). “Soft matter approaches as enablers for food macroscale

simulation”. In: Faraday Discuss. 158 (0), pp. 435–459. doi: 10.1039/C2FD20042B.

Defraeye, T., G. Tagliavini, W. Wu, K. Prawiranto, S. Schudel, M. Assefa Kerisima, P. Verboven, and A. Bühlmann (2019).
“Digital twins probe into food cooling and biochemical quality changes for reducing losses in refrigerated supply chains”.
In: Resources, Conservation and Recycling 149, pp. 778–794. doi: 10.1016/j.resconrec.2019.06.002.

Eppinger, T., G. Longwell, P. Mas, K. Goodheart, U. Badiali, and R. Aglave (2021). “Increase Food Production Eﬃciency Us-
ing the Executable Digital Twin (xdt)”. In: Chemical Engineering Transactions 87, pp. 37–42. doi: 10.3303/CET2187007.

Food Code (2017). U.S. Public Health Service. Tech. rep. Food and Drug Administration.
Glaessgen, E. and D. Stargel (2012). “The Digital Twin Paradigm for Future NASA and U.S. Air Force Vehicles”. In:
53rd AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics and Materials Conference. American Institute of
Aeronautics and Astronautics. doi: 10.2514/6.2012-1818.

Grieves, M. and J. Vickers (2017). “Digital Twin: Mitigating Unpredictable, Undesirable Emergent Behavior in Complex
Systems”. In: Transdisciplinary Perspectives on Complex Systems: New Findings and Approaches. Ed. by F.-J. Kahlen,
S. Flumerfelt, and A. Alves. Cham: Springer International Publishing, pp. 85–113. doi: 10.1007/978-3-319-38756-7_4.
Gringard, M. and A. Kroll (2016). “On the parametrization of APRBS and multisine test signals for the identiﬁcation of
nonlinear dynamic TS-models”. In: 2016 IEEE Symposium Series on Computational Intelligence (SSCI), pp. 1–8. doi:
10.1109/SSCI.2016.7849984.

Guo, P., P. O. Dusadeerungsikul, and S. Y. Nof (2018). “Agricultural cyber physical system collaboration for greenhouse stress
management”. In: Computers and Electronics in Agriculture 150, pp. 439–454. doi: 10.1016/j.compag.2018.05.022.
Hadiyanto, H., D. Esveld, R. Boom, G. van Straten, and A. van Boxtel (2008). “Control vector parameterization with
sensitivity based reﬁnement applied to baking optimization”. In: Food and Bioproducts Processing 86.2. ECCE-6, pp. 130–
141. doi: 10.1016/j.fbp.2008.03.007.

Heinz, T. O. and O. Nelles (2016). “Vergleich von Anregungssignalen für Nichtlineare Identiﬁkationsaufgaben”. In: KIT

Scientiﬁc Publishing, pp. 139–158.

— (2017). “Iterative Excitation Signal Design for Nonlinear Dynamic Black-Box Models”. In: Procedia Computer Science

112, pp. 1054–1061. doi: 10.1016/j.procs.2017.08.112.

— (2018). “Excitation signal design for nonlinear dynamic systems with multiple inputs – A data distribution approach”.

In: at - Automatisierungstechnik 66.9, pp. 714–724. doi: 10.1515/auto-2018-0027.

Henrichs, E., T. Noack, A. M. Pinzon Piedrahita, M. A. Salem, J. Stolz, and C. Krupitzer (2022). “Can a Byte Improve Our

Bite? An Analysis of Digital Twins in the Food Industry”. In: Sensors 22.1. doi: 10.3390/s22010115.

24

Hesthaven, J. and S. Ubbiali (2018). “Non-intrusive reduced order modeling of nonlinear problems using neural networks”.

In: Journal of Computational Physics 363, pp. 55–78. doi: 10.1016/j.jcp.2018.02.037.

Huang, Y., A. D. Whittaker, and R. E. Lacey (1998). “Neural Network Prediction Modeling for a Continuous, Snack Food

Frying Process”. In: Transactions of the ASAE 41.5, pp. 1511–1517. doi: 10.13031/2013.17282.

IPCC (2019). “Summary for Policymakers.” In: Climate Change and Land: an IPCC special report on climate change,
desertiﬁcation, land degradation, sustainable land management, food security, and greenhouse gas ﬂuxes in terrestrial
ecosystems. Ed. by P. Shukla et al. In press.

Johnson, M., L. Moore, and D. Ylvisaker (1990). “Minimax and maximin distance designs”. In: Journal of Statistical Planning

and Inference 26.2, pp. 131–148. doi: 10.1016/0378-3758(90)90122-B.

Kannapinn, M. and M. Schäfer (2019). “Endeavouring Intelligent Process Self-Control by Employing Digital Twin Method-

ology: Proof-of-Concept Study for Cooking Applications”. In: CADFEM ANSYS Simulation Conference.

— (2021). “Autonomous Cooking with Digital Twin Methodology”. In: 14th World Congress on Computational Mechanics
(WCCM) and ECCOMAS Congress 2020. Ed. by F. Chinesta, R. Abgrall, O. Allix, and M. Kaliske. doi: 10.23967/wccm-
eccomas.2020.074.

Kenett, R. S., C. Gotwalt, L. Freeman, and X. Deng (2022). “Self-supervised cross validation using data generation structure”.

In: Applied Stochastic Models in Business and Industry 2022.n/a, pp. 1–16. doi: 10.1002/asmb.2701.

Khan, M. I. H., S. S. Sablani, R. Nayak, and Y. Gu (2022). “Machine learning-based modeling in food processing applications:
State of the art”. In: Comprehensive Reviews in Food Science and Food Safety 21.2, pp. 1409–1438. doi: 10.1111/1541-
4337.12912.

Koulouris, A., N. Misailidis, and D. Petrides (2021). “Applications of process and digital twin models for production simulation
and scheduling in the manufacturing of food ingredients and products”. In: Food and Bioproducts Processing 126, pp. 317–
333. doi: 10.1016/j.fbp.2021.01.016.

Langsrud, S., O. Sørheim, S. E. Skuland, V. L. Almli, M. R. Jensen, M. S. Grøvlen, Ø. Ueland, and T. Møretrø (2020).
“Cooking chicken at home: Common or recommended approaches to judge doneness may not assure suﬃcient inactivation
of pathogens”. In: PLOS ONE 15.4, pp. 1–27. doi: 10.1371/journal.pone.0230928.

Li, J., Q. Xiong, K. Wang, X. Shi, and S. Liang (2016). “A recurrent self-evolving fuzzy neural network predictive control
for microwave drying process”. In: Drying Technology 34.12, pp. 1434–1444. doi: 10.1080/07373937.2015.1122612.
Lu, Y., C. Liu, K. I.-K. Wang, H. Huang, and X. Xu (2020). “Digital Twin-driven smart manufacturing: Connotation,
reference model, applications and research issues”. In: Robotics and Computer-Integrated Manufacturing 61, p. 101837.
doi: 10.1016/j.rcim.2019.101837.

Nelles, O. (2020). Nonlinear System Identiﬁcation - From Classical Approaches to Neural Networks, Fuzzy Models, and

Gaussian Processes. 2nd. Springer International Publishing.

Niederer, S. A., M. S. Sacks, M. Girolami, and K. Willcox (2021). “Scaling digital twins from the artisanal to the industrial”.

In: Nature Computational Science 1.5, pp. 313–320. doi: 10.1038/s43588-021-00072-5.

Fachkräftemangel - Als wären das niedere Arbeiten. ZEIT online. (2018).
Prawiranto, K., J. Carmeliet, and T. Defraeye (2021). “Physics-Based Digital Twin Identiﬁes Trade-Oﬀs Between Drying
Time, Fruit Quality, and Energy Use for Solar Drying”. In: Frontiers in Sustainable Food Systems 4. doi: 10.3389/
fsufs.2020.606845.

Rabeler, F. and A. H. Feyissa (2018). “Modelling the transport phenomena and texture changes of chicken breast meat during
the roasting in a convective oven”. In: Journal of Food Engineering 237, pp. 60–68. doi: 10.1016/j.jfoodeng.2018.05.
021.

Rasheed, A., O. San, and T. Kvamsdal (2020). “Digital Twin: Values, Challenges and Enablers From a Modeling Perspective”.

In: IEEE Access 8, pp. 21980–22012. doi: 10.1109/ACCESS.2020.2970143.

Rivas, D., C. V. Fernández, A. A. Alonso, and F. Varas (2013). Derivation of postharvest fruit behavior reduced order models
for online monitoring and control of quality parameters during refrigeration. This work has been partially ﬁnanced by
the Spanish Minis- try of Science et al. doi: 10.1111/jfpe.12010.

Roache, P. J. (1994). “Perspective: A Method for Uniform Reporting of Grid Reﬁnement Studies”. In: J. Fluids Eng 116.3,

pp. 405–413.

Rosen, R., G. von Wichert, G. Lo, and K. D. Bettenhausen (2015). “About The Importance of Autonomy and Digital Twins
for the Future of Manufacturing”. In: IFAC-PapersOnLine 48.3. 15th IFAC Symposium on Information Control Problems
in Manufacturing, pp. 567–572.

Shoji, K., S. Schudel, D. Onwude, C. Shrivastava, and T. Defraeye (2022). “Mapping the postharvest life of imported
fruits from packhouse to retail stores using physics-based digital twins”. In: Resources, Conservation and Recycling 176,
p. 105914. doi: 10.1016/j.resconrec.2021.105914.

Sman, R. van der (2007). “Moisture transport during cooking of meat: An analysis based on Flory–Rehner theory”. In: Meat

Science 76.4, pp. 730–738. doi: 10.1016/j.meatsci.2007.02.014.

Stark, R. and T. Damerau (2019). “CIRP Encyclopedia of Production Engineering - Digital Twin”. In: CIRP Encyclopedia
of Production Engineering. Ed. by S. Chatti and T. Tolio. Springer. doi: 10.1007/978-3-642-35950-7_16870-1.

25

Tagliavini, G., T. Defraeye, and J. Carmeliet (2019). “Multiphysics modeling of convective cooling of non-spherical, multi-
material fruit to unveil its quality evolution throughout the cold chain”. In: Food and Bioproducts Processing 117, pp. 310–
320. doi: 10.1016/j.fbp.2019.07.013.

Talis, T., J. Weigert, E. Esche, and J.-U. Repke (2021). “Adaptive Sampling of Dynamic Systems for Generation of Fast and
Accurate Surrogate Models”. In: Chemie Ingenieur Technik 93.12, pp. 2097–2104. doi: 10.1002/cite.202100109.
Tao, F. and Q. Qi (2019). “Make more digital twins”. In: Nature 573, pp. 490–491. doi: 10.1038/d41586-019-02849-1.
Trehan, S. and L. J. Durlofsky (2016). “Trajectory piecewise quadratic reduced-order model for subsurface ﬂow, with appli-
cation to PDE-constrained optimization”. In: Journal of Computational Physics 326, pp. 446–473. doi: 10.1016/j.jcp.
2016.08.032.

U.S. Provisional Patent Application No. 62/773 555 (2018). “Systems and Methods for Building Dynamic Reduced Order

Physical Models”.

Verboven, P., T. Defraeye, A. K. Datta, and B. Nicolai (2020). “Digital twins of food process operations: the next step for

food process models?” In: Current Opinion in Food Science 35, pp. 79–87. doi: 10.1016/j.cofs.2020.03.002.

26

