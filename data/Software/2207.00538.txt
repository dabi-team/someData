2
2
0
2

l
u
J

1

]

M
Q
.
o
i
b
-
q
[

1
v
8
3
5
0
0
.
7
0
2
2
:
v
i
X
r
a

OUP Synthetic Biology, 2022, pp. 1–8

doi: DOI HERE
Advance Access Publication Date: Day Month Year
Paper

PAPER

Functional Synthetic Biology

Ibrahim Aldulijan ,1 Jacob Beal
Ga¨el Chambonnier ,5 Nikolaos Delkis ,6 Isaac Guerreiro,7 Martin Holub,8 Paul Ross,9
Vinoo Selvarajah,7 Noah Sprent ,10 Gonzalo Vidal

,2,∗ Sonja Billerbeck,3 Jeﬀ Bouﬀard ,4

and Alejandro Vignoni 12

1Systems Engineering, Stevens Institute of Technology, 1 Castle Point Terrace, Hoboken, 07030, NJ, USA, 2Intelligent Software & Systems,
Raytheon BBN Technologies, 10 Moulton Street, Cambridge, 02138, MA, USA, 3Molecular Microbiology, Groningen Biomolecular Sciences
and Biotechnology Institute, University of Groningen, Nijenborgh 7, 9747 AG, Groningen, The Netherlands, 4Centre for Applied Synthetic
Biology, and Department of Biology, Concordia University, 7141 Sherbrooke Street West, Montr´eal, H4B 1R6, Qu´ebec, Canada,
5Department of Biological Engineering, Massachusetts Institute of Technology, Cambridge, 02139, Massachusetts, USA, 6Plant and
Environmental Biotechnology Laboratory, Department of Biochemistry and Biotechnology, University of Thessaly, Viopolis, Mezourlo,
Larissa, 41500, Greece, 7iGEM Foundation, 45 Prospect Street, Cambridge, 02139, MA, USA, 8Delft University of Technology, Van der
Maasweg 9, 2629 HZ, The Netherlands, 9BioStrat Marketing, 9965 Harbour Lake Circle, Boynton Beach, FL, 33437, USA, 10Department of
Chemical Engineering, Imperial College London, South Kensington Campus, Exhibition Road, SW7 2AZ, UK, Interdisciplinary Computing
and Complex BioSystems (ICOS) research group, School of Computing, Newcastle University, Devonshire Building, Devonshire Terrace,
NE1 7RU, Newcastle Upon Tyne, UK and 12Synthetic Biology and Biosystems Control Lab, Instituto de Automatica e Informatica
Industrial, Universitat Politecnica de Valencia, Camino de Vera s/n, 46022, Valencia, Spain
∗Corresponding author. jakebeal@ieee.org
FOR PUBLISHER ONLY Received on Date Month Year; revised on Date Month Year; accepted on Date Month Year

Abstract

Synthetic biologists have made great progress over the past decade in developing methods for modular assembly of genetic
sequences and in engineering biological systems with a wide variety of functions in various contexts and organisms.
However, current paradigms in the ﬁeld entangle sequence and functionality in a manner that makes abstraction diﬃcult,
reduces engineering ﬂexibility, and impairs predictability and design reuse. Functional Synthetic Biology aims to overcome
these impediments by focusing the design of biological systems on function, rather than on sequence. This reorientation
will decouple the engineering of biological devices from the speciﬁcs of how those devices are put to use, requiring both
conceptual and organizational change, as well as supporting software tooling. Realizing this vision of Functional Synthetic
Biology will allow more ﬂexibility in how devices are used, more opportunity for reuse of devices and data, improvements
in predictability, and reductions in technical risk and cost.

Key words: Synthetic Biology; Engineering; Design; Reproducibility; Collaboration

Introduction

Over the past decade, synthetic biologists have made great
strides in the engineering of biological systems. One vision
that has served as something of a roadmap is the model
enunciated by Endy (11), a model comprising four levels of
increasing abstraction: DNA, Parts, Devices, and Systems.
Consistent with this model, the ﬁeld has developed a plethora
of basic parts such as promoters, terminators, coding sequences,
and functional RNAs, which can be combined into composite
DNA sequences through a variety of assembly methods (e.g.,
(30; 14; 12; 32; 18)) or low-cost nucleic acid synthesis (6). At
higher levels of abstraction, the ﬁeld has produced families of
biological devices with a variety of sensing, communication, or
computational functions (e.g., (5; 16; 23; 13; 33; 8; 28; 17)), as
well as methods for insulating devices from context (e.g., (20;
22; 7)), and for characterizing and predicting their behavior
(e.g., (10; 27; 3; 9; 23; 31; 8; 28; 17; 2; 1; 25)).

Despite this progress, signiﬁcant challenges remain in the
practice of synthetic biology at a systems level. Deﬁnitions
for parts and devices are typically unavailable, incomplete, or
inconsistent. Likewise, little information is generally provided
regarding interfaces, functionality, or host context, and such
information is rarely available in a tool-friendly format. This
leads to signiﬁcant diﬃculty in searching for appropriate parts
or devices to use,
in adapting parts and devices from their
original context for use within a new project, and in predicting
the behavior of even the most basic systems from information
available about the components used to create them. These
diﬃculties in turn lead to signiﬁcant time requirements and
technical risk to achieve even modest engineering goals.

Under these conditions, engineering success can certainly
be achieved, as illustrated by the many billions of dollars of
industrial impact from synthetic biology, but it is slow and
costly to do so. On the other hand, if engineering could be
made simple and predictable, even just for systems comprising

© The Author 2022. Published by Oxford University Press. All rights reserved. For permissions, please e-mail:
journals.permissions@oup.com

1

 
 
 
 
 
 
2

Aldulijan et al.

Fig. 1. Abstraction layers in a function-centric view: design focuses on biological functions, which are abstracted to produce devices by adding a
description of an interface, predicted range of behavior, and operational context. Devices may then be combined to produce a biological system, whose
function in turn may be abstracted to create a new device at a higher level of abstraction. Devices may have many diﬀerent options for how they can be
implemented with parts, where parts are sequences with a deﬁned interface for combining them to build composite sequences, which also may in turn
be abstracted into higher-level parts.

small numbers of devices, it would radically lower cost, reduce
barriers to access,
increase democratization, and unleash a
wave of innovative applications of synthetic biology by small
organizations tackling local problems.

We contend that the primary barrier to achieving this vision
is no longer biological, given the myriad advances that have
been achieved. Rather, we argue that the problem is one of
knowledge synthesis and organization: given the complexity of
biological systems, no practitioner can be expected to even
be aware of all of the relevant parts, methods, and models,
let alone have the detailed expertise in all of them to use
and combine them eﬀectively in practice. How then can the
advances and expertise dispersed across the synthetic biology
community be marshaled in order to enable practitioners to
eﬀectively utilize them in their engineering projects?

We propose that in order to meet this challenge, synthetic
biology must be reoriented from its current sequence-centric
approach to instead center on function. Speciﬁcally,
a
Functional Synthetic Biology approach focuses on:

• descriptions of behavior over descriptions of structure,
• predictability and ﬂexibility over optimization of function,

and
risk reduction over novelty.

•

A focus on behavior means a biological component’s structure
(i.e., genetic sequence) should be able to be changed and
improved without damaging the functionality of a system that
includes it. A focus on predictability means identifying classes
of changes that are unlikely to damage functionality, and a
focus on ﬂexibility means valuing the breadth of such classes of
changes when developing biological components. A focus on risk
reduction means recognizing that there are many failure modes
that can impair the functionality of a biological system, and
that there is value in capturing knowledge about failure modes
(and how to avoid them) in the form of automation tools and
machine-readable component speciﬁcations.

Together, these approaches will allow the community of
synthetic biologists to more eﬀectively share successes and
avoid failures. Below, we will expand on each of these three
key goals—describing behavior, predictability and ﬂexibility,
and risk reduction—and lay out a roadmap for achieving these
goals over the course of the coming decade.

Function-Centric Design Descriptions

Current practices and representations in synthetic biology are
mainly sequence-centric, meaning that the ﬁrst-class objects
of a design are sequences—typically DNA, though sometimes
Information about function is then
RNA or amino acids.
annotated as features or metadata used to describe the
sequence. Many design representations (e.g., FASTA, GenBank,
GFF), reinforce this notion by providing no way of expressing
functional information without reference to a fully-speciﬁed
sequence.

In practice, however, synthetic biologists tend to think
about designs more in terms of function. Consider, for example,
green ﬂuorescent protein (GFP) as a reporter of transcriptional
activity (left half of Figure 1). A typical user of GFP does not
think about the actual sequences and would be unlikely even
to recognize either the nucleic acid or amino acid sequences for
GFP if they saw them. Instead they are likely to think about a
functional relationship between a coding sequence (CDS) that
produces a GFP protein, which in turn will ﬂuoresce with a
predictable excitation and emission behavior. This is a fully
coherent notion of biological function, independent of sequence,
and is the typical subject of discussions and diagrams regarding
design.

Also associated with the notion of function is a concept of
an interface to that function (e.g., embedding the GFP in a
transcriptional unit whose activity is to be reported) and of the
type of environments where the function is expected to behave
as predicted (e.g., aerobic environments with relatively neutral
pH across a broad range of cell types). For Functional Synthetic

atgcgtaaaggagaa...SequencePartDeviceSystemGreen Fluorescence ReporterGFPCompositeFunctionGFPSense XGreendefine interfacedefine interfaceselectimplementationbuilddesignwavelengthfluorescenceEx.Em.CDS5’cut3’cutDesignBuilddefinesat higher leveldefinesat higher levelFunctional Synthetic Biology

3

Fig. 2. Other examples of functional devices: A) an enzyme that catalyzes the transformation of one small molecule chemical into another, B) excision
of a drop-out sequence using Cre recombinase targeting loxP sites, C) constitutive expression of non-coding RNA using a U6 promoter, and D)
CRISPR-based gene editing with constitutive expression of Cas9 and sgRNA.

Biology, then, we will deﬁne a device as a function that has been
associated with a deﬁnition of an interface and a context for its
operation. This information is suﬃcient to combine a device
together with others to implement a biological system (e.g.,
to sense some condition and report it via green ﬂuorescence).
Finally, the function of that system may be itself described and
possibly abstracted into a higher-level device by identifying its
interface and context for operation.

To actually implement a device or system, of course, a
speciﬁc sequence must be identiﬁed. Typically there are many
sequences that may suﬃce to implement any given device. GFP,
for example, at the time of this writing has 160 diﬀerent amino
acid sequences on FPbase (19). Reverse translation of any of
these amino acid sequences further produces myriad distinct
nucleic acid sequences, all of which encode the same amino
acid sequence. These alternatives are not identical, of course,
and likely some will not be functional at all. Still, a great many
are expected to be suﬃciently good implementations of a Green
Fluorescence Reporter device.

As with devices, we often need to combine sequences
together with other sequences in order to form the composites
that implement systems, whether through assembly protocols
or by directly synthesizing the composite sequence. The right
half of Figure 1 shows this parallel abstraction hierarchy, in
which a part is deﬁned as a sequence that has been associated
with a deﬁnition of a build interface, parts combine to form
composites, and those composites may in turn be abstracted
into higher-level parts.

This approach to deﬁning functional devices can be applied
to any well-described biological function: Figure 2 shows other
examples of functional devices, some of which would necessarily
need to be implemented using multiple parts.

Indeed, this separated hierarchy is de facto what is already
in informal use throughout much of the community. From
whiteboards to journal articles, synthetic biologists typically
communicate in terms of
function. Sequences, meanwhile,
are often selected arbitrarily or inherited from prior projects
via a shared laboratory freezer, and in publications are
typically relegated to supplementary information or even—
problematically—entirely omitted (24). Functional Synthetic
Biology proposes that we recognize this distinction and the
separation between sequence and function, then explore its
consequences in order to improve our representations, tooling,
engineering approaches, and collaboration strategies.

Predictability and Flexibility

The importance of predictability and ﬂexibility as design
requirements is heightened when a device’s functional deﬁnition
is divorced from its realization as a composite of discrete parts.
Implementation of a function, whether at the level of a single

device or a composite system,
is a matter of identifying an
appropriate part or sequence, and typically there are many that
could potentially apply.

With sequence-centric engineering, characterization of a
part has tended to ask questions of the form “How does this part
behave?” Given a functional deﬁnition of a device, however, a
fundamentally diﬀerent question needs to be answered: “Is this
part’s behavior good enough to be an implementation for that
device?” This question cannot be answered without considering
what “good enough” means in terms of the function of a device.
For example, a Green Fluorescence Reporter device turns
transcriptional activity into a strong ﬂuorescent signal. How
strong is strong enough? The answer is determined by the signal
strength required to discriminate various levels of expression
from background with a given class of instrument (e.g., plate
reader or ﬂow cytometer), which in turn determines the
ﬂexibility of the speciﬁcations for the device instantiation,
i.e., what types and degrees of imperfections can be tolerated.
Device context must also be recorded in the speciﬁcation, as any
GFP coding sequence will fail to produce strong ﬂuorescence if
it is placed in the wrong operational context (e.g., in anaerobic
conditions, with an incompatible 5’ UTR, or in an incompatible
host). Useful device speciﬁcations thus require at least some
predictions about device behavior.

There is an inherent

tension and interplay between
predictability and ﬂexibility. Any device can be made
impossible to realize by making its speciﬁcation require too
much precision and/or too great an operational range, e.g.,
looking for a Green Fluorescence Reporter that always produces
exactly the same number of molecules in wildly diﬀerent cell
types. Likewise, a device can be rendered inoperable if the
constraints placed on values are too lax (e.g., accepting a red
ﬂuorescent protein as a legitimate implementation of a Green
Fluorescence Reporter) or if the operational range applied is
too tightly constrained (e.g., predicting that the device will
work only in the exact construct where it was characterized).
Success in designing and building engineered systems depends
on ﬁnding a middle ground where practitioners are readily
able both to ﬁnd devices and parts to realize a system and
also to predict the outcome that system will generate with a
satisfactory degree of reliability and accuracy.

There is likewise a tension between these goals and the desire
to obtain the best performance from a device. For example, in
selecting a part to realize a Green Fluorescence Reporter device,
it may be desirable to select a less bright GFP variant that is
better understood (thus more predictable), known to operate in
a wider range of organisms, or available in a preferred assembly
format. Ultimately, this is a matter of trust and focus: the
more that a practitioner can trust the predictability of the less
interesting parts of their system (e.g., the Green Fluorescence
Reporter), the more that they can focus on their primary goals

Cas9sgRNAgenomictargetDrop-outCreloxPloxPncRNAU6A)B)C)D)enzyme4

Aldulijan et al.

Fig. 3. Decoupling function and sequence enables the development of a collaborative ecosystem for distributing, using, and improving biological devices.
In this vision, (1) an expert curates a device and a set of parts that can implement the device, (2) then publishes these in a collection where they can
be discovered by other synthetic biologists, (3) who put the device to use in various contexts. Those practitioners may (4) contribute back “patches”
to improve the device, e.g., improved characterization or context tolerance information, (5) which are then reviewed by either the original expert or
others helping to maintain the collection. The experts may also (6) improve the collection in other ways, e.g., by improving the design of the parts that
implement the device. All of these improvements are then (7) made available when the collection is republished as a new version, and (8) the device
users receive the beneﬁts of these improvements by updating to the newest version.

(e.g., improvement of a novel metabolite sensor whose activity
is being reported).

engineering ﬁelds,

Navigating the relationship between ﬂexibility, predictability,
function is in general a challenging
and optimization of
and unresolved problem in all
and
particularly so for biology. Nevertheless, there are a number
of bioengineering tools, such as GFP, that are in common use
precisely because they are reasonably eﬀective at producing
reasonably predictable behavior across a fairly ﬂexible range of
applications and operating conditions. Complementarily, there
are operating conditions that are known to be unworkable,
such as using GFP in an anaerobic environment. Practitioners
who have applied these tools have acquired a great deal of
pragmatic knowledge about their range of ﬂexibility and the
conditions under which their behavior can be predicted. Some
of this accumulated knowledge has found its way into scientiﬁc
publications, but much of it is still communicated only through
informal channels and by word of mouth.

Functional Synthetic Biology proposes that we should begin
capturing such knowledge in device speciﬁcations. Prior work
on predictive modeling (e.g., (27; 9; 23)) and reproducibility
(e.g., (2; 1; 25)) can provide initial
information for some
common devices. Similar information can be captured for
other devices by collecting it from experts and the literature
or by conducting similar studies. Such knowledge can then
be applied, if desired, in optimization processes, particularly
multi-objective optimization that can assign value to ﬂexibility
(e.g., (4)). Flexibility and predictability of devices may also
be improved by applying methods for insulating devices from
context (e.g., (20; 22; 7)).

In sum, the focus on the functionality of a device rather
than the sequence of a part reinforces the need for better

documentation that can usefully describe the behavior, context,
and constraints of a genetic object in the same way that
other engineering disciplines seek to describe the speciﬁcations
of a component. It also drives a need for characterization
focused on improving the understanding of composability,
ﬂexibility, predictability, and robustness. Explicitly studying
and recording such information in a tool-friendly manner will
allow the information to be shared and redistributed more
broadly, and will allow practitioners to more readily beneﬁt
from knowledge and advances produced by others in the ﬁeld.

Collaborative Reduction of Technical Risk

Decoupling functional speciﬁcations and part sequences also
allows new approaches to collaboration and information sharing
that can reduce the risk of failure in engineering synthetic
biology systems. Here the key idea is that changes in parts
do not necessarily entail changes in devices or vice versa.

When a part is improved, the new version that results may
still conform to the same device speciﬁcations that the old
version satisﬁed, and thus be able to be substituted as an
implementation for that device. For example, a GFP part might
be codon optimized to produce the protein more eﬃciently,
or have a restriction site eliminated to make it compatible
with a wider range of assembly methods. If the new version of
the part still satisﬁes the Green Fluorescence Reporter device
speciﬁcation, then it can be safely predicted that systems
using the old version can be upgraded to use the new version.
Likewise, a device may be improved with models that better
predict its interactions with other devices, or with better
documentation of its expected operational range, while having
no impact on the sequence of parts that implement the device.

atgcgtaacttcg...FluorescentReportersatgcgtaaaggag...1. Curate2. Publish3. Use4. Contribute5. Review6. Improve7. Republish8. UpdateMoCloS. cerevisiaeBioBrickE. coliGFPE. coliGFPS. cerevisiaeGFPUser contributions from 4.This decoupling oﬀers a new means of capturing expert
knowledge, in the form of curated collections of devices and
the recommended parts to implement them. For example, a
typical synthetic biologist should never need to consider the
160 diﬀerent variations of GFP in FPbase, let alone other green
proteins like ZsGreen or mNeonGreen. Instead, they should
be able to determine their intended operating range (e.g., E.
coli DH5α in M9 media at 30 ◦C to 37 ◦C), select a Green
Fluorescence Reporter device that operates in that range, and
then implement it with any of the parts that are currently
recommended by experts as a good implementation for that
device.

If better parts become available or a problem is detected
with one of the current parts, then all that needs to be
changed is the recommendation. As long as the functional
characteristics of the newly recommended part can be assessed
to remain within the range of predictability that has been
established for the Green Fluorescence Reporter device, any
system using the device should be able to be safely updated to
use the new part. Indeed, such an upgrade recommendation can
already be found in the scientiﬁc literature for red ﬂuorescence,
when the developers of mCherry suggested phasing out
its predecessor, mRFP1, given mCherry’s improved “higher
extinction coeﬃcient . . . , tolerance of N-terminal fusions and
photostability.” (29)

Assessing the potential impact from a change to a part or
device, however, is often not clear-cut or straightforward. If a
model is not suﬃciently accurate, there is a risk that changes
assessed as safe will
instead produce unwanted side-eﬀects
or even result in a system-wide degradation. This risk from
adopting a recommendation, however, must be balanced against
the risk and costs associated with ignoring a recommendation
from experts who are likely to be more familiar with the
specialized matter at hand and better able to sort through
the myriad possible implementations of the device. Ultimately,
then, this is a question of building trust around changes to
complex systems with implications that are diﬃcult to predict.
The software engineering community has faced a very similar
problem of managing technical risk and building trust around
changes with diﬃcult-to-predict systems implications. That
community has addressed its analogous challenge with a now-
mature ecosystem of tools and collaborative processes (often
collected under the name “agile software development”) for
managing the development of complex systems.

Foundational to these processes are distributed version
control systems (e.g., git) that aﬀord communities of experts
a convenient way to organize, share, and maintain packages
of information. These are already used in the bioinformatic
community to manage knowledge collections such as the
Systems Biology Ontology (SBO), Sequence Ontology (SO),
and Gene Ontology (GO).

Functional Synthetic Biology can take advantage of
these same mechanisms to curate collections of devices,
collaboratively maintain them, and reduce technical risk related
to updating these collections. Figure 3 illustrates the type of
interactions that can be enabled. In this vision, an expert
curates a device such as a Green Fluorescence Reporter, along
with options for implementing the device using one of several
parts containing a coding sequence for GFP. This device is
aggregated with others into a ﬂuorescent reporters collection,
which can be published as a package in a catalog where it can
be shared with other synthetic biologists.

In the course of applying the device in various contexts,
synthetic biologists will undoubtedly identify ways to improve

Functional Synthetic Biology

5

the collection. Those improvements might include expanding
or sharpening characterization, augmenting context tolerance
information, clarifying documentation, or enhancing the design
of the parts that implement the device.

Distributed version control can make it easy for users to
contribute their improvements back as suggested changes to
the collection. Agile software tooling can support the curation
of such contributions, making it simple to the maintainers of a
collection to review and discuss a contribution, request changes
where needed, and apply automation-assisted validation checks
for quality control. Once incorporated, improvements can be
taken up in a new version of the collection that is made available
to the community when the collection is republished. Users can
then take advantage of the beneﬁts these curated improvements
provide simply by updating their copy of the collection to the
latest version.

When implemented well, the transparency and checking in
such processes can help build trust within a community of
users and maintainers. The mechanisms of distributed version
control also help to sustain an open marketplace for competition
between packages of information and their attendant processes
and maintainers. Just as in the software world, Functional
Synthetic Biology packages will compete not just on the basis
of technical eﬃcacy, but also their trustworthiness, reliability,
ease of use, and responsiveness to user needs.

A Roadmap to Functional Synthetic Biology

In this section, we propose a multi-year roadmap for realizing
the vision for Functional Synthetic Biology set out above. This
roadmap foregrounds the vision’s most consequential aspects
and speciﬁes the timeframes within which we predict that these
aspects can reasonably be achieved (Figure 4).

Some aspects of the vision that the roadmap accounts for
are well-deﬁned and can be achieved with technologies and
techniques that are available today. They simply need to be
adapted and applied. For example, an integrated representation
of the part and device hierarchies from Figure 1 can already
be implemented using the SBOL 2 (26) or SBOL 3 (21)
standards. Alternatively, devices could also be represented
with a modeling language such as SBML (15), then associated
with parts represented in GenBank or GFF. In either case, a
modern version control system such as git can be employed
to manage and disseminate the genetic design ﬁles generated.
Another advantage of such a version control system is that
it supports mature agile software workﬂows (e.g., trunk-based
development) and tooling (e.g., continuous integration) that
foster collaboration and enable quality control automation.

terminators,

Short term targets for development include basic parts
such as constitutive promoters,
sensors, and
reporters, as well as regulatory insulation (e.g., (20; 22; 7))
and families of transcriptional computing devices (e.g., (5;
16; 23; 13; 8)). Developing a collection of design packages
covering these elements, along with function-centric design and
build tools, should enable routine engineering of 2-3 device
sense/compute/actuate circuits in model microbes and cell-
free systems. The core packages that result from these initial
engineering initiatives can be made available through a central
repository serving as a rendezvous point for early adopters to
discover and make use of these packages.

As this Functional Synthetic Biology ecosystem matures
and expands, practitioners will undoubtedly enhance the
performance, ﬂexibility, and reliability of the parts, will add

6

Aldulijan et al.

Fig. 4. Suggested roadmap of goals, from immediate to long-term, for achieving Functional Synthetic Biology.

new packages focused on their own areas of interest, and
will expand the functionality of existing packages by making
incremental upgrades to them. The complexity of systems that
levels of
can be routinely engineered will
automation.

increase, as will

The ability to support more eﬀective sharing of data will
then facilitate better understanding and characterization of
operational context, expansion into non-model microbes, and
the creation of more context-agnostic devices that can operate
eﬀectively in multiple types of organisms. Over the longer term,
we anticipate a widespread adoption of Functional Synthetic
Biology, driven by the standardization of complex biological
system engineering,
the development of extremely ﬂexible
devices, and extension even to eﬀective operation in vivo in
complex multicellular organisms.

Following this roadmap will also require dealing with
non-technical challenges regarding incentives. For example,
an initial investment in time and resources is needed from
experienced practitioners before the community can beneﬁt,
and the people investing will not necessarily be the ones
who most beneﬁt. Given the struggle to even obtain DNA
sequence information from scientiﬁc publications (24), we can
expect that current academic incentives will not be suﬃcient on
their own to motivate widespread investment in the curation
and publication of functional information. There will also be
questions around governance and degree of centralization for
the evolving collection of functional packages. Finally, there
is an important collective action problem to be solved if the
community wishes resources to be available under free and
open licenses, as opposed to needing to pay for access to this
information.

Conclusions

Many practitioners of synthetic biology recognize the impact
that standardizing systems-level engineering could have on the
development of biological systems and are eager to exploit the
potential it has to democratize access to complex biotechnology
and eﬀect transformative change in a broad range of sectors and
application areas such as healthcare, manufacturing, energy,
agriculture, and environmental sustainability.

To date, however,

realizing that potential has proven
elusive,
in large part because the information required
for eﬀectively engineering with biological parts and devices
has been inaccessible,
incomplete. The
Functional Synthetic Biology framework presented here lays
the groundwork for a shift in orientation from the focus on

insuﬃcient or

sequences that deﬁnes the ﬁeld today to a focus on functionality
that will transform the way synthetic biology is practiced in the
future. This represents a critical step forward along the path to
achieving systems level engineering, with improvements in data
sharing leading to increases in ﬂexibility and predictability,
which in turn open up opportunities for enhanced collaboration
and dissemination. It is our hope that this paper will encourage
others to build on the framework presented, to join us on our
journey to transform the practice of synthetic biology using
the roadmap we have laid out as a guide, and to help mobilize
the resources that will be required to bring that journey to a
successful conclusion.

Competing interests

No competing interest is declared.

Material Availability Statement

Not applicable.

Data Availability Statement

Not applicable.

Author contributions statement

All authors contributed to conceptualization, writing the
original draft, and review and editing.

Funding

This work was supported in part by the following funding
sources: J.Be. was supported by Air Force Research Laboratory
(AFRL) and DARPA contract FA8750-17-C-0184.
J.Bo.
was supported by a Horizon Postdoctoral Fellowship from
Concordia University. M.H. was supported by funding from
the ERC Advanced Grant LoopingDNA (no. 883684). N.S.
was supported by funding from the BBSRC under award
BB/M011178/1. G.V. was supported by a scholarship from the
School of Computing, Newcastle University. A.V. was funded
by Grant MINECO/AEI, EU DPI2017-82896-C2-1-R and
MCIN/AEI/10.13039/501100011033 grant number PID2020-
117271RB-C21.

This document does not contain technology or technical data
controlled under either the U.S. International Traﬃc in Arms

Immediate (1 -2 years)Short Term (2 -4 years)Medium Term (3 -5 years)Long Term (5 -10 years)Predictability& FlexibilitySoftwareSupportAdoptionDevice representation in SBOL3Version control of biological designsAgile biological design workflowsAutomated part & device quality controlGenetic design packagesDevice insulation from 5’/3’ contextRoutine creation of 2-3 device systemsOperation in model microbes & cell-freeCentral package repositoryCore packages used by early adoptersFunction-centric design and build toolsRoutine creation of 4-6 device systemsAutomation of part selectionCharacterization of context & usabilityOperation in non-model microbesDevices operate in multiple organismsBroad adoption of Functional SynBioRoutine creation of 10+device systemsBroad context devicesOperation in multicellular organismsCommunities share data via packagesScope ofSystemsRegulations or the U.S. Export Administration Regulations.
Views, opinions, and/or ﬁndings expressed are those of the
author(s) and should not be interpreted as representing the
oﬃcial views or policies of the Department of Defense or the
U.S. Government.

References

1. Jacob Beal, Natalie G Farny, Traci Haddock-Angelli,
Vinoo Selvarajah, Geoﬀ S Baldwin, Russell Buckley-Taylor,
Markus Gershater, Daisuke Kiga, John Marken, Vishal
Sanchania, et al. Robust estimation of bacterial cell count
from optical density. Communications biology, 3(1):1–29,
2020.

2. Jacob Beal, Traci Haddock-Angelli, Geoﬀ Baldwin, Markus
Gershater, Ari Dwijayanti, Marko Storch, Kim De Mora,
Meagan Lizarazo, Randy Rettberg, and with the iGEM
Interlab Study Contributors. Quantiﬁcation of bacterial
PloS one,
ﬂuorescence using independent calibrants.
13(6):e0199432, 2018.

3. Jacob Beal, Tyler E Wagner, Tasuku Kitada, Odisse
Azizgolshani, Jordan Moberg Parker, Douglas Densmore,
and Ron Weiss.
Model-driven engineering of gene
expression from rna replicons. ACS synthetic biology,
4(1):48–56, 2015.

4. Yadira Boada, Gilberto Reynoso-Meza, Jes´us Pic´o, and
Alejandro Vignoni. Multi-objective optimization framework
to obtain model-based guidelines for tuning biological
synthetic devices: an adaptive network case. BMC systems
biology, 10(1):1–19, 2016.

5. Jerome Bonnet, Pakpoom Subsoontorn, and Drew Endy.
Rewritable digital data storage in live cells via engineered
control of recombination directionality. Proceedings of the
National Academy of Sciences, 109(23):8884–8889, Jun
2012.

6. Robert H. Carlson. Biology Is Technology : The Promise,
Peril, and New Business of Engineering Life. Harvard
University Press, 2011.

7. Swati B Carr, Jacob Beal, and Douglas M Densmore.
Reducing dna context dependence in bacterial promoters.
PloS one, 12(4):e0176013, 2017.

8. Ye Chen, Shuyi Zhang, Eric M Young, Timothy S Jones,
Douglas Densmore, and Christopher A Voigt. Genetic
circuit design automation for yeast. Nature Microbiology,
5(11):1349–1360, 2020.

9. Noah Davidsohn, Jacob Beal, Samira Kiani, Aaron Adler,
Fusun Yaman, Yinqing Li, Zhen Xie, and Ron Weiss.
Accurate predictions of genetic circuit behavior from part
characterization and modular composition. ACS synthetic
biology, 4(6):673–681, 2015.

10. Domitilla Del Vecchio, Alexander J Ninfa, and Eduardo D
Sontag. Modular cell biology: retroactivity and insulation.
Molecular systems biology, 4(1):161, 2008.

11. Drew Endy. Foundations for engineering biology. Nature,

438(7067):449–453, November 2005.

12. Carola Engler, Romy Kandzia, and Sylvestre Marillonnet.
A one pot, one step, precision cloning method with high
throughput capability. PloS one, 3(11):e3647, jan 2008.
13. Miles W Gander, Justin D Vrana, William E Voje, James M
Carothers, and Eric Klavins. Digital
logic circuits in
yeast with crispr-dcas9 nor gates. Nature communications,
8(1):1–11, 2017.

Functional Synthetic Biology

7

14. Daniel G Gibson, Lei Young, Ray-Yuan Chuang, J Craig
Venter, Clyde A Hutchison, and Hamilton O Smith.
Enzymatic assembly of dna molecules up to several hundred
kilobases. Nature methods, 6(5):343–345, 2009.

15. M. Hucka, A. Finney, H. M. Sauro, H. Bolouri, J. C.
Doyle, H. Kitano, A. P. Arkin, B. J. Bornstein, D. Bray,
A. Cornish-Bowden, A. A. Cuellar, S. Dronov, E. D. Gilles,
M. Ginkel, V. Gor, I. I. Goryanin, W. J. Hedley, T. C.
Hodgman, J.-H. Hofmeyr, P. J. Hunter, N. S. Juty, J. L.
Kasberger, A. Kremling, U. Kummer, N. Le Novere, L. M.
Loew, D. Lucio, P. Mendes, E. Minch, E. D. Mjolsness,
Y. Nakayama, M. R. Nelson, P. F. Nielsen, T. Sakurada,
J. C. Schaﬀ, B. E. Shapiro, T. S. Shimizu, H. D. Spence,
J. Stelling, K. Takahashi, M. Tomita, J. Wagner, J. Wang,
and the rest of the SBML Forum. The systems biology
markup language (SBML): a medium for representation and
exchange of biochemical network models. Bioinformatics,
19(4):524–531, mar 2003.

16. Samira Kiani, Jacob Beal, Mohammad R Ebrahimkhani,
Jin Huh, Richard N Hall, Zhen Xie, Yinqing Li, and Ron
Weiss. Crispr transcriptional repression devices and layered
circuits in mammalian cells. Nature methods, 11(7):723–
726, 2014.

17. Katherine A. Kiwimagi, Justin H. Letendre, Benjamin H.
Weinberg,
Junmin Wang, Mingzhe Chen, Leandro
Watanabe, Chris J. Myers, Jacob Beal, Wilson W.
Wong, and Ron Weiss. Quantitative characterization of
recombinases-based digitizer circuits enables predictable
ampliﬁcation of biological signals.
Communications
Biology, 2021.

18. Stefan de Kok, Leslie H Stanton, Todd Slaby, Maxime
Durot, Victor F Holmes, Kedar G Patel, Darren Platt,
Elaine B Shapland, Zach Serber, Jed Dean, et al. Rapid
and reliable dna assembly via ligase cycling reaction. ACS
synthetic biology, 3(2):97–106, 2014.

19. Talley J Lambert.

a community-editable
FPbase:
ﬂuorescent protein database. Nature methods, 16(4):277–
278, 2019.

synthetic circuits

20. Chunbo Lou, Brynne Stanton, Ying-Ja Chen, Brian
Ribozyme-based
from genetic

Munsky, and Christopher A Voigt.
insulator parts buﬀer
context. Nature biotechnology, 30(11):1137–1142, 2012.
21. James Alastair McLaughlin, Jacob Beal, G¨oksel Mısırlı,
Raik Gr¨unberg, Bryan A Bartley, James Scott-Brown,
Prashant Vaidyanathan, Pedro Fontanarrosa, Ernst
Oberortner, Anil Wipat, et al. The synthetic biology
open language (sbol) version 3: simpliﬁed data exchange
for bioengineering.
Frontiers in Bioengineering and
Biotechnology, page 1009, 2020.

22. Vivek K Mutalik, Joao C Guimaraes, Guillaume Cambray,
Colin Lam, Marc Juul Christoﬀersen, Quynh-Anh Mai,
Andrew B Tran, Morgan Paull, Jay D Keasling, Adam P
Arkin, et al. Precise and reliable gene expression via
standard transcription and translation initiation elements.
Nature methods, 10(4):354–360, 2013.

23. Alec AK Nielsen, Bryan S Der, Jonghyeon Shin, Prashant
Vaidyanathan, Vanya Paralanov, Elizabeth A Strychalski,
David Ross, Douglas Densmore, and Christopher A Voigt.
Science, 352(6281),
Genetic circuit design automation.
2016.

24. Jean Peccoud, J Christopher Anderson, Deepak Chandran,
Douglas Densmore, Michal Galdzicki, Matthew W Lux,
Cesar A Rodriguez, Guy-Bart Stan, and Herbert M Sauro.
Essential information for synthetic dna sequences. Nature

8

Aldulijan et al.

biotechnology, 29(1):22–22, 2011.

25. P Scott Pine, Sarah A Munro, Jerod R Parsons, Jennifer
McDaniel, Anne Bergstrom Lucas, Jean Lozach, Timothy G
Myers, Qin Su, Sarah M Jacobs-Helber, and Marc Salit.
Evaluation of the external rna controls consortium (ercc)
reference material using a modiﬁed latin square design.
BMC biotechnology, 16(1):1–15, 2016.

26. Nicholas Roehner, Jacob Beal, Kevin Clancy, Bryan
Bartley, Goksel Misirli, Raik Gr¨unberg, Ernst Oberortner,
Matthew Pocock, Michael Bissell, Curtis Madsen, et al.
Sharing structure and function in biological design with
SBOL 2.0. ACS synthetic biology, 5(6):498–506, 2016.
27. Howard M Salis, Ethan A Mirsky, and Christopher A
Voigt. Automated design of synthetic ribosome binding
sites to control protein expression. Nature Biotechnology,
27(10):946–950, 2009.

28. John T Sexton and Jeﬀrey J Tabor. Multiplexing cell-cell
communication. Molecular systems biology, 16(7):e9618,
2020.

29. Nathan C Shaner, Robert E Campbell, Paul A Steinbach,
Ben NG Giepmans, Amy E Palmer, and Roger Y Tsien.
Improved monomeric red, orange and yellow ﬂuorescent

proteins derived from discosoma sp. red ﬂuorescent protein.
Nature biotechnology, 22(12):1567–1572, 2004.

30. Reshma Shetty, Meagan Lizarazo, Randy Rettberg, and
Thomas F Knight. Assembly of biobrick standard biological
parts using three antibiotic assembly.
In Methods in
enzymology, volume 498, pages 311–326. Elsevier, 2011.
31. Junmin Wang, Samuel A Isaacson, and Calin Belta.
Modeling genetic circuit behavior in transiently transfected
mammalian cells. ACS synthetic biology, 8(4):697–707,
2019.

32. Ernst Weber, Carola Engler, Ramona Gruetzner, Stefan
Werner, and Sylvestre Marillonnet. A modular cloning
system for standardized assembly of multigene constructs.
PloS one, 6(2):e16765, 2011.

33. Benjamin H Weinberg, Jang Hwan Cho, Yash Agarwal,
NT Hang Pham, Leidy D Caraballo, Maciej Walkosz,
Charina Ortega, Micaela Trexler, Nathan Tague, Billy
Law, et al. High-performance chemical-and light-inducible
recombinases in mammalian cells and mice.
Nature
communications, 10(1):1–10, 2019.

